; ModuleID = '../../third_party/blink/common/page_state/page_state_serialization.cc'
source_filename = "../../third_party/blink/common/page_state/page_state_serialization.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::ExplodedHttpBody" = type <{ %"class.absl::optional", %class.scoped_refptr, i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.scoped_refptr = type { %"class.network::ResourceRequestBody"* }
%"class.network::ResourceRequestBody" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::vector", i64, i8, i8, [6 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.network::DataElement"*, %"class.network::DataElement"*, %"class.std::__1::__compressed_pair.25" }
%"class.network::DataElement" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.11" }
%"union.absl::variant_internal::DestructibleUnionImpl.11" = type { %"union.absl::variant_internal::DestructibleUnionImpl.12" }
%"union.absl::variant_internal::DestructibleUnionImpl.12" = type { %"union.absl::variant_internal::DestructibleUnionImpl.14" }
%"union.absl::variant_internal::DestructibleUnionImpl.14" = type { %"class.network::DataElementFile" }
%"class.network::DataElementFile" = type { %"class.base::FilePath", i64, i64, %"class.base::Time" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string.15" }
%"class.std::__1::basic_string.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.18 }
%union.anon.18 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.network::DataElement"* }
%"struct.blink::ExplodedFrameState" = type { %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.30", %"class.absl::optional", %"class.absl::optional", %"class.std::__1::vector.40", i32, i8, %"class.gfx::PointF", %"class.gfx::Point", i64, i64, double, i32, [4 x i8], %"struct.blink::ExplodedHttpBody", %"class.absl::optional", %"class.gfx::PointF", i64, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.std::__1::vector.47" }
%"class.absl::optional.30" = type { %"class.absl::optional_internal::optional_data.31" }
%"class.absl::optional_internal::optional_data.31" = type { %"class.absl::optional_internal::optional_data_base.32" }
%"class.absl::optional_internal::optional_data_base.32" = type { %"class.absl::optional_internal::optional_data_dtor_base.33" }
%"class.absl::optional_internal::optional_data_dtor_base.33" = type { i8, %union.anon.34 }
%union.anon.34 = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.35" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15", i16, [6 x i8] }>
%"class.absl::optional.35" = type { %"class.absl::optional_internal::optional_data.36" }
%"class.absl::optional_internal::optional_data.36" = type { %"class.absl::optional_internal::optional_data_base.37" }
%"class.absl::optional_internal::optional_data_base.37" = type { %"class.absl::optional_internal::optional_data_dtor_base.38" }
%"class.absl::optional_internal::optional_data_dtor_base.38" = type { i8, %union.anon.39 }
%union.anon.39 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"class.absl::optional"*, %"class.absl::optional"*, %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.absl::optional"* }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::PointF" = type { float, float }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.blink::ExplodedFrameState"* }
%"struct.blink::ExplodedPageState" = type { %"class.std::__1::vector.40", %"struct.blink::ExplodedFrameState" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.66" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::mojom::PageState"* }
%"class.blink::mojom::PageState" = type { %"class.std::__1::vector.40", %"class.mojo::StructPtr.69" }
%"class.mojo::StructPtr.69" = type { %"class.std::__1::unique_ptr.70" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::mojom::FrameState"* }
%"class.blink::mojom::FrameState" = type { %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.std::__1::vector.40", i32, %"class.mojo::StructPtr.73", i64, i64, i32, %"class.mojo::StructPtr.85", %"class.std::__1::vector.127", %"class.absl::optional.134", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional" }
%"class.mojo::StructPtr.73" = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::mojom::ViewState"* }
%"class.blink::mojom::ViewState" = type { %"class.gfx::PointF", %"class.gfx::Point", double, %"class.absl::optional", %"class.absl::optional.77", i64 }
%"class.absl::optional.77" = type { %"class.absl::optional_internal::optional_data.78" }
%"class.absl::optional_internal::optional_data.78" = type { %"class.absl::optional_internal::optional_data_base.79" }
%"class.absl::optional_internal::optional_data_base.79" = type { %"class.absl::optional_internal::optional_data_dtor_base.80" }
%"class.absl::optional_internal::optional_data_dtor_base.80" = type { i8, %union.anon.81 }
%union.anon.81 = type { %"class.gfx::PointF" }
%"class.mojo::StructPtr.85" = type { %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::mojom::HttpBody"* }
%"class.blink::mojom::HttpBody" = type <{ %"class.absl::optional", %"class.mojo::StructPtr.89", i8, [7 x i8] }>
%"class.mojo::StructPtr.89" = type { %"class.std::__1::unique_ptr.90" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::mojom::RequestBody"* }
%"class.blink::mojom::RequestBody" = type <{ %"class.std::__1::vector.93", i64, i8, [7 x i8] }>
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"class.mojo::StructPtr.95"*, %"class.mojo::StructPtr.95"*, %"class.std::__1::__compressed_pair.116" }
%"class.mojo::StructPtr.95" = type { %"class.std::__1::unique_ptr.96" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::mojom::Element"* }
%"class.blink::mojom::Element" = type { i32, %"union.blink::mojom::Element::Union_" }
%"union.blink::mojom::Element::Union_" = type { %"class.std::__1::basic_string.15"* }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.mojo::StructPtr.95"* }
%"class.std::__1::vector.127" = type { %"class.std::__1::__vector_base.128" }
%"class.std::__1::__vector_base.128" = type { %"class.mojo::StructPtr.69"*, %"class.mojo::StructPtr.69"*, %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.mojo::StructPtr.69"* }
%"class.absl::optional.134" = type { %"class.absl::optional_internal::optional_data.135" }
%"class.absl::optional_internal::optional_data.135" = type { %"class.absl::optional_internal::optional_data_base.136" }
%"class.absl::optional_internal::optional_data_base.136" = type { %"class.absl::optional_internal::optional_data_dtor_base.137" }
%"class.absl::optional_internal::optional_data_dtor_base.137" = type { i8, %union.anon.138 }
%union.anon.138 = type { %"class.std::__1::basic_string.15" }
%class.GURL = type { %"class.std::__1::basic_string.15", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.GURL* }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"struct.blink::UniqueNameHelper::Replacement"*, %"struct.blink::UniqueNameHelper::Replacement"*, %"class.std::__1::__compressed_pair.59" }
%"struct.blink::UniqueNameHelper::Replacement" = type { %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.blink::UniqueNameHelper::Replacement"* }
%"class.base::PickleIterator" = type { i8*, i64, i64 }
%"struct.blink::(anonymous namespace)::SerializeObject" = type <{ %"class.base::Pickle", %"class.base::PickleIterator", i32, i8, [3 x i8] }>
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.19 }
%struct.anon.19 = type { i8 }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { i8*, i8*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i8* }
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase.145", %"class.mojo::internal::Buffer", %"class.std::__1::vector.146", %"class.std::__1::vector.154", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase.145" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector.146" = type { %"class.std::__1::__vector_base.147" }
%"class.std::__1::__vector_base.147" = type { %"class.mojo::ScopedHandleBase.148"*, %"class.mojo::ScopedHandleBase.148"*, %"class.std::__1::__compressed_pair.149" }
%"class.mojo::ScopedHandleBase.148" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.mojo::ScopedHandleBase.148"* }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.157" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.156 }
%class.scoped_refptr.156 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.162 }
%class.scoped_refptr.162 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.163", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.166, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.168", [4 x i8] }>
%"class.base::RefCountedThreadSafe.163" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.164 }
%class.scoped_refptr.164 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.165", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.165" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.166 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.167" }>
%"class.base::RefCountedThreadSafe.167" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.168" = type { %"struct.std::__1::__atomic_base.169" }
%"struct.std::__1::__atomic_base.169" = type { %"struct.std::__1::__atomic_base.170" }
%"struct.std::__1::__atomic_base.170" = type { %"struct.std::__1::__cxx_atomic_impl.171" }
%"struct.std::__1::__cxx_atomic_impl.171" = type { %"struct.std::__1::__cxx_atomic_base_impl.172" }
%"struct.std::__1::__cxx_atomic_base_impl.172" = type { i32 }
%"class.blink::mojom::internal::PageState_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.173" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.173" = type { i64 }
%"class.mojo::StructPtr.99" = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::mojom::File"* }
%"class.blink::mojom::File" = type { %"class.std::__1::basic_string", i64, i64, %"class.base::Time" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.15", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.network::DataElementBytes" = type { %"class.std::__1::vector.4" }
%"class.mojo::internal::MessageFragment" = type { %"class.mojo::Message"*, i64 }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.205", [4 x i8] }>
%"class.base::RefCountedThreadSafe.205" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::MessageFragment.206" = type { %"class.mojo::Message"*, i64 }
%"class.mojo::internal::ContainerValidateParams" = type { i32, i8, %"class.mojo::internal::ContainerValidateParams"*, %"class.mojo::internal::ContainerValidateParams"*, i1 (i32, %"class.mojo::internal::ValidationContext"*)* }
%"class.mojo::internal::MessageFragment.207" = type { %"class.mojo::Message"*, i64 }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.blink::mojom::internal::FrameState_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.208", %"struct.mojo::internal::Pointer.208", %"struct.mojo::internal::Pointer.208", %"struct.mojo::internal::Pointer.208", %"struct.mojo::internal::Pointer", i32, i32, %"struct.mojo::internal::Pointer.209", i64, i64, %"struct.mojo::internal::Pointer.210", %"struct.mojo::internal::Pointer.211", %"struct.mojo::internal::Pointer.212", %"struct.mojo::internal::Pointer.208", %"struct.mojo::internal::Pointer.208", %"struct.mojo::internal::Pointer.208" }
%"struct.mojo::internal::Pointer.209" = type { i64 }
%"struct.mojo::internal::Pointer.210" = type { i64 }
%"struct.mojo::internal::Pointer.211" = type { i64 }
%"struct.mojo::internal::Pointer.212" = type { i64 }
%"struct.mojo::internal::Pointer.208" = type { i64 }
%"class.mojo::internal::MessageFragment.213" = type { %"class.mojo::Message"*, i64 }
%"class.mojo_base::mojom::internal::String16_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.214" }
%"struct.mojo::internal::Pointer.214" = type { i64 }
%"class.mojo::internal::Array_Data.216" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.mojo::internal::MessageFragment.218" = type { %"class.mojo::Message"*, i64 }
%"class.mojo::internal::MessageFragment.221" = type { %"class.mojo::Message"*, i64 }
%"class.mojo::internal::MessageFragment.225" = type { %"class.mojo::Message"*, i64 }
%"class.blink::mojom::internal::ViewState_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.219", %"struct.mojo::internal::Pointer.220", double, %"struct.mojo::internal::Pointer.208", %"struct.mojo::internal::Pointer.219", i64 }
%"struct.mojo::internal::Pointer.220" = type { i64 }
%"struct.mojo::internal::Pointer.219" = type { i64 }
%"class.blink::mojom::internal::HttpBody_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.208", %"struct.mojo::internal::Pointer.222", i8, [7 x i8] }
%"struct.mojo::internal::Pointer.222" = type { i64 }
%"class.mojo::internal::Array_Data.224" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.mojo::internal::Array_Data.226" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.gfx::mojom::internal::PointF_Data" = type { %"struct.mojo::internal::StructHeader", float, float }
%"class.gfx::mojom::internal::Point_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32 }
%"class.mojo::internal::MessageFragment.229" = type { %"class.mojo::Message"*, i64 }
%"class.blink::mojom::internal::RequestBody_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.230", i64, i8, [7 x i8] }
%"struct.mojo::internal::Pointer.230" = type { i64 }
%"class.mojo::internal::MessageFragment.234" = type { %"class.mojo::Message"*, i64 }
%"class.blink::mojom::internal::Element_Data" = type { i32, i32, %"union.blink::mojom::internal::Element_Data::Union_" }
%"union.blink::mojom::internal::Element_Data::Union_" = type { %"struct.mojo::internal::Pointer.212" }
%"class.mojo::internal::Array_Data.232" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.mojo::internal::MessageFragment.240" = type { %"class.mojo::Message"*, i64 }
%"class.mojo::internal::MessageFragment.242" = type { %"class.mojo::Message"*, i64 }
%"class.mojo::internal::Array_Data.239" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.blink::mojom::internal::File_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.208", i64, i64, %"struct.mojo::internal::Pointer.241" }
%"struct.mojo::internal::Pointer.241" = type { i64 }
%"class.mojo::StructPtr.106" = type { %"class.std::__1::unique_ptr.107" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::mojom::DEPRECATED_FileSystemFile"* }
%"class.blink::mojom::DEPRECATED_FileSystemFile" = type { %class.GURL, i64, i64, %"class.base::Time" }
%"class.blink::mojom::internal::DEPRECATED_FileSystemFile_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.243", i64, i64, %"struct.mojo::internal::Pointer.241" }
%"struct.mojo::internal::Pointer.243" = type { i64 }
%"class.mojo_base::mojom::internal::Time_Data" = type { %"struct.mojo::internal::StructHeader", i64 }
%"class.url::mojom::internal::Url_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.212" }
%"class.logging::CheckOpResult" = type { i8* }
%"struct.std::__1::vector<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > >, std::__1::allocator<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::_ConstructTransaction" = type { %"class.std::__1::vector.40"*, %"class.absl::optional"*, %"class.absl::optional"* }
%"class.std::__1::allocator.45" = type { i8 }

$_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE5eraseENS_11__wrap_iterIPKS9_EESF_ = comdat any

$_ZN5blink5mojom9PageState11DeserializeIN4mojo9StructPtrIS1_EEEEbPKvmPT_ = comdat any

$_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE22__construct_one_at_endIJRKS9_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE21__push_back_slow_pathIRKS9_EEvOT_ = comdat any

$_ZNSt3__16vectorIN5blink18ExplodedFrameStateENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE24__emplace_back_slow_pathIJRKS9_EEEvDpOT_ = comdat any

$_ZNSt3__16uniqueINS_11__wrap_iterIPN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEEENS_10__equal_toISA_SA_EEEET_SF_SF_T0_ = comdat any

$_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE21__push_back_slow_pathIS9_EEvOT_ = comdat any

$_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKN7network16DataElementBytesEEET_v = comdat any

$_ZNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom7ElementEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10FrameStateEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN4mojo8internal13SerializeImplIN5blink5mojom17PageStateDataViewENSt3__16vectorIhNS5_9allocatorIhEEEENS_9StructPtrINS3_9PageStateEEEEET0_PT1_ = comdat any

$_ZN4mojo8internal10SerializerIN5blink5mojom17PageStateDataViewENS_9StructPtrINS3_9PageStateEEEE9SerializeERS7_RNS0_15MessageFragmentINS3_8internal14PageState_DataEEE = comdat any

$_ZN4mojo8internal9SerializeINS_13ArrayDataViewIN9mojo_base5mojom16String16DataViewEEERKNSt3__16vectorIN4absl8optionalINS7_12basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEEEENSE_ISH_EEEEJRNS0_15MessageFragmentINS0_10Array_DataINS0_7PointerINS4_8internal13String16_DataEEEEEEEPKNS0_23ContainerValidateParamsEELPv0EEEvOT0_DpOT1_ = comdat any

$_ZN4mojo8internal23ContainerValidateParamsD2Ev = comdat any

$_ZN4mojo8internal10SerializerIN9mojo_base5mojom16String16DataViewEKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEE9SerializeERSC_RNS0_15MessageFragmentINS3_8internal13String16_DataEEE = comdat any

$_ZN4mojo8internal10SerializerIN5blink5mojom18FrameStateDataViewEKNS_9StructPtrINS3_10FrameStateEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal15FrameState_DataEEE = comdat any

$_ZN4mojo8internal10SerializerIN5blink5mojom17ViewStateDataViewEKNS_9StructPtrINS3_9ViewStateEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal14ViewState_DataEEE = comdat any

$_ZN4mojo8internal10SerializerIN5blink5mojom16HttpBodyDataViewEKNS_9StructPtrINS3_8HttpBodyEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal13HttpBody_DataEEE = comdat any

$_ZN4mojo8internal10SerializerIN5blink5mojom19RequestBodyDataViewEKNS_9StructPtrINS3_11RequestBodyEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal16RequestBody_DataEEE = comdat any

$_ZN4mojo8internal10SerializerIN5blink5mojom15ElementDataViewEKNS_9StructPtrINS3_7ElementEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal12Element_DataEEEb = comdat any

$_ZN4mojo8internal10SerializerINS_14StringDataViewEKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE9SerializeERSA_RNS0_15MessageFragmentINS0_10Array_DataIcEEEE = comdat any

$_ZN4mojo8internal10SerializerIN5blink5mojom12FileDataViewEKNS_9StructPtrINS3_4FileEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal9File_DataEEE = comdat any

$_ZN4mojo8internal10SerializerIN5blink5mojom33DEPRECATED_FileSystemFileDataViewEKNS_9StructPtrINS3_25DEPRECATED_FileSystemFileEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal30DEPRECATED_FileSystemFile_DataEEE = comdat any

$_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE6assignIPS9_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS9_NS_15iterator_traitsISF_E9referenceEEE5valueEvE4typeESF_SF_ = comdat any

$_ZNSt3__125__construct_range_forwardINS_9allocatorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS1_IDsEEEEEEEEPS9_SB_EEvRT_T0_SE_RT1_ = comdat any

$_ZNSt3__16vectorIN5blink18ExplodedFrameStateENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"v.size() < std::numeric_limits<int>::max() / sizeof(T)\00", align 1
@.str.6 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/common/page_state/page_state_serialization.cc\00", align 1
@.str.7 = private unnamed_addr constant [71 x i8] c"length_in_bytes < static_cast<size_t>(std::numeric_limits<int>::max())\00", align 1

@_ZN5blink16ExplodedHttpBodyC1Ev = hidden unnamed_addr alias void (%"struct.blink::ExplodedHttpBody"*), void (%"struct.blink::ExplodedHttpBody"*)* @_ZN5blink16ExplodedHttpBodyC2Ev
@_ZN5blink16ExplodedHttpBodyD1Ev = hidden unnamed_addr alias void (%"struct.blink::ExplodedHttpBody"*), void (%"struct.blink::ExplodedHttpBody"*)* @_ZN5blink16ExplodedHttpBodyD2Ev
@_ZN5blink18ExplodedFrameStateC1Ev = hidden unnamed_addr alias void (%"struct.blink::ExplodedFrameState"*), void (%"struct.blink::ExplodedFrameState"*)* @_ZN5blink18ExplodedFrameStateC2Ev
@_ZN5blink18ExplodedFrameStateC1ERKS0_ = hidden unnamed_addr alias void (%"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"*), void (%"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"*)* @_ZN5blink18ExplodedFrameStateC2ERKS0_
@_ZN5blink18ExplodedFrameStateD1Ev = hidden unnamed_addr alias void (%"struct.blink::ExplodedFrameState"*), void (%"struct.blink::ExplodedFrameState"*)* @_ZN5blink18ExplodedFrameStateD2Ev
@_ZN5blink17ExplodedPageStateC1Ev = hidden unnamed_addr alias void (%"struct.blink::ExplodedPageState"*), void (%"struct.blink::ExplodedPageState"*)* @_ZN5blink17ExplodedPageStateC2Ev
@_ZN5blink17ExplodedPageStateD1Ev = hidden unnamed_addr alias void (%"struct.blink::ExplodedPageState"*), void (%"struct.blink::ExplodedPageState"*)* @_ZN5blink17ExplodedPageStateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ExplodedHttpBodyC2Ev(%"struct.blink::ExplodedHttpBody"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast %union.anon* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 33, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ExplodedHttpBodyD2Ev(%"struct.blink::ExplodedHttpBody"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %2, align 8
  %4 = icmp eq %"class.network::ResourceRequestBody"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  tail call void @_ZN7network19ResourceRequestBodyD1Ev(%"class.network::ResourceRequestBody"* nonnull %3) #13
  %10 = bitcast %"class.network::ResourceRequestBody"* %3 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %5, %9
  %12 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %15
  %22 = bitcast %"class.std::__1::basic_string"* %16 to i8**
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #14
  br label %24

24:                                               ; preds = %21, %15
  store i8 0, i8* %12, align 8
  br label %25

25:                                               ; preds = %11, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ExplodedFrameStateC2Ev(%"struct.blink::ExplodedFrameState"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 7
  %9 = bitcast %union.anon* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 25, i1 false)
  %10 = bitcast %union.anon* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 25, i1 false)
  %11 = bitcast %union.anon.34* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 81, i1 false)
  %12 = bitcast %union.anon* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 25, i1 false)
  %13 = bitcast %union.anon* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 52, i1 false)
  store i8 1, i8* %8, align 4
  %14 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 8, i32 0
  %15 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 13
  %16 = bitcast float* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 40, i1 false)
  store i32 1, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %union.anon* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 33, i1 false) #13
  %20 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %union.anon* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 41, i1 false)
  %26 = bitcast %union.anon* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 25, i1 false)
  %27 = bitcast %union.anon* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 25, i1 false)
  %28 = bitcast %union.anon* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ExplodedFrameStateC2ERKS0_(%"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"* dereferenceable(512)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 7
  %10 = bitcast %union.anon* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 25, i1 false)
  %11 = bitcast %union.anon* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 25, i1 false)
  %12 = bitcast %union.anon.34* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 81, i1 false)
  %13 = bitcast %union.anon* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 25, i1 false)
  %14 = bitcast %union.anon* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 52, i1 false)
  store i8 1, i8* %9, align 4
  %15 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 8, i32 0
  %16 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 13
  %17 = bitcast float* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 40, i1 false)
  store i32 1, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %union.anon* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 33, i1 false) #13
  %21 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %union.anon* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 41, i1 false)
  %27 = bitcast %union.anon* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 25, i1 false)
  %28 = bitcast %union.anon* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 25, i1 false)
  %29 = bitcast %union.anon* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 48, i1 false)
  tail call void @_ZN5blink18ExplodedFrameState6assignERKS0_(%"struct.blink::ExplodedFrameState"* %0, %"struct.blink::ExplodedFrameState"* dereferenceable(512) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ExplodedFrameState6assignERKS0_(%"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"* dereferenceable(512)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 0
  %5 = tail call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %4, %"class.absl::optional"* dereferenceable(32) %3)
  %6 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 1
  %8 = tail call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %7, %"class.absl::optional"* dereferenceable(32) %6)
  %9 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 3
  %10 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 3
  %11 = tail call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %10, %"class.absl::optional"* dereferenceable(32) %9)
  %12 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 4
  %13 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 4
  %14 = tail call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %13, %"class.absl::optional"* dereferenceable(32) %12)
  %15 = icmp eq %"struct.blink::ExplodedFrameState"* %0, %1
  br i1 %15, label %22, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 5
  %18 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 5, i32 0, i32 0
  %19 = load %"class.absl::optional"*, %"class.absl::optional"** %18, align 8
  %20 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 5, i32 0, i32 1
  %21 = load %"class.absl::optional"*, %"class.absl::optional"** %20, align 8
  tail call void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE6assignIPS9_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS9_NS_15iterator_traitsISF_E9referenceEEE5valueEvE4typeESF_SF_(%"class.std::__1::vector.40"* %17, %"class.absl::optional"* %19, %"class.absl::optional"* %21) #13
  br label %22

22:                                               ; preds = %2, %16
  %23 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 6
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 6
  store i32 %24, i32* %25, align 8
  %26 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 7
  %27 = load i8, i8* %26, align 4, !range !2
  %28 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 7
  store i8 %27, i8* %28, align 4
  %29 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 8
  %30 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 8
  %31 = bitcast %"class.gfx::PointF"* %29 to i64*
  %32 = bitcast %"class.gfx::PointF"* %30 to i64*
  %33 = load i64, i64* %31, align 4
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 9
  %35 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 9
  %36 = bitcast %"class.gfx::Point"* %34 to i64*
  %37 = bitcast %"class.gfx::Point"* %35 to i64*
  %38 = load i64, i64* %36, align 4
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 10
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 10
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 11
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 11
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 12
  %46 = bitcast double* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 12
  %49 = bitcast double* %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 13
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 13
  store i32 %51, i32* %52, align 8
  %53 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 15, i32 0
  %54 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 15, i32 0
  %55 = tail call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %53, %"class.absl::optional"* dereferenceable(32) %54) #13
  %56 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 15, i32 1
  %57 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 15, i32 1, i32 0
  %58 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %57, align 8
  %59 = icmp eq %"class.network::ResourceRequestBody"* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %22
  %61 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 1 monotonic
  br label %63

63:                                               ; preds = %60, %22
  %64 = ptrtoint %"class.network::ResourceRequestBody"* %58 to i64
  %65 = bitcast %class.scoped_refptr* %56 to i64*
  %66 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %56, i64 0, i32 0
  %67 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %66, align 8
  store i64 %64, i64* %65, align 8
  %68 = icmp eq %"class.network::ResourceRequestBody"* %67, null
  br i1 %68, label %75, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw sub i32* %70, i32 1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %75

73:                                               ; preds = %69
  tail call void @_ZN7network19ResourceRequestBodyD1Ev(%"class.network::ResourceRequestBody"* nonnull %67) #13
  %74 = bitcast %"class.network::ResourceRequestBody"* %67 to i8*
  tail call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %63, %69, %73
  %76 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 15, i32 2
  %77 = load i8, i8* %76, align 8, !range !2
  %78 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 15, i32 2
  store i8 %77, i8* %78, align 8
  %79 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 16
  %80 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 16
  %81 = tail call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %80, %"class.absl::optional"* dereferenceable(32) %79)
  %82 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 17
  %83 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 17
  %84 = bitcast %"class.gfx::PointF"* %82 to i64*
  %85 = bitcast %"class.gfx::PointF"* %83 to i64*
  %86 = load i64, i64* %84, align 4
  store i64 %86, i64* %85, align 8
  %87 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 18
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 18
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 19
  %91 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 19
  %92 = tail call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %91, %"class.absl::optional"* dereferenceable(32) %90)
  %93 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 20
  %94 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 20
  %95 = tail call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %94, %"class.absl::optional"* dereferenceable(32) %93)
  %96 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 21
  %97 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 21
  %98 = tail call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %97, %"class.absl::optional"* dereferenceable(32) %96)
  br i1 %15, label %105, label %99

99:                                               ; preds = %75
  %100 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 22
  %101 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 22, i32 0, i32 0
  %102 = load %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"** %101, align 8
  %103 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 22, i32 0, i32 1
  %104 = load %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"** %103, align 8
  tail call void @_ZNSt3__16vectorIN5blink18ExplodedFrameStateENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.47"* %100, %"struct.blink::ExplodedFrameState"* %102, %"struct.blink::ExplodedFrameState"* %104) #13
  br label %105

105:                                              ; preds = %75, %99
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ExplodedFrameStateD2Ev(%"struct.blink::ExplodedFrameState"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 22, i32 0, i32 0
  %3 = load %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"** %2, align 8
  %4 = icmp eq %"struct.blink::ExplodedFrameState"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 22, i32 0, i32 1
  %7 = load %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"** %6, align 8
  %8 = icmp eq %"struct.blink::ExplodedFrameState"* %7, %3
  br i1 %8, label %15, label %9

9:                                                ; preds = %5, %9
  %10 = phi %"struct.blink::ExplodedFrameState"* [ %11, %9 ], [ %7, %5 ]
  %11 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %10, i64 -1
  tail call void @_ZN5blink18ExplodedFrameStateD2Ev(%"struct.blink::ExplodedFrameState"* %11) #13
  %12 = icmp eq %"struct.blink::ExplodedFrameState"* %11, %3
  br i1 %12, label %13, label %9

13:                                               ; preds = %9
  %14 = load %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"** %2, align 8
  br label %15

15:                                               ; preds = %13, %5
  %16 = phi %"struct.blink::ExplodedFrameState"* [ %14, %13 ], [ %3, %5 ]
  store %"struct.blink::ExplodedFrameState"* %3, %"struct.blink::ExplodedFrameState"** %6, align 8
  %17 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %1, %15
  %19 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::basic_string"* %23 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #14
  br label %31

31:                                               ; preds = %28, %22
  store i8 0, i8* %19, align 8
  br label %32

32:                                               ; preds = %18, %31
  %33 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %46, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = bitcast %"class.std::__1::basic_string"* %37 to i8**
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZdlPv(i8* %44) #14
  br label %45

45:                                               ; preds = %42, %36
  store i8 0, i8* %33, align 8
  br label %46

46:                                               ; preds = %32, %45
  %47 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %60, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %52, i64 0, i32 1, i32 1
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  %57 = bitcast %"class.std::__1::basic_string"* %51 to i8**
  %58 = load i8*, i8** %57, align 8
  tail call void @_ZdlPv(i8* %58) #14
  br label %59

59:                                               ; preds = %56, %50
  store i8 0, i8* %47, align 8
  br label %60

60:                                               ; preds = %46, %59
  %61 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %74, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0
  %66 = bitcast %"class.std::__1::basic_string"* %65 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %66, i64 0, i32 1, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %64
  %71 = bitcast %"class.std::__1::basic_string"* %65 to i8**
  %72 = load i8*, i8** %71, align 8
  tail call void @_ZdlPv(i8* %72) #14
  br label %73

73:                                               ; preds = %70, %64
  store i8 0, i8* %61, align 8
  br label %74

74:                                               ; preds = %60, %73
  %75 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 15, i32 1, i32 0
  %76 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %75, align 8
  %77 = icmp eq %"class.network::ResourceRequestBody"* %76, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw sub i32* %79, i32 1 acq_rel
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %84

82:                                               ; preds = %78
  tail call void @_ZN7network19ResourceRequestBodyD1Ev(%"class.network::ResourceRequestBody"* nonnull %76) #13
  %83 = bitcast %"class.network::ResourceRequestBody"* %76 to i8*
  tail call void @_ZdlPv(i8* %83) #14
  br label %84

84:                                               ; preds = %82, %78, %74
  %85 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8, i8* %85, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %90 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %90, i64 0, i32 1, i32 1
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %88
  %95 = bitcast %"class.std::__1::basic_string"* %89 to i8**
  %96 = load i8*, i8** %95, align 8
  tail call void @_ZdlPv(i8* %96) #14
  br label %97

97:                                               ; preds = %94, %88
  store i8 0, i8* %85, align 8
  br label %98

98:                                               ; preds = %84, %97
  %99 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 5, i32 0, i32 0
  %100 = load %"class.absl::optional"*, %"class.absl::optional"** %99, align 8
  %101 = icmp eq %"class.absl::optional"* %100, null
  br i1 %101, label %129, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 5, i32 0, i32 1
  %104 = load %"class.absl::optional"*, %"class.absl::optional"** %103, align 8
  %105 = icmp eq %"class.absl::optional"* %104, %100
  br i1 %105, label %126, label %106

106:                                              ; preds = %102, %122
  %107 = phi %"class.absl::optional"* [ %108, %122 ], [ %104, %102 ]
  %108 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %107, i64 -1
  %109 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %108, i64 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8, i8* %109, align 8, !range !2
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %122, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %107, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %114 = bitcast %"class.std::__1::basic_string"* %113 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %114, i64 0, i32 1, i32 1
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %112
  %119 = bitcast %"class.std::__1::basic_string"* %113 to i8**
  %120 = load i8*, i8** %119, align 8
  tail call void @_ZdlPv(i8* %120) #14
  br label %121

121:                                              ; preds = %118, %112
  store i8 0, i8* %109, align 8
  br label %122

122:                                              ; preds = %121, %106
  %123 = icmp eq %"class.absl::optional"* %108, %100
  br i1 %123, label %124, label %106

124:                                              ; preds = %122
  %125 = load %"class.absl::optional"*, %"class.absl::optional"** %99, align 8
  br label %126

126:                                              ; preds = %124, %102
  %127 = phi %"class.absl::optional"* [ %125, %124 ], [ %100, %102 ]
  store %"class.absl::optional"* %100, %"class.absl::optional"** %103, align 8
  %128 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %128) #14
  br label %129

129:                                              ; preds = %98, %126
  %130 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %131 = load i8, i8* %130, align 8, !range !2
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %143, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %135 = bitcast %"class.std::__1::basic_string"* %134 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %135, i64 0, i32 1, i32 1
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %133
  %140 = bitcast %"class.std::__1::basic_string"* %134 to i8**
  %141 = load i8*, i8** %140, align 8
  tail call void @_ZdlPv(i8* %141) #14
  br label %142

142:                                              ; preds = %139, %133
  store i8 0, i8* %130, align 8
  br label %143

143:                                              ; preds = %129, %142
  %144 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %145 = load i8, i8* %144, align 8, !range !2
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %157, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %149 = bitcast %"class.std::__1::basic_string"* %148 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %149, i64 0, i32 1, i32 1
  %151 = load i8, i8* %150, align 1
  %152 = icmp slt i8 %151, 0
  br i1 %152, label %153, label %156

153:                                              ; preds = %147
  %154 = bitcast %"class.std::__1::basic_string"* %148 to i8**
  %155 = load i8*, i8** %154, align 8
  tail call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %153, %147
  store i8 0, i8* %144, align 8
  br label %157

157:                                              ; preds = %143, %156
  %158 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %159 = load i8, i8* %158, align 8, !range !2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %163, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %162) #13
  store i8 0, i8* %158, align 8
  br label %163

163:                                              ; preds = %157, %161
  %164 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %165 = load i8, i8* %164, align 8, !range !2
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %177, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %169 = bitcast %"class.std::__1::basic_string"* %168 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %170 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %169, i64 0, i32 1, i32 1
  %171 = load i8, i8* %170, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = bitcast %"class.std::__1::basic_string"* %168 to i8**
  %175 = load i8*, i8** %174, align 8
  tail call void @_ZdlPv(i8* %175) #14
  br label %176

176:                                              ; preds = %173, %167
  store i8 0, i8* %164, align 8
  br label %177

177:                                              ; preds = %163, %176
  %178 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load i8, i8* %178, align 8, !range !2
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %191, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %183 = bitcast %"class.std::__1::basic_string"* %182 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %184 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %183, i64 0, i32 1, i32 1
  %185 = load i8, i8* %184, align 1
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %190

187:                                              ; preds = %181
  %188 = bitcast %"class.std::__1::basic_string"* %182 to i8**
  %189 = load i8*, i8** %188, align 8
  tail call void @_ZdlPv(i8* %189) #14
  br label %190

190:                                              ; preds = %187, %181
  store i8 0, i8* %178, align 8
  br label %191

191:                                              ; preds = %177, %190
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ExplodedFrameStateaSERKS0_(%"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"* dereferenceable(512)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"struct.blink::ExplodedFrameState"* %1, %0
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZN5blink18ExplodedFrameState6assignERKS0_(%"struct.blink::ExplodedFrameState"* %0, %"struct.blink::ExplodedFrameState"* dereferenceable(512) %1)
  br label %5

5:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"*, %"class.absl::optional"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %198, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %10, label %14, label %12

12:                                               ; preds = %6
  %13 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %11, %"class.std::__1::basic_string"* dereferenceable(24) %7) #13
  br label %212

14:                                               ; preds = %6
  %15 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #13
  br label %197

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp ult i64 %26, 11
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::basic_string"* %11 to i16*
  %30 = trunc i64 %26 to i8
  %31 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %31, i64 0, i32 1, i32 1
  store i8 %30, i8* %32, align 1
  br label %50

33:                                               ; preds = %22
  %34 = icmp ugt i64 %26, 9223372036854775791
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %36) #15
  unreachable

37:                                               ; preds = %33
  %38 = add nuw nsw i64 %26, 8
  %39 = and i64 %38, -8
  %40 = icmp slt i64 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  tail call void @abort() #15
  unreachable

42:                                               ; preds = %37
  %43 = shl i64 %39, 1
  %44 = tail call i8* @_Znwm(i64 %43) #14
  %45 = bitcast i8* %44 to i16*
  %46 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  store i8* %44, i8** %46, align 8
  %47 = or i64 %39, -9223372036854775808
  %48 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %49, align 8
  br label %50

50:                                               ; preds = %42, %28
  %51 = phi i16* [ %29, %28 ], [ %45, %42 ]
  %52 = add nuw nsw i64 %26, 1
  %53 = add i64 %26, 1
  %54 = icmp ult i64 %53, 16
  br i1 %54, label %144, label %55

55:                                               ; preds = %50
  %56 = add i64 %26, 1
  %57 = getelementptr i16, i16* %51, i64 %56
  %58 = getelementptr i16, i16* %24, i64 %56
  %59 = icmp ult i16* %51, %58
  %60 = icmp ult i16* %24, %57
  %61 = and i1 %59, %60
  br i1 %61, label %144, label %62

62:                                               ; preds = %55
  %63 = and i64 %53, -16
  %64 = sub i64 %52, %63
  %65 = getelementptr i16, i16* %24, i64 %63
  %66 = getelementptr i16, i16* %51, i64 %63
  %67 = add i64 %63, -16
  %68 = lshr exact i64 %67, 4
  %69 = add nuw nsw i64 %68, 1
  %70 = and i64 %69, 3
  %71 = icmp ult i64 %67, 48
  br i1 %71, label %123, label %72

72:                                               ; preds = %62
  %73 = sub nsw i64 %69, %70
  br label %74

74:                                               ; preds = %74, %72
  %75 = phi i64 [ 0, %72 ], [ %120, %74 ]
  %76 = phi i64 [ %73, %72 ], [ %121, %74 ]
  %77 = getelementptr i16, i16* %24, i64 %75
  %78 = getelementptr i16, i16* %51, i64 %75
  %79 = bitcast i16* %77 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !3
  %81 = getelementptr i16, i16* %77, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !3
  %84 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !6, !noalias !3
  %85 = getelementptr i16, i16* %78, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !6, !noalias !3
  %87 = or i64 %75, 16
  %88 = getelementptr i16, i16* %24, i64 %87
  %89 = getelementptr i16, i16* %51, i64 %87
  %90 = bitcast i16* %88 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !3
  %92 = getelementptr i16, i16* %88, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !3
  %95 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !6, !noalias !3
  %96 = getelementptr i16, i16* %89, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !6, !noalias !3
  %98 = or i64 %75, 32
  %99 = getelementptr i16, i16* %24, i64 %98
  %100 = getelementptr i16, i16* %51, i64 %98
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !3
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !3
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !6, !noalias !3
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !6, !noalias !3
  %109 = or i64 %75, 48
  %110 = getelementptr i16, i16* %24, i64 %109
  %111 = getelementptr i16, i16* %51, i64 %109
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !3
  %114 = getelementptr i16, i16* %110, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !3
  %117 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 2, !alias.scope !6, !noalias !3
  %118 = getelementptr i16, i16* %111, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %119, align 2, !alias.scope !6, !noalias !3
  %120 = add i64 %75, 64
  %121 = add i64 %76, -4
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %74, !llvm.loop !8

123:                                              ; preds = %74, %62
  %124 = phi i64 [ 0, %62 ], [ %120, %74 ]
  %125 = icmp eq i64 %70, 0
  br i1 %125, label %142, label %126

126:                                              ; preds = %123, %126
  %127 = phi i64 [ %139, %126 ], [ %124, %123 ]
  %128 = phi i64 [ %140, %126 ], [ %70, %123 ]
  %129 = getelementptr i16, i16* %24, i64 %127
  %130 = getelementptr i16, i16* %51, i64 %127
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !3
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !3
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !6, !noalias !3
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !6, !noalias !3
  %139 = add i64 %127, 16
  %140 = add i64 %128, -1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %126, !llvm.loop !10

142:                                              ; preds = %126, %123
  %143 = icmp eq i64 %53, %63
  br i1 %143, label %197, label %144

144:                                              ; preds = %142, %55, %50
  %145 = phi i64 [ %52, %55 ], [ %52, %50 ], [ %64, %142 ]
  %146 = phi i16* [ %24, %55 ], [ %24, %50 ], [ %65, %142 ]
  %147 = phi i16* [ %51, %55 ], [ %51, %50 ], [ %66, %142 ]
  %148 = add i64 %145, -1
  %149 = and i64 %145, 7
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %162, label %151

151:                                              ; preds = %144, %151
  %152 = phi i64 [ %157, %151 ], [ %145, %144 ]
  %153 = phi i16* [ %159, %151 ], [ %146, %144 ]
  %154 = phi i16* [ %158, %151 ], [ %147, %144 ]
  %155 = phi i64 [ %160, %151 ], [ %149, %144 ]
  %156 = load i16, i16* %153, align 2
  store i16 %156, i16* %154, align 2
  %157 = add i64 %152, -1
  %158 = getelementptr inbounds i16, i16* %154, i64 1
  %159 = getelementptr inbounds i16, i16* %153, i64 1
  %160 = add i64 %155, -1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %151, !llvm.loop !12

162:                                              ; preds = %151, %144
  %163 = phi i64 [ %145, %144 ], [ %157, %151 ]
  %164 = phi i16* [ %146, %144 ], [ %159, %151 ]
  %165 = phi i16* [ %147, %144 ], [ %158, %151 ]
  %166 = icmp ult i64 %148, 7
  br i1 %166, label %197, label %167

167:                                              ; preds = %162, %167
  %168 = phi i64 [ %193, %167 ], [ %163, %162 ]
  %169 = phi i16* [ %195, %167 ], [ %164, %162 ]
  %170 = phi i16* [ %194, %167 ], [ %165, %162 ]
  %171 = load i16, i16* %169, align 2
  store i16 %171, i16* %170, align 2
  %172 = getelementptr inbounds i16, i16* %170, i64 1
  %173 = getelementptr inbounds i16, i16* %169, i64 1
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %170, i64 2
  %176 = getelementptr inbounds i16, i16* %169, i64 2
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %170, i64 3
  %179 = getelementptr inbounds i16, i16* %169, i64 3
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %170, i64 4
  %182 = getelementptr inbounds i16, i16* %169, i64 4
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %170, i64 5
  %185 = getelementptr inbounds i16, i16* %169, i64 5
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %170, i64 6
  %188 = getelementptr inbounds i16, i16* %169, i64 6
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %170, i64 7
  %191 = getelementptr inbounds i16, i16* %169, i64 7
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = add i64 %168, -8
  %194 = getelementptr inbounds i16, i16* %170, i64 8
  %195 = getelementptr inbounds i16, i16* %169, i64 8
  %196 = icmp eq i64 %193, 0
  br i1 %196, label %197, label %167, !llvm.loop !13

197:                                              ; preds = %162, %167, %142, %19
  store i8 1, i8* %8, align 8
  br label %212

198:                                              ; preds = %2
  %199 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %200 = load i8, i8* %199, align 8, !range !2
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %212, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %204 = bitcast %"class.std::__1::basic_string"* %203 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %204, i64 0, i32 1, i32 1
  %206 = load i8, i8* %205, align 1
  %207 = icmp slt i8 %206, 0
  br i1 %207, label %208, label %211

208:                                              ; preds = %202
  %209 = bitcast %"class.std::__1::basic_string"* %203 to i8**
  %210 = load i8*, i8** %209, align 8
  tail call void @_ZdlPv(i8* %210) #14
  br label %211

211:                                              ; preds = %208, %202
  store i8 0, i8* %199, align 8
  br label %212

212:                                              ; preds = %12, %197, %198, %211
  ret %"class.absl::optional"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ExplodedPageStateC2Ev(%"struct.blink::ExplodedPageState"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 1, i32 7
  %8 = bitcast %union.anon* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 25, i1 false) #13
  %9 = bitcast %union.anon* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 25, i1 false) #13
  %10 = bitcast %union.anon.34* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 81, i1 false) #13
  %11 = bitcast %union.anon* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 25, i1 false) #13
  %12 = bitcast %union.anon* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 52, i1 false) #13
  %13 = bitcast %"struct.blink::ExplodedPageState"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 25, i1 false)
  store i8 1, i8* %7, align 4
  %14 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 1, i32 8, i32 0
  %15 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 1, i32 13
  %16 = bitcast float* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 40, i1 false) #13
  store i32 1, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 1, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 1, i32 15, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %union.anon* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 33, i1 false) #13
  %20 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 1, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 1, i32 16, i32 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 1, i32 19, i32 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 1, i32 20, i32 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 1, i32 21, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %union.anon* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 41, i1 false) #13
  %26 = bitcast %union.anon* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 25, i1 false) #13
  %27 = bitcast %union.anon* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 25, i1 false) #13
  %28 = bitcast %union.anon* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 48, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ExplodedPageStateD2Ev(%"struct.blink::ExplodedPageState"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 1
  tail call void @_ZN5blink18ExplodedFrameStateD2Ev(%"struct.blink::ExplodedFrameState"* %2) #13
  %3 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.absl::optional"*, %"class.absl::optional"** %3, align 8
  %5 = icmp eq %"class.absl::optional"* %4, null
  br i1 %5, label %33, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.absl::optional"*, %"class.absl::optional"** %7, align 8
  %9 = icmp eq %"class.absl::optional"* %8, %4
  br i1 %9, label %30, label %10

10:                                               ; preds = %6, %26
  %11 = phi %"class.absl::optional"* [ %12, %26 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 -1
  %13 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = bitcast %"class.std::__1::basic_string"* %17 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #14
  br label %25

25:                                               ; preds = %22, %16
  store i8 0, i8* %13, align 8
  br label %26

26:                                               ; preds = %25, %10
  %27 = icmp eq %"class.absl::optional"* %12, %4
  br i1 %27, label %28, label %10

28:                                               ; preds = %26
  %29 = load %"class.absl::optional"*, %"class.absl::optional"** %3, align 8
  br label %30

30:                                               ; preds = %28, %6
  %31 = phi %"class.absl::optional"* [ %29, %28 ], [ %4, %6 ]
  store %"class.absl::optional"* %4, %"class.absl::optional"** %7, align 8
  %32 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %32) #14
  br label %33

33:                                               ; preds = %1, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink23DecodePageStateInternalERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_17ExplodedPageStateE(%"class.std::__1::basic_string.15"* dereferenceable(24), %"struct.blink::ExplodedPageState"*) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.mojo::StructPtr", align 8
  %6 = alloca %"class.std::__1::basic_string.15", align 8
  %7 = alloca i32, align 4
  %8 = alloca %class.GURL, align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::vector.57", align 8
  %11 = alloca %"class.base::PickleIterator", align 8
  %12 = alloca %"struct.blink::ExplodedPageState", align 8
  %13 = alloca %"struct.blink::(anonymous namespace)::SerializeObject", align 8
  %14 = bitcast %"struct.blink::ExplodedPageState"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %12, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %12, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %12, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %12, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %12, i64 0, i32 1, i32 7
  %21 = bitcast %union.anon* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 25, i1 false) #13
  %22 = bitcast %union.anon* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 25, i1 false) #13
  %23 = bitcast %union.anon.34* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 81, i1 false) #13
  %24 = bitcast %union.anon* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 25, i1 false) #13
  %25 = bitcast %union.anon* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 52, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 25, i1 false) #13
  store i8 1, i8* %20, align 4
  %26 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %12, i64 0, i32 1, i32 8, i32 0
  %27 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %12, i64 0, i32 1, i32 13
  %28 = bitcast float* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 40, i1 false) #13
  store i32 1, i32* %27, align 8
  %29 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %12, i64 0, i32 1, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %12, i64 0, i32 1, i32 15, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast %union.anon* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 33, i1 false) #13
  %32 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %12, i64 0, i32 1, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %12, i64 0, i32 1, i32 16, i32 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %12, i64 0, i32 1, i32 19, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %12, i64 0, i32 1, i32 20, i32 0, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %12, i64 0, i32 1, i32 21, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast %union.anon* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 41, i1 false) #13
  %38 = bitcast %union.anon* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 25, i1 false) #13
  %39 = bitcast %union.anon* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 25, i1 false) #13
  %40 = bitcast %union.anon* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 48, i1 false) #13
  %41 = icmp eq %"struct.blink::ExplodedPageState"* %12, %1
  br i1 %41, label %46, label %42

42:                                               ; preds = %2
  %43 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %1, i64 0, i32 0
  call void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE6assignIPS9_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS9_NS_15iterator_traitsISF_E9referenceEEE5valueEvE4typeESF_SF_(%"class.std::__1::vector.40"* %43, %"class.absl::optional"* null, %"class.absl::optional"* null) #13
  %44 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %12, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %1, i64 0, i32 1
  call void @_ZN5blink18ExplodedFrameState6assignERKS0_(%"struct.blink::ExplodedFrameState"* %45, %"struct.blink::ExplodedFrameState"* dereferenceable(512) %44) #13
  br label %46

46:                                               ; preds = %2, %42
  %47 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %12, i64 0, i32 1
  call void @_ZN5blink18ExplodedFrameStateD2Ev(%"struct.blink::ExplodedFrameState"* %47) #13
  %48 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %12, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.absl::optional"*, %"class.absl::optional"** %48, align 8
  %50 = icmp eq %"class.absl::optional"* %49, null
  br i1 %50, label %78, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %12, i64 0, i32 0, i32 0, i32 1
  %53 = load %"class.absl::optional"*, %"class.absl::optional"** %52, align 8
  %54 = icmp eq %"class.absl::optional"* %53, %49
  br i1 %54, label %75, label %55

55:                                               ; preds = %51, %71
  %56 = phi %"class.absl::optional"* [ %57, %71 ], [ %53, %51 ]
  %57 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %56, i64 -1
  %58 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %71, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %56, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %63 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %61
  %68 = bitcast %"class.std::__1::basic_string"* %62 to i8**
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #14
  br label %70

70:                                               ; preds = %67, %61
  store i8 0, i8* %58, align 8
  br label %71

71:                                               ; preds = %70, %55
  %72 = icmp eq %"class.absl::optional"* %57, %49
  br i1 %72, label %73, label %55

73:                                               ; preds = %71
  %74 = load %"class.absl::optional"*, %"class.absl::optional"** %48, align 8
  br label %75

75:                                               ; preds = %73, %51
  %76 = phi %"class.absl::optional"* [ %74, %73 ], [ %49, %51 ]
  store %"class.absl::optional"* %49, %"class.absl::optional"** %52, align 8
  %77 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %76, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %77) #14
  br label %78

78:                                               ; preds = %46, %75
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %14) #13
  %79 = bitcast %"class.std::__1::basic_string.15"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  %83 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = zext i8 %81 to i64
  %86 = select i1 %82, i64 %84, i64 %85
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %302, label %88

88:                                               ; preds = %78
  %89 = bitcast %"struct.blink::(anonymous namespace)::SerializeObject"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %89) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 72, i1 false)
  %90 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  %92 = bitcast %"class.std::__1::basic_string.15"* %0 to i8*
  %93 = select i1 %82, i8* %91, i8* %92
  %94 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %13, i64 0, i32 0
  %95 = shl i64 %86, 32
  %96 = ashr exact i64 %95, 32
  call void @_ZN4base6PickleC1EPKcm(%"class.base::Pickle"* nonnull %94, i8* %93, i64 %96) #13
  %97 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %13, i64 0, i32 1
  %98 = bitcast %"class.base::PickleIterator"* %97 to i8*
  %99 = bitcast %"class.base::PickleIterator"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 29, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #13
  call void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"* nonnull %11, %"class.base::Pickle"* nonnull dereferenceable(40) %94) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* nonnull align 8 %99, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #13
  %100 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %100) #13
  store i32 -1431655766, i32* %7, align 4
  %101 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %97, i32* nonnull %7) #13
  br i1 %101, label %105, label %102

102:                                              ; preds = %88
  %103 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %13, i64 0, i32 3
  store i8 1, i8* %103, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100) #13
  %104 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %13, i64 0, i32 2
  store i32 0, i32* %104, align 8
  br label %171

105:                                              ; preds = %88
  %106 = load i32, i32* %7, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100) #13
  %107 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %13, i64 0, i32 2
  store i32 %106, i32* %107, align 8
  %108 = icmp eq i32 %106, -1
  br i1 %108, label %109, label %168

109:                                              ; preds = %105
  %110 = bitcast %class.GURL* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %110) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 120, i1 false) #13
  %111 = bitcast %"class.std::__1::basic_string.15"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #13, !noalias !14
  %112 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 0, i64 24, i1 false) #13, !noalias !14
  %113 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* %97, %"class.std::__1::basic_string.15"* nonnull %6) #13, !noalias !14
  br i1 %113, label %114, label %125

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %116 = bitcast %"class.std::__1::basic_string.15"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1, !noalias !14
  %119 = icmp slt i8 %118, 0
  %120 = load i8*, i8** %112, align 8, !noalias !14
  %121 = select i1 %119, i8* %120, i8* %111
  %122 = load i64, i64* %115, align 8, !noalias !14
  %123 = zext i8 %118 to i64
  %124 = select i1 %119, i64 %122, i64 %123
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %8, i8* %121, i64 %124) #13
  br label %128

125:                                              ; preds = %109
  %126 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %13, i64 0, i32 3
  store i8 1, i8* %126, align 4, !noalias !14
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %8) #13
  %127 = bitcast %"class.std::__1::basic_string.15"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %128

128:                                              ; preds = %125, %114
  %129 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %127, %125 ], [ %116, %114 ]
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1, !noalias !14
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %135

133:                                              ; preds = %128
  %134 = load i8*, i8** %112, align 8, !noalias !14
  call void @_ZdlPv(i8* %134) #14
  br label %135

135:                                              ; preds = %133, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #13, !noalias !14
  %136 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %136) #13
  %137 = bitcast %class.GURL* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  %141 = getelementptr inbounds %class.GURL, %class.GURL* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load i8*, i8** %141, align 8
  %143 = select i1 %140, i8* %142, i8* %110
  %144 = getelementptr inbounds %class.GURL, %class.GURL* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = zext i8 %139 to i64
  %147 = select i1 %140, i64 %145, i64 %146
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %9, i8* %143, i64 %147) #13
  %148 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  %151 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %150, label %165, label %152

152:                                              ; preds = %135
  %153 = bitcast %"class.std::__1::basic_string"* %151 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %153, i64 0, i32 1, i32 1
  %155 = load i8, i8* %154, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %152
  %158 = bitcast %"class.std::__1::basic_string"* %151 to i8**
  %159 = load i8*, i8** %158, align 8
  call void @_ZdlPv(i8* %159) #14
  br label %160

160:                                              ; preds = %157, %152
  %161 = bitcast %"class.std::__1::basic_string"* %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* nonnull align 8 %136, i64 24, i1 false) #13
  %162 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %162, i64 0, i32 1, i32 1
  store i8 0, i8* %163, align 1
  %164 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  store i16 0, i16* %164, align 8
  br label %167

165:                                              ; preds = %135
  %166 = bitcast %"class.std::__1::basic_string"* %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* nonnull align 8 %136, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %148, align 8
  br label %167

167:                                              ; preds = %165, %160
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %136) #13
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %110) #13
  br label %295

168:                                              ; preds = %105
  %169 = add i32 %106, -11
  %170 = icmp ugt i32 %169, 19
  br i1 %170, label %171, label %173

171:                                              ; preds = %168, %102
  %172 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %13, i64 0, i32 3
  store i8 1, i8* %172, align 4
  br label %295

173:                                              ; preds = %168
  %174 = icmp sgt i32 %106, 25
  br i1 %174, label %175, label %239

175:                                              ; preds = %173
  %176 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %176) #13
  store i32 0, i32* %4, align 4
  %177 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %178 = call zeroext i1 @_ZN4base14PickleIterator8ReadDataEPPKcPi(%"class.base::PickleIterator"* %97, i8** nonnull %3, i32* nonnull %4) #13
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %13, i64 0, i32 3
  store i8 1, i8* %180, align 4
  store i32 0, i32* %4, align 4
  br label %236

181:                                              ; preds = %175
  %182 = load i8*, i8** %3, align 8
  %183 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %13, i64 0, i32 3
  %184 = load i8, i8* %183, align 4, !range !2
  %185 = icmp eq i8 %184, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177) #13
  br i1 %185, label %186, label %238

186:                                              ; preds = %181
  %187 = bitcast %"class.mojo::StructPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %187) #13
  %188 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %189 = bitcast %"class.mojo::StructPtr"* %5 to i64*
  store i64 0, i64* %189, align 8
  %190 = load i32, i32* %4, align 4
  %191 = sext i32 %190 to i64
  %192 = call zeroext i1 @_ZN5blink5mojom9PageState11DeserializeIN4mojo9StructPtrIS1_EEEEbPKvmPT_(i8* %182, i64 %191, %"class.mojo::StructPtr"* nonnull %5) #13
  %193 = xor i1 %192, true
  %194 = zext i1 %193 to i8
  store i8 %194, i8* %183, align 4
  br i1 %192, label %195, label %231

195:                                              ; preds = %186
  %196 = load %"class.blink::mojom::PageState"*, %"class.blink::mojom::PageState"** %188, align 8
  %197 = getelementptr inbounds %"class.blink::mojom::PageState", %"class.blink::mojom::PageState"* %196, i64 0, i32 0, i32 0, i32 0
  %198 = load %"class.absl::optional"*, %"class.absl::optional"** %197, align 8
  %199 = getelementptr inbounds %"class.blink::mojom::PageState", %"class.blink::mojom::PageState"* %196, i64 0, i32 0, i32 0, i32 1
  %200 = load %"class.absl::optional"*, %"class.absl::optional"** %199, align 8
  %201 = icmp eq %"class.absl::optional"* %198, %200
  br i1 %201, label %208, label %202

202:                                              ; preds = %195
  %203 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %1, i64 0, i32 0
  %204 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %1, i64 0, i32 0, i32 0, i32 1
  %205 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %221

206:                                              ; preds = %228
  %207 = load %"class.blink::mojom::PageState"*, %"class.blink::mojom::PageState"** %188, align 8
  br label %208

208:                                              ; preds = %206, %195
  %209 = phi %"class.blink::mojom::PageState"* [ %207, %206 ], [ %196, %195 ]
  %210 = getelementptr inbounds %"class.blink::mojom::PageState", %"class.blink::mojom::PageState"* %209, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %211 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %210, align 8
  %212 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %1, i64 0, i32 1
  call fastcc void @_ZN5blink12_GLOBAL__N_114ReadFrameStateEPNS_5mojom10FrameStateEPNS_18ExplodedFrameStateE(%"class.blink::mojom::FrameState"* %211, %"struct.blink::ExplodedFrameState"* %212) #13
  %213 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %1, i64 0, i32 0
  %214 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %1, i64 0, i32 0, i32 0, i32 0
  %215 = load %"class.absl::optional"*, %"class.absl::optional"** %214, align 8
  %216 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %1, i64 0, i32 0, i32 0, i32 1
  %217 = load %"class.absl::optional"*, %"class.absl::optional"** %216, align 8
  %218 = call %"class.absl::optional"* @_ZNSt3__16uniqueINS_11__wrap_iterIPN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEEENS_10__equal_toISA_SA_EEEET_SF_SF_T0_(%"class.absl::optional"* %215, %"class.absl::optional"* %217) #13
  %219 = load %"class.absl::optional"*, %"class.absl::optional"** %216, align 8
  %220 = call %"class.absl::optional"* @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE5eraseENS_11__wrap_iterIPKS9_EESF_(%"class.std::__1::vector.40"* %213, %"class.absl::optional"* %218, %"class.absl::optional"* %219) #13
  br label %231

221:                                              ; preds = %228, %202
  %222 = phi %"class.absl::optional"* [ %198, %202 ], [ %229, %228 ]
  %223 = load %"class.absl::optional"*, %"class.absl::optional"** %204, align 8
  %224 = load %"class.absl::optional"*, %"class.absl::optional"** %205, align 8
  %225 = icmp eq %"class.absl::optional"* %223, %224
  br i1 %225, label %227, label %226

226:                                              ; preds = %221
  call void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE22__construct_one_at_endIJRKS9_EEEvDpOT_(%"class.std::__1::vector.40"* %203, %"class.absl::optional"* dereferenceable(32) %222) #13
  br label %228

227:                                              ; preds = %221
  call void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE21__push_back_slow_pathIRKS9_EEvOT_(%"class.std::__1::vector.40"* %203, %"class.absl::optional"* dereferenceable(32) %222) #13
  br label %228

228:                                              ; preds = %227, %226
  %229 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %222, i64 1
  %230 = icmp eq %"class.absl::optional"* %229, %200
  br i1 %230, label %206, label %221

231:                                              ; preds = %208, %186
  %232 = load %"class.blink::mojom::PageState"*, %"class.blink::mojom::PageState"** %188, align 8
  store %"class.blink::mojom::PageState"* null, %"class.blink::mojom::PageState"** %188, align 8
  %233 = icmp eq %"class.blink::mojom::PageState"* %232, null
  br i1 %233, label %236, label %234

234:                                              ; preds = %231
  call void @_ZN5blink5mojom9PageStateD1Ev(%"class.blink::mojom::PageState"* nonnull %232) #13
  %235 = bitcast %"class.blink::mojom::PageState"* %232 to i8*
  call void @_ZdlPv(i8* %235) #14
  br label %236

236:                                              ; preds = %231, %234, %179
  %237 = phi i8* [ %177, %179 ], [ %187, %234 ], [ %187, %231 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %237) #13
  br label %238

238:                                              ; preds = %236, %181
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %176) #13
  br label %295

239:                                              ; preds = %173
  %240 = icmp sgt i32 %106, 13
  br i1 %240, label %241, label %243

241:                                              ; preds = %239
  %242 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %1, i64 0, i32 0
  call fastcc void @_ZN5blink12_GLOBAL__N_116ReadStringVectorEPNS0_15SerializeObjectEPNSt3__16vectorIN4absl8optionalINS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEENSA_ISD_EEEE(%"struct.blink::(anonymous namespace)::SerializeObject"* nonnull %13, %"class.std::__1::vector.40"* %242) #13
  br label %243

243:                                              ; preds = %241, %239
  %244 = bitcast %"class.std::__1::vector.57"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %244) #13
  %245 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %10, i64 0, i32 0, i32 0
  %246 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %10, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %244, i8 0, i64 24, i1 false) #13
  %247 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %1, i64 0, i32 1
  call fastcc void @_ZN5blink12_GLOBAL__N_114ReadFrameStateEPNS0_15SerializeObjectEbPNSt3__16vectorINS_16UniqueNameHelper11ReplacementENS3_9allocatorIS6_EEEEPNS_18ExplodedFrameStateE(%"struct.blink::(anonymous namespace)::SerializeObject"* nonnull %13, i1 zeroext true, %"class.std::__1::vector.57"* nonnull %10, %"struct.blink::ExplodedFrameState"* %247) #13
  %248 = load i32, i32* %107, align 8
  %249 = icmp slt i32 %248, 14
  br i1 %249, label %250, label %253

250:                                              ; preds = %243
  %251 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %1, i64 0, i32 0
  %252 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_132RecursivelyAppendReferencedFilesERKNS_18ExplodedFrameStateEPNSt3__16vectorIN4absl8optionalINS4_12basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEENSB_ISE_EEEE(%"struct.blink::ExplodedFrameState"* dereferenceable(512) %247, %"class.std::__1::vector.40"* %251) #13
  br label %253

253:                                              ; preds = %250, %243
  %254 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %1, i64 0, i32 0
  %255 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %1, i64 0, i32 0, i32 0, i32 0
  %256 = load %"class.absl::optional"*, %"class.absl::optional"** %255, align 8
  %257 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %1, i64 0, i32 0, i32 0, i32 1
  %258 = load %"class.absl::optional"*, %"class.absl::optional"** %257, align 8
  %259 = call %"class.absl::optional"* @_ZNSt3__16uniqueINS_11__wrap_iterIPN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEEENS_10__equal_toISA_SA_EEEET_SF_SF_T0_(%"class.absl::optional"* %256, %"class.absl::optional"* %258) #13
  %260 = load %"class.absl::optional"*, %"class.absl::optional"** %257, align 8
  %261 = call %"class.absl::optional"* @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE5eraseENS_11__wrap_iterIPKS9_EESF_(%"class.std::__1::vector.40"* %254, %"class.absl::optional"* %259, %"class.absl::optional"* %260) #13
  %262 = load %"struct.blink::UniqueNameHelper::Replacement"*, %"struct.blink::UniqueNameHelper::Replacement"** %245, align 8
  %263 = icmp eq %"struct.blink::UniqueNameHelper::Replacement"* %262, null
  br i1 %263, label %294, label %264

264:                                              ; preds = %253
  %265 = bitcast %"struct.blink::UniqueNameHelper::Replacement"* %262 to i8*
  %266 = load %"struct.blink::UniqueNameHelper::Replacement"*, %"struct.blink::UniqueNameHelper::Replacement"** %246, align 8
  %267 = icmp eq %"struct.blink::UniqueNameHelper::Replacement"* %266, %262
  br i1 %267, label %292, label %268

268:                                              ; preds = %264, %287
  %269 = phi %"struct.blink::UniqueNameHelper::Replacement"* [ %270, %287 ], [ %266, %264 ]
  %270 = getelementptr inbounds %"struct.blink::UniqueNameHelper::Replacement", %"struct.blink::UniqueNameHelper::Replacement"* %269, i64 -1
  %271 = getelementptr inbounds %"struct.blink::UniqueNameHelper::Replacement", %"struct.blink::UniqueNameHelper::Replacement"* %269, i64 -1, i32 1
  %272 = bitcast %"class.std::__1::basic_string.15"* %271 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %273 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %272, i64 0, i32 1, i32 0
  %274 = load i8, i8* %273, align 1
  %275 = icmp slt i8 %274, 0
  br i1 %275, label %276, label %279

276:                                              ; preds = %268
  %277 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %271, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = load i8*, i8** %277, align 8
  call void @_ZdlPv(i8* %278) #14
  br label %279

279:                                              ; preds = %276, %268
  %280 = bitcast %"struct.blink::UniqueNameHelper::Replacement"* %270 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %281 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %280, i64 0, i32 1, i32 0
  %282 = load i8, i8* %281, align 1
  %283 = icmp slt i8 %282, 0
  br i1 %283, label %284, label %287

284:                                              ; preds = %279
  %285 = getelementptr inbounds %"struct.blink::UniqueNameHelper::Replacement", %"struct.blink::UniqueNameHelper::Replacement"* %270, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = load i8*, i8** %285, align 8
  call void @_ZdlPv(i8* %286) #14
  br label %287

287:                                              ; preds = %284, %279
  %288 = icmp eq %"struct.blink::UniqueNameHelper::Replacement"* %270, %262
  br i1 %288, label %289, label %268

289:                                              ; preds = %287
  %290 = bitcast %"class.std::__1::vector.57"* %10 to i8**
  %291 = load i8*, i8** %290, align 8
  br label %292

292:                                              ; preds = %289, %264
  %293 = phi i8* [ %291, %289 ], [ %265, %264 ]
  store %"struct.blink::UniqueNameHelper::Replacement"* %262, %"struct.blink::UniqueNameHelper::Replacement"** %246, align 8
  call void @_ZdlPv(i8* %293) #14
  br label %294

294:                                              ; preds = %292, %253
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %244) #13
  br label %295

295:                                              ; preds = %167, %171, %238, %294
  %296 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %13, i64 0, i32 3
  %297 = load i8, i8* %296, align 4, !range !2
  %298 = icmp eq i8 %297, 0
  %299 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %13, i64 0, i32 2
  %300 = load i32, i32* %299, align 8
  %301 = select i1 %298, i32 %300, i32 -1
  call void @_ZN4base6PickleD1Ev(%"class.base::Pickle"* nonnull %94) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %89) #13
  br label %302

302:                                              ; preds = %78, %295
  %303 = phi i32 [ %301, %295 ], [ 1, %78 ]
  ret i32 %303
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15DecodePageStateERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_17ExplodedPageStateE(%"class.std::__1::basic_string.15"* dereferenceable(24), %"struct.blink::ExplodedPageState"*) local_unnamed_addr #0 {
  %3 = tail call i32 @_ZN5blink23DecodePageStateInternalERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_17ExplodedPageStateE(%"class.std::__1::basic_string.15"* dereferenceable(24) %0, %"struct.blink::ExplodedPageState"* %1)
  %4 = icmp ne i32 %3, -1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink25DecodePageStateForTestingERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_17ExplodedPageStateE(%"class.std::__1::basic_string.15"* dereferenceable(24), %"struct.blink::ExplodedPageState"*) local_unnamed_addr #0 {
  %3 = tail call i32 @_ZN5blink23DecodePageStateInternalERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_17ExplodedPageStateE(%"class.std::__1::basic_string.15"* dereferenceable(24) %0, %"struct.blink::ExplodedPageState"* %1)
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15EncodePageStateERKNS_17ExplodedPageStateEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"struct.blink::ExplodedPageState"* dereferenceable(536), %"class.std::__1::basic_string.15"* nocapture) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.mojo::StructPtr", align 8
  %5 = alloca %"class.absl::optional", align 8
  %6 = alloca %"class.std::__1::vector.4", align 8
  %7 = alloca %"struct.blink::(anonymous namespace)::SerializeObject", align 8
  %8 = alloca %"class.std::__1::basic_string.15", align 8
  %9 = bitcast %"struct.blink::(anonymous namespace)::SerializeObject"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 72, i1 false)
  %10 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %7, i64 0, i32 0
  call void @_ZN4base6PickleC1Ev(%"class.base::Pickle"* nonnull %10) #13
  %11 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %7, i64 0, i32 1
  %12 = bitcast %"class.base::PickleIterator"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 29, i1 false) #13
  %13 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %7, i64 0, i32 2
  store i32 30, i32* %13, align 8
  %14 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #13
  store i32 30, i32* %3, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* nonnull %10, i8* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #13
  %15 = bitcast %"class.mojo::StructPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = call i8* @_Znwm(i64 32) #14, !noalias !17
  %18 = bitcast i8* %17 to %"class.blink::mojom::PageState"*
  call void @_ZN5blink5mojom9PageStateC1Ev(%"class.blink::mojom::PageState"* nonnull %18) #13, !noalias !17
  %19 = ptrtoint i8* %17 to i64
  %20 = bitcast %"class.mojo::StructPtr"* %4 to i64*
  store i64 %19, i64* %20, align 8, !alias.scope !17
  %21 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.absl::optional"*, %"class.absl::optional"** %21, align 8
  %23 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 0, i32 0, i32 1
  %24 = load %"class.absl::optional"*, %"class.absl::optional"** %23, align 8
  %25 = icmp eq %"class.absl::optional"* %22, %24
  br i1 %25, label %36, label %26

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %29 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %30 = bitcast %"class.std::__1::basic_string"* %28 to i8**
  %31 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %32 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string"* %28 to i16*
  %34 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  br label %77

36:                                               ; preds = %290, %2
  %37 = phi %"class.blink::mojom::PageState"* [ %18, %2 ], [ %293, %290 ]
  %38 = call i8* @_Znwm(i64 352) #14, !noalias !20
  %39 = bitcast i8* %38 to %"class.blink::mojom::FrameState"*
  call void @_ZN5blink5mojom10FrameStateC1Ev(%"class.blink::mojom::FrameState"* nonnull %39) #13, !noalias !20
  %40 = ptrtoint i8* %38 to i64
  %41 = getelementptr inbounds %"class.blink::mojom::PageState", %"class.blink::mojom::PageState"* %37, i64 0, i32 1
  %42 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %42, align 8
  store %"class.blink::mojom::FrameState"* null, %"class.blink::mojom::FrameState"** %42, align 8
  %44 = icmp eq %"class.blink::mojom::FrameState"* %43, null
  br i1 %44, label %45, label %47

45:                                               ; preds = %36
  %46 = bitcast %"class.mojo::StructPtr.69"* %41 to i64*
  store i64 %40, i64* %46, align 8
  br label %54

47:                                               ; preds = %36
  call void @_ZN5blink5mojom10FrameStateD1Ev(%"class.blink::mojom::FrameState"* nonnull %43) #13
  %48 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %48) #14
  %49 = bitcast %"class.mojo::StructPtr.69"* %41 to i64*
  %50 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %42, align 8
  store i64 %40, i64* %49, align 8
  %51 = icmp eq %"class.blink::mojom::FrameState"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %47
  call void @_ZN5blink5mojom10FrameStateD1Ev(%"class.blink::mojom::FrameState"* nonnull %50) #13
  %53 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %53) #14
  br label %54

54:                                               ; preds = %52, %47, %45
  %55 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 1
  %56 = load %"class.blink::mojom::PageState"*, %"class.blink::mojom::PageState"** %16, align 8
  %57 = getelementptr inbounds %"class.blink::mojom::PageState", %"class.blink::mojom::PageState"* %56, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %57, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_115WriteFrameStateERKNS_18ExplodedFrameStateEPNS_5mojom10FrameStateE(%"struct.blink::ExplodedFrameState"* dereferenceable(512) %55, %"class.blink::mojom::FrameState"* %58) #13
  %59 = bitcast %"class.std::__1::vector.4"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #13
  %60 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %6, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 24, i1 false) #13
  call void @_ZN4mojo8internal13SerializeImplIN5blink5mojom17PageStateDataViewENSt3__16vectorIhNS5_9allocatorIhEEEENS_9StructPtrINS3_9PageStateEEEEET0_PT1_(%"class.std::__1::vector.4"* nonnull sret %6, %"class.mojo::StructPtr"* nonnull %4) #13
  %62 = load i8*, i8** %60, align 8
  %63 = bitcast i8** %61 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = ptrtoint i8* %62 to i64
  %66 = sub i64 %64, %65
  %67 = trunc i64 %66 to i32
  call void @_ZN4base6Pickle9WriteDataEPKci(%"class.base::Pickle"* nonnull %10, i8* %62, i32 %67) #13
  %68 = load i8*, i8** %60, align 8
  %69 = icmp eq i8* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %54
  %71 = ptrtoint i8* %68 to i64
  store i64 %71, i64* %63, align 8
  call void @_ZdlPv(i8* nonnull %68) #14
  br label %72

72:                                               ; preds = %70, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #13
  %73 = load %"class.blink::mojom::PageState"*, %"class.blink::mojom::PageState"** %16, align 8
  store %"class.blink::mojom::PageState"* null, %"class.blink::mojom::PageState"** %16, align 8
  %74 = icmp eq %"class.blink::mojom::PageState"* %73, null
  br i1 %74, label %294, label %75

75:                                               ; preds = %72
  call void @_ZN5blink5mojom9PageStateD1Ev(%"class.blink::mojom::PageState"* nonnull %73) #13
  %76 = bitcast %"class.blink::mojom::PageState"* %73 to i8*
  call void @_ZdlPv(i8* %76) #14
  br label %294

77:                                               ; preds = %290, %26
  %78 = phi %"class.blink::mojom::PageState"* [ %18, %26 ], [ %293, %290 ]
  %79 = phi %"class.absl::optional"* [ %22, %26 ], [ %291, %290 ]
  %80 = getelementptr inbounds %"class.blink::mojom::PageState", %"class.blink::mojom::PageState"* %78, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #13
  %81 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %77
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #15
  unreachable

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %79, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i8 1, i8* %27, align 8
  %87 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %87, i64 0, i32 1, i32 1
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %85
  %92 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %92, i64 24, i1 false) #13
  br label %263

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i16*, i16** %94, align 8
  %96 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %79, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = icmp ult i64 %97, 11
  br i1 %98, label %99, label %101

99:                                               ; preds = %93
  %100 = trunc i64 %97 to i8
  store i8 %100, i8* %35, align 1
  br label %115

101:                                              ; preds = %93
  %102 = icmp ugt i64 %97, 9223372036854775791
  br i1 %102, label %103, label %105

103:                                              ; preds = %101
  %104 = bitcast %"class.std::__1::basic_string"* %28 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %104) #15
  unreachable

105:                                              ; preds = %101
  %106 = add nuw nsw i64 %97, 8
  %107 = and i64 %106, -8
  %108 = icmp slt i64 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %105
  call void @abort() #15
  unreachable

110:                                              ; preds = %105
  %111 = shl i64 %107, 1
  %112 = call i8* @_Znwm(i64 %111) #14
  %113 = bitcast i8* %112 to i16*
  store i8* %112, i8** %30, align 8
  %114 = or i64 %107, -9223372036854775808
  store i64 %114, i64* %31, align 8
  store i64 %97, i64* %32, align 8
  br label %115

115:                                              ; preds = %110, %99
  %116 = phi i16* [ %33, %99 ], [ %113, %110 ]
  %117 = add nuw nsw i64 %97, 1
  %118 = add i64 %97, 1
  %119 = icmp ult i64 %118, 16
  br i1 %119, label %210, label %120

120:                                              ; preds = %115
  %121 = getelementptr i16, i16* %116, i64 1
  %122 = getelementptr i16, i16* %121, i64 %97
  %123 = getelementptr i16, i16* %95, i64 1
  %124 = getelementptr i16, i16* %123, i64 %97
  %125 = icmp ult i16* %116, %124
  %126 = icmp ult i16* %95, %122
  %127 = and i1 %125, %126
  br i1 %127, label %210, label %128

128:                                              ; preds = %120
  %129 = and i64 %118, -16
  %130 = sub i64 %117, %129
  %131 = getelementptr i16, i16* %95, i64 %129
  %132 = getelementptr i16, i16* %116, i64 %129
  %133 = add i64 %129, -16
  %134 = lshr exact i64 %133, 4
  %135 = add nuw nsw i64 %134, 1
  %136 = and i64 %135, 3
  %137 = icmp ult i64 %133, 48
  br i1 %137, label %189, label %138

138:                                              ; preds = %128
  %139 = sub nsw i64 %135, %136
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ 0, %138 ], [ %186, %140 ]
  %142 = phi i64 [ %139, %138 ], [ %187, %140 ]
  %143 = getelementptr i16, i16* %95, i64 %141
  %144 = getelementptr i16, i16* %116, i64 %141
  %145 = bitcast i16* %143 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !23
  %147 = getelementptr i16, i16* %143, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  %149 = load <8 x i16>, <8 x i16>* %148, align 2, !alias.scope !23
  %150 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %150, align 2, !alias.scope !26, !noalias !23
  %151 = getelementptr i16, i16* %144, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %149, <8 x i16>* %152, align 2, !alias.scope !26, !noalias !23
  %153 = or i64 %141, 16
  %154 = getelementptr i16, i16* %95, i64 %153
  %155 = getelementptr i16, i16* %116, i64 %153
  %156 = bitcast i16* %154 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !23
  %158 = getelementptr i16, i16* %154, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2, !alias.scope !23
  %161 = bitcast i16* %155 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %161, align 2, !alias.scope !26, !noalias !23
  %162 = getelementptr i16, i16* %155, i64 8
  %163 = bitcast i16* %162 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %163, align 2, !alias.scope !26, !noalias !23
  %164 = or i64 %141, 32
  %165 = getelementptr i16, i16* %95, i64 %164
  %166 = getelementptr i16, i16* %116, i64 %164
  %167 = bitcast i16* %165 to <8 x i16>*
  %168 = load <8 x i16>, <8 x i16>* %167, align 2, !alias.scope !23
  %169 = getelementptr i16, i16* %165, i64 8
  %170 = bitcast i16* %169 to <8 x i16>*
  %171 = load <8 x i16>, <8 x i16>* %170, align 2, !alias.scope !23
  %172 = bitcast i16* %166 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %172, align 2, !alias.scope !26, !noalias !23
  %173 = getelementptr i16, i16* %166, i64 8
  %174 = bitcast i16* %173 to <8 x i16>*
  store <8 x i16> %171, <8 x i16>* %174, align 2, !alias.scope !26, !noalias !23
  %175 = or i64 %141, 48
  %176 = getelementptr i16, i16* %95, i64 %175
  %177 = getelementptr i16, i16* %116, i64 %175
  %178 = bitcast i16* %176 to <8 x i16>*
  %179 = load <8 x i16>, <8 x i16>* %178, align 2, !alias.scope !23
  %180 = getelementptr i16, i16* %176, i64 8
  %181 = bitcast i16* %180 to <8 x i16>*
  %182 = load <8 x i16>, <8 x i16>* %181, align 2, !alias.scope !23
  %183 = bitcast i16* %177 to <8 x i16>*
  store <8 x i16> %179, <8 x i16>* %183, align 2, !alias.scope !26, !noalias !23
  %184 = getelementptr i16, i16* %177, i64 8
  %185 = bitcast i16* %184 to <8 x i16>*
  store <8 x i16> %182, <8 x i16>* %185, align 2, !alias.scope !26, !noalias !23
  %186 = add i64 %141, 64
  %187 = add i64 %142, -4
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %140, !llvm.loop !28

189:                                              ; preds = %140, %128
  %190 = phi i64 [ 0, %128 ], [ %186, %140 ]
  %191 = icmp eq i64 %136, 0
  br i1 %191, label %208, label %192

192:                                              ; preds = %189, %192
  %193 = phi i64 [ %205, %192 ], [ %190, %189 ]
  %194 = phi i64 [ %206, %192 ], [ %136, %189 ]
  %195 = getelementptr i16, i16* %95, i64 %193
  %196 = getelementptr i16, i16* %116, i64 %193
  %197 = bitcast i16* %195 to <8 x i16>*
  %198 = load <8 x i16>, <8 x i16>* %197, align 2, !alias.scope !23
  %199 = getelementptr i16, i16* %195, i64 8
  %200 = bitcast i16* %199 to <8 x i16>*
  %201 = load <8 x i16>, <8 x i16>* %200, align 2, !alias.scope !23
  %202 = bitcast i16* %196 to <8 x i16>*
  store <8 x i16> %198, <8 x i16>* %202, align 2, !alias.scope !26, !noalias !23
  %203 = getelementptr i16, i16* %196, i64 8
  %204 = bitcast i16* %203 to <8 x i16>*
  store <8 x i16> %201, <8 x i16>* %204, align 2, !alias.scope !26, !noalias !23
  %205 = add i64 %193, 16
  %206 = add i64 %194, -1
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %208, label %192, !llvm.loop !29

208:                                              ; preds = %192, %189
  %209 = icmp eq i64 %118, %129
  br i1 %209, label %263, label %210

210:                                              ; preds = %208, %120, %115
  %211 = phi i64 [ %117, %120 ], [ %117, %115 ], [ %130, %208 ]
  %212 = phi i16* [ %95, %120 ], [ %95, %115 ], [ %131, %208 ]
  %213 = phi i16* [ %116, %120 ], [ %116, %115 ], [ %132, %208 ]
  %214 = add i64 %211, -1
  %215 = and i64 %211, 7
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %228, label %217

217:                                              ; preds = %210, %217
  %218 = phi i64 [ %223, %217 ], [ %211, %210 ]
  %219 = phi i16* [ %225, %217 ], [ %212, %210 ]
  %220 = phi i16* [ %224, %217 ], [ %213, %210 ]
  %221 = phi i64 [ %226, %217 ], [ %215, %210 ]
  %222 = load i16, i16* %219, align 2
  store i16 %222, i16* %220, align 2
  %223 = add i64 %218, -1
  %224 = getelementptr inbounds i16, i16* %220, i64 1
  %225 = getelementptr inbounds i16, i16* %219, i64 1
  %226 = add i64 %221, -1
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %217, !llvm.loop !30

228:                                              ; preds = %217, %210
  %229 = phi i64 [ %211, %210 ], [ %223, %217 ]
  %230 = phi i16* [ %212, %210 ], [ %225, %217 ]
  %231 = phi i16* [ %213, %210 ], [ %224, %217 ]
  %232 = icmp ult i64 %214, 7
  br i1 %232, label %263, label %233

233:                                              ; preds = %228, %233
  %234 = phi i64 [ %259, %233 ], [ %229, %228 ]
  %235 = phi i16* [ %261, %233 ], [ %230, %228 ]
  %236 = phi i16* [ %260, %233 ], [ %231, %228 ]
  %237 = load i16, i16* %235, align 2
  store i16 %237, i16* %236, align 2
  %238 = getelementptr inbounds i16, i16* %236, i64 1
  %239 = getelementptr inbounds i16, i16* %235, i64 1
  %240 = load i16, i16* %239, align 2
  store i16 %240, i16* %238, align 2
  %241 = getelementptr inbounds i16, i16* %236, i64 2
  %242 = getelementptr inbounds i16, i16* %235, i64 2
  %243 = load i16, i16* %242, align 2
  store i16 %243, i16* %241, align 2
  %244 = getelementptr inbounds i16, i16* %236, i64 3
  %245 = getelementptr inbounds i16, i16* %235, i64 3
  %246 = load i16, i16* %245, align 2
  store i16 %246, i16* %244, align 2
  %247 = getelementptr inbounds i16, i16* %236, i64 4
  %248 = getelementptr inbounds i16, i16* %235, i64 4
  %249 = load i16, i16* %248, align 2
  store i16 %249, i16* %247, align 2
  %250 = getelementptr inbounds i16, i16* %236, i64 5
  %251 = getelementptr inbounds i16, i16* %235, i64 5
  %252 = load i16, i16* %251, align 2
  store i16 %252, i16* %250, align 2
  %253 = getelementptr inbounds i16, i16* %236, i64 6
  %254 = getelementptr inbounds i16, i16* %235, i64 6
  %255 = load i16, i16* %254, align 2
  store i16 %255, i16* %253, align 2
  %256 = getelementptr inbounds i16, i16* %236, i64 7
  %257 = getelementptr inbounds i16, i16* %235, i64 7
  %258 = load i16, i16* %257, align 2
  store i16 %258, i16* %256, align 2
  %259 = add i64 %234, -8
  %260 = getelementptr inbounds i16, i16* %236, i64 8
  %261 = getelementptr inbounds i16, i16* %235, i64 8
  %262 = icmp eq i64 %259, 0
  br i1 %262, label %263, label %233, !llvm.loop !31

263:                                              ; preds = %228, %233, %208, %91
  %264 = getelementptr inbounds %"class.blink::mojom::PageState", %"class.blink::mojom::PageState"* %78, i64 0, i32 0, i32 0, i32 1
  %265 = load %"class.absl::optional"*, %"class.absl::optional"** %264, align 8
  %266 = getelementptr inbounds %"class.blink::mojom::PageState", %"class.blink::mojom::PageState"* %78, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %267 = load %"class.absl::optional"*, %"class.absl::optional"** %266, align 8
  %268 = icmp ult %"class.absl::optional"* %265, %267
  br i1 %268, label %269, label %280

269:                                              ; preds = %263
  %270 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %265, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %270, i8 0, i64 32, i1 false) #13
  %271 = load i8, i8* %27, align 8, !range !2
  %272 = icmp eq i8 %271, 0
  br i1 %272, label %276, label %273

273:                                              ; preds = %269
  %274 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %265, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %275 = bitcast %"class.std::__1::basic_string"* %274 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %275, i8* align 8 %29, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %270, align 8
  br label %276

276:                                              ; preds = %273, %269
  %277 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %265, i64 1
  %278 = ptrtoint %"class.absl::optional"* %277 to i64
  %279 = bitcast %"class.absl::optional"** %264 to i64*
  store i64 %278, i64* %279, align 8
  br label %281

280:                                              ; preds = %263
  call void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE21__push_back_slow_pathIS9_EEvOT_(%"class.std::__1::vector.40"* %80, %"class.absl::optional"* nonnull dereferenceable(32) %5) #13
  br label %281

281:                                              ; preds = %280, %276
  %282 = load i8, i8* %27, align 8, !range !2
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %290, label %284

284:                                              ; preds = %281
  %285 = load i8, i8* %35, align 1
  %286 = icmp slt i8 %285, 0
  br i1 %286, label %287, label %289

287:                                              ; preds = %284
  %288 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %288) #14
  br label %289

289:                                              ; preds = %287, %284
  store i8 0, i8* %27, align 8
  br label %290

290:                                              ; preds = %289, %281
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #13
  %291 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %79, i64 1
  %292 = icmp eq %"class.absl::optional"* %291, %24
  %293 = load %"class.blink::mojom::PageState"*, %"class.blink::mojom::PageState"** %16, align 8
  br i1 %292, label %36, label %77

294:                                              ; preds = %72, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  %295 = bitcast %"class.std::__1::basic_string.15"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %295) #13
  %296 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %7, i64 0, i32 0, i32 1
  %297 = bitcast %"struct.base::Pickle::Header"** %296 to i8**
  %298 = load i8*, i8** %297, align 8, !noalias !32
  %299 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %7, i64 0, i32 0, i32 2
  %300 = load i64, i64* %299, align 8, !noalias !32
  %301 = bitcast i8* %298 to i32*
  %302 = load i32, i32* %301, align 4, !noalias !32
  %303 = zext i32 %302 to i64
  %304 = add i64 %300, %303
  %305 = icmp ugt i64 %304, -17
  br i1 %305, label %306, label %308

306:                                              ; preds = %294
  %307 = bitcast %"class.std::__1::basic_string.15"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %307) #15
  unreachable

308:                                              ; preds = %294
  %309 = icmp ult i64 %304, 23
  br i1 %309, label %318, label %310

310:                                              ; preds = %308
  %311 = add nuw i64 %304, 16
  %312 = and i64 %311, -16
  %313 = call i8* @_Znwm(i64 %312) #14
  %314 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %313, i8** %314, align 8, !alias.scope !32
  %315 = or i64 %312, -9223372036854775808
  %316 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %315, i64* %316, align 8, !alias.scope !32
  %317 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %304, i64* %317, align 8, !alias.scope !32
  br label %323

318:                                              ; preds = %308
  %319 = trunc i64 %304 to i8
  %320 = bitcast %"class.std::__1::basic_string.15"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %321 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %320, i64 0, i32 1, i32 0
  store i8 %319, i8* %321, align 1, !alias.scope !32
  %322 = icmp eq i64 %304, 0
  br i1 %322, label %325, label %323

323:                                              ; preds = %318, %310
  %324 = phi i8* [ %313, %310 ], [ %295, %318 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %324, i8* align 1 %298, i64 %304, i1 false) #13
  br label %325

325:                                              ; preds = %318, %323
  %326 = phi i8* [ %295, %318 ], [ %324, %323 ]
  %327 = getelementptr inbounds i8, i8* %326, i64 %304
  store i8 0, i8* %327, align 1
  %328 = bitcast %"class.std::__1::basic_string.15"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %329 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %328, i64 0, i32 1, i32 0
  %330 = load i8, i8* %329, align 1
  %331 = icmp slt i8 %330, 0
  br i1 %331, label %332, label %335

332:                                              ; preds = %325
  %333 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = load i8*, i8** %333, align 8
  call void @_ZdlPv(i8* %334) #14
  br label %335

335:                                              ; preds = %332, %325
  %336 = bitcast %"class.std::__1::basic_string.15"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %336, i8* nonnull align 8 %295, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %295) #13
  call void @_ZN4base6PickleD1Ev(%"class.base::Pickle"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink31LegacyEncodePageStateForTestingERKNS_17ExplodedPageStateEiPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"struct.blink::ExplodedPageState"* dereferenceable(536), i32, %"class.std::__1::basic_string.15"* nocapture) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca %"struct.blink::(anonymous namespace)::SerializeObject", align 8
  %6 = alloca %"class.std::__1::basic_string.15", align 8
  %7 = bitcast %"struct.blink::(anonymous namespace)::SerializeObject"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 72, i1 false)
  %8 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %5, i64 0, i32 0
  call void @_ZN4base6PickleC1Ev(%"class.base::Pickle"* nonnull %8) #13
  %9 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %5, i64 0, i32 1
  %10 = bitcast %"class.base::PickleIterator"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 29, i1 false) #13
  %11 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %5, i64 0, i32 2
  store i32 %1, i32* %11, align 8
  %12 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #13
  store i32 %1, i32* %4, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* nonnull %8, i8* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 0
  call fastcc void @_ZN5blink12_GLOBAL__N_117WriteStringVectorERKNSt3__16vectorIN4absl8optionalINS1_12basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEENS8_ISB_EEEEPNS0_15SerializeObjectE(%"class.std::__1::vector.40"* dereferenceable(24) %13, %"struct.blink::(anonymous namespace)::SerializeObject"* nonnull %5) #13
  %14 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %0, i64 0, i32 1
  call fastcc void @_ZN5blink12_GLOBAL__N_115WriteFrameStateERKNS_18ExplodedFrameStateEPNS0_15SerializeObjectEb(%"struct.blink::ExplodedFrameState"* dereferenceable(512) %14, %"struct.blink::(anonymous namespace)::SerializeObject"* nonnull %5) #13
  %15 = bitcast %"class.std::__1::basic_string.15"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %5, i64 0, i32 0, i32 1
  %17 = bitcast %"struct.base::Pickle::Header"** %16 to i8**
  %18 = load i8*, i8** %17, align 8, !noalias !35
  %19 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %5, i64 0, i32 0, i32 2
  %20 = load i64, i64* %19, align 8, !noalias !35
  %21 = bitcast i8* %18 to i32*
  %22 = load i32, i32* %21, align 4, !noalias !35
  %23 = zext i32 %22 to i64
  %24 = add i64 %20, %23
  %25 = icmp ugt i64 %24, -17
  br i1 %25, label %26, label %28

26:                                               ; preds = %3
  %27 = bitcast %"class.std::__1::basic_string.15"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %27) #15
  unreachable

28:                                               ; preds = %3
  %29 = icmp ult i64 %24, 23
  br i1 %29, label %38, label %30

30:                                               ; preds = %28
  %31 = add nuw i64 %24, 16
  %32 = and i64 %31, -16
  %33 = call i8* @_Znwm(i64 %32) #14
  %34 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %33, i8** %34, align 8, !alias.scope !35
  %35 = or i64 %32, -9223372036854775808
  %36 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8, !alias.scope !35
  %37 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %24, i64* %37, align 8, !alias.scope !35
  br label %43

38:                                               ; preds = %28
  %39 = trunc i64 %24 to i8
  %40 = bitcast %"class.std::__1::basic_string.15"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  store i8 %39, i8* %41, align 1, !alias.scope !35
  %42 = icmp eq i64 %24, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %38, %30
  %44 = phi i8* [ %33, %30 ], [ %15, %38 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %44, i8* align 1 %18, i64 %24, i1 false) #13
  br label %45

45:                                               ; preds = %38, %43
  %46 = phi i8* [ %15, %38 ], [ %44, %43 ]
  %47 = getelementptr inbounds i8, i8* %46, i64 %24
  store i8 0, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string.15"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #14
  br label %55

55:                                               ; preds = %52, %45
  %56 = bitcast %"class.std::__1::basic_string.15"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %15, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #13
  call void @_ZN4base6PickleD1Ev(%"class.base::Pickle"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !38
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !38
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !41, !noalias !38
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !41, !noalias !38
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !38
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !38
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !41, !noalias !38
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !41, !noalias !38
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !38
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !38
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !41, !noalias !38
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !41, !noalias !38
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !38
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !38
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !41, !noalias !38
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !41, !noalias !38
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !43

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !38
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !38
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !41, !noalias !38
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !41, !noalias !38
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !44

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !45

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !46

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #15
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #15
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #14
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !47
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !47
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !50, !noalias !47
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !50, !noalias !47
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !47
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !47
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !50, !noalias !47
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !50, !noalias !47
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !47
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !47
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !50, !noalias !47
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !50, !noalias !47
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !47
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !47
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !50, !noalias !47
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !50, !noalias !47
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !52

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !47
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !47
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !50, !noalias !47
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !50, !noalias !47
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !53

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !54

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !55

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !56
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !56
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !59, !noalias !56
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !59, !noalias !56
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !56
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !56
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !59, !noalias !56
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !59, !noalias !56
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !56
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !56
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !59, !noalias !56
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !59, !noalias !56
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !56
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !56
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !59, !noalias !56
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !59, !noalias !56
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !61

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !56
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !56
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !59, !noalias !56
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !59, !noalias !56
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !62

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !63

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !64

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #13
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #15
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #15
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #14
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !65
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !65
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !68, !noalias !65
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !68, !noalias !65
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !65
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !65
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !68, !noalias !65
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !68, !noalias !65
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !65
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !65
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !68, !noalias !65
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !68, !noalias !65
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !65
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !65
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !68, !noalias !65
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !68, !noalias !65
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !70

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !65
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !65
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !68, !noalias !65
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !68, !noalias !65
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !71

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !72

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !73

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !74

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !75

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !76

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !78
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !78
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !81, !noalias !78
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !81, !noalias !78
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !78
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !78
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !81, !noalias !78
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !81, !noalias !78
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !78
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !78
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !81, !noalias !78
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !81, !noalias !78
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !78
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !78
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !81, !noalias !78
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !81, !noalias !78
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !83

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !78
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !78
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !81, !noalias !78
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !81, !noalias !78
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !84

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !85

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !86

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #14
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN4base6PickleC1EPKcm(%"class.base::Pickle"*, i8*, i64) unnamed_addr #7

declare void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"*, %"class.base::Pickle"* dereferenceable(40)) unnamed_addr #7

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_116ReadStringVectorEPNS0_15SerializeObjectEPNSt3__16vectorIN4absl8optionalINS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEENSA_ISD_EEEE(%"struct.blink::(anonymous namespace)::SerializeObject"*, %"class.std::__1::vector.40"*) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.absl::optional", align 8
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #13
  store i32 -1431655766, i32* %5, align 4
  %8 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 1
  %9 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %8, i32* nonnull %5) #13
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #13
  br label %16

12:                                               ; preds = %2
  %13 = load i32, i32* %5, align 4
  %14 = sext i32 %13 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #13
  %15 = icmp ult i32 %13, 67108863
  br i1 %15, label %16, label %26

16:                                               ; preds = %10, %12
  %17 = phi i64 [ 0, %10 ], [ %14, %12 ]
  %18 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 0, i32 1
  %19 = load %"struct.base::Pickle::Header"*, %"struct.base::Pickle::Header"** %18, align 8
  %20 = icmp eq %"struct.base::Pickle::Header"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.base::Pickle::Header", %"struct.base::Pickle::Header"* %19, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = icmp ult i64 %17, %24
  br i1 %25, label %28, label %26

26:                                               ; preds = %16, %21, %12
  %27 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %27, align 4
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi i64 [ %17, %21 ], [ 0, %26 ]
  %30 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %1, i64 0, i32 0, i32 1
  %31 = bitcast %"class.absl::optional"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector.40"* %1 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %32, %34
  %36 = ashr exact i64 %35, 5
  %37 = icmp ugt i64 %29, %36
  %38 = inttoptr i64 %34 to %"class.absl::optional"*
  %39 = inttoptr i64 %32 to %"class.absl::optional"*
  br i1 %37, label %40, label %42

40:                                               ; preds = %28
  %41 = sub nsw i64 %29, %36
  call void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE8__appendEm(%"class.std::__1::vector.40"* %1, i64 %41) #13
  br label %66

42:                                               ; preds = %28
  %43 = icmp ult i64 %29, %36
  br i1 %43, label %44, label %66

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 %29
  %46 = icmp eq %"class.absl::optional"* %45, %39
  br i1 %46, label %65, label %47

47:                                               ; preds = %44, %63
  %48 = phi %"class.absl::optional"* [ %49, %63 ], [ %39, %44 ]
  %49 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %48, i64 -1
  %50 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %48, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %55 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %55, i64 0, i32 1, i32 1
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %53
  %60 = bitcast %"class.std::__1::basic_string"* %54 to i8**
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #14
  br label %62

62:                                               ; preds = %59, %53
  store i8 0, i8* %50, align 8
  br label %63

63:                                               ; preds = %62, %47
  %64 = icmp eq %"class.absl::optional"* %49, %45
  br i1 %64, label %65, label %47

65:                                               ; preds = %63, %44
  store %"class.absl::optional"* %45, %"class.absl::optional"** %30, align 8
  br label %66

66:                                               ; preds = %40, %42, %65
  %67 = icmp eq i64 %29, 0
  br i1 %67, label %86, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast i32* %3 to i8*
  %71 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  %72 = bitcast i8** %4 to i8*
  %73 = bitcast i8** %4 to i16**
  %74 = bitcast %"class.absl::optional"* %6 to i64*
  %75 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %76 = bitcast %union.anon* %75 to i8*
  %77 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %78 = bitcast %"class.std::__1::basic_string"* %77 to i8**
  %79 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %80 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = bitcast %"class.std::__1::basic_string"* %77 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %81, i64 0, i32 1, i32 1
  %83 = bitcast %"class.std::__1::basic_string"* %77 to i16*
  %84 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %1, i64 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  br label %87

86:                                               ; preds = %320, %66
  ret void

87:                                               ; preds = %320, %68
  %88 = phi i64 [ 0, %68 ], [ %321, %320 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #13
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70) #13, !noalias !87
  store i32 -1431655766, i32* %3, align 4, !noalias !87
  %89 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %8, i32* nonnull %3) #13, !noalias !87
  br i1 %89, label %91, label %90

90:                                               ; preds = %87
  store i8 1, i8* %71, align 4, !noalias !87
  br label %106

91:                                               ; preds = %87
  %92 = load i32, i32* %3, align 4, !noalias !87
  %93 = icmp slt i32 %92, 0
  br i1 %93, label %106, label %94

94:                                               ; preds = %91
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #13, !noalias !87
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8, !noalias !87
  %95 = call zeroext i1 @_ZN4base14PickleIterator9ReadBytesEPPKci(%"class.base::PickleIterator"* %8, i8** nonnull %4, i32 %92) #13
  br i1 %95, label %97, label %96

96:                                               ; preds = %94
  store i8 1, i8* %71, align 4, !noalias !87
  br label %102

97:                                               ; preds = %94
  %98 = load i32, i32* %3, align 4, !noalias !87
  %99 = ashr i32 %98, 1
  %100 = load i16*, i16** %73, align 8, !noalias !87
  %101 = bitcast i16* %100 to i8*
  br label %102

102:                                              ; preds = %97, %96
  %103 = phi i32 [ %99, %97 ], [ -1431655766, %96 ]
  %104 = phi i8* [ %101, %97 ], [ null, %96 ]
  %105 = phi i16* [ %100, %97 ], [ null, %96 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #13, !noalias !87
  br label %106

106:                                              ; preds = %102, %91, %90
  %107 = phi i32 [ -1431655766, %91 ], [ %103, %102 ], [ -1431655766, %90 ]
  %108 = phi i8* [ null, %91 ], [ %104, %102 ], [ null, %90 ]
  %109 = phi i16* [ null, %91 ], [ %105, %102 ], [ null, %90 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #13, !noalias !87
  store i64 -6148914691236517376, i64* %74, align 8, !alias.scope !87
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #13, !alias.scope !87
  %110 = icmp eq i16* %109, null
  br i1 %110, label %296, label %111

111:                                              ; preds = %106
  %112 = sext i32 %107 to i64
  %113 = icmp slt i32 %107, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %111
  %115 = bitcast %"class.std::__1::basic_string"* %77 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %115) #15
  unreachable

116:                                              ; preds = %111
  %117 = icmp ult i32 %107, 11
  br i1 %117, label %128, label %118

118:                                              ; preds = %116
  %119 = add nuw nsw i64 %112, 8
  %120 = and i64 %119, -8
  %121 = icmp slt i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %118
  call void @abort() #15
  unreachable

123:                                              ; preds = %118
  %124 = shl nsw i64 %120, 1
  %125 = call i8* @_Znwm(i64 %124) #14
  %126 = bitcast i8* %125 to i16*
  store i8* %125, i8** %78, align 8
  %127 = or i64 %120, -9223372036854775808
  store i64 %127, i64* %79, align 8
  store i64 %112, i64* %80, align 8
  br label %131

128:                                              ; preds = %116
  %129 = trunc i32 %107 to i8
  store i8 %129, i8* %82, align 1
  %130 = icmp eq i32 %107, 0
  br i1 %130, label %276, label %131

131:                                              ; preds = %128, %123
  %132 = phi i16* [ %126, %123 ], [ %83, %128 ]
  %133 = icmp ult i32 %107, 16
  br i1 %133, label %223, label %134

134:                                              ; preds = %131
  %135 = getelementptr i16, i16* %132, i64 %112
  %136 = bitcast i16* %135 to i8*
  %137 = getelementptr i16, i16* %109, i64 %112
  %138 = icmp ult i16* %132, %137
  %139 = icmp ult i8* %108, %136
  %140 = and i1 %138, %139
  br i1 %140, label %223, label %141

141:                                              ; preds = %134
  %142 = and i64 %112, -16
  %143 = sub nsw i64 %112, %142
  %144 = getelementptr i16, i16* %109, i64 %142
  %145 = getelementptr i16, i16* %132, i64 %142
  %146 = add nsw i64 %142, -16
  %147 = lshr exact i64 %146, 4
  %148 = add nuw nsw i64 %147, 1
  %149 = and i64 %148, 3
  %150 = icmp ult i64 %146, 48
  br i1 %150, label %202, label %151

151:                                              ; preds = %141
  %152 = sub nsw i64 %148, %149
  br label %153

153:                                              ; preds = %153, %151
  %154 = phi i64 [ 0, %151 ], [ %199, %153 ]
  %155 = phi i64 [ %152, %151 ], [ %200, %153 ]
  %156 = getelementptr i16, i16* %109, i64 %154
  %157 = getelementptr i16, i16* %132, i64 %154
  %158 = bitcast i16* %156 to <8 x i16>*
  %159 = load <8 x i16>, <8 x i16>* %158, align 2, !alias.scope !90
  %160 = getelementptr i16, i16* %156, i64 8
  %161 = bitcast i16* %160 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !90
  %163 = bitcast i16* %157 to <8 x i16>*
  store <8 x i16> %159, <8 x i16>* %163, align 2, !alias.scope !93, !noalias !90
  %164 = getelementptr i16, i16* %157, i64 8
  %165 = bitcast i16* %164 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %165, align 2, !alias.scope !93, !noalias !90
  %166 = or i64 %154, 16
  %167 = getelementptr i16, i16* %109, i64 %166
  %168 = getelementptr i16, i16* %132, i64 %166
  %169 = bitcast i16* %167 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !90
  %171 = getelementptr i16, i16* %167, i64 8
  %172 = bitcast i16* %171 to <8 x i16>*
  %173 = load <8 x i16>, <8 x i16>* %172, align 2, !alias.scope !90
  %174 = bitcast i16* %168 to <8 x i16>*
  store <8 x i16> %170, <8 x i16>* %174, align 2, !alias.scope !93, !noalias !90
  %175 = getelementptr i16, i16* %168, i64 8
  %176 = bitcast i16* %175 to <8 x i16>*
  store <8 x i16> %173, <8 x i16>* %176, align 2, !alias.scope !93, !noalias !90
  %177 = or i64 %154, 32
  %178 = getelementptr i16, i16* %109, i64 %177
  %179 = getelementptr i16, i16* %132, i64 %177
  %180 = bitcast i16* %178 to <8 x i16>*
  %181 = load <8 x i16>, <8 x i16>* %180, align 2, !alias.scope !90
  %182 = getelementptr i16, i16* %178, i64 8
  %183 = bitcast i16* %182 to <8 x i16>*
  %184 = load <8 x i16>, <8 x i16>* %183, align 2, !alias.scope !90
  %185 = bitcast i16* %179 to <8 x i16>*
  store <8 x i16> %181, <8 x i16>* %185, align 2, !alias.scope !93, !noalias !90
  %186 = getelementptr i16, i16* %179, i64 8
  %187 = bitcast i16* %186 to <8 x i16>*
  store <8 x i16> %184, <8 x i16>* %187, align 2, !alias.scope !93, !noalias !90
  %188 = or i64 %154, 48
  %189 = getelementptr i16, i16* %109, i64 %188
  %190 = getelementptr i16, i16* %132, i64 %188
  %191 = bitcast i16* %189 to <8 x i16>*
  %192 = load <8 x i16>, <8 x i16>* %191, align 2, !alias.scope !90
  %193 = getelementptr i16, i16* %189, i64 8
  %194 = bitcast i16* %193 to <8 x i16>*
  %195 = load <8 x i16>, <8 x i16>* %194, align 2, !alias.scope !90
  %196 = bitcast i16* %190 to <8 x i16>*
  store <8 x i16> %192, <8 x i16>* %196, align 2, !alias.scope !93, !noalias !90
  %197 = getelementptr i16, i16* %190, i64 8
  %198 = bitcast i16* %197 to <8 x i16>*
  store <8 x i16> %195, <8 x i16>* %198, align 2, !alias.scope !93, !noalias !90
  %199 = add i64 %154, 64
  %200 = add i64 %155, -4
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %202, label %153, !llvm.loop !95

202:                                              ; preds = %153, %141
  %203 = phi i64 [ 0, %141 ], [ %199, %153 ]
  %204 = icmp eq i64 %149, 0
  br i1 %204, label %221, label %205

205:                                              ; preds = %202, %205
  %206 = phi i64 [ %218, %205 ], [ %203, %202 ]
  %207 = phi i64 [ %219, %205 ], [ %149, %202 ]
  %208 = getelementptr i16, i16* %109, i64 %206
  %209 = getelementptr i16, i16* %132, i64 %206
  %210 = bitcast i16* %208 to <8 x i16>*
  %211 = load <8 x i16>, <8 x i16>* %210, align 2, !alias.scope !90
  %212 = getelementptr i16, i16* %208, i64 8
  %213 = bitcast i16* %212 to <8 x i16>*
  %214 = load <8 x i16>, <8 x i16>* %213, align 2, !alias.scope !90
  %215 = bitcast i16* %209 to <8 x i16>*
  store <8 x i16> %211, <8 x i16>* %215, align 2, !alias.scope !93, !noalias !90
  %216 = getelementptr i16, i16* %209, i64 8
  %217 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %214, <8 x i16>* %217, align 2, !alias.scope !93, !noalias !90
  %218 = add i64 %206, 16
  %219 = add i64 %207, -1
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %221, label %205, !llvm.loop !96

221:                                              ; preds = %205, %202
  %222 = icmp eq i64 %142, %112
  br i1 %222, label %276, label %223

223:                                              ; preds = %221, %134, %131
  %224 = phi i64 [ %112, %134 ], [ %112, %131 ], [ %143, %221 ]
  %225 = phi i16* [ %109, %134 ], [ %109, %131 ], [ %144, %221 ]
  %226 = phi i16* [ %132, %134 ], [ %132, %131 ], [ %145, %221 ]
  %227 = add nsw i64 %224, -1
  %228 = and i64 %224, 7
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %241, label %230

230:                                              ; preds = %223, %230
  %231 = phi i64 [ %236, %230 ], [ %224, %223 ]
  %232 = phi i16* [ %238, %230 ], [ %225, %223 ]
  %233 = phi i16* [ %237, %230 ], [ %226, %223 ]
  %234 = phi i64 [ %239, %230 ], [ %228, %223 ]
  %235 = load i16, i16* %232, align 2
  store i16 %235, i16* %233, align 2
  %236 = add i64 %231, -1
  %237 = getelementptr inbounds i16, i16* %233, i64 1
  %238 = getelementptr inbounds i16, i16* %232, i64 1
  %239 = add i64 %234, -1
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %241, label %230, !llvm.loop !97

241:                                              ; preds = %230, %223
  %242 = phi i64 [ %224, %223 ], [ %236, %230 ]
  %243 = phi i16* [ %225, %223 ], [ %238, %230 ]
  %244 = phi i16* [ %226, %223 ], [ %237, %230 ]
  %245 = icmp ult i64 %227, 7
  br i1 %245, label %276, label %246

246:                                              ; preds = %241, %246
  %247 = phi i64 [ %272, %246 ], [ %242, %241 ]
  %248 = phi i16* [ %274, %246 ], [ %243, %241 ]
  %249 = phi i16* [ %273, %246 ], [ %244, %241 ]
  %250 = load i16, i16* %248, align 2
  store i16 %250, i16* %249, align 2
  %251 = getelementptr inbounds i16, i16* %249, i64 1
  %252 = getelementptr inbounds i16, i16* %248, i64 1
  %253 = load i16, i16* %252, align 2
  store i16 %253, i16* %251, align 2
  %254 = getelementptr inbounds i16, i16* %249, i64 2
  %255 = getelementptr inbounds i16, i16* %248, i64 2
  %256 = load i16, i16* %255, align 2
  store i16 %256, i16* %254, align 2
  %257 = getelementptr inbounds i16, i16* %249, i64 3
  %258 = getelementptr inbounds i16, i16* %248, i64 3
  %259 = load i16, i16* %258, align 2
  store i16 %259, i16* %257, align 2
  %260 = getelementptr inbounds i16, i16* %249, i64 4
  %261 = getelementptr inbounds i16, i16* %248, i64 4
  %262 = load i16, i16* %261, align 2
  store i16 %262, i16* %260, align 2
  %263 = getelementptr inbounds i16, i16* %249, i64 5
  %264 = getelementptr inbounds i16, i16* %248, i64 5
  %265 = load i16, i16* %264, align 2
  store i16 %265, i16* %263, align 2
  %266 = getelementptr inbounds i16, i16* %249, i64 6
  %267 = getelementptr inbounds i16, i16* %248, i64 6
  %268 = load i16, i16* %267, align 2
  store i16 %268, i16* %266, align 2
  %269 = getelementptr inbounds i16, i16* %249, i64 7
  %270 = getelementptr inbounds i16, i16* %248, i64 7
  %271 = load i16, i16* %270, align 2
  store i16 %271, i16* %269, align 2
  %272 = add i64 %247, -8
  %273 = getelementptr inbounds i16, i16* %249, i64 8
  %274 = getelementptr inbounds i16, i16* %248, i64 8
  %275 = icmp eq i64 %272, 0
  br i1 %275, label %276, label %246, !llvm.loop !98

276:                                              ; preds = %241, %246, %221, %128
  %277 = phi i16* [ %83, %128 ], [ %132, %221 ], [ %132, %246 ], [ %132, %241 ]
  %278 = getelementptr inbounds i16, i16* %277, i64 %112
  store i16 0, i16* %278, align 2
  store i8 1, i8* %69, align 8
  %279 = load %"class.absl::optional"*, %"class.absl::optional"** %84, align 8
  %280 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %279, i64 %88, i32 0, i32 0, i32 0, i32 0
  %281 = load i8, i8* %280, align 8, !range !2
  %282 = icmp eq i8 %281, 0
  %283 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %279, i64 %88, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %282, label %294, label %284

284:                                              ; preds = %276
  %285 = bitcast %"class.std::__1::basic_string"* %283 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %286 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %285, i64 0, i32 1, i32 1
  %287 = load i8, i8* %286, align 1
  %288 = icmp slt i8 %287, 0
  br i1 %288, label %289, label %292

289:                                              ; preds = %284
  %290 = bitcast %"class.std::__1::basic_string"* %283 to i8**
  %291 = load i8*, i8** %290, align 8
  call void @_ZdlPv(i8* %291) #14
  br label %292

292:                                              ; preds = %289, %284
  %293 = bitcast %"class.std::__1::basic_string"* %283 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %293, i8* align 8 %85, i64 24, i1 false) #13
  store i8 0, i8* %82, align 1
  store i16 0, i16* %83, align 8
  br label %311

294:                                              ; preds = %276
  %295 = bitcast %"class.std::__1::basic_string"* %283 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %295, i8* align 8 %85, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %280, align 8
  br label %311

296:                                              ; preds = %106
  %297 = load %"class.absl::optional"*, %"class.absl::optional"** %84, align 8
  %298 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %297, i64 %88, i32 0, i32 0, i32 0, i32 0
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  br i1 %300, label %311, label %301

301:                                              ; preds = %296
  %302 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %297, i64 %88, i32 0, i32 0, i32 0, i32 1, i32 0
  %303 = bitcast %"class.std::__1::basic_string"* %302 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %304 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %303, i64 0, i32 1, i32 1
  %305 = load i8, i8* %304, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %301
  %308 = bitcast %"class.std::__1::basic_string"* %302 to i8**
  %309 = load i8*, i8** %308, align 8
  call void @_ZdlPv(i8* %309) #14
  br label %310

310:                                              ; preds = %307, %301
  store i8 0, i8* %298, align 8
  br label %311

311:                                              ; preds = %292, %294, %296, %310
  %312 = load i8, i8* %69, align 8, !range !2
  %313 = icmp eq i8 %312, 0
  br i1 %313, label %320, label %314

314:                                              ; preds = %311
  %315 = load i8, i8* %82, align 1
  %316 = icmp slt i8 %315, 0
  br i1 %316, label %317, label %319

317:                                              ; preds = %314
  %318 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %318) #14
  br label %319

319:                                              ; preds = %317, %314
  store i8 0, i8* %69, align 8
  br label %320

320:                                              ; preds = %311, %319
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #13
  %321 = add nuw i64 %88, 1
  %322 = icmp eq i64 %321, %29
  br i1 %322, label %86, label %87
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_114ReadFrameStateEPNS0_15SerializeObjectEbPNSt3__16vectorINS_16UniqueNameHelper11ReplacementENS3_9allocatorIS6_EEEEPNS_18ExplodedFrameStateE(%"struct.blink::(anonymous namespace)::SerializeObject"*, i1 zeroext, %"class.std::__1::vector.57"*, %"struct.blink::ExplodedFrameState"*) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.std::__1::basic_string.15", align 8
  %12 = alloca %"class.base::Time", align 8
  %13 = alloca %"class.base::FilePath", align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i64, align 8
  %23 = alloca %"class.std::__1::basic_string.15", align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca %"class.absl::optional", align 8
  %27 = alloca %class.GURL, align 8
  %28 = alloca i8, align 1
  %29 = alloca i32, align 4
  %30 = alloca i8*, align 8
  %31 = alloca i8, align 1
  %32 = alloca i32, align 4
  %33 = alloca i8*, align 8
  %34 = alloca i32, align 4
  %35 = alloca i8*, align 8
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i64, align 8
  %39 = alloca i64, align 8
  %40 = alloca i64, align 8
  %41 = alloca i64, align 8
  %42 = alloca i8*, align 8
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i8*, align 8
  %46 = alloca i32, align 4
  %47 = alloca i8, align 1
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i8, align 1
  %51 = alloca i8*, align 8
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i8*, align 8
  %55 = alloca i32, align 4
  %56 = alloca i8*, align 8
  %57 = alloca i32, align 4
  %58 = alloca i8*, align 8
  %59 = alloca i32, align 4
  %60 = alloca i8*, align 8
  %61 = alloca i32, align 4
  %62 = alloca i8*, align 8
  %63 = alloca i32, align 4
  %64 = alloca i8*, align 8
  %65 = alloca i32, align 4
  %66 = alloca %"class.absl::optional", align 8
  %67 = alloca %"class.absl::optional", align 8
  %68 = alloca %"class.absl::optional", align 8
  %69 = alloca %"class.std::__1::basic_string", align 8
  %70 = alloca %"class.std::__1::basic_string.15", align 8
  %71 = alloca %"class.std::__1::basic_string.15", align 8
  %72 = alloca %"class.absl::optional", align 8
  %73 = alloca %"class.absl::optional", align 8
  %74 = alloca %"class.absl::optional", align 8
  %75 = alloca %"class.absl::optional", align 8
  %76 = alloca %"class.absl::optional", align 8
  %77 = alloca %"class.absl::optional", align 8
  %78 = alloca %"class.absl::optional", align 8
  %79 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 2
  %80 = load i32, i32* %79, align 8
  %81 = icmp sgt i32 %80, 13
  %82 = or i1 %81, %1
  br i1 %82, label %90, label %83

83:                                               ; preds = %4
  %84 = bitcast i32* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #13
  store i32 -1431655766, i32* %65, align 4
  %85 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 1
  %86 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %85, i32* nonnull %65) #13
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %88, align 4
  br label %89

89:                                               ; preds = %83, %87
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #13
  br label %90

90:                                               ; preds = %4, %89
  %91 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %66, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %91) #13
  %92 = bitcast i32* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %92) #13, !noalias !99
  store i32 -1431655766, i32* %63, align 4, !noalias !99
  %93 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 1
  %94 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %93, i32* nonnull %63) #13, !noalias !99
  br i1 %94, label %97, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %96, align 4, !noalias !99
  br label %115

97:                                               ; preds = %90
  %98 = load i32, i32* %63, align 4, !noalias !99
  %99 = icmp slt i32 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %97
  %101 = bitcast i8** %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #13, !noalias !99
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %64, align 8, !noalias !99
  %102 = call zeroext i1 @_ZN4base14PickleIterator9ReadBytesEPPKci(%"class.base::PickleIterator"* %93, i8** nonnull %64, i32 %98) #13
  br i1 %102, label %105, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %104, align 4, !noalias !99
  br label %111

105:                                              ; preds = %100
  %106 = load i32, i32* %63, align 4, !noalias !99
  %107 = ashr i32 %106, 1
  %108 = bitcast i8** %64 to i16**
  %109 = load i16*, i16** %108, align 8, !noalias !99
  %110 = bitcast i16* %109 to i8*
  br label %111

111:                                              ; preds = %105, %103
  %112 = phi i32 [ %107, %105 ], [ -1431655766, %103 ]
  %113 = phi i8* [ %110, %105 ], [ null, %103 ]
  %114 = phi i16* [ %109, %105 ], [ null, %103 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #13, !noalias !99
  br label %115

115:                                              ; preds = %111, %97, %95
  %116 = phi i32 [ -1431655766, %97 ], [ %112, %111 ], [ -1431655766, %95 ]
  %117 = phi i8* [ null, %97 ], [ %113, %111 ], [ null, %95 ]
  %118 = phi i16* [ null, %97 ], [ %114, %111 ], [ null, %95 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92) #13, !noalias !99
  %119 = bitcast %"class.absl::optional"* %66 to i64*
  store i64 -6148914691236517376, i64* %119, align 8, !alias.scope !99
  %120 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %66, i64 0, i32 0, i32 0, i32 0, i32 1
  %121 = bitcast %union.anon* %120 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 24, i1 false) #13, !alias.scope !99
  %122 = icmp eq i16* %118, null
  br i1 %122, label %319, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %66, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %125 = sext i32 %116 to i64
  %126 = icmp slt i32 %116, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %123
  %128 = bitcast %"class.std::__1::basic_string"* %124 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %128) #15
  unreachable

129:                                              ; preds = %123
  %130 = icmp ult i32 %116, 11
  br i1 %130, label %144, label %131

131:                                              ; preds = %129
  %132 = add nuw nsw i64 %125, 8
  %133 = and i64 %132, -8
  %134 = icmp slt i64 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %131
  call void @abort() #15
  unreachable

136:                                              ; preds = %131
  %137 = shl nsw i64 %133, 1
  %138 = call i8* @_Znwm(i64 %137) #14
  %139 = bitcast i8* %138 to i16*
  %140 = bitcast %"class.std::__1::basic_string"* %124 to i8**
  store i8* %138, i8** %140, align 8
  %141 = or i64 %133, -9223372036854775808
  %142 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %66, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %66, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %125, i64* %143, align 8
  br label %150

144:                                              ; preds = %129
  %145 = trunc i32 %116 to i8
  %146 = bitcast %"class.std::__1::basic_string"* %124 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %146, i64 0, i32 1, i32 1
  store i8 %145, i8* %147, align 1
  %148 = bitcast %"class.std::__1::basic_string"* %124 to i16*
  %149 = icmp eq i32 %116, 0
  br i1 %149, label %295, label %150

150:                                              ; preds = %144, %136
  %151 = phi i16* [ %139, %136 ], [ %148, %144 ]
  %152 = icmp ult i32 %116, 16
  br i1 %152, label %242, label %153

153:                                              ; preds = %150
  %154 = getelementptr i16, i16* %151, i64 %125
  %155 = bitcast i16* %154 to i8*
  %156 = getelementptr i16, i16* %118, i64 %125
  %157 = icmp ult i16* %151, %156
  %158 = icmp ult i8* %117, %155
  %159 = and i1 %157, %158
  br i1 %159, label %242, label %160

160:                                              ; preds = %153
  %161 = and i64 %125, -16
  %162 = sub nsw i64 %125, %161
  %163 = getelementptr i16, i16* %118, i64 %161
  %164 = getelementptr i16, i16* %151, i64 %161
  %165 = add nsw i64 %161, -16
  %166 = lshr exact i64 %165, 4
  %167 = add nuw nsw i64 %166, 1
  %168 = and i64 %167, 3
  %169 = icmp ult i64 %165, 48
  br i1 %169, label %221, label %170

170:                                              ; preds = %160
  %171 = sub nsw i64 %167, %168
  br label %172

172:                                              ; preds = %172, %170
  %173 = phi i64 [ 0, %170 ], [ %218, %172 ]
  %174 = phi i64 [ %171, %170 ], [ %219, %172 ]
  %175 = getelementptr i16, i16* %118, i64 %173
  %176 = getelementptr i16, i16* %151, i64 %173
  %177 = bitcast i16* %175 to <8 x i16>*
  %178 = load <8 x i16>, <8 x i16>* %177, align 2, !alias.scope !102
  %179 = getelementptr i16, i16* %175, i64 8
  %180 = bitcast i16* %179 to <8 x i16>*
  %181 = load <8 x i16>, <8 x i16>* %180, align 2, !alias.scope !102
  %182 = bitcast i16* %176 to <8 x i16>*
  store <8 x i16> %178, <8 x i16>* %182, align 2, !alias.scope !105, !noalias !102
  %183 = getelementptr i16, i16* %176, i64 8
  %184 = bitcast i16* %183 to <8 x i16>*
  store <8 x i16> %181, <8 x i16>* %184, align 2, !alias.scope !105, !noalias !102
  %185 = or i64 %173, 16
  %186 = getelementptr i16, i16* %118, i64 %185
  %187 = getelementptr i16, i16* %151, i64 %185
  %188 = bitcast i16* %186 to <8 x i16>*
  %189 = load <8 x i16>, <8 x i16>* %188, align 2, !alias.scope !102
  %190 = getelementptr i16, i16* %186, i64 8
  %191 = bitcast i16* %190 to <8 x i16>*
  %192 = load <8 x i16>, <8 x i16>* %191, align 2, !alias.scope !102
  %193 = bitcast i16* %187 to <8 x i16>*
  store <8 x i16> %189, <8 x i16>* %193, align 2, !alias.scope !105, !noalias !102
  %194 = getelementptr i16, i16* %187, i64 8
  %195 = bitcast i16* %194 to <8 x i16>*
  store <8 x i16> %192, <8 x i16>* %195, align 2, !alias.scope !105, !noalias !102
  %196 = or i64 %173, 32
  %197 = getelementptr i16, i16* %118, i64 %196
  %198 = getelementptr i16, i16* %151, i64 %196
  %199 = bitcast i16* %197 to <8 x i16>*
  %200 = load <8 x i16>, <8 x i16>* %199, align 2, !alias.scope !102
  %201 = getelementptr i16, i16* %197, i64 8
  %202 = bitcast i16* %201 to <8 x i16>*
  %203 = load <8 x i16>, <8 x i16>* %202, align 2, !alias.scope !102
  %204 = bitcast i16* %198 to <8 x i16>*
  store <8 x i16> %200, <8 x i16>* %204, align 2, !alias.scope !105, !noalias !102
  %205 = getelementptr i16, i16* %198, i64 8
  %206 = bitcast i16* %205 to <8 x i16>*
  store <8 x i16> %203, <8 x i16>* %206, align 2, !alias.scope !105, !noalias !102
  %207 = or i64 %173, 48
  %208 = getelementptr i16, i16* %118, i64 %207
  %209 = getelementptr i16, i16* %151, i64 %207
  %210 = bitcast i16* %208 to <8 x i16>*
  %211 = load <8 x i16>, <8 x i16>* %210, align 2, !alias.scope !102
  %212 = getelementptr i16, i16* %208, i64 8
  %213 = bitcast i16* %212 to <8 x i16>*
  %214 = load <8 x i16>, <8 x i16>* %213, align 2, !alias.scope !102
  %215 = bitcast i16* %209 to <8 x i16>*
  store <8 x i16> %211, <8 x i16>* %215, align 2, !alias.scope !105, !noalias !102
  %216 = getelementptr i16, i16* %209, i64 8
  %217 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %214, <8 x i16>* %217, align 2, !alias.scope !105, !noalias !102
  %218 = add i64 %173, 64
  %219 = add i64 %174, -4
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %221, label %172, !llvm.loop !107

221:                                              ; preds = %172, %160
  %222 = phi i64 [ 0, %160 ], [ %218, %172 ]
  %223 = icmp eq i64 %168, 0
  br i1 %223, label %240, label %224

224:                                              ; preds = %221, %224
  %225 = phi i64 [ %237, %224 ], [ %222, %221 ]
  %226 = phi i64 [ %238, %224 ], [ %168, %221 ]
  %227 = getelementptr i16, i16* %118, i64 %225
  %228 = getelementptr i16, i16* %151, i64 %225
  %229 = bitcast i16* %227 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !102
  %231 = getelementptr i16, i16* %227, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !102
  %234 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !105, !noalias !102
  %235 = getelementptr i16, i16* %228, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !105, !noalias !102
  %237 = add i64 %225, 16
  %238 = add i64 %226, -1
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %240, label %224, !llvm.loop !108

240:                                              ; preds = %224, %221
  %241 = icmp eq i64 %161, %125
  br i1 %241, label %295, label %242

242:                                              ; preds = %240, %153, %150
  %243 = phi i64 [ %125, %153 ], [ %125, %150 ], [ %162, %240 ]
  %244 = phi i16* [ %118, %153 ], [ %118, %150 ], [ %163, %240 ]
  %245 = phi i16* [ %151, %153 ], [ %151, %150 ], [ %164, %240 ]
  %246 = add nsw i64 %243, -1
  %247 = and i64 %243, 7
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %260, label %249

249:                                              ; preds = %242, %249
  %250 = phi i64 [ %255, %249 ], [ %243, %242 ]
  %251 = phi i16* [ %257, %249 ], [ %244, %242 ]
  %252 = phi i16* [ %256, %249 ], [ %245, %242 ]
  %253 = phi i64 [ %258, %249 ], [ %247, %242 ]
  %254 = load i16, i16* %251, align 2
  store i16 %254, i16* %252, align 2
  %255 = add i64 %250, -1
  %256 = getelementptr inbounds i16, i16* %252, i64 1
  %257 = getelementptr inbounds i16, i16* %251, i64 1
  %258 = add i64 %253, -1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %249, !llvm.loop !109

260:                                              ; preds = %249, %242
  %261 = phi i64 [ %243, %242 ], [ %255, %249 ]
  %262 = phi i16* [ %244, %242 ], [ %257, %249 ]
  %263 = phi i16* [ %245, %242 ], [ %256, %249 ]
  %264 = icmp ult i64 %246, 7
  br i1 %264, label %295, label %265

265:                                              ; preds = %260, %265
  %266 = phi i64 [ %291, %265 ], [ %261, %260 ]
  %267 = phi i16* [ %293, %265 ], [ %262, %260 ]
  %268 = phi i16* [ %292, %265 ], [ %263, %260 ]
  %269 = load i16, i16* %267, align 2
  store i16 %269, i16* %268, align 2
  %270 = getelementptr inbounds i16, i16* %268, i64 1
  %271 = getelementptr inbounds i16, i16* %267, i64 1
  %272 = load i16, i16* %271, align 2
  store i16 %272, i16* %270, align 2
  %273 = getelementptr inbounds i16, i16* %268, i64 2
  %274 = getelementptr inbounds i16, i16* %267, i64 2
  %275 = load i16, i16* %274, align 2
  store i16 %275, i16* %273, align 2
  %276 = getelementptr inbounds i16, i16* %268, i64 3
  %277 = getelementptr inbounds i16, i16* %267, i64 3
  %278 = load i16, i16* %277, align 2
  store i16 %278, i16* %276, align 2
  %279 = getelementptr inbounds i16, i16* %268, i64 4
  %280 = getelementptr inbounds i16, i16* %267, i64 4
  %281 = load i16, i16* %280, align 2
  store i16 %281, i16* %279, align 2
  %282 = getelementptr inbounds i16, i16* %268, i64 5
  %283 = getelementptr inbounds i16, i16* %267, i64 5
  %284 = load i16, i16* %283, align 2
  store i16 %284, i16* %282, align 2
  %285 = getelementptr inbounds i16, i16* %268, i64 6
  %286 = getelementptr inbounds i16, i16* %267, i64 6
  %287 = load i16, i16* %286, align 2
  store i16 %287, i16* %285, align 2
  %288 = getelementptr inbounds i16, i16* %268, i64 7
  %289 = getelementptr inbounds i16, i16* %267, i64 7
  %290 = load i16, i16* %289, align 2
  store i16 %290, i16* %288, align 2
  %291 = add i64 %266, -8
  %292 = getelementptr inbounds i16, i16* %268, i64 8
  %293 = getelementptr inbounds i16, i16* %267, i64 8
  %294 = icmp eq i64 %291, 0
  br i1 %294, label %295, label %265, !llvm.loop !110

295:                                              ; preds = %260, %265, %240, %144
  %296 = phi i16* [ %148, %144 ], [ %151, %240 ], [ %151, %265 ], [ %151, %260 ]
  %297 = getelementptr inbounds i16, i16* %296, i64 %125
  store i16 0, i16* %297, align 2
  store i8 1, i8* %91, align 8
  %298 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %300, label %316, label %302

302:                                              ; preds = %295
  %303 = bitcast %"class.std::__1::basic_string"* %301 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %304 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %303, i64 0, i32 1, i32 1
  %305 = load i8, i8* %304, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %302
  %308 = bitcast %"class.std::__1::basic_string"* %301 to i8**
  %309 = load i8*, i8** %308, align 8
  call void @_ZdlPv(i8* %309) #14
  br label %310

310:                                              ; preds = %307, %302
  %311 = bitcast %"class.std::__1::basic_string"* %301 to i8*
  %312 = bitcast %"class.std::__1::basic_string"* %124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %311, i8* align 8 %312, i64 24, i1 false) #13
  %313 = bitcast %"class.std::__1::basic_string"* %124 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %314 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %313, i64 0, i32 1, i32 1
  store i8 0, i8* %314, align 1
  %315 = bitcast %"class.std::__1::basic_string"* %124 to i16*
  store i16 0, i16* %315, align 8
  br label %333

316:                                              ; preds = %295
  %317 = bitcast %"class.std::__1::basic_string"* %301 to i8*
  %318 = bitcast %"class.std::__1::basic_string"* %124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %317, i8* align 8 %318, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %318, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %298, align 8
  br label %333

319:                                              ; preds = %115
  %320 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %321 = load i8, i8* %320, align 8, !range !2
  %322 = icmp eq i8 %321, 0
  br i1 %322, label %333, label %323

323:                                              ; preds = %319
  %324 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %325 = bitcast %"class.std::__1::basic_string"* %324 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %326 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %325, i64 0, i32 1, i32 1
  %327 = load i8, i8* %326, align 1
  %328 = icmp slt i8 %327, 0
  br i1 %328, label %329, label %332

329:                                              ; preds = %323
  %330 = bitcast %"class.std::__1::basic_string"* %324 to i8**
  %331 = load i8*, i8** %330, align 8
  call void @_ZdlPv(i8* %331) #14
  br label %332

332:                                              ; preds = %329, %323
  store i8 0, i8* %320, align 8
  br label %333

333:                                              ; preds = %310, %316, %319, %332
  %334 = load i8, i8* %91, align 8, !range !2
  %335 = icmp eq i8 %334, 0
  br i1 %335, label %346, label %336

336:                                              ; preds = %333
  %337 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %66, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %338 = bitcast %"class.std::__1::basic_string"* %337 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %339 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %338, i64 0, i32 1, i32 1
  %340 = load i8, i8* %339, align 1
  %341 = icmp slt i8 %340, 0
  br i1 %341, label %342, label %345

342:                                              ; preds = %336
  %343 = bitcast %"class.std::__1::basic_string"* %337 to i8**
  %344 = load i8*, i8** %343, align 8
  call void @_ZdlPv(i8* %344) #14
  br label %345

345:                                              ; preds = %342, %336
  store i8 0, i8* %91, align 8
  br label %346

346:                                              ; preds = %333, %345
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %91) #13
  %347 = load i32, i32* %79, align 8
  %348 = icmp slt i32 %347, 19
  br i1 %348, label %349, label %565

349:                                              ; preds = %346
  %350 = bitcast i32* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %350) #13, !noalias !111
  store i32 -1431655766, i32* %61, align 4, !noalias !111
  %351 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %93, i32* nonnull %61) #13, !noalias !111
  br i1 %351, label %354, label %352

352:                                              ; preds = %349
  %353 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %353, align 4, !noalias !111
  br label %372

354:                                              ; preds = %349
  %355 = load i32, i32* %61, align 4, !noalias !111
  %356 = icmp slt i32 %355, 0
  br i1 %356, label %372, label %357

357:                                              ; preds = %354
  %358 = bitcast i8** %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %358) #13, !noalias !111
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %62, align 8, !noalias !111
  %359 = call zeroext i1 @_ZN4base14PickleIterator9ReadBytesEPPKci(%"class.base::PickleIterator"* %93, i8** nonnull %62, i32 %355) #13
  br i1 %359, label %362, label %360

360:                                              ; preds = %357
  %361 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %361, align 4, !noalias !111
  br label %368

362:                                              ; preds = %357
  %363 = load i32, i32* %61, align 4, !noalias !111
  %364 = ashr i32 %363, 1
  %365 = bitcast i8** %62 to i16**
  %366 = load i16*, i16** %365, align 8, !noalias !111
  %367 = bitcast i16* %366 to i8*
  br label %368

368:                                              ; preds = %362, %360
  %369 = phi i32 [ %364, %362 ], [ -1431655766, %360 ]
  %370 = phi i8* [ %367, %362 ], [ null, %360 ]
  %371 = phi i16* [ %366, %362 ], [ null, %360 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %358) #13, !noalias !111
  br label %372

372:                                              ; preds = %368, %354, %352
  %373 = phi i32 [ -1431655766, %354 ], [ %369, %368 ], [ -1431655766, %352 ]
  %374 = phi i8* [ null, %354 ], [ %370, %368 ], [ null, %352 ]
  %375 = phi i16* [ null, %354 ], [ %371, %368 ], [ null, %352 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %350) #13, !noalias !111
  %376 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %377 = bitcast %"class.absl::optional"* %67 to i64*
  store i64 -6148914691236517376, i64* %377, align 8, !alias.scope !111
  %378 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 0, i32 0, i32 0, i32 0, i32 1
  %379 = bitcast %union.anon* %378 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %379, i8 0, i64 24, i1 false) #13, !alias.scope !111
  %380 = icmp eq i16* %375, null
  br i1 %380, label %565, label %381

381:                                              ; preds = %372
  %382 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %383 = sext i32 %373 to i64
  %384 = icmp slt i32 %373, 0
  br i1 %384, label %385, label %387

385:                                              ; preds = %381
  %386 = bitcast %"class.std::__1::basic_string"* %382 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %386) #15
  unreachable

387:                                              ; preds = %381
  %388 = icmp ult i32 %373, 11
  br i1 %388, label %402, label %389

389:                                              ; preds = %387
  %390 = add nuw nsw i64 %383, 8
  %391 = and i64 %390, -8
  %392 = icmp slt i64 %391, 0
  br i1 %392, label %393, label %394

393:                                              ; preds = %389
  call void @abort() #15
  unreachable

394:                                              ; preds = %389
  %395 = shl nsw i64 %391, 1
  %396 = call i8* @_Znwm(i64 %395) #14
  %397 = bitcast i8* %396 to i16*
  %398 = bitcast %"class.std::__1::basic_string"* %382 to i8**
  store i8* %396, i8** %398, align 8
  %399 = or i64 %391, -9223372036854775808
  %400 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %399, i64* %400, align 8
  %401 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %383, i64* %401, align 8
  br label %408

402:                                              ; preds = %387
  %403 = trunc i32 %373 to i8
  %404 = bitcast %"class.std::__1::basic_string"* %382 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %405 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %404, i64 0, i32 1, i32 1
  store i8 %403, i8* %405, align 1
  %406 = bitcast %"class.std::__1::basic_string"* %382 to i16*
  %407 = icmp eq i32 %373, 0
  br i1 %407, label %553, label %408

408:                                              ; preds = %402, %394
  %409 = phi i16* [ %397, %394 ], [ %406, %402 ]
  %410 = icmp ult i32 %373, 16
  br i1 %410, label %500, label %411

411:                                              ; preds = %408
  %412 = getelementptr i16, i16* %409, i64 %383
  %413 = bitcast i16* %412 to i8*
  %414 = getelementptr i16, i16* %375, i64 %383
  %415 = icmp ult i16* %409, %414
  %416 = icmp ult i8* %374, %413
  %417 = and i1 %415, %416
  br i1 %417, label %500, label %418

418:                                              ; preds = %411
  %419 = and i64 %383, -16
  %420 = sub nsw i64 %383, %419
  %421 = getelementptr i16, i16* %375, i64 %419
  %422 = getelementptr i16, i16* %409, i64 %419
  %423 = add nsw i64 %419, -16
  %424 = lshr exact i64 %423, 4
  %425 = add nuw nsw i64 %424, 1
  %426 = and i64 %425, 3
  %427 = icmp ult i64 %423, 48
  br i1 %427, label %479, label %428

428:                                              ; preds = %418
  %429 = sub nsw i64 %425, %426
  br label %430

430:                                              ; preds = %430, %428
  %431 = phi i64 [ 0, %428 ], [ %476, %430 ]
  %432 = phi i64 [ %429, %428 ], [ %477, %430 ]
  %433 = getelementptr i16, i16* %375, i64 %431
  %434 = getelementptr i16, i16* %409, i64 %431
  %435 = bitcast i16* %433 to <8 x i16>*
  %436 = load <8 x i16>, <8 x i16>* %435, align 2, !alias.scope !114
  %437 = getelementptr i16, i16* %433, i64 8
  %438 = bitcast i16* %437 to <8 x i16>*
  %439 = load <8 x i16>, <8 x i16>* %438, align 2, !alias.scope !114
  %440 = bitcast i16* %434 to <8 x i16>*
  store <8 x i16> %436, <8 x i16>* %440, align 2, !alias.scope !117, !noalias !114
  %441 = getelementptr i16, i16* %434, i64 8
  %442 = bitcast i16* %441 to <8 x i16>*
  store <8 x i16> %439, <8 x i16>* %442, align 2, !alias.scope !117, !noalias !114
  %443 = or i64 %431, 16
  %444 = getelementptr i16, i16* %375, i64 %443
  %445 = getelementptr i16, i16* %409, i64 %443
  %446 = bitcast i16* %444 to <8 x i16>*
  %447 = load <8 x i16>, <8 x i16>* %446, align 2, !alias.scope !114
  %448 = getelementptr i16, i16* %444, i64 8
  %449 = bitcast i16* %448 to <8 x i16>*
  %450 = load <8 x i16>, <8 x i16>* %449, align 2, !alias.scope !114
  %451 = bitcast i16* %445 to <8 x i16>*
  store <8 x i16> %447, <8 x i16>* %451, align 2, !alias.scope !117, !noalias !114
  %452 = getelementptr i16, i16* %445, i64 8
  %453 = bitcast i16* %452 to <8 x i16>*
  store <8 x i16> %450, <8 x i16>* %453, align 2, !alias.scope !117, !noalias !114
  %454 = or i64 %431, 32
  %455 = getelementptr i16, i16* %375, i64 %454
  %456 = getelementptr i16, i16* %409, i64 %454
  %457 = bitcast i16* %455 to <8 x i16>*
  %458 = load <8 x i16>, <8 x i16>* %457, align 2, !alias.scope !114
  %459 = getelementptr i16, i16* %455, i64 8
  %460 = bitcast i16* %459 to <8 x i16>*
  %461 = load <8 x i16>, <8 x i16>* %460, align 2, !alias.scope !114
  %462 = bitcast i16* %456 to <8 x i16>*
  store <8 x i16> %458, <8 x i16>* %462, align 2, !alias.scope !117, !noalias !114
  %463 = getelementptr i16, i16* %456, i64 8
  %464 = bitcast i16* %463 to <8 x i16>*
  store <8 x i16> %461, <8 x i16>* %464, align 2, !alias.scope !117, !noalias !114
  %465 = or i64 %431, 48
  %466 = getelementptr i16, i16* %375, i64 %465
  %467 = getelementptr i16, i16* %409, i64 %465
  %468 = bitcast i16* %466 to <8 x i16>*
  %469 = load <8 x i16>, <8 x i16>* %468, align 2, !alias.scope !114
  %470 = getelementptr i16, i16* %466, i64 8
  %471 = bitcast i16* %470 to <8 x i16>*
  %472 = load <8 x i16>, <8 x i16>* %471, align 2, !alias.scope !114
  %473 = bitcast i16* %467 to <8 x i16>*
  store <8 x i16> %469, <8 x i16>* %473, align 2, !alias.scope !117, !noalias !114
  %474 = getelementptr i16, i16* %467, i64 8
  %475 = bitcast i16* %474 to <8 x i16>*
  store <8 x i16> %472, <8 x i16>* %475, align 2, !alias.scope !117, !noalias !114
  %476 = add i64 %431, 64
  %477 = add i64 %432, -4
  %478 = icmp eq i64 %477, 0
  br i1 %478, label %479, label %430, !llvm.loop !119

479:                                              ; preds = %430, %418
  %480 = phi i64 [ 0, %418 ], [ %476, %430 ]
  %481 = icmp eq i64 %426, 0
  br i1 %481, label %498, label %482

482:                                              ; preds = %479, %482
  %483 = phi i64 [ %495, %482 ], [ %480, %479 ]
  %484 = phi i64 [ %496, %482 ], [ %426, %479 ]
  %485 = getelementptr i16, i16* %375, i64 %483
  %486 = getelementptr i16, i16* %409, i64 %483
  %487 = bitcast i16* %485 to <8 x i16>*
  %488 = load <8 x i16>, <8 x i16>* %487, align 2, !alias.scope !114
  %489 = getelementptr i16, i16* %485, i64 8
  %490 = bitcast i16* %489 to <8 x i16>*
  %491 = load <8 x i16>, <8 x i16>* %490, align 2, !alias.scope !114
  %492 = bitcast i16* %486 to <8 x i16>*
  store <8 x i16> %488, <8 x i16>* %492, align 2, !alias.scope !117, !noalias !114
  %493 = getelementptr i16, i16* %486, i64 8
  %494 = bitcast i16* %493 to <8 x i16>*
  store <8 x i16> %491, <8 x i16>* %494, align 2, !alias.scope !117, !noalias !114
  %495 = add i64 %483, 16
  %496 = add i64 %484, -1
  %497 = icmp eq i64 %496, 0
  br i1 %497, label %498, label %482, !llvm.loop !120

498:                                              ; preds = %482, %479
  %499 = icmp eq i64 %419, %383
  br i1 %499, label %553, label %500

500:                                              ; preds = %498, %411, %408
  %501 = phi i64 [ %383, %411 ], [ %383, %408 ], [ %420, %498 ]
  %502 = phi i16* [ %375, %411 ], [ %375, %408 ], [ %421, %498 ]
  %503 = phi i16* [ %409, %411 ], [ %409, %408 ], [ %422, %498 ]
  %504 = add nsw i64 %501, -1
  %505 = and i64 %501, 7
  %506 = icmp eq i64 %505, 0
  br i1 %506, label %518, label %507

507:                                              ; preds = %500, %507
  %508 = phi i64 [ %513, %507 ], [ %501, %500 ]
  %509 = phi i16* [ %515, %507 ], [ %502, %500 ]
  %510 = phi i16* [ %514, %507 ], [ %503, %500 ]
  %511 = phi i64 [ %516, %507 ], [ %505, %500 ]
  %512 = load i16, i16* %509, align 2
  store i16 %512, i16* %510, align 2
  %513 = add i64 %508, -1
  %514 = getelementptr inbounds i16, i16* %510, i64 1
  %515 = getelementptr inbounds i16, i16* %509, i64 1
  %516 = add i64 %511, -1
  %517 = icmp eq i64 %516, 0
  br i1 %517, label %518, label %507, !llvm.loop !121

518:                                              ; preds = %507, %500
  %519 = phi i64 [ %501, %500 ], [ %513, %507 ]
  %520 = phi i16* [ %502, %500 ], [ %515, %507 ]
  %521 = phi i16* [ %503, %500 ], [ %514, %507 ]
  %522 = icmp ult i64 %504, 7
  br i1 %522, label %553, label %523

523:                                              ; preds = %518, %523
  %524 = phi i64 [ %549, %523 ], [ %519, %518 ]
  %525 = phi i16* [ %551, %523 ], [ %520, %518 ]
  %526 = phi i16* [ %550, %523 ], [ %521, %518 ]
  %527 = load i16, i16* %525, align 2
  store i16 %527, i16* %526, align 2
  %528 = getelementptr inbounds i16, i16* %526, i64 1
  %529 = getelementptr inbounds i16, i16* %525, i64 1
  %530 = load i16, i16* %529, align 2
  store i16 %530, i16* %528, align 2
  %531 = getelementptr inbounds i16, i16* %526, i64 2
  %532 = getelementptr inbounds i16, i16* %525, i64 2
  %533 = load i16, i16* %532, align 2
  store i16 %533, i16* %531, align 2
  %534 = getelementptr inbounds i16, i16* %526, i64 3
  %535 = getelementptr inbounds i16, i16* %525, i64 3
  %536 = load i16, i16* %535, align 2
  store i16 %536, i16* %534, align 2
  %537 = getelementptr inbounds i16, i16* %526, i64 4
  %538 = getelementptr inbounds i16, i16* %525, i64 4
  %539 = load i16, i16* %538, align 2
  store i16 %539, i16* %537, align 2
  %540 = getelementptr inbounds i16, i16* %526, i64 5
  %541 = getelementptr inbounds i16, i16* %525, i64 5
  %542 = load i16, i16* %541, align 2
  store i16 %542, i16* %540, align 2
  %543 = getelementptr inbounds i16, i16* %526, i64 6
  %544 = getelementptr inbounds i16, i16* %525, i64 6
  %545 = load i16, i16* %544, align 2
  store i16 %545, i16* %543, align 2
  %546 = getelementptr inbounds i16, i16* %526, i64 7
  %547 = getelementptr inbounds i16, i16* %525, i64 7
  %548 = load i16, i16* %547, align 2
  store i16 %548, i16* %546, align 2
  %549 = add i64 %524, -8
  %550 = getelementptr inbounds i16, i16* %526, i64 8
  %551 = getelementptr inbounds i16, i16* %525, i64 8
  %552 = icmp eq i64 %549, 0
  br i1 %552, label %553, label %523, !llvm.loop !122

553:                                              ; preds = %518, %523, %498, %402
  %554 = phi i16* [ %406, %402 ], [ %409, %498 ], [ %409, %523 ], [ %409, %518 ]
  %555 = getelementptr inbounds i16, i16* %554, i64 %383
  store i16 0, i16* %555, align 2
  store i8 1, i8* %376, align 8
  %556 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %557 = bitcast %"class.std::__1::basic_string"* %556 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %558 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %557, i64 0, i32 1, i32 1
  %559 = load i8, i8* %558, align 1
  %560 = icmp slt i8 %559, 0
  br i1 %560, label %561, label %564

561:                                              ; preds = %553
  %562 = bitcast %"class.std::__1::basic_string"* %556 to i8**
  %563 = load i8*, i8** %562, align 8
  call void @_ZdlPv(i8* %563) #14
  br label %564

564:                                              ; preds = %561, %553
  store i8 0, i8* %376, align 8
  br label %565

565:                                              ; preds = %372, %564, %346
  %566 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %566) #13
  %567 = bitcast i32* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %567) #13, !noalias !123
  store i32 -1431655766, i32* %59, align 4, !noalias !123
  %568 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %93, i32* nonnull %59) #13, !noalias !123
  br i1 %568, label %571, label %569

569:                                              ; preds = %565
  %570 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %570, align 4, !noalias !123
  br label %589

571:                                              ; preds = %565
  %572 = load i32, i32* %59, align 4, !noalias !123
  %573 = icmp slt i32 %572, 0
  br i1 %573, label %589, label %574

574:                                              ; preds = %571
  %575 = bitcast i8** %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %575) #13, !noalias !123
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %60, align 8, !noalias !123
  %576 = call zeroext i1 @_ZN4base14PickleIterator9ReadBytesEPPKci(%"class.base::PickleIterator"* %93, i8** nonnull %60, i32 %572) #13
  br i1 %576, label %579, label %577

577:                                              ; preds = %574
  %578 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %578, align 4, !noalias !123
  br label %585

579:                                              ; preds = %574
  %580 = load i32, i32* %59, align 4, !noalias !123
  %581 = ashr i32 %580, 1
  %582 = bitcast i8** %60 to i16**
  %583 = load i16*, i16** %582, align 8, !noalias !123
  %584 = bitcast i16* %583 to i8*
  br label %585

585:                                              ; preds = %579, %577
  %586 = phi i32 [ %581, %579 ], [ -1431655766, %577 ]
  %587 = phi i8* [ %584, %579 ], [ null, %577 ]
  %588 = phi i16* [ %583, %579 ], [ null, %577 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %575) #13, !noalias !123
  br label %589

589:                                              ; preds = %585, %571, %569
  %590 = phi i32 [ -1431655766, %571 ], [ %586, %585 ], [ -1431655766, %569 ]
  %591 = phi i8* [ null, %571 ], [ %587, %585 ], [ null, %569 ]
  %592 = phi i16* [ null, %571 ], [ %588, %585 ], [ null, %569 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %567) #13, !noalias !123
  %593 = bitcast %"class.absl::optional"* %68 to i64*
  store i64 -6148914691236517376, i64* %593, align 8, !alias.scope !123
  %594 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %68, i64 0, i32 0, i32 0, i32 0, i32 1
  %595 = bitcast %union.anon* %594 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %595, i8 0, i64 24, i1 false) #13, !alias.scope !123
  %596 = icmp eq i16* %592, null
  br i1 %596, label %793, label %597

597:                                              ; preds = %589
  %598 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %68, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %599 = sext i32 %590 to i64
  %600 = icmp slt i32 %590, 0
  br i1 %600, label %601, label %603

601:                                              ; preds = %597
  %602 = bitcast %"class.std::__1::basic_string"* %598 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %602) #15
  unreachable

603:                                              ; preds = %597
  %604 = icmp ult i32 %590, 11
  br i1 %604, label %618, label %605

605:                                              ; preds = %603
  %606 = add nuw nsw i64 %599, 8
  %607 = and i64 %606, -8
  %608 = icmp slt i64 %607, 0
  br i1 %608, label %609, label %610

609:                                              ; preds = %605
  call void @abort() #15
  unreachable

610:                                              ; preds = %605
  %611 = shl nsw i64 %607, 1
  %612 = call i8* @_Znwm(i64 %611) #14
  %613 = bitcast i8* %612 to i16*
  %614 = bitcast %"class.std::__1::basic_string"* %598 to i8**
  store i8* %612, i8** %614, align 8
  %615 = or i64 %607, -9223372036854775808
  %616 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %68, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %615, i64* %616, align 8
  %617 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %68, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %599, i64* %617, align 8
  br label %624

618:                                              ; preds = %603
  %619 = trunc i32 %590 to i8
  %620 = bitcast %"class.std::__1::basic_string"* %598 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %621 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %620, i64 0, i32 1, i32 1
  store i8 %619, i8* %621, align 1
  %622 = bitcast %"class.std::__1::basic_string"* %598 to i16*
  %623 = icmp eq i32 %590, 0
  br i1 %623, label %769, label %624

624:                                              ; preds = %618, %610
  %625 = phi i16* [ %613, %610 ], [ %622, %618 ]
  %626 = icmp ult i32 %590, 16
  br i1 %626, label %716, label %627

627:                                              ; preds = %624
  %628 = getelementptr i16, i16* %625, i64 %599
  %629 = bitcast i16* %628 to i8*
  %630 = getelementptr i16, i16* %592, i64 %599
  %631 = icmp ult i16* %625, %630
  %632 = icmp ult i8* %591, %629
  %633 = and i1 %631, %632
  br i1 %633, label %716, label %634

634:                                              ; preds = %627
  %635 = and i64 %599, -16
  %636 = sub nsw i64 %599, %635
  %637 = getelementptr i16, i16* %592, i64 %635
  %638 = getelementptr i16, i16* %625, i64 %635
  %639 = add nsw i64 %635, -16
  %640 = lshr exact i64 %639, 4
  %641 = add nuw nsw i64 %640, 1
  %642 = and i64 %641, 3
  %643 = icmp ult i64 %639, 48
  br i1 %643, label %695, label %644

644:                                              ; preds = %634
  %645 = sub nsw i64 %641, %642
  br label %646

646:                                              ; preds = %646, %644
  %647 = phi i64 [ 0, %644 ], [ %692, %646 ]
  %648 = phi i64 [ %645, %644 ], [ %693, %646 ]
  %649 = getelementptr i16, i16* %592, i64 %647
  %650 = getelementptr i16, i16* %625, i64 %647
  %651 = bitcast i16* %649 to <8 x i16>*
  %652 = load <8 x i16>, <8 x i16>* %651, align 2, !alias.scope !126
  %653 = getelementptr i16, i16* %649, i64 8
  %654 = bitcast i16* %653 to <8 x i16>*
  %655 = load <8 x i16>, <8 x i16>* %654, align 2, !alias.scope !126
  %656 = bitcast i16* %650 to <8 x i16>*
  store <8 x i16> %652, <8 x i16>* %656, align 2, !alias.scope !129, !noalias !126
  %657 = getelementptr i16, i16* %650, i64 8
  %658 = bitcast i16* %657 to <8 x i16>*
  store <8 x i16> %655, <8 x i16>* %658, align 2, !alias.scope !129, !noalias !126
  %659 = or i64 %647, 16
  %660 = getelementptr i16, i16* %592, i64 %659
  %661 = getelementptr i16, i16* %625, i64 %659
  %662 = bitcast i16* %660 to <8 x i16>*
  %663 = load <8 x i16>, <8 x i16>* %662, align 2, !alias.scope !126
  %664 = getelementptr i16, i16* %660, i64 8
  %665 = bitcast i16* %664 to <8 x i16>*
  %666 = load <8 x i16>, <8 x i16>* %665, align 2, !alias.scope !126
  %667 = bitcast i16* %661 to <8 x i16>*
  store <8 x i16> %663, <8 x i16>* %667, align 2, !alias.scope !129, !noalias !126
  %668 = getelementptr i16, i16* %661, i64 8
  %669 = bitcast i16* %668 to <8 x i16>*
  store <8 x i16> %666, <8 x i16>* %669, align 2, !alias.scope !129, !noalias !126
  %670 = or i64 %647, 32
  %671 = getelementptr i16, i16* %592, i64 %670
  %672 = getelementptr i16, i16* %625, i64 %670
  %673 = bitcast i16* %671 to <8 x i16>*
  %674 = load <8 x i16>, <8 x i16>* %673, align 2, !alias.scope !126
  %675 = getelementptr i16, i16* %671, i64 8
  %676 = bitcast i16* %675 to <8 x i16>*
  %677 = load <8 x i16>, <8 x i16>* %676, align 2, !alias.scope !126
  %678 = bitcast i16* %672 to <8 x i16>*
  store <8 x i16> %674, <8 x i16>* %678, align 2, !alias.scope !129, !noalias !126
  %679 = getelementptr i16, i16* %672, i64 8
  %680 = bitcast i16* %679 to <8 x i16>*
  store <8 x i16> %677, <8 x i16>* %680, align 2, !alias.scope !129, !noalias !126
  %681 = or i64 %647, 48
  %682 = getelementptr i16, i16* %592, i64 %681
  %683 = getelementptr i16, i16* %625, i64 %681
  %684 = bitcast i16* %682 to <8 x i16>*
  %685 = load <8 x i16>, <8 x i16>* %684, align 2, !alias.scope !126
  %686 = getelementptr i16, i16* %682, i64 8
  %687 = bitcast i16* %686 to <8 x i16>*
  %688 = load <8 x i16>, <8 x i16>* %687, align 2, !alias.scope !126
  %689 = bitcast i16* %683 to <8 x i16>*
  store <8 x i16> %685, <8 x i16>* %689, align 2, !alias.scope !129, !noalias !126
  %690 = getelementptr i16, i16* %683, i64 8
  %691 = bitcast i16* %690 to <8 x i16>*
  store <8 x i16> %688, <8 x i16>* %691, align 2, !alias.scope !129, !noalias !126
  %692 = add i64 %647, 64
  %693 = add i64 %648, -4
  %694 = icmp eq i64 %693, 0
  br i1 %694, label %695, label %646, !llvm.loop !131

695:                                              ; preds = %646, %634
  %696 = phi i64 [ 0, %634 ], [ %692, %646 ]
  %697 = icmp eq i64 %642, 0
  br i1 %697, label %714, label %698

698:                                              ; preds = %695, %698
  %699 = phi i64 [ %711, %698 ], [ %696, %695 ]
  %700 = phi i64 [ %712, %698 ], [ %642, %695 ]
  %701 = getelementptr i16, i16* %592, i64 %699
  %702 = getelementptr i16, i16* %625, i64 %699
  %703 = bitcast i16* %701 to <8 x i16>*
  %704 = load <8 x i16>, <8 x i16>* %703, align 2, !alias.scope !126
  %705 = getelementptr i16, i16* %701, i64 8
  %706 = bitcast i16* %705 to <8 x i16>*
  %707 = load <8 x i16>, <8 x i16>* %706, align 2, !alias.scope !126
  %708 = bitcast i16* %702 to <8 x i16>*
  store <8 x i16> %704, <8 x i16>* %708, align 2, !alias.scope !129, !noalias !126
  %709 = getelementptr i16, i16* %702, i64 8
  %710 = bitcast i16* %709 to <8 x i16>*
  store <8 x i16> %707, <8 x i16>* %710, align 2, !alias.scope !129, !noalias !126
  %711 = add i64 %699, 16
  %712 = add i64 %700, -1
  %713 = icmp eq i64 %712, 0
  br i1 %713, label %714, label %698, !llvm.loop !132

714:                                              ; preds = %698, %695
  %715 = icmp eq i64 %635, %599
  br i1 %715, label %769, label %716

716:                                              ; preds = %714, %627, %624
  %717 = phi i64 [ %599, %627 ], [ %599, %624 ], [ %636, %714 ]
  %718 = phi i16* [ %592, %627 ], [ %592, %624 ], [ %637, %714 ]
  %719 = phi i16* [ %625, %627 ], [ %625, %624 ], [ %638, %714 ]
  %720 = add nsw i64 %717, -1
  %721 = and i64 %717, 7
  %722 = icmp eq i64 %721, 0
  br i1 %722, label %734, label %723

723:                                              ; preds = %716, %723
  %724 = phi i64 [ %729, %723 ], [ %717, %716 ]
  %725 = phi i16* [ %731, %723 ], [ %718, %716 ]
  %726 = phi i16* [ %730, %723 ], [ %719, %716 ]
  %727 = phi i64 [ %732, %723 ], [ %721, %716 ]
  %728 = load i16, i16* %725, align 2
  store i16 %728, i16* %726, align 2
  %729 = add i64 %724, -1
  %730 = getelementptr inbounds i16, i16* %726, i64 1
  %731 = getelementptr inbounds i16, i16* %725, i64 1
  %732 = add i64 %727, -1
  %733 = icmp eq i64 %732, 0
  br i1 %733, label %734, label %723, !llvm.loop !133

734:                                              ; preds = %723, %716
  %735 = phi i64 [ %717, %716 ], [ %729, %723 ]
  %736 = phi i16* [ %718, %716 ], [ %731, %723 ]
  %737 = phi i16* [ %719, %716 ], [ %730, %723 ]
  %738 = icmp ult i64 %720, 7
  br i1 %738, label %769, label %739

739:                                              ; preds = %734, %739
  %740 = phi i64 [ %765, %739 ], [ %735, %734 ]
  %741 = phi i16* [ %767, %739 ], [ %736, %734 ]
  %742 = phi i16* [ %766, %739 ], [ %737, %734 ]
  %743 = load i16, i16* %741, align 2
  store i16 %743, i16* %742, align 2
  %744 = getelementptr inbounds i16, i16* %742, i64 1
  %745 = getelementptr inbounds i16, i16* %741, i64 1
  %746 = load i16, i16* %745, align 2
  store i16 %746, i16* %744, align 2
  %747 = getelementptr inbounds i16, i16* %742, i64 2
  %748 = getelementptr inbounds i16, i16* %741, i64 2
  %749 = load i16, i16* %748, align 2
  store i16 %749, i16* %747, align 2
  %750 = getelementptr inbounds i16, i16* %742, i64 3
  %751 = getelementptr inbounds i16, i16* %741, i64 3
  %752 = load i16, i16* %751, align 2
  store i16 %752, i16* %750, align 2
  %753 = getelementptr inbounds i16, i16* %742, i64 4
  %754 = getelementptr inbounds i16, i16* %741, i64 4
  %755 = load i16, i16* %754, align 2
  store i16 %755, i16* %753, align 2
  %756 = getelementptr inbounds i16, i16* %742, i64 5
  %757 = getelementptr inbounds i16, i16* %741, i64 5
  %758 = load i16, i16* %757, align 2
  store i16 %758, i16* %756, align 2
  %759 = getelementptr inbounds i16, i16* %742, i64 6
  %760 = getelementptr inbounds i16, i16* %741, i64 6
  %761 = load i16, i16* %760, align 2
  store i16 %761, i16* %759, align 2
  %762 = getelementptr inbounds i16, i16* %742, i64 7
  %763 = getelementptr inbounds i16, i16* %741, i64 7
  %764 = load i16, i16* %763, align 2
  store i16 %764, i16* %762, align 2
  %765 = add i64 %740, -8
  %766 = getelementptr inbounds i16, i16* %742, i64 8
  %767 = getelementptr inbounds i16, i16* %741, i64 8
  %768 = icmp eq i64 %765, 0
  br i1 %768, label %769, label %739, !llvm.loop !134

769:                                              ; preds = %734, %739, %714, %618
  %770 = phi i16* [ %622, %618 ], [ %625, %714 ], [ %625, %739 ], [ %625, %734 ]
  %771 = getelementptr inbounds i16, i16* %770, i64 %599
  store i16 0, i16* %771, align 2
  store i8 1, i8* %566, align 8
  %772 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %773 = load i8, i8* %772, align 8, !range !2
  %774 = icmp eq i8 %773, 0
  %775 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %774, label %790, label %776

776:                                              ; preds = %769
  %777 = bitcast %"class.std::__1::basic_string"* %775 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %778 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %777, i64 0, i32 1, i32 1
  %779 = load i8, i8* %778, align 1
  %780 = icmp slt i8 %779, 0
  br i1 %780, label %781, label %784

781:                                              ; preds = %776
  %782 = bitcast %"class.std::__1::basic_string"* %775 to i8**
  %783 = load i8*, i8** %782, align 8
  call void @_ZdlPv(i8* %783) #14
  br label %784

784:                                              ; preds = %781, %776
  %785 = bitcast %"class.std::__1::basic_string"* %775 to i8*
  %786 = bitcast %"class.std::__1::basic_string"* %598 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %785, i8* align 8 %786, i64 24, i1 false) #13
  %787 = bitcast %"class.std::__1::basic_string"* %598 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %788 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %787, i64 0, i32 1, i32 1
  store i8 0, i8* %788, align 1
  %789 = bitcast %"class.std::__1::basic_string"* %598 to i16*
  store i16 0, i16* %789, align 8
  br label %807

790:                                              ; preds = %769
  %791 = bitcast %"class.std::__1::basic_string"* %775 to i8*
  %792 = bitcast %"class.std::__1::basic_string"* %598 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %791, i8* align 8 %792, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %792, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %772, align 8
  br label %807

793:                                              ; preds = %589
  %794 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %795 = load i8, i8* %794, align 8, !range !2
  %796 = icmp eq i8 %795, 0
  br i1 %796, label %807, label %797

797:                                              ; preds = %793
  %798 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %799 = bitcast %"class.std::__1::basic_string"* %798 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %800 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %799, i64 0, i32 1, i32 1
  %801 = load i8, i8* %800, align 1
  %802 = icmp slt i8 %801, 0
  br i1 %802, label %803, label %806

803:                                              ; preds = %797
  %804 = bitcast %"class.std::__1::basic_string"* %798 to i8**
  %805 = load i8*, i8** %804, align 8
  call void @_ZdlPv(i8* %805) #14
  br label %806

806:                                              ; preds = %803, %797
  store i8 0, i8* %794, align 8
  br label %807

807:                                              ; preds = %784, %790, %793, %806
  %808 = load i8, i8* %566, align 8, !range !2
  %809 = icmp eq i8 %808, 0
  br i1 %809, label %820, label %810

810:                                              ; preds = %807
  %811 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %68, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %812 = bitcast %"class.std::__1::basic_string"* %811 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %813 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %812, i64 0, i32 1, i32 1
  %814 = load i8, i8* %813, align 1
  %815 = icmp slt i8 %814, 0
  br i1 %815, label %816, label %819

816:                                              ; preds = %810
  %817 = bitcast %"class.std::__1::basic_string"* %811 to i8**
  %818 = load i8*, i8** %817, align 8
  call void @_ZdlPv(i8* %818) #14
  br label %819

819:                                              ; preds = %816, %810
  store i8 0, i8* %566, align 8
  br label %820

820:                                              ; preds = %807, %819
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %566) #13
  %821 = load i32, i32* %79, align 8
  %822 = icmp slt i32 %821, 25
  br i1 %822, label %823, label %1551

823:                                              ; preds = %820
  %824 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %825 = load i8, i8* %824, align 8, !range !2
  %826 = icmp eq i8 %825, 0
  br i1 %826, label %884, label %827

827:                                              ; preds = %823
  %828 = bitcast %"class.std::__1::basic_string"* %69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %828) #13
  %829 = bitcast %"class.std::__1::basic_string.15"* %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %829) #13
  %830 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %831 = bitcast %"class.std::__1::basic_string"* %830 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %832 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %831, i64 0, i32 1, i32 1
  %833 = load i8, i8* %832, align 1
  %834 = icmp slt i8 %833, 0
  %835 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %830, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %836 = load i16*, i16** %835, align 8
  %837 = bitcast %"class.std::__1::basic_string"* %830 to i16*
  %838 = select i1 %834, i16* %836, i16* %837
  %839 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %840 = load i64, i64* %839, align 8
  %841 = zext i8 %833 to i64
  %842 = select i1 %834, i64 %840, i64 %841
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.15"* nonnull sret %71, i16* %838, i64 %842) #13
  call void @_ZN5blink16UniqueNameHelper23UpdateLegacyNameFromV24ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorINS0_11ReplacementENS5_IS9_EEEE(%"class.std::__1::basic_string.15"* nonnull sret %70, %"class.std::__1::basic_string.15"* nonnull %71, %"class.std::__1::vector.57"* %2) #13
  %843 = bitcast %"class.std::__1::basic_string.15"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %844 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %843, i64 0, i32 1, i32 0
  %845 = load i8, i8* %844, align 1
  %846 = icmp slt i8 %845, 0
  %847 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %848 = load i8*, i8** %847, align 8
  %849 = select i1 %846, i8* %848, i8* %829
  %850 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %851 = load i64, i64* %850, align 8
  %852 = zext i8 %845 to i64
  %853 = select i1 %846, i64 %851, i64 %852
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %69, i8* %849, i64 %853) #13
  %854 = load i8, i8* %824, align 8, !range !2
  %855 = icmp eq i8 %854, 0
  br i1 %855, label %867, label %856

856:                                              ; preds = %827
  %857 = load i8, i8* %832, align 1
  %858 = icmp slt i8 %857, 0
  br i1 %858, label %859, label %862

859:                                              ; preds = %856
  %860 = bitcast %"class.std::__1::basic_string"* %830 to i8**
  %861 = load i8*, i8** %860, align 8
  call void @_ZdlPv(i8* %861) #14
  br label %862

862:                                              ; preds = %859, %856
  %863 = bitcast %"class.std::__1::basic_string"* %830 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %863, i8* nonnull align 8 %828, i64 24, i1 false) #13
  %864 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %865 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %864, i64 0, i32 1, i32 1
  store i8 0, i8* %865, align 1
  %866 = bitcast %"class.std::__1::basic_string"* %69 to i16*
  store i16 0, i16* %866, align 8
  br label %869

867:                                              ; preds = %827
  %868 = bitcast %"class.std::__1::basic_string"* %830 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %868, i8* nonnull align 8 %828, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %828, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %824, align 8
  br label %869

869:                                              ; preds = %862, %867
  %870 = load i8, i8* %844, align 1
  %871 = icmp slt i8 %870, 0
  br i1 %871, label %872, label %874

872:                                              ; preds = %869
  %873 = load i8*, i8** %847, align 8
  call void @_ZdlPv(i8* %873) #14
  br label %874

874:                                              ; preds = %869, %872
  %875 = bitcast %"class.std::__1::basic_string.15"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %876 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %875, i64 0, i32 1, i32 0
  %877 = load i8, i8* %876, align 1
  %878 = icmp slt i8 %877, 0
  br i1 %878, label %879, label %882

879:                                              ; preds = %874
  %880 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %881 = load i8*, i8** %880, align 8
  call void @_ZdlPv(i8* %881) #14
  br label %882

882:                                              ; preds = %874, %879
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %829) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %828) #13
  %883 = load i32, i32* %79, align 8
  br label %884

884:                                              ; preds = %823, %882
  %885 = phi i32 [ %821, %823 ], [ %883, %882 ]
  %886 = icmp slt i32 %885, 15
  br i1 %886, label %887, label %1548

887:                                              ; preds = %884
  %888 = bitcast i32* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %888) #13, !noalias !135
  store i32 -1431655766, i32* %57, align 4, !noalias !135
  %889 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %93, i32* nonnull %57) #13, !noalias !135
  br i1 %889, label %892, label %890

890:                                              ; preds = %887
  %891 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %891, align 4, !noalias !135
  br label %910

892:                                              ; preds = %887
  %893 = load i32, i32* %57, align 4, !noalias !135
  %894 = icmp slt i32 %893, 0
  br i1 %894, label %910, label %895

895:                                              ; preds = %892
  %896 = bitcast i8** %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %896) #13, !noalias !135
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %58, align 8, !noalias !135
  %897 = call zeroext i1 @_ZN4base14PickleIterator9ReadBytesEPPKci(%"class.base::PickleIterator"* %93, i8** nonnull %58, i32 %893) #13
  br i1 %897, label %900, label %898

898:                                              ; preds = %895
  %899 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %899, align 4, !noalias !135
  br label %906

900:                                              ; preds = %895
  %901 = load i32, i32* %57, align 4, !noalias !135
  %902 = ashr i32 %901, 1
  %903 = bitcast i8** %58 to i16**
  %904 = load i16*, i16** %903, align 8, !noalias !135
  %905 = bitcast i16* %904 to i8*
  br label %906

906:                                              ; preds = %900, %898
  %907 = phi i32 [ %902, %900 ], [ -1431655766, %898 ]
  %908 = phi i8* [ %905, %900 ], [ null, %898 ]
  %909 = phi i16* [ %904, %900 ], [ null, %898 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %896) #13, !noalias !135
  br label %910

910:                                              ; preds = %906, %892, %890
  %911 = phi i32 [ -1431655766, %892 ], [ %907, %906 ], [ -1431655766, %890 ]
  %912 = phi i8* [ null, %892 ], [ %908, %906 ], [ null, %890 ]
  %913 = phi i16* [ null, %892 ], [ %909, %906 ], [ null, %890 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %888) #13, !noalias !135
  %914 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  %915 = bitcast %"class.absl::optional"* %72 to i64*
  store i64 -6148914691236517376, i64* %915, align 8, !alias.scope !135
  %916 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %72, i64 0, i32 0, i32 0, i32 0, i32 1
  %917 = bitcast %union.anon* %916 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %917, i8 0, i64 24, i1 false) #13, !alias.scope !135
  %918 = icmp eq i16* %913, null
  br i1 %918, label %1103, label %919

919:                                              ; preds = %910
  %920 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %72, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %921 = sext i32 %911 to i64
  %922 = icmp slt i32 %911, 0
  br i1 %922, label %923, label %925

923:                                              ; preds = %919
  %924 = bitcast %"class.std::__1::basic_string"* %920 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %924) #15
  unreachable

925:                                              ; preds = %919
  %926 = icmp ult i32 %911, 11
  br i1 %926, label %940, label %927

927:                                              ; preds = %925
  %928 = add nuw nsw i64 %921, 8
  %929 = and i64 %928, -8
  %930 = icmp slt i64 %929, 0
  br i1 %930, label %931, label %932

931:                                              ; preds = %927
  call void @abort() #15
  unreachable

932:                                              ; preds = %927
  %933 = shl nsw i64 %929, 1
  %934 = call i8* @_Znwm(i64 %933) #14
  %935 = bitcast i8* %934 to i16*
  %936 = bitcast %"class.std::__1::basic_string"* %920 to i8**
  store i8* %934, i8** %936, align 8
  %937 = or i64 %929, -9223372036854775808
  %938 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %72, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %937, i64* %938, align 8
  %939 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %72, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %921, i64* %939, align 8
  br label %946

940:                                              ; preds = %925
  %941 = trunc i32 %911 to i8
  %942 = bitcast %"class.std::__1::basic_string"* %920 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %943 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %942, i64 0, i32 1, i32 1
  store i8 %941, i8* %943, align 1
  %944 = bitcast %"class.std::__1::basic_string"* %920 to i16*
  %945 = icmp eq i32 %911, 0
  br i1 %945, label %1091, label %946

946:                                              ; preds = %940, %932
  %947 = phi i16* [ %935, %932 ], [ %944, %940 ]
  %948 = icmp ult i32 %911, 16
  br i1 %948, label %1038, label %949

949:                                              ; preds = %946
  %950 = getelementptr i16, i16* %947, i64 %921
  %951 = bitcast i16* %950 to i8*
  %952 = getelementptr i16, i16* %913, i64 %921
  %953 = icmp ult i16* %947, %952
  %954 = icmp ult i8* %912, %951
  %955 = and i1 %953, %954
  br i1 %955, label %1038, label %956

956:                                              ; preds = %949
  %957 = and i64 %921, -16
  %958 = sub nsw i64 %921, %957
  %959 = getelementptr i16, i16* %913, i64 %957
  %960 = getelementptr i16, i16* %947, i64 %957
  %961 = add nsw i64 %957, -16
  %962 = lshr exact i64 %961, 4
  %963 = add nuw nsw i64 %962, 1
  %964 = and i64 %963, 3
  %965 = icmp ult i64 %961, 48
  br i1 %965, label %1017, label %966

966:                                              ; preds = %956
  %967 = sub nsw i64 %963, %964
  br label %968

968:                                              ; preds = %968, %966
  %969 = phi i64 [ 0, %966 ], [ %1014, %968 ]
  %970 = phi i64 [ %967, %966 ], [ %1015, %968 ]
  %971 = getelementptr i16, i16* %913, i64 %969
  %972 = getelementptr i16, i16* %947, i64 %969
  %973 = bitcast i16* %971 to <8 x i16>*
  %974 = load <8 x i16>, <8 x i16>* %973, align 2, !alias.scope !138
  %975 = getelementptr i16, i16* %971, i64 8
  %976 = bitcast i16* %975 to <8 x i16>*
  %977 = load <8 x i16>, <8 x i16>* %976, align 2, !alias.scope !138
  %978 = bitcast i16* %972 to <8 x i16>*
  store <8 x i16> %974, <8 x i16>* %978, align 2, !alias.scope !141, !noalias !138
  %979 = getelementptr i16, i16* %972, i64 8
  %980 = bitcast i16* %979 to <8 x i16>*
  store <8 x i16> %977, <8 x i16>* %980, align 2, !alias.scope !141, !noalias !138
  %981 = or i64 %969, 16
  %982 = getelementptr i16, i16* %913, i64 %981
  %983 = getelementptr i16, i16* %947, i64 %981
  %984 = bitcast i16* %982 to <8 x i16>*
  %985 = load <8 x i16>, <8 x i16>* %984, align 2, !alias.scope !138
  %986 = getelementptr i16, i16* %982, i64 8
  %987 = bitcast i16* %986 to <8 x i16>*
  %988 = load <8 x i16>, <8 x i16>* %987, align 2, !alias.scope !138
  %989 = bitcast i16* %983 to <8 x i16>*
  store <8 x i16> %985, <8 x i16>* %989, align 2, !alias.scope !141, !noalias !138
  %990 = getelementptr i16, i16* %983, i64 8
  %991 = bitcast i16* %990 to <8 x i16>*
  store <8 x i16> %988, <8 x i16>* %991, align 2, !alias.scope !141, !noalias !138
  %992 = or i64 %969, 32
  %993 = getelementptr i16, i16* %913, i64 %992
  %994 = getelementptr i16, i16* %947, i64 %992
  %995 = bitcast i16* %993 to <8 x i16>*
  %996 = load <8 x i16>, <8 x i16>* %995, align 2, !alias.scope !138
  %997 = getelementptr i16, i16* %993, i64 8
  %998 = bitcast i16* %997 to <8 x i16>*
  %999 = load <8 x i16>, <8 x i16>* %998, align 2, !alias.scope !138
  %1000 = bitcast i16* %994 to <8 x i16>*
  store <8 x i16> %996, <8 x i16>* %1000, align 2, !alias.scope !141, !noalias !138
  %1001 = getelementptr i16, i16* %994, i64 8
  %1002 = bitcast i16* %1001 to <8 x i16>*
  store <8 x i16> %999, <8 x i16>* %1002, align 2, !alias.scope !141, !noalias !138
  %1003 = or i64 %969, 48
  %1004 = getelementptr i16, i16* %913, i64 %1003
  %1005 = getelementptr i16, i16* %947, i64 %1003
  %1006 = bitcast i16* %1004 to <8 x i16>*
  %1007 = load <8 x i16>, <8 x i16>* %1006, align 2, !alias.scope !138
  %1008 = getelementptr i16, i16* %1004, i64 8
  %1009 = bitcast i16* %1008 to <8 x i16>*
  %1010 = load <8 x i16>, <8 x i16>* %1009, align 2, !alias.scope !138
  %1011 = bitcast i16* %1005 to <8 x i16>*
  store <8 x i16> %1007, <8 x i16>* %1011, align 2, !alias.scope !141, !noalias !138
  %1012 = getelementptr i16, i16* %1005, i64 8
  %1013 = bitcast i16* %1012 to <8 x i16>*
  store <8 x i16> %1010, <8 x i16>* %1013, align 2, !alias.scope !141, !noalias !138
  %1014 = add i64 %969, 64
  %1015 = add i64 %970, -4
  %1016 = icmp eq i64 %1015, 0
  br i1 %1016, label %1017, label %968, !llvm.loop !143

1017:                                             ; preds = %968, %956
  %1018 = phi i64 [ 0, %956 ], [ %1014, %968 ]
  %1019 = icmp eq i64 %964, 0
  br i1 %1019, label %1036, label %1020

1020:                                             ; preds = %1017, %1020
  %1021 = phi i64 [ %1033, %1020 ], [ %1018, %1017 ]
  %1022 = phi i64 [ %1034, %1020 ], [ %964, %1017 ]
  %1023 = getelementptr i16, i16* %913, i64 %1021
  %1024 = getelementptr i16, i16* %947, i64 %1021
  %1025 = bitcast i16* %1023 to <8 x i16>*
  %1026 = load <8 x i16>, <8 x i16>* %1025, align 2, !alias.scope !138
  %1027 = getelementptr i16, i16* %1023, i64 8
  %1028 = bitcast i16* %1027 to <8 x i16>*
  %1029 = load <8 x i16>, <8 x i16>* %1028, align 2, !alias.scope !138
  %1030 = bitcast i16* %1024 to <8 x i16>*
  store <8 x i16> %1026, <8 x i16>* %1030, align 2, !alias.scope !141, !noalias !138
  %1031 = getelementptr i16, i16* %1024, i64 8
  %1032 = bitcast i16* %1031 to <8 x i16>*
  store <8 x i16> %1029, <8 x i16>* %1032, align 2, !alias.scope !141, !noalias !138
  %1033 = add i64 %1021, 16
  %1034 = add i64 %1022, -1
  %1035 = icmp eq i64 %1034, 0
  br i1 %1035, label %1036, label %1020, !llvm.loop !144

1036:                                             ; preds = %1020, %1017
  %1037 = icmp eq i64 %957, %921
  br i1 %1037, label %1091, label %1038

1038:                                             ; preds = %1036, %949, %946
  %1039 = phi i64 [ %921, %949 ], [ %921, %946 ], [ %958, %1036 ]
  %1040 = phi i16* [ %913, %949 ], [ %913, %946 ], [ %959, %1036 ]
  %1041 = phi i16* [ %947, %949 ], [ %947, %946 ], [ %960, %1036 ]
  %1042 = add nsw i64 %1039, -1
  %1043 = and i64 %1039, 7
  %1044 = icmp eq i64 %1043, 0
  br i1 %1044, label %1056, label %1045

1045:                                             ; preds = %1038, %1045
  %1046 = phi i64 [ %1051, %1045 ], [ %1039, %1038 ]
  %1047 = phi i16* [ %1053, %1045 ], [ %1040, %1038 ]
  %1048 = phi i16* [ %1052, %1045 ], [ %1041, %1038 ]
  %1049 = phi i64 [ %1054, %1045 ], [ %1043, %1038 ]
  %1050 = load i16, i16* %1047, align 2
  store i16 %1050, i16* %1048, align 2
  %1051 = add i64 %1046, -1
  %1052 = getelementptr inbounds i16, i16* %1048, i64 1
  %1053 = getelementptr inbounds i16, i16* %1047, i64 1
  %1054 = add i64 %1049, -1
  %1055 = icmp eq i64 %1054, 0
  br i1 %1055, label %1056, label %1045, !llvm.loop !145

1056:                                             ; preds = %1045, %1038
  %1057 = phi i64 [ %1039, %1038 ], [ %1051, %1045 ]
  %1058 = phi i16* [ %1040, %1038 ], [ %1053, %1045 ]
  %1059 = phi i16* [ %1041, %1038 ], [ %1052, %1045 ]
  %1060 = icmp ult i64 %1042, 7
  br i1 %1060, label %1091, label %1061

1061:                                             ; preds = %1056, %1061
  %1062 = phi i64 [ %1087, %1061 ], [ %1057, %1056 ]
  %1063 = phi i16* [ %1089, %1061 ], [ %1058, %1056 ]
  %1064 = phi i16* [ %1088, %1061 ], [ %1059, %1056 ]
  %1065 = load i16, i16* %1063, align 2
  store i16 %1065, i16* %1064, align 2
  %1066 = getelementptr inbounds i16, i16* %1064, i64 1
  %1067 = getelementptr inbounds i16, i16* %1063, i64 1
  %1068 = load i16, i16* %1067, align 2
  store i16 %1068, i16* %1066, align 2
  %1069 = getelementptr inbounds i16, i16* %1064, i64 2
  %1070 = getelementptr inbounds i16, i16* %1063, i64 2
  %1071 = load i16, i16* %1070, align 2
  store i16 %1071, i16* %1069, align 2
  %1072 = getelementptr inbounds i16, i16* %1064, i64 3
  %1073 = getelementptr inbounds i16, i16* %1063, i64 3
  %1074 = load i16, i16* %1073, align 2
  store i16 %1074, i16* %1072, align 2
  %1075 = getelementptr inbounds i16, i16* %1064, i64 4
  %1076 = getelementptr inbounds i16, i16* %1063, i64 4
  %1077 = load i16, i16* %1076, align 2
  store i16 %1077, i16* %1075, align 2
  %1078 = getelementptr inbounds i16, i16* %1064, i64 5
  %1079 = getelementptr inbounds i16, i16* %1063, i64 5
  %1080 = load i16, i16* %1079, align 2
  store i16 %1080, i16* %1078, align 2
  %1081 = getelementptr inbounds i16, i16* %1064, i64 6
  %1082 = getelementptr inbounds i16, i16* %1063, i64 6
  %1083 = load i16, i16* %1082, align 2
  store i16 %1083, i16* %1081, align 2
  %1084 = getelementptr inbounds i16, i16* %1064, i64 7
  %1085 = getelementptr inbounds i16, i16* %1063, i64 7
  %1086 = load i16, i16* %1085, align 2
  store i16 %1086, i16* %1084, align 2
  %1087 = add i64 %1062, -8
  %1088 = getelementptr inbounds i16, i16* %1064, i64 8
  %1089 = getelementptr inbounds i16, i16* %1063, i64 8
  %1090 = icmp eq i64 %1087, 0
  br i1 %1090, label %1091, label %1061, !llvm.loop !146

1091:                                             ; preds = %1056, %1061, %1036, %940
  %1092 = phi i16* [ %944, %940 ], [ %947, %1036 ], [ %947, %1061 ], [ %947, %1056 ]
  %1093 = getelementptr inbounds i16, i16* %1092, i64 %921
  store i16 0, i16* %1093, align 2
  store i8 1, i8* %914, align 8
  %1094 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %72, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1095 = bitcast %"class.std::__1::basic_string"* %1094 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1096 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1095, i64 0, i32 1, i32 1
  %1097 = load i8, i8* %1096, align 1
  %1098 = icmp slt i8 %1097, 0
  br i1 %1098, label %1099, label %1102

1099:                                             ; preds = %1091
  %1100 = bitcast %"class.std::__1::basic_string"* %1094 to i8**
  %1101 = load i8*, i8** %1100, align 8
  call void @_ZdlPv(i8* %1101) #14
  br label %1102

1102:                                             ; preds = %1099, %1091
  store i8 0, i8* %914, align 8
  br label %1103

1103:                                             ; preds = %910, %1102
  %1104 = bitcast i32* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1104) #13, !noalias !147
  store i32 -1431655766, i32* %55, align 4, !noalias !147
  %1105 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %93, i32* nonnull %55) #13, !noalias !147
  br i1 %1105, label %1108, label %1106

1106:                                             ; preds = %1103
  %1107 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1107, align 4, !noalias !147
  br label %1126

1108:                                             ; preds = %1103
  %1109 = load i32, i32* %55, align 4, !noalias !147
  %1110 = icmp slt i32 %1109, 0
  br i1 %1110, label %1126, label %1111

1111:                                             ; preds = %1108
  %1112 = bitcast i8** %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1112) #13, !noalias !147
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %56, align 8, !noalias !147
  %1113 = call zeroext i1 @_ZN4base14PickleIterator9ReadBytesEPPKci(%"class.base::PickleIterator"* %93, i8** nonnull %56, i32 %1109) #13
  br i1 %1113, label %1116, label %1114

1114:                                             ; preds = %1111
  %1115 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1115, align 4, !noalias !147
  br label %1122

1116:                                             ; preds = %1111
  %1117 = load i32, i32* %55, align 4, !noalias !147
  %1118 = ashr i32 %1117, 1
  %1119 = bitcast i8** %56 to i16**
  %1120 = load i16*, i16** %1119, align 8, !noalias !147
  %1121 = bitcast i16* %1120 to i8*
  br label %1122

1122:                                             ; preds = %1116, %1114
  %1123 = phi i32 [ %1118, %1116 ], [ -1431655766, %1114 ]
  %1124 = phi i8* [ %1121, %1116 ], [ null, %1114 ]
  %1125 = phi i16* [ %1120, %1116 ], [ null, %1114 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1112) #13, !noalias !147
  br label %1126

1126:                                             ; preds = %1122, %1108, %1106
  %1127 = phi i32 [ -1431655766, %1108 ], [ %1123, %1122 ], [ -1431655766, %1106 ]
  %1128 = phi i8* [ null, %1108 ], [ %1124, %1122 ], [ null, %1106 ]
  %1129 = phi i16* [ null, %1108 ], [ %1125, %1122 ], [ null, %1106 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1104) #13, !noalias !147
  %1130 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  %1131 = bitcast %"class.absl::optional"* %73 to i64*
  store i64 -6148914691236517376, i64* %1131, align 8, !alias.scope !147
  %1132 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %73, i64 0, i32 0, i32 0, i32 0, i32 1
  %1133 = bitcast %union.anon* %1132 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1133, i8 0, i64 24, i1 false) #13, !alias.scope !147
  %1134 = icmp eq i16* %1129, null
  br i1 %1134, label %1319, label %1135

1135:                                             ; preds = %1126
  %1136 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %73, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1137 = sext i32 %1127 to i64
  %1138 = icmp slt i32 %1127, 0
  br i1 %1138, label %1139, label %1141

1139:                                             ; preds = %1135
  %1140 = bitcast %"class.std::__1::basic_string"* %1136 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %1140) #15
  unreachable

1141:                                             ; preds = %1135
  %1142 = icmp ult i32 %1127, 11
  br i1 %1142, label %1156, label %1143

1143:                                             ; preds = %1141
  %1144 = add nuw nsw i64 %1137, 8
  %1145 = and i64 %1144, -8
  %1146 = icmp slt i64 %1145, 0
  br i1 %1146, label %1147, label %1148

1147:                                             ; preds = %1143
  call void @abort() #15
  unreachable

1148:                                             ; preds = %1143
  %1149 = shl nsw i64 %1145, 1
  %1150 = call i8* @_Znwm(i64 %1149) #14
  %1151 = bitcast i8* %1150 to i16*
  %1152 = bitcast %"class.std::__1::basic_string"* %1136 to i8**
  store i8* %1150, i8** %1152, align 8
  %1153 = or i64 %1145, -9223372036854775808
  %1154 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %73, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1153, i64* %1154, align 8
  %1155 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %73, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1137, i64* %1155, align 8
  br label %1162

1156:                                             ; preds = %1141
  %1157 = trunc i32 %1127 to i8
  %1158 = bitcast %"class.std::__1::basic_string"* %1136 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1159 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1158, i64 0, i32 1, i32 1
  store i8 %1157, i8* %1159, align 1
  %1160 = bitcast %"class.std::__1::basic_string"* %1136 to i16*
  %1161 = icmp eq i32 %1127, 0
  br i1 %1161, label %1307, label %1162

1162:                                             ; preds = %1156, %1148
  %1163 = phi i16* [ %1151, %1148 ], [ %1160, %1156 ]
  %1164 = icmp ult i32 %1127, 16
  br i1 %1164, label %1254, label %1165

1165:                                             ; preds = %1162
  %1166 = getelementptr i16, i16* %1163, i64 %1137
  %1167 = bitcast i16* %1166 to i8*
  %1168 = getelementptr i16, i16* %1129, i64 %1137
  %1169 = icmp ult i16* %1163, %1168
  %1170 = icmp ult i8* %1128, %1167
  %1171 = and i1 %1169, %1170
  br i1 %1171, label %1254, label %1172

1172:                                             ; preds = %1165
  %1173 = and i64 %1137, -16
  %1174 = sub nsw i64 %1137, %1173
  %1175 = getelementptr i16, i16* %1129, i64 %1173
  %1176 = getelementptr i16, i16* %1163, i64 %1173
  %1177 = add nsw i64 %1173, -16
  %1178 = lshr exact i64 %1177, 4
  %1179 = add nuw nsw i64 %1178, 1
  %1180 = and i64 %1179, 3
  %1181 = icmp ult i64 %1177, 48
  br i1 %1181, label %1233, label %1182

1182:                                             ; preds = %1172
  %1183 = sub nsw i64 %1179, %1180
  br label %1184

1184:                                             ; preds = %1184, %1182
  %1185 = phi i64 [ 0, %1182 ], [ %1230, %1184 ]
  %1186 = phi i64 [ %1183, %1182 ], [ %1231, %1184 ]
  %1187 = getelementptr i16, i16* %1129, i64 %1185
  %1188 = getelementptr i16, i16* %1163, i64 %1185
  %1189 = bitcast i16* %1187 to <8 x i16>*
  %1190 = load <8 x i16>, <8 x i16>* %1189, align 2, !alias.scope !150
  %1191 = getelementptr i16, i16* %1187, i64 8
  %1192 = bitcast i16* %1191 to <8 x i16>*
  %1193 = load <8 x i16>, <8 x i16>* %1192, align 2, !alias.scope !150
  %1194 = bitcast i16* %1188 to <8 x i16>*
  store <8 x i16> %1190, <8 x i16>* %1194, align 2, !alias.scope !153, !noalias !150
  %1195 = getelementptr i16, i16* %1188, i64 8
  %1196 = bitcast i16* %1195 to <8 x i16>*
  store <8 x i16> %1193, <8 x i16>* %1196, align 2, !alias.scope !153, !noalias !150
  %1197 = or i64 %1185, 16
  %1198 = getelementptr i16, i16* %1129, i64 %1197
  %1199 = getelementptr i16, i16* %1163, i64 %1197
  %1200 = bitcast i16* %1198 to <8 x i16>*
  %1201 = load <8 x i16>, <8 x i16>* %1200, align 2, !alias.scope !150
  %1202 = getelementptr i16, i16* %1198, i64 8
  %1203 = bitcast i16* %1202 to <8 x i16>*
  %1204 = load <8 x i16>, <8 x i16>* %1203, align 2, !alias.scope !150
  %1205 = bitcast i16* %1199 to <8 x i16>*
  store <8 x i16> %1201, <8 x i16>* %1205, align 2, !alias.scope !153, !noalias !150
  %1206 = getelementptr i16, i16* %1199, i64 8
  %1207 = bitcast i16* %1206 to <8 x i16>*
  store <8 x i16> %1204, <8 x i16>* %1207, align 2, !alias.scope !153, !noalias !150
  %1208 = or i64 %1185, 32
  %1209 = getelementptr i16, i16* %1129, i64 %1208
  %1210 = getelementptr i16, i16* %1163, i64 %1208
  %1211 = bitcast i16* %1209 to <8 x i16>*
  %1212 = load <8 x i16>, <8 x i16>* %1211, align 2, !alias.scope !150
  %1213 = getelementptr i16, i16* %1209, i64 8
  %1214 = bitcast i16* %1213 to <8 x i16>*
  %1215 = load <8 x i16>, <8 x i16>* %1214, align 2, !alias.scope !150
  %1216 = bitcast i16* %1210 to <8 x i16>*
  store <8 x i16> %1212, <8 x i16>* %1216, align 2, !alias.scope !153, !noalias !150
  %1217 = getelementptr i16, i16* %1210, i64 8
  %1218 = bitcast i16* %1217 to <8 x i16>*
  store <8 x i16> %1215, <8 x i16>* %1218, align 2, !alias.scope !153, !noalias !150
  %1219 = or i64 %1185, 48
  %1220 = getelementptr i16, i16* %1129, i64 %1219
  %1221 = getelementptr i16, i16* %1163, i64 %1219
  %1222 = bitcast i16* %1220 to <8 x i16>*
  %1223 = load <8 x i16>, <8 x i16>* %1222, align 2, !alias.scope !150
  %1224 = getelementptr i16, i16* %1220, i64 8
  %1225 = bitcast i16* %1224 to <8 x i16>*
  %1226 = load <8 x i16>, <8 x i16>* %1225, align 2, !alias.scope !150
  %1227 = bitcast i16* %1221 to <8 x i16>*
  store <8 x i16> %1223, <8 x i16>* %1227, align 2, !alias.scope !153, !noalias !150
  %1228 = getelementptr i16, i16* %1221, i64 8
  %1229 = bitcast i16* %1228 to <8 x i16>*
  store <8 x i16> %1226, <8 x i16>* %1229, align 2, !alias.scope !153, !noalias !150
  %1230 = add i64 %1185, 64
  %1231 = add i64 %1186, -4
  %1232 = icmp eq i64 %1231, 0
  br i1 %1232, label %1233, label %1184, !llvm.loop !155

1233:                                             ; preds = %1184, %1172
  %1234 = phi i64 [ 0, %1172 ], [ %1230, %1184 ]
  %1235 = icmp eq i64 %1180, 0
  br i1 %1235, label %1252, label %1236

1236:                                             ; preds = %1233, %1236
  %1237 = phi i64 [ %1249, %1236 ], [ %1234, %1233 ]
  %1238 = phi i64 [ %1250, %1236 ], [ %1180, %1233 ]
  %1239 = getelementptr i16, i16* %1129, i64 %1237
  %1240 = getelementptr i16, i16* %1163, i64 %1237
  %1241 = bitcast i16* %1239 to <8 x i16>*
  %1242 = load <8 x i16>, <8 x i16>* %1241, align 2, !alias.scope !150
  %1243 = getelementptr i16, i16* %1239, i64 8
  %1244 = bitcast i16* %1243 to <8 x i16>*
  %1245 = load <8 x i16>, <8 x i16>* %1244, align 2, !alias.scope !150
  %1246 = bitcast i16* %1240 to <8 x i16>*
  store <8 x i16> %1242, <8 x i16>* %1246, align 2, !alias.scope !153, !noalias !150
  %1247 = getelementptr i16, i16* %1240, i64 8
  %1248 = bitcast i16* %1247 to <8 x i16>*
  store <8 x i16> %1245, <8 x i16>* %1248, align 2, !alias.scope !153, !noalias !150
  %1249 = add i64 %1237, 16
  %1250 = add i64 %1238, -1
  %1251 = icmp eq i64 %1250, 0
  br i1 %1251, label %1252, label %1236, !llvm.loop !156

1252:                                             ; preds = %1236, %1233
  %1253 = icmp eq i64 %1173, %1137
  br i1 %1253, label %1307, label %1254

1254:                                             ; preds = %1252, %1165, %1162
  %1255 = phi i64 [ %1137, %1165 ], [ %1137, %1162 ], [ %1174, %1252 ]
  %1256 = phi i16* [ %1129, %1165 ], [ %1129, %1162 ], [ %1175, %1252 ]
  %1257 = phi i16* [ %1163, %1165 ], [ %1163, %1162 ], [ %1176, %1252 ]
  %1258 = add nsw i64 %1255, -1
  %1259 = and i64 %1255, 7
  %1260 = icmp eq i64 %1259, 0
  br i1 %1260, label %1272, label %1261

1261:                                             ; preds = %1254, %1261
  %1262 = phi i64 [ %1267, %1261 ], [ %1255, %1254 ]
  %1263 = phi i16* [ %1269, %1261 ], [ %1256, %1254 ]
  %1264 = phi i16* [ %1268, %1261 ], [ %1257, %1254 ]
  %1265 = phi i64 [ %1270, %1261 ], [ %1259, %1254 ]
  %1266 = load i16, i16* %1263, align 2
  store i16 %1266, i16* %1264, align 2
  %1267 = add i64 %1262, -1
  %1268 = getelementptr inbounds i16, i16* %1264, i64 1
  %1269 = getelementptr inbounds i16, i16* %1263, i64 1
  %1270 = add i64 %1265, -1
  %1271 = icmp eq i64 %1270, 0
  br i1 %1271, label %1272, label %1261, !llvm.loop !157

1272:                                             ; preds = %1261, %1254
  %1273 = phi i64 [ %1255, %1254 ], [ %1267, %1261 ]
  %1274 = phi i16* [ %1256, %1254 ], [ %1269, %1261 ]
  %1275 = phi i16* [ %1257, %1254 ], [ %1268, %1261 ]
  %1276 = icmp ult i64 %1258, 7
  br i1 %1276, label %1307, label %1277

1277:                                             ; preds = %1272, %1277
  %1278 = phi i64 [ %1303, %1277 ], [ %1273, %1272 ]
  %1279 = phi i16* [ %1305, %1277 ], [ %1274, %1272 ]
  %1280 = phi i16* [ %1304, %1277 ], [ %1275, %1272 ]
  %1281 = load i16, i16* %1279, align 2
  store i16 %1281, i16* %1280, align 2
  %1282 = getelementptr inbounds i16, i16* %1280, i64 1
  %1283 = getelementptr inbounds i16, i16* %1279, i64 1
  %1284 = load i16, i16* %1283, align 2
  store i16 %1284, i16* %1282, align 2
  %1285 = getelementptr inbounds i16, i16* %1280, i64 2
  %1286 = getelementptr inbounds i16, i16* %1279, i64 2
  %1287 = load i16, i16* %1286, align 2
  store i16 %1287, i16* %1285, align 2
  %1288 = getelementptr inbounds i16, i16* %1280, i64 3
  %1289 = getelementptr inbounds i16, i16* %1279, i64 3
  %1290 = load i16, i16* %1289, align 2
  store i16 %1290, i16* %1288, align 2
  %1291 = getelementptr inbounds i16, i16* %1280, i64 4
  %1292 = getelementptr inbounds i16, i16* %1279, i64 4
  %1293 = load i16, i16* %1292, align 2
  store i16 %1293, i16* %1291, align 2
  %1294 = getelementptr inbounds i16, i16* %1280, i64 5
  %1295 = getelementptr inbounds i16, i16* %1279, i64 5
  %1296 = load i16, i16* %1295, align 2
  store i16 %1296, i16* %1294, align 2
  %1297 = getelementptr inbounds i16, i16* %1280, i64 6
  %1298 = getelementptr inbounds i16, i16* %1279, i64 6
  %1299 = load i16, i16* %1298, align 2
  store i16 %1299, i16* %1297, align 2
  %1300 = getelementptr inbounds i16, i16* %1280, i64 7
  %1301 = getelementptr inbounds i16, i16* %1279, i64 7
  %1302 = load i16, i16* %1301, align 2
  store i16 %1302, i16* %1300, align 2
  %1303 = add i64 %1278, -8
  %1304 = getelementptr inbounds i16, i16* %1280, i64 8
  %1305 = getelementptr inbounds i16, i16* %1279, i64 8
  %1306 = icmp eq i64 %1303, 0
  br i1 %1306, label %1307, label %1277, !llvm.loop !158

1307:                                             ; preds = %1272, %1277, %1252, %1156
  %1308 = phi i16* [ %1160, %1156 ], [ %1163, %1252 ], [ %1163, %1277 ], [ %1163, %1272 ]
  %1309 = getelementptr inbounds i16, i16* %1308, i64 %1137
  store i16 0, i16* %1309, align 2
  store i8 1, i8* %1130, align 8
  %1310 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %73, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1311 = bitcast %"class.std::__1::basic_string"* %1310 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1312 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1311, i64 0, i32 1, i32 1
  %1313 = load i8, i8* %1312, align 1
  %1314 = icmp slt i8 %1313, 0
  br i1 %1314, label %1315, label %1318

1315:                                             ; preds = %1307
  %1316 = bitcast %"class.std::__1::basic_string"* %1310 to i8**
  %1317 = load i8*, i8** %1316, align 8
  call void @_ZdlPv(i8* %1317) #14
  br label %1318

1318:                                             ; preds = %1315, %1307
  store i8 0, i8* %1130, align 8
  br label %1319

1319:                                             ; preds = %1126, %1318
  %1320 = bitcast i32* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1320) #13, !noalias !159
  store i32 -1431655766, i32* %53, align 4, !noalias !159
  %1321 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %93, i32* nonnull %53) #13, !noalias !159
  br i1 %1321, label %1324, label %1322

1322:                                             ; preds = %1319
  %1323 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1323, align 4, !noalias !159
  br label %1342

1324:                                             ; preds = %1319
  %1325 = load i32, i32* %53, align 4, !noalias !159
  %1326 = icmp slt i32 %1325, 0
  br i1 %1326, label %1342, label %1327

1327:                                             ; preds = %1324
  %1328 = bitcast i8** %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1328) #13, !noalias !159
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %54, align 8, !noalias !159
  %1329 = call zeroext i1 @_ZN4base14PickleIterator9ReadBytesEPPKci(%"class.base::PickleIterator"* %93, i8** nonnull %54, i32 %1325) #13
  br i1 %1329, label %1332, label %1330

1330:                                             ; preds = %1327
  %1331 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1331, align 4, !noalias !159
  br label %1338

1332:                                             ; preds = %1327
  %1333 = load i32, i32* %53, align 4, !noalias !159
  %1334 = ashr i32 %1333, 1
  %1335 = bitcast i8** %54 to i16**
  %1336 = load i16*, i16** %1335, align 8, !noalias !159
  %1337 = bitcast i16* %1336 to i8*
  br label %1338

1338:                                             ; preds = %1332, %1330
  %1339 = phi i32 [ %1334, %1332 ], [ -1431655766, %1330 ]
  %1340 = phi i8* [ %1337, %1332 ], [ null, %1330 ]
  %1341 = phi i16* [ %1336, %1332 ], [ null, %1330 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1328) #13, !noalias !159
  br label %1342

1342:                                             ; preds = %1338, %1324, %1322
  %1343 = phi i32 [ -1431655766, %1324 ], [ %1339, %1338 ], [ -1431655766, %1322 ]
  %1344 = phi i8* [ null, %1324 ], [ %1340, %1338 ], [ null, %1322 ]
  %1345 = phi i16* [ null, %1324 ], [ %1341, %1338 ], [ null, %1322 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1320) #13, !noalias !159
  %1346 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %1347 = bitcast %"class.absl::optional"* %74 to i64*
  store i64 -6148914691236517376, i64* %1347, align 8, !alias.scope !159
  %1348 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %74, i64 0, i32 0, i32 0, i32 0, i32 1
  %1349 = bitcast %union.anon* %1348 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1349, i8 0, i64 24, i1 false) #13, !alias.scope !159
  %1350 = icmp eq i16* %1345, null
  br i1 %1350, label %1535, label %1351

1351:                                             ; preds = %1342
  %1352 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %74, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1353 = sext i32 %1343 to i64
  %1354 = icmp slt i32 %1343, 0
  br i1 %1354, label %1355, label %1357

1355:                                             ; preds = %1351
  %1356 = bitcast %"class.std::__1::basic_string"* %1352 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %1356) #15
  unreachable

1357:                                             ; preds = %1351
  %1358 = icmp ult i32 %1343, 11
  br i1 %1358, label %1372, label %1359

1359:                                             ; preds = %1357
  %1360 = add nuw nsw i64 %1353, 8
  %1361 = and i64 %1360, -8
  %1362 = icmp slt i64 %1361, 0
  br i1 %1362, label %1363, label %1364

1363:                                             ; preds = %1359
  call void @abort() #15
  unreachable

1364:                                             ; preds = %1359
  %1365 = shl nsw i64 %1361, 1
  %1366 = call i8* @_Znwm(i64 %1365) #14
  %1367 = bitcast i8* %1366 to i16*
  %1368 = bitcast %"class.std::__1::basic_string"* %1352 to i8**
  store i8* %1366, i8** %1368, align 8
  %1369 = or i64 %1361, -9223372036854775808
  %1370 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %74, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1369, i64* %1370, align 8
  %1371 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %74, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1353, i64* %1371, align 8
  br label %1378

1372:                                             ; preds = %1357
  %1373 = trunc i32 %1343 to i8
  %1374 = bitcast %"class.std::__1::basic_string"* %1352 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1375 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1374, i64 0, i32 1, i32 1
  store i8 %1373, i8* %1375, align 1
  %1376 = bitcast %"class.std::__1::basic_string"* %1352 to i16*
  %1377 = icmp eq i32 %1343, 0
  br i1 %1377, label %1523, label %1378

1378:                                             ; preds = %1372, %1364
  %1379 = phi i16* [ %1367, %1364 ], [ %1376, %1372 ]
  %1380 = icmp ult i32 %1343, 16
  br i1 %1380, label %1470, label %1381

1381:                                             ; preds = %1378
  %1382 = getelementptr i16, i16* %1379, i64 %1353
  %1383 = bitcast i16* %1382 to i8*
  %1384 = getelementptr i16, i16* %1345, i64 %1353
  %1385 = icmp ult i16* %1379, %1384
  %1386 = icmp ult i8* %1344, %1383
  %1387 = and i1 %1385, %1386
  br i1 %1387, label %1470, label %1388

1388:                                             ; preds = %1381
  %1389 = and i64 %1353, -16
  %1390 = sub nsw i64 %1353, %1389
  %1391 = getelementptr i16, i16* %1345, i64 %1389
  %1392 = getelementptr i16, i16* %1379, i64 %1389
  %1393 = add nsw i64 %1389, -16
  %1394 = lshr exact i64 %1393, 4
  %1395 = add nuw nsw i64 %1394, 1
  %1396 = and i64 %1395, 3
  %1397 = icmp ult i64 %1393, 48
  br i1 %1397, label %1449, label %1398

1398:                                             ; preds = %1388
  %1399 = sub nsw i64 %1395, %1396
  br label %1400

1400:                                             ; preds = %1400, %1398
  %1401 = phi i64 [ 0, %1398 ], [ %1446, %1400 ]
  %1402 = phi i64 [ %1399, %1398 ], [ %1447, %1400 ]
  %1403 = getelementptr i16, i16* %1345, i64 %1401
  %1404 = getelementptr i16, i16* %1379, i64 %1401
  %1405 = bitcast i16* %1403 to <8 x i16>*
  %1406 = load <8 x i16>, <8 x i16>* %1405, align 2, !alias.scope !162
  %1407 = getelementptr i16, i16* %1403, i64 8
  %1408 = bitcast i16* %1407 to <8 x i16>*
  %1409 = load <8 x i16>, <8 x i16>* %1408, align 2, !alias.scope !162
  %1410 = bitcast i16* %1404 to <8 x i16>*
  store <8 x i16> %1406, <8 x i16>* %1410, align 2, !alias.scope !165, !noalias !162
  %1411 = getelementptr i16, i16* %1404, i64 8
  %1412 = bitcast i16* %1411 to <8 x i16>*
  store <8 x i16> %1409, <8 x i16>* %1412, align 2, !alias.scope !165, !noalias !162
  %1413 = or i64 %1401, 16
  %1414 = getelementptr i16, i16* %1345, i64 %1413
  %1415 = getelementptr i16, i16* %1379, i64 %1413
  %1416 = bitcast i16* %1414 to <8 x i16>*
  %1417 = load <8 x i16>, <8 x i16>* %1416, align 2, !alias.scope !162
  %1418 = getelementptr i16, i16* %1414, i64 8
  %1419 = bitcast i16* %1418 to <8 x i16>*
  %1420 = load <8 x i16>, <8 x i16>* %1419, align 2, !alias.scope !162
  %1421 = bitcast i16* %1415 to <8 x i16>*
  store <8 x i16> %1417, <8 x i16>* %1421, align 2, !alias.scope !165, !noalias !162
  %1422 = getelementptr i16, i16* %1415, i64 8
  %1423 = bitcast i16* %1422 to <8 x i16>*
  store <8 x i16> %1420, <8 x i16>* %1423, align 2, !alias.scope !165, !noalias !162
  %1424 = or i64 %1401, 32
  %1425 = getelementptr i16, i16* %1345, i64 %1424
  %1426 = getelementptr i16, i16* %1379, i64 %1424
  %1427 = bitcast i16* %1425 to <8 x i16>*
  %1428 = load <8 x i16>, <8 x i16>* %1427, align 2, !alias.scope !162
  %1429 = getelementptr i16, i16* %1425, i64 8
  %1430 = bitcast i16* %1429 to <8 x i16>*
  %1431 = load <8 x i16>, <8 x i16>* %1430, align 2, !alias.scope !162
  %1432 = bitcast i16* %1426 to <8 x i16>*
  store <8 x i16> %1428, <8 x i16>* %1432, align 2, !alias.scope !165, !noalias !162
  %1433 = getelementptr i16, i16* %1426, i64 8
  %1434 = bitcast i16* %1433 to <8 x i16>*
  store <8 x i16> %1431, <8 x i16>* %1434, align 2, !alias.scope !165, !noalias !162
  %1435 = or i64 %1401, 48
  %1436 = getelementptr i16, i16* %1345, i64 %1435
  %1437 = getelementptr i16, i16* %1379, i64 %1435
  %1438 = bitcast i16* %1436 to <8 x i16>*
  %1439 = load <8 x i16>, <8 x i16>* %1438, align 2, !alias.scope !162
  %1440 = getelementptr i16, i16* %1436, i64 8
  %1441 = bitcast i16* %1440 to <8 x i16>*
  %1442 = load <8 x i16>, <8 x i16>* %1441, align 2, !alias.scope !162
  %1443 = bitcast i16* %1437 to <8 x i16>*
  store <8 x i16> %1439, <8 x i16>* %1443, align 2, !alias.scope !165, !noalias !162
  %1444 = getelementptr i16, i16* %1437, i64 8
  %1445 = bitcast i16* %1444 to <8 x i16>*
  store <8 x i16> %1442, <8 x i16>* %1445, align 2, !alias.scope !165, !noalias !162
  %1446 = add i64 %1401, 64
  %1447 = add i64 %1402, -4
  %1448 = icmp eq i64 %1447, 0
  br i1 %1448, label %1449, label %1400, !llvm.loop !167

1449:                                             ; preds = %1400, %1388
  %1450 = phi i64 [ 0, %1388 ], [ %1446, %1400 ]
  %1451 = icmp eq i64 %1396, 0
  br i1 %1451, label %1468, label %1452

1452:                                             ; preds = %1449, %1452
  %1453 = phi i64 [ %1465, %1452 ], [ %1450, %1449 ]
  %1454 = phi i64 [ %1466, %1452 ], [ %1396, %1449 ]
  %1455 = getelementptr i16, i16* %1345, i64 %1453
  %1456 = getelementptr i16, i16* %1379, i64 %1453
  %1457 = bitcast i16* %1455 to <8 x i16>*
  %1458 = load <8 x i16>, <8 x i16>* %1457, align 2, !alias.scope !162
  %1459 = getelementptr i16, i16* %1455, i64 8
  %1460 = bitcast i16* %1459 to <8 x i16>*
  %1461 = load <8 x i16>, <8 x i16>* %1460, align 2, !alias.scope !162
  %1462 = bitcast i16* %1456 to <8 x i16>*
  store <8 x i16> %1458, <8 x i16>* %1462, align 2, !alias.scope !165, !noalias !162
  %1463 = getelementptr i16, i16* %1456, i64 8
  %1464 = bitcast i16* %1463 to <8 x i16>*
  store <8 x i16> %1461, <8 x i16>* %1464, align 2, !alias.scope !165, !noalias !162
  %1465 = add i64 %1453, 16
  %1466 = add i64 %1454, -1
  %1467 = icmp eq i64 %1466, 0
  br i1 %1467, label %1468, label %1452, !llvm.loop !168

1468:                                             ; preds = %1452, %1449
  %1469 = icmp eq i64 %1389, %1353
  br i1 %1469, label %1523, label %1470

1470:                                             ; preds = %1468, %1381, %1378
  %1471 = phi i64 [ %1353, %1381 ], [ %1353, %1378 ], [ %1390, %1468 ]
  %1472 = phi i16* [ %1345, %1381 ], [ %1345, %1378 ], [ %1391, %1468 ]
  %1473 = phi i16* [ %1379, %1381 ], [ %1379, %1378 ], [ %1392, %1468 ]
  %1474 = add nsw i64 %1471, -1
  %1475 = and i64 %1471, 7
  %1476 = icmp eq i64 %1475, 0
  br i1 %1476, label %1488, label %1477

1477:                                             ; preds = %1470, %1477
  %1478 = phi i64 [ %1483, %1477 ], [ %1471, %1470 ]
  %1479 = phi i16* [ %1485, %1477 ], [ %1472, %1470 ]
  %1480 = phi i16* [ %1484, %1477 ], [ %1473, %1470 ]
  %1481 = phi i64 [ %1486, %1477 ], [ %1475, %1470 ]
  %1482 = load i16, i16* %1479, align 2
  store i16 %1482, i16* %1480, align 2
  %1483 = add i64 %1478, -1
  %1484 = getelementptr inbounds i16, i16* %1480, i64 1
  %1485 = getelementptr inbounds i16, i16* %1479, i64 1
  %1486 = add i64 %1481, -1
  %1487 = icmp eq i64 %1486, 0
  br i1 %1487, label %1488, label %1477, !llvm.loop !169

1488:                                             ; preds = %1477, %1470
  %1489 = phi i64 [ %1471, %1470 ], [ %1483, %1477 ]
  %1490 = phi i16* [ %1472, %1470 ], [ %1485, %1477 ]
  %1491 = phi i16* [ %1473, %1470 ], [ %1484, %1477 ]
  %1492 = icmp ult i64 %1474, 7
  br i1 %1492, label %1523, label %1493

1493:                                             ; preds = %1488, %1493
  %1494 = phi i64 [ %1519, %1493 ], [ %1489, %1488 ]
  %1495 = phi i16* [ %1521, %1493 ], [ %1490, %1488 ]
  %1496 = phi i16* [ %1520, %1493 ], [ %1491, %1488 ]
  %1497 = load i16, i16* %1495, align 2
  store i16 %1497, i16* %1496, align 2
  %1498 = getelementptr inbounds i16, i16* %1496, i64 1
  %1499 = getelementptr inbounds i16, i16* %1495, i64 1
  %1500 = load i16, i16* %1499, align 2
  store i16 %1500, i16* %1498, align 2
  %1501 = getelementptr inbounds i16, i16* %1496, i64 2
  %1502 = getelementptr inbounds i16, i16* %1495, i64 2
  %1503 = load i16, i16* %1502, align 2
  store i16 %1503, i16* %1501, align 2
  %1504 = getelementptr inbounds i16, i16* %1496, i64 3
  %1505 = getelementptr inbounds i16, i16* %1495, i64 3
  %1506 = load i16, i16* %1505, align 2
  store i16 %1506, i16* %1504, align 2
  %1507 = getelementptr inbounds i16, i16* %1496, i64 4
  %1508 = getelementptr inbounds i16, i16* %1495, i64 4
  %1509 = load i16, i16* %1508, align 2
  store i16 %1509, i16* %1507, align 2
  %1510 = getelementptr inbounds i16, i16* %1496, i64 5
  %1511 = getelementptr inbounds i16, i16* %1495, i64 5
  %1512 = load i16, i16* %1511, align 2
  store i16 %1512, i16* %1510, align 2
  %1513 = getelementptr inbounds i16, i16* %1496, i64 6
  %1514 = getelementptr inbounds i16, i16* %1495, i64 6
  %1515 = load i16, i16* %1514, align 2
  store i16 %1515, i16* %1513, align 2
  %1516 = getelementptr inbounds i16, i16* %1496, i64 7
  %1517 = getelementptr inbounds i16, i16* %1495, i64 7
  %1518 = load i16, i16* %1517, align 2
  store i16 %1518, i16* %1516, align 2
  %1519 = add i64 %1494, -8
  %1520 = getelementptr inbounds i16, i16* %1496, i64 8
  %1521 = getelementptr inbounds i16, i16* %1495, i64 8
  %1522 = icmp eq i64 %1519, 0
  br i1 %1522, label %1523, label %1493, !llvm.loop !170

1523:                                             ; preds = %1488, %1493, %1468, %1372
  %1524 = phi i16* [ %1376, %1372 ], [ %1379, %1468 ], [ %1379, %1493 ], [ %1379, %1488 ]
  %1525 = getelementptr inbounds i16, i16* %1524, i64 %1353
  store i16 0, i16* %1525, align 2
  store i8 1, i8* %1346, align 8
  %1526 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %74, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1527 = bitcast %"class.std::__1::basic_string"* %1526 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1528 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1527, i64 0, i32 1, i32 1
  %1529 = load i8, i8* %1528, align 1
  %1530 = icmp slt i8 %1529, 0
  br i1 %1530, label %1531, label %1534

1531:                                             ; preds = %1523
  %1532 = bitcast %"class.std::__1::basic_string"* %1526 to i8**
  %1533 = load i8*, i8** %1532, align 8
  call void @_ZdlPv(i8* %1533) #14
  br label %1534

1534:                                             ; preds = %1531, %1523
  store i8 0, i8* %1346, align 8
  br label %1535

1535:                                             ; preds = %1342, %1534
  %1536 = bitcast i32* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1536) #13
  store i32 0, i32* %52, align 4
  %1537 = bitcast i8** %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1537) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %51, align 8
  %1538 = call zeroext i1 @_ZN4base14PickleIterator8ReadDataEPPKcPi(%"class.base::PickleIterator"* %93, i8** nonnull %51, i32* nonnull %52) #13
  br i1 %1538, label %1541, label %1539

1539:                                             ; preds = %1535
  %1540 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1540, align 4
  store i32 0, i32* %52, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1537) #13
  br label %1544

1541:                                             ; preds = %1535
  %1542 = load i32, i32* %52, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1537) #13
  %1543 = icmp eq i32 %1542, 8
  br i1 %1543, label %1546, label %1544

1544:                                             ; preds = %1541, %1539
  %1545 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1545, align 4
  br label %1546

1546:                                             ; preds = %1541, %1544
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1536) #13
  %1547 = load i32, i32* %79, align 8
  br label %1548

1548:                                             ; preds = %1546, %884
  %1549 = phi i32 [ %1547, %1546 ], [ %885, %884 ]
  %1550 = icmp sgt i32 %1549, 23
  br i1 %1550, label %1551, label %1558

1551:                                             ; preds = %820, %1548
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %50) #13
  store i8 -86, i8* %50, align 1
  %1552 = call zeroext i1 @_ZN4base14PickleIterator8ReadBoolEPb(%"class.base::PickleIterator"* %93, i8* nonnull %50) #13
  br i1 %1552, label %1553, label %1556

1553:                                             ; preds = %1551
  %1554 = load i8, i8* %50, align 1, !range !2
  %1555 = icmp ne i8 %1554, 0
  br label %1561

1556:                                             ; preds = %1551
  %1557 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1557, align 4
  br label %1561

1558:                                             ; preds = %1548
  %1559 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 7
  store i8 1, i8* %1559, align 4
  %1560 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 7
  br label %1566

1561:                                             ; preds = %1556, %1553
  %1562 = phi i1 [ %1555, %1553 ], [ false, %1556 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %50) #13
  %1563 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 7
  %1564 = zext i1 %1562 to i8
  store i8 %1564, i8* %1563, align 4
  %1565 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 7
  br i1 %1562, label %1566, label %1590

1566:                                             ; preds = %1561, %1558
  %1567 = phi i8* [ %1560, %1558 ], [ %1565, %1561 ]
  %1568 = bitcast i32* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1568) #13
  store i32 -1431655766, i32* %49, align 4
  %1569 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %93, i32* nonnull %49) #13
  br i1 %1569, label %1570, label %1572

1570:                                             ; preds = %1566
  %1571 = load i32, i32* %49, align 4
  br label %1574

1572:                                             ; preds = %1566
  %1573 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1573, align 4
  br label %1574

1574:                                             ; preds = %1570, %1572
  %1575 = phi i32 [ %1571, %1570 ], [ 0, %1572 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1568) #13
  %1576 = bitcast i32* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1576) #13
  store i32 -1431655766, i32* %48, align 4
  %1577 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %93, i32* nonnull %48) #13
  br i1 %1577, label %1578, label %1580

1578:                                             ; preds = %1574
  %1579 = load i32, i32* %48, align 4
  br label %1582

1580:                                             ; preds = %1574
  %1581 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1581, align 4
  br label %1582

1582:                                             ; preds = %1578, %1580
  %1583 = phi i32 [ %1579, %1578 ], [ 0, %1580 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1576) #13
  %1584 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 9
  %1585 = bitcast %"class.gfx::Point"* %1584 to i64*
  %1586 = zext i32 %1583 to i64
  %1587 = shl nuw i64 %1586, 32
  %1588 = zext i32 %1575 to i64
  %1589 = or i64 %1587, %1588
  store i64 %1589, i64* %1585, align 8
  br label %1590

1590:                                             ; preds = %1561, %1582
  %1591 = phi i8* [ %1565, %1561 ], [ %1567, %1582 ]
  %1592 = load i32, i32* %79, align 8
  %1593 = icmp slt i32 %1592, 15
  br i1 %1593, label %1594, label %1604

1594:                                             ; preds = %1590
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %47) #13
  store i8 -86, i8* %47, align 1
  %1595 = call zeroext i1 @_ZN4base14PickleIterator8ReadBoolEPb(%"class.base::PickleIterator"* %93, i8* nonnull %47) #13
  br i1 %1595, label %1598, label %1596

1596:                                             ; preds = %1594
  %1597 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1597, align 4
  br label %1598

1598:                                             ; preds = %1594, %1596
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %47) #13
  %1599 = bitcast i32* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1599) #13
  store i32 -1431655766, i32* %46, align 4
  %1600 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %93, i32* nonnull %46) #13
  br i1 %1600, label %1603, label %1601

1601:                                             ; preds = %1598
  %1602 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1602, align 4
  br label %1603

1603:                                             ; preds = %1598, %1601
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1599) #13
  br label %1604

1604:                                             ; preds = %1603, %1590
  %1605 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1605) #13
  %1606 = bitcast i32* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1606) #13, !noalias !171
  store i32 -1431655766, i32* %44, align 4, !noalias !171
  %1607 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %93, i32* nonnull %44) #13, !noalias !171
  br i1 %1607, label %1610, label %1608

1608:                                             ; preds = %1604
  %1609 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1609, align 4, !noalias !171
  br label %1628

1610:                                             ; preds = %1604
  %1611 = load i32, i32* %44, align 4, !noalias !171
  %1612 = icmp slt i32 %1611, 0
  br i1 %1612, label %1628, label %1613

1613:                                             ; preds = %1610
  %1614 = bitcast i8** %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1614) #13, !noalias !171
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %45, align 8, !noalias !171
  %1615 = call zeroext i1 @_ZN4base14PickleIterator9ReadBytesEPPKci(%"class.base::PickleIterator"* %93, i8** nonnull %45, i32 %1611) #13
  br i1 %1615, label %1618, label %1616

1616:                                             ; preds = %1613
  %1617 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1617, align 4, !noalias !171
  br label %1624

1618:                                             ; preds = %1613
  %1619 = load i32, i32* %44, align 4, !noalias !171
  %1620 = ashr i32 %1619, 1
  %1621 = bitcast i8** %45 to i16**
  %1622 = load i16*, i16** %1621, align 8, !noalias !171
  %1623 = bitcast i16* %1622 to i8*
  br label %1624

1624:                                             ; preds = %1618, %1616
  %1625 = phi i32 [ %1620, %1618 ], [ -1431655766, %1616 ]
  %1626 = phi i8* [ %1623, %1618 ], [ null, %1616 ]
  %1627 = phi i16* [ %1622, %1618 ], [ null, %1616 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1614) #13, !noalias !171
  br label %1628

1628:                                             ; preds = %1624, %1610, %1608
  %1629 = phi i32 [ -1431655766, %1610 ], [ %1625, %1624 ], [ -1431655766, %1608 ]
  %1630 = phi i8* [ null, %1610 ], [ %1626, %1624 ], [ null, %1608 ]
  %1631 = phi i16* [ null, %1610 ], [ %1627, %1624 ], [ null, %1608 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1606) #13, !noalias !171
  %1632 = bitcast %"class.absl::optional"* %75 to i64*
  store i64 -6148914691236517376, i64* %1632, align 8, !alias.scope !171
  %1633 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %75, i64 0, i32 0, i32 0, i32 0, i32 1
  %1634 = bitcast %union.anon* %1633 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1634, i8 0, i64 24, i1 false) #13, !alias.scope !171
  %1635 = icmp eq i16* %1631, null
  br i1 %1635, label %1832, label %1636

1636:                                             ; preds = %1628
  %1637 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %75, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1638 = sext i32 %1629 to i64
  %1639 = icmp slt i32 %1629, 0
  br i1 %1639, label %1640, label %1642

1640:                                             ; preds = %1636
  %1641 = bitcast %"class.std::__1::basic_string"* %1637 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %1641) #15
  unreachable

1642:                                             ; preds = %1636
  %1643 = icmp ult i32 %1629, 11
  br i1 %1643, label %1657, label %1644

1644:                                             ; preds = %1642
  %1645 = add nuw nsw i64 %1638, 8
  %1646 = and i64 %1645, -8
  %1647 = icmp slt i64 %1646, 0
  br i1 %1647, label %1648, label %1649

1648:                                             ; preds = %1644
  call void @abort() #15
  unreachable

1649:                                             ; preds = %1644
  %1650 = shl nsw i64 %1646, 1
  %1651 = call i8* @_Znwm(i64 %1650) #14
  %1652 = bitcast i8* %1651 to i16*
  %1653 = bitcast %"class.std::__1::basic_string"* %1637 to i8**
  store i8* %1651, i8** %1653, align 8
  %1654 = or i64 %1646, -9223372036854775808
  %1655 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %75, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1654, i64* %1655, align 8
  %1656 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %75, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1638, i64* %1656, align 8
  br label %1663

1657:                                             ; preds = %1642
  %1658 = trunc i32 %1629 to i8
  %1659 = bitcast %"class.std::__1::basic_string"* %1637 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1660 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1659, i64 0, i32 1, i32 1
  store i8 %1658, i8* %1660, align 1
  %1661 = bitcast %"class.std::__1::basic_string"* %1637 to i16*
  %1662 = icmp eq i32 %1629, 0
  br i1 %1662, label %1808, label %1663

1663:                                             ; preds = %1657, %1649
  %1664 = phi i16* [ %1652, %1649 ], [ %1661, %1657 ]
  %1665 = icmp ult i32 %1629, 16
  br i1 %1665, label %1755, label %1666

1666:                                             ; preds = %1663
  %1667 = getelementptr i16, i16* %1664, i64 %1638
  %1668 = bitcast i16* %1667 to i8*
  %1669 = getelementptr i16, i16* %1631, i64 %1638
  %1670 = icmp ult i16* %1664, %1669
  %1671 = icmp ult i8* %1630, %1668
  %1672 = and i1 %1670, %1671
  br i1 %1672, label %1755, label %1673

1673:                                             ; preds = %1666
  %1674 = and i64 %1638, -16
  %1675 = sub nsw i64 %1638, %1674
  %1676 = getelementptr i16, i16* %1631, i64 %1674
  %1677 = getelementptr i16, i16* %1664, i64 %1674
  %1678 = add nsw i64 %1674, -16
  %1679 = lshr exact i64 %1678, 4
  %1680 = add nuw nsw i64 %1679, 1
  %1681 = and i64 %1680, 3
  %1682 = icmp ult i64 %1678, 48
  br i1 %1682, label %1734, label %1683

1683:                                             ; preds = %1673
  %1684 = sub nsw i64 %1680, %1681
  br label %1685

1685:                                             ; preds = %1685, %1683
  %1686 = phi i64 [ 0, %1683 ], [ %1731, %1685 ]
  %1687 = phi i64 [ %1684, %1683 ], [ %1732, %1685 ]
  %1688 = getelementptr i16, i16* %1631, i64 %1686
  %1689 = getelementptr i16, i16* %1664, i64 %1686
  %1690 = bitcast i16* %1688 to <8 x i16>*
  %1691 = load <8 x i16>, <8 x i16>* %1690, align 2, !alias.scope !174
  %1692 = getelementptr i16, i16* %1688, i64 8
  %1693 = bitcast i16* %1692 to <8 x i16>*
  %1694 = load <8 x i16>, <8 x i16>* %1693, align 2, !alias.scope !174
  %1695 = bitcast i16* %1689 to <8 x i16>*
  store <8 x i16> %1691, <8 x i16>* %1695, align 2, !alias.scope !177, !noalias !174
  %1696 = getelementptr i16, i16* %1689, i64 8
  %1697 = bitcast i16* %1696 to <8 x i16>*
  store <8 x i16> %1694, <8 x i16>* %1697, align 2, !alias.scope !177, !noalias !174
  %1698 = or i64 %1686, 16
  %1699 = getelementptr i16, i16* %1631, i64 %1698
  %1700 = getelementptr i16, i16* %1664, i64 %1698
  %1701 = bitcast i16* %1699 to <8 x i16>*
  %1702 = load <8 x i16>, <8 x i16>* %1701, align 2, !alias.scope !174
  %1703 = getelementptr i16, i16* %1699, i64 8
  %1704 = bitcast i16* %1703 to <8 x i16>*
  %1705 = load <8 x i16>, <8 x i16>* %1704, align 2, !alias.scope !174
  %1706 = bitcast i16* %1700 to <8 x i16>*
  store <8 x i16> %1702, <8 x i16>* %1706, align 2, !alias.scope !177, !noalias !174
  %1707 = getelementptr i16, i16* %1700, i64 8
  %1708 = bitcast i16* %1707 to <8 x i16>*
  store <8 x i16> %1705, <8 x i16>* %1708, align 2, !alias.scope !177, !noalias !174
  %1709 = or i64 %1686, 32
  %1710 = getelementptr i16, i16* %1631, i64 %1709
  %1711 = getelementptr i16, i16* %1664, i64 %1709
  %1712 = bitcast i16* %1710 to <8 x i16>*
  %1713 = load <8 x i16>, <8 x i16>* %1712, align 2, !alias.scope !174
  %1714 = getelementptr i16, i16* %1710, i64 8
  %1715 = bitcast i16* %1714 to <8 x i16>*
  %1716 = load <8 x i16>, <8 x i16>* %1715, align 2, !alias.scope !174
  %1717 = bitcast i16* %1711 to <8 x i16>*
  store <8 x i16> %1713, <8 x i16>* %1717, align 2, !alias.scope !177, !noalias !174
  %1718 = getelementptr i16, i16* %1711, i64 8
  %1719 = bitcast i16* %1718 to <8 x i16>*
  store <8 x i16> %1716, <8 x i16>* %1719, align 2, !alias.scope !177, !noalias !174
  %1720 = or i64 %1686, 48
  %1721 = getelementptr i16, i16* %1631, i64 %1720
  %1722 = getelementptr i16, i16* %1664, i64 %1720
  %1723 = bitcast i16* %1721 to <8 x i16>*
  %1724 = load <8 x i16>, <8 x i16>* %1723, align 2, !alias.scope !174
  %1725 = getelementptr i16, i16* %1721, i64 8
  %1726 = bitcast i16* %1725 to <8 x i16>*
  %1727 = load <8 x i16>, <8 x i16>* %1726, align 2, !alias.scope !174
  %1728 = bitcast i16* %1722 to <8 x i16>*
  store <8 x i16> %1724, <8 x i16>* %1728, align 2, !alias.scope !177, !noalias !174
  %1729 = getelementptr i16, i16* %1722, i64 8
  %1730 = bitcast i16* %1729 to <8 x i16>*
  store <8 x i16> %1727, <8 x i16>* %1730, align 2, !alias.scope !177, !noalias !174
  %1731 = add i64 %1686, 64
  %1732 = add i64 %1687, -4
  %1733 = icmp eq i64 %1732, 0
  br i1 %1733, label %1734, label %1685, !llvm.loop !179

1734:                                             ; preds = %1685, %1673
  %1735 = phi i64 [ 0, %1673 ], [ %1731, %1685 ]
  %1736 = icmp eq i64 %1681, 0
  br i1 %1736, label %1753, label %1737

1737:                                             ; preds = %1734, %1737
  %1738 = phi i64 [ %1750, %1737 ], [ %1735, %1734 ]
  %1739 = phi i64 [ %1751, %1737 ], [ %1681, %1734 ]
  %1740 = getelementptr i16, i16* %1631, i64 %1738
  %1741 = getelementptr i16, i16* %1664, i64 %1738
  %1742 = bitcast i16* %1740 to <8 x i16>*
  %1743 = load <8 x i16>, <8 x i16>* %1742, align 2, !alias.scope !174
  %1744 = getelementptr i16, i16* %1740, i64 8
  %1745 = bitcast i16* %1744 to <8 x i16>*
  %1746 = load <8 x i16>, <8 x i16>* %1745, align 2, !alias.scope !174
  %1747 = bitcast i16* %1741 to <8 x i16>*
  store <8 x i16> %1743, <8 x i16>* %1747, align 2, !alias.scope !177, !noalias !174
  %1748 = getelementptr i16, i16* %1741, i64 8
  %1749 = bitcast i16* %1748 to <8 x i16>*
  store <8 x i16> %1746, <8 x i16>* %1749, align 2, !alias.scope !177, !noalias !174
  %1750 = add i64 %1738, 16
  %1751 = add i64 %1739, -1
  %1752 = icmp eq i64 %1751, 0
  br i1 %1752, label %1753, label %1737, !llvm.loop !180

1753:                                             ; preds = %1737, %1734
  %1754 = icmp eq i64 %1674, %1638
  br i1 %1754, label %1808, label %1755

1755:                                             ; preds = %1753, %1666, %1663
  %1756 = phi i64 [ %1638, %1666 ], [ %1638, %1663 ], [ %1675, %1753 ]
  %1757 = phi i16* [ %1631, %1666 ], [ %1631, %1663 ], [ %1676, %1753 ]
  %1758 = phi i16* [ %1664, %1666 ], [ %1664, %1663 ], [ %1677, %1753 ]
  %1759 = add nsw i64 %1756, -1
  %1760 = and i64 %1756, 7
  %1761 = icmp eq i64 %1760, 0
  br i1 %1761, label %1773, label %1762

1762:                                             ; preds = %1755, %1762
  %1763 = phi i64 [ %1768, %1762 ], [ %1756, %1755 ]
  %1764 = phi i16* [ %1770, %1762 ], [ %1757, %1755 ]
  %1765 = phi i16* [ %1769, %1762 ], [ %1758, %1755 ]
  %1766 = phi i64 [ %1771, %1762 ], [ %1760, %1755 ]
  %1767 = load i16, i16* %1764, align 2
  store i16 %1767, i16* %1765, align 2
  %1768 = add i64 %1763, -1
  %1769 = getelementptr inbounds i16, i16* %1765, i64 1
  %1770 = getelementptr inbounds i16, i16* %1764, i64 1
  %1771 = add i64 %1766, -1
  %1772 = icmp eq i64 %1771, 0
  br i1 %1772, label %1773, label %1762, !llvm.loop !181

1773:                                             ; preds = %1762, %1755
  %1774 = phi i64 [ %1756, %1755 ], [ %1768, %1762 ]
  %1775 = phi i16* [ %1757, %1755 ], [ %1770, %1762 ]
  %1776 = phi i16* [ %1758, %1755 ], [ %1769, %1762 ]
  %1777 = icmp ult i64 %1759, 7
  br i1 %1777, label %1808, label %1778

1778:                                             ; preds = %1773, %1778
  %1779 = phi i64 [ %1804, %1778 ], [ %1774, %1773 ]
  %1780 = phi i16* [ %1806, %1778 ], [ %1775, %1773 ]
  %1781 = phi i16* [ %1805, %1778 ], [ %1776, %1773 ]
  %1782 = load i16, i16* %1780, align 2
  store i16 %1782, i16* %1781, align 2
  %1783 = getelementptr inbounds i16, i16* %1781, i64 1
  %1784 = getelementptr inbounds i16, i16* %1780, i64 1
  %1785 = load i16, i16* %1784, align 2
  store i16 %1785, i16* %1783, align 2
  %1786 = getelementptr inbounds i16, i16* %1781, i64 2
  %1787 = getelementptr inbounds i16, i16* %1780, i64 2
  %1788 = load i16, i16* %1787, align 2
  store i16 %1788, i16* %1786, align 2
  %1789 = getelementptr inbounds i16, i16* %1781, i64 3
  %1790 = getelementptr inbounds i16, i16* %1780, i64 3
  %1791 = load i16, i16* %1790, align 2
  store i16 %1791, i16* %1789, align 2
  %1792 = getelementptr inbounds i16, i16* %1781, i64 4
  %1793 = getelementptr inbounds i16, i16* %1780, i64 4
  %1794 = load i16, i16* %1793, align 2
  store i16 %1794, i16* %1792, align 2
  %1795 = getelementptr inbounds i16, i16* %1781, i64 5
  %1796 = getelementptr inbounds i16, i16* %1780, i64 5
  %1797 = load i16, i16* %1796, align 2
  store i16 %1797, i16* %1795, align 2
  %1798 = getelementptr inbounds i16, i16* %1781, i64 6
  %1799 = getelementptr inbounds i16, i16* %1780, i64 6
  %1800 = load i16, i16* %1799, align 2
  store i16 %1800, i16* %1798, align 2
  %1801 = getelementptr inbounds i16, i16* %1781, i64 7
  %1802 = getelementptr inbounds i16, i16* %1780, i64 7
  %1803 = load i16, i16* %1802, align 2
  store i16 %1803, i16* %1801, align 2
  %1804 = add i64 %1779, -8
  %1805 = getelementptr inbounds i16, i16* %1781, i64 8
  %1806 = getelementptr inbounds i16, i16* %1780, i64 8
  %1807 = icmp eq i64 %1804, 0
  br i1 %1807, label %1808, label %1778, !llvm.loop !182

1808:                                             ; preds = %1773, %1778, %1753, %1657
  %1809 = phi i16* [ %1661, %1657 ], [ %1664, %1753 ], [ %1664, %1778 ], [ %1664, %1773 ]
  %1810 = getelementptr inbounds i16, i16* %1809, i64 %1638
  store i16 0, i16* %1810, align 2
  store i8 1, i8* %1605, align 8
  %1811 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1812 = load i8, i8* %1811, align 8, !range !2
  %1813 = icmp eq i8 %1812, 0
  %1814 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %1813, label %1829, label %1815

1815:                                             ; preds = %1808
  %1816 = bitcast %"class.std::__1::basic_string"* %1814 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1817 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1816, i64 0, i32 1, i32 1
  %1818 = load i8, i8* %1817, align 1
  %1819 = icmp slt i8 %1818, 0
  br i1 %1819, label %1820, label %1823

1820:                                             ; preds = %1815
  %1821 = bitcast %"class.std::__1::basic_string"* %1814 to i8**
  %1822 = load i8*, i8** %1821, align 8
  call void @_ZdlPv(i8* %1822) #14
  br label %1823

1823:                                             ; preds = %1820, %1815
  %1824 = bitcast %"class.std::__1::basic_string"* %1814 to i8*
  %1825 = bitcast %"class.std::__1::basic_string"* %1637 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1824, i8* align 8 %1825, i64 24, i1 false) #13
  %1826 = bitcast %"class.std::__1::basic_string"* %1637 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1827 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1826, i64 0, i32 1, i32 1
  store i8 0, i8* %1827, align 1
  %1828 = bitcast %"class.std::__1::basic_string"* %1637 to i16*
  store i16 0, i16* %1828, align 8
  br label %1846

1829:                                             ; preds = %1808
  %1830 = bitcast %"class.std::__1::basic_string"* %1814 to i8*
  %1831 = bitcast %"class.std::__1::basic_string"* %1637 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1830, i8* align 8 %1831, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %1831, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %1811, align 8
  br label %1846

1832:                                             ; preds = %1628
  %1833 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1834 = load i8, i8* %1833, align 8, !range !2
  %1835 = icmp eq i8 %1834, 0
  br i1 %1835, label %1846, label %1836

1836:                                             ; preds = %1832
  %1837 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %1838 = bitcast %"class.std::__1::basic_string"* %1837 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1839 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1838, i64 0, i32 1, i32 1
  %1840 = load i8, i8* %1839, align 1
  %1841 = icmp slt i8 %1840, 0
  br i1 %1841, label %1842, label %1845

1842:                                             ; preds = %1836
  %1843 = bitcast %"class.std::__1::basic_string"* %1837 to i8**
  %1844 = load i8*, i8** %1843, align 8
  call void @_ZdlPv(i8* %1844) #14
  br label %1845

1845:                                             ; preds = %1842, %1836
  store i8 0, i8* %1833, align 8
  br label %1846

1846:                                             ; preds = %1823, %1829, %1832, %1845
  %1847 = load i8, i8* %1605, align 8, !range !2
  %1848 = icmp eq i8 %1847, 0
  br i1 %1848, label %1859, label %1849

1849:                                             ; preds = %1846
  %1850 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %75, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1851 = bitcast %"class.std::__1::basic_string"* %1850 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1852 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1851, i64 0, i32 1, i32 1
  %1853 = load i8, i8* %1852, align 1
  %1854 = icmp slt i8 %1853, 0
  br i1 %1854, label %1855, label %1858

1855:                                             ; preds = %1849
  %1856 = bitcast %"class.std::__1::basic_string"* %1850 to i8**
  %1857 = load i8*, i8** %1856, align 8
  call void @_ZdlPv(i8* %1857) #14
  br label %1858

1858:                                             ; preds = %1855, %1849
  store i8 0, i8* %1605, align 8
  br label %1859

1859:                                             ; preds = %1846, %1858
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1605) #13
  %1860 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 5
  call fastcc void @_ZN5blink12_GLOBAL__N_116ReadStringVectorEPNS0_15SerializeObjectEPNSt3__16vectorIN4absl8optionalINS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEENSA_ISD_EEEE(%"struct.blink::(anonymous namespace)::SerializeObject"* %0, %"class.std::__1::vector.40"* %1860)
  %1861 = load i8, i8* %1591, align 4, !range !2
  %1862 = icmp eq i8 %1861, 0
  br i1 %1862, label %1881, label %1863

1863:                                             ; preds = %1859
  %1864 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1864) #13
  store i32 0, i32* %43, align 4
  %1865 = bitcast i8** %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1865) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %42, align 8
  %1866 = call zeroext i1 @_ZN4base14PickleIterator8ReadDataEPPKcPi(%"class.base::PickleIterator"* %93, i8** nonnull %42, i32* nonnull %43) #13
  br i1 %1866, label %1869, label %1867

1867:                                             ; preds = %1863
  %1868 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1868, align 4
  store i32 0, i32* %43, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1865) #13
  br label %1876

1869:                                             ; preds = %1863
  %1870 = bitcast i8** %42 to double**
  %1871 = load double*, double** %1870, align 8
  %1872 = load i32, i32* %43, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1865) #13
  %1873 = icmp eq i32 %1872, 8
  br i1 %1873, label %1874, label %1876

1874:                                             ; preds = %1869
  %1875 = load double, double* %1871, align 1
  br label %1878

1876:                                             ; preds = %1869, %1867
  %1877 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1877, align 4
  br label %1878

1878:                                             ; preds = %1874, %1876
  %1879 = phi double [ %1875, %1874 ], [ 0.000000e+00, %1876 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1864) #13
  %1880 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 12
  store double %1879, double* %1880, align 8
  br label %1881

1881:                                             ; preds = %1859, %1878
  %1882 = bitcast i64* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1882) #13
  store i64 0, i64* %41, align 8
  %1883 = call zeroext i1 @_ZN4base14PickleIterator9ReadInt64EPl(%"class.base::PickleIterator"* %93, i64* nonnull %41) #13
  br i1 %1883, label %1884, label %1886

1884:                                             ; preds = %1881
  %1885 = load i64, i64* %41, align 8
  br label %1888

1886:                                             ; preds = %1881
  %1887 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1887, align 4
  br label %1888

1888:                                             ; preds = %1884, %1886
  %1889 = phi i64 [ %1885, %1884 ], [ 0, %1886 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1882) #13
  %1890 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 10
  store i64 %1889, i64* %1890, align 8
  %1891 = bitcast i64* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1891) #13
  store i64 0, i64* %40, align 8
  %1892 = call zeroext i1 @_ZN4base14PickleIterator9ReadInt64EPl(%"class.base::PickleIterator"* %93, i64* nonnull %40) #13
  br i1 %1892, label %1893, label %1895

1893:                                             ; preds = %1888
  %1894 = load i64, i64* %40, align 8
  br label %1897

1895:                                             ; preds = %1888
  %1896 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1896, align 4
  br label %1897

1897:                                             ; preds = %1893, %1895
  %1898 = phi i64 [ %1894, %1893 ], [ 0, %1895 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1891) #13
  %1899 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 11
  store i64 %1898, i64* %1899, align 8
  %1900 = load i32, i32* %79, align 8
  %1901 = add i32 %1900, -21
  %1902 = icmp ult i32 %1901, 2
  br i1 %1902, label %1903, label %1910

1903:                                             ; preds = %1897
  %1904 = bitcast i64* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1904) #13
  store i64 0, i64* %39, align 8
  %1905 = call zeroext i1 @_ZN4base14PickleIterator9ReadInt64EPl(%"class.base::PickleIterator"* %93, i64* nonnull %39) #13
  br i1 %1905, label %1908, label %1906

1906:                                             ; preds = %1903
  %1907 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1907, align 4
  br label %1908

1908:                                             ; preds = %1903, %1906
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1904) #13
  %1909 = load i32, i32* %79, align 8
  br label %1910

1910:                                             ; preds = %1908, %1897
  %1911 = phi i32 [ %1909, %1908 ], [ %1900, %1897 ]
  %1912 = add i32 %1911, -17
  %1913 = icmp ult i32 %1912, 2
  br i1 %1913, label %1914, label %1921

1914:                                             ; preds = %1910
  %1915 = bitcast i64* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1915) #13
  store i64 0, i64* %38, align 8
  %1916 = call zeroext i1 @_ZN4base14PickleIterator9ReadInt64EPl(%"class.base::PickleIterator"* %93, i64* nonnull %38) #13
  br i1 %1916, label %1919, label %1917

1917:                                             ; preds = %1914
  %1918 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1918, align 4
  br label %1919

1919:                                             ; preds = %1914, %1917
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1915) #13
  %1920 = load i32, i32* %79, align 8
  br label %1921

1921:                                             ; preds = %1919, %1910
  %1922 = phi i32 [ %1920, %1919 ], [ %1911, %1910 ]
  %1923 = icmp sgt i32 %1922, 17
  br i1 %1923, label %1924, label %1978

1924:                                             ; preds = %1921
  %1925 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1925) #13
  store i32 -1431655766, i32* %37, align 4
  %1926 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %93, i32* nonnull %37) #13
  br i1 %1926, label %1929, label %1927

1927:                                             ; preds = %1924
  %1928 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1928, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1925) #13
  br label %1933

1929:                                             ; preds = %1924
  %1930 = load i32, i32* %37, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1925) #13
  %1931 = icmp ugt i32 %1930, 8
  %1932 = select i1 %1931, i32 1, i32 %1930
  br label %1933

1933:                                             ; preds = %1929, %1927
  %1934 = phi i32 [ 0, %1927 ], [ %1932, %1929 ]
  %1935 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 13
  store i32 %1934, i32* %1935, align 8
  %1936 = load i32, i32* %79, align 8
  %1937 = icmp sgt i32 %1936, 19
  br i1 %1937, label %1938, label %1978

1938:                                             ; preds = %1933
  %1939 = load i8, i8* %1591, align 4, !range !2
  %1940 = icmp eq i8 %1939, 0
  br i1 %1940, label %1978, label %1941

1941:                                             ; preds = %1938
  %1942 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1942) #13
  store i32 0, i32* %36, align 4
  %1943 = bitcast i8** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1943) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %1944 = call zeroext i1 @_ZN4base14PickleIterator8ReadDataEPPKcPi(%"class.base::PickleIterator"* %93, i8** nonnull %35, i32* nonnull %36) #13
  br i1 %1944, label %1947, label %1945

1945:                                             ; preds = %1941
  %1946 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1946, align 4
  store i32 0, i32* %36, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1943) #13
  br label %1954

1947:                                             ; preds = %1941
  %1948 = bitcast i8** %35 to double**
  %1949 = load double*, double** %1948, align 8
  %1950 = load i32, i32* %36, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1943) #13
  %1951 = icmp eq i32 %1950, 8
  br i1 %1951, label %1952, label %1954

1952:                                             ; preds = %1947
  %1953 = load double, double* %1949, align 1
  br label %1956

1954:                                             ; preds = %1947, %1945
  %1955 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1955, align 4
  br label %1956

1956:                                             ; preds = %1952, %1954
  %1957 = phi double [ %1953, %1952 ], [ 0.000000e+00, %1954 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1942) #13
  %1958 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1958) #13
  store i32 0, i32* %34, align 4
  %1959 = bitcast i8** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1959) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %33, align 8
  %1960 = call zeroext i1 @_ZN4base14PickleIterator8ReadDataEPPKcPi(%"class.base::PickleIterator"* %93, i8** nonnull %33, i32* nonnull %34) #13
  br i1 %1960, label %1963, label %1961

1961:                                             ; preds = %1956
  %1962 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1962, align 4
  store i32 0, i32* %34, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1959) #13
  br label %1970

1963:                                             ; preds = %1956
  %1964 = bitcast i8** %33 to double**
  %1965 = load double*, double** %1964, align 8
  %1966 = load i32, i32* %34, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1959) #13
  %1967 = icmp eq i32 %1966, 8
  br i1 %1967, label %1968, label %1970

1968:                                             ; preds = %1963
  %1969 = load double, double* %1965, align 1
  br label %1972

1970:                                             ; preds = %1963, %1961
  %1971 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1971, align 4
  br label %1972

1972:                                             ; preds = %1968, %1970
  %1973 = phi double [ %1969, %1968 ], [ 0.000000e+00, %1970 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1958) #13
  %1974 = fptrunc double %1957 to float
  %1975 = fptrunc double %1973 to float
  %1976 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 8, i32 0
  store float %1974, float* %1976, align 8
  %1977 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 8, i32 1
  store float %1975, float* %1977, align 4
  br label %1983

1978:                                             ; preds = %1921, %1938, %1933
  %1979 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 8
  %1980 = bitcast %"class.gfx::PointF"* %1979 to i32*
  store i32 -1082130432, i32* %1980, align 8
  %1981 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 8, i32 1
  %1982 = bitcast float* %1981 to i32*
  store i32 -1082130432, i32* %1982, align 4
  br label %1983

1983:                                             ; preds = %1978, %1972
  %1984 = load i32, i32* %79, align 8
  %1985 = icmp sgt i32 %1984, 21
  br i1 %1985, label %1986, label %1996

1986:                                             ; preds = %1983
  %1987 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1987) #13
  store i32 -1431655766, i32* %32, align 4
  %1988 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %93, i32* nonnull %32) #13
  br i1 %1988, label %1989, label %1991

1989:                                             ; preds = %1986
  %1990 = load i32, i32* %32, align 4
  br label %1993

1991:                                             ; preds = %1986
  %1992 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1992, align 4
  br label %1993

1993:                                             ; preds = %1989, %1991
  %1994 = phi i32 [ %1990, %1989 ], [ 0, %1991 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1987) #13
  %1995 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 6
  store i32 %1994, i32* %1995, align 8
  br label %1996

1996:                                             ; preds = %1993, %1983
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #13
  store i8 -86, i8* %31, align 1
  %1997 = call zeroext i1 @_ZN4base14PickleIterator8ReadBoolEPb(%"class.base::PickleIterator"* %93, i8* nonnull %31) #13
  br i1 %1997, label %2000, label %1998

1998:                                             ; preds = %1996
  %1999 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %1999, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #13
  br label %2259

2000:                                             ; preds = %1996
  %2001 = load i8, i8* %31, align 1, !range !2
  %2002 = icmp eq i8 %2001, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #13
  br i1 %2002, label %2259, label %2003

2003:                                             ; preds = %2000
  %2004 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %76, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2004) #13
  %2005 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2005) #13, !noalias !183
  store i32 -1431655766, i32* %29, align 4, !noalias !183
  %2006 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %93, i32* nonnull %29) #13, !noalias !183
  br i1 %2006, label %2009, label %2007

2007:                                             ; preds = %2003
  %2008 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %2008, align 4, !noalias !183
  br label %2027

2009:                                             ; preds = %2003
  %2010 = load i32, i32* %29, align 4, !noalias !183
  %2011 = icmp slt i32 %2010, 0
  br i1 %2011, label %2027, label %2012

2012:                                             ; preds = %2009
  %2013 = bitcast i8** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2013) #13, !noalias !183
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %30, align 8, !noalias !183
  %2014 = call zeroext i1 @_ZN4base14PickleIterator9ReadBytesEPPKci(%"class.base::PickleIterator"* %93, i8** nonnull %30, i32 %2010) #13
  br i1 %2014, label %2017, label %2015

2015:                                             ; preds = %2012
  %2016 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %2016, align 4, !noalias !183
  br label %2023

2017:                                             ; preds = %2012
  %2018 = load i32, i32* %29, align 4, !noalias !183
  %2019 = ashr i32 %2018, 1
  %2020 = bitcast i8** %30 to i16**
  %2021 = load i16*, i16** %2020, align 8, !noalias !183
  %2022 = bitcast i16* %2021 to i8*
  br label %2023

2023:                                             ; preds = %2017, %2015
  %2024 = phi i32 [ %2019, %2017 ], [ -1431655766, %2015 ]
  %2025 = phi i8* [ %2022, %2017 ], [ null, %2015 ]
  %2026 = phi i16* [ %2021, %2017 ], [ null, %2015 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2013) #13, !noalias !183
  br label %2027

2027:                                             ; preds = %2023, %2009, %2007
  %2028 = phi i32 [ -1431655766, %2009 ], [ %2024, %2023 ], [ -1431655766, %2007 ]
  %2029 = phi i8* [ null, %2009 ], [ %2025, %2023 ], [ null, %2007 ]
  %2030 = phi i16* [ null, %2009 ], [ %2026, %2023 ], [ null, %2007 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2005) #13, !noalias !183
  %2031 = bitcast %"class.absl::optional"* %76 to i64*
  store i64 -6148914691236517376, i64* %2031, align 8, !alias.scope !183
  %2032 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %76, i64 0, i32 0, i32 0, i32 0, i32 1
  %2033 = bitcast %union.anon* %2032 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2033, i8 0, i64 24, i1 false) #13, !alias.scope !183
  %2034 = icmp eq i16* %2030, null
  br i1 %2034, label %2231, label %2035

2035:                                             ; preds = %2027
  %2036 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %76, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %2037 = sext i32 %2028 to i64
  %2038 = icmp slt i32 %2028, 0
  br i1 %2038, label %2039, label %2041

2039:                                             ; preds = %2035
  %2040 = bitcast %"class.std::__1::basic_string"* %2036 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %2040) #15
  unreachable

2041:                                             ; preds = %2035
  %2042 = icmp ult i32 %2028, 11
  br i1 %2042, label %2056, label %2043

2043:                                             ; preds = %2041
  %2044 = add nuw nsw i64 %2037, 8
  %2045 = and i64 %2044, -8
  %2046 = icmp slt i64 %2045, 0
  br i1 %2046, label %2047, label %2048

2047:                                             ; preds = %2043
  call void @abort() #15
  unreachable

2048:                                             ; preds = %2043
  %2049 = shl nsw i64 %2045, 1
  %2050 = call i8* @_Znwm(i64 %2049) #14
  %2051 = bitcast i8* %2050 to i16*
  %2052 = bitcast %"class.std::__1::basic_string"* %2036 to i8**
  store i8* %2050, i8** %2052, align 8
  %2053 = or i64 %2045, -9223372036854775808
  %2054 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %76, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %2053, i64* %2054, align 8
  %2055 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %76, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2037, i64* %2055, align 8
  br label %2062

2056:                                             ; preds = %2041
  %2057 = trunc i32 %2028 to i8
  %2058 = bitcast %"class.std::__1::basic_string"* %2036 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2059 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2058, i64 0, i32 1, i32 1
  store i8 %2057, i8* %2059, align 1
  %2060 = bitcast %"class.std::__1::basic_string"* %2036 to i16*
  %2061 = icmp eq i32 %2028, 0
  br i1 %2061, label %2207, label %2062

2062:                                             ; preds = %2056, %2048
  %2063 = phi i16* [ %2051, %2048 ], [ %2060, %2056 ]
  %2064 = icmp ult i32 %2028, 16
  br i1 %2064, label %2154, label %2065

2065:                                             ; preds = %2062
  %2066 = getelementptr i16, i16* %2063, i64 %2037
  %2067 = bitcast i16* %2066 to i8*
  %2068 = getelementptr i16, i16* %2030, i64 %2037
  %2069 = icmp ult i16* %2063, %2068
  %2070 = icmp ult i8* %2029, %2067
  %2071 = and i1 %2069, %2070
  br i1 %2071, label %2154, label %2072

2072:                                             ; preds = %2065
  %2073 = and i64 %2037, -16
  %2074 = sub nsw i64 %2037, %2073
  %2075 = getelementptr i16, i16* %2030, i64 %2073
  %2076 = getelementptr i16, i16* %2063, i64 %2073
  %2077 = add nsw i64 %2073, -16
  %2078 = lshr exact i64 %2077, 4
  %2079 = add nuw nsw i64 %2078, 1
  %2080 = and i64 %2079, 3
  %2081 = icmp ult i64 %2077, 48
  br i1 %2081, label %2133, label %2082

2082:                                             ; preds = %2072
  %2083 = sub nsw i64 %2079, %2080
  br label %2084

2084:                                             ; preds = %2084, %2082
  %2085 = phi i64 [ 0, %2082 ], [ %2130, %2084 ]
  %2086 = phi i64 [ %2083, %2082 ], [ %2131, %2084 ]
  %2087 = getelementptr i16, i16* %2030, i64 %2085
  %2088 = getelementptr i16, i16* %2063, i64 %2085
  %2089 = bitcast i16* %2087 to <8 x i16>*
  %2090 = load <8 x i16>, <8 x i16>* %2089, align 2, !alias.scope !186
  %2091 = getelementptr i16, i16* %2087, i64 8
  %2092 = bitcast i16* %2091 to <8 x i16>*
  %2093 = load <8 x i16>, <8 x i16>* %2092, align 2, !alias.scope !186
  %2094 = bitcast i16* %2088 to <8 x i16>*
  store <8 x i16> %2090, <8 x i16>* %2094, align 2, !alias.scope !189, !noalias !186
  %2095 = getelementptr i16, i16* %2088, i64 8
  %2096 = bitcast i16* %2095 to <8 x i16>*
  store <8 x i16> %2093, <8 x i16>* %2096, align 2, !alias.scope !189, !noalias !186
  %2097 = or i64 %2085, 16
  %2098 = getelementptr i16, i16* %2030, i64 %2097
  %2099 = getelementptr i16, i16* %2063, i64 %2097
  %2100 = bitcast i16* %2098 to <8 x i16>*
  %2101 = load <8 x i16>, <8 x i16>* %2100, align 2, !alias.scope !186
  %2102 = getelementptr i16, i16* %2098, i64 8
  %2103 = bitcast i16* %2102 to <8 x i16>*
  %2104 = load <8 x i16>, <8 x i16>* %2103, align 2, !alias.scope !186
  %2105 = bitcast i16* %2099 to <8 x i16>*
  store <8 x i16> %2101, <8 x i16>* %2105, align 2, !alias.scope !189, !noalias !186
  %2106 = getelementptr i16, i16* %2099, i64 8
  %2107 = bitcast i16* %2106 to <8 x i16>*
  store <8 x i16> %2104, <8 x i16>* %2107, align 2, !alias.scope !189, !noalias !186
  %2108 = or i64 %2085, 32
  %2109 = getelementptr i16, i16* %2030, i64 %2108
  %2110 = getelementptr i16, i16* %2063, i64 %2108
  %2111 = bitcast i16* %2109 to <8 x i16>*
  %2112 = load <8 x i16>, <8 x i16>* %2111, align 2, !alias.scope !186
  %2113 = getelementptr i16, i16* %2109, i64 8
  %2114 = bitcast i16* %2113 to <8 x i16>*
  %2115 = load <8 x i16>, <8 x i16>* %2114, align 2, !alias.scope !186
  %2116 = bitcast i16* %2110 to <8 x i16>*
  store <8 x i16> %2112, <8 x i16>* %2116, align 2, !alias.scope !189, !noalias !186
  %2117 = getelementptr i16, i16* %2110, i64 8
  %2118 = bitcast i16* %2117 to <8 x i16>*
  store <8 x i16> %2115, <8 x i16>* %2118, align 2, !alias.scope !189, !noalias !186
  %2119 = or i64 %2085, 48
  %2120 = getelementptr i16, i16* %2030, i64 %2119
  %2121 = getelementptr i16, i16* %2063, i64 %2119
  %2122 = bitcast i16* %2120 to <8 x i16>*
  %2123 = load <8 x i16>, <8 x i16>* %2122, align 2, !alias.scope !186
  %2124 = getelementptr i16, i16* %2120, i64 8
  %2125 = bitcast i16* %2124 to <8 x i16>*
  %2126 = load <8 x i16>, <8 x i16>* %2125, align 2, !alias.scope !186
  %2127 = bitcast i16* %2121 to <8 x i16>*
  store <8 x i16> %2123, <8 x i16>* %2127, align 2, !alias.scope !189, !noalias !186
  %2128 = getelementptr i16, i16* %2121, i64 8
  %2129 = bitcast i16* %2128 to <8 x i16>*
  store <8 x i16> %2126, <8 x i16>* %2129, align 2, !alias.scope !189, !noalias !186
  %2130 = add i64 %2085, 64
  %2131 = add i64 %2086, -4
  %2132 = icmp eq i64 %2131, 0
  br i1 %2132, label %2133, label %2084, !llvm.loop !191

2133:                                             ; preds = %2084, %2072
  %2134 = phi i64 [ 0, %2072 ], [ %2130, %2084 ]
  %2135 = icmp eq i64 %2080, 0
  br i1 %2135, label %2152, label %2136

2136:                                             ; preds = %2133, %2136
  %2137 = phi i64 [ %2149, %2136 ], [ %2134, %2133 ]
  %2138 = phi i64 [ %2150, %2136 ], [ %2080, %2133 ]
  %2139 = getelementptr i16, i16* %2030, i64 %2137
  %2140 = getelementptr i16, i16* %2063, i64 %2137
  %2141 = bitcast i16* %2139 to <8 x i16>*
  %2142 = load <8 x i16>, <8 x i16>* %2141, align 2, !alias.scope !186
  %2143 = getelementptr i16, i16* %2139, i64 8
  %2144 = bitcast i16* %2143 to <8 x i16>*
  %2145 = load <8 x i16>, <8 x i16>* %2144, align 2, !alias.scope !186
  %2146 = bitcast i16* %2140 to <8 x i16>*
  store <8 x i16> %2142, <8 x i16>* %2146, align 2, !alias.scope !189, !noalias !186
  %2147 = getelementptr i16, i16* %2140, i64 8
  %2148 = bitcast i16* %2147 to <8 x i16>*
  store <8 x i16> %2145, <8 x i16>* %2148, align 2, !alias.scope !189, !noalias !186
  %2149 = add i64 %2137, 16
  %2150 = add i64 %2138, -1
  %2151 = icmp eq i64 %2150, 0
  br i1 %2151, label %2152, label %2136, !llvm.loop !192

2152:                                             ; preds = %2136, %2133
  %2153 = icmp eq i64 %2073, %2037
  br i1 %2153, label %2207, label %2154

2154:                                             ; preds = %2152, %2065, %2062
  %2155 = phi i64 [ %2037, %2065 ], [ %2037, %2062 ], [ %2074, %2152 ]
  %2156 = phi i16* [ %2030, %2065 ], [ %2030, %2062 ], [ %2075, %2152 ]
  %2157 = phi i16* [ %2063, %2065 ], [ %2063, %2062 ], [ %2076, %2152 ]
  %2158 = add nsw i64 %2155, -1
  %2159 = and i64 %2155, 7
  %2160 = icmp eq i64 %2159, 0
  br i1 %2160, label %2172, label %2161

2161:                                             ; preds = %2154, %2161
  %2162 = phi i64 [ %2167, %2161 ], [ %2155, %2154 ]
  %2163 = phi i16* [ %2169, %2161 ], [ %2156, %2154 ]
  %2164 = phi i16* [ %2168, %2161 ], [ %2157, %2154 ]
  %2165 = phi i64 [ %2170, %2161 ], [ %2159, %2154 ]
  %2166 = load i16, i16* %2163, align 2
  store i16 %2166, i16* %2164, align 2
  %2167 = add i64 %2162, -1
  %2168 = getelementptr inbounds i16, i16* %2164, i64 1
  %2169 = getelementptr inbounds i16, i16* %2163, i64 1
  %2170 = add i64 %2165, -1
  %2171 = icmp eq i64 %2170, 0
  br i1 %2171, label %2172, label %2161, !llvm.loop !193

2172:                                             ; preds = %2161, %2154
  %2173 = phi i64 [ %2155, %2154 ], [ %2167, %2161 ]
  %2174 = phi i16* [ %2156, %2154 ], [ %2169, %2161 ]
  %2175 = phi i16* [ %2157, %2154 ], [ %2168, %2161 ]
  %2176 = icmp ult i64 %2158, 7
  br i1 %2176, label %2207, label %2177

2177:                                             ; preds = %2172, %2177
  %2178 = phi i64 [ %2203, %2177 ], [ %2173, %2172 ]
  %2179 = phi i16* [ %2205, %2177 ], [ %2174, %2172 ]
  %2180 = phi i16* [ %2204, %2177 ], [ %2175, %2172 ]
  %2181 = load i16, i16* %2179, align 2
  store i16 %2181, i16* %2180, align 2
  %2182 = getelementptr inbounds i16, i16* %2180, i64 1
  %2183 = getelementptr inbounds i16, i16* %2179, i64 1
  %2184 = load i16, i16* %2183, align 2
  store i16 %2184, i16* %2182, align 2
  %2185 = getelementptr inbounds i16, i16* %2180, i64 2
  %2186 = getelementptr inbounds i16, i16* %2179, i64 2
  %2187 = load i16, i16* %2186, align 2
  store i16 %2187, i16* %2185, align 2
  %2188 = getelementptr inbounds i16, i16* %2180, i64 3
  %2189 = getelementptr inbounds i16, i16* %2179, i64 3
  %2190 = load i16, i16* %2189, align 2
  store i16 %2190, i16* %2188, align 2
  %2191 = getelementptr inbounds i16, i16* %2180, i64 4
  %2192 = getelementptr inbounds i16, i16* %2179, i64 4
  %2193 = load i16, i16* %2192, align 2
  store i16 %2193, i16* %2191, align 2
  %2194 = getelementptr inbounds i16, i16* %2180, i64 5
  %2195 = getelementptr inbounds i16, i16* %2179, i64 5
  %2196 = load i16, i16* %2195, align 2
  store i16 %2196, i16* %2194, align 2
  %2197 = getelementptr inbounds i16, i16* %2180, i64 6
  %2198 = getelementptr inbounds i16, i16* %2179, i64 6
  %2199 = load i16, i16* %2198, align 2
  store i16 %2199, i16* %2197, align 2
  %2200 = getelementptr inbounds i16, i16* %2180, i64 7
  %2201 = getelementptr inbounds i16, i16* %2179, i64 7
  %2202 = load i16, i16* %2201, align 2
  store i16 %2202, i16* %2200, align 2
  %2203 = add i64 %2178, -8
  %2204 = getelementptr inbounds i16, i16* %2180, i64 8
  %2205 = getelementptr inbounds i16, i16* %2179, i64 8
  %2206 = icmp eq i64 %2203, 0
  br i1 %2206, label %2207, label %2177, !llvm.loop !194

2207:                                             ; preds = %2172, %2177, %2152, %2056
  %2208 = phi i16* [ %2060, %2056 ], [ %2063, %2152 ], [ %2063, %2177 ], [ %2063, %2172 ]
  %2209 = getelementptr inbounds i16, i16* %2208, i64 %2037
  store i16 0, i16* %2209, align 2
  store i8 1, i8* %2004, align 8
  %2210 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %2211 = load i8, i8* %2210, align 8, !range !2
  %2212 = icmp eq i8 %2211, 0
  %2213 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %2212, label %2228, label %2214

2214:                                             ; preds = %2207
  %2215 = bitcast %"class.std::__1::basic_string"* %2213 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2216 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2215, i64 0, i32 1, i32 1
  %2217 = load i8, i8* %2216, align 1
  %2218 = icmp slt i8 %2217, 0
  br i1 %2218, label %2219, label %2222

2219:                                             ; preds = %2214
  %2220 = bitcast %"class.std::__1::basic_string"* %2213 to i8**
  %2221 = load i8*, i8** %2220, align 8
  call void @_ZdlPv(i8* %2221) #14
  br label %2222

2222:                                             ; preds = %2219, %2214
  %2223 = bitcast %"class.std::__1::basic_string"* %2213 to i8*
  %2224 = bitcast %"class.std::__1::basic_string"* %2036 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2223, i8* align 8 %2224, i64 24, i1 false) #13
  %2225 = bitcast %"class.std::__1::basic_string"* %2036 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2226 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2225, i64 0, i32 1, i32 1
  store i8 0, i8* %2226, align 1
  %2227 = bitcast %"class.std::__1::basic_string"* %2036 to i16*
  store i16 0, i16* %2227, align 8
  br label %2245

2228:                                             ; preds = %2207
  %2229 = bitcast %"class.std::__1::basic_string"* %2213 to i8*
  %2230 = bitcast %"class.std::__1::basic_string"* %2036 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2229, i8* align 8 %2230, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %2230, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %2210, align 8
  br label %2245

2231:                                             ; preds = %2027
  %2232 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %2233 = load i8, i8* %2232, align 8, !range !2
  %2234 = icmp eq i8 %2233, 0
  br i1 %2234, label %2245, label %2235

2235:                                             ; preds = %2231
  %2236 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %2237 = bitcast %"class.std::__1::basic_string"* %2236 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2238 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2237, i64 0, i32 1, i32 1
  %2239 = load i8, i8* %2238, align 1
  %2240 = icmp slt i8 %2239, 0
  br i1 %2240, label %2241, label %2244

2241:                                             ; preds = %2235
  %2242 = bitcast %"class.std::__1::basic_string"* %2236 to i8**
  %2243 = load i8*, i8** %2242, align 8
  call void @_ZdlPv(i8* %2243) #14
  br label %2244

2244:                                             ; preds = %2241, %2235
  store i8 0, i8* %2232, align 8
  br label %2245

2245:                                             ; preds = %2222, %2228, %2231, %2244
  %2246 = load i8, i8* %2004, align 8, !range !2
  %2247 = icmp eq i8 %2246, 0
  br i1 %2247, label %2258, label %2248

2248:                                             ; preds = %2245
  %2249 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %76, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %2250 = bitcast %"class.std::__1::basic_string"* %2249 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2251 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2250, i64 0, i32 1, i32 1
  %2252 = load i8, i8* %2251, align 1
  %2253 = icmp slt i8 %2252, 0
  br i1 %2253, label %2254, label %2257

2254:                                             ; preds = %2248
  %2255 = bitcast %"class.std::__1::basic_string"* %2249 to i8**
  %2256 = load i8*, i8** %2255, align 8
  call void @_ZdlPv(i8* %2256) #14
  br label %2257

2257:                                             ; preds = %2254, %2248
  store i8 0, i8* %2004, align 8
  br label %2258

2258:                                             ; preds = %2245, %2257
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2004) #13
  br label %2259

2259:                                             ; preds = %2000, %1998, %2258
  %2260 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %28) #13
  store i8 -86, i8* %28, align 1
  %2261 = call zeroext i1 @_ZN4base14PickleIterator8ReadBoolEPb(%"class.base::PickleIterator"* %93, i8* nonnull %28) #13
  br i1 %2261, label %2264, label %2262

2262:                                             ; preds = %2259
  %2263 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %2263, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #13
  br label %2648

2264:                                             ; preds = %2259
  %2265 = load i8, i8* %28, align 1, !range !2
  %2266 = icmp eq i8 %2265, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #13
  br i1 %2266, label %2648, label %2267

2267:                                             ; preds = %2264
  %2268 = call i8* @_Znwm(i64 48) #14
  %2269 = bitcast i8* %2268 to %"class.network::ResourceRequestBody"*
  call void @_ZN7network19ResourceRequestBodyC1Ev(%"class.network::ResourceRequestBody"* nonnull %2269) #13
  %2270 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 15, i32 1
  %2271 = bitcast i8* %2268 to i32*
  %2272 = atomicrmw add i32* %2271, i32 1 monotonic
  %2273 = ptrtoint i8* %2268 to i64
  %2274 = bitcast %class.scoped_refptr* %2270 to i64*
  %2275 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2270, i64 0, i32 0
  %2276 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %2275, align 8
  store i64 %2273, i64* %2274, align 8
  %2277 = icmp eq %"class.network::ResourceRequestBody"* %2276, null
  br i1 %2277, label %2284, label %2278

2278:                                             ; preds = %2267
  %2279 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %2276, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2280 = atomicrmw sub i32* %2279, i32 1 acq_rel
  %2281 = icmp eq i32 %2280, 1
  br i1 %2281, label %2282, label %2284

2282:                                             ; preds = %2278
  call void @_ZN7network19ResourceRequestBodyD1Ev(%"class.network::ResourceRequestBody"* nonnull %2276) #13
  %2283 = bitcast %"class.network::ResourceRequestBody"* %2276 to i8*
  call void @_ZdlPv(i8* %2283) #14
  br label %2284

2284:                                             ; preds = %2282, %2278, %2267
  %2285 = bitcast %class.GURL* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %2285) #13
  %2286 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2286) #13
  store i32 -1431655766, i32* %24, align 4
  %2287 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %93, i32* nonnull %24) #13
  br i1 %2287, label %2290, label %2288

2288:                                             ; preds = %2284
  %2289 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %2289, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2286) #13
  br label %2332

2290:                                             ; preds = %2284
  %2291 = load i32, i32* %24, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2286) #13
  %2292 = icmp sgt i32 %2291, 0
  br i1 %2292, label %2293, label %2332

2293:                                             ; preds = %2290
  %2294 = bitcast i32* %21 to i8*
  %2295 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  %2296 = bitcast %"class.std::__1::basic_string.15"* %23 to i8*
  %2297 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2298 = bitcast %"class.std::__1::basic_string.15"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2299 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2300 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2298, i64 0, i32 1, i32 0
  %2301 = bitcast %"class.std::__1::basic_string.15"* %11 to i8*
  %2302 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2303 = bitcast %"class.std::__1::basic_string.15"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2304 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2303, i64 0, i32 1, i32 0
  %2305 = getelementptr inbounds i8, i8* %2301, i64 23
  %2306 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %2307 = bitcast i32* %18 to i8*
  %2308 = bitcast i8** %19 to i8*
  %2309 = bitcast i8** %19 to i16**
  %2310 = bitcast %"class.absl::optional"* %26 to i64*
  %2311 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %26, i64 0, i32 0, i32 0, i32 0, i32 1
  %2312 = bitcast %union.anon* %2311 to i8*
  %2313 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %2314 = bitcast %"class.std::__1::basic_string"* %2313 to i8**
  %2315 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %2316 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2317 = bitcast %"class.std::__1::basic_string"* %2313 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2318 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2317, i64 0, i32 1, i32 1
  %2319 = bitcast %"class.std::__1::basic_string"* %2313 to i16*
  %2320 = bitcast i64* %17 to i8*
  %2321 = bitcast i64* %16 to i8*
  %2322 = bitcast i32* %15 to i8*
  %2323 = bitcast i8** %14 to i8*
  %2324 = bitcast i8** %14 to double**
  %2325 = bitcast %"class.base::Time"* %12 to i8*
  %2326 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %12, i64 0, i32 0, i32 0
  %2327 = bitcast %"class.base::FilePath"* %13 to i8*
  %2328 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2313, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2329 = bitcast i32* %25 to i8*
  %2330 = bitcast i8** %20 to i8*
  %2331 = bitcast i8** %20 to i64*
  br label %2340

2332:                                             ; preds = %2631, %2290, %2288
  %2333 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %2275, align 8
  %2334 = bitcast i64* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2334) #13
  store i64 0, i64* %22, align 8
  %2335 = call zeroext i1 @_ZN4base14PickleIterator9ReadInt64EPl(%"class.base::PickleIterator"* %93, i64* nonnull %22) #13
  br i1 %2335, label %2336, label %2338

2336:                                             ; preds = %2332
  %2337 = load i64, i64* %22, align 8
  br label %2634

2338:                                             ; preds = %2332
  %2339 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %2339, align 4
  br label %2634

2340:                                             ; preds = %2631, %2293
  %2341 = phi i32 [ 0, %2293 ], [ %2632, %2631 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2294) #13
  store i32 -1431655766, i32* %21, align 4
  %2342 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %93, i32* nonnull %21) #13
  br i1 %2342, label %2344, label %2343

2343:                                             ; preds = %2340
  store i8 1, i8* %2295, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2294) #13
  br label %2346

2344:                                             ; preds = %2340
  %2345 = load i32, i32* %21, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2294) #13
  switch i32 %2345, label %2631 [
    i32 0, label %2346
    i32 1, label %2359
    i32 2, label %2598
  ]

2346:                                             ; preds = %2344, %2343
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2329) #13
  store i32 -1, i32* %25, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2330) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %2347 = call zeroext i1 @_ZN4base14PickleIterator8ReadDataEPPKcPi(%"class.base::PickleIterator"* %93, i8** nonnull %20, i32* nonnull %25) #13
  br i1 %2347, label %2349, label %2348

2348:                                             ; preds = %2346
  store i8 1, i8* %2295, align 4
  store i32 0, i32* %25, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2330) #13
  br label %2353

2349:                                             ; preds = %2346
  %2350 = load i64, i64* %2331, align 8
  %2351 = load i32, i32* %25, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2330) #13
  %2352 = icmp sgt i32 %2351, -1
  br i1 %2352, label %2353, label %2358

2353:                                             ; preds = %2349, %2348
  %2354 = phi i64 [ 0, %2348 ], [ %2350, %2349 ]
  %2355 = phi i32 [ 0, %2348 ], [ %2351, %2349 ]
  %2356 = inttoptr i64 %2354 to i8*
  %2357 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %2275, align 8
  call void @_ZN7network19ResourceRequestBody11AppendBytesEPKci(%"class.network::ResourceRequestBody"* %2357, i8* %2356, i32 %2355) #13
  br label %2358

2358:                                             ; preds = %2353, %2349
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2329) #13
  br label %2631

2359:                                             ; preds = %2344
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2306) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2306, i8 -86, i64 32, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2307) #13, !noalias !195
  store i32 -1431655766, i32* %18, align 4, !noalias !195
  %2360 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %93, i32* nonnull %18) #13, !noalias !195
  br i1 %2360, label %2362, label %2361

2361:                                             ; preds = %2359
  store i8 1, i8* %2295, align 4, !noalias !195
  br label %2373

2362:                                             ; preds = %2359
  %2363 = load i32, i32* %18, align 4, !noalias !195
  %2364 = icmp slt i32 %2363, 0
  br i1 %2364, label %2373, label %2365

2365:                                             ; preds = %2362
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2308) #13, !noalias !195
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8, !noalias !195
  %2366 = call zeroext i1 @_ZN4base14PickleIterator9ReadBytesEPPKci(%"class.base::PickleIterator"* %93, i8** nonnull %19, i32 %2363) #13
  br i1 %2366, label %2368, label %2367

2367:                                             ; preds = %2365
  store i8 1, i8* %2295, align 4, !noalias !195
  br label %2374

2368:                                             ; preds = %2365
  %2369 = load i32, i32* %18, align 4, !noalias !195
  %2370 = ashr i32 %2369, 1
  %2371 = load i16*, i16** %2309, align 8, !noalias !195
  %2372 = bitcast i16* %2371 to i8*
  br label %2374

2373:                                             ; preds = %2362, %2361
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2307) #13, !noalias !195
  store i64 -6148914691236517376, i64* %2310, align 8, !alias.scope !195
  call void @llvm.memset.p0i8.i64(i8* align 8 %2312, i8 0, i64 24, i1 false) #13, !alias.scope !195
  br label %2547

2374:                                             ; preds = %2368, %2367
  %2375 = phi i32 [ %2370, %2368 ], [ -1431655766, %2367 ]
  %2376 = phi i8* [ %2372, %2368 ], [ null, %2367 ]
  %2377 = phi i16* [ %2371, %2368 ], [ null, %2367 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2308) #13, !noalias !195
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2307) #13, !noalias !195
  store i64 -6148914691236517376, i64* %2310, align 8, !alias.scope !195
  call void @llvm.memset.p0i8.i64(i8* align 8 %2312, i8 0, i64 24, i1 false) #13, !alias.scope !195
  %2378 = icmp eq i16* %2377, null
  br i1 %2378, label %2547, label %2379

2379:                                             ; preds = %2374
  %2380 = sext i32 %2375 to i64
  %2381 = icmp slt i32 %2375, 0
  br i1 %2381, label %2382, label %2384

2382:                                             ; preds = %2379
  %2383 = bitcast %"class.std::__1::basic_string"* %2313 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %2383) #15
  unreachable

2384:                                             ; preds = %2379
  %2385 = icmp ult i32 %2375, 11
  br i1 %2385, label %2396, label %2386

2386:                                             ; preds = %2384
  %2387 = add nuw nsw i64 %2380, 8
  %2388 = and i64 %2387, -8
  %2389 = icmp slt i64 %2388, 0
  br i1 %2389, label %2390, label %2391

2390:                                             ; preds = %2386
  call void @abort() #15
  unreachable

2391:                                             ; preds = %2386
  %2392 = shl nsw i64 %2388, 1
  %2393 = call i8* @_Znwm(i64 %2392) #14
  %2394 = bitcast i8* %2393 to i16*
  store i8* %2393, i8** %2314, align 8
  %2395 = or i64 %2388, -9223372036854775808
  store i64 %2395, i64* %2315, align 8
  store i64 %2380, i64* %2316, align 8
  br label %2399

2396:                                             ; preds = %2384
  %2397 = trunc i32 %2375 to i8
  store i8 %2397, i8* %2318, align 1
  %2398 = icmp eq i32 %2375, 0
  br i1 %2398, label %2544, label %2399

2399:                                             ; preds = %2396, %2391
  %2400 = phi i16* [ %2394, %2391 ], [ %2319, %2396 ]
  %2401 = icmp ult i32 %2375, 16
  br i1 %2401, label %2491, label %2402

2402:                                             ; preds = %2399
  %2403 = getelementptr i16, i16* %2400, i64 %2380
  %2404 = bitcast i16* %2403 to i8*
  %2405 = getelementptr i16, i16* %2377, i64 %2380
  %2406 = icmp ult i16* %2400, %2405
  %2407 = icmp ult i8* %2376, %2404
  %2408 = and i1 %2406, %2407
  br i1 %2408, label %2491, label %2409

2409:                                             ; preds = %2402
  %2410 = and i64 %2380, -16
  %2411 = sub nsw i64 %2380, %2410
  %2412 = getelementptr i16, i16* %2377, i64 %2410
  %2413 = getelementptr i16, i16* %2400, i64 %2410
  %2414 = add nsw i64 %2410, -16
  %2415 = lshr exact i64 %2414, 4
  %2416 = add nuw nsw i64 %2415, 1
  %2417 = and i64 %2416, 3
  %2418 = icmp ult i64 %2414, 48
  br i1 %2418, label %2470, label %2419

2419:                                             ; preds = %2409
  %2420 = sub nsw i64 %2416, %2417
  br label %2421

2421:                                             ; preds = %2421, %2419
  %2422 = phi i64 [ 0, %2419 ], [ %2467, %2421 ]
  %2423 = phi i64 [ %2420, %2419 ], [ %2468, %2421 ]
  %2424 = getelementptr i16, i16* %2377, i64 %2422
  %2425 = getelementptr i16, i16* %2400, i64 %2422
  %2426 = bitcast i16* %2424 to <8 x i16>*
  %2427 = load <8 x i16>, <8 x i16>* %2426, align 2, !alias.scope !198
  %2428 = getelementptr i16, i16* %2424, i64 8
  %2429 = bitcast i16* %2428 to <8 x i16>*
  %2430 = load <8 x i16>, <8 x i16>* %2429, align 2, !alias.scope !198
  %2431 = bitcast i16* %2425 to <8 x i16>*
  store <8 x i16> %2427, <8 x i16>* %2431, align 2, !alias.scope !201, !noalias !198
  %2432 = getelementptr i16, i16* %2425, i64 8
  %2433 = bitcast i16* %2432 to <8 x i16>*
  store <8 x i16> %2430, <8 x i16>* %2433, align 2, !alias.scope !201, !noalias !198
  %2434 = or i64 %2422, 16
  %2435 = getelementptr i16, i16* %2377, i64 %2434
  %2436 = getelementptr i16, i16* %2400, i64 %2434
  %2437 = bitcast i16* %2435 to <8 x i16>*
  %2438 = load <8 x i16>, <8 x i16>* %2437, align 2, !alias.scope !198
  %2439 = getelementptr i16, i16* %2435, i64 8
  %2440 = bitcast i16* %2439 to <8 x i16>*
  %2441 = load <8 x i16>, <8 x i16>* %2440, align 2, !alias.scope !198
  %2442 = bitcast i16* %2436 to <8 x i16>*
  store <8 x i16> %2438, <8 x i16>* %2442, align 2, !alias.scope !201, !noalias !198
  %2443 = getelementptr i16, i16* %2436, i64 8
  %2444 = bitcast i16* %2443 to <8 x i16>*
  store <8 x i16> %2441, <8 x i16>* %2444, align 2, !alias.scope !201, !noalias !198
  %2445 = or i64 %2422, 32
  %2446 = getelementptr i16, i16* %2377, i64 %2445
  %2447 = getelementptr i16, i16* %2400, i64 %2445
  %2448 = bitcast i16* %2446 to <8 x i16>*
  %2449 = load <8 x i16>, <8 x i16>* %2448, align 2, !alias.scope !198
  %2450 = getelementptr i16, i16* %2446, i64 8
  %2451 = bitcast i16* %2450 to <8 x i16>*
  %2452 = load <8 x i16>, <8 x i16>* %2451, align 2, !alias.scope !198
  %2453 = bitcast i16* %2447 to <8 x i16>*
  store <8 x i16> %2449, <8 x i16>* %2453, align 2, !alias.scope !201, !noalias !198
  %2454 = getelementptr i16, i16* %2447, i64 8
  %2455 = bitcast i16* %2454 to <8 x i16>*
  store <8 x i16> %2452, <8 x i16>* %2455, align 2, !alias.scope !201, !noalias !198
  %2456 = or i64 %2422, 48
  %2457 = getelementptr i16, i16* %2377, i64 %2456
  %2458 = getelementptr i16, i16* %2400, i64 %2456
  %2459 = bitcast i16* %2457 to <8 x i16>*
  %2460 = load <8 x i16>, <8 x i16>* %2459, align 2, !alias.scope !198
  %2461 = getelementptr i16, i16* %2457, i64 8
  %2462 = bitcast i16* %2461 to <8 x i16>*
  %2463 = load <8 x i16>, <8 x i16>* %2462, align 2, !alias.scope !198
  %2464 = bitcast i16* %2458 to <8 x i16>*
  store <8 x i16> %2460, <8 x i16>* %2464, align 2, !alias.scope !201, !noalias !198
  %2465 = getelementptr i16, i16* %2458, i64 8
  %2466 = bitcast i16* %2465 to <8 x i16>*
  store <8 x i16> %2463, <8 x i16>* %2466, align 2, !alias.scope !201, !noalias !198
  %2467 = add i64 %2422, 64
  %2468 = add i64 %2423, -4
  %2469 = icmp eq i64 %2468, 0
  br i1 %2469, label %2470, label %2421, !llvm.loop !203

2470:                                             ; preds = %2421, %2409
  %2471 = phi i64 [ 0, %2409 ], [ %2467, %2421 ]
  %2472 = icmp eq i64 %2417, 0
  br i1 %2472, label %2489, label %2473

2473:                                             ; preds = %2470, %2473
  %2474 = phi i64 [ %2486, %2473 ], [ %2471, %2470 ]
  %2475 = phi i64 [ %2487, %2473 ], [ %2417, %2470 ]
  %2476 = getelementptr i16, i16* %2377, i64 %2474
  %2477 = getelementptr i16, i16* %2400, i64 %2474
  %2478 = bitcast i16* %2476 to <8 x i16>*
  %2479 = load <8 x i16>, <8 x i16>* %2478, align 2, !alias.scope !198
  %2480 = getelementptr i16, i16* %2476, i64 8
  %2481 = bitcast i16* %2480 to <8 x i16>*
  %2482 = load <8 x i16>, <8 x i16>* %2481, align 2, !alias.scope !198
  %2483 = bitcast i16* %2477 to <8 x i16>*
  store <8 x i16> %2479, <8 x i16>* %2483, align 2, !alias.scope !201, !noalias !198
  %2484 = getelementptr i16, i16* %2477, i64 8
  %2485 = bitcast i16* %2484 to <8 x i16>*
  store <8 x i16> %2482, <8 x i16>* %2485, align 2, !alias.scope !201, !noalias !198
  %2486 = add i64 %2474, 16
  %2487 = add i64 %2475, -1
  %2488 = icmp eq i64 %2487, 0
  br i1 %2488, label %2489, label %2473, !llvm.loop !204

2489:                                             ; preds = %2473, %2470
  %2490 = icmp eq i64 %2410, %2380
  br i1 %2490, label %2544, label %2491

2491:                                             ; preds = %2489, %2402, %2399
  %2492 = phi i64 [ %2380, %2402 ], [ %2380, %2399 ], [ %2411, %2489 ]
  %2493 = phi i16* [ %2377, %2402 ], [ %2377, %2399 ], [ %2412, %2489 ]
  %2494 = phi i16* [ %2400, %2402 ], [ %2400, %2399 ], [ %2413, %2489 ]
  %2495 = add nsw i64 %2492, -1
  %2496 = and i64 %2492, 7
  %2497 = icmp eq i64 %2496, 0
  br i1 %2497, label %2509, label %2498

2498:                                             ; preds = %2491, %2498
  %2499 = phi i64 [ %2504, %2498 ], [ %2492, %2491 ]
  %2500 = phi i16* [ %2506, %2498 ], [ %2493, %2491 ]
  %2501 = phi i16* [ %2505, %2498 ], [ %2494, %2491 ]
  %2502 = phi i64 [ %2507, %2498 ], [ %2496, %2491 ]
  %2503 = load i16, i16* %2500, align 2
  store i16 %2503, i16* %2501, align 2
  %2504 = add i64 %2499, -1
  %2505 = getelementptr inbounds i16, i16* %2501, i64 1
  %2506 = getelementptr inbounds i16, i16* %2500, i64 1
  %2507 = add i64 %2502, -1
  %2508 = icmp eq i64 %2507, 0
  br i1 %2508, label %2509, label %2498, !llvm.loop !205

2509:                                             ; preds = %2498, %2491
  %2510 = phi i64 [ %2492, %2491 ], [ %2504, %2498 ]
  %2511 = phi i16* [ %2493, %2491 ], [ %2506, %2498 ]
  %2512 = phi i16* [ %2494, %2491 ], [ %2505, %2498 ]
  %2513 = icmp ult i64 %2495, 7
  br i1 %2513, label %2544, label %2514

2514:                                             ; preds = %2509, %2514
  %2515 = phi i64 [ %2540, %2514 ], [ %2510, %2509 ]
  %2516 = phi i16* [ %2542, %2514 ], [ %2511, %2509 ]
  %2517 = phi i16* [ %2541, %2514 ], [ %2512, %2509 ]
  %2518 = load i16, i16* %2516, align 2
  store i16 %2518, i16* %2517, align 2
  %2519 = getelementptr inbounds i16, i16* %2517, i64 1
  %2520 = getelementptr inbounds i16, i16* %2516, i64 1
  %2521 = load i16, i16* %2520, align 2
  store i16 %2521, i16* %2519, align 2
  %2522 = getelementptr inbounds i16, i16* %2517, i64 2
  %2523 = getelementptr inbounds i16, i16* %2516, i64 2
  %2524 = load i16, i16* %2523, align 2
  store i16 %2524, i16* %2522, align 2
  %2525 = getelementptr inbounds i16, i16* %2517, i64 3
  %2526 = getelementptr inbounds i16, i16* %2516, i64 3
  %2527 = load i16, i16* %2526, align 2
  store i16 %2527, i16* %2525, align 2
  %2528 = getelementptr inbounds i16, i16* %2517, i64 4
  %2529 = getelementptr inbounds i16, i16* %2516, i64 4
  %2530 = load i16, i16* %2529, align 2
  store i16 %2530, i16* %2528, align 2
  %2531 = getelementptr inbounds i16, i16* %2517, i64 5
  %2532 = getelementptr inbounds i16, i16* %2516, i64 5
  %2533 = load i16, i16* %2532, align 2
  store i16 %2533, i16* %2531, align 2
  %2534 = getelementptr inbounds i16, i16* %2517, i64 6
  %2535 = getelementptr inbounds i16, i16* %2516, i64 6
  %2536 = load i16, i16* %2535, align 2
  store i16 %2536, i16* %2534, align 2
  %2537 = getelementptr inbounds i16, i16* %2517, i64 7
  %2538 = getelementptr inbounds i16, i16* %2516, i64 7
  %2539 = load i16, i16* %2538, align 2
  store i16 %2539, i16* %2537, align 2
  %2540 = add i64 %2515, -8
  %2541 = getelementptr inbounds i16, i16* %2517, i64 8
  %2542 = getelementptr inbounds i16, i16* %2516, i64 8
  %2543 = icmp eq i64 %2540, 0
  br i1 %2543, label %2544, label %2514, !llvm.loop !206

2544:                                             ; preds = %2509, %2514, %2489, %2396
  %2545 = phi i16* [ %2319, %2396 ], [ %2400, %2489 ], [ %2400, %2514 ], [ %2400, %2509 ]
  %2546 = getelementptr inbounds i16, i16* %2545, i64 %2380
  store i16 0, i16* %2546, align 2
  store i8 1, i8* %2306, align 8
  br label %2547

2547:                                             ; preds = %2544, %2374, %2373
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2320) #13
  store i64 0, i64* %17, align 8
  %2548 = call zeroext i1 @_ZN4base14PickleIterator9ReadInt64EPl(%"class.base::PickleIterator"* %93, i64* nonnull %17) #13
  br i1 %2548, label %2549, label %2551

2549:                                             ; preds = %2547
  %2550 = load i64, i64* %17, align 8
  br label %2552

2551:                                             ; preds = %2547
  store i8 1, i8* %2295, align 4
  br label %2552

2552:                                             ; preds = %2551, %2549
  %2553 = phi i64 [ %2550, %2549 ], [ 0, %2551 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2320) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2321) #13
  store i64 0, i64* %16, align 8
  %2554 = call zeroext i1 @_ZN4base14PickleIterator9ReadInt64EPl(%"class.base::PickleIterator"* %93, i64* nonnull %16) #13
  br i1 %2554, label %2555, label %2557

2555:                                             ; preds = %2552
  %2556 = load i64, i64* %16, align 8
  br label %2558

2557:                                             ; preds = %2552
  store i8 1, i8* %2295, align 4
  br label %2558

2558:                                             ; preds = %2557, %2555
  %2559 = phi i64 [ %2556, %2555 ], [ 0, %2557 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2321) #13
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2322) #13
  store i32 0, i32* %15, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2323) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %2560 = call zeroext i1 @_ZN4base14PickleIterator8ReadDataEPPKcPi(%"class.base::PickleIterator"* %93, i8** nonnull %14, i32* nonnull %15) #13
  br i1 %2560, label %2562, label %2561

2561:                                             ; preds = %2558
  store i8 1, i8* %2295, align 4
  store i32 0, i32* %15, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2323) #13
  br label %2568

2562:                                             ; preds = %2558
  %2563 = load double*, double** %2324, align 8
  %2564 = load i32, i32* %15, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2323) #13
  %2565 = icmp eq i32 %2564, 8
  br i1 %2565, label %2566, label %2568

2566:                                             ; preds = %2562
  %2567 = load double, double* %2563, align 1
  br label %2569

2568:                                             ; preds = %2562, %2561
  store i8 1, i8* %2295, align 4
  br label %2569

2569:                                             ; preds = %2568, %2566
  %2570 = phi double [ %2567, %2566 ], [ 0.000000e+00, %2568 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2322) #13
  %2571 = call i64 @_ZN4base4Time11FromDoubleTEd(double %2570) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2325) #13
  store i64 %2571, i64* %2326, align 8
  %2572 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %2275, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2327) #13
  %2573 = load i8, i8* %2306, align 8, !range !2
  %2574 = icmp eq i8 %2573, 0
  br i1 %2574, label %2583, label %2575

2575:                                             ; preds = %2569
  %2576 = load i8, i8* %2318, align 1
  %2577 = icmp slt i8 %2576, 0
  %2578 = load i16*, i16** %2328, align 8
  %2579 = select i1 %2577, i16* %2578, i16* %2319
  %2580 = load i64, i64* %2316, align 8
  %2581 = zext i8 %2576 to i64
  %2582 = select i1 %2577, i64 %2580, i64 %2581
  call void @_ZN4base8FilePath15FromUTF16UnsafeENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::FilePath"* nonnull sret %13, i16* %2579, i64 %2582) #13
  br label %2584

2583:                                             ; preds = %2569
  call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* nonnull %13) #13
  br label %2584

2584:                                             ; preds = %2583, %2575
  %2585 = shl i64 %2553, 32
  %2586 = ashr exact i64 %2585, 32
  %2587 = shl i64 %2559, 32
  %2588 = ashr exact i64 %2587, 32
  call void @_ZN7network19ResourceRequestBody15AppendFileRangeERKN4base8FilePathEmmRKNS1_4TimeE(%"class.network::ResourceRequestBody"* %2572, %"class.base::FilePath"* nonnull dereferenceable(24) %13, i64 %2586, i64 %2588, %"class.base::Time"* nonnull dereferenceable(8) %12) #13
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2327) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2325) #13
  %2589 = load i8, i8* %2306, align 8, !range !2
  %2590 = icmp eq i8 %2589, 0
  br i1 %2590, label %2597, label %2591

2591:                                             ; preds = %2584
  %2592 = load i8, i8* %2318, align 1
  %2593 = icmp slt i8 %2592, 0
  br i1 %2593, label %2594, label %2596

2594:                                             ; preds = %2591
  %2595 = load i8*, i8** %2314, align 8
  call void @_ZdlPv(i8* %2595) #14
  br label %2596

2596:                                             ; preds = %2594, %2591
  store i8 0, i8* %2306, align 8
  br label %2597

2597:                                             ; preds = %2596, %2584
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2306) #13
  br label %2631

2598:                                             ; preds = %2344
  %2599 = load i32, i32* %79, align 8
  %2600 = icmp sgt i32 %2599, 15
  br i1 %2600, label %2601, label %2614

2601:                                             ; preds = %2598
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2301) #13, !noalias !207
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2301, i8 0, i64 24, i1 false) #13, !noalias !207
  %2602 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* %93, %"class.std::__1::basic_string.15"* nonnull %11) #13, !noalias !207
  br i1 %2602, label %2609, label %2603

2603:                                             ; preds = %2601
  store i8 1, i8* %2295, align 4, !noalias !207
  %2604 = load i8, i8* %2304, align 1, !noalias !207
  %2605 = icmp slt i8 %2604, 0
  br i1 %2605, label %2606, label %2608

2606:                                             ; preds = %2603
  %2607 = load i8*, i8** %2302, align 8, !noalias !207
  call void @_ZdlPv(i8* %2607) #14, !noalias !207
  br label %2608

2608:                                             ; preds = %2606, %2603
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2301) #13, !noalias !207
  br label %2631

2609:                                             ; preds = %2601
  %2610 = load i8*, i8** %2302, align 8
  %2611 = load i8, i8* %2305, align 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2301) #13, !noalias !207
  %2612 = icmp slt i8 %2611, 0
  br i1 %2612, label %2613, label %2631

2613:                                             ; preds = %2609
  call void @_ZdlPv(i8* %2610) #14
  br label %2631

2614:                                             ; preds = %2598
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2296) #13, !noalias !210
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2296, i8 0, i64 24, i1 false) #13, !noalias !210
  %2615 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* %93, %"class.std::__1::basic_string.15"* nonnull %23) #13, !noalias !210
  br i1 %2615, label %2616, label %2624

2616:                                             ; preds = %2614
  %2617 = load i8, i8* %2300, align 1, !noalias !210
  %2618 = icmp slt i8 %2617, 0
  %2619 = load i8*, i8** %2297, align 8, !noalias !210
  %2620 = select i1 %2618, i8* %2619, i8* %2296
  %2621 = load i64, i64* %2299, align 8, !noalias !210
  %2622 = zext i8 %2617 to i64
  %2623 = select i1 %2618, i64 %2621, i64 %2622
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %27, i8* %2620, i64 %2623) #13
  br label %2625

2624:                                             ; preds = %2614
  store i8 1, i8* %2295, align 4, !noalias !210
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %27) #13
  br label %2625

2625:                                             ; preds = %2624, %2616
  %2626 = load i8, i8* %2300, align 1, !noalias !210
  %2627 = icmp slt i8 %2626, 0
  br i1 %2627, label %2628, label %2630

2628:                                             ; preds = %2625
  %2629 = load i8*, i8** %2297, align 8, !noalias !210
  call void @_ZdlPv(i8* %2629) #14
  br label %2630

2630:                                             ; preds = %2628, %2625
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2296) #13, !noalias !210
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %27) #13
  br label %2631

2631:                                             ; preds = %2630, %2613, %2609, %2608, %2597, %2358, %2344
  %2632 = add nuw nsw i32 %2341, 1
  %2633 = icmp eq i32 %2632, %2291
  br i1 %2633, label %2332, label %2340

2634:                                             ; preds = %2338, %2336
  %2635 = phi i64 [ %2337, %2336 ], [ 0, %2338 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2334) #13
  %2636 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %2333, i64 0, i32 3
  store i64 %2635, i64* %2636, align 8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %2285) #13
  %2637 = load i32, i32* %79, align 8
  %2638 = icmp sgt i32 %2637, 11
  br i1 %2638, label %2639, label %2648

2639:                                             ; preds = %2634
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #13
  store i8 -86, i8* %10, align 1
  %2640 = call zeroext i1 @_ZN4base14PickleIterator8ReadBoolEPb(%"class.base::PickleIterator"* %93, i8* nonnull %10) #13
  br i1 %2640, label %2641, label %2643

2641:                                             ; preds = %2639
  %2642 = load i8, i8* %10, align 1, !range !2
  br label %2645

2643:                                             ; preds = %2639
  %2644 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %2644, align 4
  br label %2645

2645:                                             ; preds = %2643, %2641
  %2646 = phi i8 [ %2642, %2641 ], [ 0, %2643 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #13
  %2647 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 15, i32 2
  store i8 %2646, i8* %2647, align 8
  br label %2648

2648:                                             ; preds = %2262, %2264, %2634, %2645
  %2649 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2649) #13
  %2650 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2650) #13, !noalias !213
  store i32 -1431655766, i32* %8, align 4, !noalias !213
  %2651 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %93, i32* nonnull %8) #13, !noalias !213
  br i1 %2651, label %2654, label %2652

2652:                                             ; preds = %2648
  %2653 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %2653, align 4, !noalias !213
  br label %2672

2654:                                             ; preds = %2648
  %2655 = load i32, i32* %8, align 4, !noalias !213
  %2656 = icmp slt i32 %2655, 0
  br i1 %2656, label %2672, label %2657

2657:                                             ; preds = %2654
  %2658 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2658) #13, !noalias !213
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8, !noalias !213
  %2659 = call zeroext i1 @_ZN4base14PickleIterator9ReadBytesEPPKci(%"class.base::PickleIterator"* %93, i8** nonnull %9, i32 %2655) #13
  br i1 %2659, label %2662, label %2660

2660:                                             ; preds = %2657
  %2661 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %2661, align 4, !noalias !213
  br label %2668

2662:                                             ; preds = %2657
  %2663 = load i32, i32* %8, align 4, !noalias !213
  %2664 = ashr i32 %2663, 1
  %2665 = bitcast i8** %9 to i16**
  %2666 = load i16*, i16** %2665, align 8, !noalias !213
  %2667 = bitcast i16* %2666 to i8*
  br label %2668

2668:                                             ; preds = %2662, %2660
  %2669 = phi i32 [ %2664, %2662 ], [ -1431655766, %2660 ]
  %2670 = phi i8* [ %2667, %2662 ], [ null, %2660 ]
  %2671 = phi i16* [ %2666, %2662 ], [ null, %2660 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2658) #13, !noalias !213
  br label %2672

2672:                                             ; preds = %2668, %2654, %2652
  %2673 = phi i32 [ -1431655766, %2654 ], [ %2669, %2668 ], [ -1431655766, %2652 ]
  %2674 = phi i8* [ null, %2654 ], [ %2670, %2668 ], [ null, %2652 ]
  %2675 = phi i16* [ null, %2654 ], [ %2671, %2668 ], [ null, %2652 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2650) #13, !noalias !213
  %2676 = bitcast %"class.absl::optional"* %77 to i64*
  store i64 -6148914691236517376, i64* %2676, align 8, !alias.scope !213
  %2677 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %77, i64 0, i32 0, i32 0, i32 0, i32 1
  %2678 = bitcast %union.anon* %2677 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2678, i8 0, i64 24, i1 false) #13, !alias.scope !213
  %2679 = icmp eq i16* %2675, null
  br i1 %2679, label %2876, label %2680

2680:                                             ; preds = %2672
  %2681 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %77, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %2682 = sext i32 %2673 to i64
  %2683 = icmp slt i32 %2673, 0
  br i1 %2683, label %2684, label %2686

2684:                                             ; preds = %2680
  %2685 = bitcast %"class.std::__1::basic_string"* %2681 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %2685) #15
  unreachable

2686:                                             ; preds = %2680
  %2687 = icmp ult i32 %2673, 11
  br i1 %2687, label %2701, label %2688

2688:                                             ; preds = %2686
  %2689 = add nuw nsw i64 %2682, 8
  %2690 = and i64 %2689, -8
  %2691 = icmp slt i64 %2690, 0
  br i1 %2691, label %2692, label %2693

2692:                                             ; preds = %2688
  call void @abort() #15
  unreachable

2693:                                             ; preds = %2688
  %2694 = shl nsw i64 %2690, 1
  %2695 = call i8* @_Znwm(i64 %2694) #14
  %2696 = bitcast i8* %2695 to i16*
  %2697 = bitcast %"class.std::__1::basic_string"* %2681 to i8**
  store i8* %2695, i8** %2697, align 8
  %2698 = or i64 %2690, -9223372036854775808
  %2699 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %77, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %2698, i64* %2699, align 8
  %2700 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %77, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2682, i64* %2700, align 8
  br label %2707

2701:                                             ; preds = %2686
  %2702 = trunc i32 %2673 to i8
  %2703 = bitcast %"class.std::__1::basic_string"* %2681 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2704 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2703, i64 0, i32 1, i32 1
  store i8 %2702, i8* %2704, align 1
  %2705 = bitcast %"class.std::__1::basic_string"* %2681 to i16*
  %2706 = icmp eq i32 %2673, 0
  br i1 %2706, label %2852, label %2707

2707:                                             ; preds = %2701, %2693
  %2708 = phi i16* [ %2696, %2693 ], [ %2705, %2701 ]
  %2709 = icmp ult i32 %2673, 16
  br i1 %2709, label %2799, label %2710

2710:                                             ; preds = %2707
  %2711 = getelementptr i16, i16* %2708, i64 %2682
  %2712 = bitcast i16* %2711 to i8*
  %2713 = getelementptr i16, i16* %2675, i64 %2682
  %2714 = icmp ult i16* %2708, %2713
  %2715 = icmp ult i8* %2674, %2712
  %2716 = and i1 %2714, %2715
  br i1 %2716, label %2799, label %2717

2717:                                             ; preds = %2710
  %2718 = and i64 %2682, -16
  %2719 = sub nsw i64 %2682, %2718
  %2720 = getelementptr i16, i16* %2675, i64 %2718
  %2721 = getelementptr i16, i16* %2708, i64 %2718
  %2722 = add nsw i64 %2718, -16
  %2723 = lshr exact i64 %2722, 4
  %2724 = add nuw nsw i64 %2723, 1
  %2725 = and i64 %2724, 3
  %2726 = icmp ult i64 %2722, 48
  br i1 %2726, label %2778, label %2727

2727:                                             ; preds = %2717
  %2728 = sub nsw i64 %2724, %2725
  br label %2729

2729:                                             ; preds = %2729, %2727
  %2730 = phi i64 [ 0, %2727 ], [ %2775, %2729 ]
  %2731 = phi i64 [ %2728, %2727 ], [ %2776, %2729 ]
  %2732 = getelementptr i16, i16* %2675, i64 %2730
  %2733 = getelementptr i16, i16* %2708, i64 %2730
  %2734 = bitcast i16* %2732 to <8 x i16>*
  %2735 = load <8 x i16>, <8 x i16>* %2734, align 2, !alias.scope !216
  %2736 = getelementptr i16, i16* %2732, i64 8
  %2737 = bitcast i16* %2736 to <8 x i16>*
  %2738 = load <8 x i16>, <8 x i16>* %2737, align 2, !alias.scope !216
  %2739 = bitcast i16* %2733 to <8 x i16>*
  store <8 x i16> %2735, <8 x i16>* %2739, align 2, !alias.scope !219, !noalias !216
  %2740 = getelementptr i16, i16* %2733, i64 8
  %2741 = bitcast i16* %2740 to <8 x i16>*
  store <8 x i16> %2738, <8 x i16>* %2741, align 2, !alias.scope !219, !noalias !216
  %2742 = or i64 %2730, 16
  %2743 = getelementptr i16, i16* %2675, i64 %2742
  %2744 = getelementptr i16, i16* %2708, i64 %2742
  %2745 = bitcast i16* %2743 to <8 x i16>*
  %2746 = load <8 x i16>, <8 x i16>* %2745, align 2, !alias.scope !216
  %2747 = getelementptr i16, i16* %2743, i64 8
  %2748 = bitcast i16* %2747 to <8 x i16>*
  %2749 = load <8 x i16>, <8 x i16>* %2748, align 2, !alias.scope !216
  %2750 = bitcast i16* %2744 to <8 x i16>*
  store <8 x i16> %2746, <8 x i16>* %2750, align 2, !alias.scope !219, !noalias !216
  %2751 = getelementptr i16, i16* %2744, i64 8
  %2752 = bitcast i16* %2751 to <8 x i16>*
  store <8 x i16> %2749, <8 x i16>* %2752, align 2, !alias.scope !219, !noalias !216
  %2753 = or i64 %2730, 32
  %2754 = getelementptr i16, i16* %2675, i64 %2753
  %2755 = getelementptr i16, i16* %2708, i64 %2753
  %2756 = bitcast i16* %2754 to <8 x i16>*
  %2757 = load <8 x i16>, <8 x i16>* %2756, align 2, !alias.scope !216
  %2758 = getelementptr i16, i16* %2754, i64 8
  %2759 = bitcast i16* %2758 to <8 x i16>*
  %2760 = load <8 x i16>, <8 x i16>* %2759, align 2, !alias.scope !216
  %2761 = bitcast i16* %2755 to <8 x i16>*
  store <8 x i16> %2757, <8 x i16>* %2761, align 2, !alias.scope !219, !noalias !216
  %2762 = getelementptr i16, i16* %2755, i64 8
  %2763 = bitcast i16* %2762 to <8 x i16>*
  store <8 x i16> %2760, <8 x i16>* %2763, align 2, !alias.scope !219, !noalias !216
  %2764 = or i64 %2730, 48
  %2765 = getelementptr i16, i16* %2675, i64 %2764
  %2766 = getelementptr i16, i16* %2708, i64 %2764
  %2767 = bitcast i16* %2765 to <8 x i16>*
  %2768 = load <8 x i16>, <8 x i16>* %2767, align 2, !alias.scope !216
  %2769 = getelementptr i16, i16* %2765, i64 8
  %2770 = bitcast i16* %2769 to <8 x i16>*
  %2771 = load <8 x i16>, <8 x i16>* %2770, align 2, !alias.scope !216
  %2772 = bitcast i16* %2766 to <8 x i16>*
  store <8 x i16> %2768, <8 x i16>* %2772, align 2, !alias.scope !219, !noalias !216
  %2773 = getelementptr i16, i16* %2766, i64 8
  %2774 = bitcast i16* %2773 to <8 x i16>*
  store <8 x i16> %2771, <8 x i16>* %2774, align 2, !alias.scope !219, !noalias !216
  %2775 = add i64 %2730, 64
  %2776 = add i64 %2731, -4
  %2777 = icmp eq i64 %2776, 0
  br i1 %2777, label %2778, label %2729, !llvm.loop !221

2778:                                             ; preds = %2729, %2717
  %2779 = phi i64 [ 0, %2717 ], [ %2775, %2729 ]
  %2780 = icmp eq i64 %2725, 0
  br i1 %2780, label %2797, label %2781

2781:                                             ; preds = %2778, %2781
  %2782 = phi i64 [ %2794, %2781 ], [ %2779, %2778 ]
  %2783 = phi i64 [ %2795, %2781 ], [ %2725, %2778 ]
  %2784 = getelementptr i16, i16* %2675, i64 %2782
  %2785 = getelementptr i16, i16* %2708, i64 %2782
  %2786 = bitcast i16* %2784 to <8 x i16>*
  %2787 = load <8 x i16>, <8 x i16>* %2786, align 2, !alias.scope !216
  %2788 = getelementptr i16, i16* %2784, i64 8
  %2789 = bitcast i16* %2788 to <8 x i16>*
  %2790 = load <8 x i16>, <8 x i16>* %2789, align 2, !alias.scope !216
  %2791 = bitcast i16* %2785 to <8 x i16>*
  store <8 x i16> %2787, <8 x i16>* %2791, align 2, !alias.scope !219, !noalias !216
  %2792 = getelementptr i16, i16* %2785, i64 8
  %2793 = bitcast i16* %2792 to <8 x i16>*
  store <8 x i16> %2790, <8 x i16>* %2793, align 2, !alias.scope !219, !noalias !216
  %2794 = add i64 %2782, 16
  %2795 = add i64 %2783, -1
  %2796 = icmp eq i64 %2795, 0
  br i1 %2796, label %2797, label %2781, !llvm.loop !222

2797:                                             ; preds = %2781, %2778
  %2798 = icmp eq i64 %2718, %2682
  br i1 %2798, label %2852, label %2799

2799:                                             ; preds = %2797, %2710, %2707
  %2800 = phi i64 [ %2682, %2710 ], [ %2682, %2707 ], [ %2719, %2797 ]
  %2801 = phi i16* [ %2675, %2710 ], [ %2675, %2707 ], [ %2720, %2797 ]
  %2802 = phi i16* [ %2708, %2710 ], [ %2708, %2707 ], [ %2721, %2797 ]
  %2803 = add nsw i64 %2800, -1
  %2804 = and i64 %2800, 7
  %2805 = icmp eq i64 %2804, 0
  br i1 %2805, label %2817, label %2806

2806:                                             ; preds = %2799, %2806
  %2807 = phi i64 [ %2812, %2806 ], [ %2800, %2799 ]
  %2808 = phi i16* [ %2814, %2806 ], [ %2801, %2799 ]
  %2809 = phi i16* [ %2813, %2806 ], [ %2802, %2799 ]
  %2810 = phi i64 [ %2815, %2806 ], [ %2804, %2799 ]
  %2811 = load i16, i16* %2808, align 2
  store i16 %2811, i16* %2809, align 2
  %2812 = add i64 %2807, -1
  %2813 = getelementptr inbounds i16, i16* %2809, i64 1
  %2814 = getelementptr inbounds i16, i16* %2808, i64 1
  %2815 = add i64 %2810, -1
  %2816 = icmp eq i64 %2815, 0
  br i1 %2816, label %2817, label %2806, !llvm.loop !223

2817:                                             ; preds = %2806, %2799
  %2818 = phi i64 [ %2800, %2799 ], [ %2812, %2806 ]
  %2819 = phi i16* [ %2801, %2799 ], [ %2814, %2806 ]
  %2820 = phi i16* [ %2802, %2799 ], [ %2813, %2806 ]
  %2821 = icmp ult i64 %2803, 7
  br i1 %2821, label %2852, label %2822

2822:                                             ; preds = %2817, %2822
  %2823 = phi i64 [ %2848, %2822 ], [ %2818, %2817 ]
  %2824 = phi i16* [ %2850, %2822 ], [ %2819, %2817 ]
  %2825 = phi i16* [ %2849, %2822 ], [ %2820, %2817 ]
  %2826 = load i16, i16* %2824, align 2
  store i16 %2826, i16* %2825, align 2
  %2827 = getelementptr inbounds i16, i16* %2825, i64 1
  %2828 = getelementptr inbounds i16, i16* %2824, i64 1
  %2829 = load i16, i16* %2828, align 2
  store i16 %2829, i16* %2827, align 2
  %2830 = getelementptr inbounds i16, i16* %2825, i64 2
  %2831 = getelementptr inbounds i16, i16* %2824, i64 2
  %2832 = load i16, i16* %2831, align 2
  store i16 %2832, i16* %2830, align 2
  %2833 = getelementptr inbounds i16, i16* %2825, i64 3
  %2834 = getelementptr inbounds i16, i16* %2824, i64 3
  %2835 = load i16, i16* %2834, align 2
  store i16 %2835, i16* %2833, align 2
  %2836 = getelementptr inbounds i16, i16* %2825, i64 4
  %2837 = getelementptr inbounds i16, i16* %2824, i64 4
  %2838 = load i16, i16* %2837, align 2
  store i16 %2838, i16* %2836, align 2
  %2839 = getelementptr inbounds i16, i16* %2825, i64 5
  %2840 = getelementptr inbounds i16, i16* %2824, i64 5
  %2841 = load i16, i16* %2840, align 2
  store i16 %2841, i16* %2839, align 2
  %2842 = getelementptr inbounds i16, i16* %2825, i64 6
  %2843 = getelementptr inbounds i16, i16* %2824, i64 6
  %2844 = load i16, i16* %2843, align 2
  store i16 %2844, i16* %2842, align 2
  %2845 = getelementptr inbounds i16, i16* %2825, i64 7
  %2846 = getelementptr inbounds i16, i16* %2824, i64 7
  %2847 = load i16, i16* %2846, align 2
  store i16 %2847, i16* %2845, align 2
  %2848 = add i64 %2823, -8
  %2849 = getelementptr inbounds i16, i16* %2825, i64 8
  %2850 = getelementptr inbounds i16, i16* %2824, i64 8
  %2851 = icmp eq i64 %2848, 0
  br i1 %2851, label %2852, label %2822, !llvm.loop !224

2852:                                             ; preds = %2817, %2822, %2797, %2701
  %2853 = phi i16* [ %2705, %2701 ], [ %2708, %2797 ], [ %2708, %2822 ], [ %2708, %2817 ]
  %2854 = getelementptr inbounds i16, i16* %2853, i64 %2682
  store i16 0, i16* %2854, align 2
  store i8 1, i8* %2649, align 8
  %2855 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %2260, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2856 = load i8, i8* %2855, align 8, !range !2
  %2857 = icmp eq i8 %2856, 0
  %2858 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %2857, label %2873, label %2859

2859:                                             ; preds = %2852
  %2860 = bitcast %"class.std::__1::basic_string"* %2858 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2861 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2860, i64 0, i32 1, i32 1
  %2862 = load i8, i8* %2861, align 1
  %2863 = icmp slt i8 %2862, 0
  br i1 %2863, label %2864, label %2867

2864:                                             ; preds = %2859
  %2865 = bitcast %"class.std::__1::basic_string"* %2858 to i8**
  %2866 = load i8*, i8** %2865, align 8
  call void @_ZdlPv(i8* %2866) #14
  br label %2867

2867:                                             ; preds = %2864, %2859
  %2868 = bitcast %"class.std::__1::basic_string"* %2858 to i8*
  %2869 = bitcast %"class.std::__1::basic_string"* %2681 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2868, i8* align 8 %2869, i64 24, i1 false) #13
  %2870 = bitcast %"class.std::__1::basic_string"* %2681 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2871 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2870, i64 0, i32 1, i32 1
  store i8 0, i8* %2871, align 1
  %2872 = bitcast %"class.std::__1::basic_string"* %2681 to i16*
  store i16 0, i16* %2872, align 8
  br label %2890

2873:                                             ; preds = %2852
  %2874 = bitcast %"class.std::__1::basic_string"* %2858 to i8*
  %2875 = bitcast %"class.std::__1::basic_string"* %2681 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2874, i8* align 8 %2875, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %2875, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %2855, align 8
  br label %2890

2876:                                             ; preds = %2672
  %2877 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %2260, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2878 = load i8, i8* %2877, align 8, !range !2
  %2879 = icmp eq i8 %2878, 0
  br i1 %2879, label %2890, label %2880

2880:                                             ; preds = %2876
  %2881 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %2882 = bitcast %"class.std::__1::basic_string"* %2881 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2883 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2882, i64 0, i32 1, i32 1
  %2884 = load i8, i8* %2883, align 1
  %2885 = icmp slt i8 %2884, 0
  br i1 %2885, label %2886, label %2889

2886:                                             ; preds = %2880
  %2887 = bitcast %"class.std::__1::basic_string"* %2881 to i8**
  %2888 = load i8*, i8** %2887, align 8
  call void @_ZdlPv(i8* %2888) #14
  br label %2889

2889:                                             ; preds = %2886, %2880
  store i8 0, i8* %2877, align 8
  br label %2890

2890:                                             ; preds = %2867, %2873, %2876, %2889
  %2891 = load i8, i8* %2649, align 8, !range !2
  %2892 = icmp eq i8 %2891, 0
  br i1 %2892, label %2903, label %2893

2893:                                             ; preds = %2890
  %2894 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %77, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %2895 = bitcast %"class.std::__1::basic_string"* %2894 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2896 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2895, i64 0, i32 1, i32 1
  %2897 = load i8, i8* %2896, align 1
  %2898 = icmp slt i8 %2897, 0
  br i1 %2898, label %2899, label %2902

2899:                                             ; preds = %2893
  %2900 = bitcast %"class.std::__1::basic_string"* %2894 to i8**
  %2901 = load i8*, i8** %2900, align 8
  call void @_ZdlPv(i8* %2901) #14
  br label %2902

2902:                                             ; preds = %2899, %2893
  store i8 0, i8* %2649, align 8
  br label %2903

2903:                                             ; preds = %2890, %2902
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2649) #13
  %2904 = load i32, i32* %79, align 8
  %2905 = icmp slt i32 %2904, 14
  br i1 %2905, label %2906, label %3122

2906:                                             ; preds = %2903
  %2907 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2907) #13, !noalias !225
  store i32 -1431655766, i32* %6, align 4, !noalias !225
  %2908 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %93, i32* nonnull %6) #13, !noalias !225
  br i1 %2908, label %2911, label %2909

2909:                                             ; preds = %2906
  %2910 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %2910, align 4, !noalias !225
  br label %2929

2911:                                             ; preds = %2906
  %2912 = load i32, i32* %6, align 4, !noalias !225
  %2913 = icmp slt i32 %2912, 0
  br i1 %2913, label %2929, label %2914

2914:                                             ; preds = %2911
  %2915 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2915) #13, !noalias !225
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8, !noalias !225
  %2916 = call zeroext i1 @_ZN4base14PickleIterator9ReadBytesEPPKci(%"class.base::PickleIterator"* %93, i8** nonnull %7, i32 %2912) #13
  br i1 %2916, label %2919, label %2917

2917:                                             ; preds = %2914
  %2918 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %2918, align 4, !noalias !225
  br label %2925

2919:                                             ; preds = %2914
  %2920 = load i32, i32* %6, align 4, !noalias !225
  %2921 = ashr i32 %2920, 1
  %2922 = bitcast i8** %7 to i16**
  %2923 = load i16*, i16** %2922, align 8, !noalias !225
  %2924 = bitcast i16* %2923 to i8*
  br label %2925

2925:                                             ; preds = %2919, %2917
  %2926 = phi i32 [ %2921, %2919 ], [ -1431655766, %2917 ]
  %2927 = phi i8* [ %2924, %2919 ], [ null, %2917 ]
  %2928 = phi i16* [ %2923, %2919 ], [ null, %2917 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2915) #13, !noalias !225
  br label %2929

2929:                                             ; preds = %2925, %2911, %2909
  %2930 = phi i32 [ -1431655766, %2911 ], [ %2926, %2925 ], [ -1431655766, %2909 ]
  %2931 = phi i8* [ null, %2911 ], [ %2927, %2925 ], [ null, %2909 ]
  %2932 = phi i16* [ null, %2911 ], [ %2928, %2925 ], [ null, %2909 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2907) #13, !noalias !225
  %2933 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %78, i64 0, i32 0, i32 0, i32 0, i32 0
  %2934 = bitcast %"class.absl::optional"* %78 to i64*
  store i64 -6148914691236517376, i64* %2934, align 8, !alias.scope !225
  %2935 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %78, i64 0, i32 0, i32 0, i32 0, i32 1
  %2936 = bitcast %union.anon* %2935 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2936, i8 0, i64 24, i1 false) #13, !alias.scope !225
  %2937 = icmp eq i16* %2932, null
  br i1 %2937, label %3122, label %2938

2938:                                             ; preds = %2929
  %2939 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %78, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %2940 = sext i32 %2930 to i64
  %2941 = icmp slt i32 %2930, 0
  br i1 %2941, label %2942, label %2944

2942:                                             ; preds = %2938
  %2943 = bitcast %"class.std::__1::basic_string"* %2939 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %2943) #15
  unreachable

2944:                                             ; preds = %2938
  %2945 = icmp ult i32 %2930, 11
  br i1 %2945, label %2959, label %2946

2946:                                             ; preds = %2944
  %2947 = add nuw nsw i64 %2940, 8
  %2948 = and i64 %2947, -8
  %2949 = icmp slt i64 %2948, 0
  br i1 %2949, label %2950, label %2951

2950:                                             ; preds = %2946
  call void @abort() #15
  unreachable

2951:                                             ; preds = %2946
  %2952 = shl nsw i64 %2948, 1
  %2953 = call i8* @_Znwm(i64 %2952) #14
  %2954 = bitcast i8* %2953 to i16*
  %2955 = bitcast %"class.std::__1::basic_string"* %2939 to i8**
  store i8* %2953, i8** %2955, align 8
  %2956 = or i64 %2948, -9223372036854775808
  %2957 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %78, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %2956, i64* %2957, align 8
  %2958 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %78, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2940, i64* %2958, align 8
  br label %2965

2959:                                             ; preds = %2944
  %2960 = trunc i32 %2930 to i8
  %2961 = bitcast %"class.std::__1::basic_string"* %2939 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2962 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2961, i64 0, i32 1, i32 1
  store i8 %2960, i8* %2962, align 1
  %2963 = bitcast %"class.std::__1::basic_string"* %2939 to i16*
  %2964 = icmp eq i32 %2930, 0
  br i1 %2964, label %3110, label %2965

2965:                                             ; preds = %2959, %2951
  %2966 = phi i16* [ %2954, %2951 ], [ %2963, %2959 ]
  %2967 = icmp ult i32 %2930, 16
  br i1 %2967, label %3057, label %2968

2968:                                             ; preds = %2965
  %2969 = getelementptr i16, i16* %2966, i64 %2940
  %2970 = bitcast i16* %2969 to i8*
  %2971 = getelementptr i16, i16* %2932, i64 %2940
  %2972 = icmp ult i16* %2966, %2971
  %2973 = icmp ult i8* %2931, %2970
  %2974 = and i1 %2972, %2973
  br i1 %2974, label %3057, label %2975

2975:                                             ; preds = %2968
  %2976 = and i64 %2940, -16
  %2977 = sub nsw i64 %2940, %2976
  %2978 = getelementptr i16, i16* %2932, i64 %2976
  %2979 = getelementptr i16, i16* %2966, i64 %2976
  %2980 = add nsw i64 %2976, -16
  %2981 = lshr exact i64 %2980, 4
  %2982 = add nuw nsw i64 %2981, 1
  %2983 = and i64 %2982, 3
  %2984 = icmp ult i64 %2980, 48
  br i1 %2984, label %3036, label %2985

2985:                                             ; preds = %2975
  %2986 = sub nsw i64 %2982, %2983
  br label %2987

2987:                                             ; preds = %2987, %2985
  %2988 = phi i64 [ 0, %2985 ], [ %3033, %2987 ]
  %2989 = phi i64 [ %2986, %2985 ], [ %3034, %2987 ]
  %2990 = getelementptr i16, i16* %2932, i64 %2988
  %2991 = getelementptr i16, i16* %2966, i64 %2988
  %2992 = bitcast i16* %2990 to <8 x i16>*
  %2993 = load <8 x i16>, <8 x i16>* %2992, align 2, !alias.scope !228
  %2994 = getelementptr i16, i16* %2990, i64 8
  %2995 = bitcast i16* %2994 to <8 x i16>*
  %2996 = load <8 x i16>, <8 x i16>* %2995, align 2, !alias.scope !228
  %2997 = bitcast i16* %2991 to <8 x i16>*
  store <8 x i16> %2993, <8 x i16>* %2997, align 2, !alias.scope !231, !noalias !228
  %2998 = getelementptr i16, i16* %2991, i64 8
  %2999 = bitcast i16* %2998 to <8 x i16>*
  store <8 x i16> %2996, <8 x i16>* %2999, align 2, !alias.scope !231, !noalias !228
  %3000 = or i64 %2988, 16
  %3001 = getelementptr i16, i16* %2932, i64 %3000
  %3002 = getelementptr i16, i16* %2966, i64 %3000
  %3003 = bitcast i16* %3001 to <8 x i16>*
  %3004 = load <8 x i16>, <8 x i16>* %3003, align 2, !alias.scope !228
  %3005 = getelementptr i16, i16* %3001, i64 8
  %3006 = bitcast i16* %3005 to <8 x i16>*
  %3007 = load <8 x i16>, <8 x i16>* %3006, align 2, !alias.scope !228
  %3008 = bitcast i16* %3002 to <8 x i16>*
  store <8 x i16> %3004, <8 x i16>* %3008, align 2, !alias.scope !231, !noalias !228
  %3009 = getelementptr i16, i16* %3002, i64 8
  %3010 = bitcast i16* %3009 to <8 x i16>*
  store <8 x i16> %3007, <8 x i16>* %3010, align 2, !alias.scope !231, !noalias !228
  %3011 = or i64 %2988, 32
  %3012 = getelementptr i16, i16* %2932, i64 %3011
  %3013 = getelementptr i16, i16* %2966, i64 %3011
  %3014 = bitcast i16* %3012 to <8 x i16>*
  %3015 = load <8 x i16>, <8 x i16>* %3014, align 2, !alias.scope !228
  %3016 = getelementptr i16, i16* %3012, i64 8
  %3017 = bitcast i16* %3016 to <8 x i16>*
  %3018 = load <8 x i16>, <8 x i16>* %3017, align 2, !alias.scope !228
  %3019 = bitcast i16* %3013 to <8 x i16>*
  store <8 x i16> %3015, <8 x i16>* %3019, align 2, !alias.scope !231, !noalias !228
  %3020 = getelementptr i16, i16* %3013, i64 8
  %3021 = bitcast i16* %3020 to <8 x i16>*
  store <8 x i16> %3018, <8 x i16>* %3021, align 2, !alias.scope !231, !noalias !228
  %3022 = or i64 %2988, 48
  %3023 = getelementptr i16, i16* %2932, i64 %3022
  %3024 = getelementptr i16, i16* %2966, i64 %3022
  %3025 = bitcast i16* %3023 to <8 x i16>*
  %3026 = load <8 x i16>, <8 x i16>* %3025, align 2, !alias.scope !228
  %3027 = getelementptr i16, i16* %3023, i64 8
  %3028 = bitcast i16* %3027 to <8 x i16>*
  %3029 = load <8 x i16>, <8 x i16>* %3028, align 2, !alias.scope !228
  %3030 = bitcast i16* %3024 to <8 x i16>*
  store <8 x i16> %3026, <8 x i16>* %3030, align 2, !alias.scope !231, !noalias !228
  %3031 = getelementptr i16, i16* %3024, i64 8
  %3032 = bitcast i16* %3031 to <8 x i16>*
  store <8 x i16> %3029, <8 x i16>* %3032, align 2, !alias.scope !231, !noalias !228
  %3033 = add i64 %2988, 64
  %3034 = add i64 %2989, -4
  %3035 = icmp eq i64 %3034, 0
  br i1 %3035, label %3036, label %2987, !llvm.loop !233

3036:                                             ; preds = %2987, %2975
  %3037 = phi i64 [ 0, %2975 ], [ %3033, %2987 ]
  %3038 = icmp eq i64 %2983, 0
  br i1 %3038, label %3055, label %3039

3039:                                             ; preds = %3036, %3039
  %3040 = phi i64 [ %3052, %3039 ], [ %3037, %3036 ]
  %3041 = phi i64 [ %3053, %3039 ], [ %2983, %3036 ]
  %3042 = getelementptr i16, i16* %2932, i64 %3040
  %3043 = getelementptr i16, i16* %2966, i64 %3040
  %3044 = bitcast i16* %3042 to <8 x i16>*
  %3045 = load <8 x i16>, <8 x i16>* %3044, align 2, !alias.scope !228
  %3046 = getelementptr i16, i16* %3042, i64 8
  %3047 = bitcast i16* %3046 to <8 x i16>*
  %3048 = load <8 x i16>, <8 x i16>* %3047, align 2, !alias.scope !228
  %3049 = bitcast i16* %3043 to <8 x i16>*
  store <8 x i16> %3045, <8 x i16>* %3049, align 2, !alias.scope !231, !noalias !228
  %3050 = getelementptr i16, i16* %3043, i64 8
  %3051 = bitcast i16* %3050 to <8 x i16>*
  store <8 x i16> %3048, <8 x i16>* %3051, align 2, !alias.scope !231, !noalias !228
  %3052 = add i64 %3040, 16
  %3053 = add i64 %3041, -1
  %3054 = icmp eq i64 %3053, 0
  br i1 %3054, label %3055, label %3039, !llvm.loop !234

3055:                                             ; preds = %3039, %3036
  %3056 = icmp eq i64 %2976, %2940
  br i1 %3056, label %3110, label %3057

3057:                                             ; preds = %3055, %2968, %2965
  %3058 = phi i64 [ %2940, %2968 ], [ %2940, %2965 ], [ %2977, %3055 ]
  %3059 = phi i16* [ %2932, %2968 ], [ %2932, %2965 ], [ %2978, %3055 ]
  %3060 = phi i16* [ %2966, %2968 ], [ %2966, %2965 ], [ %2979, %3055 ]
  %3061 = add nsw i64 %3058, -1
  %3062 = and i64 %3058, 7
  %3063 = icmp eq i64 %3062, 0
  br i1 %3063, label %3075, label %3064

3064:                                             ; preds = %3057, %3064
  %3065 = phi i64 [ %3070, %3064 ], [ %3058, %3057 ]
  %3066 = phi i16* [ %3072, %3064 ], [ %3059, %3057 ]
  %3067 = phi i16* [ %3071, %3064 ], [ %3060, %3057 ]
  %3068 = phi i64 [ %3073, %3064 ], [ %3062, %3057 ]
  %3069 = load i16, i16* %3066, align 2
  store i16 %3069, i16* %3067, align 2
  %3070 = add i64 %3065, -1
  %3071 = getelementptr inbounds i16, i16* %3067, i64 1
  %3072 = getelementptr inbounds i16, i16* %3066, i64 1
  %3073 = add i64 %3068, -1
  %3074 = icmp eq i64 %3073, 0
  br i1 %3074, label %3075, label %3064, !llvm.loop !235

3075:                                             ; preds = %3064, %3057
  %3076 = phi i64 [ %3058, %3057 ], [ %3070, %3064 ]
  %3077 = phi i16* [ %3059, %3057 ], [ %3072, %3064 ]
  %3078 = phi i16* [ %3060, %3057 ], [ %3071, %3064 ]
  %3079 = icmp ult i64 %3061, 7
  br i1 %3079, label %3110, label %3080

3080:                                             ; preds = %3075, %3080
  %3081 = phi i64 [ %3106, %3080 ], [ %3076, %3075 ]
  %3082 = phi i16* [ %3108, %3080 ], [ %3077, %3075 ]
  %3083 = phi i16* [ %3107, %3080 ], [ %3078, %3075 ]
  %3084 = load i16, i16* %3082, align 2
  store i16 %3084, i16* %3083, align 2
  %3085 = getelementptr inbounds i16, i16* %3083, i64 1
  %3086 = getelementptr inbounds i16, i16* %3082, i64 1
  %3087 = load i16, i16* %3086, align 2
  store i16 %3087, i16* %3085, align 2
  %3088 = getelementptr inbounds i16, i16* %3083, i64 2
  %3089 = getelementptr inbounds i16, i16* %3082, i64 2
  %3090 = load i16, i16* %3089, align 2
  store i16 %3090, i16* %3088, align 2
  %3091 = getelementptr inbounds i16, i16* %3083, i64 3
  %3092 = getelementptr inbounds i16, i16* %3082, i64 3
  %3093 = load i16, i16* %3092, align 2
  store i16 %3093, i16* %3091, align 2
  %3094 = getelementptr inbounds i16, i16* %3083, i64 4
  %3095 = getelementptr inbounds i16, i16* %3082, i64 4
  %3096 = load i16, i16* %3095, align 2
  store i16 %3096, i16* %3094, align 2
  %3097 = getelementptr inbounds i16, i16* %3083, i64 5
  %3098 = getelementptr inbounds i16, i16* %3082, i64 5
  %3099 = load i16, i16* %3098, align 2
  store i16 %3099, i16* %3097, align 2
  %3100 = getelementptr inbounds i16, i16* %3083, i64 6
  %3101 = getelementptr inbounds i16, i16* %3082, i64 6
  %3102 = load i16, i16* %3101, align 2
  store i16 %3102, i16* %3100, align 2
  %3103 = getelementptr inbounds i16, i16* %3083, i64 7
  %3104 = getelementptr inbounds i16, i16* %3082, i64 7
  %3105 = load i16, i16* %3104, align 2
  store i16 %3105, i16* %3103, align 2
  %3106 = add i64 %3081, -8
  %3107 = getelementptr inbounds i16, i16* %3083, i64 8
  %3108 = getelementptr inbounds i16, i16* %3082, i64 8
  %3109 = icmp eq i64 %3106, 0
  br i1 %3109, label %3110, label %3080, !llvm.loop !236

3110:                                             ; preds = %3075, %3080, %3055, %2959
  %3111 = phi i16* [ %2963, %2959 ], [ %2966, %3055 ], [ %2966, %3080 ], [ %2966, %3075 ]
  %3112 = getelementptr inbounds i16, i16* %3111, i64 %2940
  store i16 0, i16* %3112, align 2
  store i8 1, i8* %2933, align 8
  %3113 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %78, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %3114 = bitcast %"class.std::__1::basic_string"* %3113 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %3115 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3114, i64 0, i32 1, i32 1
  %3116 = load i8, i8* %3115, align 1
  %3117 = icmp slt i8 %3116, 0
  br i1 %3117, label %3118, label %3121

3118:                                             ; preds = %3110
  %3119 = bitcast %"class.std::__1::basic_string"* %3113 to i8**
  %3120 = load i8*, i8** %3119, align 8
  call void @_ZdlPv(i8* %3120) #14
  br label %3121

3121:                                             ; preds = %3118, %3110
  store i8 0, i8* %2933, align 8
  br label %3122

3122:                                             ; preds = %2929, %3121, %2903
  %3123 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3123) #13
  store i32 -1431655766, i32* %5, align 4
  %3124 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %93, i32* nonnull %5) #13
  br i1 %3124, label %3127, label %3125

3125:                                             ; preds = %3122
  %3126 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %3126, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3123) #13
  br label %3131

3127:                                             ; preds = %3122
  %3128 = load i32, i32* %5, align 4
  %3129 = sext i32 %3128 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3123) #13
  %3130 = icmp ult i32 %3128, 4194303
  br i1 %3130, label %3131, label %3141

3131:                                             ; preds = %3125, %3127
  %3132 = phi i64 [ 0, %3125 ], [ %3129, %3127 ]
  %3133 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 0, i32 1
  %3134 = load %"struct.base::Pickle::Header"*, %"struct.base::Pickle::Header"** %3133, align 8
  %3135 = icmp eq %"struct.base::Pickle::Header"* %3134, null
  br i1 %3135, label %3141, label %3136

3136:                                             ; preds = %3131
  %3137 = getelementptr inbounds %"struct.base::Pickle::Header", %"struct.base::Pickle::Header"* %3134, i64 0, i32 0
  %3138 = load i32, i32* %3137, align 4
  %3139 = zext i32 %3138 to i64
  %3140 = icmp ult i64 %3132, %3139
  br i1 %3140, label %3143, label %3141

3141:                                             ; preds = %3131, %3136, %3127
  %3142 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %0, i64 0, i32 3
  store i8 1, i8* %3142, align 4
  br label %3143

3143:                                             ; preds = %3141, %3136
  %3144 = phi i64 [ %3132, %3136 ], [ 0, %3141 ]
  %3145 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 22
  %3146 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3, i64 0, i32 22, i32 0, i32 1
  %3147 = bitcast %"struct.blink::ExplodedFrameState"** %3146 to i64*
  %3148 = load i64, i64* %3147, align 8
  %3149 = bitcast %"class.std::__1::vector.47"* %3145 to i64*
  %3150 = load i64, i64* %3149, align 8
  %3151 = sub i64 %3148, %3150
  %3152 = ashr exact i64 %3151, 9
  %3153 = icmp ugt i64 %3144, %3152
  %3154 = inttoptr i64 %3150 to %"struct.blink::ExplodedFrameState"*
  %3155 = inttoptr i64 %3148 to %"struct.blink::ExplodedFrameState"*
  br i1 %3153, label %3156, label %3158

3156:                                             ; preds = %3143
  %3157 = sub nsw i64 %3144, %3152
  call void @_ZNSt3__16vectorIN5blink18ExplodedFrameStateENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.47"* %3145, i64 %3157) #13
  br label %3168

3158:                                             ; preds = %3143
  %3159 = icmp ult i64 %3144, %3152
  br i1 %3159, label %3160, label %3168

3160:                                             ; preds = %3158
  %3161 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3154, i64 %3144
  %3162 = icmp eq %"struct.blink::ExplodedFrameState"* %3161, %3155
  br i1 %3162, label %3167, label %3163

3163:                                             ; preds = %3160, %3163
  %3164 = phi %"struct.blink::ExplodedFrameState"* [ %3165, %3163 ], [ %3155, %3160 ]
  %3165 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3164, i64 -1
  call void @_ZN5blink18ExplodedFrameStateD2Ev(%"struct.blink::ExplodedFrameState"* %3165) #13
  %3166 = icmp eq %"struct.blink::ExplodedFrameState"* %3165, %3161
  br i1 %3166, label %3167, label %3163

3167:                                             ; preds = %3163, %3160
  store %"struct.blink::ExplodedFrameState"* %3161, %"struct.blink::ExplodedFrameState"** %3146, align 8
  br label %3168

3168:                                             ; preds = %3156, %3158, %3167
  %3169 = icmp eq i64 %3144, 0
  br i1 %3169, label %3172, label %3170

3170:                                             ; preds = %3168
  %3171 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %3145, i64 0, i32 0, i32 0
  br label %3173

3172:                                             ; preds = %3173, %3168
  ret void

3173:                                             ; preds = %3173, %3170
  %3174 = phi i64 [ 0, %3170 ], [ %3177, %3173 ]
  %3175 = load %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"** %3171, align 8
  %3176 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %3175, i64 %3174
  call fastcc void @_ZN5blink12_GLOBAL__N_114ReadFrameStateEPNS0_15SerializeObjectEbPNSt3__16vectorINS_16UniqueNameHelper11ReplacementENS3_9allocatorIS6_EEEEPNS_18ExplodedFrameStateE(%"struct.blink::(anonymous namespace)::SerializeObject"* %0, i1 zeroext false, %"class.std::__1::vector.57"* %2, %"struct.blink::ExplodedFrameState"* %3176)
  %3177 = add nuw i64 %3174, 1
  %3178 = icmp eq i64 %3177, %3144
  br i1 %3178, label %3172, label %3173
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_132RecursivelyAppendReferencedFilesERKNS_18ExplodedFrameStateEPNSt3__16vectorIN4absl8optionalINS4_12basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEENSB_ISE_EEEE(%"struct.blink::ExplodedFrameState"* nocapture readonly dereferenceable(512), %"class.std::__1::vector.40"*) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 15, i32 1, i32 0
  %7 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %6, align 8
  %8 = icmp eq %"class.network::ResourceRequestBody"* %7, null
  br i1 %8, label %59, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %7, i64 0, i32 2
  %11 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %7, i64 0, i32 2, i32 0, i32 1
  %12 = bitcast %"class.network::DataElement"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %13, %15
  br i1 %16, label %59, label %17

17:                                               ; preds = %9
  %18 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %19 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %1, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"class.absl::optional"** %19 to i64*
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  br label %25

25:                                               ; preds = %52, %17
  %26 = phi i64 [ %15, %17 ], [ %53, %52 ]
  %27 = phi i64 [ %13, %17 ], [ %54, %52 ]
  %28 = phi i64 [ 0, %17 ], [ %55, %52 ]
  %29 = inttoptr i64 %26 to %"class.network::DataElement"*
  %30 = getelementptr inbounds %"class.network::DataElement", %"class.network::DataElement"* %29, i64 %28, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 4
  br i1 %32, label %33, label %52

33:                                               ; preds = %25
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #13
  %34 = getelementptr inbounds %"class.network::DataElement", %"class.network::DataElement"* %29, i64 %28, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNK4base8FilePath13AsUTF16UnsafeEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.base::FilePath"* %34) #13
  %35 = load %"class.absl::optional"*, %"class.absl::optional"** %19, align 8
  %36 = load %"class.absl::optional"*, %"class.absl::optional"** %20, align 8
  %37 = icmp ult %"class.absl::optional"* %35, %36
  br i1 %37, label %38, label %44

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %39, align 8
  %40 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %35, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %41 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 8 %18, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #13
  %42 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %35, i64 1
  %43 = ptrtoint %"class.absl::optional"* %42 to i64
  store i64 %43, i64* %21, align 8
  br label %49

44:                                               ; preds = %33
  call void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.40"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #13
  %45 = load i8, i8* %23, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %44
  %48 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %48) #14
  br label %49

49:                                               ; preds = %47, %44, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #13
  %50 = load i64, i64* %12, align 8
  %51 = load i64, i64* %14, align 8
  br label %52

52:                                               ; preds = %49, %25
  %53 = phi i64 [ %26, %25 ], [ %51, %49 ]
  %54 = phi i64 [ %27, %25 ], [ %50, %49 ]
  %55 = add nuw i64 %28, 1
  %56 = sub i64 %54, %53
  %57 = sdiv exact i64 %56, 56
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %52, %2, %9
  %60 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 5
  %61 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.absl::optional"*, %"class.absl::optional"** %61, align 8
  %63 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 5, i32 0, i32 1
  %64 = load %"class.absl::optional"*, %"class.absl::optional"** %63, align 8
  %65 = icmp eq %"class.absl::optional"* %62, %64
  br i1 %65, label %187, label %66

66:                                               ; preds = %59
  %67 = ptrtoint %"class.absl::optional"* %62 to i64
  %68 = ptrtoint %"class.absl::optional"* %64 to i64
  %69 = bitcast %"class.absl::optional"** %63 to i64*
  %70 = bitcast %"class.std::__1::vector.40"* %60 to i64*
  %71 = sub i64 %68, %67
  %72 = ashr exact i64 %71, 5
  %73 = icmp ult i64 %72, 3
  br i1 %73, label %208, label %74

74:                                               ; preds = %66
  %75 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #13
  store i64 -6148914691236517206, i64* %4, align 8
  %76 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %62, i64 2, i32 0, i32 0, i32 0, i32 0
  %77 = load i8, i8* %76, align 8, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %185, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %62, i64 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %81 = bitcast %"class.std::__1::basic_string"* %80 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %81, i64 0, i32 1, i32 1
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i16*, i16** %85, align 8
  %87 = bitcast %"class.std::__1::basic_string"* %80 to i16*
  %88 = select i1 %84, i16* %86, i16* %87
  %89 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %62, i64 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = zext i8 %83 to i64
  %92 = select i1 %84, i64 %90, i64 %91
  %93 = call zeroext i1 @_ZN4base13StringToSizeTENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPm(i16* %88, i64 %92, i64* nonnull %4) #13
  br i1 %93, label %94, label %185

94:                                               ; preds = %79
  %95 = load i64, i64* %4, align 8
  %96 = add i64 %95, -1
  store i64 %96, i64* %4, align 8
  %97 = icmp eq i64 %95, 0
  br i1 %97, label %186, label %98

98:                                               ; preds = %94
  %99 = bitcast i64* %5 to i8*
  %100 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %1, i64 0, i32 0, i32 1
  %101 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %102

102:                                              ; preds = %180, %98
  %103 = phi i64 [ 3, %98 ], [ %181, %180 ]
  %104 = add i64 %103, 1
  %105 = load i64, i64* %69, align 8
  %106 = load i64, i64* %70, align 8
  %107 = sub i64 %105, %106
  %108 = ashr exact i64 %107, 5
  %109 = icmp ult i64 %104, %108
  %110 = inttoptr i64 %106 to %"class.absl::optional"*
  br i1 %109, label %111, label %185

111:                                              ; preds = %102
  %112 = add i64 %103, 2
  %113 = icmp ult i64 %112, %108
  br i1 %113, label %114, label %185

114:                                              ; preds = %111
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #13
  store i64 -6148914691236517206, i64* %5, align 8
  %115 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %110, i64 %112, i32 0, i32 0, i32 0, i32 0
  %116 = load i8, i8* %115, align 8, !range !2
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %179, label %118

118:                                              ; preds = %114
  %119 = add i64 %103, 3
  %120 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %110, i64 %112, i32 0, i32 0, i32 0, i32 1, i32 0
  %121 = bitcast %"class.std::__1::basic_string"* %120 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %121, i64 0, i32 1, i32 1
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i16*, i16** %125, align 8
  %127 = bitcast %"class.std::__1::basic_string"* %120 to i16*
  %128 = select i1 %124, i16* %126, i16* %127
  %129 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %110, i64 %112, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = zext i8 %123 to i64
  %132 = select i1 %124, i64 %130, i64 %131
  %133 = call zeroext i1 @_ZN4base13StringToSizeTENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPm(i16* %128, i64 %132, i64* nonnull %5) #13
  br i1 %133, label %134, label %179

134:                                              ; preds = %118
  %135 = load i64, i64* %5, align 8
  %136 = add i64 %135, %119
  %137 = load i64, i64* %69, align 8
  %138 = load i64, i64* %70, align 8
  %139 = sub i64 %137, %138
  %140 = ashr exact i64 %139, 5
  %141 = icmp ugt i64 %136, %140
  %142 = sub i64 -4, %103
  %143 = icmp ugt i64 %135, %142
  %144 = or i1 %143, %141
  br i1 %144, label %179, label %145

145:                                              ; preds = %134
  %146 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %110, i64 %104, i32 0, i32 0, i32 0, i32 0
  %147 = load i8, i8* %146, align 8, !range !2
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %180, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %110, i64 %104, i32 0, i32 0, i32 0, i32 1, i32 0
  %151 = bitcast %"class.std::__1::basic_string"* %150 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %152 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %151, i64 0, i32 1, i32 1
  %153 = load i8, i8* %152, align 1
  %154 = icmp slt i8 %153, 0
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load i16*, i16** %155, align 8
  %157 = bitcast %"class.std::__1::basic_string"* %150 to i16*
  %158 = select i1 %154, i16* %156, i16* %157
  %159 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %110, i64 %104, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %160 = load i64, i64* %159, align 8
  %161 = zext i8 %153 to i64
  %162 = select i1 %154, i64 %160, i64 %161
  %163 = call zeroext i1 @_ZN4base11EqualsASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS0_IcNS2_IcEEEE(i16* %158, i64 %162, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #13
  %164 = load i64, i64* %5, align 8
  br i1 %163, label %167, label %165

165:                                              ; preds = %149
  %166 = add i64 %164, %119
  br label %180

167:                                              ; preds = %149
  %168 = icmp eq i64 %164, 2
  br i1 %168, label %169, label %179

169:                                              ; preds = %167
  %170 = load %"class.absl::optional"*, %"class.absl::optional"** %61, align 8
  %171 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %170, i64 %119
  %172 = load %"class.absl::optional"*, %"class.absl::optional"** %100, align 8
  %173 = load %"class.absl::optional"*, %"class.absl::optional"** %101, align 8
  %174 = icmp ult %"class.absl::optional"* %172, %173
  br i1 %174, label %175, label %176

175:                                              ; preds = %169
  call void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE22__construct_one_at_endIJRKS9_EEEvDpOT_(%"class.std::__1::vector.40"* %1, %"class.absl::optional"* dereferenceable(32) %171) #13
  br label %177

176:                                              ; preds = %169
  call void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE24__emplace_back_slow_pathIJRKS9_EEEvDpOT_(%"class.std::__1::vector.40"* %1, %"class.absl::optional"* dereferenceable(32) %171) #13
  br label %177

177:                                              ; preds = %176, %175
  %178 = add i64 %103, 5
  br label %180

179:                                              ; preds = %167, %134, %118, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #13
  br label %185

180:                                              ; preds = %177, %165, %145
  %181 = phi i64 [ %178, %177 ], [ %166, %165 ], [ %136, %145 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #13
  %182 = load i64, i64* %4, align 8
  %183 = add i64 %182, -1
  store i64 %183, i64* %4, align 8
  %184 = icmp eq i64 %182, 0
  br i1 %184, label %186, label %102

185:                                              ; preds = %102, %111, %79, %74, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #13
  br label %208

186:                                              ; preds = %180, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #13
  br label %187

187:                                              ; preds = %186, %59
  %188 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 22
  %189 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 22, i32 0, i32 1
  %190 = bitcast %"struct.blink::ExplodedFrameState"** %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %"class.std::__1::vector.47"* %188 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = icmp eq i64 %191, %193
  br i1 %194, label %208, label %201

195:                                              ; preds = %201
  %196 = load i64, i64* %190, align 8
  %197 = load i64, i64* %192, align 8
  %198 = sub i64 %196, %197
  %199 = ashr exact i64 %198, 9
  %200 = icmp ult i64 %207, %199
  br i1 %200, label %201, label %208

201:                                              ; preds = %187, %195
  %202 = phi i64 [ %197, %195 ], [ %193, %187 ]
  %203 = phi i64 [ %207, %195 ], [ 0, %187 ]
  %204 = inttoptr i64 %202 to %"struct.blink::ExplodedFrameState"*
  %205 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %204, i64 %203
  %206 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_132RecursivelyAppendReferencedFilesERKNS_18ExplodedFrameStateEPNSt3__16vectorIN4absl8optionalINS4_12basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEENSB_ISE_EEEE(%"struct.blink::ExplodedFrameState"* dereferenceable(512) %205, %"class.std::__1::vector.40"* %1)
  %207 = add nuw i64 %203, 1
  br i1 %206, label %195, label %208

208:                                              ; preds = %201, %195, %187, %66, %185
  %209 = phi i1 [ false, %185 ], [ false, %66 ], [ true, %187 ], [ false, %201 ], [ true, %195 ]
  ret i1 %209
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.absl::optional"* @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE5eraseENS_11__wrap_iterIPKS9_EESF_(%"class.std::__1::vector.40"*, %"class.absl::optional"*, %"class.absl::optional"*) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %"class.absl::optional"* %1, %2
  br i1 %4, label %81, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.absl::optional"*, %"class.absl::optional"** %6, align 8
  %8 = icmp eq %"class.absl::optional"* %7, %2
  br i1 %8, label %58, label %9

9:                                                ; preds = %5, %52
  %10 = phi %"class.absl::optional"* [ %54, %52 ], [ %1, %5 ]
  %11 = phi %"class.absl::optional"* [ %53, %52 ], [ %2, %5 ]
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %38, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %19, label %35, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = bitcast %"class.std::__1::basic_string"* %20 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %26, %21
  %30 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %31 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false) #13
  %32 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  store i8 0, i8* %33, align 1
  %34 = bitcast %"class.std::__1::basic_string"* %16 to i16*
  store i16 0, i16* %34, align 2
  br label %52

35:                                               ; preds = %15
  %36 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %17, align 8
  br label %52

38:                                               ; preds = %9
  %39 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %52, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %42
  %49 = bitcast %"class.std::__1::basic_string"* %43 to i8**
  %50 = load i8*, i8** %49, align 8
  tail call void @_ZdlPv(i8* %50) #14
  br label %51

51:                                               ; preds = %48, %42
  store i8 0, i8* %39, align 8
  br label %52

52:                                               ; preds = %51, %38, %35, %29
  %53 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 1
  %54 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 1
  %55 = icmp eq %"class.absl::optional"* %53, %7
  br i1 %55, label %56, label %9

56:                                               ; preds = %52
  %57 = load %"class.absl::optional"*, %"class.absl::optional"** %6, align 8
  br label %58

58:                                               ; preds = %56, %5
  %59 = phi %"class.absl::optional"* [ %2, %5 ], [ %57, %56 ]
  %60 = phi %"class.absl::optional"* [ %1, %5 ], [ %54, %56 ]
  %61 = icmp eq %"class.absl::optional"* %59, %60
  br i1 %61, label %80, label %62

62:                                               ; preds = %58, %78
  %63 = phi %"class.absl::optional"* [ %64, %78 ], [ %59, %58 ]
  %64 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %63, i64 -1
  %65 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %78, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %63, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %70 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %70, i64 0, i32 1, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = bitcast %"class.std::__1::basic_string"* %69 to i8**
  %76 = load i8*, i8** %75, align 8
  tail call void @_ZdlPv(i8* %76) #14
  br label %77

77:                                               ; preds = %74, %68
  store i8 0, i8* %65, align 8
  br label %78

78:                                               ; preds = %77, %62
  %79 = icmp eq %"class.absl::optional"* %64, %60
  br i1 %79, label %80, label %62

80:                                               ; preds = %78, %58
  store %"class.absl::optional"* %60, %"class.absl::optional"** %6, align 8
  br label %81

81:                                               ; preds = %3, %80
  ret %"class.absl::optional"* %1
}

declare zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"*, i32*) local_unnamed_addr #7

declare zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"*, %"class.std::__1::basic_string.15"*) local_unnamed_addr #7

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #7

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5mojom9PageState11DeserializeIN4mojo9StructPtrIS1_EEEEbPKvmPT_(i8*, i64, %"class.mojo::StructPtr"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::ValidationContext", align 8
  %5 = alloca %"class.mojo::Message", align 8
  %6 = bitcast %"class.mojo::Message"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 120, i1 false)
  call void @_ZN4mojo7MessageC1Ev(%"class.mojo::Message"* nonnull %5) #13
  %7 = icmp eq i64 %1, 0
  %8 = select i1 %7, i8* null, i8* %0
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, 7
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = call noalias i8* @malloc(i64 %1) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %0, i64 %1, i1 false) #13
  br label %14

14:                                               ; preds = %12, %3
  %15 = phi i8* [ %13, %12 ], [ null, %3 ]
  %16 = phi i8* [ %13, %12 ], [ %8, %3 ]
  %17 = bitcast %"class.mojo::internal::ValidationContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %17) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 64, i1 false) #13
  %18 = and i64 %1, 4294967295
  %19 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %5, i64 0, i32 2
  %20 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %5, i64 0, i32 2, i32 0, i32 1
  %21 = bitcast %"class.mojo::ScopedHandleBase.148"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.146"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  call void @_ZN4mojo8internal17ValidationContextC1EPKvmmmPNS_7MessageEPKciNS1_13ValidatorTypeE(%"class.mojo::internal::ValidationContext"* nonnull %4, i8* %16, i64 %18, i64 %26, i64 0, %"class.mojo::Message"* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i32 0, i32 0) #13
  %27 = call zeroext i1 @_ZN5blink5mojom9PageState8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %16, %"class.mojo::internal::ValidationContext"* nonnull %4) #13
  br i1 %27, label %28, label %39

28:                                               ; preds = %14
  %29 = icmp eq i8* %16, null
  br i1 %29, label %30, label %36

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::mojom::PageState"*, %"class.blink::mojom::PageState"** %31, align 8
  store %"class.blink::mojom::PageState"* null, %"class.blink::mojom::PageState"** %31, align 8
  %33 = icmp eq %"class.blink::mojom::PageState"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  call void @_ZN5blink5mojom9PageStateD1Ev(%"class.blink::mojom::PageState"* nonnull %32) #13
  %35 = bitcast %"class.blink::mojom::PageState"* %32 to i8*
  call void @_ZdlPv(i8* %35) #14
  br label %39

36:                                               ; preds = %28
  %37 = bitcast i8* %16 to %"class.blink::mojom::internal::PageState_Data"*
  %38 = call zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom17PageStateDataViewENS_9StructPtrINS2_9PageStateEEEE4ReadES3_PS6_(%"class.blink::mojom::internal::PageState_Data"* nonnull %37, %"class.mojo::Message"* nonnull %5, %"class.mojo::StructPtr"* %2) #13
  br label %39

39:                                               ; preds = %36, %34, %30, %14
  %40 = phi i1 [ false, %14 ], [ %38, %36 ], [ true, %30 ], [ true, %34 ]
  %41 = icmp eq i8* %15, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %39
  call void @free(i8* nonnull %15) #13
  br label %43

43:                                               ; preds = %39, %42
  call void @_ZN4mojo8internal17ValidationContextD1Ev(%"class.mojo::internal::ValidationContext"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %17) #13
  call void @_ZN4mojo7MessageD1Ev(%"class.mojo::Message"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %6) #13
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_114ReadFrameStateEPNS_5mojom10FrameStateEPNS_18ExplodedFrameStateE(%"class.blink::mojom::FrameState"*, %"struct.blink::ExplodedFrameState"*) unnamed_addr #8 {
  %3 = alloca %"class.base::Time", align 8
  %4 = alloca %"class.base::FilePath", align 8
  %5 = alloca %"class.absl::optional", align 8
  %6 = alloca %"class.url::Origin", align 8
  %7 = alloca %class.GURL, align 8
  %8 = alloca %"class.gfx::PointF", align 4
  %9 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 0
  %11 = tail call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %10, %"class.absl::optional"* dereferenceable(32) %9)
  %12 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 1
  %14 = tail call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %13, %"class.absl::optional"* dereferenceable(32) %12)
  %15 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %42, label %18

18:                                               ; preds = %2
  %19 = bitcast %"class.url::Origin"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %19) #13
  %20 = bitcast %class.GURL* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = bitcast %"class.std::__1::basic_string.15"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"class.std::__1::basic_string.15"* %21 to i8*
  %29 = select i1 %25, i8* %27, i8* %28
  %30 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %24 to i64
  %33 = select i1 %25, i64 %31, i64 %32
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %7, i8* %29, i64 %33) #13
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %6, %class.GURL* nonnull dereferenceable(120) %7) #13
  %34 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  %37 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %36, label %40, label %38

38:                                               ; preds = %18
  %39 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %37, %"class.url::Origin"* nonnull dereferenceable(80) %6) #13
  br label %41

40:                                               ; preds = %18
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %37, %"class.url::Origin"* nonnull dereferenceable(80) %6) #13
  store i8 1, i8* %34, align 8
  br label %41

41:                                               ; preds = %38, %40
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %6) #13
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %19) #13
  br label %42

42:                                               ; preds = %2, %41
  %43 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 2
  %44 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 3
  %45 = call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %44, %"class.absl::optional"* dereferenceable(32) %43)
  %46 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 3
  %47 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 4
  %48 = call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %47, %"class.absl::optional"* dereferenceable(32) %46)
  %49 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 4, i32 0, i32 0
  %50 = load %"class.absl::optional"*, %"class.absl::optional"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 4, i32 0, i32 1
  %52 = load %"class.absl::optional"*, %"class.absl::optional"** %51, align 8
  %53 = icmp eq %"class.absl::optional"* %50, %52
  br i1 %53, label %58, label %54

54:                                               ; preds = %42
  %55 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 5
  %56 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 5, i32 0, i32 1
  %57 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  br label %65

58:                                               ; preds = %72, %42
  %59 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 5
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 6
  store i32 %60, i32* %61, align 8
  %62 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %62, align 8
  %64 = icmp eq %"class.blink::mojom::ViewState"* %63, null
  br i1 %64, label %117, label %75

65:                                               ; preds = %54, %72
  %66 = phi %"class.absl::optional"* [ %50, %54 ], [ %73, %72 ]
  %67 = load %"class.absl::optional"*, %"class.absl::optional"** %56, align 8
  %68 = load %"class.absl::optional"*, %"class.absl::optional"** %57, align 8
  %69 = icmp eq %"class.absl::optional"* %67, %68
  br i1 %69, label %71, label %70

70:                                               ; preds = %65
  call void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE22__construct_one_at_endIJRKS9_EEEvDpOT_(%"class.std::__1::vector.40"* %55, %"class.absl::optional"* dereferenceable(32) %66) #13
  br label %72

71:                                               ; preds = %65
  call void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE21__push_back_slow_pathIRKS9_EEvOT_(%"class.std::__1::vector.40"* %55, %"class.absl::optional"* dereferenceable(32) %66) #13
  br label %72

72:                                               ; preds = %70, %71
  %73 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %66, i64 1
  %74 = icmp eq %"class.absl::optional"* %73, %52
  br i1 %74, label %58, label %65

75:                                               ; preds = %58
  %76 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 7
  store i8 1, i8* %76, align 4
  %77 = bitcast %"class.blink::mojom::ViewState"** %62 to i64**
  %78 = load i64*, i64** %77, align 8
  %79 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 8
  %80 = bitcast %"class.gfx::PointF"* %79 to i64*
  %81 = load i64, i64* %78, align 4
  store i64 %81, i64* %80, align 8
  %82 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %62, align 8
  %83 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %82, i64 0, i32 1
  %84 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 9
  %85 = bitcast %"class.gfx::Point"* %83 to i64*
  %86 = bitcast %"class.gfx::Point"* %84 to i64*
  %87 = load i64, i64* %85, align 4
  store i64 %87, i64* %86, align 8
  %88 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %62, align 8
  %89 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %88, i64 0, i32 2
  %90 = bitcast double* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 12
  %93 = bitcast double* %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %62, align 8
  %95 = icmp eq %"class.blink::mojom::ViewState"* %94, null
  br i1 %95, label %117, label %96

96:                                               ; preds = %75
  %97 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %94, i64 0, i32 3
  %98 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 16
  %99 = call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %98, %"class.absl::optional"* dereferenceable(32) %97)
  %100 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %62, align 8
  %101 = bitcast %"class.gfx::PointF"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101)
  %102 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %8, i64 0, i32 0
  store float 0.000000e+00, float* %102, align 4
  %103 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %8, i64 0, i32 1
  store float 0.000000e+00, float* %103, align 4
  %104 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %100, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %105 = load i8, i8* %104, align 4, !range !2
  %106 = icmp eq i8 %105, 0
  %107 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %100, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %108 = select i1 %106, %"class.gfx::PointF"* %8, %"class.gfx::PointF"* %107
  %109 = bitcast %"class.gfx::PointF"* %108 to i64*
  %110 = load i64, i64* %109, align 4
  %111 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 17
  %112 = bitcast %"class.gfx::PointF"* %111 to i64*
  store i64 %110, i64* %112, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101)
  %113 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %62, align 8
  %114 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %113, i64 0, i32 5
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 18
  store i64 %115, i64* %116, align 8
  br label %117

117:                                              ; preds = %75, %58, %96
  %118 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 7
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 10
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 8
  %122 = load i64, i64* %121, align 8
  %123 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 11
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 9
  %125 = load i32, i32* %124, align 8
  %126 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 13
  store i32 %125, i32* %126, align 8
  %127 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %128 = load %"class.blink::mojom::HttpBody"*, %"class.blink::mojom::HttpBody"** %127, align 8
  %129 = icmp eq %"class.blink::mojom::HttpBody"* %128, null
  br i1 %129, label %415, label %130

130:                                              ; preds = %117
  %131 = getelementptr inbounds %"class.blink::mojom::HttpBody", %"class.blink::mojom::HttpBody"* %128, i64 0, i32 2
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 15, i32 2
  store i8 %132, i8* %133, align 8
  %134 = getelementptr inbounds %"class.blink::mojom::HttpBody", %"class.blink::mojom::HttpBody"* %128, i64 0, i32 0
  %135 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 15, i32 0
  %136 = call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %135, %"class.absl::optional"* dereferenceable(32) %134) #13
  %137 = getelementptr inbounds %"class.blink::mojom::HttpBody", %"class.blink::mojom::HttpBody"* %128, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %138 = load %"class.blink::mojom::RequestBody"*, %"class.blink::mojom::RequestBody"** %137, align 8
  %139 = icmp eq %"class.blink::mojom::RequestBody"* %138, null
  br i1 %139, label %427, label %140

140:                                              ; preds = %130
  %141 = call i8* @_Znwm(i64 48) #14
  %142 = bitcast i8* %141 to %"class.network::ResourceRequestBody"*
  call void @_ZN7network19ResourceRequestBodyC1Ev(%"class.network::ResourceRequestBody"* nonnull %142) #13
  %143 = bitcast i8* %141 to i32*
  %144 = atomicrmw add i32* %143, i32 1 monotonic
  %145 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 15, i32 1
  %146 = ptrtoint i8* %141 to i64
  %147 = bitcast %class.scoped_refptr* %145 to i64*
  %148 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %145, i64 0, i32 0
  %149 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %148, align 8
  store i64 %146, i64* %147, align 8
  %150 = icmp eq %"class.network::ResourceRequestBody"* %149, null
  br i1 %150, label %157, label %151

151:                                              ; preds = %140
  %152 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %149, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = atomicrmw sub i32* %152, i32 1 acq_rel
  %154 = icmp eq i32 %153, 1
  br i1 %154, label %155, label %157

155:                                              ; preds = %151
  call void @_ZN7network19ResourceRequestBodyD1Ev(%"class.network::ResourceRequestBody"* nonnull %149) #13
  %156 = bitcast %"class.network::ResourceRequestBody"* %149 to i8*
  call void @_ZdlPv(i8* %156) #14
  br label %157

157:                                              ; preds = %155, %151, %140
  %158 = load %"class.blink::mojom::RequestBody"*, %"class.blink::mojom::RequestBody"** %137, align 8
  %159 = getelementptr inbounds %"class.blink::mojom::RequestBody", %"class.blink::mojom::RequestBody"* %158, i64 0, i32 0, i32 0, i32 0
  %160 = load %"class.mojo::StructPtr.95"*, %"class.mojo::StructPtr.95"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::mojom::RequestBody", %"class.blink::mojom::RequestBody"* %158, i64 0, i32 0, i32 0, i32 1
  %162 = load %"class.mojo::StructPtr.95"*, %"class.mojo::StructPtr.95"** %161, align 8
  %163 = icmp eq %"class.mojo::StructPtr.95"* %160, %162
  br i1 %163, label %410, label %164

164:                                              ; preds = %157
  %165 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %166 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %167 = bitcast %"class.std::__1::basic_string"* %166 to i8*
  %168 = bitcast %"class.std::__1::basic_string"* %166 to i8**
  %169 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %170 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %171 = bitcast %"class.std::__1::basic_string"* %166 to i16*
  %172 = bitcast %"class.std::__1::basic_string"* %166 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %172, i64 0, i32 1, i32 1
  %174 = bitcast %"class.base::Time"* %3 to i8*
  %175 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %3, i64 0, i32 0, i32 0
  %176 = bitcast %"class.base::FilePath"* %4 to i8*
  %177 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %166, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %178

178:                                              ; preds = %407, %164
  %179 = phi %"class.mojo::StructPtr.95"* [ %160, %164 ], [ %408, %407 ]
  %180 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %179, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"class.blink::mojom::Element"*, %"class.blink::mojom::Element"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::mojom::Element", %"class.blink::mojom::Element"* %181, i64 0, i32 0
  %183 = load i32, i32* %182, align 8
  switch i32 %183, label %407 [
    i32 1, label %184
    i32 2, label %197
  ]

184:                                              ; preds = %178
  %185 = getelementptr inbounds %"class.blink::mojom::Element", %"class.blink::mojom::Element"* %181, i64 0, i32 1
  %186 = bitcast %"union.blink::mojom::Element::Union_"* %185 to %"class.std::__1::vector.4"**
  %187 = load %"class.std::__1::vector.4"*, %"class.std::__1::vector.4"** %186, align 8
  %188 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %187, i64 0, i32 0, i32 0
  %189 = load i8*, i8** %188, align 8
  %190 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %187, i64 0, i32 0, i32 1
  %191 = bitcast i8** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = ptrtoint i8* %189 to i64
  %194 = sub i64 %192, %193
  %195 = trunc i64 %194 to i32
  %196 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %148, align 8
  call void @_ZN7network19ResourceRequestBody11AppendBytesEPKci(%"class.network::ResourceRequestBody"* %196, i8* %189, i32 %195) #13
  br label %407

197:                                              ; preds = %178
  %198 = getelementptr inbounds %"class.blink::mojom::Element", %"class.blink::mojom::Element"* %181, i64 0, i32 1
  %199 = bitcast %"union.blink::mojom::Element::Union_"* %198 to %"class.mojo::StructPtr.99"**
  %200 = load %"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.99"** %199, align 8
  %201 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %200, i64 0, i32 0, i32 0, i32 0, i32 0
  %202 = load %"class.blink::mojom::File"*, %"class.blink::mojom::File"** %201, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %165) #13
  store i8 1, i8* %165, align 8
  %203 = bitcast %"class.blink::mojom::File"* %202 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %203, i64 0, i32 1, i32 1
  %205 = load i8, i8* %204, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %209, label %207

207:                                              ; preds = %197
  %208 = bitcast %"class.blink::mojom::File"* %202 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %208, i64 24, i1 false) #13
  br label %379

209:                                              ; preds = %197
  %210 = getelementptr inbounds %"class.blink::mojom::File", %"class.blink::mojom::File"* %202, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load i16*, i16** %210, align 8
  %212 = getelementptr inbounds %"class.blink::mojom::File", %"class.blink::mojom::File"* %202, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %213 = load i64, i64* %212, align 8
  %214 = icmp ult i64 %213, 11
  br i1 %214, label %215, label %217

215:                                              ; preds = %209
  %216 = trunc i64 %213 to i8
  store i8 %216, i8* %173, align 1
  br label %231

217:                                              ; preds = %209
  %218 = icmp ugt i64 %213, 9223372036854775791
  br i1 %218, label %219, label %221

219:                                              ; preds = %217
  %220 = bitcast %"class.std::__1::basic_string"* %166 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %220) #15
  unreachable

221:                                              ; preds = %217
  %222 = add nuw nsw i64 %213, 8
  %223 = and i64 %222, -8
  %224 = icmp slt i64 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %221
  call void @abort() #15
  unreachable

226:                                              ; preds = %221
  %227 = shl i64 %223, 1
  %228 = call i8* @_Znwm(i64 %227) #14
  %229 = bitcast i8* %228 to i16*
  store i8* %228, i8** %168, align 8
  %230 = or i64 %223, -9223372036854775808
  store i64 %230, i64* %169, align 8
  store i64 %213, i64* %170, align 8
  br label %231

231:                                              ; preds = %226, %215
  %232 = phi i16* [ %171, %215 ], [ %229, %226 ]
  %233 = add nuw nsw i64 %213, 1
  %234 = add i64 %213, 1
  %235 = icmp ult i64 %234, 16
  br i1 %235, label %326, label %236

236:                                              ; preds = %231
  %237 = getelementptr i16, i16* %232, i64 1
  %238 = getelementptr i16, i16* %237, i64 %213
  %239 = getelementptr i16, i16* %211, i64 1
  %240 = getelementptr i16, i16* %239, i64 %213
  %241 = icmp ult i16* %232, %240
  %242 = icmp ult i16* %211, %238
  %243 = and i1 %241, %242
  br i1 %243, label %326, label %244

244:                                              ; preds = %236
  %245 = and i64 %234, -16
  %246 = sub i64 %233, %245
  %247 = getelementptr i16, i16* %211, i64 %245
  %248 = getelementptr i16, i16* %232, i64 %245
  %249 = add i64 %245, -16
  %250 = lshr exact i64 %249, 4
  %251 = add nuw nsw i64 %250, 1
  %252 = and i64 %251, 3
  %253 = icmp ult i64 %249, 48
  br i1 %253, label %305, label %254

254:                                              ; preds = %244
  %255 = sub nsw i64 %251, %252
  br label %256

256:                                              ; preds = %256, %254
  %257 = phi i64 [ 0, %254 ], [ %302, %256 ]
  %258 = phi i64 [ %255, %254 ], [ %303, %256 ]
  %259 = getelementptr i16, i16* %211, i64 %257
  %260 = getelementptr i16, i16* %232, i64 %257
  %261 = bitcast i16* %259 to <8 x i16>*
  %262 = load <8 x i16>, <8 x i16>* %261, align 2, !alias.scope !237
  %263 = getelementptr i16, i16* %259, i64 8
  %264 = bitcast i16* %263 to <8 x i16>*
  %265 = load <8 x i16>, <8 x i16>* %264, align 2, !alias.scope !237
  %266 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %262, <8 x i16>* %266, align 2, !alias.scope !240, !noalias !237
  %267 = getelementptr i16, i16* %260, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  store <8 x i16> %265, <8 x i16>* %268, align 2, !alias.scope !240, !noalias !237
  %269 = or i64 %257, 16
  %270 = getelementptr i16, i16* %211, i64 %269
  %271 = getelementptr i16, i16* %232, i64 %269
  %272 = bitcast i16* %270 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !237
  %274 = getelementptr i16, i16* %270, i64 8
  %275 = bitcast i16* %274 to <8 x i16>*
  %276 = load <8 x i16>, <8 x i16>* %275, align 2, !alias.scope !237
  %277 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %277, align 2, !alias.scope !240, !noalias !237
  %278 = getelementptr i16, i16* %271, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  store <8 x i16> %276, <8 x i16>* %279, align 2, !alias.scope !240, !noalias !237
  %280 = or i64 %257, 32
  %281 = getelementptr i16, i16* %211, i64 %280
  %282 = getelementptr i16, i16* %232, i64 %280
  %283 = bitcast i16* %281 to <8 x i16>*
  %284 = load <8 x i16>, <8 x i16>* %283, align 2, !alias.scope !237
  %285 = getelementptr i16, i16* %281, i64 8
  %286 = bitcast i16* %285 to <8 x i16>*
  %287 = load <8 x i16>, <8 x i16>* %286, align 2, !alias.scope !237
  %288 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %284, <8 x i16>* %288, align 2, !alias.scope !240, !noalias !237
  %289 = getelementptr i16, i16* %282, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  store <8 x i16> %287, <8 x i16>* %290, align 2, !alias.scope !240, !noalias !237
  %291 = or i64 %257, 48
  %292 = getelementptr i16, i16* %211, i64 %291
  %293 = getelementptr i16, i16* %232, i64 %291
  %294 = bitcast i16* %292 to <8 x i16>*
  %295 = load <8 x i16>, <8 x i16>* %294, align 2, !alias.scope !237
  %296 = getelementptr i16, i16* %292, i64 8
  %297 = bitcast i16* %296 to <8 x i16>*
  %298 = load <8 x i16>, <8 x i16>* %297, align 2, !alias.scope !237
  %299 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %295, <8 x i16>* %299, align 2, !alias.scope !240, !noalias !237
  %300 = getelementptr i16, i16* %293, i64 8
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %298, <8 x i16>* %301, align 2, !alias.scope !240, !noalias !237
  %302 = add i64 %257, 64
  %303 = add i64 %258, -4
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %305, label %256, !llvm.loop !242

305:                                              ; preds = %256, %244
  %306 = phi i64 [ 0, %244 ], [ %302, %256 ]
  %307 = icmp eq i64 %252, 0
  br i1 %307, label %324, label %308

308:                                              ; preds = %305, %308
  %309 = phi i64 [ %321, %308 ], [ %306, %305 ]
  %310 = phi i64 [ %322, %308 ], [ %252, %305 ]
  %311 = getelementptr i16, i16* %211, i64 %309
  %312 = getelementptr i16, i16* %232, i64 %309
  %313 = bitcast i16* %311 to <8 x i16>*
  %314 = load <8 x i16>, <8 x i16>* %313, align 2, !alias.scope !237
  %315 = getelementptr i16, i16* %311, i64 8
  %316 = bitcast i16* %315 to <8 x i16>*
  %317 = load <8 x i16>, <8 x i16>* %316, align 2, !alias.scope !237
  %318 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %314, <8 x i16>* %318, align 2, !alias.scope !240, !noalias !237
  %319 = getelementptr i16, i16* %312, i64 8
  %320 = bitcast i16* %319 to <8 x i16>*
  store <8 x i16> %317, <8 x i16>* %320, align 2, !alias.scope !240, !noalias !237
  %321 = add i64 %309, 16
  %322 = add i64 %310, -1
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %324, label %308, !llvm.loop !243

324:                                              ; preds = %308, %305
  %325 = icmp eq i64 %234, %245
  br i1 %325, label %379, label %326

326:                                              ; preds = %324, %236, %231
  %327 = phi i64 [ %233, %236 ], [ %233, %231 ], [ %246, %324 ]
  %328 = phi i16* [ %211, %236 ], [ %211, %231 ], [ %247, %324 ]
  %329 = phi i16* [ %232, %236 ], [ %232, %231 ], [ %248, %324 ]
  %330 = add i64 %327, -1
  %331 = and i64 %327, 7
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %344, label %333

333:                                              ; preds = %326, %333
  %334 = phi i64 [ %339, %333 ], [ %327, %326 ]
  %335 = phi i16* [ %341, %333 ], [ %328, %326 ]
  %336 = phi i16* [ %340, %333 ], [ %329, %326 ]
  %337 = phi i64 [ %342, %333 ], [ %331, %326 ]
  %338 = load i16, i16* %335, align 2
  store i16 %338, i16* %336, align 2
  %339 = add i64 %334, -1
  %340 = getelementptr inbounds i16, i16* %336, i64 1
  %341 = getelementptr inbounds i16, i16* %335, i64 1
  %342 = add i64 %337, -1
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %344, label %333, !llvm.loop !244

344:                                              ; preds = %333, %326
  %345 = phi i64 [ %327, %326 ], [ %339, %333 ]
  %346 = phi i16* [ %328, %326 ], [ %341, %333 ]
  %347 = phi i16* [ %329, %326 ], [ %340, %333 ]
  %348 = icmp ult i64 %330, 7
  br i1 %348, label %379, label %349

349:                                              ; preds = %344, %349
  %350 = phi i64 [ %375, %349 ], [ %345, %344 ]
  %351 = phi i16* [ %377, %349 ], [ %346, %344 ]
  %352 = phi i16* [ %376, %349 ], [ %347, %344 ]
  %353 = load i16, i16* %351, align 2
  store i16 %353, i16* %352, align 2
  %354 = getelementptr inbounds i16, i16* %352, i64 1
  %355 = getelementptr inbounds i16, i16* %351, i64 1
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %352, i64 2
  %358 = getelementptr inbounds i16, i16* %351, i64 2
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %352, i64 3
  %361 = getelementptr inbounds i16, i16* %351, i64 3
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %352, i64 4
  %364 = getelementptr inbounds i16, i16* %351, i64 4
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = getelementptr inbounds i16, i16* %352, i64 5
  %367 = getelementptr inbounds i16, i16* %351, i64 5
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = getelementptr inbounds i16, i16* %352, i64 6
  %370 = getelementptr inbounds i16, i16* %351, i64 6
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %352, i64 7
  %373 = getelementptr inbounds i16, i16* %351, i64 7
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = add i64 %350, -8
  %376 = getelementptr inbounds i16, i16* %352, i64 8
  %377 = getelementptr inbounds i16, i16* %351, i64 8
  %378 = icmp eq i64 %375, 0
  br i1 %378, label %379, label %349, !llvm.loop !245

379:                                              ; preds = %344, %349, %324, %207
  %380 = getelementptr inbounds %"class.blink::mojom::File", %"class.blink::mojom::File"* %202, i64 0, i32 1
  %381 = load i64, i64* %380, align 8
  %382 = getelementptr inbounds %"class.blink::mojom::File", %"class.blink::mojom::File"* %202, i64 0, i32 2
  %383 = load i64, i64* %382, align 8
  %384 = getelementptr inbounds %"class.blink::mojom::File", %"class.blink::mojom::File"* %202, i64 0, i32 3, i32 0, i32 0
  %385 = load i64, i64* %384, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %174) #13
  store i64 %385, i64* %175, align 8
  %386 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %148, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %176) #13
  %387 = load i8, i8* %173, align 1
  %388 = icmp slt i8 %387, 0
  %389 = load i16*, i16** %177, align 8
  %390 = select i1 %388, i16* %389, i16* %171
  %391 = load i64, i64* %170, align 8
  %392 = zext i8 %387 to i64
  %393 = select i1 %388, i64 %391, i64 %392
  call void @_ZN4base8FilePath15FromUTF16UnsafeENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::FilePath"* nonnull sret %4, i16* %390, i64 %393) #13
  %394 = shl i64 %381, 32
  %395 = ashr exact i64 %394, 32
  %396 = shl i64 %383, 32
  %397 = ashr exact i64 %396, 32
  call void @_ZN7network19ResourceRequestBody15AppendFileRangeERKN4base8FilePathEmmRKNS1_4TimeE(%"class.network::ResourceRequestBody"* %386, %"class.base::FilePath"* nonnull dereferenceable(24) %4, i64 %395, i64 %397, %"class.base::Time"* nonnull dereferenceable(8) %3) #13
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %176) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %174) #13
  %398 = load i8, i8* %165, align 8, !range !2
  %399 = icmp eq i8 %398, 0
  br i1 %399, label %406, label %400

400:                                              ; preds = %379
  %401 = load i8, i8* %173, align 1
  %402 = icmp slt i8 %401, 0
  br i1 %402, label %403, label %405

403:                                              ; preds = %400
  %404 = load i8*, i8** %168, align 8
  call void @_ZdlPv(i8* %404) #14
  br label %405

405:                                              ; preds = %403, %400
  store i8 0, i8* %165, align 8
  br label %406

406:                                              ; preds = %405, %379
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %165) #13
  br label %407

407:                                              ; preds = %406, %184, %178
  %408 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %179, i64 1
  %409 = icmp eq %"class.mojo::StructPtr.95"* %408, %162
  br i1 %409, label %410, label %178

410:                                              ; preds = %407, %157
  %411 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %148, align 8
  %412 = getelementptr inbounds %"class.blink::mojom::RequestBody", %"class.blink::mojom::RequestBody"* %158, i64 0, i32 1
  %413 = load i64, i64* %412, align 8
  %414 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %411, i64 0, i32 3
  store i64 %413, i64* %414, align 8
  br label %427

415:                                              ; preds = %117
  %416 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 15, i32 1
  %417 = bitcast %class.scoped_refptr* %416 to i64*
  %418 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %416, i64 0, i32 0
  %419 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %418, align 8
  store i64 0, i64* %417, align 8
  %420 = icmp eq %"class.network::ResourceRequestBody"* %419, null
  br i1 %420, label %427, label %421

421:                                              ; preds = %415
  %422 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %419, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %423 = atomicrmw sub i32* %422, i32 1 acq_rel
  %424 = icmp eq i32 %423, 1
  br i1 %424, label %425, label %427

425:                                              ; preds = %421
  call void @_ZN7network19ResourceRequestBodyD1Ev(%"class.network::ResourceRequestBody"* nonnull %419) #13
  %426 = bitcast %"class.network::ResourceRequestBody"* %419 to i8*
  call void @_ZdlPv(i8* %426) #14
  br label %427

427:                                              ; preds = %425, %421, %415, %410, %130
  %428 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 13
  %429 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 19
  %430 = call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %429, %"class.absl::optional"* dereferenceable(32) %428)
  %431 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 14
  %432 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 20
  %433 = call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %432, %"class.absl::optional"* dereferenceable(32) %431)
  %434 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 15
  %435 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 21
  %436 = call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %435, %"class.absl::optional"* dereferenceable(32) %434)
  %437 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 22
  %438 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 11
  %439 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %0, i64 0, i32 11, i32 0, i32 1
  %440 = bitcast %"class.mojo::StructPtr.69"** %439 to i64*
  %441 = load i64, i64* %440, align 8
  %442 = bitcast %"class.std::__1::vector.127"* %438 to i64*
  %443 = load i64, i64* %442, align 8
  %444 = sub i64 %441, %443
  %445 = ashr exact i64 %444, 3
  %446 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 0, i32 22, i32 0, i32 1
  %447 = bitcast %"struct.blink::ExplodedFrameState"** %446 to i64*
  %448 = load i64, i64* %447, align 8
  %449 = bitcast %"class.std::__1::vector.47"* %437 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = sub i64 %448, %450
  %452 = ashr exact i64 %451, 9
  %453 = icmp ugt i64 %445, %452
  %454 = inttoptr i64 %450 to %"struct.blink::ExplodedFrameState"*
  %455 = inttoptr i64 %448 to %"struct.blink::ExplodedFrameState"*
  br i1 %453, label %456, label %458

456:                                              ; preds = %427
  %457 = sub nsw i64 %445, %452
  call void @_ZNSt3__16vectorIN5blink18ExplodedFrameStateENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.47"* %437, i64 %457) #13
  br label %468

458:                                              ; preds = %427
  %459 = icmp ult i64 %445, %452
  br i1 %459, label %460, label %468

460:                                              ; preds = %458
  %461 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %454, i64 %445
  %462 = icmp eq %"struct.blink::ExplodedFrameState"* %461, %455
  br i1 %462, label %467, label %463

463:                                              ; preds = %460, %463
  %464 = phi %"struct.blink::ExplodedFrameState"* [ %465, %463 ], [ %455, %460 ]
  %465 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %464, i64 -1
  call void @_ZN5blink18ExplodedFrameStateD2Ev(%"struct.blink::ExplodedFrameState"* %465) #13
  %466 = icmp eq %"struct.blink::ExplodedFrameState"* %465, %461
  br i1 %466, label %467, label %463

467:                                              ; preds = %463, %460
  store %"struct.blink::ExplodedFrameState"* %461, %"struct.blink::ExplodedFrameState"** %446, align 8
  br label %468

468:                                              ; preds = %456, %458, %467
  %469 = getelementptr inbounds %"class.std::__1::vector.127", %"class.std::__1::vector.127"* %438, i64 0, i32 0, i32 0
  %470 = load %"class.mojo::StructPtr.69"*, %"class.mojo::StructPtr.69"** %469, align 8
  %471 = load %"class.mojo::StructPtr.69"*, %"class.mojo::StructPtr.69"** %439, align 8
  %472 = icmp eq %"class.mojo::StructPtr.69"* %470, %471
  br i1 %472, label %475, label %473

473:                                              ; preds = %468
  %474 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %437, i64 0, i32 0, i32 0
  br label %476

475:                                              ; preds = %476, %468
  ret void

476:                                              ; preds = %473, %476
  %477 = phi i64 [ 0, %473 ], [ %481, %476 ]
  %478 = phi %"class.mojo::StructPtr.69"* [ %470, %473 ], [ %484, %476 ]
  %479 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %478, i64 0, i32 0, i32 0, i32 0, i32 0
  %480 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %479, align 8
  %481 = add nuw i64 %477, 1
  %482 = load %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"** %474, align 8
  %483 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %482, i64 %477
  call fastcc void @_ZN5blink12_GLOBAL__N_114ReadFrameStateEPNS_5mojom10FrameStateEPNS_18ExplodedFrameStateE(%"class.blink::mojom::FrameState"* %480, %"struct.blink::ExplodedFrameState"* %483)
  %484 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %478, i64 1
  %485 = icmp eq %"class.mojo::StructPtr.69"* %484, %471
  br i1 %485, label %475, label %476
}

declare zeroext i1 @_ZN4base14PickleIterator8ReadDataEPPKcPi(%"class.base::PickleIterator"*, i8**, i32*) local_unnamed_addr #7

declare void @_ZN4mojo7MessageC1Ev(%"class.mojo::Message"*) unnamed_addr #7

declare zeroext i1 @_ZN5blink5mojom9PageState8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4mojo7MessageD1Ev(%"class.mojo::Message"*) unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

declare void @_ZN4mojo8internal17ValidationContextC1EPKvmmmPNS_7MessageEPKciNS1_13ValidatorTypeE(%"class.mojo::internal::ValidationContext"*, i8*, i64, i64, i64, %"class.mojo::Message"*, i8*, i32, i32) unnamed_addr #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal17ValidationContextD1Ev(%"class.mojo::internal::ValidationContext"*) unnamed_addr #3

declare zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom17PageStateDataViewENS_9StructPtrINS2_9PageStateEEEE4ReadES3_PS6_(%"class.blink::mojom::internal::PageState_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink5mojom9PageStateD1Ev(%"class.blink::mojom::PageState"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE22__construct_one_at_endIJRKS9_EEEvDpOT_(%"class.std::__1::vector.40"*, %"class.absl::optional"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.absl::optional"*, %"class.absl::optional"** %3, align 8
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #13
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %195, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #13
  br label %194

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i16*, i16** %20, align 8
  %22 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %23, 11
  br i1 %24, label %25, label %30

25:                                               ; preds = %19
  %26 = bitcast %"class.std::__1::basic_string"* %11 to i16*
  %27 = trunc i64 %23 to i8
  %28 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %28, i64 0, i32 1, i32 1
  store i8 %27, i8* %29, align 1
  br label %47

30:                                               ; preds = %19
  %31 = icmp ugt i64 %23, 9223372036854775791
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %33) #15
  unreachable

34:                                               ; preds = %30
  %35 = add nuw nsw i64 %23, 8
  %36 = and i64 %35, -8
  %37 = icmp slt i64 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %34
  tail call void @abort() #15
  unreachable

39:                                               ; preds = %34
  %40 = shl i64 %36, 1
  %41 = tail call i8* @_Znwm(i64 %40) #14
  %42 = bitcast i8* %41 to i16*
  %43 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  store i8* %41, i8** %43, align 8
  %44 = or i64 %36, -9223372036854775808
  %45 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %23, i64* %46, align 8
  br label %47

47:                                               ; preds = %39, %25
  %48 = phi i16* [ %26, %25 ], [ %42, %39 ]
  %49 = add nuw nsw i64 %23, 1
  %50 = add i64 %23, 1
  %51 = icmp ult i64 %50, 16
  br i1 %51, label %141, label %52

52:                                               ; preds = %47
  %53 = add i64 %23, 1
  %54 = getelementptr i16, i16* %48, i64 %53
  %55 = getelementptr i16, i16* %21, i64 %53
  %56 = icmp ult i16* %48, %55
  %57 = icmp ult i16* %21, %54
  %58 = and i1 %56, %57
  br i1 %58, label %141, label %59

59:                                               ; preds = %52
  %60 = and i64 %50, -16
  %61 = sub i64 %49, %60
  %62 = getelementptr i16, i16* %21, i64 %60
  %63 = getelementptr i16, i16* %48, i64 %60
  %64 = add i64 %60, -16
  %65 = lshr exact i64 %64, 4
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 48
  br i1 %68, label %120, label %69

69:                                               ; preds = %59
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr i16, i16* %21, i64 %72
  %75 = getelementptr i16, i16* %48, i64 %72
  %76 = bitcast i16* %74 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !246
  %78 = getelementptr i16, i16* %74, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !246
  %81 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %81, align 2, !alias.scope !249, !noalias !246
  %82 = getelementptr i16, i16* %75, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %83, align 2, !alias.scope !249, !noalias !246
  %84 = or i64 %72, 16
  %85 = getelementptr i16, i16* %21, i64 %84
  %86 = getelementptr i16, i16* %48, i64 %84
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !246
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !246
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !249, !noalias !246
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !249, !noalias !246
  %95 = or i64 %72, 32
  %96 = getelementptr i16, i16* %21, i64 %95
  %97 = getelementptr i16, i16* %48, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !246
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !246
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !249, !noalias !246
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !249, !noalias !246
  %106 = or i64 %72, 48
  %107 = getelementptr i16, i16* %21, i64 %106
  %108 = getelementptr i16, i16* %48, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !246
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !246
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !249, !noalias !246
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !249, !noalias !246
  %117 = add i64 %72, 64
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !251

120:                                              ; preds = %71, %59
  %121 = phi i64 [ 0, %59 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr i16, i16* %21, i64 %124
  %127 = getelementptr i16, i16* %48, i64 %124
  %128 = bitcast i16* %126 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !246
  %130 = getelementptr i16, i16* %126, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !246
  %133 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %133, align 2, !alias.scope !249, !noalias !246
  %134 = getelementptr i16, i16* %127, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %135, align 2, !alias.scope !249, !noalias !246
  %136 = add i64 %124, 16
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !252

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %50, %60
  br i1 %140, label %194, label %141

141:                                              ; preds = %139, %52, %47
  %142 = phi i64 [ %49, %52 ], [ %49, %47 ], [ %61, %139 ]
  %143 = phi i16* [ %21, %52 ], [ %21, %47 ], [ %62, %139 ]
  %144 = phi i16* [ %48, %52 ], [ %48, %47 ], [ %63, %139 ]
  %145 = add i64 %142, -1
  %146 = and i64 %142, 7
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %159, label %148

148:                                              ; preds = %141, %148
  %149 = phi i64 [ %154, %148 ], [ %142, %141 ]
  %150 = phi i16* [ %156, %148 ], [ %143, %141 ]
  %151 = phi i16* [ %155, %148 ], [ %144, %141 ]
  %152 = phi i64 [ %157, %148 ], [ %146, %141 ]
  %153 = load i16, i16* %150, align 2
  store i16 %153, i16* %151, align 2
  %154 = add i64 %149, -1
  %155 = getelementptr inbounds i16, i16* %151, i64 1
  %156 = getelementptr inbounds i16, i16* %150, i64 1
  %157 = add i64 %152, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %148, !llvm.loop !253

159:                                              ; preds = %148, %141
  %160 = phi i64 [ %142, %141 ], [ %154, %148 ]
  %161 = phi i16* [ %143, %141 ], [ %156, %148 ]
  %162 = phi i16* [ %144, %141 ], [ %155, %148 ]
  %163 = icmp ult i64 %145, 7
  br i1 %163, label %194, label %164

164:                                              ; preds = %159, %164
  %165 = phi i64 [ %190, %164 ], [ %160, %159 ]
  %166 = phi i16* [ %192, %164 ], [ %161, %159 ]
  %167 = phi i16* [ %191, %164 ], [ %162, %159 ]
  %168 = load i16, i16* %166, align 2
  store i16 %168, i16* %167, align 2
  %169 = getelementptr inbounds i16, i16* %167, i64 1
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %167, i64 2
  %173 = getelementptr inbounds i16, i16* %166, i64 2
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %167, i64 3
  %176 = getelementptr inbounds i16, i16* %166, i64 3
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %167, i64 4
  %179 = getelementptr inbounds i16, i16* %166, i64 4
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %167, i64 5
  %182 = getelementptr inbounds i16, i16* %166, i64 5
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %167, i64 6
  %185 = getelementptr inbounds i16, i16* %166, i64 6
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %167, i64 7
  %188 = getelementptr inbounds i16, i16* %166, i64 7
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = add i64 %165, -8
  %191 = getelementptr inbounds i16, i16* %167, i64 8
  %192 = getelementptr inbounds i16, i16* %166, i64 8
  %193 = icmp eq i64 %190, 0
  br i1 %193, label %194, label %164, !llvm.loop !254

194:                                              ; preds = %159, %164, %139, %16
  store i8 1, i8* %5, align 8
  br label %195

195:                                              ; preds = %2, %194
  %196 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 1
  %197 = ptrtoint %"class.absl::optional"* %196 to i64
  %198 = bitcast %"class.absl::optional"** %3 to i64*
  store i64 %197, i64* %198, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE21__push_back_slow_pathIRKS9_EEvOT_(%"class.std::__1::vector.40"*, %"class.absl::optional"* dereferenceable(32)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.absl::optional"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.40"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.40"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.absl::optional"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.absl::optional"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.absl::optional"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %36, i64 %9
  %38 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %36, i64 %35
  %39 = ptrtoint %"class.absl::optional"* %38 to i64
  %40 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 32, i1 false) #13
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %230, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %36, i64 %9, i32 0, i32 0, i32 0, i32 1, i32 0
  %47 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %47, i64 0, i32 1, i32 1
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %44
  %52 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #13
  br label %229

54:                                               ; preds = %44
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i16*, i16** %55, align 8
  %57 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = icmp ult i64 %58, 11
  br i1 %59, label %60, label %65

60:                                               ; preds = %54
  %61 = bitcast %"class.std::__1::basic_string"* %46 to i16*
  %62 = trunc i64 %58 to i8
  %63 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  store i8 %62, i8* %64, align 1
  br label %82

65:                                               ; preds = %54
  %66 = icmp ugt i64 %58, 9223372036854775791
  br i1 %66, label %67, label %69

67:                                               ; preds = %65
  %68 = bitcast %"class.std::__1::basic_string"* %46 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %68) #15
  unreachable

69:                                               ; preds = %65
  %70 = add nuw nsw i64 %58, 8
  %71 = and i64 %70, -8
  %72 = icmp slt i64 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %69
  tail call void @abort() #15
  unreachable

74:                                               ; preds = %69
  %75 = shl i64 %71, 1
  %76 = tail call i8* @_Znwm(i64 %75) #14
  %77 = bitcast i8* %76 to i16*
  %78 = bitcast %"class.std::__1::basic_string"* %46 to i8**
  store i8* %76, i8** %78, align 8
  %79 = or i64 %71, -9223372036854775808
  %80 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %36, i64 %9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %36, i64 %9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %58, i64* %81, align 8
  br label %82

82:                                               ; preds = %74, %60
  %83 = phi i16* [ %61, %60 ], [ %77, %74 ]
  %84 = add nuw nsw i64 %58, 1
  %85 = add i64 %58, 1
  %86 = icmp ult i64 %85, 16
  br i1 %86, label %176, label %87

87:                                               ; preds = %82
  %88 = add i64 %58, 1
  %89 = getelementptr i16, i16* %83, i64 %88
  %90 = getelementptr i16, i16* %56, i64 %88
  %91 = icmp ult i16* %83, %90
  %92 = icmp ult i16* %56, %89
  %93 = and i1 %91, %92
  br i1 %93, label %176, label %94

94:                                               ; preds = %87
  %95 = and i64 %85, -16
  %96 = sub i64 %84, %95
  %97 = getelementptr i16, i16* %56, i64 %95
  %98 = getelementptr i16, i16* %83, i64 %95
  %99 = add i64 %95, -16
  %100 = lshr exact i64 %99, 4
  %101 = add nuw nsw i64 %100, 1
  %102 = and i64 %101, 3
  %103 = icmp ult i64 %99, 48
  br i1 %103, label %155, label %104

104:                                              ; preds = %94
  %105 = sub nsw i64 %101, %102
  br label %106

106:                                              ; preds = %106, %104
  %107 = phi i64 [ 0, %104 ], [ %152, %106 ]
  %108 = phi i64 [ %105, %104 ], [ %153, %106 ]
  %109 = getelementptr i16, i16* %56, i64 %107
  %110 = getelementptr i16, i16* %83, i64 %107
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !255
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !255
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !258, !noalias !255
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !258, !noalias !255
  %119 = or i64 %107, 16
  %120 = getelementptr i16, i16* %56, i64 %119
  %121 = getelementptr i16, i16* %83, i64 %119
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !255
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !255
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !258, !noalias !255
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !258, !noalias !255
  %130 = or i64 %107, 32
  %131 = getelementptr i16, i16* %56, i64 %130
  %132 = getelementptr i16, i16* %83, i64 %130
  %133 = bitcast i16* %131 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !255
  %135 = getelementptr i16, i16* %131, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !255
  %138 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !258, !noalias !255
  %139 = getelementptr i16, i16* %132, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !258, !noalias !255
  %141 = or i64 %107, 48
  %142 = getelementptr i16, i16* %56, i64 %141
  %143 = getelementptr i16, i16* %83, i64 %141
  %144 = bitcast i16* %142 to <8 x i16>*
  %145 = load <8 x i16>, <8 x i16>* %144, align 2, !alias.scope !255
  %146 = getelementptr i16, i16* %142, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  %148 = load <8 x i16>, <8 x i16>* %147, align 2, !alias.scope !255
  %149 = bitcast i16* %143 to <8 x i16>*
  store <8 x i16> %145, <8 x i16>* %149, align 2, !alias.scope !258, !noalias !255
  %150 = getelementptr i16, i16* %143, i64 8
  %151 = bitcast i16* %150 to <8 x i16>*
  store <8 x i16> %148, <8 x i16>* %151, align 2, !alias.scope !258, !noalias !255
  %152 = add i64 %107, 64
  %153 = add i64 %108, -4
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %106, !llvm.loop !260

155:                                              ; preds = %106, %94
  %156 = phi i64 [ 0, %94 ], [ %152, %106 ]
  %157 = icmp eq i64 %102, 0
  br i1 %157, label %174, label %158

158:                                              ; preds = %155, %158
  %159 = phi i64 [ %171, %158 ], [ %156, %155 ]
  %160 = phi i64 [ %172, %158 ], [ %102, %155 ]
  %161 = getelementptr i16, i16* %56, i64 %159
  %162 = getelementptr i16, i16* %83, i64 %159
  %163 = bitcast i16* %161 to <8 x i16>*
  %164 = load <8 x i16>, <8 x i16>* %163, align 2, !alias.scope !255
  %165 = getelementptr i16, i16* %161, i64 8
  %166 = bitcast i16* %165 to <8 x i16>*
  %167 = load <8 x i16>, <8 x i16>* %166, align 2, !alias.scope !255
  %168 = bitcast i16* %162 to <8 x i16>*
  store <8 x i16> %164, <8 x i16>* %168, align 2, !alias.scope !258, !noalias !255
  %169 = getelementptr i16, i16* %162, i64 8
  %170 = bitcast i16* %169 to <8 x i16>*
  store <8 x i16> %167, <8 x i16>* %170, align 2, !alias.scope !258, !noalias !255
  %171 = add i64 %159, 16
  %172 = add i64 %160, -1
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %158, !llvm.loop !261

174:                                              ; preds = %158, %155
  %175 = icmp eq i64 %85, %95
  br i1 %175, label %229, label %176

176:                                              ; preds = %174, %87, %82
  %177 = phi i64 [ %84, %87 ], [ %84, %82 ], [ %96, %174 ]
  %178 = phi i16* [ %56, %87 ], [ %56, %82 ], [ %97, %174 ]
  %179 = phi i16* [ %83, %87 ], [ %83, %82 ], [ %98, %174 ]
  %180 = add i64 %177, -1
  %181 = and i64 %177, 7
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %194, label %183

183:                                              ; preds = %176, %183
  %184 = phi i64 [ %189, %183 ], [ %177, %176 ]
  %185 = phi i16* [ %191, %183 ], [ %178, %176 ]
  %186 = phi i16* [ %190, %183 ], [ %179, %176 ]
  %187 = phi i64 [ %192, %183 ], [ %181, %176 ]
  %188 = load i16, i16* %185, align 2
  store i16 %188, i16* %186, align 2
  %189 = add i64 %184, -1
  %190 = getelementptr inbounds i16, i16* %186, i64 1
  %191 = getelementptr inbounds i16, i16* %185, i64 1
  %192 = add i64 %187, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %183, !llvm.loop !262

194:                                              ; preds = %183, %176
  %195 = phi i64 [ %177, %176 ], [ %189, %183 ]
  %196 = phi i16* [ %178, %176 ], [ %191, %183 ]
  %197 = phi i16* [ %179, %176 ], [ %190, %183 ]
  %198 = icmp ult i64 %180, 7
  br i1 %198, label %229, label %199

199:                                              ; preds = %194, %199
  %200 = phi i64 [ %225, %199 ], [ %195, %194 ]
  %201 = phi i16* [ %227, %199 ], [ %196, %194 ]
  %202 = phi i16* [ %226, %199 ], [ %197, %194 ]
  %203 = load i16, i16* %201, align 2
  store i16 %203, i16* %202, align 2
  %204 = getelementptr inbounds i16, i16* %202, i64 1
  %205 = getelementptr inbounds i16, i16* %201, i64 1
  %206 = load i16, i16* %205, align 2
  store i16 %206, i16* %204, align 2
  %207 = getelementptr inbounds i16, i16* %202, i64 2
  %208 = getelementptr inbounds i16, i16* %201, i64 2
  %209 = load i16, i16* %208, align 2
  store i16 %209, i16* %207, align 2
  %210 = getelementptr inbounds i16, i16* %202, i64 3
  %211 = getelementptr inbounds i16, i16* %201, i64 3
  %212 = load i16, i16* %211, align 2
  store i16 %212, i16* %210, align 2
  %213 = getelementptr inbounds i16, i16* %202, i64 4
  %214 = getelementptr inbounds i16, i16* %201, i64 4
  %215 = load i16, i16* %214, align 2
  store i16 %215, i16* %213, align 2
  %216 = getelementptr inbounds i16, i16* %202, i64 5
  %217 = getelementptr inbounds i16, i16* %201, i64 5
  %218 = load i16, i16* %217, align 2
  store i16 %218, i16* %216, align 2
  %219 = getelementptr inbounds i16, i16* %202, i64 6
  %220 = getelementptr inbounds i16, i16* %201, i64 6
  %221 = load i16, i16* %220, align 2
  store i16 %221, i16* %219, align 2
  %222 = getelementptr inbounds i16, i16* %202, i64 7
  %223 = getelementptr inbounds i16, i16* %201, i64 7
  %224 = load i16, i16* %223, align 2
  store i16 %224, i16* %222, align 2
  %225 = add i64 %200, -8
  %226 = getelementptr inbounds i16, i16* %202, i64 8
  %227 = getelementptr inbounds i16, i16* %201, i64 8
  %228 = icmp eq i64 %225, 0
  br i1 %228, label %229, label %199, !llvm.loop !263

229:                                              ; preds = %194, %199, %174, %51
  store i8 1, i8* %40, align 8
  br label %230

230:                                              ; preds = %34, %229
  %231 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 1
  %232 = ptrtoint %"class.absl::optional"* %231 to i64
  %233 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 0
  %234 = load %"class.absl::optional"*, %"class.absl::optional"** %233, align 8
  %235 = load %"class.absl::optional"*, %"class.absl::optional"** %3, align 8
  %236 = icmp eq %"class.absl::optional"* %235, %234
  br i1 %236, label %262, label %237

237:                                              ; preds = %230
  %238 = ptrtoint %"class.absl::optional"* %234 to i64
  %239 = getelementptr %"class.absl::optional", %"class.absl::optional"* %235, i64 -1, i32 0, i32 0, i32 0, i32 0
  %240 = ptrtoint i8* %239 to i64
  %241 = sub i64 %240, %238
  %242 = and i64 %241, 32
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %244, label %257

244:                                              ; preds = %237
  %245 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %235, i64 -1
  %246 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 -1, i32 0, i32 0, i32 0, i32 0
  %247 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %245, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %246, i8 0, i64 32, i1 false) #13
  %248 = load i8, i8* %247, align 8, !range !2
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %255, label %250

250:                                              ; preds = %244
  %251 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %235, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %252 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %253 = bitcast %"class.std::__1::basic_string"* %252 to i8*
  %254 = bitcast %"class.std::__1::basic_string"* %251 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %253, i8* align 8 %254, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %254, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %246, align 8
  br label %255

255:                                              ; preds = %250, %244
  %256 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 -1
  br label %257

257:                                              ; preds = %255, %237
  %258 = phi %"class.absl::optional"* [ undef, %237 ], [ %256, %255 ]
  %259 = phi %"class.absl::optional"* [ %37, %237 ], [ %256, %255 ]
  %260 = phi %"class.absl::optional"* [ %235, %237 ], [ %245, %255 ]
  %261 = icmp ult i64 %241, 32
  br i1 %261, label %282, label %264

262:                                              ; preds = %230
  %263 = ptrtoint %"class.absl::optional"* %37 to i64
  store i64 %263, i64* %6, align 8
  store i64 %232, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  br label %306

264:                                              ; preds = %257, %317
  %265 = phi %"class.absl::optional"* [ %318, %317 ], [ %259, %257 ]
  %266 = phi %"class.absl::optional"* [ %277, %317 ], [ %260, %257 ]
  %267 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %265, i64 -1, i32 0, i32 0, i32 0, i32 0
  %268 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %266, i64 -1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %267, i8 0, i64 32, i1 false) #13
  %269 = load i8, i8* %268, align 8, !range !2
  %270 = icmp eq i8 %269, 0
  br i1 %270, label %276, label %271

271:                                              ; preds = %264
  %272 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %266, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %273 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %265, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %274 = bitcast %"class.std::__1::basic_string"* %273 to i8*
  %275 = bitcast %"class.std::__1::basic_string"* %272 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %274, i8* align 8 %275, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %275, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %267, align 8
  br label %276

276:                                              ; preds = %271, %264
  %277 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %266, i64 -2
  %278 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %265, i64 -2, i32 0, i32 0, i32 0, i32 0
  %279 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %277, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %278, i8 0, i64 32, i1 false) #13
  %280 = load i8, i8* %279, align 8, !range !2
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %317, label %312

282:                                              ; preds = %317, %257
  %283 = phi %"class.absl::optional"* [ %258, %257 ], [ %318, %317 ]
  %284 = load %"class.absl::optional"*, %"class.absl::optional"** %233, align 8
  %285 = load %"class.absl::optional"*, %"class.absl::optional"** %3, align 8
  %286 = ptrtoint %"class.absl::optional"* %283 to i64
  store i64 %286, i64* %6, align 8
  store i64 %232, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %287 = icmp eq %"class.absl::optional"* %285, %284
  br i1 %287, label %306, label %288

288:                                              ; preds = %282, %304
  %289 = phi %"class.absl::optional"* [ %290, %304 ], [ %285, %282 ]
  %290 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %289, i64 -1
  %291 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %290, i64 0, i32 0, i32 0, i32 0, i32 0
  %292 = load i8, i8* %291, align 8, !range !2
  %293 = icmp eq i8 %292, 0
  br i1 %293, label %304, label %294

294:                                              ; preds = %288
  %295 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %289, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %296 = bitcast %"class.std::__1::basic_string"* %295 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %297 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %296, i64 0, i32 1, i32 1
  %298 = load i8, i8* %297, align 1
  %299 = icmp slt i8 %298, 0
  br i1 %299, label %300, label %303

300:                                              ; preds = %294
  %301 = bitcast %"class.std::__1::basic_string"* %295 to i8**
  %302 = load i8*, i8** %301, align 8
  tail call void @_ZdlPv(i8* %302) #14
  br label %303

303:                                              ; preds = %300, %294
  store i8 0, i8* %291, align 8
  br label %304

304:                                              ; preds = %303, %288
  %305 = icmp eq %"class.absl::optional"* %290, %284
  br i1 %305, label %306, label %288

306:                                              ; preds = %304, %262, %282
  %307 = phi %"class.absl::optional"* [ %234, %262 ], [ %284, %282 ], [ %284, %304 ]
  %308 = icmp eq %"class.absl::optional"* %307, null
  br i1 %308, label %311, label %309

309:                                              ; preds = %306
  %310 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %307, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %310) #14
  br label %311

311:                                              ; preds = %306, %309
  ret void

312:                                              ; preds = %276
  %313 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %266, i64 -2, i32 0, i32 0, i32 0, i32 1, i32 0
  %314 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %265, i64 -2, i32 0, i32 0, i32 0, i32 1, i32 0
  %315 = bitcast %"class.std::__1::basic_string"* %314 to i8*
  %316 = bitcast %"class.std::__1::basic_string"* %313 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %315, i8* align 8 %316, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %316, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %278, align 8
  br label %317

317:                                              ; preds = %312, %276
  %318 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %265, i64 -2
  %319 = icmp eq %"class.absl::optional"* %277, %234
  br i1 %319, label %282, label %264
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare void @_ZN7network19ResourceRequestBodyC1Ev(%"class.network::ResourceRequestBody"*) unnamed_addr #7

declare void @_ZN7network19ResourceRequestBody11AppendBytesEPKci(%"class.network::ResourceRequestBody"*, i8*, i32) local_unnamed_addr #7

declare void @_ZN7network19ResourceRequestBody15AppendFileRangeERKN4base8FilePathEmmRKNS1_4TimeE(%"class.network::ResourceRequestBody"*, %"class.base::FilePath"* dereferenceable(24), i64, i64, %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #7

declare void @_ZN4base8FilePath15FromUTF16UnsafeENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::FilePath"* sret, i16*, i64) local_unnamed_addr #7

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink18ExplodedFrameStateENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.47"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.blink::ExplodedFrameState"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.blink::ExplodedFrameState"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 9
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %51, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.blink::ExplodedFrameState"*
  %14 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %49, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %"struct.blink::ExplodedFrameState"* %14 to i64
  br label %49

18:                                               ; preds = %12, %18
  %19 = phi %"struct.blink::ExplodedFrameState"* [ %47, %18 ], [ %13, %12 ]
  %20 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %19, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %19, i64 0, i32 7
  %27 = bitcast %union.anon* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 25, i1 false) #13
  %28 = bitcast %union.anon* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 25, i1 false) #13
  %29 = bitcast %union.anon.34* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 81, i1 false) #13
  %30 = bitcast %union.anon* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 25, i1 false) #13
  %31 = bitcast %union.anon* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 52, i1 false) #13
  store i8 1, i8* %26, align 4
  %32 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %19, i64 0, i32 8, i32 0
  %33 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %19, i64 0, i32 13
  %34 = bitcast float* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %34, i8 0, i64 40, i1 false) #13
  store i32 1, i32* %33, align 8
  %35 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %19, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %19, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast %union.anon* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 33, i1 false) #13
  %38 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %19, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %19, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %19, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %19, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %19, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast %union.anon* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 41, i1 false) #13
  %44 = bitcast %union.anon* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 25, i1 false) #13
  %45 = bitcast %union.anon* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 25, i1 false) #13
  %46 = bitcast %union.anon* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 48, i1 false) #13
  %47 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %19, i64 1
  %48 = icmp eq %"struct.blink::ExplodedFrameState"* %47, %14
  br i1 %48, label %16, label %18

49:                                               ; preds = %12, %16
  %50 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %50, i64* %7, align 8
  br label %170

51:                                               ; preds = %2
  %52 = bitcast %"class.std::__1::vector.47"* %0 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %8, %53
  %55 = ashr exact i64 %54, 9
  %56 = add i64 %55, %1
  %57 = icmp ugt i64 %56, 36028797018963967
  br i1 %57, label %58, label %60

58:                                               ; preds = %51
  %59 = bitcast %"class.std::__1::vector.47"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %59) #15
  unreachable

60:                                               ; preds = %51
  %61 = sub i64 %5, %53
  %62 = ashr exact i64 %61, 9
  %63 = icmp ult i64 %62, 18014398509481983
  br i1 %63, label %64, label %72

64:                                               ; preds = %60
  %65 = ashr exact i64 %61, 8
  %66 = icmp ult i64 %65, %56
  %67 = select i1 %66, i64 %56, i64 %65
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %64
  %70 = icmp ugt i64 %67, 36028797018963967
  br i1 %70, label %71, label %72

71:                                               ; preds = %69
  tail call void @abort() #15
  unreachable

72:                                               ; preds = %60, %69
  %73 = phi i64 [ %67, %69 ], [ 36028797018963967, %60 ]
  %74 = shl i64 %73, 9
  %75 = tail call i8* @_Znwm(i64 %74) #14
  %76 = bitcast i8* %75 to %"struct.blink::ExplodedFrameState"*
  br label %77

77:                                               ; preds = %64, %72
  %78 = phi i64 [ %73, %72 ], [ 0, %64 ]
  %79 = phi %"struct.blink::ExplodedFrameState"* [ %76, %72 ], [ null, %64 ]
  %80 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %79, i64 %55
  %81 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %79, i64 %78
  %82 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %80, i64 %1
  br label %83

83:                                               ; preds = %77, %83
  %84 = phi %"struct.blink::ExplodedFrameState"* [ %112, %83 ], [ %80, %77 ]
  %85 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %85, align 8
  %86 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %84, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %89 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %84, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %90 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %84, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %91 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %84, i64 0, i32 7
  %92 = bitcast %union.anon* %86 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 25, i1 false) #13
  %93 = bitcast %union.anon* %87 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 25, i1 false) #13
  %94 = bitcast %union.anon.34* %88 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 81, i1 false) #13
  %95 = bitcast %union.anon* %89 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 25, i1 false) #13
  %96 = bitcast %union.anon* %90 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 52, i1 false) #13
  store i8 1, i8* %91, align 4
  %97 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %84, i64 0, i32 8, i32 0
  %98 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %84, i64 0, i32 13
  %99 = bitcast float* %97 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %99, i8 0, i64 40, i1 false) #13
  store i32 1, i32* %98, align 8
  %100 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %84, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %100, align 8
  %101 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %84, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = bitcast %union.anon* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 33, i1 false) #13
  %103 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %84, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %103, align 8
  %104 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %84, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1
  %105 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %84, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %106 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %84, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1
  %107 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %84, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1
  %108 = bitcast %union.anon* %104 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 41, i1 false) #13
  %109 = bitcast %union.anon* %105 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 25, i1 false) #13
  %110 = bitcast %union.anon* %106 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 25, i1 false) #13
  %111 = bitcast %union.anon* %107 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 48, i1 false) #13
  %112 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %84, i64 1
  %113 = icmp eq %"struct.blink::ExplodedFrameState"* %82, %112
  br i1 %113, label %114, label %83

114:                                              ; preds = %83
  %115 = ptrtoint %"struct.blink::ExplodedFrameState"* %81 to i64
  %116 = ptrtoint %"struct.blink::ExplodedFrameState"* %82 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %0, i64 0, i32 0, i32 0
  %118 = load %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"** %117, align 8
  %119 = load %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"** %6, align 8
  %120 = icmp eq %"struct.blink::ExplodedFrameState"* %119, %118
  br i1 %120, label %121, label %123

121:                                              ; preds = %114
  %122 = ptrtoint %"struct.blink::ExplodedFrameState"* %80 to i64
  store i64 %122, i64* %52, align 8
  store i64 %116, i64* %7, align 8
  store i64 %115, i64* %4, align 8
  br label %165

123:                                              ; preds = %114, %123
  %124 = phi %"struct.blink::ExplodedFrameState"* [ %126, %123 ], [ %80, %114 ]
  %125 = phi %"struct.blink::ExplodedFrameState"* [ %127, %123 ], [ %119, %114 ]
  %126 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %124, i64 -1
  %127 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %125, i64 -1
  %128 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %126, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %128, align 8
  %129 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %124, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 1
  %130 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %124, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 1
  %131 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %124, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 1
  %132 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %124, i64 -1, i32 3, i32 0, i32 0, i32 0, i32 1
  %133 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %124, i64 -1, i32 4, i32 0, i32 0, i32 0, i32 1
  %134 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %124, i64 -1, i32 7
  %135 = bitcast %union.anon* %129 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 25, i1 false) #13
  %136 = bitcast %union.anon* %130 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 25, i1 false) #13
  %137 = bitcast %union.anon.34* %131 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 81, i1 false) #13
  %138 = bitcast %union.anon* %132 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %138, i8 0, i64 25, i1 false) #13
  %139 = bitcast %union.anon* %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 52, i1 false) #13
  store i8 1, i8* %134, align 4
  %140 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %124, i64 -1, i32 8, i32 0
  %141 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %124, i64 -1, i32 13
  %142 = bitcast float* %140 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %142, i8 0, i64 40, i1 false) #13
  store i32 1, i32* %141, align 8
  %143 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %124, i64 -1, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %143, align 8
  %144 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %124, i64 -1, i32 15, i32 0, i32 0, i32 0, i32 0, i32 1
  %145 = bitcast %union.anon* %144 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 33, i1 false) #13
  %146 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %124, i64 -1, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %146, align 8
  %147 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %124, i64 -1, i32 16, i32 0, i32 0, i32 0, i32 1
  %148 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %124, i64 -1, i32 19, i32 0, i32 0, i32 0, i32 1
  %149 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %124, i64 -1, i32 20, i32 0, i32 0, i32 0, i32 1
  %150 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %124, i64 -1, i32 21, i32 0, i32 0, i32 0, i32 1
  %151 = bitcast %union.anon* %147 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %151, i8 0, i64 41, i1 false) #13
  %152 = bitcast %union.anon* %148 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 25, i1 false) #13
  %153 = bitcast %union.anon* %149 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 25, i1 false) #13
  %154 = bitcast %union.anon* %150 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 48, i1 false) #13
  tail call void @_ZN5blink18ExplodedFrameState6assignERKS0_(%"struct.blink::ExplodedFrameState"* %126, %"struct.blink::ExplodedFrameState"* dereferenceable(512) %127) #13
  %155 = icmp eq %"struct.blink::ExplodedFrameState"* %127, %118
  br i1 %155, label %156, label %123

156:                                              ; preds = %123
  %157 = load %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"** %117, align 8
  %158 = load %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"** %6, align 8
  %159 = ptrtoint %"struct.blink::ExplodedFrameState"* %126 to i64
  store i64 %159, i64* %52, align 8
  store i64 %116, i64* %7, align 8
  store i64 %115, i64* %4, align 8
  %160 = icmp eq %"struct.blink::ExplodedFrameState"* %158, %157
  br i1 %160, label %165, label %161

161:                                              ; preds = %156, %161
  %162 = phi %"struct.blink::ExplodedFrameState"* [ %163, %161 ], [ %158, %156 ]
  %163 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %162, i64 -1
  tail call void @_ZN5blink18ExplodedFrameStateD2Ev(%"struct.blink::ExplodedFrameState"* %163) #13
  %164 = icmp eq %"struct.blink::ExplodedFrameState"* %163, %157
  br i1 %164, label %165, label %161

165:                                              ; preds = %161, %121, %156
  %166 = phi %"struct.blink::ExplodedFrameState"* [ %118, %121 ], [ %157, %156 ], [ %157, %161 ]
  %167 = icmp eq %"struct.blink::ExplodedFrameState"* %166, null
  br i1 %167, label %170, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %166, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %169) #14
  br label %170

170:                                              ; preds = %168, %165, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE8__appendEm(%"class.std::__1::vector.40"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.absl::optional"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.absl::optional"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 5
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %67, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.absl::optional"*
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %65, label %16

16:                                               ; preds = %12
  %17 = shl nsw i64 %1, 5
  %18 = add i64 %17, -32
  %19 = lshr exact i64 %18, 5
  %20 = add nuw nsw i64 %19, 1
  %21 = and i64 %20, 7
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %32, label %23

23:                                               ; preds = %16, %23
  %24 = phi %"class.absl::optional"* [ %29, %23 ], [ %13, %16 ]
  %25 = phi i64 [ %30, %23 ], [ %21, %16 ]
  %26 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %26, align 8
  %27 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %24, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast %union.anon* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #13
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %24, i64 1
  %30 = add i64 %25, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %23, !llvm.loop !264

32:                                               ; preds = %23, %16
  %33 = phi %"class.absl::optional"* [ %13, %16 ], [ %29, %23 ]
  %34 = icmp ult i64 %18, 224
  br i1 %34, label %35, label %37

35:                                               ; preds = %37, %32
  %36 = ptrtoint %"class.absl::optional"* %14 to i64
  br label %65

37:                                               ; preds = %32, %37
  %38 = phi %"class.absl::optional"* [ %63, %37 ], [ %33, %32 ]
  %39 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %39, align 8
  %40 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 0, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast %union.anon* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #13
  %42 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 1, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast %union.anon* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #13
  %45 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %45, align 8
  %46 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 2, i32 0, i32 0, i32 0, i32 1
  %47 = bitcast %union.anon* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #13
  %48 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %48, align 8
  %49 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 3, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %union.anon* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #13
  %51 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %51, align 8
  %52 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 4, i32 0, i32 0, i32 0, i32 1
  %53 = bitcast %union.anon* %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #13
  %54 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %54, align 8
  %55 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 5, i32 0, i32 0, i32 0, i32 1
  %56 = bitcast %union.anon* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #13
  %57 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %57, align 8
  %58 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 6, i32 0, i32 0, i32 0, i32 1
  %59 = bitcast %union.anon* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #13
  %60 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 7, i32 0, i32 0, i32 0, i32 1
  %62 = bitcast %union.anon* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #13
  %63 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 8
  %64 = icmp eq %"class.absl::optional"* %63, %14
  br i1 %64, label %35, label %37

65:                                               ; preds = %12, %35
  %66 = phi i64 [ %36, %35 ], [ %8, %12 ]
  store i64 %66, i64* %7, align 8
  br label %226

67:                                               ; preds = %2
  %68 = bitcast %"class.std::__1::vector.40"* %0 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %8, %69
  %71 = ashr exact i64 %70, 5
  %72 = add i64 %71, %1
  %73 = icmp ugt i64 %72, 576460752303423487
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = bitcast %"class.std::__1::vector.40"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %75) #15
  unreachable

76:                                               ; preds = %67
  %77 = sub i64 %5, %69
  %78 = ashr exact i64 %77, 5
  %79 = icmp ult i64 %78, 288230376151711743
  br i1 %79, label %80, label %88

80:                                               ; preds = %76
  %81 = ashr exact i64 %77, 4
  %82 = icmp ult i64 %81, %72
  %83 = select i1 %82, i64 %72, i64 %81
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %93, label %85

85:                                               ; preds = %80
  %86 = icmp ugt i64 %83, 576460752303423487
  br i1 %86, label %87, label %88

87:                                               ; preds = %85
  tail call void @abort() #15
  unreachable

88:                                               ; preds = %76, %85
  %89 = phi i64 [ %83, %85 ], [ 576460752303423487, %76 ]
  %90 = shl i64 %89, 5
  %91 = tail call i8* @_Znwm(i64 %90) #14
  %92 = bitcast i8* %91 to %"class.absl::optional"*
  br label %93

93:                                               ; preds = %80, %88
  %94 = phi i64 [ %89, %88 ], [ 0, %80 ]
  %95 = phi %"class.absl::optional"* [ %92, %88 ], [ null, %80 ]
  %96 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %95, i64 %71
  %97 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %95, i64 %94
  %98 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %96, i64 %1
  %99 = shl nsw i64 %1, 5
  %100 = add i64 %99, -32
  %101 = lshr exact i64 %100, 5
  %102 = add nuw nsw i64 %101, 1
  %103 = and i64 %102, 7
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %114, label %105

105:                                              ; preds = %93, %105
  %106 = phi %"class.absl::optional"* [ %111, %105 ], [ %96, %93 ]
  %107 = phi i64 [ %112, %105 ], [ %103, %93 ]
  %108 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %106, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %108, align 8
  %109 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %106, i64 0, i32 0, i32 0, i32 0, i32 1
  %110 = bitcast %union.anon* %109 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 24, i1 false) #13
  %111 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %106, i64 1
  %112 = add i64 %107, -1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %105, !llvm.loop !265

114:                                              ; preds = %105, %93
  %115 = phi %"class.absl::optional"* [ %96, %93 ], [ %111, %105 ]
  %116 = icmp ult i64 %100, 224
  br i1 %116, label %145, label %117

117:                                              ; preds = %114, %117
  %118 = phi %"class.absl::optional"* [ %143, %117 ], [ %115, %114 ]
  %119 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %118, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %119, align 8
  %120 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %118, i64 0, i32 0, i32 0, i32 0, i32 1
  %121 = bitcast %union.anon* %120 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 24, i1 false) #13
  %122 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %118, i64 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %122, align 8
  %123 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %118, i64 1, i32 0, i32 0, i32 0, i32 1
  %124 = bitcast %union.anon* %123 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 24, i1 false) #13
  %125 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %118, i64 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %125, align 8
  %126 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %118, i64 2, i32 0, i32 0, i32 0, i32 1
  %127 = bitcast %union.anon* %126 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 24, i1 false) #13
  %128 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %118, i64 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %128, align 8
  %129 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %118, i64 3, i32 0, i32 0, i32 0, i32 1
  %130 = bitcast %union.anon* %129 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 24, i1 false) #13
  %131 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %118, i64 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %131, align 8
  %132 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %118, i64 4, i32 0, i32 0, i32 0, i32 1
  %133 = bitcast %union.anon* %132 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 24, i1 false) #13
  %134 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %118, i64 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %134, align 8
  %135 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %118, i64 5, i32 0, i32 0, i32 0, i32 1
  %136 = bitcast %union.anon* %135 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 24, i1 false) #13
  %137 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %118, i64 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %137, align 8
  %138 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %118, i64 6, i32 0, i32 0, i32 0, i32 1
  %139 = bitcast %union.anon* %138 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 24, i1 false) #13
  %140 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %118, i64 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %140, align 8
  %141 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %118, i64 7, i32 0, i32 0, i32 0, i32 1
  %142 = bitcast %union.anon* %141 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 24, i1 false) #13
  %143 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %118, i64 8
  %144 = icmp eq %"class.absl::optional"* %98, %143
  br i1 %144, label %145, label %117

145:                                              ; preds = %117, %114
  %146 = ptrtoint %"class.absl::optional"* %97 to i64
  %147 = ptrtoint %"class.absl::optional"* %98 to i64
  %148 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 0
  %149 = load %"class.absl::optional"*, %"class.absl::optional"** %148, align 8
  %150 = load %"class.absl::optional"*, %"class.absl::optional"** %6, align 8
  %151 = icmp eq %"class.absl::optional"* %150, %149
  br i1 %151, label %177, label %152

152:                                              ; preds = %145
  %153 = ptrtoint %"class.absl::optional"* %149 to i64
  %154 = getelementptr %"class.absl::optional", %"class.absl::optional"* %150, i64 -1, i32 0, i32 0, i32 0, i32 0
  %155 = ptrtoint i8* %154 to i64
  %156 = sub i64 %155, %153
  %157 = and i64 %156, 32
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %172

159:                                              ; preds = %152
  %160 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %150, i64 -1
  %161 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %96, i64 -1, i32 0, i32 0, i32 0, i32 0
  %162 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %160, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 0, i64 32, i1 false) #13
  %163 = load i8, i8* %162, align 8, !range !2
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %170, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %150, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %167 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %96, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %168 = bitcast %"class.std::__1::basic_string"* %167 to i8*
  %169 = bitcast %"class.std::__1::basic_string"* %166 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %169, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %169, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %161, align 8
  br label %170

170:                                              ; preds = %165, %159
  %171 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %96, i64 -1
  br label %172

172:                                              ; preds = %170, %152
  %173 = phi %"class.absl::optional"* [ undef, %152 ], [ %171, %170 ]
  %174 = phi %"class.absl::optional"* [ %96, %152 ], [ %171, %170 ]
  %175 = phi %"class.absl::optional"* [ %150, %152 ], [ %160, %170 ]
  %176 = icmp ult i64 %156, 32
  br i1 %176, label %197, label %179

177:                                              ; preds = %145
  %178 = ptrtoint %"class.absl::optional"* %96 to i64
  store i64 %178, i64* %68, align 8
  store i64 %147, i64* %7, align 8
  store i64 %146, i64* %4, align 8
  br label %221

179:                                              ; preds = %172, %232
  %180 = phi %"class.absl::optional"* [ %233, %232 ], [ %174, %172 ]
  %181 = phi %"class.absl::optional"* [ %192, %232 ], [ %175, %172 ]
  %182 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %180, i64 -1, i32 0, i32 0, i32 0, i32 0
  %183 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %181, i64 -1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %182, i8 0, i64 32, i1 false) #13
  %184 = load i8, i8* %183, align 8, !range !2
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %191, label %186

186:                                              ; preds = %179
  %187 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %181, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %188 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %180, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %189 = bitcast %"class.std::__1::basic_string"* %188 to i8*
  %190 = bitcast %"class.std::__1::basic_string"* %187 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* align 8 %190, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %190, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %182, align 8
  br label %191

191:                                              ; preds = %186, %179
  %192 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %181, i64 -2
  %193 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %180, i64 -2, i32 0, i32 0, i32 0, i32 0
  %194 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %192, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %193, i8 0, i64 32, i1 false) #13
  %195 = load i8, i8* %194, align 8, !range !2
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %232, label %227

197:                                              ; preds = %232, %172
  %198 = phi %"class.absl::optional"* [ %173, %172 ], [ %233, %232 ]
  %199 = load %"class.absl::optional"*, %"class.absl::optional"** %148, align 8
  %200 = load %"class.absl::optional"*, %"class.absl::optional"** %6, align 8
  %201 = ptrtoint %"class.absl::optional"* %198 to i64
  store i64 %201, i64* %68, align 8
  store i64 %147, i64* %7, align 8
  store i64 %146, i64* %4, align 8
  %202 = icmp eq %"class.absl::optional"* %200, %199
  br i1 %202, label %221, label %203

203:                                              ; preds = %197, %219
  %204 = phi %"class.absl::optional"* [ %205, %219 ], [ %200, %197 ]
  %205 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %204, i64 -1
  %206 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %205, i64 0, i32 0, i32 0, i32 0, i32 0
  %207 = load i8, i8* %206, align 8, !range !2
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %219, label %209

209:                                              ; preds = %203
  %210 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %204, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %211 = bitcast %"class.std::__1::basic_string"* %210 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %211, i64 0, i32 1, i32 1
  %213 = load i8, i8* %212, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %218

215:                                              ; preds = %209
  %216 = bitcast %"class.std::__1::basic_string"* %210 to i8**
  %217 = load i8*, i8** %216, align 8
  tail call void @_ZdlPv(i8* %217) #14
  br label %218

218:                                              ; preds = %215, %209
  store i8 0, i8* %206, align 8
  br label %219

219:                                              ; preds = %218, %203
  %220 = icmp eq %"class.absl::optional"* %205, %199
  br i1 %220, label %221, label %203

221:                                              ; preds = %219, %177, %197
  %222 = phi %"class.absl::optional"* [ %149, %177 ], [ %199, %197 ], [ %199, %219 ]
  %223 = icmp eq %"class.absl::optional"* %222, null
  br i1 %223, label %226, label %224

224:                                              ; preds = %221
  %225 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %222, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %225) #14
  br label %226

226:                                              ; preds = %224, %221, %65
  ret void

227:                                              ; preds = %191
  %228 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %181, i64 -2, i32 0, i32 0, i32 0, i32 1, i32 0
  %229 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %180, i64 -2, i32 0, i32 0, i32 0, i32 1, i32 0
  %230 = bitcast %"class.std::__1::basic_string"* %229 to i8*
  %231 = bitcast %"class.std::__1::basic_string"* %228 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %230, i8* align 8 %231, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %231, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %193, align 8
  br label %232

232:                                              ; preds = %227, %191
  %233 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %180, i64 -2
  %234 = icmp eq %"class.absl::optional"* %192, %149
  br i1 %234, label %197, label %179
}

declare zeroext i1 @_ZN4base14PickleIterator9ReadBytesEPPKci(%"class.base::PickleIterator"*, i8**, i32) local_unnamed_addr #7

declare void @_ZN5blink16UniqueNameHelper23UpdateLegacyNameFromV24ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorINS0_11ReplacementENS5_IS9_EEEE(%"class.std::__1::basic_string.15"* sret, %"class.std::__1::basic_string.15"*, %"class.std::__1::vector.57"*) local_unnamed_addr #7

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.15"* sret, i16*, i64) local_unnamed_addr #7

declare zeroext i1 @_ZN4base14PickleIterator8ReadBoolEPb(%"class.base::PickleIterator"*, i8*) local_unnamed_addr #7

declare zeroext i1 @_ZN4base14PickleIterator9ReadInt64EPl(%"class.base::PickleIterator"*, i64*) local_unnamed_addr #7

declare i64 @_ZN4base4Time11FromDoubleTEd(double) local_unnamed_addr #7

declare void @_ZNK4base8FilePath13AsUTF16UnsafeEv(%"class.std::__1::basic_string"* sret, %"class.base::FilePath"*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.40"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.absl::optional"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.40"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.40"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.absl::optional"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.absl::optional"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.absl::optional"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %36, i64 %9
  %38 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %36, i64 %35
  %39 = ptrtoint %"class.absl::optional"* %38 to i64
  %40 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %40, align 8
  %41 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %36, i64 %9, i32 0, i32 0, i32 0, i32 1, i32 0
  %42 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #13
  %44 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 1
  %45 = ptrtoint %"class.absl::optional"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.absl::optional"*, %"class.absl::optional"** %46, align 8
  %48 = load %"class.absl::optional"*, %"class.absl::optional"** %3, align 8
  %49 = icmp eq %"class.absl::optional"* %48, %47
  br i1 %49, label %75, label %50

50:                                               ; preds = %34
  %51 = ptrtoint %"class.absl::optional"* %47 to i64
  %52 = getelementptr %"class.absl::optional", %"class.absl::optional"* %48, i64 -1, i32 0, i32 0, i32 0, i32 0
  %53 = ptrtoint i8* %52 to i64
  %54 = sub i64 %53, %51
  %55 = and i64 %54, 32
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %70

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %48, i64 -1
  %59 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 -1, i32 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 32, i1 false) #13
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %68, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %48, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %65 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %66 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  %67 = bitcast %"class.std::__1::basic_string"* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %59, align 8
  br label %68

68:                                               ; preds = %63, %57
  %69 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 -1
  br label %70

70:                                               ; preds = %68, %50
  %71 = phi %"class.absl::optional"* [ undef, %50 ], [ %69, %68 ]
  %72 = phi %"class.absl::optional"* [ %37, %50 ], [ %69, %68 ]
  %73 = phi %"class.absl::optional"* [ %48, %50 ], [ %58, %68 ]
  %74 = icmp ult i64 %54, 32
  br i1 %74, label %95, label %77

75:                                               ; preds = %34
  %76 = ptrtoint %"class.absl::optional"* %37 to i64
  store i64 %76, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  br label %119

77:                                               ; preds = %70, %130
  %78 = phi %"class.absl::optional"* [ %131, %130 ], [ %72, %70 ]
  %79 = phi %"class.absl::optional"* [ %90, %130 ], [ %73, %70 ]
  %80 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %78, i64 -1, i32 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %79, i64 -1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 32, i1 false) #13
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %89, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %79, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %86 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %78, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %87 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  %88 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %80, align 8
  br label %89

89:                                               ; preds = %84, %77
  %90 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %79, i64 -2
  %91 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %78, i64 -2, i32 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %90, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 32, i1 false) #13
  %93 = load i8, i8* %92, align 8, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %130, label %125

95:                                               ; preds = %130, %70
  %96 = phi %"class.absl::optional"* [ %71, %70 ], [ %131, %130 ]
  %97 = load %"class.absl::optional"*, %"class.absl::optional"** %46, align 8
  %98 = load %"class.absl::optional"*, %"class.absl::optional"** %3, align 8
  %99 = ptrtoint %"class.absl::optional"* %96 to i64
  store i64 %99, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %100 = icmp eq %"class.absl::optional"* %98, %97
  br i1 %100, label %119, label %101

101:                                              ; preds = %95, %117
  %102 = phi %"class.absl::optional"* [ %103, %117 ], [ %98, %95 ]
  %103 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %102, i64 -1
  %104 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8, i8* %104, align 8, !range !2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %117, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %102, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %109 = bitcast %"class.std::__1::basic_string"* %108 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %109, i64 0, i32 1, i32 1
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %107
  %114 = bitcast %"class.std::__1::basic_string"* %108 to i8**
  %115 = load i8*, i8** %114, align 8
  tail call void @_ZdlPv(i8* %115) #14
  br label %116

116:                                              ; preds = %113, %107
  store i8 0, i8* %104, align 8
  br label %117

117:                                              ; preds = %116, %101
  %118 = icmp eq %"class.absl::optional"* %103, %97
  br i1 %118, label %119, label %101

119:                                              ; preds = %117, %75, %95
  %120 = phi %"class.absl::optional"* [ %47, %75 ], [ %97, %95 ], [ %97, %117 ]
  %121 = icmp eq %"class.absl::optional"* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %123) #14
  br label %124

124:                                              ; preds = %119, %122
  ret void

125:                                              ; preds = %89
  %126 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %79, i64 -2, i32 0, i32 0, i32 0, i32 1, i32 0
  %127 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %78, i64 -2, i32 0, i32 0, i32 0, i32 1, i32 0
  %128 = bitcast %"class.std::__1::basic_string"* %127 to i8*
  %129 = bitcast %"class.std::__1::basic_string"* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %91, align 8
  br label %130

130:                                              ; preds = %125, %89
  %131 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %78, i64 -2
  %132 = icmp eq %"class.absl::optional"* %90, %47
  br i1 %132, label %95, label %77
}

; Function Attrs: noreturn
declare void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() local_unnamed_addr #4

declare zeroext i1 @_ZN4base13StringToSizeTENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPm(i16*, i64, i64*) local_unnamed_addr #7

declare zeroext i1 @_ZN4base11EqualsASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS0_IcNS2_IcEEEE(i16*, i64, i8*, i64) local_unnamed_addr #7

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE24__emplace_back_slow_pathIJRKS9_EEEvDpOT_(%"class.std::__1::vector.40"*, %"class.absl::optional"* dereferenceable(32)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.absl::optional"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.40"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.40"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.absl::optional"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.absl::optional"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.absl::optional"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %36, i64 %9
  %38 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %36, i64 %35
  %39 = ptrtoint %"class.absl::optional"* %38 to i64
  %40 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 32, i1 false) #13
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %230, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %36, i64 %9, i32 0, i32 0, i32 0, i32 1, i32 0
  %47 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %47, i64 0, i32 1, i32 1
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %44
  %52 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #13
  br label %229

54:                                               ; preds = %44
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i16*, i16** %55, align 8
  %57 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = icmp ult i64 %58, 11
  br i1 %59, label %60, label %65

60:                                               ; preds = %54
  %61 = bitcast %"class.std::__1::basic_string"* %46 to i16*
  %62 = trunc i64 %58 to i8
  %63 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  store i8 %62, i8* %64, align 1
  br label %82

65:                                               ; preds = %54
  %66 = icmp ugt i64 %58, 9223372036854775791
  br i1 %66, label %67, label %69

67:                                               ; preds = %65
  %68 = bitcast %"class.std::__1::basic_string"* %46 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %68) #15
  unreachable

69:                                               ; preds = %65
  %70 = add nuw nsw i64 %58, 8
  %71 = and i64 %70, -8
  %72 = icmp slt i64 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %69
  tail call void @abort() #15
  unreachable

74:                                               ; preds = %69
  %75 = shl i64 %71, 1
  %76 = tail call i8* @_Znwm(i64 %75) #14
  %77 = bitcast i8* %76 to i16*
  %78 = bitcast %"class.std::__1::basic_string"* %46 to i8**
  store i8* %76, i8** %78, align 8
  %79 = or i64 %71, -9223372036854775808
  %80 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %36, i64 %9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %36, i64 %9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %58, i64* %81, align 8
  br label %82

82:                                               ; preds = %74, %60
  %83 = phi i16* [ %61, %60 ], [ %77, %74 ]
  %84 = add nuw nsw i64 %58, 1
  %85 = add i64 %58, 1
  %86 = icmp ult i64 %85, 16
  br i1 %86, label %176, label %87

87:                                               ; preds = %82
  %88 = add i64 %58, 1
  %89 = getelementptr i16, i16* %83, i64 %88
  %90 = getelementptr i16, i16* %56, i64 %88
  %91 = icmp ult i16* %83, %90
  %92 = icmp ult i16* %56, %89
  %93 = and i1 %91, %92
  br i1 %93, label %176, label %94

94:                                               ; preds = %87
  %95 = and i64 %85, -16
  %96 = sub i64 %84, %95
  %97 = getelementptr i16, i16* %56, i64 %95
  %98 = getelementptr i16, i16* %83, i64 %95
  %99 = add i64 %95, -16
  %100 = lshr exact i64 %99, 4
  %101 = add nuw nsw i64 %100, 1
  %102 = and i64 %101, 3
  %103 = icmp ult i64 %99, 48
  br i1 %103, label %155, label %104

104:                                              ; preds = %94
  %105 = sub nsw i64 %101, %102
  br label %106

106:                                              ; preds = %106, %104
  %107 = phi i64 [ 0, %104 ], [ %152, %106 ]
  %108 = phi i64 [ %105, %104 ], [ %153, %106 ]
  %109 = getelementptr i16, i16* %56, i64 %107
  %110 = getelementptr i16, i16* %83, i64 %107
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !266
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !266
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !269, !noalias !266
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !269, !noalias !266
  %119 = or i64 %107, 16
  %120 = getelementptr i16, i16* %56, i64 %119
  %121 = getelementptr i16, i16* %83, i64 %119
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !266
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !266
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !269, !noalias !266
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !269, !noalias !266
  %130 = or i64 %107, 32
  %131 = getelementptr i16, i16* %56, i64 %130
  %132 = getelementptr i16, i16* %83, i64 %130
  %133 = bitcast i16* %131 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !266
  %135 = getelementptr i16, i16* %131, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !266
  %138 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !269, !noalias !266
  %139 = getelementptr i16, i16* %132, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !269, !noalias !266
  %141 = or i64 %107, 48
  %142 = getelementptr i16, i16* %56, i64 %141
  %143 = getelementptr i16, i16* %83, i64 %141
  %144 = bitcast i16* %142 to <8 x i16>*
  %145 = load <8 x i16>, <8 x i16>* %144, align 2, !alias.scope !266
  %146 = getelementptr i16, i16* %142, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  %148 = load <8 x i16>, <8 x i16>* %147, align 2, !alias.scope !266
  %149 = bitcast i16* %143 to <8 x i16>*
  store <8 x i16> %145, <8 x i16>* %149, align 2, !alias.scope !269, !noalias !266
  %150 = getelementptr i16, i16* %143, i64 8
  %151 = bitcast i16* %150 to <8 x i16>*
  store <8 x i16> %148, <8 x i16>* %151, align 2, !alias.scope !269, !noalias !266
  %152 = add i64 %107, 64
  %153 = add i64 %108, -4
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %106, !llvm.loop !271

155:                                              ; preds = %106, %94
  %156 = phi i64 [ 0, %94 ], [ %152, %106 ]
  %157 = icmp eq i64 %102, 0
  br i1 %157, label %174, label %158

158:                                              ; preds = %155, %158
  %159 = phi i64 [ %171, %158 ], [ %156, %155 ]
  %160 = phi i64 [ %172, %158 ], [ %102, %155 ]
  %161 = getelementptr i16, i16* %56, i64 %159
  %162 = getelementptr i16, i16* %83, i64 %159
  %163 = bitcast i16* %161 to <8 x i16>*
  %164 = load <8 x i16>, <8 x i16>* %163, align 2, !alias.scope !266
  %165 = getelementptr i16, i16* %161, i64 8
  %166 = bitcast i16* %165 to <8 x i16>*
  %167 = load <8 x i16>, <8 x i16>* %166, align 2, !alias.scope !266
  %168 = bitcast i16* %162 to <8 x i16>*
  store <8 x i16> %164, <8 x i16>* %168, align 2, !alias.scope !269, !noalias !266
  %169 = getelementptr i16, i16* %162, i64 8
  %170 = bitcast i16* %169 to <8 x i16>*
  store <8 x i16> %167, <8 x i16>* %170, align 2, !alias.scope !269, !noalias !266
  %171 = add i64 %159, 16
  %172 = add i64 %160, -1
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %158, !llvm.loop !272

174:                                              ; preds = %158, %155
  %175 = icmp eq i64 %85, %95
  br i1 %175, label %229, label %176

176:                                              ; preds = %174, %87, %82
  %177 = phi i64 [ %84, %87 ], [ %84, %82 ], [ %96, %174 ]
  %178 = phi i16* [ %56, %87 ], [ %56, %82 ], [ %97, %174 ]
  %179 = phi i16* [ %83, %87 ], [ %83, %82 ], [ %98, %174 ]
  %180 = add i64 %177, -1
  %181 = and i64 %177, 7
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %194, label %183

183:                                              ; preds = %176, %183
  %184 = phi i64 [ %189, %183 ], [ %177, %176 ]
  %185 = phi i16* [ %191, %183 ], [ %178, %176 ]
  %186 = phi i16* [ %190, %183 ], [ %179, %176 ]
  %187 = phi i64 [ %192, %183 ], [ %181, %176 ]
  %188 = load i16, i16* %185, align 2
  store i16 %188, i16* %186, align 2
  %189 = add i64 %184, -1
  %190 = getelementptr inbounds i16, i16* %186, i64 1
  %191 = getelementptr inbounds i16, i16* %185, i64 1
  %192 = add i64 %187, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %183, !llvm.loop !273

194:                                              ; preds = %183, %176
  %195 = phi i64 [ %177, %176 ], [ %189, %183 ]
  %196 = phi i16* [ %178, %176 ], [ %191, %183 ]
  %197 = phi i16* [ %179, %176 ], [ %190, %183 ]
  %198 = icmp ult i64 %180, 7
  br i1 %198, label %229, label %199

199:                                              ; preds = %194, %199
  %200 = phi i64 [ %225, %199 ], [ %195, %194 ]
  %201 = phi i16* [ %227, %199 ], [ %196, %194 ]
  %202 = phi i16* [ %226, %199 ], [ %197, %194 ]
  %203 = load i16, i16* %201, align 2
  store i16 %203, i16* %202, align 2
  %204 = getelementptr inbounds i16, i16* %202, i64 1
  %205 = getelementptr inbounds i16, i16* %201, i64 1
  %206 = load i16, i16* %205, align 2
  store i16 %206, i16* %204, align 2
  %207 = getelementptr inbounds i16, i16* %202, i64 2
  %208 = getelementptr inbounds i16, i16* %201, i64 2
  %209 = load i16, i16* %208, align 2
  store i16 %209, i16* %207, align 2
  %210 = getelementptr inbounds i16, i16* %202, i64 3
  %211 = getelementptr inbounds i16, i16* %201, i64 3
  %212 = load i16, i16* %211, align 2
  store i16 %212, i16* %210, align 2
  %213 = getelementptr inbounds i16, i16* %202, i64 4
  %214 = getelementptr inbounds i16, i16* %201, i64 4
  %215 = load i16, i16* %214, align 2
  store i16 %215, i16* %213, align 2
  %216 = getelementptr inbounds i16, i16* %202, i64 5
  %217 = getelementptr inbounds i16, i16* %201, i64 5
  %218 = load i16, i16* %217, align 2
  store i16 %218, i16* %216, align 2
  %219 = getelementptr inbounds i16, i16* %202, i64 6
  %220 = getelementptr inbounds i16, i16* %201, i64 6
  %221 = load i16, i16* %220, align 2
  store i16 %221, i16* %219, align 2
  %222 = getelementptr inbounds i16, i16* %202, i64 7
  %223 = getelementptr inbounds i16, i16* %201, i64 7
  %224 = load i16, i16* %223, align 2
  store i16 %224, i16* %222, align 2
  %225 = add i64 %200, -8
  %226 = getelementptr inbounds i16, i16* %202, i64 8
  %227 = getelementptr inbounds i16, i16* %201, i64 8
  %228 = icmp eq i64 %225, 0
  br i1 %228, label %229, label %199, !llvm.loop !274

229:                                              ; preds = %194, %199, %174, %51
  store i8 1, i8* %40, align 8
  br label %230

230:                                              ; preds = %34, %229
  %231 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 1
  %232 = ptrtoint %"class.absl::optional"* %231 to i64
  %233 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 0
  %234 = load %"class.absl::optional"*, %"class.absl::optional"** %233, align 8
  %235 = load %"class.absl::optional"*, %"class.absl::optional"** %3, align 8
  %236 = icmp eq %"class.absl::optional"* %235, %234
  br i1 %236, label %262, label %237

237:                                              ; preds = %230
  %238 = ptrtoint %"class.absl::optional"* %234 to i64
  %239 = getelementptr %"class.absl::optional", %"class.absl::optional"* %235, i64 -1, i32 0, i32 0, i32 0, i32 0
  %240 = ptrtoint i8* %239 to i64
  %241 = sub i64 %240, %238
  %242 = and i64 %241, 32
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %244, label %257

244:                                              ; preds = %237
  %245 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %235, i64 -1
  %246 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 -1, i32 0, i32 0, i32 0, i32 0
  %247 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %245, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %246, i8 0, i64 32, i1 false) #13
  %248 = load i8, i8* %247, align 8, !range !2
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %255, label %250

250:                                              ; preds = %244
  %251 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %235, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %252 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %253 = bitcast %"class.std::__1::basic_string"* %252 to i8*
  %254 = bitcast %"class.std::__1::basic_string"* %251 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %253, i8* align 8 %254, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %254, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %246, align 8
  br label %255

255:                                              ; preds = %250, %244
  %256 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 -1
  br label %257

257:                                              ; preds = %255, %237
  %258 = phi %"class.absl::optional"* [ undef, %237 ], [ %256, %255 ]
  %259 = phi %"class.absl::optional"* [ %37, %237 ], [ %256, %255 ]
  %260 = phi %"class.absl::optional"* [ %235, %237 ], [ %245, %255 ]
  %261 = icmp ult i64 %241, 32
  br i1 %261, label %282, label %264

262:                                              ; preds = %230
  %263 = ptrtoint %"class.absl::optional"* %37 to i64
  store i64 %263, i64* %6, align 8
  store i64 %232, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  br label %306

264:                                              ; preds = %257, %317
  %265 = phi %"class.absl::optional"* [ %318, %317 ], [ %259, %257 ]
  %266 = phi %"class.absl::optional"* [ %277, %317 ], [ %260, %257 ]
  %267 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %265, i64 -1, i32 0, i32 0, i32 0, i32 0
  %268 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %266, i64 -1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %267, i8 0, i64 32, i1 false) #13
  %269 = load i8, i8* %268, align 8, !range !2
  %270 = icmp eq i8 %269, 0
  br i1 %270, label %276, label %271

271:                                              ; preds = %264
  %272 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %266, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %273 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %265, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %274 = bitcast %"class.std::__1::basic_string"* %273 to i8*
  %275 = bitcast %"class.std::__1::basic_string"* %272 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %274, i8* align 8 %275, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %275, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %267, align 8
  br label %276

276:                                              ; preds = %271, %264
  %277 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %266, i64 -2
  %278 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %265, i64 -2, i32 0, i32 0, i32 0, i32 0
  %279 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %277, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %278, i8 0, i64 32, i1 false) #13
  %280 = load i8, i8* %279, align 8, !range !2
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %317, label %312

282:                                              ; preds = %317, %257
  %283 = phi %"class.absl::optional"* [ %258, %257 ], [ %318, %317 ]
  %284 = load %"class.absl::optional"*, %"class.absl::optional"** %233, align 8
  %285 = load %"class.absl::optional"*, %"class.absl::optional"** %3, align 8
  %286 = ptrtoint %"class.absl::optional"* %283 to i64
  store i64 %286, i64* %6, align 8
  store i64 %232, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %287 = icmp eq %"class.absl::optional"* %285, %284
  br i1 %287, label %306, label %288

288:                                              ; preds = %282, %304
  %289 = phi %"class.absl::optional"* [ %290, %304 ], [ %285, %282 ]
  %290 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %289, i64 -1
  %291 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %290, i64 0, i32 0, i32 0, i32 0, i32 0
  %292 = load i8, i8* %291, align 8, !range !2
  %293 = icmp eq i8 %292, 0
  br i1 %293, label %304, label %294

294:                                              ; preds = %288
  %295 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %289, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %296 = bitcast %"class.std::__1::basic_string"* %295 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %297 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %296, i64 0, i32 1, i32 1
  %298 = load i8, i8* %297, align 1
  %299 = icmp slt i8 %298, 0
  br i1 %299, label %300, label %303

300:                                              ; preds = %294
  %301 = bitcast %"class.std::__1::basic_string"* %295 to i8**
  %302 = load i8*, i8** %301, align 8
  tail call void @_ZdlPv(i8* %302) #14
  br label %303

303:                                              ; preds = %300, %294
  store i8 0, i8* %291, align 8
  br label %304

304:                                              ; preds = %303, %288
  %305 = icmp eq %"class.absl::optional"* %290, %284
  br i1 %305, label %306, label %288

306:                                              ; preds = %304, %262, %282
  %307 = phi %"class.absl::optional"* [ %234, %262 ], [ %284, %282 ], [ %284, %304 ]
  %308 = icmp eq %"class.absl::optional"* %307, null
  br i1 %308, label %311, label %309

309:                                              ; preds = %306
  %310 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %307, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %310) #14
  br label %311

311:                                              ; preds = %306, %309
  ret void

312:                                              ; preds = %276
  %313 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %266, i64 -2, i32 0, i32 0, i32 0, i32 1, i32 0
  %314 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %265, i64 -2, i32 0, i32 0, i32 0, i32 1, i32 0
  %315 = bitcast %"class.std::__1::basic_string"* %314 to i8*
  %316 = bitcast %"class.std::__1::basic_string"* %313 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %315, i8* align 8 %316, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %316, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %278, align 8
  br label %317

317:                                              ; preds = %312, %276
  %318 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %265, i64 -2
  %319 = icmp eq %"class.absl::optional"* %277, %234
  br i1 %319, label %282, label %264
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.absl::optional"* @_ZNSt3__16uniqueINS_11__wrap_iterIPN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEEENS_10__equal_toISA_SA_EEEET_SF_SF_T0_(%"class.absl::optional"*, %"class.absl::optional"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.absl::optional"* %0, %1
  br i1 %3, label %73, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 1
  %6 = icmp eq %"class.absl::optional"* %5, %1
  br i1 %6, label %71, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  br label %10

10:                                               ; preds = %68, %7
  %11 = phi i8 [ %16, %68 ], [ %9, %7 ]
  %12 = phi %"class.absl::optional"* [ %69, %68 ], [ %5, %7 ]
  %13 = phi %"class.absl::optional"* [ %12, %68 ], [ %0, %7 ]
  %14 = icmp ne i8 %11, 0
  %15 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %14, true
  %20 = or i1 %18, %19
  br i1 %20, label %67, label %21

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = icmp eq i8 %16, 0
  br i1 %23, label %24, label %25, !prof !275

24:                                               ; preds = %21
  tail call void @llvm.trap() #13
  unreachable

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %29 to i64
  %34 = select i1 %30, i64 %32, i64 %33
  %35 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = zext i8 %37 to i64
  %42 = select i1 %38, i64 %40, i64 %41
  %43 = icmp eq i64 %34, %42
  br i1 %43, label %44, label %68

44:                                               ; preds = %25
  %45 = icmp eq i64 %34, 0
  br i1 %45, label %73, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i16*, i16** %47, align 8
  %49 = bitcast %"class.std::__1::basic_string"* %26 to i16*
  %50 = select i1 %38, i16* %48, i16* %49
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i16*, i16** %51, align 8
  %53 = bitcast %"class.std::__1::basic_string"* %22 to i16*
  %54 = select i1 %30, i16* %52, i16* %53
  br label %55

55:                                               ; preds = %62, %46
  %56 = phi i64 [ %63, %62 ], [ %34, %46 ]
  %57 = phi i16* [ %65, %62 ], [ %50, %46 ]
  %58 = phi i16* [ %64, %62 ], [ %54, %46 ]
  %59 = load i16, i16* %58, align 2
  %60 = load i16, i16* %57, align 2
  %61 = icmp eq i16 %60, %59
  br i1 %61, label %62, label %68

62:                                               ; preds = %55
  %63 = add i64 %56, -1
  %64 = getelementptr inbounds i16, i16* %58, i64 1
  %65 = getelementptr inbounds i16, i16* %57, i64 1
  %66 = icmp eq i64 %63, 0
  br i1 %66, label %73, label %55

67:                                               ; preds = %10
  br i1 %18, label %68, label %73

68:                                               ; preds = %55, %67, %25
  %69 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 1
  %70 = icmp eq %"class.absl::optional"* %69, %1
  br i1 %70, label %71, label %10

71:                                               ; preds = %68, %4
  %72 = ptrtoint %"class.absl::optional"* %1 to i64
  br label %199

73:                                               ; preds = %44, %67, %62, %2
  %74 = phi %"class.absl::optional"* [ %0, %2 ], [ %13, %62 ], [ %13, %67 ], [ %13, %44 ]
  %75 = ptrtoint %"class.absl::optional"* %74 to i64
  %76 = icmp eq %"class.absl::optional"* %74, %1
  br i1 %76, label %199, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %74, i64 2
  %79 = icmp eq %"class.absl::optional"* %78, %1
  br i1 %79, label %195, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %74, i64 1
  br label %82

82:                                               ; preds = %80, %188
  %83 = phi %"class.absl::optional"* [ %192, %188 ], [ %74, %80 ]
  %84 = phi %"class.absl::optional"* [ %190, %188 ], [ %78, %80 ]
  %85 = phi %"class.absl::optional"* [ %84, %188 ], [ %81, %80 ]
  %86 = phi i64 [ %189, %188 ], [ %75, %80 ]
  %87 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %83, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8, i8* %87, align 8, !range !2
  %89 = icmp ne i8 %88, 0
  %90 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %84, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp ne i8 %91, 0
  %93 = xor i1 %89, %92
  %94 = xor i1 %89, true
  %95 = or i1 %93, %94
  br i1 %95, label %145, label %96

96:                                               ; preds = %82
  %97 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %83, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %98 = icmp eq i8 %91, 0
  br i1 %98, label %99, label %100, !prof !275

99:                                               ; preds = %96
  tail call void @llvm.trap() #13
  unreachable

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %85, i64 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %102 = bitcast %"class.std::__1::basic_string"* %97 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %102, i64 0, i32 1, i32 1
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  %106 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %83, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = zext i8 %104 to i64
  %109 = select i1 %105, i64 %107, i64 %108
  %110 = bitcast %"class.std::__1::basic_string"* %101 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %110, i64 0, i32 1, i32 1
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  %114 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %85, i64 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = zext i8 %112 to i64
  %117 = select i1 %113, i64 %115, i64 %116
  %118 = icmp eq i64 %109, %117
  br i1 %118, label %122, label %119

119:                                              ; preds = %100
  %120 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %83, i64 1
  %121 = ptrtoint %"class.absl::optional"* %120 to i64
  br label %150

122:                                              ; preds = %100
  %123 = icmp eq i64 %109, 0
  br i1 %123, label %188, label %124

124:                                              ; preds = %122
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i16*, i16** %125, align 8
  %127 = bitcast %"class.std::__1::basic_string"* %101 to i16*
  %128 = select i1 %113, i16* %126, i16* %127
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i16*, i16** %129, align 8
  %131 = bitcast %"class.std::__1::basic_string"* %97 to i16*
  %132 = select i1 %105, i16* %130, i16* %131
  br label %133

133:                                              ; preds = %140, %124
  %134 = phi i64 [ %141, %140 ], [ %109, %124 ]
  %135 = phi i16* [ %143, %140 ], [ %128, %124 ]
  %136 = phi i16* [ %142, %140 ], [ %132, %124 ]
  %137 = load i16, i16* %136, align 2
  %138 = load i16, i16* %135, align 2
  %139 = icmp eq i16 %138, %137
  br i1 %139, label %140, label %146

140:                                              ; preds = %133
  %141 = add i64 %134, -1
  %142 = getelementptr inbounds i16, i16* %136, i64 1
  %143 = getelementptr inbounds i16, i16* %135, i64 1
  %144 = icmp eq i64 %141, 0
  br i1 %144, label %188, label %133

145:                                              ; preds = %82
  br i1 %93, label %146, label %188

146:                                              ; preds = %133, %145
  %147 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %83, i64 1
  %148 = ptrtoint %"class.absl::optional"* %147 to i64
  %149 = icmp eq i8 %91, 0
  br i1 %149, label %174, label %150

150:                                              ; preds = %119, %146
  %151 = phi i64 [ %121, %119 ], [ %148, %146 ]
  %152 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %85, i64 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %153 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %83, i64 1, i32 0, i32 0, i32 0, i32 0
  %154 = load i8, i8* %153, align 8, !range !2
  %155 = icmp eq i8 %154, 0
  %156 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %83, i64 1, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %155, label %171, label %157

157:                                              ; preds = %150
  %158 = bitcast %"class.std::__1::basic_string"* %156 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %159 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %158, i64 0, i32 1, i32 1
  %160 = load i8, i8* %159, align 1
  %161 = icmp slt i8 %160, 0
  br i1 %161, label %162, label %165

162:                                              ; preds = %157
  %163 = bitcast %"class.std::__1::basic_string"* %156 to i8**
  %164 = load i8*, i8** %163, align 8
  tail call void @_ZdlPv(i8* %164) #14
  br label %165

165:                                              ; preds = %162, %157
  %166 = bitcast %"class.std::__1::basic_string"* %156 to i8*
  %167 = bitcast %"class.std::__1::basic_string"* %152 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* align 8 %167, i64 24, i1 false) #13
  %168 = bitcast %"class.std::__1::basic_string"* %152 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %168, i64 0, i32 1, i32 1
  store i8 0, i8* %169, align 1
  %170 = bitcast %"class.std::__1::basic_string"* %152 to i16*
  store i16 0, i16* %170, align 2
  br label %188

171:                                              ; preds = %150
  %172 = bitcast %"class.std::__1::basic_string"* %156 to i8*
  %173 = bitcast %"class.std::__1::basic_string"* %152 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 8 %173, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %173, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %153, align 8
  br label %188

174:                                              ; preds = %146
  %175 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %147, i64 0, i32 0, i32 0, i32 0, i32 0
  %176 = load i8, i8* %175, align 8, !range !2
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %188, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %83, i64 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %180 = bitcast %"class.std::__1::basic_string"* %179 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %181 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %180, i64 0, i32 1, i32 1
  %182 = load i8, i8* %181, align 1
  %183 = icmp slt i8 %182, 0
  br i1 %183, label %184, label %187

184:                                              ; preds = %178
  %185 = bitcast %"class.std::__1::basic_string"* %179 to i8**
  %186 = load i8*, i8** %185, align 8
  tail call void @_ZdlPv(i8* %186) #14
  br label %187

187:                                              ; preds = %184, %178
  store i8 0, i8* %175, align 8
  br label %188

188:                                              ; preds = %140, %145, %122, %187, %174, %171, %165
  %189 = phi i64 [ %86, %145 ], [ %151, %165 ], [ %151, %171 ], [ %148, %174 ], [ %148, %187 ], [ %86, %122 ], [ %86, %140 ]
  %190 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %84, i64 1
  %191 = icmp eq %"class.absl::optional"* %190, %1
  %192 = inttoptr i64 %189 to %"class.absl::optional"*
  br i1 %191, label %193, label %82

193:                                              ; preds = %188
  %194 = inttoptr i64 %189 to %"class.absl::optional"*
  br label %195

195:                                              ; preds = %193, %77
  %196 = phi %"class.absl::optional"* [ %74, %77 ], [ %194, %193 ]
  %197 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %196, i64 1
  %198 = ptrtoint %"class.absl::optional"* %197 to i64
  br label %199

199:                                              ; preds = %73, %71, %195
  %200 = phi i64 [ %198, %195 ], [ %75, %73 ], [ %72, %71 ]
  %201 = inttoptr i64 %200 to %"class.absl::optional"*
  ret %"class.absl::optional"* %201
}

; Function Attrs: nounwind
declare void @_ZN4base6PickleD1Ev(%"class.base::Pickle"*) unnamed_addr #3

declare void @_ZN4base6PickleC1Ev(%"class.base::Pickle"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_115WriteFrameStateERKNS_18ExplodedFrameStateEPNS_5mojom10FrameStateE(%"struct.blink::ExplodedFrameState"* dereferenceable(512), %"class.blink::mojom::FrameState"*) unnamed_addr #0 {
  %3 = alloca %"class.mojo::StructPtr.95", align 8
  %4 = alloca %"class.std::__1::vector.4", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.mojo::StructPtr.99", align 8
  %7 = alloca %"class.std::__1::basic_string.15", align 8
  %8 = alloca %"class.mojo::StructPtr.69", align 8
  %9 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 0
  %11 = tail call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %10, %"class.absl::optional"* dereferenceable(32) %9)
  %12 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 1
  %14 = tail call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %13, %"class.absl::optional"* dereferenceable(32) %12)
  %15 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %40, label %18

18:                                               ; preds = %2
  %19 = bitcast %"class.std::__1::basic_string.15"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string.15"* nonnull sret %7, %"class.url::Origin"* %20) #13
  %21 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %23, label %37, label %25

25:                                               ; preds = %18
  %26 = bitcast %"class.std::__1::basic_string.15"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #14
  br label %33

33:                                               ; preds = %30, %25
  %34 = bitcast %"class.std::__1::basic_string.15"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* nonnull align 8 %19, i64 24, i1 false) #13
  %35 = bitcast %"class.std::__1::basic_string.15"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 0, i8* %36, align 1
  store i8 0, i8* %19, align 8
  br label %39

37:                                               ; preds = %18
  %38 = bitcast %"class.std::__1::basic_string.15"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* nonnull align 8 %19, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %21, align 8
  br label %39

39:                                               ; preds = %37, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #13
  br label %40

40:                                               ; preds = %2, %39
  %41 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 3
  %42 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 2
  %43 = call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %42, %"class.absl::optional"* dereferenceable(32) %41)
  %44 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 4
  %45 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 3
  %46 = call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %45, %"class.absl::optional"* dereferenceable(32) %44)
  %47 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 5, i32 0, i32 0
  %48 = load %"class.absl::optional"*, %"class.absl::optional"** %47, align 8
  %49 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 5, i32 0, i32 1
  %50 = load %"class.absl::optional"*, %"class.absl::optional"** %49, align 8
  %51 = icmp eq %"class.absl::optional"* %48, %50
  br i1 %51, label %56, label %52

52:                                               ; preds = %40
  %53 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 4
  %54 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 4, i32 0, i32 1
  %55 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  br label %63

56:                                               ; preds = %70, %40
  %57 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 6
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 5
  store i32 %58, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 7
  %61 = load i8, i8* %60, align 4, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %149, label %73

63:                                               ; preds = %52, %70
  %64 = phi %"class.absl::optional"* [ %48, %52 ], [ %71, %70 ]
  %65 = load %"class.absl::optional"*, %"class.absl::optional"** %54, align 8
  %66 = load %"class.absl::optional"*, %"class.absl::optional"** %55, align 8
  %67 = icmp eq %"class.absl::optional"* %65, %66
  br i1 %67, label %69, label %68

68:                                               ; preds = %63
  call void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE22__construct_one_at_endIJRKS9_EEEvDpOT_(%"class.std::__1::vector.40"* %53, %"class.absl::optional"* dereferenceable(32) %64) #13
  br label %70

69:                                               ; preds = %63
  call void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE21__push_back_slow_pathIRKS9_EEvOT_(%"class.std::__1::vector.40"* %53, %"class.absl::optional"* dereferenceable(32) %64) #13
  br label %70

70:                                               ; preds = %68, %69
  %71 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %64, i64 1
  %72 = icmp eq %"class.absl::optional"* %71, %50
  br i1 %72, label %56, label %63

73:                                               ; preds = %56
  %74 = call i8* @_Znwm(i64 80) #14, !noalias !276
  %75 = bitcast i8* %74 to %"class.blink::mojom::ViewState"*
  call void @_ZN5blink5mojom9ViewStateC1Ev(%"class.blink::mojom::ViewState"* nonnull %75) #13, !noalias !276
  %76 = ptrtoint i8* %74 to i64
  %77 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 6
  %78 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %78, align 8
  store %"class.blink::mojom::ViewState"* null, %"class.blink::mojom::ViewState"** %78, align 8
  %80 = icmp eq %"class.blink::mojom::ViewState"* %79, null
  br i1 %80, label %81, label %84

81:                                               ; preds = %73
  %82 = bitcast %"class.mojo::StructPtr.73"* %77 to i64*
  store i64 %76, i64* %82, align 8
  %83 = bitcast i8* %74 to %"class.blink::mojom::ViewState"*
  br label %93

84:                                               ; preds = %73
  call void @_ZN5blink5mojom9ViewStateD1Ev(%"class.blink::mojom::ViewState"* nonnull %79) #13
  %85 = bitcast %"class.blink::mojom::ViewState"* %79 to i8*
  call void @_ZdlPv(i8* %85) #14
  %86 = bitcast %"class.mojo::StructPtr.73"* %77 to i64*
  %87 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %78, align 8
  store i64 %76, i64* %86, align 8
  %88 = icmp eq %"class.blink::mojom::ViewState"* %87, null
  %89 = bitcast i8* %74 to %"class.blink::mojom::ViewState"*
  br i1 %88, label %93, label %90

90:                                               ; preds = %84
  call void @_ZN5blink5mojom9ViewStateD1Ev(%"class.blink::mojom::ViewState"* nonnull %87) #13
  %91 = bitcast %"class.blink::mojom::ViewState"* %87 to i8*
  call void @_ZdlPv(i8* %91) #14
  %92 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %78, align 8
  br label %93

93:                                               ; preds = %81, %84, %90
  %94 = phi %"class.blink::mojom::ViewState"* [ %83, %81 ], [ %89, %84 ], [ %92, %90 ]
  %95 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 9
  %96 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %94, i64 0, i32 1
  %97 = bitcast %"class.gfx::Point"* %95 to i64*
  %98 = bitcast %"class.gfx::Point"* %96 to i64*
  %99 = load i64, i64* %97, align 4
  store i64 %99, i64* %98, align 8
  %100 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 8
  %101 = bitcast %"class.mojo::StructPtr.73"* %77 to i64**
  %102 = load i64*, i64** %101, align 8
  %103 = bitcast %"class.gfx::PointF"* %100 to i64*
  %104 = load i64, i64* %103, align 4
  store i64 %104, i64* %102, align 8
  %105 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 12
  %106 = bitcast double* %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %78, align 8
  %109 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %108, i64 0, i32 2
  %110 = bitcast double* %109 to i64*
  store i64 %107, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 16
  %112 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %111, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8, i8* %112, align 8, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %149, label %115

115:                                              ; preds = %93
  %116 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0
  %117 = bitcast %"class.std::__1::basic_string"* %116 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %117, i64 0, i32 1, i32 1
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %125

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = icmp ult i64 %123, 500
  br i1 %124, label %125, label %149

125:                                              ; preds = %115, %121
  %126 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %78, align 8
  %127 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %126, i64 0, i32 3
  %128 = call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %127, %"class.absl::optional"* dereferenceable(32) %111)
  %129 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 17
  %130 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %78, align 8
  %131 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %130, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %132 = load i8, i8* %131, align 4, !range !2
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %139, label %134

134:                                              ; preds = %125
  %135 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %130, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %136 = bitcast %"class.gfx::PointF"* %129 to i64*
  %137 = bitcast %"class.gfx::PointF"* %135 to i64*
  %138 = load i64, i64* %136, align 4
  store i64 %138, i64* %137, align 4
  br label %144

139:                                              ; preds = %125
  %140 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %130, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %141 = bitcast %"class.gfx::PointF"* %129 to i64*
  %142 = bitcast %union.anon.81* %140 to i64*
  %143 = load i64, i64* %141, align 4
  store i64 %143, i64* %142, align 4
  store i8 1, i8* %131, align 4
  br label %144

144:                                              ; preds = %134, %139
  %145 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 18
  %146 = load i64, i64* %145, align 8
  %147 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %78, align 8
  %148 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %147, i64 0, i32 5
  store i64 %146, i64* %148, align 8
  br label %149

149:                                              ; preds = %93, %56, %121, %144
  %150 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 10
  %151 = load i64, i64* %150, align 8
  %152 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 7
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 11
  %154 = load i64, i64* %153, align 8
  %155 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 8
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 13
  %157 = load i32, i32* %156, align 8
  %158 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 9
  store i32 %157, i32* %158, align 8
  %159 = call i8* @_Znwm(i64 48) #14, !noalias !279
  %160 = bitcast i8* %159 to %"class.blink::mojom::HttpBody"*
  call void @_ZN5blink5mojom8HttpBodyC1Ev(%"class.blink::mojom::HttpBody"* nonnull %160) #13, !noalias !279
  %161 = ptrtoint i8* %159 to i64
  %162 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 10
  %163 = getelementptr inbounds %"class.mojo::StructPtr.85", %"class.mojo::StructPtr.85"* %162, i64 0, i32 0, i32 0, i32 0, i32 0
  %164 = load %"class.blink::mojom::HttpBody"*, %"class.blink::mojom::HttpBody"** %163, align 8
  store %"class.blink::mojom::HttpBody"* null, %"class.blink::mojom::HttpBody"** %163, align 8
  %165 = icmp eq %"class.blink::mojom::HttpBody"* %164, null
  br i1 %165, label %166, label %169

166:                                              ; preds = %149
  %167 = bitcast %"class.mojo::StructPtr.85"* %162 to i64*
  store i64 %161, i64* %167, align 8
  %168 = bitcast i8* %159 to %"class.blink::mojom::HttpBody"*
  br label %178

169:                                              ; preds = %149
  call void @_ZN5blink5mojom8HttpBodyD1Ev(%"class.blink::mojom::HttpBody"* nonnull %164) #13
  %170 = getelementptr inbounds %"class.blink::mojom::HttpBody", %"class.blink::mojom::HttpBody"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %170) #14
  %171 = bitcast %"class.mojo::StructPtr.85"* %162 to i64*
  %172 = load %"class.blink::mojom::HttpBody"*, %"class.blink::mojom::HttpBody"** %163, align 8
  store i64 %161, i64* %171, align 8
  %173 = icmp eq %"class.blink::mojom::HttpBody"* %172, null
  %174 = bitcast i8* %159 to %"class.blink::mojom::HttpBody"*
  br i1 %173, label %178, label %175

175:                                              ; preds = %169
  call void @_ZN5blink5mojom8HttpBodyD1Ev(%"class.blink::mojom::HttpBody"* nonnull %172) #13
  %176 = getelementptr inbounds %"class.blink::mojom::HttpBody", %"class.blink::mojom::HttpBody"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %176) #14
  %177 = load %"class.blink::mojom::HttpBody"*, %"class.blink::mojom::HttpBody"** %163, align 8
  br label %178

178:                                              ; preds = %166, %169, %175
  %179 = phi %"class.blink::mojom::HttpBody"* [ %168, %166 ], [ %174, %169 ], [ %177, %175 ]
  %180 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 15, i32 1, i32 0
  %181 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %180, align 8
  %182 = icmp eq %"class.network::ResourceRequestBody"* %181, null
  br i1 %182, label %408, label %183

183:                                              ; preds = %178
  %184 = call i8* @_Znwm(i64 40) #14, !noalias !282
  %185 = bitcast i8* %184 to %"class.blink::mojom::RequestBody"*
  call void @_ZN5blink5mojom11RequestBodyC1Ev(%"class.blink::mojom::RequestBody"* nonnull %185) #13, !noalias !282
  %186 = ptrtoint i8* %184 to i64
  %187 = getelementptr inbounds %"class.blink::mojom::HttpBody", %"class.blink::mojom::HttpBody"* %179, i64 0, i32 1
  %188 = getelementptr inbounds %"class.mojo::StructPtr.89", %"class.mojo::StructPtr.89"* %187, i64 0, i32 0, i32 0, i32 0, i32 0
  %189 = load %"class.blink::mojom::RequestBody"*, %"class.blink::mojom::RequestBody"** %188, align 8
  store %"class.blink::mojom::RequestBody"* null, %"class.blink::mojom::RequestBody"** %188, align 8
  %190 = icmp eq %"class.blink::mojom::RequestBody"* %189, null
  br i1 %190, label %191, label %193

191:                                              ; preds = %183
  %192 = bitcast %"class.mojo::StructPtr.89"* %187 to i64*
  store i64 %186, i64* %192, align 8
  br label %200

193:                                              ; preds = %183
  call void @_ZN5blink5mojom11RequestBodyD1Ev(%"class.blink::mojom::RequestBody"* nonnull %189) #13
  %194 = bitcast %"class.blink::mojom::RequestBody"* %189 to i8*
  call void @_ZdlPv(i8* %194) #14
  %195 = bitcast %"class.mojo::StructPtr.89"* %187 to i64*
  %196 = load %"class.blink::mojom::RequestBody"*, %"class.blink::mojom::RequestBody"** %188, align 8
  store i64 %186, i64* %195, align 8
  %197 = icmp eq %"class.blink::mojom::RequestBody"* %196, null
  br i1 %197, label %200, label %198

198:                                              ; preds = %193
  call void @_ZN5blink5mojom11RequestBodyD1Ev(%"class.blink::mojom::RequestBody"* nonnull %196) #13
  %199 = bitcast %"class.blink::mojom::RequestBody"* %196 to i8*
  call void @_ZdlPv(i8* %199) #14
  br label %200

200:                                              ; preds = %198, %193, %191
  %201 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 15, i32 2
  %202 = load i8, i8* %201, align 8, !range !2
  %203 = getelementptr inbounds %"class.blink::mojom::HttpBody", %"class.blink::mojom::HttpBody"* %179, i64 0, i32 2
  store i8 %202, i8* %203, align 8
  %204 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 15, i32 0
  %205 = getelementptr inbounds %"class.blink::mojom::HttpBody", %"class.blink::mojom::HttpBody"* %179, i64 0, i32 0
  %206 = call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %205, %"class.absl::optional"* dereferenceable(32) %204) #13
  %207 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %180, align 8
  %208 = load %"class.blink::mojom::RequestBody"*, %"class.blink::mojom::RequestBody"** %188, align 8
  %209 = bitcast %"class.std::__1::vector.4"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %209) #13
  %210 = bitcast %"class.mojo::StructPtr.99"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %210) #13
  %211 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %207, i64 0, i32 2, i32 0, i32 0
  %212 = load %"class.network::DataElement"*, %"class.network::DataElement"** %211, align 8
  %213 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %207, i64 0, i32 2, i32 0, i32 1
  %214 = load %"class.network::DataElement"*, %"class.network::DataElement"** %213, align 8
  %215 = icmp eq %"class.network::DataElement"* %212, %214
  br i1 %215, label %404, label %216

216:                                              ; preds = %200
  %217 = bitcast %"class.mojo::StructPtr.95"* %3 to i8*
  %218 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %219 = bitcast %"class.mojo::StructPtr.95"* %3 to i64*
  %220 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 1
  %221 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 0
  %222 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %223 = bitcast i8** %220 to i64*
  %224 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %225 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %226 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %225, i64 0, i32 1, i32 1
  %227 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %228 = bitcast %"class.mojo::StructPtr.99"* %6 to i64*
  %229 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %230 = getelementptr inbounds %"class.blink::mojom::RequestBody", %"class.blink::mojom::RequestBody"* %208, i64 0, i32 0, i32 0, i32 1
  %231 = getelementptr inbounds %"class.blink::mojom::RequestBody", %"class.blink::mojom::RequestBody"* %208, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %232 = getelementptr inbounds %"class.blink::mojom::RequestBody", %"class.blink::mojom::RequestBody"* %208, i64 0, i32 0
  %233 = bitcast %"class.mojo::StructPtr.95"** %230 to i64*
  br label %234

234:                                              ; preds = %401, %216
  %235 = phi %"class.network::DataElement"* [ %212, %216 ], [ %402, %401 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217) #13
  %236 = call i8* @_Znwm(i64 16) #14, !noalias !285
  %237 = bitcast i8* %236 to %"class.blink::mojom::Element"*
  call void @_ZN5blink5mojom7ElementC1Ev(%"class.blink::mojom::Element"* nonnull %237) #13, !noalias !285
  %238 = ptrtoint i8* %236 to i64
  store i64 %238, i64* %219, align 8, !alias.scope !285
  %239 = getelementptr inbounds %"class.network::DataElement", %"class.network::DataElement"* %235, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %240 = load i64, i64* %239, align 8
  switch i64 %240, label %241 [
    i64 4, label %364
    i64 3, label %400
    i64 2, label %385
    i64 1, label %243
  ], !prof !288

241:                                              ; preds = %234
  %242 = call dereferenceable(24) %"class.network::DataElementBytes"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKN7network16DataElementBytesEEET_v() #15
  unreachable

243:                                              ; preds = %234
  %244 = getelementptr inbounds %"class.network::DataElement", %"class.network::DataElement"* %235, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  %246 = getelementptr inbounds %"class.network::DataElement", %"class.network::DataElement"* %235, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %247 = load i64, i64* %246, align 8
  %248 = ptrtoint i8* %245 to i64
  %249 = sub i64 %247, %248
  %250 = getelementptr inbounds i8, i8* %245, i64 %249
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %209, i8 0, i64 24, i1 false) #13
  %251 = icmp eq i64 %249, 0
  br i1 %251, label %359, label %252

252:                                              ; preds = %243
  %253 = icmp slt i64 %249, 0
  br i1 %253, label %254, label %256

254:                                              ; preds = %252
  %255 = bitcast %"class.std::__1::vector.4"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %255) #15
  unreachable

256:                                              ; preds = %252
  %257 = call i8* @_Znwm(i64 %249) #14
  store i8* %257, i8** %220, align 8
  store i8* %257, i8** %221, align 8
  %258 = getelementptr inbounds i8, i8* %257, i64 %249
  store i8* %258, i8** %222, align 8
  %259 = icmp ult i64 %249, 32
  br i1 %259, label %346, label %260

260:                                              ; preds = %256
  %261 = getelementptr i8, i8* %257, i64 %249
  %262 = icmp ult i8* %257, %250
  %263 = icmp ult i8* %245, %261
  %264 = and i1 %262, %263
  br i1 %264, label %346, label %265

265:                                              ; preds = %260
  %266 = and i64 %249, -32
  %267 = getelementptr i8, i8* %257, i64 %266
  %268 = getelementptr i8, i8* %245, i64 %266
  %269 = add i64 %266, -32
  %270 = lshr exact i64 %269, 5
  %271 = add nuw nsw i64 %270, 1
  %272 = and i64 %271, 3
  %273 = icmp ult i64 %269, 96
  br i1 %273, label %325, label %274

274:                                              ; preds = %265
  %275 = sub nsw i64 %271, %272
  br label %276

276:                                              ; preds = %276, %274
  %277 = phi i64 [ 0, %274 ], [ %322, %276 ]
  %278 = phi i64 [ %275, %274 ], [ %323, %276 ]
  %279 = getelementptr i8, i8* %257, i64 %277
  %280 = getelementptr i8, i8* %245, i64 %277
  %281 = bitcast i8* %280 to <16 x i8>*
  %282 = load <16 x i8>, <16 x i8>* %281, align 1, !alias.scope !289
  %283 = getelementptr i8, i8* %280, i64 16
  %284 = bitcast i8* %283 to <16 x i8>*
  %285 = load <16 x i8>, <16 x i8>* %284, align 1, !alias.scope !289
  %286 = bitcast i8* %279 to <16 x i8>*
  store <16 x i8> %282, <16 x i8>* %286, align 1, !alias.scope !292, !noalias !289
  %287 = getelementptr i8, i8* %279, i64 16
  %288 = bitcast i8* %287 to <16 x i8>*
  store <16 x i8> %285, <16 x i8>* %288, align 1, !alias.scope !292, !noalias !289
  %289 = or i64 %277, 32
  %290 = getelementptr i8, i8* %257, i64 %289
  %291 = getelementptr i8, i8* %245, i64 %289
  %292 = bitcast i8* %291 to <16 x i8>*
  %293 = load <16 x i8>, <16 x i8>* %292, align 1, !alias.scope !289
  %294 = getelementptr i8, i8* %291, i64 16
  %295 = bitcast i8* %294 to <16 x i8>*
  %296 = load <16 x i8>, <16 x i8>* %295, align 1, !alias.scope !289
  %297 = bitcast i8* %290 to <16 x i8>*
  store <16 x i8> %293, <16 x i8>* %297, align 1, !alias.scope !292, !noalias !289
  %298 = getelementptr i8, i8* %290, i64 16
  %299 = bitcast i8* %298 to <16 x i8>*
  store <16 x i8> %296, <16 x i8>* %299, align 1, !alias.scope !292, !noalias !289
  %300 = or i64 %277, 64
  %301 = getelementptr i8, i8* %257, i64 %300
  %302 = getelementptr i8, i8* %245, i64 %300
  %303 = bitcast i8* %302 to <16 x i8>*
  %304 = load <16 x i8>, <16 x i8>* %303, align 1, !alias.scope !289
  %305 = getelementptr i8, i8* %302, i64 16
  %306 = bitcast i8* %305 to <16 x i8>*
  %307 = load <16 x i8>, <16 x i8>* %306, align 1, !alias.scope !289
  %308 = bitcast i8* %301 to <16 x i8>*
  store <16 x i8> %304, <16 x i8>* %308, align 1, !alias.scope !292, !noalias !289
  %309 = getelementptr i8, i8* %301, i64 16
  %310 = bitcast i8* %309 to <16 x i8>*
  store <16 x i8> %307, <16 x i8>* %310, align 1, !alias.scope !292, !noalias !289
  %311 = or i64 %277, 96
  %312 = getelementptr i8, i8* %257, i64 %311
  %313 = getelementptr i8, i8* %245, i64 %311
  %314 = bitcast i8* %313 to <16 x i8>*
  %315 = load <16 x i8>, <16 x i8>* %314, align 1, !alias.scope !289
  %316 = getelementptr i8, i8* %313, i64 16
  %317 = bitcast i8* %316 to <16 x i8>*
  %318 = load <16 x i8>, <16 x i8>* %317, align 1, !alias.scope !289
  %319 = bitcast i8* %312 to <16 x i8>*
  store <16 x i8> %315, <16 x i8>* %319, align 1, !alias.scope !292, !noalias !289
  %320 = getelementptr i8, i8* %312, i64 16
  %321 = bitcast i8* %320 to <16 x i8>*
  store <16 x i8> %318, <16 x i8>* %321, align 1, !alias.scope !292, !noalias !289
  %322 = add i64 %277, 128
  %323 = add i64 %278, -4
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %276, !llvm.loop !294

325:                                              ; preds = %276, %265
  %326 = phi i64 [ 0, %265 ], [ %322, %276 ]
  %327 = icmp eq i64 %272, 0
  br i1 %327, label %344, label %328

328:                                              ; preds = %325, %328
  %329 = phi i64 [ %341, %328 ], [ %326, %325 ]
  %330 = phi i64 [ %342, %328 ], [ %272, %325 ]
  %331 = getelementptr i8, i8* %257, i64 %329
  %332 = getelementptr i8, i8* %245, i64 %329
  %333 = bitcast i8* %332 to <16 x i8>*
  %334 = load <16 x i8>, <16 x i8>* %333, align 1, !alias.scope !289
  %335 = getelementptr i8, i8* %332, i64 16
  %336 = bitcast i8* %335 to <16 x i8>*
  %337 = load <16 x i8>, <16 x i8>* %336, align 1, !alias.scope !289
  %338 = bitcast i8* %331 to <16 x i8>*
  store <16 x i8> %334, <16 x i8>* %338, align 1, !alias.scope !292, !noalias !289
  %339 = getelementptr i8, i8* %331, i64 16
  %340 = bitcast i8* %339 to <16 x i8>*
  store <16 x i8> %337, <16 x i8>* %340, align 1, !alias.scope !292, !noalias !289
  %341 = add i64 %329, 32
  %342 = add i64 %330, -1
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %344, label %328, !llvm.loop !295

344:                                              ; preds = %328, %325
  %345 = icmp eq i64 %249, %266
  br i1 %345, label %356, label %346

346:                                              ; preds = %344, %260, %256
  %347 = phi i8* [ %257, %260 ], [ %257, %256 ], [ %267, %344 ]
  %348 = phi i8* [ %245, %260 ], [ %245, %256 ], [ %268, %344 ]
  br label %349

349:                                              ; preds = %346, %349
  %350 = phi i8* [ %354, %349 ], [ %347, %346 ]
  %351 = phi i8* [ %353, %349 ], [ %348, %346 ]
  %352 = load i8, i8* %351, align 1
  store i8 %352, i8* %350, align 1
  %353 = getelementptr inbounds i8, i8* %351, i64 1
  %354 = getelementptr inbounds i8, i8* %350, i64 1
  %355 = icmp eq i8* %353, %250
  br i1 %355, label %356, label %349, !llvm.loop !296

356:                                              ; preds = %349, %344
  %357 = phi i8* [ %267, %344 ], [ %354, %349 ]
  %358 = ptrtoint i8* %357 to i64
  store i64 %358, i64* %223, align 8
  br label %359

359:                                              ; preds = %356, %243
  call void @_ZN5blink5mojom7Element9set_bytesENSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.blink::mojom::Element"* nonnull %237, %"class.std::__1::vector.4"* nonnull %4) #13
  %360 = load i8*, i8** %221, align 8
  %361 = icmp eq i8* %360, null
  br i1 %361, label %385, label %362

362:                                              ; preds = %359
  %363 = ptrtoint i8* %360 to i64
  store i64 %363, i64* %223, align 8
  call void @_ZdlPv(i8* nonnull %360) #14
  br label %385

364:                                              ; preds = %234
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %224) #13
  %365 = getelementptr inbounds %"class.network::DataElement", %"class.network::DataElement"* %235, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNK4base8FilePath13AsUTF16UnsafeEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.base::FilePath"* %365) #13
  %366 = getelementptr inbounds %"class.network::DataElement", %"class.network::DataElement"* %235, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %367 = load i64, i64* %366, align 8
  %368 = getelementptr inbounds %"class.network::DataElement", %"class.network::DataElement"* %235, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %369 = load i64, i64* %368, align 8
  %370 = getelementptr inbounds %"class.network::DataElement", %"class.network::DataElement"* %235, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %371 = load i64, i64* %370, align 8
  %372 = call i8* @_Znwm(i64 48) #14, !noalias !297
  %373 = bitcast i8* %372 to %"class.blink::mojom::File"*
  call void @_ZN5blink5mojom4FileC1ERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEmmN4base4TimeE(%"class.blink::mojom::File"* nonnull %373, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i64 %367, i64 %369, i64 %371) #13, !noalias !297
  %374 = ptrtoint i8* %372 to i64
  %375 = load i8, i8* %226, align 1
  %376 = icmp slt i8 %375, 0
  br i1 %376, label %377, label %379

377:                                              ; preds = %364
  %378 = load i8*, i8** %227, align 8
  call void @_ZdlPv(i8* %378) #14
  br label %379

379:                                              ; preds = %377, %364
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %224) #13
  %380 = load %"class.blink::mojom::Element"*, %"class.blink::mojom::Element"** %218, align 8
  store i64 %374, i64* %228, align 8
  call void @_ZN5blink5mojom7Element8set_fileEN4mojo9StructPtrINS0_4FileEEE(%"class.blink::mojom::Element"* %380, %"class.mojo::StructPtr.99"* nonnull %6) #13
  %381 = load %"class.blink::mojom::File"*, %"class.blink::mojom::File"** %229, align 8
  store %"class.blink::mojom::File"* null, %"class.blink::mojom::File"** %229, align 8
  %382 = icmp eq %"class.blink::mojom::File"* %381, null
  br i1 %382, label %385, label %383

383:                                              ; preds = %379
  call void @_ZN5blink5mojom4FileD1Ev(%"class.blink::mojom::File"* nonnull %381) #13
  %384 = bitcast %"class.blink::mojom::File"* %381 to i8*
  call void @_ZdlPv(i8* %384) #14
  br label %385

385:                                              ; preds = %383, %379, %362, %359, %234
  %386 = load %"class.mojo::StructPtr.95"*, %"class.mojo::StructPtr.95"** %230, align 8
  %387 = load %"class.mojo::StructPtr.95"*, %"class.mojo::StructPtr.95"** %231, align 8
  %388 = icmp ult %"class.mojo::StructPtr.95"* %386, %387
  br i1 %388, label %389, label %395

389:                                              ; preds = %385
  %390 = bitcast %"class.mojo::StructPtr.95"* %386 to i64*
  %391 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %386, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::Element"* null, %"class.blink::mojom::Element"** %391, align 8
  %392 = load i64, i64* %219, align 8
  store i64 %392, i64* %390, align 8
  %393 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %386, i64 1
  %394 = ptrtoint %"class.mojo::StructPtr.95"* %393 to i64
  store i64 %394, i64* %233, align 8
  store %"class.blink::mojom::Element"* null, %"class.blink::mojom::Element"** %218, align 8
  br label %401

395:                                              ; preds = %385
  call void @_ZNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom7ElementEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.93"* %232, %"class.mojo::StructPtr.95"* nonnull dereferenceable(8) %3) #13
  %396 = load %"class.blink::mojom::Element"*, %"class.blink::mojom::Element"** %218, align 8
  store %"class.blink::mojom::Element"* null, %"class.blink::mojom::Element"** %218, align 8
  %397 = icmp eq %"class.blink::mojom::Element"* %396, null
  br i1 %397, label %401, label %398

398:                                              ; preds = %395
  %399 = bitcast %"class.blink::mojom::Element"* %396 to i8*
  call void @_ZN5blink5mojom7ElementD1Ev(%"class.blink::mojom::Element"* nonnull %396) #13
  call void @_ZdlPv(i8* %399) #14
  br label %401

400:                                              ; preds = %234
  store %"class.blink::mojom::Element"* null, %"class.blink::mojom::Element"** %218, align 8
  call void @_ZN5blink5mojom7ElementD1Ev(%"class.blink::mojom::Element"* nonnull %237) #13
  call void @_ZdlPv(i8* nonnull %236) #14
  br label %401

401:                                              ; preds = %389, %395, %398, %400
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #13
  %402 = getelementptr inbounds %"class.network::DataElement", %"class.network::DataElement"* %235, i64 1
  %403 = icmp eq %"class.network::DataElement"* %402, %214
  br i1 %403, label %404, label %234

404:                                              ; preds = %401, %200
  %405 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %207, i64 0, i32 3
  %406 = load i64, i64* %405, align 8
  %407 = getelementptr inbounds %"class.blink::mojom::RequestBody", %"class.blink::mojom::RequestBody"* %208, i64 0, i32 1
  store i64 %406, i64* %407, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %209) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %210) #13
  br label %408

408:                                              ; preds = %178, %404
  %409 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 19
  %410 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 13
  %411 = call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %410, %"class.absl::optional"* dereferenceable(32) %409)
  %412 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 20
  %413 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 14
  %414 = call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %413, %"class.absl::optional"* dereferenceable(32) %412)
  %415 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 21
  %416 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 15
  %417 = call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %416, %"class.absl::optional"* dereferenceable(32) %415)
  %418 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 22, i32 0, i32 0
  %419 = load %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"** %418, align 8
  %420 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 22, i32 0, i32 1
  %421 = load %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"** %420, align 8
  %422 = icmp eq %"struct.blink::ExplodedFrameState"* %419, %421
  br i1 %422, label %431, label %423

423:                                              ; preds = %408
  %424 = bitcast %"class.mojo::StructPtr.69"* %8 to i8*
  %425 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %426 = bitcast %"class.mojo::StructPtr.69"* %8 to i64*
  %427 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 11, i32 0, i32 1
  %428 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %429 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %1, i64 0, i32 11
  %430 = bitcast %"class.mojo::StructPtr.69"** %427 to i64*
  br label %432

431:                                              ; preds = %451, %408
  ret void

432:                                              ; preds = %423, %451
  %433 = phi %"struct.blink::ExplodedFrameState"* [ %419, %423 ], [ %452, %451 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %424) #13
  %434 = call i8* @_Znwm(i64 352) #14, !noalias !300
  %435 = bitcast i8* %434 to %"class.blink::mojom::FrameState"*
  call void @_ZN5blink5mojom10FrameStateC1Ev(%"class.blink::mojom::FrameState"* nonnull %435) #13, !noalias !300
  %436 = ptrtoint i8* %434 to i64
  store i64 %436, i64* %426, align 8, !alias.scope !300
  call fastcc void @_ZN5blink12_GLOBAL__N_115WriteFrameStateERKNS_18ExplodedFrameStateEPNS_5mojom10FrameStateE(%"struct.blink::ExplodedFrameState"* dereferenceable(512) %433, %"class.blink::mojom::FrameState"* nonnull %435)
  %437 = load %"class.mojo::StructPtr.69"*, %"class.mojo::StructPtr.69"** %427, align 8
  %438 = load %"class.mojo::StructPtr.69"*, %"class.mojo::StructPtr.69"** %428, align 8
  %439 = icmp ult %"class.mojo::StructPtr.69"* %437, %438
  br i1 %439, label %440, label %446

440:                                              ; preds = %432
  %441 = bitcast %"class.mojo::StructPtr.69"* %437 to i64*
  %442 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %437, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::FrameState"* null, %"class.blink::mojom::FrameState"** %442, align 8
  %443 = load i64, i64* %426, align 8
  store i64 %443, i64* %441, align 8
  %444 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %437, i64 1
  %445 = ptrtoint %"class.mojo::StructPtr.69"* %444 to i64
  store i64 %445, i64* %430, align 8
  store %"class.blink::mojom::FrameState"* null, %"class.blink::mojom::FrameState"** %425, align 8
  br label %451

446:                                              ; preds = %432
  call void @_ZNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10FrameStateEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.127"* %429, %"class.mojo::StructPtr.69"* nonnull dereferenceable(8) %8) #13
  %447 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %425, align 8
  store %"class.blink::mojom::FrameState"* null, %"class.blink::mojom::FrameState"** %425, align 8
  %448 = icmp eq %"class.blink::mojom::FrameState"* %447, null
  br i1 %448, label %451, label %449

449:                                              ; preds = %446
  call void @_ZN5blink5mojom10FrameStateD1Ev(%"class.blink::mojom::FrameState"* nonnull %447) #13
  %450 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %447, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %450) #14
  br label %451

451:                                              ; preds = %440, %446, %449
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %424) #13
  %452 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %433, i64 1
  %453 = icmp eq %"struct.blink::ExplodedFrameState"* %452, %421
  br i1 %453, label %431, label %432
}

declare void @_ZN4base6Pickle9WriteDataEPKci(%"class.base::Pickle"*, i8*, i32) local_unnamed_addr #7

declare void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"*, i8*) local_unnamed_addr #7

declare void @_ZN5blink5mojom9PageStateC1Ev(%"class.blink::mojom::PageState"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE21__push_back_slow_pathIS9_EEvOT_(%"class.std::__1::vector.40"*, %"class.absl::optional"* dereferenceable(32)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.absl::optional"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.40"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.40"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.absl::optional"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.absl::optional"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.absl::optional"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %36, i64 %9
  %38 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %36, i64 %35
  %39 = ptrtoint %"class.absl::optional"* %38 to i64
  %40 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 32, i1 false) #13
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %36, i64 %9, i32 0, i32 0, i32 0, i32 1, i32 0
  %47 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %40, align 8
  br label %49

49:                                               ; preds = %34, %44
  %50 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 1
  %51 = ptrtoint %"class.absl::optional"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.absl::optional"*, %"class.absl::optional"** %52, align 8
  %54 = load %"class.absl::optional"*, %"class.absl::optional"** %3, align 8
  %55 = icmp eq %"class.absl::optional"* %54, %53
  br i1 %55, label %81, label %56

56:                                               ; preds = %49
  %57 = ptrtoint %"class.absl::optional"* %53 to i64
  %58 = getelementptr %"class.absl::optional", %"class.absl::optional"* %54, i64 -1, i32 0, i32 0, i32 0, i32 0
  %59 = ptrtoint i8* %58 to i64
  %60 = sub i64 %59, %57
  %61 = and i64 %60, 32
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %76

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %54, i64 -1
  %65 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 -1, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 32, i1 false) #13
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %54, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %72 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  %73 = bitcast %"class.std::__1::basic_string"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %65, align 8
  br label %74

74:                                               ; preds = %69, %63
  %75 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 -1
  br label %76

76:                                               ; preds = %74, %56
  %77 = phi %"class.absl::optional"* [ undef, %56 ], [ %75, %74 ]
  %78 = phi %"class.absl::optional"* [ %37, %56 ], [ %75, %74 ]
  %79 = phi %"class.absl::optional"* [ %54, %56 ], [ %64, %74 ]
  %80 = icmp ult i64 %60, 32
  br i1 %80, label %101, label %83

81:                                               ; preds = %49
  %82 = ptrtoint %"class.absl::optional"* %37 to i64
  store i64 %82, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  br label %125

83:                                               ; preds = %76, %136
  %84 = phi %"class.absl::optional"* [ %137, %136 ], [ %78, %76 ]
  %85 = phi %"class.absl::optional"* [ %96, %136 ], [ %79, %76 ]
  %86 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %84, i64 -1, i32 0, i32 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %85, i64 -1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 32, i1 false) #13
  %88 = load i8, i8* %87, align 8, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %95, label %90

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %85, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %92 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %84, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %93 = bitcast %"class.std::__1::basic_string"* %92 to i8*
  %94 = bitcast %"class.std::__1::basic_string"* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %86, align 8
  br label %95

95:                                               ; preds = %90, %83
  %96 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %85, i64 -2
  %97 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %84, i64 -2, i32 0, i32 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 32, i1 false) #13
  %99 = load i8, i8* %98, align 8, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %136, label %131

101:                                              ; preds = %136, %76
  %102 = phi %"class.absl::optional"* [ %77, %76 ], [ %137, %136 ]
  %103 = load %"class.absl::optional"*, %"class.absl::optional"** %52, align 8
  %104 = load %"class.absl::optional"*, %"class.absl::optional"** %3, align 8
  %105 = ptrtoint %"class.absl::optional"* %102 to i64
  store i64 %105, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %106 = icmp eq %"class.absl::optional"* %104, %103
  br i1 %106, label %125, label %107

107:                                              ; preds = %101, %123
  %108 = phi %"class.absl::optional"* [ %109, %123 ], [ %104, %101 ]
  %109 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %108, i64 -1
  %110 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %109, i64 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i8, i8* %110, align 8, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %123, label %113

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %108, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %115 = bitcast %"class.std::__1::basic_string"* %114 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %115, i64 0, i32 1, i32 1
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %113
  %120 = bitcast %"class.std::__1::basic_string"* %114 to i8**
  %121 = load i8*, i8** %120, align 8
  tail call void @_ZdlPv(i8* %121) #14
  br label %122

122:                                              ; preds = %119, %113
  store i8 0, i8* %110, align 8
  br label %123

123:                                              ; preds = %122, %107
  %124 = icmp eq %"class.absl::optional"* %109, %103
  br i1 %124, label %125, label %107

125:                                              ; preds = %123, %81, %101
  %126 = phi %"class.absl::optional"* [ %53, %81 ], [ %103, %101 ], [ %103, %123 ]
  %127 = icmp eq %"class.absl::optional"* %126, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %126, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %129) #14
  br label %130

130:                                              ; preds = %125, %128
  ret void

131:                                              ; preds = %95
  %132 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %85, i64 -2, i32 0, i32 0, i32 0, i32 1, i32 0
  %133 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %84, i64 -2, i32 0, i32 0, i32 0, i32 1, i32 0
  %134 = bitcast %"class.std::__1::basic_string"* %133 to i8*
  %135 = bitcast %"class.std::__1::basic_string"* %132 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %135, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %97, align 8
  br label %136

136:                                              ; preds = %131, %95
  %137 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %84, i64 -2
  %138 = icmp eq %"class.absl::optional"* %96, %53
  br i1 %138, label %101, label %83
}

declare void @_ZN5blink5mojom10FrameStateC1Ev(%"class.blink::mojom::FrameState"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink5mojom10FrameStateD1Ev(%"class.blink::mojom::FrameState"*) unnamed_addr #3

declare void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string.15"* sret, %"class.url::Origin"*) local_unnamed_addr #7

declare void @_ZN5blink5mojom9ViewStateC1Ev(%"class.blink::mojom::ViewState"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink5mojom9ViewStateD1Ev(%"class.blink::mojom::ViewState"*) unnamed_addr #3

declare void @_ZN5blink5mojom8HttpBodyC1Ev(%"class.blink::mojom::HttpBody"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink5mojom8HttpBodyD1Ev(%"class.blink::mojom::HttpBody"*) unnamed_addr #3

declare void @_ZN5blink5mojom11RequestBodyC1Ev(%"class.blink::mojom::RequestBody"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink5mojom11RequestBodyD1Ev(%"class.blink::mojom::RequestBody"*) unnamed_addr #3

declare void @_ZN5blink5mojom7Element9set_bytesENSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.blink::mojom::Element"*, %"class.std::__1::vector.4"*) local_unnamed_addr #7

declare void @_ZN5blink5mojom7Element8set_fileEN4mojo9StructPtrINS0_4FileEEE(%"class.blink::mojom::Element"*, %"class.mojo::StructPtr.99"*) local_unnamed_addr #7

declare void @_ZN5blink5mojom7ElementC1Ev(%"class.blink::mojom::Element"*) unnamed_addr #7

; Function Attrs: noreturn nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.network::DataElementBytes"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKN7network16DataElementBytesEEET_v() local_unnamed_addr #12 comdat {
  tail call void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() #15
  unreachable
}

declare void @_ZN5blink5mojom4FileC1ERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEmmN4base4TimeE(%"class.blink::mojom::File"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, i64) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink5mojom4FileD1Ev(%"class.blink::mojom::File"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom7ElementEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.93"*, %"class.mojo::StructPtr.95"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.mojo::StructPtr.95"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.93"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.93"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.mojo::StructPtr.95"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.mojo::StructPtr.95"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.mojo::StructPtr.95"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %36, i64 %9
  %38 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %36, i64 %35
  %39 = ptrtoint %"class.mojo::StructPtr.95"* %38 to i64
  %40 = bitcast %"class.mojo::StructPtr.95"* %37 to i64*
  %41 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::Element"* null, %"class.blink::mojom::Element"** %41, align 8
  %42 = bitcast %"class.mojo::StructPtr.95"* %1 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %40, align 8
  store i64 0, i64* %42, align 8
  %44 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %37, i64 1
  %45 = ptrtoint %"class.mojo::StructPtr.95"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.mojo::StructPtr.95"*, %"class.mojo::StructPtr.95"** %46, align 8
  %48 = ptrtoint %"class.mojo::StructPtr.95"* %47 to i64
  %49 = load %"class.mojo::StructPtr.95"*, %"class.mojo::StructPtr.95"** %3, align 8
  %50 = icmp eq %"class.mojo::StructPtr.95"* %49, %47
  br i1 %50, label %108, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %49, i64 -1, i32 0, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::mojom::Element"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 3
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.mojo::StructPtr.95"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.mojo::StructPtr.95"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %60, i64 -1
  %64 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %61, i64 -1
  %65 = bitcast %"class.mojo::StructPtr.95"* %63 to i64*
  %66 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::Element"* null, %"class.blink::mojom::Element"** %66, align 8
  %67 = bitcast %"class.mojo::StructPtr.95"* %64 to i64*
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %65, align 8
  store i64 0, i64* %67, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !303

71:                                               ; preds = %59, %51
  %72 = phi %"class.mojo::StructPtr.95"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.mojo::StructPtr.95"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.mojo::StructPtr.95"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 24
  br i1 %75, label %104, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.mojo::StructPtr.95"* [ %97, %76 ], [ %73, %71 ]
  %78 = phi %"class.mojo::StructPtr.95"* [ %98, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %77, i64 -1
  %80 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %78, i64 -1
  %81 = bitcast %"class.mojo::StructPtr.95"* %79 to i64*
  %82 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::Element"* null, %"class.blink::mojom::Element"** %82, align 8
  %83 = bitcast %"class.mojo::StructPtr.95"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* %81, align 8
  store i64 0, i64* %83, align 8
  %85 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %77, i64 -2
  %86 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %78, i64 -2
  %87 = bitcast %"class.mojo::StructPtr.95"* %85 to i64*
  %88 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::Element"* null, %"class.blink::mojom::Element"** %88, align 8
  %89 = bitcast %"class.mojo::StructPtr.95"* %86 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %87, align 8
  store i64 0, i64* %89, align 8
  %91 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %77, i64 -3
  %92 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %78, i64 -3
  %93 = bitcast %"class.mojo::StructPtr.95"* %91 to i64*
  %94 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::Element"* null, %"class.blink::mojom::Element"** %94, align 8
  %95 = bitcast %"class.mojo::StructPtr.95"* %92 to i64*
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %93, align 8
  store i64 0, i64* %95, align 8
  %97 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %77, i64 -4
  %98 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %78, i64 -4
  %99 = bitcast %"class.mojo::StructPtr.95"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::Element"* null, %"class.blink::mojom::Element"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.95"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  store i64 0, i64* %101, align 8
  %103 = icmp eq %"class.mojo::StructPtr.95"* %98, %47
  br i1 %103, label %104, label %76

104:                                              ; preds = %76, %71
  %105 = phi %"class.mojo::StructPtr.95"* [ %72, %71 ], [ %97, %76 ]
  %106 = load i64, i64* %6, align 8
  %107 = load %"class.mojo::StructPtr.95"*, %"class.mojo::StructPtr.95"** %3, align 8
  br label %108

108:                                              ; preds = %34, %104
  %109 = phi %"class.mojo::StructPtr.95"* [ %107, %104 ], [ %47, %34 ]
  %110 = phi %"class.mojo::StructPtr.95"* [ %105, %104 ], [ %37, %34 ]
  %111 = phi i64 [ %106, %104 ], [ %48, %34 ]
  %112 = ptrtoint %"class.mojo::StructPtr.95"* %110 to i64
  store i64 %112, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %113 = inttoptr i64 %111 to %"class.mojo::StructPtr.95"*
  %114 = icmp eq %"class.mojo::StructPtr.95"* %109, %113
  br i1 %114, label %125, label %115

115:                                              ; preds = %108, %123
  %116 = phi %"class.mojo::StructPtr.95"* [ %117, %123 ], [ %109, %108 ]
  %117 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %116, i64 -1
  %118 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %117, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"class.blink::mojom::Element"*, %"class.blink::mojom::Element"** %118, align 8
  store %"class.blink::mojom::Element"* null, %"class.blink::mojom::Element"** %118, align 8
  %120 = icmp eq %"class.blink::mojom::Element"* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %115
  tail call void @_ZN5blink5mojom7ElementD1Ev(%"class.blink::mojom::Element"* nonnull %119) #13
  %122 = bitcast %"class.blink::mojom::Element"* %119 to i8*
  tail call void @_ZdlPv(i8* %122) #14
  br label %123

123:                                              ; preds = %121, %115
  %124 = icmp eq %"class.mojo::StructPtr.95"* %117, %113
  br i1 %124, label %125, label %115

125:                                              ; preds = %123, %108
  %126 = icmp eq i64 %111, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = inttoptr i64 %111 to i8*
  tail call void @_ZdlPv(i8* %128) #14
  br label %129

129:                                              ; preds = %125, %127
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom7ElementD1Ev(%"class.blink::mojom::Element"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10FrameStateEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.127"*, %"class.mojo::StructPtr.69"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.127", %"class.std::__1::vector.127"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.mojo::StructPtr.69"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.127"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.127"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.127", %"class.std::__1::vector.127"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.mojo::StructPtr.69"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.mojo::StructPtr.69"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.mojo::StructPtr.69"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %36, i64 %9
  %38 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %36, i64 %35
  %39 = ptrtoint %"class.mojo::StructPtr.69"* %38 to i64
  %40 = bitcast %"class.mojo::StructPtr.69"* %37 to i64*
  %41 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::FrameState"* null, %"class.blink::mojom::FrameState"** %41, align 8
  %42 = bitcast %"class.mojo::StructPtr.69"* %1 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %40, align 8
  store i64 0, i64* %42, align 8
  %44 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %37, i64 1
  %45 = ptrtoint %"class.mojo::StructPtr.69"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.127", %"class.std::__1::vector.127"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.mojo::StructPtr.69"*, %"class.mojo::StructPtr.69"** %46, align 8
  %48 = ptrtoint %"class.mojo::StructPtr.69"* %47 to i64
  %49 = load %"class.mojo::StructPtr.69"*, %"class.mojo::StructPtr.69"** %3, align 8
  %50 = icmp eq %"class.mojo::StructPtr.69"* %49, %47
  br i1 %50, label %108, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %49, i64 -1, i32 0, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::mojom::FrameState"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 3
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.mojo::StructPtr.69"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.mojo::StructPtr.69"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %60, i64 -1
  %64 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %61, i64 -1
  %65 = bitcast %"class.mojo::StructPtr.69"* %63 to i64*
  %66 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::FrameState"* null, %"class.blink::mojom::FrameState"** %66, align 8
  %67 = bitcast %"class.mojo::StructPtr.69"* %64 to i64*
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %65, align 8
  store i64 0, i64* %67, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !304

71:                                               ; preds = %59, %51
  %72 = phi %"class.mojo::StructPtr.69"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.mojo::StructPtr.69"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.mojo::StructPtr.69"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 24
  br i1 %75, label %104, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.mojo::StructPtr.69"* [ %97, %76 ], [ %73, %71 ]
  %78 = phi %"class.mojo::StructPtr.69"* [ %98, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %77, i64 -1
  %80 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %78, i64 -1
  %81 = bitcast %"class.mojo::StructPtr.69"* %79 to i64*
  %82 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::FrameState"* null, %"class.blink::mojom::FrameState"** %82, align 8
  %83 = bitcast %"class.mojo::StructPtr.69"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* %81, align 8
  store i64 0, i64* %83, align 8
  %85 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %77, i64 -2
  %86 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %78, i64 -2
  %87 = bitcast %"class.mojo::StructPtr.69"* %85 to i64*
  %88 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::FrameState"* null, %"class.blink::mojom::FrameState"** %88, align 8
  %89 = bitcast %"class.mojo::StructPtr.69"* %86 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %87, align 8
  store i64 0, i64* %89, align 8
  %91 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %77, i64 -3
  %92 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %78, i64 -3
  %93 = bitcast %"class.mojo::StructPtr.69"* %91 to i64*
  %94 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::FrameState"* null, %"class.blink::mojom::FrameState"** %94, align 8
  %95 = bitcast %"class.mojo::StructPtr.69"* %92 to i64*
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %93, align 8
  store i64 0, i64* %95, align 8
  %97 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %77, i64 -4
  %98 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %78, i64 -4
  %99 = bitcast %"class.mojo::StructPtr.69"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::FrameState"* null, %"class.blink::mojom::FrameState"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.69"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  store i64 0, i64* %101, align 8
  %103 = icmp eq %"class.mojo::StructPtr.69"* %98, %47
  br i1 %103, label %104, label %76

104:                                              ; preds = %76, %71
  %105 = phi %"class.mojo::StructPtr.69"* [ %72, %71 ], [ %97, %76 ]
  %106 = load i64, i64* %6, align 8
  %107 = load %"class.mojo::StructPtr.69"*, %"class.mojo::StructPtr.69"** %3, align 8
  br label %108

108:                                              ; preds = %34, %104
  %109 = phi %"class.mojo::StructPtr.69"* [ %107, %104 ], [ %47, %34 ]
  %110 = phi %"class.mojo::StructPtr.69"* [ %105, %104 ], [ %37, %34 ]
  %111 = phi i64 [ %106, %104 ], [ %48, %34 ]
  %112 = ptrtoint %"class.mojo::StructPtr.69"* %110 to i64
  store i64 %112, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %113 = inttoptr i64 %111 to %"class.mojo::StructPtr.69"*
  %114 = icmp eq %"class.mojo::StructPtr.69"* %109, %113
  br i1 %114, label %125, label %115

115:                                              ; preds = %108, %123
  %116 = phi %"class.mojo::StructPtr.69"* [ %117, %123 ], [ %109, %108 ]
  %117 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %116, i64 -1
  %118 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %117, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %118, align 8
  store %"class.blink::mojom::FrameState"* null, %"class.blink::mojom::FrameState"** %118, align 8
  %120 = icmp eq %"class.blink::mojom::FrameState"* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %115
  tail call void @_ZN5blink5mojom10FrameStateD1Ev(%"class.blink::mojom::FrameState"* nonnull %119) #13
  %122 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %122) #14
  br label %123

123:                                              ; preds = %121, %115
  %124 = icmp eq %"class.mojo::StructPtr.69"* %117, %113
  br i1 %124, label %125, label %115

125:                                              ; preds = %123, %108
  %126 = icmp eq i64 %111, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = inttoptr i64 %111 to i8*
  tail call void @_ZdlPv(i8* %128) #14
  br label %129

129:                                              ; preds = %125, %127
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal13SerializeImplIN5blink5mojom17PageStateDataViewENSt3__16vectorIhNS5_9allocatorIhEEEENS_9StructPtrINS3_9PageStateEEEEET0_PT1_(%"class.std::__1::vector.4"* noalias sret, %"class.mojo::StructPtr"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.mojo::internal::MessageFragment", align 8
  %4 = alloca %"class.mojo::Message", align 8
  %5 = bitcast %"class.mojo::Message"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %5) #13
  %6 = bitcast %"class.mojo::Message"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 120, i1 false)
  call void @_ZN4mojo7MessageC1EjjmmjPNSt3__16vectorINS_16ScopedHandleBaseINS_6HandleEEENS1_9allocatorIS5_EEEE(%"class.mojo::Message"* nonnull %4, i32 0, i32 0, i64 0, i64 0, i32 1, %"class.std::__1::vector.146"* null) #13
  %7 = bitcast %"class.mojo::internal::MessageFragment"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13, !noalias !305
  %8 = getelementptr inbounds %"class.mojo::internal::MessageFragment", %"class.mojo::internal::MessageFragment"* %3, i64 0, i32 0
  %9 = getelementptr inbounds %"class.mojo::internal::MessageFragment", %"class.mojo::internal::MessageFragment"* %3, i64 0, i32 1
  store %"class.mojo::Message"* %4, %"class.mojo::Message"** %8, align 8, !noalias !305
  store i64 -1, i64* %9, align 8, !noalias !305
  call void @_ZN4mojo8internal10SerializerIN5blink5mojom17PageStateDataViewENS_9StructPtrINS3_9PageStateEEEE9SerializeERS7_RNS0_15MessageFragmentINS3_8internal14PageState_DataEEE(%"class.mojo::StructPtr"* dereferenceable(8) %1, %"class.mojo::internal::MessageFragment"* nonnull dereferenceable(16) %3) #13
  call void @_ZN4mojo7Message16SerializeHandlesEPNS_25AssociatedGroupControllerE(%"class.mojo::Message"* nonnull %4, %"class.mojo::AssociatedGroupController"* null) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13, !noalias !305
  %10 = call i32 @_ZNK4mojo7Message17payload_num_bytesEv(%"class.mojo::Message"* nonnull %4) #13
  %11 = zext i32 %10 to i64
  %12 = bitcast %"class.std::__1::vector.4"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #13
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %27, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %18 = call i8* @_Znwm(i64 %11) #14
  store i8* %18, i8** %15, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %11
  store i8* %19, i8** %16, align 8
  %20 = bitcast i8** %17 to i64*
  %21 = ptrtoint i8* %18 to i64
  %22 = sub i64 %11, %21
  %23 = getelementptr i8, i8* %18, i64 %22
  %24 = ptrtoint i8* %23 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %18, i8 0, i64 %24, i1 false) #13
  %25 = ptrtoint i8* %19 to i64
  store i64 %25, i64* %20, align 8
  %26 = call i8* @_ZNK4mojo7Message7payloadEv(%"class.mojo::Message"* nonnull %4) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %26, i64 %11, i1 false)
  br label %27

27:                                               ; preds = %2, %14
  call void @_ZN4mojo7MessageD1Ev(%"class.mojo::Message"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %5) #13
  ret void
}

declare i32 @_ZNK4mojo7Message17payload_num_bytesEv(%"class.mojo::Message"*) local_unnamed_addr #7

declare i8* @_ZNK4mojo7Message7payloadEv(%"class.mojo::Message"*) local_unnamed_addr #7

declare void @_ZN4mojo7MessageC1EjjmmjPNSt3__16vectorINS_16ScopedHandleBaseINS_6HandleEEENS1_9allocatorIS5_EEEE(%"class.mojo::Message"*, i32, i32, i64, i64, i32, %"class.std::__1::vector.146"*) unnamed_addr #7

declare void @_ZN4mojo7Message16SerializeHandlesEPNS_25AssociatedGroupControllerE(%"class.mojo::Message"*, %"class.mojo::AssociatedGroupController"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal10SerializerIN5blink5mojom17PageStateDataViewENS_9StructPtrINS3_9PageStateEEEE9SerializeERS7_RNS0_15MessageFragmentINS3_8internal14PageState_DataEEE(%"class.mojo::StructPtr"* dereferenceable(8), %"class.mojo::internal::MessageFragment"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::internal::MessageFragment.206", align 8
  %4 = alloca %"class.mojo::internal::ContainerValidateParams", align 8
  %5 = alloca %"class.mojo::internal::ContainerValidateParams"*, align 8
  %6 = alloca %"class.mojo::internal::MessageFragment.207", align 8
  %7 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::mojom::PageState"*, %"class.blink::mojom::PageState"** %7, align 8
  %9 = icmp eq %"class.blink::mojom::PageState"* %8, null
  br i1 %9, label %87, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.mojo::internal::MessageFragment", %"class.mojo::internal::MessageFragment"* %1, i64 0, i32 0
  %12 = load %"class.mojo::Message"*, %"class.mojo::Message"** %11, align 8
  %13 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %12, i64 0, i32 1
  %14 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %13, i64 24) #13
  %15 = getelementptr inbounds %"class.mojo::internal::MessageFragment", %"class.mojo::internal::MessageFragment"* %1, i64 0, i32 1
  store i64 %14, i64* %15, align 8
  %16 = load %"class.mojo::Message"*, %"class.mojo::Message"** %11, align 8
  %17 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %16, i64 0, i32 1, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %14
  %20 = bitcast i8* %19 to %"class.blink::mojom::internal::PageState_Data"*
  tail call void @_ZN5blink5mojom8internal14PageState_DataC1Ev(%"class.blink::mojom::internal::PageState_Data"* %20) #13
  %21 = load %"class.blink::mojom::PageState"*, %"class.blink::mojom::PageState"** %7, align 8
  %22 = getelementptr inbounds %"class.blink::mojom::PageState", %"class.blink::mojom::PageState"* %21, i64 0, i32 0
  %23 = bitcast %"class.mojo::internal::MessageFragment.206"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"class.mojo::internal::MessageFragment.206", %"class.mojo::internal::MessageFragment.206"* %3, i64 0, i32 1
  %25 = bitcast %"class.mojo::internal::MessageFragment"* %1 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.mojo::internal::MessageFragment.206"* %3 to i64*
  store i64 %26, i64* %27, align 8
  store i64 -1, i64* %24, align 8
  %28 = bitcast %"class.mojo::internal::ContainerValidateParams"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #13
  %29 = bitcast %"class.mojo::internal::ContainerValidateParams"* %4 to i64*
  store i64 -6148914691236517206, i64* %29, align 8
  %30 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %4, i64 0, i32 0
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %4, i64 0, i32 1
  store i8 1, i8* %31, align 4
  %32 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %4, i64 0, i32 2
  %33 = bitcast %"class.mojo::internal::ContainerValidateParams"** %5 to i8*
  %34 = bitcast %"class.mojo::internal::ContainerValidateParams"** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  store %"class.mojo::internal::ContainerValidateParams"* %4, %"class.mojo::internal::ContainerValidateParams"** %5, align 8
  call void @_ZN4mojo8internal9SerializeINS_13ArrayDataViewIN9mojo_base5mojom16String16DataViewEEERKNSt3__16vectorIN4absl8optionalINS7_12basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEEEENSE_ISH_EEEEJRNS0_15MessageFragmentINS0_10Array_DataINS0_7PointerINS4_8internal13String16_DataEEEEEEEPKNS0_23ContainerValidateParamsEELPv0EEEvOT0_DpOT1_(%"class.std::__1::vector.40"* dereferenceable(24) %22, %"class.mojo::internal::MessageFragment.206"* nonnull dereferenceable(16) %3, %"class.mojo::internal::ContainerValidateParams"** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %35 = load %"class.mojo::Message"*, %"class.mojo::Message"** %11, align 8
  %36 = load i64, i64* %15, align 8
  %37 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %35, i64 0, i32 1, i32 2
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 %36
  %40 = getelementptr inbounds i8, i8* %39, i64 8
  %41 = load i64, i64* %24, align 8
  %42 = icmp eq i64 %41, -1
  br i1 %42, label %50, label %43

43:                                               ; preds = %10
  %44 = getelementptr inbounds %"class.mojo::internal::MessageFragment.206", %"class.mojo::internal::MessageFragment.206"* %3, i64 0, i32 0
  %45 = load %"class.mojo::Message"*, %"class.mojo::Message"** %44, align 8
  %46 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %45, i64 0, i32 1, i32 2
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 %41
  %49 = bitcast i8* %48 to %"class.mojo::internal::Array_Data"*
  br label %50

50:                                               ; preds = %10, %43
  %51 = phi %"class.mojo::internal::Array_Data"* [ %49, %43 ], [ null, %10 ]
  %52 = bitcast i8* %40 to i64*
  %53 = icmp eq %"class.mojo::internal::Array_Data"* %51, null
  %54 = ptrtoint %"class.mojo::internal::Array_Data"* %51 to i64
  %55 = ptrtoint i8* %40 to i64
  %56 = sub i64 %54, %55
  %57 = select i1 %53, i64 0, i64 %56
  store i64 %57, i64* %52, align 8
  %58 = load %"class.blink::mojom::PageState"*, %"class.blink::mojom::PageState"** %7, align 8
  %59 = getelementptr inbounds %"class.blink::mojom::PageState", %"class.blink::mojom::PageState"* %58, i64 0, i32 1
  %60 = bitcast %"class.mojo::internal::MessageFragment.207"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #13
  %61 = getelementptr inbounds %"class.mojo::internal::MessageFragment.207", %"class.mojo::internal::MessageFragment.207"* %6, i64 0, i32 1
  %62 = load i64, i64* %25, align 8
  %63 = bitcast %"class.mojo::internal::MessageFragment.207"* %6 to i64*
  store i64 %62, i64* %63, align 8
  store i64 -1, i64* %61, align 8
  call void @_ZN4mojo8internal10SerializerIN5blink5mojom18FrameStateDataViewEKNS_9StructPtrINS3_10FrameStateEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal15FrameState_DataEEE(%"class.mojo::StructPtr.69"* dereferenceable(8) %59, %"class.mojo::internal::MessageFragment.207"* nonnull dereferenceable(16) %6) #13
  %64 = load %"class.mojo::Message"*, %"class.mojo::Message"** %11, align 8
  %65 = load i64, i64* %15, align 8
  %66 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %64, i64 0, i32 1, i32 2
  %67 = load i8*, i8** %66, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 %65
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = load i64, i64* %61, align 8
  %71 = icmp eq i64 %70, -1
  br i1 %71, label %79, label %72

72:                                               ; preds = %50
  %73 = getelementptr inbounds %"class.mojo::internal::MessageFragment.207", %"class.mojo::internal::MessageFragment.207"* %6, i64 0, i32 0
  %74 = load %"class.mojo::Message"*, %"class.mojo::Message"** %73, align 8
  %75 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %74, i64 0, i32 1, i32 2
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 %70
  %78 = bitcast i8* %77 to %"class.blink::mojom::internal::FrameState_Data"*
  br label %79

79:                                               ; preds = %50, %72
  %80 = phi %"class.blink::mojom::internal::FrameState_Data"* [ %78, %72 ], [ null, %50 ]
  %81 = bitcast i8* %69 to i64*
  %82 = icmp eq %"class.blink::mojom::internal::FrameState_Data"* %80, null
  %83 = ptrtoint %"class.blink::mojom::internal::FrameState_Data"* %80 to i64
  %84 = ptrtoint i8* %69 to i64
  %85 = sub i64 %83, %84
  %86 = select i1 %82, i64 0, i64 %85
  store i64 %86, i64* %81, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #13
  call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #13
  br label %87

87:                                               ; preds = %2, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal9SerializeINS_13ArrayDataViewIN9mojo_base5mojom16String16DataViewEEERKNSt3__16vectorIN4absl8optionalINS7_12basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEEEENSE_ISH_EEEEJRNS0_15MessageFragmentINS0_10Array_DataINS0_7PointerINS4_8internal13String16_DataEEEEEEEPKNS0_23ContainerValidateParamsEELPv0EEEvOT0_DpOT1_(%"class.std::__1::vector.40"* dereferenceable(24), %"class.mojo::internal::MessageFragment.206"* dereferenceable(16), %"class.mojo::internal::ContainerValidateParams"** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.mojo::internal::MessageFragment.213", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.absl::optional"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.40"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 5
  %12 = icmp ugt i64 %11, 536870910
  br i1 %12, label %35, label %13

13:                                               ; preds = %3
  %14 = trunc i64 %11 to i32
  %15 = lshr exact i64 %10, 2
  %16 = trunc i64 %15 to i32
  %17 = add nuw i32 %16, 8
  %18 = getelementptr inbounds %"class.mojo::internal::MessageFragment.206", %"class.mojo::internal::MessageFragment.206"* %1, i64 0, i32 0
  %19 = load %"class.mojo::Message"*, %"class.mojo::Message"** %18, align 8
  %20 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %19, i64 0, i32 1
  %21 = zext i32 %17 to i64
  %22 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %20, i64 %21) #13
  %23 = getelementptr inbounds %"class.mojo::internal::MessageFragment.206", %"class.mojo::internal::MessageFragment.206"* %1, i64 0, i32 1
  store i64 %22, i64* %23, align 8
  %24 = load %"class.mojo::Message"*, %"class.mojo::Message"** %18, align 8
  %25 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %24, i64 0, i32 1, i32 2
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 %22
  %28 = bitcast i8* %27 to i32*
  store i32 %17, i32* %28, align 1
  %29 = getelementptr inbounds i8, i8* %27, i64 4
  %30 = bitcast i8* %29 to i32*
  store i32 %14, i32* %30, align 1
  %31 = load i64, i64* %6, align 8
  %32 = load i64, i64* %8, align 8
  %33 = sub i64 %31, %32
  %34 = ashr exact i64 %33, 5
  br label %35

35:                                               ; preds = %3, %13
  %36 = phi i64 [ %11, %3 ], [ %34, %13 ]
  %37 = phi i64 [ %10, %3 ], [ %33, %13 ]
  %38 = phi i64 [ %9, %3 ], [ %32, %13 ]
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %91, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to %"class.absl::optional"*
  %42 = bitcast %"class.mojo::internal::MessageFragment.213"* %4 to i8*
  %43 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %4, i64 0, i32 0
  %44 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %4, i64 0, i32 1
  %45 = getelementptr inbounds %"class.mojo::internal::MessageFragment.206", %"class.mojo::internal::MessageFragment.206"* %1, i64 0, i32 0
  %46 = bitcast %"class.mojo::internal::MessageFragment.206"* %1 to i64*
  %47 = bitcast %"class.mojo::internal::MessageFragment.213"* %4 to i64*
  %48 = getelementptr inbounds %"class.mojo::internal::MessageFragment.206", %"class.mojo::internal::MessageFragment.206"* %1, i64 0, i32 1
  %49 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 0
  br label %50

50:                                               ; preds = %89, %40
  %51 = phi %"class.absl::optional"* [ %41, %40 ], [ %90, %89 ]
  %52 = phi i64 [ 0, %40 ], [ %54, %89 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #13
  %53 = load i64, i64* %46, align 8
  store i64 %53, i64* %47, align 8
  store i64 -1, i64* %44, align 8
  %54 = add nuw i64 %52, 1
  %55 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %51, i64 %52, i32 0, i32 0, i32 0, i32 0
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  %58 = inttoptr i64 %53 to %"class.mojo::Message"*
  br i1 %57, label %63, label %59

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %51, i64 %52, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4mojo8internal10SerializerIN9mojo_base5mojom16String16DataViewEKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEE9SerializeERSC_RNS0_15MessageFragmentINS3_8internal13String16_DataEEE(%"class.std::__1::basic_string"* dereferenceable(24) %60, %"class.mojo::internal::MessageFragment.213"* nonnull dereferenceable(16) %4) #13
  %61 = load i64, i64* %44, align 8
  %62 = load %"class.mojo::Message"*, %"class.mojo::Message"** %45, align 8
  br label %63

63:                                               ; preds = %59, %50
  %64 = phi %"class.mojo::Message"* [ %58, %50 ], [ %62, %59 ]
  %65 = phi i64 [ -1, %50 ], [ %61, %59 ]
  %66 = load i64, i64* %48, align 8
  %67 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %64, i64 0, i32 1, i32 2
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 8
  %70 = getelementptr inbounds i8, i8* %69, i64 %66
  %71 = bitcast i8* %70 to %"class.mojo::internal::Array_Data"*
  %72 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %71, i64 %52
  %73 = icmp eq i64 %65, -1
  br i1 %73, label %80, label %74

74:                                               ; preds = %63
  %75 = load %"class.mojo::Message"*, %"class.mojo::Message"** %43, align 8
  %76 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %75, i64 0, i32 1, i32 2
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 %65
  %79 = bitcast i8* %78 to %"class.mojo_base::mojom::internal::String16_Data"*
  br label %80

80:                                               ; preds = %74, %63
  %81 = phi %"class.mojo_base::mojom::internal::String16_Data"* [ %79, %74 ], [ null, %63 ]
  %82 = bitcast %"class.mojo::internal::Array_Data"* %72 to i64*
  %83 = icmp eq %"class.mojo_base::mojom::internal::String16_Data"* %81, null
  %84 = ptrtoint %"class.mojo_base::mojom::internal::String16_Data"* %81 to i64
  %85 = ptrtoint %"class.mojo::internal::Array_Data"* %72 to i64
  %86 = sub i64 %84, %85
  %87 = select i1 %83, i64 0, i64 %86
  store i64 %87, i64* %82, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13
  %88 = icmp ult i64 %54, %36
  br i1 %88, label %89, label %91

89:                                               ; preds = %80
  %90 = load %"class.absl::optional"*, %"class.absl::optional"** %49, align 8
  br label %50

91:                                               ; preds = %80, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %0, i64 0, i32 3
  %3 = load %"class.mojo::internal::ContainerValidateParams"*, %"class.mojo::internal::ContainerValidateParams"** %2, align 8
  %4 = icmp eq %"class.mojo::internal::ContainerValidateParams"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %3) #13
  %6 = bitcast %"class.mojo::internal::ContainerValidateParams"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %0, i64 0, i32 2
  %9 = load %"class.mojo::internal::ContainerValidateParams"*, %"class.mojo::internal::ContainerValidateParams"** %8, align 8
  %10 = icmp eq %"class.mojo::internal::ContainerValidateParams"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %9) #13
  %12 = bitcast %"class.mojo::internal::ContainerValidateParams"* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  ret void

13:                                               ; preds = %7
  ret void
}

declare i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"*, i64) local_unnamed_addr #7

declare void @_ZN5blink5mojom8internal14PageState_DataC1Ev(%"class.blink::mojom::internal::PageState_Data"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal10SerializerIN9mojo_base5mojom16String16DataViewEKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEE9SerializeERSC_RNS0_15MessageFragmentINS3_8internal13String16_DataEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.mojo::internal::MessageFragment.213"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::internal::ContainerValidateParams", align 8
  %4 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %1, i64 0, i32 0
  %5 = load %"class.mojo::Message"*, %"class.mojo::Message"** %4, align 8
  %6 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %5, i64 0, i32 1
  %7 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %6, i64 16) #13
  %8 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %1, i64 0, i32 1
  store i64 %7, i64* %8, align 8
  %9 = load %"class.mojo::Message"*, %"class.mojo::Message"** %4, align 8
  %10 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %9, i64 0, i32 1, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %7
  %13 = bitcast i8* %12 to %"class.mojo_base::mojom::internal::String16_Data"*
  tail call void @_ZN9mojo_base5mojom8internal13String16_DataC1Ev(%"class.mojo_base::mojom::internal::String16_Data"* %13) #13
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %21 = select i1 %17, i16* %19, i16* %20
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %16 to i64
  %25 = select i1 %17, i64 %23, i64 %24
  %26 = load %"class.mojo::Message"*, %"class.mojo::Message"** %4, align 8
  %27 = bitcast %"class.mojo::internal::ContainerValidateParams"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #13
  %28 = bitcast %"class.mojo::internal::ContainerValidateParams"* %3 to i64*
  store i64 -6148914691236517206, i64* %28, align 8
  %29 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %3, i64 0, i32 0
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %3, i64 0, i32 1
  store i8 0, i8* %30, align 4
  %31 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %3, i64 0, i32 2
  %32 = icmp ugt i64 %25, 2147483643
  %33 = bitcast %"class.mojo::internal::ContainerValidateParams"** %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false)
  br i1 %32, label %48, label %34

34:                                               ; preds = %2
  %35 = trunc i64 %25 to i32
  %36 = shl i32 %35, 1
  %37 = add nuw i32 %36, 8
  %38 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %26, i64 0, i32 1
  %39 = zext i32 %37 to i64
  %40 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %38, i64 %39) #13
  %41 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %26, i64 0, i32 1, i32 2
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 %40
  %44 = bitcast i8* %43 to i32*
  store i32 %37, i32* %44, align 1
  %45 = getelementptr inbounds i8, i8* %43, i64 4
  %46 = bitcast i8* %45 to i32*
  store i32 %35, i32* %46, align 1
  %47 = icmp eq i64 %25, 0
  br i1 %47, label %196, label %48

48:                                               ; preds = %34, %2
  %49 = phi i64 [ -1, %2 ], [ %40, %34 ]
  %50 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %26, i64 0, i32 1, i32 2
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %49
  %53 = icmp eq i16* %21, null
  %54 = getelementptr inbounds i8, i8* %52, i64 8
  br i1 %53, label %55, label %174

55:                                               ; preds = %48
  %56 = bitcast i8* %54 to i16*
  %57 = load i16, i16* null, align 536870912
  store i16 %57, i16* %56, align 2
  %58 = icmp eq i64 %25, 1
  br i1 %58, label %196, label %59

59:                                               ; preds = %55
  %60 = add i64 %25, -1
  %61 = icmp ult i64 %60, 16
  br i1 %61, label %62, label %81

62:                                               ; preds = %172, %81, %59
  %63 = phi i64 [ 1, %81 ], [ 1, %59 ], [ %94, %172 ]
  %64 = sub i64 %25, %63
  %65 = xor i64 %63, -1
  %66 = add i64 %25, %65
  %67 = and i64 %64, 3
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %78, label %69

69:                                               ; preds = %62, %69
  %70 = phi i64 [ %72, %69 ], [ %63, %62 ]
  %71 = phi i64 [ %76, %69 ], [ %67, %62 ]
  %72 = add nuw i64 %70, 1
  %73 = getelementptr inbounds i16, i16* null, i64 %70
  %74 = load i16, i16* %73, align 2
  %75 = getelementptr inbounds i16, i16* %56, i64 %70
  store i16 %74, i16* %75, align 2
  %76 = add i64 %71, -1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %69, !llvm.loop !308

78:                                               ; preds = %69, %62
  %79 = phi i64 [ %63, %62 ], [ %72, %69 ]
  %80 = icmp ult i64 %66, 3
  br i1 %80, label %196, label %177

81:                                               ; preds = %59
  %82 = add i64 %49, 10
  %83 = getelementptr i8, i8* %51, i64 %82
  %84 = shl i64 %25, 1
  %85 = inttoptr i64 %84 to i8*
  %86 = add i64 %49, %84
  %87 = add i64 %86, 8
  %88 = getelementptr i8, i8* %51, i64 %87
  %89 = icmp ult i8* %83, %85
  %90 = icmp ugt i8* %88, inttoptr (i64 2 to i8*)
  %91 = and i1 %89, %90
  br i1 %91, label %62, label %92

92:                                               ; preds = %81
  %93 = and i64 %60, -16
  %94 = or i64 %93, 1
  %95 = add i64 %93, -16
  %96 = lshr exact i64 %95, 4
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 3
  %99 = icmp ult i64 %95, 48
  br i1 %99, label %152, label %100

100:                                              ; preds = %92
  %101 = sub nsw i64 %97, %98
  br label %102

102:                                              ; preds = %102, %100
  %103 = phi i64 [ 0, %100 ], [ %149, %102 ]
  %104 = phi i64 [ %101, %100 ], [ %150, %102 ]
  %105 = or i64 %103, 1
  %106 = getelementptr inbounds i16, i16* null, i64 %105
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !309
  %109 = getelementptr inbounds i16, i16* %106, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !309
  %112 = getelementptr inbounds i16, i16* %56, i64 %105
  %113 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %113, align 2, !alias.scope !312, !noalias !309
  %114 = getelementptr inbounds i16, i16* %112, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !312, !noalias !309
  %116 = or i64 %103, 17
  %117 = getelementptr inbounds i16, i16* null, i64 %116
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !309
  %120 = getelementptr inbounds i16, i16* %117, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !309
  %123 = getelementptr inbounds i16, i16* %56, i64 %116
  %124 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %124, align 2, !alias.scope !312, !noalias !309
  %125 = getelementptr inbounds i16, i16* %123, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !312, !noalias !309
  %127 = or i64 %103, 33
  %128 = getelementptr inbounds i16, i16* null, i64 %127
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !309
  %131 = getelementptr inbounds i16, i16* %128, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !309
  %134 = getelementptr inbounds i16, i16* %56, i64 %127
  %135 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %135, align 2, !alias.scope !312, !noalias !309
  %136 = getelementptr inbounds i16, i16* %134, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %137, align 2, !alias.scope !312, !noalias !309
  %138 = or i64 %103, 49
  %139 = getelementptr inbounds i16, i16* null, i64 %138
  %140 = bitcast i16* %139 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !309
  %142 = getelementptr inbounds i16, i16* %139, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !309
  %145 = getelementptr inbounds i16, i16* %56, i64 %138
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %146, align 2, !alias.scope !312, !noalias !309
  %147 = getelementptr inbounds i16, i16* %145, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %148, align 2, !alias.scope !312, !noalias !309
  %149 = add i64 %103, 64
  %150 = add i64 %104, -4
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %102, !llvm.loop !314

152:                                              ; preds = %102, %92
  %153 = phi i64 [ 0, %92 ], [ %149, %102 ]
  %154 = icmp eq i64 %98, 0
  br i1 %154, label %172, label %155

155:                                              ; preds = %152, %155
  %156 = phi i64 [ %169, %155 ], [ %153, %152 ]
  %157 = phi i64 [ %170, %155 ], [ %98, %152 ]
  %158 = or i64 %156, 1
  %159 = getelementptr inbounds i16, i16* null, i64 %158
  %160 = bitcast i16* %159 to <8 x i16>*
  %161 = load <8 x i16>, <8 x i16>* %160, align 2, !alias.scope !309
  %162 = getelementptr inbounds i16, i16* %159, i64 8
  %163 = bitcast i16* %162 to <8 x i16>*
  %164 = load <8 x i16>, <8 x i16>* %163, align 2, !alias.scope !309
  %165 = getelementptr inbounds i16, i16* %56, i64 %158
  %166 = bitcast i16* %165 to <8 x i16>*
  store <8 x i16> %161, <8 x i16>* %166, align 2, !alias.scope !312, !noalias !309
  %167 = getelementptr inbounds i16, i16* %165, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  store <8 x i16> %164, <8 x i16>* %168, align 2, !alias.scope !312, !noalias !309
  %169 = add i64 %156, 16
  %170 = add i64 %157, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %155, !llvm.loop !315

172:                                              ; preds = %155, %152
  %173 = icmp eq i64 %60, %93
  br i1 %173, label %196, label %62

174:                                              ; preds = %48
  %175 = bitcast i16* %21 to i8*
  %176 = shl i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %54, i8* nonnull align 2 %175, i64 %176, i1 false) #13
  br label %196

177:                                              ; preds = %78, %177
  %178 = phi i64 [ %191, %177 ], [ %79, %78 ]
  %179 = add nuw i64 %178, 1
  %180 = getelementptr inbounds i16, i16* null, i64 %178
  %181 = load i16, i16* %180, align 2
  %182 = getelementptr inbounds i16, i16* %56, i64 %178
  store i16 %181, i16* %182, align 2
  %183 = add nuw i64 %178, 2
  %184 = getelementptr inbounds i16, i16* null, i64 %179
  %185 = load i16, i16* %184, align 2
  %186 = getelementptr inbounds i16, i16* %56, i64 %179
  store i16 %185, i16* %186, align 2
  %187 = add nuw i64 %178, 3
  %188 = getelementptr inbounds i16, i16* null, i64 %183
  %189 = load i16, i16* %188, align 2
  %190 = getelementptr inbounds i16, i16* %56, i64 %183
  store i16 %189, i16* %190, align 2
  %191 = add nuw i64 %178, 4
  %192 = getelementptr inbounds i16, i16* null, i64 %187
  %193 = load i16, i16* %192, align 2
  %194 = getelementptr inbounds i16, i16* %56, i64 %187
  store i16 %193, i16* %194, align 2
  %195 = icmp eq i64 %191, %25
  br i1 %195, label %196, label %177, !llvm.loop !316

196:                                              ; preds = %78, %177, %172, %34, %55, %174
  %197 = phi i64 [ %49, %55 ], [ %49, %174 ], [ %40, %34 ], [ %49, %172 ], [ %49, %177 ], [ %49, %78 ]
  %198 = load %"class.mojo::Message"*, %"class.mojo::Message"** %4, align 8
  %199 = load i64, i64* %8, align 8
  %200 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %198, i64 0, i32 1, i32 2
  %201 = load i8*, i8** %200, align 8
  %202 = getelementptr inbounds i8, i8* %201, i64 %199
  %203 = getelementptr inbounds i8, i8* %202, i64 8
  %204 = icmp eq i64 %197, -1
  br i1 %204, label %210, label %205

205:                                              ; preds = %196
  %206 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %26, i64 0, i32 1, i32 2
  %207 = load i8*, i8** %206, align 8
  %208 = getelementptr inbounds i8, i8* %207, i64 %197
  %209 = bitcast i8* %208 to %"class.mojo::internal::Array_Data.216"*
  br label %210

210:                                              ; preds = %205, %196
  %211 = phi %"class.mojo::internal::Array_Data.216"* [ %209, %205 ], [ null, %196 ]
  %212 = bitcast i8* %203 to i64*
  %213 = icmp eq %"class.mojo::internal::Array_Data.216"* %211, null
  %214 = ptrtoint %"class.mojo::internal::Array_Data.216"* %211 to i64
  %215 = ptrtoint i8* %203 to i64
  %216 = sub i64 %214, %215
  %217 = select i1 %213, i64 0, i64 %216
  store i64 %217, i64* %212, align 8
  call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #13
  ret void
}

declare void @_ZN9mojo_base5mojom8internal13String16_DataC1Ev(%"class.mojo_base::mojom::internal::String16_Data"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal10SerializerIN5blink5mojom18FrameStateDataViewEKNS_9StructPtrINS3_10FrameStateEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal15FrameState_DataEEE(%"class.mojo::StructPtr.69"* dereferenceable(8), %"class.mojo::internal::MessageFragment.207"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::internal::MessageFragment.207", align 8
  %4 = alloca %"class.mojo::internal::MessageFragment.213", align 8
  %5 = alloca %"class.mojo::internal::MessageFragment.213", align 8
  %6 = alloca %"class.mojo::internal::MessageFragment.213", align 8
  %7 = alloca %"class.mojo::internal::MessageFragment.213", align 8
  %8 = alloca %"class.mojo::internal::MessageFragment.206", align 8
  %9 = alloca %"class.mojo::internal::ContainerValidateParams", align 8
  %10 = alloca %"class.mojo::internal::ContainerValidateParams"*, align 8
  %11 = alloca %"class.mojo::internal::MessageFragment.218", align 8
  %12 = alloca %"class.mojo::internal::MessageFragment.221", align 8
  %13 = alloca %"class.mojo::internal::ContainerValidateParams", align 8
  %14 = alloca %"class.mojo::internal::MessageFragment.225", align 8
  %15 = alloca %"class.mojo::internal::MessageFragment.213", align 8
  %16 = alloca %"class.mojo::internal::MessageFragment.213", align 8
  %17 = alloca %"class.mojo::internal::MessageFragment.213", align 8
  %18 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %18, align 8
  %20 = icmp eq %"class.blink::mojom::FrameState"* %19, null
  br i1 %20, label %593, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.mojo::internal::MessageFragment.207", %"class.mojo::internal::MessageFragment.207"* %1, i64 0, i32 0
  %23 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %24 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %23, i64 0, i32 1
  %25 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %24, i64 128) #13
  %26 = getelementptr inbounds %"class.mojo::internal::MessageFragment.207", %"class.mojo::internal::MessageFragment.207"* %1, i64 0, i32 1
  store i64 %25, i64* %26, align 8
  %27 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %28 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %27, i64 0, i32 1, i32 2
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 %25
  %31 = bitcast i8* %30 to %"class.blink::mojom::internal::FrameState_Data"*
  tail call void @_ZN5blink5mojom8internal15FrameState_DataC1Ev(%"class.blink::mojom::internal::FrameState_Data"* %31) #13
  %32 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %18, align 8
  %33 = bitcast %"class.mojo::internal::MessageFragment.213"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %4, i64 0, i32 0
  %35 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %4, i64 0, i32 1
  %36 = bitcast %"class.mojo::internal::MessageFragment.207"* %1 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.mojo::internal::MessageFragment.213"* %4 to i64*
  store i64 %37, i64* %38, align 8
  store i64 -1, i64* %35, align 8
  %39 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %49

42:                                               ; preds = %21
  %43 = inttoptr i64 %37 to %"class.mojo::Message"*
  %44 = load i64, i64* %26, align 8
  %45 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %43, i64 0, i32 1, i32 2
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 %44
  %48 = getelementptr inbounds i8, i8* %47, i64 8
  br label %65

49:                                               ; preds = %21
  %50 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4mojo8internal10SerializerIN9mojo_base5mojom16String16DataViewEKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEE9SerializeERSC_RNS0_15MessageFragmentINS3_8internal13String16_DataEEE(%"class.std::__1::basic_string"* dereferenceable(24) %50, %"class.mojo::internal::MessageFragment.213"* nonnull dereferenceable(16) %4) #13
  %51 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %52 = load i64, i64* %35, align 8
  %53 = load i64, i64* %26, align 8
  %54 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %51, i64 0, i32 1, i32 2
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %53
  %57 = getelementptr inbounds i8, i8* %56, i64 8
  %58 = icmp eq i64 %52, -1
  br i1 %58, label %65, label %59

59:                                               ; preds = %49
  %60 = load %"class.mojo::Message"*, %"class.mojo::Message"** %34, align 8
  %61 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %60, i64 0, i32 1, i32 2
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 %52
  %64 = bitcast i8* %63 to %"class.mojo_base::mojom::internal::String16_Data"*
  br label %65

65:                                               ; preds = %42, %49, %59
  %66 = phi i8* [ %57, %59 ], [ %57, %49 ], [ %48, %42 ]
  %67 = phi %"class.mojo_base::mojom::internal::String16_Data"* [ %64, %59 ], [ null, %49 ], [ null, %42 ]
  %68 = bitcast i8* %66 to i64*
  %69 = icmp eq %"class.mojo_base::mojom::internal::String16_Data"* %67, null
  %70 = ptrtoint %"class.mojo_base::mojom::internal::String16_Data"* %67 to i64
  %71 = ptrtoint i8* %66 to i64
  %72 = sub i64 %70, %71
  %73 = select i1 %69, i64 0, i64 %72
  store i64 %73, i64* %68, align 8
  %74 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %18, align 8
  %75 = bitcast %"class.mojo::internal::MessageFragment.213"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #13
  %76 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %5, i64 0, i32 0
  %77 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %5, i64 0, i32 1
  %78 = load i64, i64* %36, align 8
  %79 = bitcast %"class.mojo::internal::MessageFragment.213"* %5 to i64*
  store i64 %78, i64* %79, align 8
  store i64 -1, i64* %77, align 8
  %80 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %74, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %81 = load i8, i8* %80, align 8, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %90

83:                                               ; preds = %65
  %84 = inttoptr i64 %78 to %"class.mojo::Message"*
  %85 = load i64, i64* %26, align 8
  %86 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %84, i64 0, i32 1, i32 2
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 %85
  %89 = getelementptr inbounds i8, i8* %88, i64 16
  br label %106

90:                                               ; preds = %65
  %91 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %74, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4mojo8internal10SerializerIN9mojo_base5mojom16String16DataViewEKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEE9SerializeERSC_RNS0_15MessageFragmentINS3_8internal13String16_DataEEE(%"class.std::__1::basic_string"* dereferenceable(24) %91, %"class.mojo::internal::MessageFragment.213"* nonnull dereferenceable(16) %5) #13
  %92 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %93 = load i64, i64* %77, align 8
  %94 = load i64, i64* %26, align 8
  %95 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %92, i64 0, i32 1, i32 2
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 %94
  %98 = getelementptr inbounds i8, i8* %97, i64 16
  %99 = icmp eq i64 %93, -1
  br i1 %99, label %106, label %100

100:                                              ; preds = %90
  %101 = load %"class.mojo::Message"*, %"class.mojo::Message"** %76, align 8
  %102 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %101, i64 0, i32 1, i32 2
  %103 = load i8*, i8** %102, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 %93
  %105 = bitcast i8* %104 to %"class.mojo_base::mojom::internal::String16_Data"*
  br label %106

106:                                              ; preds = %83, %90, %100
  %107 = phi i8* [ %98, %100 ], [ %98, %90 ], [ %89, %83 ]
  %108 = phi %"class.mojo_base::mojom::internal::String16_Data"* [ %105, %100 ], [ null, %90 ], [ null, %83 ]
  %109 = bitcast i8* %107 to i64*
  %110 = icmp eq %"class.mojo_base::mojom::internal::String16_Data"* %108, null
  %111 = ptrtoint %"class.mojo_base::mojom::internal::String16_Data"* %108 to i64
  %112 = ptrtoint i8* %107 to i64
  %113 = sub i64 %111, %112
  %114 = select i1 %110, i64 0, i64 %113
  store i64 %114, i64* %109, align 8
  %115 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %18, align 8
  %116 = bitcast %"class.mojo::internal::MessageFragment.213"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #13
  %117 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %6, i64 0, i32 0
  %118 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %6, i64 0, i32 1
  %119 = load i64, i64* %36, align 8
  %120 = bitcast %"class.mojo::internal::MessageFragment.213"* %6 to i64*
  store i64 %119, i64* %120, align 8
  store i64 -1, i64* %118, align 8
  %121 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %122 = load i8, i8* %121, align 8, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %131

124:                                              ; preds = %106
  %125 = inttoptr i64 %119 to %"class.mojo::Message"*
  %126 = load i64, i64* %26, align 8
  %127 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %125, i64 0, i32 1, i32 2
  %128 = load i8*, i8** %127, align 8
  %129 = getelementptr inbounds i8, i8* %128, i64 %126
  %130 = getelementptr inbounds i8, i8* %129, i64 24
  br label %147

131:                                              ; preds = %106
  %132 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4mojo8internal10SerializerIN9mojo_base5mojom16String16DataViewEKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEE9SerializeERSC_RNS0_15MessageFragmentINS3_8internal13String16_DataEEE(%"class.std::__1::basic_string"* dereferenceable(24) %132, %"class.mojo::internal::MessageFragment.213"* nonnull dereferenceable(16) %6) #13
  %133 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %134 = load i64, i64* %118, align 8
  %135 = load i64, i64* %26, align 8
  %136 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %133, i64 0, i32 1, i32 2
  %137 = load i8*, i8** %136, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 %135
  %139 = getelementptr inbounds i8, i8* %138, i64 24
  %140 = icmp eq i64 %134, -1
  br i1 %140, label %147, label %141

141:                                              ; preds = %131
  %142 = load %"class.mojo::Message"*, %"class.mojo::Message"** %117, align 8
  %143 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %142, i64 0, i32 1, i32 2
  %144 = load i8*, i8** %143, align 8
  %145 = getelementptr inbounds i8, i8* %144, i64 %134
  %146 = bitcast i8* %145 to %"class.mojo_base::mojom::internal::String16_Data"*
  br label %147

147:                                              ; preds = %124, %131, %141
  %148 = phi i8* [ %139, %141 ], [ %139, %131 ], [ %130, %124 ]
  %149 = phi %"class.mojo_base::mojom::internal::String16_Data"* [ %146, %141 ], [ null, %131 ], [ null, %124 ]
  %150 = bitcast i8* %148 to i64*
  %151 = icmp eq %"class.mojo_base::mojom::internal::String16_Data"* %149, null
  %152 = ptrtoint %"class.mojo_base::mojom::internal::String16_Data"* %149 to i64
  %153 = ptrtoint i8* %148 to i64
  %154 = sub i64 %152, %153
  %155 = select i1 %151, i64 0, i64 %154
  store i64 %155, i64* %150, align 8
  %156 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %18, align 8
  %157 = bitcast %"class.mojo::internal::MessageFragment.213"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %157) #13
  %158 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %7, i64 0, i32 0
  %159 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %7, i64 0, i32 1
  %160 = load i64, i64* %36, align 8
  %161 = bitcast %"class.mojo::internal::MessageFragment.213"* %7 to i64*
  store i64 %160, i64* %161, align 8
  store i64 -1, i64* %159, align 8
  %162 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %156, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %163 = load i8, i8* %162, align 8, !range !2
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %165, label %172

165:                                              ; preds = %147
  %166 = inttoptr i64 %160 to %"class.mojo::Message"*
  %167 = load i64, i64* %26, align 8
  %168 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %166, i64 0, i32 1, i32 2
  %169 = load i8*, i8** %168, align 8
  %170 = getelementptr inbounds i8, i8* %169, i64 %167
  %171 = getelementptr inbounds i8, i8* %170, i64 32
  br label %188

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %156, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4mojo8internal10SerializerIN9mojo_base5mojom16String16DataViewEKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEE9SerializeERSC_RNS0_15MessageFragmentINS3_8internal13String16_DataEEE(%"class.std::__1::basic_string"* dereferenceable(24) %173, %"class.mojo::internal::MessageFragment.213"* nonnull dereferenceable(16) %7) #13
  %174 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %175 = load i64, i64* %159, align 8
  %176 = load i64, i64* %26, align 8
  %177 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %174, i64 0, i32 1, i32 2
  %178 = load i8*, i8** %177, align 8
  %179 = getelementptr inbounds i8, i8* %178, i64 %176
  %180 = getelementptr inbounds i8, i8* %179, i64 32
  %181 = icmp eq i64 %175, -1
  br i1 %181, label %188, label %182

182:                                              ; preds = %172
  %183 = load %"class.mojo::Message"*, %"class.mojo::Message"** %158, align 8
  %184 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %183, i64 0, i32 1, i32 2
  %185 = load i8*, i8** %184, align 8
  %186 = getelementptr inbounds i8, i8* %185, i64 %175
  %187 = bitcast i8* %186 to %"class.mojo_base::mojom::internal::String16_Data"*
  br label %188

188:                                              ; preds = %165, %172, %182
  %189 = phi i8* [ %180, %182 ], [ %180, %172 ], [ %171, %165 ]
  %190 = phi %"class.mojo_base::mojom::internal::String16_Data"* [ %187, %182 ], [ null, %172 ], [ null, %165 ]
  %191 = bitcast i8* %189 to i64*
  %192 = icmp eq %"class.mojo_base::mojom::internal::String16_Data"* %190, null
  %193 = ptrtoint %"class.mojo_base::mojom::internal::String16_Data"* %190 to i64
  %194 = ptrtoint i8* %189 to i64
  %195 = sub i64 %193, %194
  %196 = select i1 %192, i64 0, i64 %195
  store i64 %196, i64* %191, align 8
  %197 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %18, align 8
  %198 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %197, i64 0, i32 4
  %199 = bitcast %"class.mojo::internal::MessageFragment.206"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %199) #13
  %200 = getelementptr inbounds %"class.mojo::internal::MessageFragment.206", %"class.mojo::internal::MessageFragment.206"* %8, i64 0, i32 1
  %201 = load i64, i64* %36, align 8
  %202 = bitcast %"class.mojo::internal::MessageFragment.206"* %8 to i64*
  store i64 %201, i64* %202, align 8
  store i64 -1, i64* %200, align 8
  %203 = bitcast %"class.mojo::internal::ContainerValidateParams"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %203) #13
  %204 = bitcast %"class.mojo::internal::ContainerValidateParams"* %9 to i64*
  store i64 -6148914691236517206, i64* %204, align 8
  %205 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %9, i64 0, i32 0
  store i32 0, i32* %205, align 8
  %206 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %9, i64 0, i32 1
  store i8 1, i8* %206, align 4
  %207 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %9, i64 0, i32 2
  %208 = bitcast %"class.mojo::internal::ContainerValidateParams"** %10 to i8*
  %209 = bitcast %"class.mojo::internal::ContainerValidateParams"** %207 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #13
  store %"class.mojo::internal::ContainerValidateParams"* %9, %"class.mojo::internal::ContainerValidateParams"** %10, align 8
  call void @_ZN4mojo8internal9SerializeINS_13ArrayDataViewIN9mojo_base5mojom16String16DataViewEEERKNSt3__16vectorIN4absl8optionalINS7_12basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEEEENSE_ISH_EEEEJRNS0_15MessageFragmentINS0_10Array_DataINS0_7PointerINS4_8internal13String16_DataEEEEEEEPKNS0_23ContainerValidateParamsEELPv0EEEvOT0_DpOT1_(%"class.std::__1::vector.40"* dereferenceable(24) %198, %"class.mojo::internal::MessageFragment.206"* nonnull dereferenceable(16) %8, %"class.mojo::internal::ContainerValidateParams"** nonnull dereferenceable(8) %10)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #13
  %210 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %211 = load i64, i64* %26, align 8
  %212 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %210, i64 0, i32 1, i32 2
  %213 = load i8*, i8** %212, align 8
  %214 = getelementptr inbounds i8, i8* %213, i64 %211
  %215 = getelementptr inbounds i8, i8* %214, i64 40
  %216 = load i64, i64* %200, align 8
  %217 = icmp eq i64 %216, -1
  br i1 %217, label %225, label %218

218:                                              ; preds = %188
  %219 = getelementptr inbounds %"class.mojo::internal::MessageFragment.206", %"class.mojo::internal::MessageFragment.206"* %8, i64 0, i32 0
  %220 = load %"class.mojo::Message"*, %"class.mojo::Message"** %219, align 8
  %221 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %220, i64 0, i32 1, i32 2
  %222 = load i8*, i8** %221, align 8
  %223 = getelementptr inbounds i8, i8* %222, i64 %216
  %224 = bitcast i8* %223 to %"class.mojo::internal::Array_Data"*
  br label %225

225:                                              ; preds = %188, %218
  %226 = phi %"class.mojo::internal::Array_Data"* [ %224, %218 ], [ null, %188 ]
  %227 = bitcast i8* %215 to i64*
  %228 = icmp eq %"class.mojo::internal::Array_Data"* %226, null
  %229 = ptrtoint %"class.mojo::internal::Array_Data"* %226 to i64
  %230 = ptrtoint i8* %215 to i64
  %231 = sub i64 %229, %230
  %232 = select i1 %228, i64 0, i64 %231
  store i64 %232, i64* %227, align 8
  %233 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %18, align 8
  %234 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %233, i64 0, i32 5
  %235 = load i32, i32* %234, align 8
  %236 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %237 = load i64, i64* %26, align 8
  %238 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %236, i64 0, i32 1, i32 2
  %239 = load i8*, i8** %238, align 8
  %240 = getelementptr inbounds i8, i8* %239, i64 %237
  %241 = getelementptr inbounds i8, i8* %240, i64 48
  %242 = bitcast i8* %241 to i32*
  store i32 %235, i32* %242, align 4
  %243 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %18, align 8
  %244 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %243, i64 0, i32 6
  %245 = bitcast %"class.mojo::internal::MessageFragment.218"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %245) #13
  %246 = getelementptr inbounds %"class.mojo::internal::MessageFragment.218", %"class.mojo::internal::MessageFragment.218"* %11, i64 0, i32 1
  %247 = load i64, i64* %36, align 8
  %248 = bitcast %"class.mojo::internal::MessageFragment.218"* %11 to i64*
  store i64 %247, i64* %248, align 8
  store i64 -1, i64* %246, align 8
  call void @_ZN4mojo8internal10SerializerIN5blink5mojom17ViewStateDataViewEKNS_9StructPtrINS3_9ViewStateEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal14ViewState_DataEEE(%"class.mojo::StructPtr.73"* dereferenceable(8) %244, %"class.mojo::internal::MessageFragment.218"* nonnull dereferenceable(16) %11) #13
  %249 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %250 = load i64, i64* %26, align 8
  %251 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %249, i64 0, i32 1, i32 2
  %252 = load i8*, i8** %251, align 8
  %253 = getelementptr inbounds i8, i8* %252, i64 %250
  %254 = getelementptr inbounds i8, i8* %253, i64 56
  %255 = load i64, i64* %246, align 8
  %256 = icmp eq i64 %255, -1
  br i1 %256, label %264, label %257

257:                                              ; preds = %225
  %258 = getelementptr inbounds %"class.mojo::internal::MessageFragment.218", %"class.mojo::internal::MessageFragment.218"* %11, i64 0, i32 0
  %259 = load %"class.mojo::Message"*, %"class.mojo::Message"** %258, align 8
  %260 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %259, i64 0, i32 1, i32 2
  %261 = load i8*, i8** %260, align 8
  %262 = getelementptr inbounds i8, i8* %261, i64 %255
  %263 = bitcast i8* %262 to %"class.blink::mojom::internal::ViewState_Data"*
  br label %264

264:                                              ; preds = %225, %257
  %265 = phi %"class.blink::mojom::internal::ViewState_Data"* [ %263, %257 ], [ null, %225 ]
  %266 = bitcast i8* %254 to i64*
  %267 = icmp eq %"class.blink::mojom::internal::ViewState_Data"* %265, null
  %268 = ptrtoint %"class.blink::mojom::internal::ViewState_Data"* %265 to i64
  %269 = ptrtoint i8* %254 to i64
  %270 = sub i64 %268, %269
  %271 = select i1 %267, i64 0, i64 %270
  store i64 %271, i64* %266, align 8
  %272 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %18, align 8
  %273 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %272, i64 0, i32 7
  %274 = load i64, i64* %273, align 8
  %275 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %276 = load i64, i64* %26, align 8
  %277 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %275, i64 0, i32 1, i32 2
  %278 = load i8*, i8** %277, align 8
  %279 = getelementptr inbounds i8, i8* %278, i64 %276
  %280 = getelementptr inbounds i8, i8* %279, i64 64
  %281 = bitcast i8* %280 to i64*
  store i64 %274, i64* %281, align 1
  %282 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %18, align 8
  %283 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %282, i64 0, i32 8
  %284 = load i64, i64* %283, align 8
  %285 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %286 = load i64, i64* %26, align 8
  %287 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %285, i64 0, i32 1, i32 2
  %288 = load i8*, i8** %287, align 8
  %289 = getelementptr inbounds i8, i8* %288, i64 %286
  %290 = getelementptr inbounds i8, i8* %289, i64 72
  %291 = bitcast i8* %290 to i64*
  store i64 %284, i64* %291, align 1
  %292 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %18, align 8
  %293 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %292, i64 0, i32 9
  %294 = load i32, i32* %293, align 8
  %295 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %296 = load i64, i64* %26, align 8
  %297 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %295, i64 0, i32 1, i32 2
  %298 = load i8*, i8** %297, align 8
  %299 = getelementptr inbounds i8, i8* %298, i64 %296
  %300 = getelementptr inbounds i8, i8* %299, i64 52
  %301 = bitcast i8* %300 to i32*
  store i32 %294, i32* %301, align 4
  %302 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %18, align 8
  %303 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %302, i64 0, i32 10
  %304 = bitcast %"class.mojo::internal::MessageFragment.221"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %304) #13
  %305 = getelementptr inbounds %"class.mojo::internal::MessageFragment.221", %"class.mojo::internal::MessageFragment.221"* %12, i64 0, i32 1
  %306 = load i64, i64* %36, align 8
  %307 = bitcast %"class.mojo::internal::MessageFragment.221"* %12 to i64*
  store i64 %306, i64* %307, align 8
  store i64 -1, i64* %305, align 8
  call void @_ZN4mojo8internal10SerializerIN5blink5mojom16HttpBodyDataViewEKNS_9StructPtrINS3_8HttpBodyEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal13HttpBody_DataEEE(%"class.mojo::StructPtr.85"* dereferenceable(8) %303, %"class.mojo::internal::MessageFragment.221"* nonnull dereferenceable(16) %12) #13
  %308 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %309 = load i64, i64* %26, align 8
  %310 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %308, i64 0, i32 1, i32 2
  %311 = load i8*, i8** %310, align 8
  %312 = getelementptr inbounds i8, i8* %311, i64 %309
  %313 = getelementptr inbounds i8, i8* %312, i64 80
  %314 = load i64, i64* %305, align 8
  %315 = icmp eq i64 %314, -1
  br i1 %315, label %323, label %316

316:                                              ; preds = %264
  %317 = getelementptr inbounds %"class.mojo::internal::MessageFragment.221", %"class.mojo::internal::MessageFragment.221"* %12, i64 0, i32 0
  %318 = load %"class.mojo::Message"*, %"class.mojo::Message"** %317, align 8
  %319 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %318, i64 0, i32 1, i32 2
  %320 = load i8*, i8** %319, align 8
  %321 = getelementptr inbounds i8, i8* %320, i64 %314
  %322 = bitcast i8* %321 to %"class.blink::mojom::internal::HttpBody_Data"*
  br label %323

323:                                              ; preds = %264, %316
  %324 = phi %"class.blink::mojom::internal::HttpBody_Data"* [ %322, %316 ], [ null, %264 ]
  %325 = bitcast i8* %313 to i64*
  %326 = icmp eq %"class.blink::mojom::internal::HttpBody_Data"* %324, null
  %327 = ptrtoint %"class.blink::mojom::internal::HttpBody_Data"* %324 to i64
  %328 = ptrtoint i8* %313 to i64
  %329 = sub i64 %327, %328
  %330 = select i1 %326, i64 0, i64 %329
  store i64 %330, i64* %325, align 8
  %331 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %18, align 8
  %332 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %331, i64 0, i32 11
  %333 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %334 = bitcast %"class.mojo::internal::ContainerValidateParams"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %334) #13
  %335 = bitcast %"class.mojo::internal::ContainerValidateParams"* %13 to i64*
  store i64 -6148914691236517206, i64* %335, align 8
  %336 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %13, i64 0, i32 0
  store i32 0, i32* %336, align 8
  %337 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %13, i64 0, i32 1
  store i8 0, i8* %337, align 4
  %338 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %13, i64 0, i32 2
  %339 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %331, i64 0, i32 11, i32 0, i32 1
  %340 = bitcast %"class.mojo::StructPtr.69"** %339 to i64*
  %341 = bitcast %"class.mojo::internal::ContainerValidateParams"** %338 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %341, i8 0, i64 24, i1 false)
  %342 = load i64, i64* %340, align 8
  %343 = bitcast %"class.std::__1::vector.127"* %332 to i64*
  %344 = load i64, i64* %343, align 8
  %345 = sub i64 %342, %344
  %346 = ashr exact i64 %345, 3
  %347 = icmp ugt i64 %346, 536870910
  br i1 %347, label %366, label %348

348:                                              ; preds = %323
  %349 = trunc i64 %346 to i32
  %350 = trunc i64 %345 to i32
  %351 = add i32 %350, 8
  %352 = and i32 %351, -8
  %353 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %333, i64 0, i32 1
  %354 = zext i32 %352 to i64
  %355 = call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %353, i64 %354) #13
  %356 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %333, i64 0, i32 1, i32 2
  %357 = load i8*, i8** %356, align 8
  %358 = getelementptr inbounds i8, i8* %357, i64 %355
  %359 = bitcast i8* %358 to i32*
  store i32 %352, i32* %359, align 1
  %360 = getelementptr inbounds i8, i8* %358, i64 4
  %361 = bitcast i8* %360 to i32*
  store i32 %349, i32* %361, align 1
  %362 = load i64, i64* %340, align 8
  %363 = load i64, i64* %343, align 8
  %364 = sub i64 %362, %363
  %365 = ashr exact i64 %364, 3
  br label %366

366:                                              ; preds = %323, %348
  %367 = phi i64 [ %346, %323 ], [ %365, %348 ]
  %368 = phi i64 [ %345, %323 ], [ %364, %348 ]
  %369 = phi i64 [ %344, %323 ], [ %363, %348 ]
  %370 = phi i64 [ -1, %323 ], [ %355, %348 ]
  %371 = icmp eq i64 %368, 0
  br i1 %371, label %408, label %372

372:                                              ; preds = %366
  %373 = inttoptr i64 %369 to %"class.mojo::StructPtr.69"*
  %374 = bitcast %"class.mojo::internal::MessageFragment.207"* %3 to i8*
  %375 = getelementptr inbounds %"class.mojo::internal::MessageFragment.207", %"class.mojo::internal::MessageFragment.207"* %3, i64 0, i32 0
  %376 = getelementptr inbounds %"class.mojo::internal::MessageFragment.207", %"class.mojo::internal::MessageFragment.207"* %3, i64 0, i32 1
  %377 = getelementptr inbounds %"class.std::__1::vector.127", %"class.std::__1::vector.127"* %332, i64 0, i32 0, i32 0
  %378 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %333, i64 0, i32 1, i32 2
  br label %379

379:                                              ; preds = %406, %372
  %380 = phi %"class.mojo::StructPtr.69"* [ %373, %372 ], [ %407, %406 ]
  %381 = phi i64 [ 0, %372 ], [ %382, %406 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %374) #13
  store %"class.mojo::Message"* %333, %"class.mojo::Message"** %375, align 8
  store i64 -1, i64* %376, align 8
  %382 = add nuw i64 %381, 1
  %383 = getelementptr inbounds %"class.mojo::StructPtr.69", %"class.mojo::StructPtr.69"* %380, i64 %381
  call void @_ZN4mojo8internal10SerializerIN5blink5mojom18FrameStateDataViewEKNS_9StructPtrINS3_10FrameStateEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal15FrameState_DataEEE(%"class.mojo::StructPtr.69"* dereferenceable(8) %383, %"class.mojo::internal::MessageFragment.207"* nonnull dereferenceable(16) %3) #13
  %384 = load i8*, i8** %378, align 8
  %385 = getelementptr inbounds i8, i8* %384, i64 %370
  %386 = getelementptr inbounds i8, i8* %385, i64 8
  %387 = bitcast i8* %386 to %"class.mojo::internal::Array_Data.224"*
  %388 = getelementptr inbounds %"class.mojo::internal::Array_Data.224", %"class.mojo::internal::Array_Data.224"* %387, i64 %381
  %389 = load i64, i64* %376, align 8
  %390 = icmp eq i64 %389, -1
  br i1 %390, label %397, label %391

391:                                              ; preds = %379
  %392 = load %"class.mojo::Message"*, %"class.mojo::Message"** %375, align 8
  %393 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %392, i64 0, i32 1, i32 2
  %394 = load i8*, i8** %393, align 8
  %395 = getelementptr inbounds i8, i8* %394, i64 %389
  %396 = bitcast i8* %395 to %"class.blink::mojom::internal::FrameState_Data"*
  br label %397

397:                                              ; preds = %391, %379
  %398 = phi %"class.blink::mojom::internal::FrameState_Data"* [ %396, %391 ], [ null, %379 ]
  %399 = bitcast %"class.mojo::internal::Array_Data.224"* %388 to i64*
  %400 = icmp eq %"class.blink::mojom::internal::FrameState_Data"* %398, null
  %401 = ptrtoint %"class.blink::mojom::internal::FrameState_Data"* %398 to i64
  %402 = ptrtoint %"class.mojo::internal::Array_Data.224"* %388 to i64
  %403 = sub i64 %401, %402
  %404 = select i1 %400, i64 0, i64 %403
  store i64 %404, i64* %399, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %374) #13
  %405 = icmp ult i64 %382, %367
  br i1 %405, label %406, label %408

406:                                              ; preds = %397
  %407 = load %"class.mojo::StructPtr.69"*, %"class.mojo::StructPtr.69"** %377, align 8
  br label %379

408:                                              ; preds = %397, %366
  %409 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %410 = load i64, i64* %26, align 8
  %411 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %409, i64 0, i32 1, i32 2
  %412 = load i8*, i8** %411, align 8
  %413 = getelementptr inbounds i8, i8* %412, i64 %410
  %414 = getelementptr inbounds i8, i8* %413, i64 88
  %415 = icmp eq i64 %370, -1
  br i1 %415, label %421, label %416

416:                                              ; preds = %408
  %417 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %333, i64 0, i32 1, i32 2
  %418 = load i8*, i8** %417, align 8
  %419 = getelementptr inbounds i8, i8* %418, i64 %370
  %420 = bitcast i8* %419 to %"class.mojo::internal::Array_Data.224"*
  br label %421

421:                                              ; preds = %408, %416
  %422 = phi %"class.mojo::internal::Array_Data.224"* [ %420, %416 ], [ null, %408 ]
  %423 = bitcast i8* %414 to i64*
  %424 = icmp eq %"class.mojo::internal::Array_Data.224"* %422, null
  %425 = ptrtoint %"class.mojo::internal::Array_Data.224"* %422 to i64
  %426 = ptrtoint i8* %414 to i64
  %427 = sub i64 %425, %426
  %428 = select i1 %424, i64 0, i64 %427
  store i64 %428, i64* %423, align 8
  %429 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %18, align 8
  %430 = bitcast %"class.mojo::internal::MessageFragment.225"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %430) #13
  %431 = getelementptr inbounds %"class.mojo::internal::MessageFragment.225", %"class.mojo::internal::MessageFragment.225"* %14, i64 0, i32 0
  %432 = getelementptr inbounds %"class.mojo::internal::MessageFragment.225", %"class.mojo::internal::MessageFragment.225"* %14, i64 0, i32 1
  %433 = load i64, i64* %36, align 8
  %434 = bitcast %"class.mojo::internal::MessageFragment.225"* %14 to i64*
  store i64 %433, i64* %434, align 8
  store i64 -1, i64* %432, align 8
  %435 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %429, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %436 = load i8, i8* %435, align 8, !range !2
  %437 = icmp eq i8 %436, 0
  br i1 %437, label %438, label %445

438:                                              ; preds = %421
  %439 = inttoptr i64 %433 to %"class.mojo::Message"*
  %440 = load i64, i64* %26, align 8
  %441 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %439, i64 0, i32 1, i32 2
  %442 = load i8*, i8** %441, align 8
  %443 = getelementptr inbounds i8, i8* %442, i64 %440
  %444 = getelementptr inbounds i8, i8* %443, i64 96
  br label %461

445:                                              ; preds = %421
  %446 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %429, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4mojo8internal10SerializerINS_14StringDataViewEKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE9SerializeERSA_RNS0_15MessageFragmentINS0_10Array_DataIcEEEE(%"class.std::__1::basic_string.15"* dereferenceable(24) %446, %"class.mojo::internal::MessageFragment.225"* nonnull dereferenceable(16) %14) #13
  %447 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %448 = load i64, i64* %432, align 8
  %449 = load i64, i64* %26, align 8
  %450 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %447, i64 0, i32 1, i32 2
  %451 = load i8*, i8** %450, align 8
  %452 = getelementptr inbounds i8, i8* %451, i64 %449
  %453 = getelementptr inbounds i8, i8* %452, i64 96
  %454 = icmp eq i64 %448, -1
  br i1 %454, label %461, label %455

455:                                              ; preds = %445
  %456 = load %"class.mojo::Message"*, %"class.mojo::Message"** %431, align 8
  %457 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %456, i64 0, i32 1, i32 2
  %458 = load i8*, i8** %457, align 8
  %459 = getelementptr inbounds i8, i8* %458, i64 %448
  %460 = bitcast i8* %459 to %"class.mojo::internal::Array_Data.226"*
  br label %461

461:                                              ; preds = %438, %445, %455
  %462 = phi i8* [ %453, %455 ], [ %453, %445 ], [ %444, %438 ]
  %463 = phi %"class.mojo::internal::Array_Data.226"* [ %460, %455 ], [ null, %445 ], [ null, %438 ]
  %464 = bitcast i8* %462 to i64*
  %465 = icmp eq %"class.mojo::internal::Array_Data.226"* %463, null
  %466 = ptrtoint %"class.mojo::internal::Array_Data.226"* %463 to i64
  %467 = ptrtoint i8* %462 to i64
  %468 = sub i64 %466, %467
  %469 = select i1 %465, i64 0, i64 %468
  store i64 %469, i64* %464, align 8
  %470 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %18, align 8
  %471 = bitcast %"class.mojo::internal::MessageFragment.213"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %471) #13
  %472 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %15, i64 0, i32 0
  %473 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %15, i64 0, i32 1
  %474 = load i64, i64* %36, align 8
  %475 = bitcast %"class.mojo::internal::MessageFragment.213"* %15 to i64*
  store i64 %474, i64* %475, align 8
  store i64 -1, i64* %473, align 8
  %476 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %470, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %477 = load i8, i8* %476, align 8, !range !2
  %478 = icmp eq i8 %477, 0
  br i1 %478, label %479, label %486

479:                                              ; preds = %461
  %480 = inttoptr i64 %474 to %"class.mojo::Message"*
  %481 = load i64, i64* %26, align 8
  %482 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %480, i64 0, i32 1, i32 2
  %483 = load i8*, i8** %482, align 8
  %484 = getelementptr inbounds i8, i8* %483, i64 %481
  %485 = getelementptr inbounds i8, i8* %484, i64 104
  br label %502

486:                                              ; preds = %461
  %487 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %470, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4mojo8internal10SerializerIN9mojo_base5mojom16String16DataViewEKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEE9SerializeERSC_RNS0_15MessageFragmentINS3_8internal13String16_DataEEE(%"class.std::__1::basic_string"* dereferenceable(24) %487, %"class.mojo::internal::MessageFragment.213"* nonnull dereferenceable(16) %15) #13
  %488 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %489 = load i64, i64* %473, align 8
  %490 = load i64, i64* %26, align 8
  %491 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %488, i64 0, i32 1, i32 2
  %492 = load i8*, i8** %491, align 8
  %493 = getelementptr inbounds i8, i8* %492, i64 %490
  %494 = getelementptr inbounds i8, i8* %493, i64 104
  %495 = icmp eq i64 %489, -1
  br i1 %495, label %502, label %496

496:                                              ; preds = %486
  %497 = load %"class.mojo::Message"*, %"class.mojo::Message"** %472, align 8
  %498 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %497, i64 0, i32 1, i32 2
  %499 = load i8*, i8** %498, align 8
  %500 = getelementptr inbounds i8, i8* %499, i64 %489
  %501 = bitcast i8* %500 to %"class.mojo_base::mojom::internal::String16_Data"*
  br label %502

502:                                              ; preds = %479, %486, %496
  %503 = phi i8* [ %494, %496 ], [ %494, %486 ], [ %485, %479 ]
  %504 = phi %"class.mojo_base::mojom::internal::String16_Data"* [ %501, %496 ], [ null, %486 ], [ null, %479 ]
  %505 = bitcast i8* %503 to i64*
  %506 = icmp eq %"class.mojo_base::mojom::internal::String16_Data"* %504, null
  %507 = ptrtoint %"class.mojo_base::mojom::internal::String16_Data"* %504 to i64
  %508 = ptrtoint i8* %503 to i64
  %509 = sub i64 %507, %508
  %510 = select i1 %506, i64 0, i64 %509
  store i64 %510, i64* %505, align 8
  %511 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %18, align 8
  %512 = bitcast %"class.mojo::internal::MessageFragment.213"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %512) #13
  %513 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %16, i64 0, i32 0
  %514 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %16, i64 0, i32 1
  %515 = load i64, i64* %36, align 8
  %516 = bitcast %"class.mojo::internal::MessageFragment.213"* %16 to i64*
  store i64 %515, i64* %516, align 8
  store i64 -1, i64* %514, align 8
  %517 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %511, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %518 = load i8, i8* %517, align 8, !range !2
  %519 = icmp eq i8 %518, 0
  br i1 %519, label %520, label %527

520:                                              ; preds = %502
  %521 = inttoptr i64 %515 to %"class.mojo::Message"*
  %522 = load i64, i64* %26, align 8
  %523 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %521, i64 0, i32 1, i32 2
  %524 = load i8*, i8** %523, align 8
  %525 = getelementptr inbounds i8, i8* %524, i64 %522
  %526 = getelementptr inbounds i8, i8* %525, i64 112
  br label %543

527:                                              ; preds = %502
  %528 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %511, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4mojo8internal10SerializerIN9mojo_base5mojom16String16DataViewEKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEE9SerializeERSC_RNS0_15MessageFragmentINS3_8internal13String16_DataEEE(%"class.std::__1::basic_string"* dereferenceable(24) %528, %"class.mojo::internal::MessageFragment.213"* nonnull dereferenceable(16) %16) #13
  %529 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %530 = load i64, i64* %514, align 8
  %531 = load i64, i64* %26, align 8
  %532 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %529, i64 0, i32 1, i32 2
  %533 = load i8*, i8** %532, align 8
  %534 = getelementptr inbounds i8, i8* %533, i64 %531
  %535 = getelementptr inbounds i8, i8* %534, i64 112
  %536 = icmp eq i64 %530, -1
  br i1 %536, label %543, label %537

537:                                              ; preds = %527
  %538 = load %"class.mojo::Message"*, %"class.mojo::Message"** %513, align 8
  %539 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %538, i64 0, i32 1, i32 2
  %540 = load i8*, i8** %539, align 8
  %541 = getelementptr inbounds i8, i8* %540, i64 %530
  %542 = bitcast i8* %541 to %"class.mojo_base::mojom::internal::String16_Data"*
  br label %543

543:                                              ; preds = %520, %527, %537
  %544 = phi i8* [ %535, %537 ], [ %535, %527 ], [ %526, %520 ]
  %545 = phi %"class.mojo_base::mojom::internal::String16_Data"* [ %542, %537 ], [ null, %527 ], [ null, %520 ]
  %546 = bitcast i8* %544 to i64*
  %547 = icmp eq %"class.mojo_base::mojom::internal::String16_Data"* %545, null
  %548 = ptrtoint %"class.mojo_base::mojom::internal::String16_Data"* %545 to i64
  %549 = ptrtoint i8* %544 to i64
  %550 = sub i64 %548, %549
  %551 = select i1 %547, i64 0, i64 %550
  store i64 %551, i64* %546, align 8
  %552 = load %"class.blink::mojom::FrameState"*, %"class.blink::mojom::FrameState"** %18, align 8
  %553 = bitcast %"class.mojo::internal::MessageFragment.213"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %553) #13
  %554 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %17, i64 0, i32 0
  %555 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %17, i64 0, i32 1
  %556 = load i64, i64* %36, align 8
  %557 = bitcast %"class.mojo::internal::MessageFragment.213"* %17 to i64*
  store i64 %556, i64* %557, align 8
  store i64 -1, i64* %555, align 8
  %558 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %552, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %559 = load i8, i8* %558, align 8, !range !2
  %560 = icmp eq i8 %559, 0
  br i1 %560, label %561, label %568

561:                                              ; preds = %543
  %562 = inttoptr i64 %556 to %"class.mojo::Message"*
  %563 = load i64, i64* %26, align 8
  %564 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %562, i64 0, i32 1, i32 2
  %565 = load i8*, i8** %564, align 8
  %566 = getelementptr inbounds i8, i8* %565, i64 %563
  %567 = getelementptr inbounds i8, i8* %566, i64 120
  br label %584

568:                                              ; preds = %543
  %569 = getelementptr inbounds %"class.blink::mojom::FrameState", %"class.blink::mojom::FrameState"* %552, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4mojo8internal10SerializerIN9mojo_base5mojom16String16DataViewEKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEE9SerializeERSC_RNS0_15MessageFragmentINS3_8internal13String16_DataEEE(%"class.std::__1::basic_string"* dereferenceable(24) %569, %"class.mojo::internal::MessageFragment.213"* nonnull dereferenceable(16) %17) #13
  %570 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %571 = load i64, i64* %555, align 8
  %572 = load i64, i64* %26, align 8
  %573 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %570, i64 0, i32 1, i32 2
  %574 = load i8*, i8** %573, align 8
  %575 = getelementptr inbounds i8, i8* %574, i64 %572
  %576 = getelementptr inbounds i8, i8* %575, i64 120
  %577 = icmp eq i64 %571, -1
  br i1 %577, label %584, label %578

578:                                              ; preds = %568
  %579 = load %"class.mojo::Message"*, %"class.mojo::Message"** %554, align 8
  %580 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %579, i64 0, i32 1, i32 2
  %581 = load i8*, i8** %580, align 8
  %582 = getelementptr inbounds i8, i8* %581, i64 %571
  %583 = bitcast i8* %582 to %"class.mojo_base::mojom::internal::String16_Data"*
  br label %584

584:                                              ; preds = %561, %568, %578
  %585 = phi i8* [ %576, %578 ], [ %576, %568 ], [ %567, %561 ]
  %586 = phi %"class.mojo_base::mojom::internal::String16_Data"* [ %583, %578 ], [ null, %568 ], [ null, %561 ]
  %587 = bitcast i8* %585 to i64*
  %588 = icmp eq %"class.mojo_base::mojom::internal::String16_Data"* %586, null
  %589 = ptrtoint %"class.mojo_base::mojom::internal::String16_Data"* %586 to i64
  %590 = ptrtoint i8* %585 to i64
  %591 = sub i64 %589, %590
  %592 = select i1 %588, i64 0, i64 %591
  store i64 %592, i64* %587, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %553) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %512) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %471) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %430) #13
  call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %334) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %304) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %245) #13
  call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %203) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %199) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %157) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #13
  br label %593

593:                                              ; preds = %2, %584
  ret void
}

declare void @_ZN5blink5mojom8internal15FrameState_DataC1Ev(%"class.blink::mojom::internal::FrameState_Data"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal10SerializerIN5blink5mojom17ViewStateDataViewEKNS_9StructPtrINS3_9ViewStateEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal14ViewState_DataEEE(%"class.mojo::StructPtr.73"* dereferenceable(8), %"class.mojo::internal::MessageFragment.218"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::internal::MessageFragment.213", align 8
  %4 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %4, align 8
  %6 = icmp eq %"class.blink::mojom::ViewState"* %5, null
  br i1 %6, label %213, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.mojo::internal::MessageFragment.218", %"class.mojo::internal::MessageFragment.218"* %1, i64 0, i32 0
  %9 = load %"class.mojo::Message"*, %"class.mojo::Message"** %8, align 8
  %10 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %9, i64 0, i32 1
  %11 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %10, i64 56) #13
  %12 = getelementptr inbounds %"class.mojo::internal::MessageFragment.218", %"class.mojo::internal::MessageFragment.218"* %1, i64 0, i32 1
  store i64 %11, i64* %12, align 8
  %13 = load %"class.mojo::Message"*, %"class.mojo::Message"** %8, align 8
  %14 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %13, i64 0, i32 1, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %11
  %17 = bitcast i8* %16 to %"class.blink::mojom::internal::ViewState_Data"*
  tail call void @_ZN5blink5mojom8internal14ViewState_DataC1Ev(%"class.blink::mojom::internal::ViewState_Data"* %17) #13
  %18 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %4, align 8
  %19 = load %"class.mojo::Message"*, %"class.mojo::Message"** %8, align 8
  %20 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %19, i64 0, i32 1
  %21 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %20, i64 16) #13
  %22 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %19, i64 0, i32 1, i32 2
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 %21
  %25 = bitcast i8* %24 to %"class.gfx::mojom::internal::PointF_Data"*
  tail call void @_ZN3gfx5mojom8internal11PointF_DataC1Ev(%"class.gfx::mojom::internal::PointF_Data"* %25) #13
  %26 = bitcast %"class.blink::mojom::ViewState"* %18 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = load i8*, i8** %22, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 %21
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  store i32 %27, i32* %31, align 1
  %32 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %18, i64 0, i32 0, i32 1
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = load i8*, i8** %22, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 %21
  %37 = getelementptr inbounds i8, i8* %36, i64 12
  %38 = bitcast i8* %37 to i32*
  store i32 %34, i32* %38, align 1
  %39 = load %"class.mojo::Message"*, %"class.mojo::Message"** %8, align 8
  %40 = load i64, i64* %12, align 8
  %41 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %39, i64 0, i32 1, i32 2
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 %40
  %44 = getelementptr inbounds i8, i8* %43, i64 8
  %45 = icmp eq i64 %21, -1
  br i1 %45, label %50, label %46

46:                                               ; preds = %7
  %47 = load i8*, i8** %22, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 %21
  %49 = bitcast i8* %48 to %"class.gfx::mojom::internal::PointF_Data"*
  br label %50

50:                                               ; preds = %7, %46
  %51 = phi %"class.gfx::mojom::internal::PointF_Data"* [ %49, %46 ], [ null, %7 ]
  %52 = bitcast i8* %44 to i64*
  %53 = icmp eq %"class.gfx::mojom::internal::PointF_Data"* %51, null
  %54 = ptrtoint %"class.gfx::mojom::internal::PointF_Data"* %51 to i64
  %55 = ptrtoint i8* %44 to i64
  %56 = sub i64 %54, %55
  %57 = select i1 %53, i64 0, i64 %56
  store i64 %57, i64* %52, align 8
  %58 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %4, align 8
  %59 = load %"class.mojo::Message"*, %"class.mojo::Message"** %8, align 8
  %60 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %59, i64 0, i32 1
  %61 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %60, i64 16) #13
  %62 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %59, i64 0, i32 1, i32 2
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 %61
  %65 = bitcast i8* %64 to %"class.gfx::mojom::internal::Point_Data"*
  tail call void @_ZN3gfx5mojom8internal10Point_DataC1Ev(%"class.gfx::mojom::internal::Point_Data"* %65) #13
  %66 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %58, i64 0, i32 1, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = load i8*, i8** %62, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %61
  %70 = getelementptr inbounds i8, i8* %69, i64 8
  %71 = bitcast i8* %70 to i32*
  store i32 %67, i32* %71, align 1
  %72 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %58, i64 0, i32 1, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = load i8*, i8** %62, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 %61
  %76 = getelementptr inbounds i8, i8* %75, i64 12
  %77 = bitcast i8* %76 to i32*
  store i32 %73, i32* %77, align 1
  %78 = load %"class.mojo::Message"*, %"class.mojo::Message"** %8, align 8
  %79 = load i64, i64* %12, align 8
  %80 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %78, i64 0, i32 1, i32 2
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 %79
  %83 = getelementptr inbounds i8, i8* %82, i64 16
  %84 = icmp eq i64 %61, -1
  br i1 %84, label %89, label %85

85:                                               ; preds = %50
  %86 = load i8*, i8** %62, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 %61
  %88 = bitcast i8* %87 to %"class.gfx::mojom::internal::Point_Data"*
  br label %89

89:                                               ; preds = %50, %85
  %90 = phi %"class.gfx::mojom::internal::Point_Data"* [ %88, %85 ], [ null, %50 ]
  %91 = bitcast i8* %83 to i64*
  %92 = icmp eq %"class.gfx::mojom::internal::Point_Data"* %90, null
  %93 = ptrtoint %"class.gfx::mojom::internal::Point_Data"* %90 to i64
  %94 = ptrtoint i8* %83 to i64
  %95 = sub i64 %93, %94
  %96 = select i1 %92, i64 0, i64 %95
  store i64 %96, i64* %91, align 8
  %97 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %4, align 8
  %98 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %97, i64 0, i32 2
  %99 = bitcast double* %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = load %"class.mojo::Message"*, %"class.mojo::Message"** %8, align 8
  %102 = load i64, i64* %12, align 8
  %103 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %101, i64 0, i32 1, i32 2
  %104 = load i8*, i8** %103, align 8
  %105 = getelementptr inbounds i8, i8* %104, i64 %102
  %106 = getelementptr inbounds i8, i8* %105, i64 24
  %107 = bitcast i8* %106 to i64*
  store i64 %100, i64* %107, align 1
  %108 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %4, align 8
  %109 = bitcast %"class.mojo::internal::MessageFragment.213"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #13
  %110 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %3, i64 0, i32 0
  %111 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %3, i64 0, i32 1
  %112 = bitcast %"class.mojo::internal::MessageFragment.218"* %1 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.mojo::internal::MessageFragment.213"* %3 to i64*
  store i64 %113, i64* %114, align 8
  store i64 -1, i64* %111, align 8
  %115 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %108, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %116 = load i8, i8* %115, align 8, !range !2
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %118, label %125

118:                                              ; preds = %89
  %119 = inttoptr i64 %113 to %"class.mojo::Message"*
  %120 = load i64, i64* %12, align 8
  %121 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %119, i64 0, i32 1, i32 2
  %122 = load i8*, i8** %121, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 %120
  %124 = getelementptr inbounds i8, i8* %123, i64 32
  br label %141

125:                                              ; preds = %89
  %126 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %108, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4mojo8internal10SerializerIN9mojo_base5mojom16String16DataViewEKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEE9SerializeERSC_RNS0_15MessageFragmentINS3_8internal13String16_DataEEE(%"class.std::__1::basic_string"* dereferenceable(24) %126, %"class.mojo::internal::MessageFragment.213"* nonnull dereferenceable(16) %3) #13
  %127 = load %"class.mojo::Message"*, %"class.mojo::Message"** %8, align 8
  %128 = load i64, i64* %111, align 8
  %129 = load i64, i64* %12, align 8
  %130 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %127, i64 0, i32 1, i32 2
  %131 = load i8*, i8** %130, align 8
  %132 = getelementptr inbounds i8, i8* %131, i64 %129
  %133 = getelementptr inbounds i8, i8* %132, i64 32
  %134 = icmp eq i64 %128, -1
  br i1 %134, label %141, label %135

135:                                              ; preds = %125
  %136 = load %"class.mojo::Message"*, %"class.mojo::Message"** %110, align 8
  %137 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %136, i64 0, i32 1, i32 2
  %138 = load i8*, i8** %137, align 8
  %139 = getelementptr inbounds i8, i8* %138, i64 %128
  %140 = bitcast i8* %139 to %"class.mojo_base::mojom::internal::String16_Data"*
  br label %141

141:                                              ; preds = %118, %125, %135
  %142 = phi i8* [ %133, %135 ], [ %133, %125 ], [ %124, %118 ]
  %143 = phi %"class.mojo_base::mojom::internal::String16_Data"* [ %140, %135 ], [ null, %125 ], [ null, %118 ]
  %144 = bitcast i8* %142 to i64*
  %145 = icmp eq %"class.mojo_base::mojom::internal::String16_Data"* %143, null
  %146 = ptrtoint %"class.mojo_base::mojom::internal::String16_Data"* %143 to i64
  %147 = ptrtoint i8* %142 to i64
  %148 = sub i64 %146, %147
  %149 = select i1 %145, i64 0, i64 %148
  store i64 %149, i64* %144, align 8
  %150 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %4, align 8
  %151 = load %"class.mojo::Message"*, %"class.mojo::Message"** %8, align 8
  %152 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %150, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %153 = load i8, i8* %152, align 4, !range !2
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %155, label %161

155:                                              ; preds = %141
  %156 = load i64, i64* %12, align 8
  %157 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %151, i64 0, i32 1, i32 2
  %158 = load i8*, i8** %157, align 8
  %159 = getelementptr inbounds i8, i8* %158, i64 %156
  %160 = getelementptr inbounds i8, i8* %159, i64 40
  br label %194

161:                                              ; preds = %141
  %162 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %150, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %163 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %151, i64 0, i32 1
  %164 = call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %163, i64 16) #13
  %165 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %151, i64 0, i32 1, i32 2
  %166 = load i8*, i8** %165, align 8
  %167 = getelementptr inbounds i8, i8* %166, i64 %164
  %168 = bitcast i8* %167 to %"class.gfx::mojom::internal::PointF_Data"*
  call void @_ZN3gfx5mojom8internal11PointF_DataC1Ev(%"class.gfx::mojom::internal::PointF_Data"* %168) #13
  %169 = bitcast %"class.gfx::PointF"* %162 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = load i8*, i8** %165, align 8
  %172 = getelementptr inbounds i8, i8* %171, i64 %164
  %173 = getelementptr inbounds i8, i8* %172, i64 8
  %174 = bitcast i8* %173 to i32*
  store i32 %170, i32* %174, align 1
  %175 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %150, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %176 = bitcast float* %175 to i32*
  %177 = load i32, i32* %176, align 4
  %178 = load i8*, i8** %165, align 8
  %179 = getelementptr inbounds i8, i8* %178, i64 %164
  %180 = getelementptr inbounds i8, i8* %179, i64 12
  %181 = bitcast i8* %180 to i32*
  store i32 %177, i32* %181, align 1
  %182 = load %"class.mojo::Message"*, %"class.mojo::Message"** %8, align 8
  %183 = load i64, i64* %12, align 8
  %184 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %182, i64 0, i32 1, i32 2
  %185 = load i8*, i8** %184, align 8
  %186 = getelementptr inbounds i8, i8* %185, i64 %183
  %187 = getelementptr inbounds i8, i8* %186, i64 40
  %188 = icmp eq i64 %164, -1
  br i1 %188, label %194, label %189

189:                                              ; preds = %161
  %190 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %151, i64 0, i32 1, i32 2
  %191 = load i8*, i8** %190, align 8
  %192 = getelementptr inbounds i8, i8* %191, i64 %164
  %193 = bitcast i8* %192 to %"class.gfx::mojom::internal::PointF_Data"*
  br label %194

194:                                              ; preds = %155, %161, %189
  %195 = phi i8* [ %187, %189 ], [ %187, %161 ], [ %160, %155 ]
  %196 = phi %"class.gfx::mojom::internal::PointF_Data"* [ %193, %189 ], [ null, %161 ], [ null, %155 ]
  %197 = bitcast i8* %195 to i64*
  %198 = icmp eq %"class.gfx::mojom::internal::PointF_Data"* %196, null
  %199 = ptrtoint %"class.gfx::mojom::internal::PointF_Data"* %196 to i64
  %200 = ptrtoint i8* %195 to i64
  %201 = sub i64 %199, %200
  %202 = select i1 %198, i64 0, i64 %201
  store i64 %202, i64* %197, align 8
  %203 = load %"class.blink::mojom::ViewState"*, %"class.blink::mojom::ViewState"** %4, align 8
  %204 = getelementptr inbounds %"class.blink::mojom::ViewState", %"class.blink::mojom::ViewState"* %203, i64 0, i32 5
  %205 = load i64, i64* %204, align 8
  %206 = load %"class.mojo::Message"*, %"class.mojo::Message"** %8, align 8
  %207 = load i64, i64* %12, align 8
  %208 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %206, i64 0, i32 1, i32 2
  %209 = load i8*, i8** %208, align 8
  %210 = getelementptr inbounds i8, i8* %209, i64 %207
  %211 = getelementptr inbounds i8, i8* %210, i64 48
  %212 = bitcast i8* %211 to i64*
  store i64 %205, i64* %212, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #13
  br label %213

213:                                              ; preds = %2, %194
  ret void
}

declare void @_ZN5blink5mojom8internal14ViewState_DataC1Ev(%"class.blink::mojom::internal::ViewState_Data"*) unnamed_addr #7

declare void @_ZN3gfx5mojom8internal11PointF_DataC1Ev(%"class.gfx::mojom::internal::PointF_Data"*) unnamed_addr #7

declare void @_ZN3gfx5mojom8internal10Point_DataC1Ev(%"class.gfx::mojom::internal::Point_Data"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal10SerializerIN5blink5mojom16HttpBodyDataViewEKNS_9StructPtrINS3_8HttpBodyEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal13HttpBody_DataEEE(%"class.mojo::StructPtr.85"* dereferenceable(8), %"class.mojo::internal::MessageFragment.221"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::internal::MessageFragment.213", align 8
  %4 = alloca %"class.mojo::internal::MessageFragment.229", align 8
  %5 = getelementptr inbounds %"class.mojo::StructPtr.85", %"class.mojo::StructPtr.85"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::mojom::HttpBody"*, %"class.blink::mojom::HttpBody"** %5, align 8
  %7 = icmp eq %"class.blink::mojom::HttpBody"* %6, null
  br i1 %7, label %102, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.mojo::internal::MessageFragment.221", %"class.mojo::internal::MessageFragment.221"* %1, i64 0, i32 0
  %10 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %11 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %10, i64 0, i32 1
  %12 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %11, i64 32) #13
  %13 = getelementptr inbounds %"class.mojo::internal::MessageFragment.221", %"class.mojo::internal::MessageFragment.221"* %1, i64 0, i32 1
  store i64 %12, i64* %13, align 8
  %14 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %15 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %14, i64 0, i32 1, i32 2
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 %12
  %18 = bitcast i8* %17 to %"class.blink::mojom::internal::HttpBody_Data"*
  tail call void @_ZN5blink5mojom8internal13HttpBody_DataC1Ev(%"class.blink::mojom::internal::HttpBody_Data"* %18) #13
  %19 = load %"class.blink::mojom::HttpBody"*, %"class.blink::mojom::HttpBody"** %5, align 8
  %20 = bitcast %"class.mojo::internal::MessageFragment.213"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %3, i64 0, i32 0
  %22 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %3, i64 0, i32 1
  %23 = bitcast %"class.mojo::internal::MessageFragment.221"* %1 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.mojo::internal::MessageFragment.213"* %3 to i64*
  store i64 %24, i64* %25, align 8
  store i64 -1, i64* %22, align 8
  %26 = getelementptr inbounds %"class.blink::mojom::HttpBody", %"class.blink::mojom::HttpBody"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %8
  %30 = inttoptr i64 %24 to %"class.mojo::Message"*
  %31 = load i64, i64* %13, align 8
  %32 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %30, i64 0, i32 1, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  %35 = getelementptr inbounds i8, i8* %34, i64 8
  br label %52

36:                                               ; preds = %8
  %37 = getelementptr inbounds %"class.blink::mojom::HttpBody", %"class.blink::mojom::HttpBody"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4mojo8internal10SerializerIN9mojo_base5mojom16String16DataViewEKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEE9SerializeERSC_RNS0_15MessageFragmentINS3_8internal13String16_DataEEE(%"class.std::__1::basic_string"* dereferenceable(24) %37, %"class.mojo::internal::MessageFragment.213"* nonnull dereferenceable(16) %3) #13
  %38 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %39 = load i64, i64* %22, align 8
  %40 = load i64, i64* %13, align 8
  %41 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %38, i64 0, i32 1, i32 2
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 %40
  %44 = getelementptr inbounds i8, i8* %43, i64 8
  %45 = icmp eq i64 %39, -1
  br i1 %45, label %52, label %46

46:                                               ; preds = %36
  %47 = load %"class.mojo::Message"*, %"class.mojo::Message"** %21, align 8
  %48 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %47, i64 0, i32 1, i32 2
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 %39
  %51 = bitcast i8* %50 to %"class.mojo_base::mojom::internal::String16_Data"*
  br label %52

52:                                               ; preds = %29, %36, %46
  %53 = phi i8* [ %44, %46 ], [ %44, %36 ], [ %35, %29 ]
  %54 = phi %"class.mojo_base::mojom::internal::String16_Data"* [ %51, %46 ], [ null, %36 ], [ null, %29 ]
  %55 = bitcast i8* %53 to i64*
  %56 = icmp eq %"class.mojo_base::mojom::internal::String16_Data"* %54, null
  %57 = ptrtoint %"class.mojo_base::mojom::internal::String16_Data"* %54 to i64
  %58 = ptrtoint i8* %53 to i64
  %59 = sub i64 %57, %58
  %60 = select i1 %56, i64 0, i64 %59
  store i64 %60, i64* %55, align 8
  %61 = load %"class.blink::mojom::HttpBody"*, %"class.blink::mojom::HttpBody"** %5, align 8
  %62 = getelementptr inbounds %"class.blink::mojom::HttpBody", %"class.blink::mojom::HttpBody"* %61, i64 0, i32 1
  %63 = bitcast %"class.mojo::internal::MessageFragment.229"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #13
  %64 = getelementptr inbounds %"class.mojo::internal::MessageFragment.229", %"class.mojo::internal::MessageFragment.229"* %4, i64 0, i32 1
  %65 = load i64, i64* %23, align 8
  %66 = bitcast %"class.mojo::internal::MessageFragment.229"* %4 to i64*
  store i64 %65, i64* %66, align 8
  store i64 -1, i64* %64, align 8
  call void @_ZN4mojo8internal10SerializerIN5blink5mojom19RequestBodyDataViewEKNS_9StructPtrINS3_11RequestBodyEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal16RequestBody_DataEEE(%"class.mojo::StructPtr.89"* dereferenceable(8) %62, %"class.mojo::internal::MessageFragment.229"* nonnull dereferenceable(16) %4) #13
  %67 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %68 = load i64, i64* %13, align 8
  %69 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %67, i64 0, i32 1, i32 2
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 %68
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = load i64, i64* %64, align 8
  %74 = icmp eq i64 %73, -1
  br i1 %74, label %82, label %75

75:                                               ; preds = %52
  %76 = getelementptr inbounds %"class.mojo::internal::MessageFragment.229", %"class.mojo::internal::MessageFragment.229"* %4, i64 0, i32 0
  %77 = load %"class.mojo::Message"*, %"class.mojo::Message"** %76, align 8
  %78 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %77, i64 0, i32 1, i32 2
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 %73
  %81 = bitcast i8* %80 to %"class.blink::mojom::internal::RequestBody_Data"*
  br label %82

82:                                               ; preds = %52, %75
  %83 = phi %"class.blink::mojom::internal::RequestBody_Data"* [ %81, %75 ], [ null, %52 ]
  %84 = bitcast i8* %72 to i64*
  %85 = icmp eq %"class.blink::mojom::internal::RequestBody_Data"* %83, null
  %86 = ptrtoint %"class.blink::mojom::internal::RequestBody_Data"* %83 to i64
  %87 = ptrtoint i8* %72 to i64
  %88 = sub i64 %86, %87
  %89 = select i1 %85, i64 0, i64 %88
  store i64 %89, i64* %84, align 8
  %90 = load %"class.blink::mojom::HttpBody"*, %"class.blink::mojom::HttpBody"** %5, align 8
  %91 = getelementptr inbounds %"class.blink::mojom::HttpBody", %"class.blink::mojom::HttpBody"* %90, i64 0, i32 2
  %92 = load i8, i8* %91, align 8, !range !2
  %93 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %94 = load i64, i64* %13, align 8
  %95 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %93, i64 0, i32 1, i32 2
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 %94
  %98 = getelementptr inbounds i8, i8* %97, i64 24
  %99 = load i8, i8* %98, align 1
  %100 = and i8 %99, -2
  %101 = or i8 %100, %92
  store i8 %101, i8* %98, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #13
  br label %102

102:                                              ; preds = %2, %82
  ret void
}

declare void @_ZN5blink5mojom8internal13HttpBody_DataC1Ev(%"class.blink::mojom::internal::HttpBody_Data"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal10SerializerIN5blink5mojom19RequestBodyDataViewEKNS_9StructPtrINS3_11RequestBodyEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal16RequestBody_DataEEE(%"class.mojo::StructPtr.89"* dereferenceable(8), %"class.mojo::internal::MessageFragment.229"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::internal::MessageFragment.234", align 8
  %4 = alloca %"class.mojo::internal::ContainerValidateParams", align 8
  %5 = getelementptr inbounds %"class.mojo::StructPtr.89", %"class.mojo::StructPtr.89"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::mojom::RequestBody"*, %"class.blink::mojom::RequestBody"** %5, align 8
  %7 = icmp eq %"class.blink::mojom::RequestBody"* %6, null
  br i1 %7, label %122, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.mojo::internal::MessageFragment.229", %"class.mojo::internal::MessageFragment.229"* %1, i64 0, i32 0
  %10 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %11 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %10, i64 0, i32 1
  %12 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %11, i64 32) #13
  %13 = getelementptr inbounds %"class.mojo::internal::MessageFragment.229", %"class.mojo::internal::MessageFragment.229"* %1, i64 0, i32 1
  store i64 %12, i64* %13, align 8
  %14 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %15 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %14, i64 0, i32 1, i32 2
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 %12
  %18 = bitcast i8* %17 to %"class.blink::mojom::internal::RequestBody_Data"*
  tail call void @_ZN5blink5mojom8internal16RequestBody_DataC1Ev(%"class.blink::mojom::internal::RequestBody_Data"* %18) #13
  %19 = load %"class.blink::mojom::RequestBody"*, %"class.blink::mojom::RequestBody"** %5, align 8
  %20 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %21 = bitcast %"class.mojo::internal::ContainerValidateParams"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #13
  %22 = bitcast %"class.mojo::internal::ContainerValidateParams"* %4 to i64*
  store i64 -6148914691236517206, i64* %22, align 8
  %23 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %4, i64 0, i32 0
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %4, i64 0, i32 1
  store i8 0, i8* %24, align 4
  %25 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %4, i64 0, i32 2
  %26 = getelementptr inbounds %"class.blink::mojom::RequestBody", %"class.blink::mojom::RequestBody"* %19, i64 0, i32 0, i32 0, i32 1
  %27 = bitcast %"class.mojo::StructPtr.95"** %26 to i64*
  %28 = bitcast %"class.mojo::internal::ContainerValidateParams"** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false)
  %29 = load i64, i64* %27, align 8
  %30 = bitcast %"class.blink::mojom::RequestBody"* %19 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 3
  %34 = icmp ugt i64 %33, 268435455
  br i1 %34, label %53, label %35

35:                                               ; preds = %8
  %36 = trunc i64 %33 to i32
  %37 = trunc i64 %32 to i32
  %38 = shl i32 %37, 1
  %39 = or i32 %38, 8
  %40 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %20, i64 0, i32 1
  %41 = zext i32 %39 to i64
  %42 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %40, i64 %41) #13
  %43 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %20, i64 0, i32 1, i32 2
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 %42
  %46 = bitcast i8* %45 to i32*
  store i32 %39, i32* %46, align 1
  %47 = getelementptr inbounds i8, i8* %45, i64 4
  %48 = bitcast i8* %47 to i32*
  store i32 %36, i32* %48, align 1
  %49 = load i64, i64* %27, align 8
  %50 = load i64, i64* %30, align 8
  %51 = sub i64 %49, %50
  %52 = ashr exact i64 %51, 3
  br label %53

53:                                               ; preds = %35, %8
  %54 = phi i64 [ -1, %8 ], [ %42, %35 ]
  %55 = phi i64 [ %33, %8 ], [ %52, %35 ]
  %56 = phi i64 [ %32, %8 ], [ %51, %35 ]
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %79, label %58

58:                                               ; preds = %53
  %59 = bitcast %"class.mojo::internal::MessageFragment.234"* %3 to i8*
  %60 = getelementptr inbounds %"class.mojo::internal::MessageFragment.234", %"class.mojo::internal::MessageFragment.234"* %3, i64 0, i32 0
  %61 = getelementptr inbounds %"class.mojo::internal::MessageFragment.234", %"class.mojo::internal::MessageFragment.234"* %3, i64 0, i32 1
  %62 = getelementptr inbounds %"class.blink::mojom::RequestBody", %"class.blink::mojom::RequestBody"* %19, i64 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %20, i64 0, i32 1, i32 2
  br label %64

64:                                               ; preds = %64, %58
  %65 = phi i64 [ 0, %58 ], [ %75, %64 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #13
  store %"class.mojo::Message"* %20, %"class.mojo::Message"** %60, align 8
  %66 = load i8*, i8** %63, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 8
  %68 = getelementptr inbounds i8, i8* %67, i64 %54
  %69 = bitcast i8* %68 to %"class.blink::mojom::internal::Element_Data"*
  %70 = getelementptr inbounds %"class.blink::mojom::internal::Element_Data", %"class.blink::mojom::internal::Element_Data"* %69, i64 %65
  %71 = ptrtoint i8* %66 to i64
  %72 = ptrtoint %"class.blink::mojom::internal::Element_Data"* %70 to i64
  %73 = sub i64 %72, %71
  store i64 %73, i64* %61, align 8
  %74 = bitcast %"class.blink::mojom::internal::Element_Data"* %70 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %74, i8 0, i64 16, i1 false) #13
  %75 = add nuw i64 %65, 1
  %76 = load %"class.mojo::StructPtr.95"*, %"class.mojo::StructPtr.95"** %62, align 8
  %77 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %76, i64 %65
  call void @_ZN4mojo8internal10SerializerIN5blink5mojom15ElementDataViewEKNS_9StructPtrINS3_7ElementEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal12Element_DataEEEb(%"class.mojo::StructPtr.95"* dereferenceable(8) %77, %"class.mojo::internal::MessageFragment.234"* nonnull dereferenceable(16) %3, i1 zeroext true) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #13
  %78 = icmp ult i64 %75, %55
  br i1 %78, label %64, label %79

79:                                               ; preds = %64, %53
  %80 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %81 = load i64, i64* %13, align 8
  %82 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %80, i64 0, i32 1, i32 2
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 %81
  %85 = getelementptr inbounds i8, i8* %84, i64 8
  %86 = icmp eq i64 %54, -1
  br i1 %86, label %92, label %87

87:                                               ; preds = %79
  %88 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %20, i64 0, i32 1, i32 2
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds i8, i8* %89, i64 %54
  %91 = bitcast i8* %90 to %"class.mojo::internal::Array_Data.232"*
  br label %92

92:                                               ; preds = %79, %87
  %93 = phi %"class.mojo::internal::Array_Data.232"* [ %91, %87 ], [ null, %79 ]
  %94 = bitcast i8* %85 to i64*
  %95 = icmp eq %"class.mojo::internal::Array_Data.232"* %93, null
  %96 = ptrtoint %"class.mojo::internal::Array_Data.232"* %93 to i64
  %97 = ptrtoint i8* %85 to i64
  %98 = sub i64 %96, %97
  %99 = select i1 %95, i64 0, i64 %98
  store i64 %99, i64* %94, align 8
  %100 = load %"class.blink::mojom::RequestBody"*, %"class.blink::mojom::RequestBody"** %5, align 8
  %101 = getelementptr inbounds %"class.blink::mojom::RequestBody", %"class.blink::mojom::RequestBody"* %100, i64 0, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %104 = load i64, i64* %13, align 8
  %105 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %103, i64 0, i32 1, i32 2
  %106 = load i8*, i8** %105, align 8
  %107 = getelementptr inbounds i8, i8* %106, i64 %104
  %108 = getelementptr inbounds i8, i8* %107, i64 16
  %109 = bitcast i8* %108 to i64*
  store i64 %102, i64* %109, align 1
  %110 = load %"class.blink::mojom::RequestBody"*, %"class.blink::mojom::RequestBody"** %5, align 8
  %111 = getelementptr inbounds %"class.blink::mojom::RequestBody", %"class.blink::mojom::RequestBody"* %110, i64 0, i32 2
  %112 = load i8, i8* %111, align 8, !range !2
  %113 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %114 = load i64, i64* %13, align 8
  %115 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %113, i64 0, i32 1, i32 2
  %116 = load i8*, i8** %115, align 8
  %117 = getelementptr inbounds i8, i8* %116, i64 %114
  %118 = getelementptr inbounds i8, i8* %117, i64 24
  %119 = load i8, i8* %118, align 1
  %120 = and i8 %119, -2
  %121 = or i8 %120, %112
  store i8 %121, i8* %118, align 1
  call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #13
  br label %122

122:                                              ; preds = %2, %92
  ret void
}

declare void @_ZN5blink5mojom8internal16RequestBody_DataC1Ev(%"class.blink::mojom::internal::RequestBody_Data"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal10SerializerIN5blink5mojom15ElementDataViewEKNS_9StructPtrINS3_7ElementEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal12Element_DataEEEb(%"class.mojo::StructPtr.95"* dereferenceable(8), %"class.mojo::internal::MessageFragment.234"* dereferenceable(16), i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::MessageFragment.225", align 8
  %5 = alloca %"class.mojo::internal::ContainerValidateParams", align 8
  %6 = alloca %"class.mojo::internal::MessageFragment.240", align 8
  %7 = alloca %"class.mojo::internal::MessageFragment.242", align 8
  %8 = getelementptr inbounds %"class.mojo::StructPtr.95", %"class.mojo::StructPtr.95"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::mojom::Element"*, %"class.blink::mojom::Element"** %8, align 8
  %10 = icmp eq %"class.blink::mojom::Element"* %9, null
  br i1 %10, label %11, label %20

11:                                               ; preds = %3
  br i1 %2, label %12, label %261

12:                                               ; preds = %11
  %13 = getelementptr inbounds %"class.mojo::internal::MessageFragment.234", %"class.mojo::internal::MessageFragment.234"* %1, i64 0, i32 0
  %14 = load %"class.mojo::Message"*, %"class.mojo::Message"** %13, align 8
  %15 = getelementptr inbounds %"class.mojo::internal::MessageFragment.234", %"class.mojo::internal::MessageFragment.234"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %14, i64 0, i32 1, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %16
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %19, i8 0, i64 16, i1 false) #13
  br label %261

20:                                               ; preds = %3
  br i1 %2, label %32, label %21

21:                                               ; preds = %20
  %22 = getelementptr inbounds %"class.mojo::internal::MessageFragment.234", %"class.mojo::internal::MessageFragment.234"* %1, i64 0, i32 0
  %23 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %24 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %23, i64 0, i32 1
  %25 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %24, i64 16) #13
  %26 = getelementptr inbounds %"class.mojo::internal::MessageFragment.234", %"class.mojo::internal::MessageFragment.234"* %1, i64 0, i32 1
  store i64 %25, i64* %26, align 8
  %27 = load %"class.mojo::Message"*, %"class.mojo::Message"** %22, align 8
  %28 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %27, i64 0, i32 1, i32 2
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 %25
  %31 = bitcast i8* %30 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %31, align 1
  br label %32

32:                                               ; preds = %21, %20
  %33 = getelementptr inbounds %"class.mojo::internal::MessageFragment.234", %"class.mojo::internal::MessageFragment.234"* %1, i64 0, i32 0
  %34 = load %"class.mojo::Message"*, %"class.mojo::Message"** %33, align 8
  %35 = getelementptr inbounds %"class.mojo::internal::MessageFragment.234", %"class.mojo::internal::MessageFragment.234"* %1, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %34, i64 0, i32 1, i32 2
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 %36
  %40 = bitcast i8* %39 to i32*
  store i32 16, i32* %40, align 1
  %41 = load %"class.blink::mojom::Element"*, %"class.blink::mojom::Element"** %8, align 8
  %42 = getelementptr inbounds %"class.blink::mojom::Element", %"class.blink::mojom::Element"* %41, i64 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = load %"class.mojo::Message"*, %"class.mojo::Message"** %33, align 8
  %45 = load i64, i64* %35, align 8
  %46 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %44, i64 0, i32 1, i32 2
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 %45
  %49 = getelementptr inbounds i8, i8* %48, i64 4
  %50 = bitcast i8* %49 to i32*
  store i32 %43, i32* %50, align 1
  %51 = load %"class.mojo::Message"*, %"class.mojo::Message"** %33, align 8
  %52 = load i64, i64* %35, align 8
  %53 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %51, i64 0, i32 1, i32 2
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %52
  %56 = getelementptr inbounds i8, i8* %55, i64 4
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %57, align 1
  switch i32 %58, label %261 [
    i32 0, label %59
    i32 1, label %88
    i32 2, label %201
    i32 3, label %231
  ]

59:                                               ; preds = %32
  %60 = load %"class.blink::mojom::Element"*, %"class.blink::mojom::Element"** %8, align 8
  %61 = getelementptr inbounds %"class.blink::mojom::Element", %"class.blink::mojom::Element"* %60, i64 0, i32 1, i32 0
  %62 = load %"class.std::__1::basic_string.15"*, %"class.std::__1::basic_string.15"** %61, align 8
  %63 = bitcast %"class.mojo::internal::MessageFragment.225"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #13
  %64 = getelementptr inbounds %"class.mojo::internal::MessageFragment.225", %"class.mojo::internal::MessageFragment.225"* %4, i64 0, i32 0
  %65 = getelementptr inbounds %"class.mojo::internal::MessageFragment.225", %"class.mojo::internal::MessageFragment.225"* %4, i64 0, i32 1
  store %"class.mojo::Message"* %51, %"class.mojo::Message"** %64, align 8
  store i64 -1, i64* %65, align 8
  call void @_ZN4mojo8internal10SerializerINS_14StringDataViewEKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE9SerializeERSA_RNS0_15MessageFragmentINS0_10Array_DataIcEEEE(%"class.std::__1::basic_string.15"* dereferenceable(24) %62, %"class.mojo::internal::MessageFragment.225"* nonnull dereferenceable(16) %4) #13
  %66 = load %"class.mojo::Message"*, %"class.mojo::Message"** %33, align 8
  %67 = load i64, i64* %35, align 8
  %68 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %66, i64 0, i32 1, i32 2
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 %67
  %71 = getelementptr inbounds i8, i8* %70, i64 8
  %72 = load i64, i64* %65, align 8
  %73 = icmp eq i64 %72, -1
  br i1 %73, label %80, label %74

74:                                               ; preds = %59
  %75 = load %"class.mojo::Message"*, %"class.mojo::Message"** %64, align 8
  %76 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %75, i64 0, i32 1, i32 2
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 %72
  %79 = bitcast i8* %78 to %"class.mojo::internal::Array_Data.226"*
  br label %80

80:                                               ; preds = %59, %74
  %81 = phi %"class.mojo::internal::Array_Data.226"* [ %79, %74 ], [ null, %59 ]
  %82 = bitcast i8* %71 to i64*
  %83 = icmp eq %"class.mojo::internal::Array_Data.226"* %81, null
  %84 = ptrtoint %"class.mojo::internal::Array_Data.226"* %81 to i64
  %85 = ptrtoint i8* %71 to i64
  %86 = sub i64 %84, %85
  %87 = select i1 %83, i64 0, i64 %86
  store i64 %87, i64* %82, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #13
  br label %261

88:                                               ; preds = %32
  %89 = load %"class.blink::mojom::Element"*, %"class.blink::mojom::Element"** %8, align 8
  %90 = getelementptr inbounds %"class.blink::mojom::Element", %"class.blink::mojom::Element"* %89, i64 0, i32 1
  %91 = bitcast %"union.blink::mojom::Element::Union_"* %90 to %"class.std::__1::vector.4"**
  %92 = load %"class.std::__1::vector.4"*, %"class.std::__1::vector.4"** %91, align 8
  %93 = bitcast %"class.mojo::internal::ContainerValidateParams"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %93) #13
  %94 = bitcast %"class.mojo::internal::ContainerValidateParams"* %5 to i64*
  store i64 -6148914691236517206, i64* %94, align 8
  %95 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %5, i64 0, i32 0
  store i32 0, i32* %95, align 8
  %96 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %5, i64 0, i32 1
  store i8 0, i8* %96, align 4
  %97 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %5, i64 0, i32 2
  %98 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %92, i64 0, i32 0, i32 1
  %99 = bitcast i8** %98 to i64*
  %100 = bitcast %"class.mojo::internal::ContainerValidateParams"** %97 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 24, i1 false)
  %101 = load i64, i64* %99, align 8
  %102 = bitcast %"class.std::__1::vector.4"* %92 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = sub i64 %101, %103
  %105 = icmp ugt i64 %104, 4294967287
  br i1 %105, label %121, label %106

106:                                              ; preds = %88
  %107 = trunc i64 %104 to i32
  %108 = add nuw i32 %107, 8
  %109 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %51, i64 0, i32 1
  %110 = zext i32 %108 to i64
  %111 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %109, i64 %110) #13
  %112 = load i8*, i8** %53, align 8
  %113 = getelementptr inbounds i8, i8* %112, i64 %111
  %114 = bitcast i8* %113 to i32*
  store i32 %108, i32* %114, align 1
  %115 = getelementptr inbounds i8, i8* %113, i64 4
  %116 = bitcast i8* %115 to i32*
  store i32 %107, i32* %116, align 1
  %117 = load i64, i64* %102, align 8
  %118 = load i64, i64* %99, align 8
  %119 = sub i64 %118, %117
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %180, label %121

121:                                              ; preds = %106, %88
  %122 = phi i64 [ -1, %88 ], [ %111, %106 ]
  %123 = phi i64 [ %103, %88 ], [ %117, %106 ]
  %124 = phi i64 [ %104, %88 ], [ %119, %106 ]
  %125 = inttoptr i64 %123 to i8*
  %126 = load i8*, i8** %53, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 %122
  %128 = icmp eq i64 %123, 0
  %129 = getelementptr inbounds i8, i8* %127, i64 8
  br i1 %128, label %130, label %141

130:                                              ; preds = %121
  %131 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %92, i64 0, i32 0, i32 0
  %132 = load i8, i8* %125, align 1
  store i8 %132, i8* %129, align 1
  %133 = icmp eq i64 %124, 1
  br i1 %133, label %180, label %134

134:                                              ; preds = %130
  %135 = add i64 %124, -1
  %136 = add i64 %124, -2
  %137 = and i64 %135, 3
  %138 = icmp ult i64 %136, 3
  br i1 %138, label %167, label %139

139:                                              ; preds = %134
  %140 = sub i64 %135, %137
  br label %142

141:                                              ; preds = %121
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %129, i8* nonnull align 1 %125, i64 %124, i1 false) #13
  br label %180

142:                                              ; preds = %142, %139
  %143 = phi i64 [ 1, %139 ], [ %161, %142 ]
  %144 = phi i64 [ %140, %139 ], [ %165, %142 ]
  %145 = load i8*, i8** %131, align 8
  %146 = add nuw nsw i64 %143, 1
  %147 = getelementptr inbounds i8, i8* %145, i64 %143
  %148 = load i8, i8* %147, align 1
  %149 = getelementptr inbounds i8, i8* %129, i64 %143
  store i8 %148, i8* %149, align 1
  %150 = load i8*, i8** %131, align 8
  %151 = add nuw nsw i64 %143, 2
  %152 = getelementptr inbounds i8, i8* %150, i64 %146
  %153 = load i8, i8* %152, align 1
  %154 = getelementptr inbounds i8, i8* %129, i64 %146
  store i8 %153, i8* %154, align 1
  %155 = load i8*, i8** %131, align 8
  %156 = add nuw i64 %143, 3
  %157 = getelementptr inbounds i8, i8* %155, i64 %151
  %158 = load i8, i8* %157, align 1
  %159 = getelementptr inbounds i8, i8* %129, i64 %151
  store i8 %158, i8* %159, align 1
  %160 = load i8*, i8** %131, align 8
  %161 = add nuw i64 %143, 4
  %162 = getelementptr inbounds i8, i8* %160, i64 %156
  %163 = load i8, i8* %162, align 1
  %164 = getelementptr inbounds i8, i8* %129, i64 %156
  store i8 %163, i8* %164, align 1
  %165 = add i64 %144, -4
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %142

167:                                              ; preds = %142, %134
  %168 = phi i64 [ 1, %134 ], [ %161, %142 ]
  %169 = icmp eq i64 %137, 0
  br i1 %169, label %180, label %170

170:                                              ; preds = %167, %170
  %171 = phi i64 [ %174, %170 ], [ %168, %167 ]
  %172 = phi i64 [ %178, %170 ], [ %137, %167 ]
  %173 = load i8*, i8** %131, align 8
  %174 = add nuw i64 %171, 1
  %175 = getelementptr inbounds i8, i8* %173, i64 %171
  %176 = load i8, i8* %175, align 1
  %177 = getelementptr inbounds i8, i8* %129, i64 %171
  store i8 %176, i8* %177, align 1
  %178 = add i64 %172, -1
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %170, !llvm.loop !317

180:                                              ; preds = %167, %170, %106, %130, %141
  %181 = phi i64 [ %122, %130 ], [ %122, %141 ], [ %111, %106 ], [ %122, %170 ], [ %122, %167 ]
  %182 = load %"class.mojo::Message"*, %"class.mojo::Message"** %33, align 8
  %183 = load i64, i64* %35, align 8
  %184 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %182, i64 0, i32 1, i32 2
  %185 = load i8*, i8** %184, align 8
  %186 = getelementptr inbounds i8, i8* %185, i64 %183
  %187 = getelementptr inbounds i8, i8* %186, i64 8
  %188 = icmp eq i64 %181, -1
  br i1 %188, label %193, label %189

189:                                              ; preds = %180
  %190 = load i8*, i8** %53, align 8
  %191 = getelementptr inbounds i8, i8* %190, i64 %181
  %192 = bitcast i8* %191 to %"class.mojo::internal::Array_Data.239"*
  br label %193

193:                                              ; preds = %180, %189
  %194 = phi %"class.mojo::internal::Array_Data.239"* [ %192, %189 ], [ null, %180 ]
  %195 = bitcast i8* %187 to i64*
  %196 = icmp eq %"class.mojo::internal::Array_Data.239"* %194, null
  %197 = ptrtoint %"class.mojo::internal::Array_Data.239"* %194 to i64
  %198 = ptrtoint i8* %187 to i64
  %199 = sub i64 %197, %198
  %200 = select i1 %196, i64 0, i64 %199
  store i64 %200, i64* %195, align 8
  call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %93) #13
  br label %261

201:                                              ; preds = %32
  %202 = load %"class.blink::mojom::Element"*, %"class.blink::mojom::Element"** %8, align 8
  %203 = getelementptr inbounds %"class.blink::mojom::Element", %"class.blink::mojom::Element"* %202, i64 0, i32 1
  %204 = bitcast %"union.blink::mojom::Element::Union_"* %203 to %"class.mojo::StructPtr.99"**
  %205 = load %"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.99"** %204, align 8
  %206 = bitcast %"class.mojo::internal::MessageFragment.240"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %206) #13
  %207 = getelementptr inbounds %"class.mojo::internal::MessageFragment.240", %"class.mojo::internal::MessageFragment.240"* %6, i64 0, i32 0
  %208 = getelementptr inbounds %"class.mojo::internal::MessageFragment.240", %"class.mojo::internal::MessageFragment.240"* %6, i64 0, i32 1
  store %"class.mojo::Message"* %51, %"class.mojo::Message"** %207, align 8
  store i64 -1, i64* %208, align 8
  call void @_ZN4mojo8internal10SerializerIN5blink5mojom12FileDataViewEKNS_9StructPtrINS3_4FileEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal9File_DataEEE(%"class.mojo::StructPtr.99"* dereferenceable(8) %205, %"class.mojo::internal::MessageFragment.240"* nonnull dereferenceable(16) %6) #13
  %209 = load %"class.mojo::Message"*, %"class.mojo::Message"** %33, align 8
  %210 = load i64, i64* %35, align 8
  %211 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %209, i64 0, i32 1, i32 2
  %212 = load i8*, i8** %211, align 8
  %213 = getelementptr inbounds i8, i8* %212, i64 %210
  %214 = getelementptr inbounds i8, i8* %213, i64 8
  %215 = load i64, i64* %208, align 8
  %216 = icmp eq i64 %215, -1
  br i1 %216, label %223, label %217

217:                                              ; preds = %201
  %218 = load %"class.mojo::Message"*, %"class.mojo::Message"** %207, align 8
  %219 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %218, i64 0, i32 1, i32 2
  %220 = load i8*, i8** %219, align 8
  %221 = getelementptr inbounds i8, i8* %220, i64 %215
  %222 = bitcast i8* %221 to %"class.blink::mojom::internal::File_Data"*
  br label %223

223:                                              ; preds = %201, %217
  %224 = phi %"class.blink::mojom::internal::File_Data"* [ %222, %217 ], [ null, %201 ]
  %225 = bitcast i8* %214 to i64*
  %226 = icmp eq %"class.blink::mojom::internal::File_Data"* %224, null
  %227 = ptrtoint %"class.blink::mojom::internal::File_Data"* %224 to i64
  %228 = ptrtoint i8* %214 to i64
  %229 = sub i64 %227, %228
  %230 = select i1 %226, i64 0, i64 %229
  store i64 %230, i64* %225, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %206) #13
  br label %261

231:                                              ; preds = %32
  %232 = load %"class.blink::mojom::Element"*, %"class.blink::mojom::Element"** %8, align 8
  %233 = getelementptr inbounds %"class.blink::mojom::Element", %"class.blink::mojom::Element"* %232, i64 0, i32 1
  %234 = bitcast %"union.blink::mojom::Element::Union_"* %233 to %"class.mojo::StructPtr.106"**
  %235 = load %"class.mojo::StructPtr.106"*, %"class.mojo::StructPtr.106"** %234, align 8
  %236 = bitcast %"class.mojo::internal::MessageFragment.242"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %236) #13
  %237 = getelementptr inbounds %"class.mojo::internal::MessageFragment.242", %"class.mojo::internal::MessageFragment.242"* %7, i64 0, i32 0
  %238 = getelementptr inbounds %"class.mojo::internal::MessageFragment.242", %"class.mojo::internal::MessageFragment.242"* %7, i64 0, i32 1
  store %"class.mojo::Message"* %51, %"class.mojo::Message"** %237, align 8
  store i64 -1, i64* %238, align 8
  call void @_ZN4mojo8internal10SerializerIN5blink5mojom33DEPRECATED_FileSystemFileDataViewEKNS_9StructPtrINS3_25DEPRECATED_FileSystemFileEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal30DEPRECATED_FileSystemFile_DataEEE(%"class.mojo::StructPtr.106"* dereferenceable(8) %235, %"class.mojo::internal::MessageFragment.242"* nonnull dereferenceable(16) %7) #13
  %239 = load %"class.mojo::Message"*, %"class.mojo::Message"** %33, align 8
  %240 = load i64, i64* %35, align 8
  %241 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %239, i64 0, i32 1, i32 2
  %242 = load i8*, i8** %241, align 8
  %243 = getelementptr inbounds i8, i8* %242, i64 %240
  %244 = getelementptr inbounds i8, i8* %243, i64 8
  %245 = load i64, i64* %238, align 8
  %246 = icmp eq i64 %245, -1
  br i1 %246, label %253, label %247

247:                                              ; preds = %231
  %248 = load %"class.mojo::Message"*, %"class.mojo::Message"** %237, align 8
  %249 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %248, i64 0, i32 1, i32 2
  %250 = load i8*, i8** %249, align 8
  %251 = getelementptr inbounds i8, i8* %250, i64 %245
  %252 = bitcast i8* %251 to %"class.blink::mojom::internal::DEPRECATED_FileSystemFile_Data"*
  br label %253

253:                                              ; preds = %231, %247
  %254 = phi %"class.blink::mojom::internal::DEPRECATED_FileSystemFile_Data"* [ %252, %247 ], [ null, %231 ]
  %255 = bitcast i8* %244 to i64*
  %256 = icmp eq %"class.blink::mojom::internal::DEPRECATED_FileSystemFile_Data"* %254, null
  %257 = ptrtoint %"class.blink::mojom::internal::DEPRECATED_FileSystemFile_Data"* %254 to i64
  %258 = ptrtoint i8* %244 to i64
  %259 = sub i64 %257, %258
  %260 = select i1 %256, i64 0, i64 %259
  store i64 %260, i64* %255, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %236) #13
  br label %261

261:                                              ; preds = %11, %12, %32, %253, %223, %193, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal10SerializerINS_14StringDataViewEKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE9SerializeERSA_RNS0_15MessageFragmentINS0_10Array_DataIcEEEE(%"class.std::__1::basic_string.15"* dereferenceable(24), %"class.mojo::internal::MessageFragment.225"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string.15", align 8
  %4 = bitcast %"class.std::__1::basic_string.15"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string.15"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = bitcast %"class.std::__1::basic_string.15"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load i8, i8* %8, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string.15"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %13, i64 24, i1 false) #13
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string.15", %"class.std::__1::basic_string.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.15"* nonnull %3, i8* %16, i64 %18) #13
  br label %19

19:                                               ; preds = %12, %14
  %20 = bitcast %"class.std::__1::basic_string.15"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = zext i8 %22 to i64
  br label %29

26:                                               ; preds = %19
  %27 = load i64, i64* %6, align 8
  %28 = icmp ugt i64 %27, 4294967287
  br i1 %28, label %48, label %29

29:                                               ; preds = %24, %26
  %30 = phi i64 [ %25, %24 ], [ %27, %26 ]
  %31 = trunc i64 %30 to i32
  %32 = add nuw i32 %31, 8
  %33 = getelementptr inbounds %"class.mojo::internal::MessageFragment.225", %"class.mojo::internal::MessageFragment.225"* %1, i64 0, i32 0
  %34 = load %"class.mojo::Message"*, %"class.mojo::Message"** %33, align 8
  %35 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %34, i64 0, i32 1
  %36 = zext i32 %32 to i64
  %37 = call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %35, i64 %36) #13
  %38 = getelementptr inbounds %"class.mojo::internal::MessageFragment.225", %"class.mojo::internal::MessageFragment.225"* %1, i64 0, i32 1
  store i64 %37, i64* %38, align 8
  %39 = load %"class.mojo::Message"*, %"class.mojo::Message"** %33, align 8
  %40 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %39, i64 0, i32 1, i32 2
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 %37
  %43 = bitcast i8* %42 to i32*
  store i32 %32, i32* %43, align 1
  %44 = getelementptr inbounds i8, i8* %42, i64 4
  %45 = bitcast i8* %44 to i32*
  store i32 %31, i32* %45, align 1
  %46 = load i8, i8* %21, align 1
  %47 = load i64, i64* %6, align 8
  br label %48

48:                                               ; preds = %26, %29
  %49 = phi i64 [ %27, %26 ], [ %47, %29 ]
  %50 = phi i8 [ %22, %26 ], [ %46, %29 ]
  %51 = getelementptr inbounds %"class.mojo::internal::MessageFragment.225", %"class.mojo::internal::MessageFragment.225"* %1, i64 0, i32 0
  %52 = load %"class.mojo::Message"*, %"class.mojo::Message"** %51, align 8
  %53 = getelementptr inbounds %"class.mojo::internal::MessageFragment.225", %"class.mojo::internal::MessageFragment.225"* %1, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %52, i64 0, i32 1, i32 2
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %54
  %58 = getelementptr inbounds i8, i8* %57, i64 8
  %59 = icmp slt i8 %50, 0
  %60 = load i8*, i8** %5, align 8
  %61 = zext i8 %50 to i64
  %62 = select i1 %59, i8* %60, i8* %4
  %63 = select i1 %59, i64 %49, i64 %61
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %58, i8* align 1 %62, i64 %63, i1 false)
  %64 = load i8, i8* %21, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %48
  %67 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %67) #14
  br label %68

68:                                               ; preds = %66, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.15"*, i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal10SerializerIN5blink5mojom12FileDataViewEKNS_9StructPtrINS3_4FileEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal9File_DataEEE(%"class.mojo::StructPtr.99"* dereferenceable(8), %"class.mojo::internal::MessageFragment.240"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::internal::MessageFragment.213", align 8
  %4 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::mojom::File"*, %"class.blink::mojom::File"** %4, align 8
  %6 = icmp eq %"class.blink::mojom::File"* %5, null
  br i1 %6, label %101, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.mojo::internal::MessageFragment.240", %"class.mojo::internal::MessageFragment.240"* %1, i64 0, i32 0
  %9 = load %"class.mojo::Message"*, %"class.mojo::Message"** %8, align 8
  %10 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %9, i64 0, i32 1
  %11 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %10, i64 40) #13
  %12 = getelementptr inbounds %"class.mojo::internal::MessageFragment.240", %"class.mojo::internal::MessageFragment.240"* %1, i64 0, i32 1
  store i64 %11, i64* %12, align 8
  %13 = load %"class.mojo::Message"*, %"class.mojo::Message"** %8, align 8
  %14 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %13, i64 0, i32 1, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %11
  %17 = bitcast i8* %16 to %"class.blink::mojom::internal::File_Data"*
  tail call void @_ZN5blink5mojom8internal9File_DataC1Ev(%"class.blink::mojom::internal::File_Data"* %17) #13
  %18 = load %"class.blink::mojom::File"*, %"class.blink::mojom::File"** %4, align 8
  %19 = getelementptr inbounds %"class.blink::mojom::File", %"class.blink::mojom::File"* %18, i64 0, i32 0
  %20 = bitcast %"class.mojo::internal::MessageFragment.213"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %3, i64 0, i32 1
  %22 = bitcast %"class.mojo::internal::MessageFragment.240"* %1 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.mojo::internal::MessageFragment.213"* %3 to i64*
  store i64 %23, i64* %24, align 8
  store i64 -1, i64* %21, align 8
  call void @_ZN4mojo8internal10SerializerIN9mojo_base5mojom16String16DataViewEKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEE9SerializeERSC_RNS0_15MessageFragmentINS3_8internal13String16_DataEEE(%"class.std::__1::basic_string"* dereferenceable(24) %19, %"class.mojo::internal::MessageFragment.213"* nonnull dereferenceable(16) %3) #13
  %25 = load %"class.mojo::Message"*, %"class.mojo::Message"** %8, align 8
  %26 = load i64, i64* %12, align 8
  %27 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %25, i64 0, i32 1, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 %26
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = load i64, i64* %21, align 8
  %32 = icmp eq i64 %31, -1
  br i1 %32, label %40, label %33

33:                                               ; preds = %7
  %34 = getelementptr inbounds %"class.mojo::internal::MessageFragment.213", %"class.mojo::internal::MessageFragment.213"* %3, i64 0, i32 0
  %35 = load %"class.mojo::Message"*, %"class.mojo::Message"** %34, align 8
  %36 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %35, i64 0, i32 1, i32 2
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  %39 = bitcast i8* %38 to %"class.mojo_base::mojom::internal::String16_Data"*
  br label %40

40:                                               ; preds = %7, %33
  %41 = phi %"class.mojo_base::mojom::internal::String16_Data"* [ %39, %33 ], [ null, %7 ]
  %42 = bitcast i8* %30 to i64*
  %43 = icmp eq %"class.mojo_base::mojom::internal::String16_Data"* %41, null
  %44 = ptrtoint %"class.mojo_base::mojom::internal::String16_Data"* %41 to i64
  %45 = ptrtoint i8* %30 to i64
  %46 = sub i64 %44, %45
  %47 = select i1 %43, i64 0, i64 %46
  store i64 %47, i64* %42, align 8
  %48 = load %"class.blink::mojom::File"*, %"class.blink::mojom::File"** %4, align 8
  %49 = getelementptr inbounds %"class.blink::mojom::File", %"class.blink::mojom::File"* %48, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = load %"class.mojo::Message"*, %"class.mojo::Message"** %8, align 8
  %52 = load i64, i64* %12, align 8
  %53 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %51, i64 0, i32 1, i32 2
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %52
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i64*
  store i64 %50, i64* %57, align 1
  %58 = load %"class.blink::mojom::File"*, %"class.blink::mojom::File"** %4, align 8
  %59 = getelementptr inbounds %"class.blink::mojom::File", %"class.blink::mojom::File"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = load %"class.mojo::Message"*, %"class.mojo::Message"** %8, align 8
  %62 = load i64, i64* %12, align 8
  %63 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %61, i64 0, i32 1, i32 2
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 %62
  %66 = getelementptr inbounds i8, i8* %65, i64 24
  %67 = bitcast i8* %66 to i64*
  store i64 %60, i64* %67, align 1
  %68 = load %"class.blink::mojom::File"*, %"class.blink::mojom::File"** %4, align 8
  %69 = getelementptr inbounds %"class.blink::mojom::File", %"class.blink::mojom::File"* %68, i64 0, i32 3
  %70 = load %"class.mojo::Message"*, %"class.mojo::Message"** %8, align 8
  %71 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %70, i64 0, i32 1
  %72 = call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %71, i64 16) #13
  %73 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %70, i64 0, i32 1, i32 2
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 %72
  %76 = bitcast i8* %75 to %"class.mojo_base::mojom::internal::Time_Data"*
  call void @_ZN9mojo_base5mojom8internal9Time_DataC1Ev(%"class.mojo_base::mojom::internal::Time_Data"* %76) #13
  %77 = call i64 @_ZN4mojo12StructTraitsIN9mojo_base5mojom12TimeDataViewEN4base4TimeEE14internal_valueERKS5_(%"class.base::Time"* dereferenceable(8) %69) #13
  %78 = load i8*, i8** %73, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 %72
  %80 = getelementptr inbounds i8, i8* %79, i64 8
  %81 = bitcast i8* %80 to i64*
  store i64 %77, i64* %81, align 1
  %82 = load %"class.mojo::Message"*, %"class.mojo::Message"** %8, align 8
  %83 = load i64, i64* %12, align 8
  %84 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %82, i64 0, i32 1, i32 2
  %85 = load i8*, i8** %84, align 8
  %86 = getelementptr inbounds i8, i8* %85, i64 %83
  %87 = getelementptr inbounds i8, i8* %86, i64 32
  %88 = icmp eq i64 %72, -1
  br i1 %88, label %93, label %89

89:                                               ; preds = %40
  %90 = load i8*, i8** %73, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 %72
  %92 = bitcast i8* %91 to %"class.mojo_base::mojom::internal::Time_Data"*
  br label %93

93:                                               ; preds = %40, %89
  %94 = phi %"class.mojo_base::mojom::internal::Time_Data"* [ %92, %89 ], [ null, %40 ]
  %95 = bitcast i8* %87 to i64*
  %96 = icmp eq %"class.mojo_base::mojom::internal::Time_Data"* %94, null
  %97 = ptrtoint %"class.mojo_base::mojom::internal::Time_Data"* %94 to i64
  %98 = ptrtoint i8* %87 to i64
  %99 = sub i64 %97, %98
  %100 = select i1 %96, i64 0, i64 %99
  store i64 %100, i64* %95, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #13
  br label %101

101:                                              ; preds = %2, %93
  ret void
}

declare void @_ZN5blink5mojom8internal9File_DataC1Ev(%"class.blink::mojom::internal::File_Data"*) unnamed_addr #7

declare i64 @_ZN4mojo12StructTraitsIN9mojo_base5mojom12TimeDataViewEN4base4TimeEE14internal_valueERKS5_(%"class.base::Time"* dereferenceable(8)) local_unnamed_addr #7

declare void @_ZN9mojo_base5mojom8internal9Time_DataC1Ev(%"class.mojo_base::mojom::internal::Time_Data"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal10SerializerIN5blink5mojom33DEPRECATED_FileSystemFileDataViewEKNS_9StructPtrINS3_25DEPRECATED_FileSystemFileEEEE9SerializeERS8_RNS0_15MessageFragmentINS3_8internal30DEPRECATED_FileSystemFile_DataEEE(%"class.mojo::StructPtr.106"* dereferenceable(8), %"class.mojo::internal::MessageFragment.242"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.mojo::StructPtr.106", %"class.mojo::StructPtr.106"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::mojom::DEPRECATED_FileSystemFile"*, %"class.blink::mojom::DEPRECATED_FileSystemFile"** %3, align 8
  %5 = icmp eq %"class.blink::mojom::DEPRECATED_FileSystemFile"* %4, null
  br i1 %5, label %130, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.mojo::internal::MessageFragment.242", %"class.mojo::internal::MessageFragment.242"* %1, i64 0, i32 0
  %8 = load %"class.mojo::Message"*, %"class.mojo::Message"** %7, align 8
  %9 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %8, i64 0, i32 1
  %10 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %9, i64 40) #13
  %11 = getelementptr inbounds %"class.mojo::internal::MessageFragment.242", %"class.mojo::internal::MessageFragment.242"* %1, i64 0, i32 1
  store i64 %10, i64* %11, align 8
  %12 = load %"class.mojo::Message"*, %"class.mojo::Message"** %7, align 8
  %13 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %12, i64 0, i32 1, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %10
  %16 = bitcast i8* %15 to %"class.blink::mojom::internal::DEPRECATED_FileSystemFile_Data"*
  tail call void @_ZN5blink5mojom8internal30DEPRECATED_FileSystemFile_DataC1Ev(%"class.blink::mojom::internal::DEPRECATED_FileSystemFile_Data"* %16) #13
  %17 = load %"class.blink::mojom::DEPRECATED_FileSystemFile"*, %"class.blink::mojom::DEPRECATED_FileSystemFile"** %3, align 8
  %18 = getelementptr inbounds %"class.blink::mojom::DEPRECATED_FileSystemFile", %"class.blink::mojom::DEPRECATED_FileSystemFile"* %17, i64 0, i32 0
  %19 = load %"class.mojo::Message"*, %"class.mojo::Message"** %7, align 8
  %20 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %19, i64 0, i32 1
  %21 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %20, i64 16) #13
  %22 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %19, i64 0, i32 1, i32 2
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 %21
  %25 = bitcast i8* %24 to %"class.url::mojom::internal::Url_Data"*
  tail call void @_ZN3url5mojom8internal8Url_DataC1Ev(%"class.url::mojom::internal::Url_Data"* %25) #13
  %26 = tail call { i8*, i64 } @_ZN4mojo12StructTraitsIN3url5mojom11UrlDataViewE4GURLE3urlERKS4_(%class.GURL* dereferenceable(120) %18) #13
  %27 = extractvalue { i8*, i64 } %26, 0
  %28 = extractvalue { i8*, i64 } %26, 1
  %29 = icmp ugt i64 %28, 4294967287
  br i1 %29, label %40, label %30

30:                                               ; preds = %6
  %31 = trunc i64 %28 to i32
  %32 = add nuw i32 %31, 8
  %33 = zext i32 %32 to i64
  %34 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %20, i64 %33) #13
  %35 = load i8*, i8** %22, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 %34
  %37 = bitcast i8* %36 to i32*
  store i32 %32, i32* %37, align 1
  %38 = getelementptr inbounds i8, i8* %36, i64 4
  %39 = bitcast i8* %38 to i32*
  store i32 %31, i32* %39, align 1
  br label %40

40:                                               ; preds = %30, %6
  %41 = phi i64 [ -1, %6 ], [ %34, %30 ]
  %42 = load i8*, i8** %22, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 %41
  %44 = getelementptr inbounds i8, i8* %43, i64 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %27, i64 %28, i1 false) #13
  %45 = load i8*, i8** %22, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %21
  %47 = getelementptr inbounds i8, i8* %46, i64 8
  %48 = icmp eq i64 %41, -1
  %49 = getelementptr inbounds i8, i8* %45, i64 %41
  %50 = bitcast i8* %49 to %"class.mojo::internal::Array_Data.226"*
  %51 = select i1 %48, %"class.mojo::internal::Array_Data.226"* null, %"class.mojo::internal::Array_Data.226"* %50
  %52 = bitcast i8* %47 to i64*
  %53 = icmp eq %"class.mojo::internal::Array_Data.226"* %51, null
  %54 = ptrtoint %"class.mojo::internal::Array_Data.226"* %51 to i64
  %55 = ptrtoint i8* %47 to i64
  %56 = sub i64 %54, %55
  %57 = select i1 %53, i64 0, i64 %56
  store i64 %57, i64* %52, align 8
  %58 = load %"class.mojo::Message"*, %"class.mojo::Message"** %7, align 8
  %59 = load i64, i64* %11, align 8
  %60 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %58, i64 0, i32 1, i32 2
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %59
  %63 = getelementptr inbounds i8, i8* %62, i64 8
  %64 = icmp eq i64 %21, -1
  br i1 %64, label %69, label %65

65:                                               ; preds = %40
  %66 = load i8*, i8** %22, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 %21
  %68 = bitcast i8* %67 to %"class.url::mojom::internal::Url_Data"*
  br label %69

69:                                               ; preds = %40, %65
  %70 = phi %"class.url::mojom::internal::Url_Data"* [ %68, %65 ], [ null, %40 ]
  %71 = bitcast i8* %63 to i64*
  %72 = icmp eq %"class.url::mojom::internal::Url_Data"* %70, null
  %73 = ptrtoint %"class.url::mojom::internal::Url_Data"* %70 to i64
  %74 = ptrtoint i8* %63 to i64
  %75 = sub i64 %73, %74
  %76 = select i1 %72, i64 0, i64 %75
  store i64 %76, i64* %71, align 8
  %77 = load %"class.blink::mojom::DEPRECATED_FileSystemFile"*, %"class.blink::mojom::DEPRECATED_FileSystemFile"** %3, align 8
  %78 = getelementptr inbounds %"class.blink::mojom::DEPRECATED_FileSystemFile", %"class.blink::mojom::DEPRECATED_FileSystemFile"* %77, i64 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = load %"class.mojo::Message"*, %"class.mojo::Message"** %7, align 8
  %81 = load i64, i64* %11, align 8
  %82 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %80, i64 0, i32 1, i32 2
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 %81
  %85 = getelementptr inbounds i8, i8* %84, i64 16
  %86 = bitcast i8* %85 to i64*
  store i64 %79, i64* %86, align 1
  %87 = load %"class.blink::mojom::DEPRECATED_FileSystemFile"*, %"class.blink::mojom::DEPRECATED_FileSystemFile"** %3, align 8
  %88 = getelementptr inbounds %"class.blink::mojom::DEPRECATED_FileSystemFile", %"class.blink::mojom::DEPRECATED_FileSystemFile"* %87, i64 0, i32 2
  %89 = load i64, i64* %88, align 8
  %90 = load %"class.mojo::Message"*, %"class.mojo::Message"** %7, align 8
  %91 = load i64, i64* %11, align 8
  %92 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %90, i64 0, i32 1, i32 2
  %93 = load i8*, i8** %92, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 %91
  %95 = getelementptr inbounds i8, i8* %94, i64 24
  %96 = bitcast i8* %95 to i64*
  store i64 %89, i64* %96, align 1
  %97 = load %"class.blink::mojom::DEPRECATED_FileSystemFile"*, %"class.blink::mojom::DEPRECATED_FileSystemFile"** %3, align 8
  %98 = getelementptr inbounds %"class.blink::mojom::DEPRECATED_FileSystemFile", %"class.blink::mojom::DEPRECATED_FileSystemFile"* %97, i64 0, i32 3
  %99 = load %"class.mojo::Message"*, %"class.mojo::Message"** %7, align 8
  %100 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %99, i64 0, i32 1
  %101 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %100, i64 16) #13
  %102 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %99, i64 0, i32 1, i32 2
  %103 = load i8*, i8** %102, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 %101
  %105 = bitcast i8* %104 to %"class.mojo_base::mojom::internal::Time_Data"*
  tail call void @_ZN9mojo_base5mojom8internal9Time_DataC1Ev(%"class.mojo_base::mojom::internal::Time_Data"* %105) #13
  %106 = tail call i64 @_ZN4mojo12StructTraitsIN9mojo_base5mojom12TimeDataViewEN4base4TimeEE14internal_valueERKS5_(%"class.base::Time"* dereferenceable(8) %98) #13
  %107 = load i8*, i8** %102, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 %101
  %109 = getelementptr inbounds i8, i8* %108, i64 8
  %110 = bitcast i8* %109 to i64*
  store i64 %106, i64* %110, align 1
  %111 = load %"class.mojo::Message"*, %"class.mojo::Message"** %7, align 8
  %112 = load i64, i64* %11, align 8
  %113 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %111, i64 0, i32 1, i32 2
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds i8, i8* %114, i64 %112
  %116 = getelementptr inbounds i8, i8* %115, i64 32
  %117 = icmp eq i64 %101, -1
  br i1 %117, label %122, label %118

118:                                              ; preds = %69
  %119 = load i8*, i8** %102, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 %101
  %121 = bitcast i8* %120 to %"class.mojo_base::mojom::internal::Time_Data"*
  br label %122

122:                                              ; preds = %69, %118
  %123 = phi %"class.mojo_base::mojom::internal::Time_Data"* [ %121, %118 ], [ null, %69 ]
  %124 = bitcast i8* %116 to i64*
  %125 = icmp eq %"class.mojo_base::mojom::internal::Time_Data"* %123, null
  %126 = ptrtoint %"class.mojo_base::mojom::internal::Time_Data"* %123 to i64
  %127 = ptrtoint i8* %116 to i64
  %128 = sub i64 %126, %127
  %129 = select i1 %125, i64 0, i64 %128
  store i64 %129, i64* %124, align 8
  br label %130

130:                                              ; preds = %2, %122
  ret void
}

declare void @_ZN5blink5mojom8internal30DEPRECATED_FileSystemFile_DataC1Ev(%"class.blink::mojom::internal::DEPRECATED_FileSystemFile_Data"*) unnamed_addr #7

declare { i8*, i64 } @_ZN4mojo12StructTraitsIN3url5mojom11UrlDataViewE4GURLE3urlERKS4_(%class.GURL* dereferenceable(120)) local_unnamed_addr #7

declare void @_ZN3url5mojom8internal8Url_DataC1Ev(%"class.url::mojom::internal::Url_Data"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_117WriteStringVectorERKNSt3__16vectorIN4absl8optionalINS1_12basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEENS8_ISB_EEEEPNS0_15SerializeObjectE(%"class.std::__1::vector.40"* nocapture readonly dereferenceable(24), %"struct.blink::(anonymous namespace)::SerializeObject"*) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 1
  %11 = bitcast %"class.absl::optional"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.40"* %0 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 5
  %17 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = icmp ult i64 %16, 67108863
  br i1 %18, label %19, label %20

19:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  store i8* null, i8** %9, align 8
  br label %29

20:                                               ; preds = %2
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %16) #13
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67108863) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i8* %21, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  store i8* %24, i8** %9, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0), i32 351, %"class.logging::CheckOpResult"* nonnull %6) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %19, %20, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  %30 = load i64, i64* %11, align 8
  %31 = load i64, i64* %13, align 8
  %32 = sub i64 %30, %31
  %33 = lshr exact i64 %32, 5
  %34 = trunc i64 %33 to i32
  %35 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %1, i64 0, i32 0
  %36 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #13
  store i32 %34, i32* %5, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %35, i8* nonnull %36) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #13
  %37 = load i64, i64* %11, align 8
  %38 = load i64, i64* %13, align 8
  %39 = icmp eq i64 %37, %38
  br i1 %39, label %42, label %40

40:                                               ; preds = %29
  %41 = bitcast i32* %3 to i8*
  br label %43

42:                                               ; preds = %53, %29
  ret void

43:                                               ; preds = %40, %53
  %44 = phi i64 [ %38, %40 ], [ %56, %53 ]
  %45 = phi i64 [ 0, %40 ], [ %54, %53 ]
  %46 = inttoptr i64 %44 to %"class.absl::optional"*
  %47 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %46, i64 %45, i32 0, i32 0, i32 0, i32 0
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #13
  store i32 -1, i32* %3, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %35, i8* nonnull %41) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #13
  br label %53

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %46, i64 %45, i32 0, i32 0, i32 0, i32 1, i32 0
  call fastcc void @_ZN5blink12_GLOBAL__N_111WriteStringERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS0_15SerializeObjectE(%"class.std::__1::basic_string"* dereferenceable(24) %52, %"struct.blink::(anonymous namespace)::SerializeObject"* %1) #13
  br label %53

53:                                               ; preds = %50, %51
  %54 = add nuw i64 %45, 1
  %55 = load i64, i64* %11, align 8
  %56 = load i64, i64* %13, align 8
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 5
  %59 = icmp ult i64 %54, %58
  br i1 %59, label %43, label %42
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_115WriteFrameStateERKNS_18ExplodedFrameStateEPNS0_15SerializeObjectEb(%"struct.blink::ExplodedFrameState"* dereferenceable(512), %"struct.blink::(anonymous namespace)::SerializeObject"*) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.logging::CheckOpResult", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca double, align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.base::Time", align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %"class.logging::CheckOpResult", align 8
  %20 = alloca i32, align 4
  %21 = alloca %"class.logging::CheckOpResult", align 8
  %22 = alloca %"class.logging::CheckError", align 8
  %23 = alloca i32, align 4
  %24 = alloca double, align 8
  %25 = alloca double, align 8
  %26 = alloca i32, align 4
  %27 = alloca i64, align 8
  %28 = alloca i64, align 8
  %29 = alloca double, align 8
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %2
  %40 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %1, i64 0, i32 0
  %41 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #13
  store i32 -1, i32* %35, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %40, i8* nonnull %41) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #13
  br label %44

42:                                               ; preds = %2
  %43 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call fastcc void @_ZN5blink12_GLOBAL__N_111WriteStringERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS0_15SerializeObjectE(%"class.std::__1::basic_string"* dereferenceable(24) %43, %"struct.blink::(anonymous namespace)::SerializeObject"* %1) #13
  br label %44

44:                                               ; preds = %39, %42
  %45 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %1, i64 0, i32 0
  %50 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #13
  store i32 -1, i32* %34, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %49, i8* nonnull %50) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #13
  br label %53

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  call fastcc void @_ZN5blink12_GLOBAL__N_111WriteStringERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS0_15SerializeObjectE(%"class.std::__1::basic_string"* dereferenceable(24) %52, %"struct.blink::(anonymous namespace)::SerializeObject"* %1) #13
  br label %53

53:                                               ; preds = %48, %51
  %54 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 7
  %55 = load i8, i8* %54, align 4, !range !2
  %56 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %1, i64 0, i32 0
  %57 = zext i8 %55 to i32
  %58 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58) #13
  store i32 %57, i32* %33, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %56, i8* nonnull %58) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58) #13
  %59 = load i8, i8* %54, align 4, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %68, label %61

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 9, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64) #13
  store i32 %63, i32* %32, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %56, i8* nonnull %64) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64) #13
  %65 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 9, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #13
  store i32 %66, i32* %31, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %56, i8* nonnull %67) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #13
  br label %68

68:                                               ; preds = %53, %61
  %69 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %70 = load i8, i8* %69, align 8, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  %73 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %73) #13
  store i32 -1, i32* %30, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %56, i8* nonnull %73) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73) #13
  br label %76

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  call fastcc void @_ZN5blink12_GLOBAL__N_111WriteStringERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS0_15SerializeObjectE(%"class.std::__1::basic_string"* dereferenceable(24) %75, %"struct.blink::(anonymous namespace)::SerializeObject"* %1) #13
  br label %76

76:                                               ; preds = %72, %74
  %77 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 5
  call fastcc void @_ZN5blink12_GLOBAL__N_117WriteStringVectorERKNSt3__16vectorIN4absl8optionalINS1_12basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEENS8_ISB_EEEEPNS0_15SerializeObjectE(%"class.std::__1::vector.40"* dereferenceable(24) %77, %"struct.blink::(anonymous namespace)::SerializeObject"* %1)
  %78 = load i8, i8* %54, align 4, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 12
  %82 = bitcast double* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast double* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84)
  %85 = bitcast double* %29 to i64*
  store i64 %83, i64* %85, align 8
  call void @_ZN4base6Pickle9WriteDataEPKci(%"class.base::Pickle"* %56, i8* nonnull %84, i32 8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84)
  br label %86

86:                                               ; preds = %76, %80
  %87 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 10
  %88 = load i64, i64* %87, align 8
  %89 = bitcast i64* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #13
  store i64 %88, i64* %28, align 8
  call void @_ZN4base6Pickle16WriteBytesStaticILm8EEEvPKv(%"class.base::Pickle"* %56, i8* nonnull %89) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #13
  %90 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 11
  %91 = load i64, i64* %90, align 8
  %92 = bitcast i64* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #13
  store i64 %91, i64* %27, align 8
  call void @_ZN4base6Pickle16WriteBytesStaticILm8EEEvPKv(%"class.base::Pickle"* %56, i8* nonnull %92) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #13
  %93 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 13
  %94 = load i32, i32* %93, align 8
  %95 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95) #13
  store i32 %94, i32* %26, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %56, i8* nonnull %95) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95) #13
  %96 = load i8, i8* %54, align 4, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %107, label %98

98:                                               ; preds = %86
  %99 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 8, i32 0
  %100 = load float, float* %99, align 4
  %101 = fpext float %100 to double
  %102 = bitcast double* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102)
  store double %101, double* %25, align 8
  call void @_ZN4base6Pickle9WriteDataEPKci(%"class.base::Pickle"* %56, i8* nonnull %102, i32 8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102)
  %103 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 8, i32 1
  %104 = load float, float* %103, align 4
  %105 = fpext float %104 to double
  %106 = bitcast double* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106)
  store double %105, double* %24, align 8
  call void @_ZN4base6Pickle9WriteDataEPKci(%"class.base::Pickle"* %56, i8* nonnull %106, i32 8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  br label %107

107:                                              ; preds = %86, %98
  %108 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 6
  %109 = load i32, i32* %108, align 8
  %110 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110) #13
  store i32 %109, i32* %23, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %56, i8* nonnull %110) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #13
  %111 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %112 = load i8, i8* %111, align 8, !range !2
  %113 = icmp eq i8 %112, 0
  %114 = zext i8 %112 to i32
  %115 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115) #13
  store i32 %114, i32* %18, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %56, i8* nonnull %115) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115) #13
  br i1 %113, label %122, label %116

116:                                              ; preds = %107
  %117 = load i8, i8* %111, align 8, !range !2
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %119, label %120, !prof !275

119:                                              ; preds = %116
  call void @llvm.trap() #13
  unreachable

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  call fastcc void @_ZN5blink12_GLOBAL__N_111WriteStringERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS0_15SerializeObjectE(%"class.std::__1::basic_string"* dereferenceable(24) %121, %"struct.blink::(anonymous namespace)::SerializeObject"* %1)
  br label %122

122:                                              ; preds = %107, %120
  %123 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 15, i32 1, i32 0
  %124 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %123, align 8
  %125 = icmp ne %"class.network::ResourceRequestBody"* %124, null
  %126 = zext i1 %125 to i32
  %127 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %127) #13
  store i32 %126, i32* %16, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %56, i8* nonnull %127) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %127) #13
  br i1 %125, label %128, label %214

128:                                              ; preds = %122
  %129 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %123, align 8
  %130 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %129, i64 0, i32 2
  %131 = bitcast %"class.logging::CheckOpResult"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #13
  %132 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %11, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %132, align 8
  %133 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %129, i64 0, i32 2, i32 0, i32 1
  %134 = bitcast %"class.network::DataElement"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.std::__1::vector"* %130 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = sub i64 %135, %137
  %139 = sdiv exact i64 %138, 56
  %140 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #13
  %141 = icmp ult i64 %139, 38347922
  br i1 %141, label %142, label %143

142:                                              ; preds = %128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #13
  store i8* null, i8** %132, align 8
  br label %152

143:                                              ; preds = %128
  %144 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %139) #13
  %145 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 38347922) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %9, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i8* %144, i8* %145) #13
  %146 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  %147 = load i8*, i8** %146, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #13
  store i8* %147, i8** %132, align 8
  %148 = icmp eq i8* %147, null
  br i1 %148, label %152, label %149

149:                                              ; preds = %143
  %150 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0), i32 351, %"class.logging::CheckOpResult"* nonnull %11) #13
  %151 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #13
  br label %152

152:                                              ; preds = %149, %143, %142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #13
  %153 = load i64, i64* %134, align 8
  %154 = load i64, i64* %136, align 8
  %155 = sub i64 %153, %154
  %156 = sdiv exact i64 %155, 56
  %157 = trunc i64 %156 to i32
  %158 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158) #13
  store i32 %157, i32* %10, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %56, i8* nonnull %158) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158) #13
  %159 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %130, i64 0, i32 0, i32 0
  %160 = load %"class.network::DataElement"*, %"class.network::DataElement"** %159, align 8
  %161 = load %"class.network::DataElement"*, %"class.network::DataElement"** %133, align 8
  %162 = icmp eq %"class.network::DataElement"* %160, %161
  br i1 %162, label %206, label %163

163:                                              ; preds = %152
  %164 = bitcast i32* %5 to i8*
  %165 = bitcast i32* %4 to i8*
  %166 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %167 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %168 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %167, i64 0, i32 1, i32 1
  %169 = bitcast %"class.std::__1::basic_string"* %14 to i8**
  %170 = bitcast i64* %6 to i8*
  %171 = bitcast i64* %7 to i8*
  %172 = bitcast %"class.base::Time"* %15 to i8*
  %173 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 0, i32 0, i32 0
  %174 = bitcast double* %13 to i8*
  br label %175

175:                                              ; preds = %203, %163
  %176 = phi %"class.network::DataElement"* [ %160, %163 ], [ %204, %203 ]
  %177 = getelementptr inbounds %"class.network::DataElement", %"class.network::DataElement"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %178 = load i64, i64* %177, align 8
  switch i64 %178, label %179 [
    i64 4, label %189
    i64 3, label %203
    i64 2, label %203
    i64 1, label %181
  ], !prof !288

179:                                              ; preds = %175
  %180 = call dereferenceable(24) %"class.network::DataElementBytes"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKN7network16DataElementBytesEEET_v() #15
  unreachable

181:                                              ; preds = %175
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %164) #13
  store i32 0, i32* %5, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %56, i8* nonnull %164) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %164) #13
  %182 = getelementptr inbounds %"class.network::DataElement", %"class.network::DataElement"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load i8*, i8** %182, align 8
  %184 = getelementptr inbounds %"class.network::DataElement", %"class.network::DataElement"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %185 = load i64, i64* %184, align 8
  %186 = ptrtoint i8* %183 to i64
  %187 = sub i64 %185, %186
  %188 = trunc i64 %187 to i32
  call void @_ZN4base6Pickle9WriteDataEPKci(%"class.base::Pickle"* %56, i8* %183, i32 %188) #13
  br label %203

189:                                              ; preds = %175
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %165) #13
  store i32 1, i32* %4, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %56, i8* nonnull %165) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %166) #13
  %190 = getelementptr inbounds %"class.network::DataElement", %"class.network::DataElement"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNK4base8FilePath13AsUTF16UnsafeEv(%"class.std::__1::basic_string"* nonnull sret %14, %"class.base::FilePath"* %190) #13
  call fastcc void @_ZN5blink12_GLOBAL__N_111WriteStringERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS0_15SerializeObjectE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %14, %"struct.blink::(anonymous namespace)::SerializeObject"* %1) #13
  %191 = load i8, i8* %168, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %193, label %195

193:                                              ; preds = %189
  %194 = load i8*, i8** %169, align 8
  call void @_ZdlPv(i8* %194) #14
  br label %195

195:                                              ; preds = %193, %189
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #13
  %196 = getelementptr inbounds %"class.network::DataElement", %"class.network::DataElement"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %197 = load i64, i64* %196, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %170) #13
  store i64 %197, i64* %6, align 8
  call void @_ZN4base6Pickle16WriteBytesStaticILm8EEEvPKv(%"class.base::Pickle"* %56, i8* nonnull %170) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %170) #13
  %198 = getelementptr inbounds %"class.network::DataElement", %"class.network::DataElement"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %199 = load i64, i64* %198, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171) #13
  store i64 %199, i64* %7, align 8
  call void @_ZN4base6Pickle16WriteBytesStaticILm8EEEvPKv(%"class.base::Pickle"* %56, i8* nonnull %171) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #13
  %200 = getelementptr inbounds %"class.network::DataElement", %"class.network::DataElement"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %201 = load i64, i64* %200, align 8
  store i64 %201, i64* %173, align 8
  %202 = call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* nonnull %15) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %174) #13
  store double %202, double* %13, align 8
  call void @_ZN4base6Pickle9WriteDataEPKci(%"class.base::Pickle"* %56, i8* nonnull %174, i32 8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %174) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #13
  br label %203

203:                                              ; preds = %195, %181, %175, %175
  %204 = getelementptr inbounds %"class.network::DataElement", %"class.network::DataElement"* %176, i64 1
  %205 = icmp eq %"class.network::DataElement"* %204, %161
  br i1 %205, label %206, label %175

206:                                              ; preds = %203, %152
  %207 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %129, i64 0, i32 3
  %208 = load i64, i64* %207, align 8
  %209 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %209) #13
  store i64 %208, i64* %8, align 8
  call void @_ZN4base6Pickle16WriteBytesStaticILm8EEEvPKv(%"class.base::Pickle"* %56, i8* nonnull %209) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %209) #13
  %210 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 15, i32 2
  %211 = load i8, i8* %210, align 8, !range !2
  %212 = zext i8 %211 to i32
  %213 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %213) #13
  store i32 %212, i32* %17, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %56, i8* nonnull %213) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %213) #13
  br label %214

214:                                              ; preds = %122, %206
  %215 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load i8, i8* %215, align 8, !range !2
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %218, label %220

218:                                              ; preds = %214
  %219 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %219) #13
  store i32 -1, i32* %3, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %56, i8* nonnull %219) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %219) #13
  br label %222

220:                                              ; preds = %214
  %221 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call fastcc void @_ZN5blink12_GLOBAL__N_111WriteStringERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS0_15SerializeObjectE(%"class.std::__1::basic_string"* dereferenceable(24) %221, %"struct.blink::(anonymous namespace)::SerializeObject"* %1) #13
  br label %222

222:                                              ; preds = %218, %220
  %223 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 22
  %224 = bitcast %"class.logging::CheckOpResult"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #13
  %225 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %21, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %225, align 8
  %226 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 22, i32 0, i32 1
  %227 = bitcast %"struct.blink::ExplodedFrameState"** %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = bitcast %"class.std::__1::vector.47"* %223 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = sub i64 %228, %230
  %232 = ashr exact i64 %231, 9
  %233 = bitcast %"class.logging::CheckOpResult"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #13
  %234 = icmp ult i64 %232, 4194303
  br i1 %234, label %235, label %236

235:                                              ; preds = %222
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #13
  store i8* null, i8** %225, align 8
  br label %245

236:                                              ; preds = %222
  %237 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %232) #13
  %238 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 4194303) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %19, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i8* %237, i8* %238) #13
  %239 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %19, i64 0, i32 0
  %240 = load i8*, i8** %239, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #13
  store i8* %240, i8** %225, align 8
  %241 = icmp eq i8* %240, null
  br i1 %241, label %245, label %242

242:                                              ; preds = %236
  %243 = bitcast %"class.logging::CheckError"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %243) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %22, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0), i32 351, %"class.logging::CheckOpResult"* nonnull %21) #13
  %244 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %22) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %243) #13
  br label %245

245:                                              ; preds = %235, %236, %242
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #13
  %246 = load i64, i64* %227, align 8
  %247 = load i64, i64* %229, align 8
  %248 = sub i64 %246, %247
  %249 = lshr exact i64 %248, 9
  %250 = trunc i64 %249 to i32
  %251 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %251) #13
  store i32 %250, i32* %20, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %56, i8* nonnull %251) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %251) #13
  %252 = load i64, i64* %227, align 8
  %253 = load i64, i64* %229, align 8
  %254 = icmp eq i64 %252, %253
  br i1 %254, label %255, label %256

255:                                              ; preds = %256, %245
  ret void

256:                                              ; preds = %245, %256
  %257 = phi i64 [ %263, %256 ], [ %253, %245 ]
  %258 = phi i64 [ %261, %256 ], [ 0, %245 ]
  %259 = inttoptr i64 %257 to %"struct.blink::ExplodedFrameState"*
  %260 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %259, i64 %258
  call fastcc void @_ZN5blink12_GLOBAL__N_115WriteFrameStateERKNS_18ExplodedFrameStateEPNS0_15SerializeObjectEb(%"struct.blink::ExplodedFrameState"* dereferenceable(512) %260, %"struct.blink::(anonymous namespace)::SerializeObject"* %1)
  %261 = add nuw i64 %258, 1
  %262 = load i64, i64* %227, align 8
  %263 = load i64, i64* %229, align 8
  %264 = sub i64 %262, %263
  %265 = ashr exact i64 %264, 9
  %266 = icmp ult i64 %261, %265
  br i1 %266, label %256, label %255
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #7

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_111WriteStringERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS0_15SerializeObjectE(%"class.std::__1::basic_string"* dereferenceable(24), %"struct.blink::(anonymous namespace)::SerializeObject"*) unnamed_addr #0 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i16* %12, i16* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = shl i64 %18, 1
  %20 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i64 %19, 2147483647
  br i1 %23, label %24, label %25

24:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %21, align 8
  br label %34

25:                                               ; preds = %2
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %19) #13
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2147483647) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.7, i64 0, i64 0), i8* %26, i8* %27) #13
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %21, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0), i32 301, %"class.logging::CheckOpResult"* nonnull %5) #13
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  %35 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SerializeObject", %"struct.blink::(anonymous namespace)::SerializeObject"* %1, i64 0, i32 0
  %36 = trunc i64 %19 to i32
  %37 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37)
  store i32 %36, i32* %4, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %35, i8* nonnull %37) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37)
  %38 = bitcast i16* %17 to i8*
  call void @_ZN4base6Pickle10WriteBytesEPKvi(%"class.base::Pickle"* %35, i8* %38, i32 %36) #13
  ret void
}

declare void @_ZN4base6Pickle10WriteBytesEPKvi(%"class.base::Pickle"*, i8*, i32) local_unnamed_addr #7

declare void @_ZN4base6Pickle16WriteBytesStaticILm8EEEvPKv(%"class.base::Pickle"*, i8*) local_unnamed_addr #7

declare double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN7network19ResourceRequestBodyD1Ev(%"class.network::ResourceRequestBody"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE6assignIPS9_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS9_NS_15iterator_traitsISF_E9referenceEEE5valueEvE4typeESF_SF_(%"class.std::__1::vector.40"*, %"class.absl::optional"*, %"class.absl::optional"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::vector<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > >, std::__1::allocator<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::_ConstructTransaction", align 8
  %5 = alloca %"struct.std::__1::vector<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > >, std::__1::allocator<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::_ConstructTransaction", align 8
  %6 = ptrtoint %"class.absl::optional"* %2 to i64
  %7 = ptrtoint %"class.absl::optional"* %1 to i64
  %8 = sub i64 %6, %7
  %9 = ashr exact i64 %8, 5
  %10 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"class.absl::optional"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.40"* %0 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 5
  %17 = icmp ugt i64 %9, %16
  %18 = inttoptr i64 %14 to %"class.absl::optional"*
  br i1 %17, label %80, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 1
  %21 = bitcast %"class.absl::optional"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %22, %14
  %24 = ashr exact i64 %23, 5
  %25 = icmp ugt i64 %9, %24
  %26 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 %24
  %27 = select i1 %25, %"class.absl::optional"* %26, %"class.absl::optional"* %2
  %28 = icmp eq %"class.absl::optional"* %27, %1
  br i1 %28, label %36, label %29

29:                                               ; preds = %19, %29
  %30 = phi %"class.absl::optional"* [ %34, %29 ], [ %18, %19 ]
  %31 = phi %"class.absl::optional"* [ %33, %29 ], [ %1, %19 ]
  %32 = tail call dereferenceable(32) %"class.absl::optional"* @_ZN4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEaSERKS8_(%"class.absl::optional"* %30, %"class.absl::optional"* dereferenceable(32) %31) #13
  %33 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %31, i64 1
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %30, i64 1
  %35 = icmp eq %"class.absl::optional"* %33, %27
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %19
  %37 = phi %"class.absl::optional"* [ %18, %19 ], [ %34, %29 ]
  br i1 %25, label %38, label %58

38:                                               ; preds = %36
  %39 = load i64, i64* %21, align 8
  %40 = load i64, i64* %13, align 8
  %41 = sub i64 %39, %40
  %42 = ashr exact i64 %41, 5
  %43 = sub nsw i64 %9, %42
  %44 = bitcast %"struct.std::__1::vector<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > >, std::__1::allocator<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::_ConstructTransaction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #13
  %45 = getelementptr inbounds %"struct.std::__1::vector<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > >, std::__1::allocator<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::_ConstructTransaction", %"struct.std::__1::vector<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > >, std::__1::allocator<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::_ConstructTransaction"* %4, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.std::__1::vector<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > >, std::__1::allocator<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::_ConstructTransaction", %"struct.std::__1::vector<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > >, std::__1::allocator<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::_ConstructTransaction"* %4, i64 0, i32 1
  %47 = getelementptr inbounds %"struct.std::__1::vector<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > >, std::__1::allocator<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::_ConstructTransaction", %"struct.std::__1::vector<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > >, std::__1::allocator<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::_ConstructTransaction"* %4, i64 0, i32 2
  store %"class.std::__1::vector.40"* %0, %"class.std::__1::vector.40"** %45, align 8
  %48 = bitcast %"class.absl::optional"** %46 to i64*
  store i64 %39, i64* %48, align 8
  %49 = inttoptr i64 %39 to %"class.absl::optional"*
  %50 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %49, i64 %43
  store %"class.absl::optional"* %50, %"class.absl::optional"** %47, align 8
  %51 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 2
  %52 = bitcast %"class.std::__1::__compressed_pair.42"* %51 to %"class.std::__1::allocator.45"*
  call void @_ZNSt3__125__construct_range_forwardINS_9allocatorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS1_IDsEEEEEEEEPS9_SB_EEvRT_T0_SE_RT1_(%"class.std::__1::allocator.45"* dereferenceable(1) %52, %"class.absl::optional"* %27, %"class.absl::optional"* %2, %"class.absl::optional"** dereferenceable(8) %46) #13
  %53 = load i64, i64* %48, align 8
  %54 = bitcast %"struct.std::__1::vector<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > >, std::__1::allocator<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::_ConstructTransaction"* %4 to %"class.std::__1::__vector_base.41"**
  %55 = load %"class.std::__1::__vector_base.41"*, %"class.std::__1::__vector_base.41"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__vector_base.41", %"class.std::__1::__vector_base.41"* %55, i64 0, i32 1
  %57 = bitcast %"class.absl::optional"** %56 to i64*
  store i64 %53, i64* %57, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #13
  br label %150

58:                                               ; preds = %36
  %59 = load %"class.absl::optional"*, %"class.absl::optional"** %20, align 8
  %60 = icmp eq %"class.absl::optional"* %59, %37
  br i1 %60, label %79, label %61

61:                                               ; preds = %58, %77
  %62 = phi %"class.absl::optional"* [ %63, %77 ], [ %59, %58 ]
  %63 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %62, i64 -1
  %64 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8, i8* %64, align 8, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %77, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %62, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %69 = bitcast %"class.std::__1::basic_string"* %68 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %69, i64 0, i32 1, i32 1
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %67
  %74 = bitcast %"class.std::__1::basic_string"* %68 to i8**
  %75 = load i8*, i8** %74, align 8
  tail call void @_ZdlPv(i8* %75) #14
  br label %76

76:                                               ; preds = %73, %67
  store i8 0, i8* %64, align 8
  br label %77

77:                                               ; preds = %76, %61
  %78 = icmp eq %"class.absl::optional"* %63, %37
  br i1 %78, label %79, label %61

79:                                               ; preds = %77, %58
  store %"class.absl::optional"* %37, %"class.absl::optional"** %20, align 8
  br label %150

80:                                               ; preds = %3
  %81 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 0
  %82 = icmp eq i64 %14, 0
  br i1 %82, label %111, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 1
  %85 = load %"class.absl::optional"*, %"class.absl::optional"** %84, align 8
  %86 = icmp eq %"class.absl::optional"* %85, %18
  br i1 %86, label %107, label %87

87:                                               ; preds = %83, %103
  %88 = phi %"class.absl::optional"* [ %89, %103 ], [ %85, %83 ]
  %89 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %88, i64 -1
  %90 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %89, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %103, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %88, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %95 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %95, i64 0, i32 1, i32 1
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = bitcast %"class.std::__1::basic_string"* %94 to i8**
  %101 = load i8*, i8** %100, align 8
  tail call void @_ZdlPv(i8* %101) #14
  br label %102

102:                                              ; preds = %99, %93
  store i8 0, i8* %90, align 8
  br label %103

103:                                              ; preds = %102, %87
  %104 = icmp eq %"class.absl::optional"* %89, %18
  br i1 %104, label %105, label %87

105:                                              ; preds = %103
  %106 = load %"class.absl::optional"*, %"class.absl::optional"** %81, align 8
  br label %107

107:                                              ; preds = %105, %83
  %108 = phi %"class.absl::optional"* [ %106, %105 ], [ %18, %83 ]
  store %"class.absl::optional"* %18, %"class.absl::optional"** %84, align 8
  %109 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %108, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %109) #14
  %110 = bitcast %"class.std::__1::vector.40"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 24, i1 false) #13
  br label %111

111:                                              ; preds = %80, %107
  %112 = phi i64 [ %12, %80 ], [ 0, %107 ]
  %113 = icmp ugt i64 %9, 576460752303423487
  br i1 %113, label %114, label %116

114:                                              ; preds = %111
  %115 = bitcast %"class.std::__1::vector.40"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %115) #15
  unreachable

116:                                              ; preds = %111
  %117 = ashr exact i64 %112, 5
  %118 = icmp ult i64 %117, 288230376151711743
  br i1 %118, label %119, label %126

119:                                              ; preds = %116
  %120 = ashr exact i64 %112, 4
  %121 = icmp ult i64 %120, %9
  br i1 %121, label %126, label %122

122:                                              ; preds = %119
  %123 = icmp ugt i64 %120, 576460752303423487
  br i1 %123, label %124, label %126

124:                                              ; preds = %122
  %125 = bitcast %"class.std::__1::vector.40"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %125) #15
  unreachable

126:                                              ; preds = %119, %116, %122
  %127 = phi i64 [ %120, %122 ], [ 576460752303423487, %116 ], [ %9, %119 ]
  %128 = shl i64 %127, 5
  %129 = tail call i8* @_Znwm(i64 %128) #14
  %130 = bitcast i8* %129 to %"class.absl::optional"*
  %131 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 1
  %132 = bitcast %"class.absl::optional"** %131 to i8**
  store i8* %129, i8** %132, align 8
  %133 = bitcast %"class.std::__1::vector.40"* %0 to i8**
  store i8* %129, i8** %133, align 8
  %134 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %130, i64 %127
  store %"class.absl::optional"* %134, %"class.absl::optional"** %10, align 8
  %135 = bitcast %"struct.std::__1::vector<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > >, std::__1::allocator<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::_ConstructTransaction"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #13
  %136 = getelementptr inbounds %"struct.std::__1::vector<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > >, std::__1::allocator<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::_ConstructTransaction", %"struct.std::__1::vector<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > >, std::__1::allocator<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::_ConstructTransaction"* %5, i64 0, i32 0
  %137 = getelementptr inbounds %"struct.std::__1::vector<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > >, std::__1::allocator<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::_ConstructTransaction", %"struct.std::__1::vector<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > >, std::__1::allocator<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::_ConstructTransaction"* %5, i64 0, i32 1
  %138 = getelementptr inbounds %"struct.std::__1::vector<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > >, std::__1::allocator<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::_ConstructTransaction", %"struct.std::__1::vector<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > >, std::__1::allocator<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::_ConstructTransaction"* %5, i64 0, i32 2
  store %"class.std::__1::vector.40"* %0, %"class.std::__1::vector.40"** %136, align 8
  %139 = ptrtoint i8* %129 to i64
  %140 = bitcast %"class.absl::optional"** %137 to i64*
  store i64 %139, i64* %140, align 8
  %141 = bitcast i8* %129 to %"class.absl::optional"*
  %142 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %141, i64 %9
  store %"class.absl::optional"* %142, %"class.absl::optional"** %138, align 8
  %143 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 2
  %144 = bitcast %"class.std::__1::__compressed_pair.42"* %143 to %"class.std::__1::allocator.45"*
  call void @_ZNSt3__125__construct_range_forwardINS_9allocatorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS1_IDsEEEEEEEEPS9_SB_EEvRT_T0_SE_RT1_(%"class.std::__1::allocator.45"* dereferenceable(1) %144, %"class.absl::optional"* %1, %"class.absl::optional"* %2, %"class.absl::optional"** dereferenceable(8) %137) #13
  %145 = load i64, i64* %140, align 8
  %146 = bitcast %"struct.std::__1::vector<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > >, std::__1::allocator<absl::optional<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::_ConstructTransaction"* %5 to %"class.std::__1::__vector_base.41"**
  %147 = load %"class.std::__1::__vector_base.41"*, %"class.std::__1::__vector_base.41"** %146, align 8
  %148 = getelementptr inbounds %"class.std::__1::__vector_base.41", %"class.std::__1::__vector_base.41"* %147, i64 0, i32 1
  %149 = bitcast %"class.absl::optional"** %148 to i64*
  store i64 %145, i64* %149, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #13
  br label %150

150:                                              ; preds = %38, %79, %126
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__construct_range_forwardINS_9allocatorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS1_IDsEEEEEEEEPS9_SB_EEvRT_T0_SE_RT1_(%"class.std::__1::allocator.45"* dereferenceable(1), %"class.absl::optional"*, %"class.absl::optional"*, %"class.absl::optional"** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"class.absl::optional"* %1, %2
  br i1 %5, label %207, label %6

6:                                                ; preds = %4
  %7 = load %"class.absl::optional"*, %"class.absl::optional"** %3, align 8
  br label %8

8:                                                ; preds = %6, %202
  %9 = phi %"class.absl::optional"* [ %205, %202 ], [ %7, %6 ]
  %10 = phi %"class.absl::optional"* [ %203, %202 ], [ %1, %6 ]
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #13
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %202, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %15
  %23 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #13
  br label %201

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i16*, i16** %26, align 8
  %28 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp ult i64 %29, 11
  br i1 %30, label %31, label %36

31:                                               ; preds = %25
  %32 = bitcast %"class.std::__1::basic_string"* %17 to i16*
  %33 = trunc i64 %29 to i8
  %34 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  store i8 %33, i8* %35, align 1
  br label %53

36:                                               ; preds = %25
  %37 = icmp ugt i64 %29, 9223372036854775791
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = bitcast %"class.std::__1::basic_string"* %17 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %39) #15
  unreachable

40:                                               ; preds = %36
  %41 = add nuw nsw i64 %29, 8
  %42 = and i64 %41, -8
  %43 = icmp slt i64 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %40
  tail call void @abort() #15
  unreachable

45:                                               ; preds = %40
  %46 = shl i64 %42, 1
  %47 = tail call i8* @_Znwm(i64 %46) #14
  %48 = bitcast i8* %47 to i16*
  %49 = bitcast %"class.std::__1::basic_string"* %17 to i8**
  store i8* %47, i8** %49, align 8
  %50 = or i64 %42, -9223372036854775808
  %51 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %29, i64* %52, align 8
  br label %53

53:                                               ; preds = %45, %31
  %54 = phi i16* [ %32, %31 ], [ %48, %45 ]
  %55 = add nuw nsw i64 %29, 1
  %56 = add i64 %29, 1
  %57 = icmp ult i64 %56, 16
  br i1 %57, label %148, label %58

58:                                               ; preds = %53
  %59 = getelementptr i16, i16* %54, i64 1
  %60 = getelementptr i16, i16* %59, i64 %29
  %61 = getelementptr i16, i16* %27, i64 1
  %62 = getelementptr i16, i16* %61, i64 %29
  %63 = icmp ult i16* %54, %62
  %64 = icmp ult i16* %27, %60
  %65 = and i1 %63, %64
  br i1 %65, label %148, label %66

66:                                               ; preds = %58
  %67 = and i64 %56, -16
  %68 = sub i64 %55, %67
  %69 = getelementptr i16, i16* %27, i64 %67
  %70 = getelementptr i16, i16* %54, i64 %67
  %71 = add i64 %67, -16
  %72 = lshr exact i64 %71, 4
  %73 = add nuw nsw i64 %72, 1
  %74 = and i64 %73, 3
  %75 = icmp ult i64 %71, 48
  br i1 %75, label %127, label %76

76:                                               ; preds = %66
  %77 = sub nsw i64 %73, %74
  br label %78

78:                                               ; preds = %78, %76
  %79 = phi i64 [ 0, %76 ], [ %124, %78 ]
  %80 = phi i64 [ %77, %76 ], [ %125, %78 ]
  %81 = getelementptr i16, i16* %27, i64 %79
  %82 = getelementptr i16, i16* %54, i64 %79
  %83 = bitcast i16* %81 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !318
  %85 = getelementptr i16, i16* %81, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !318
  %88 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %88, align 2, !alias.scope !321, !noalias !318
  %89 = getelementptr i16, i16* %82, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %90, align 2, !alias.scope !321, !noalias !318
  %91 = or i64 %79, 16
  %92 = getelementptr i16, i16* %27, i64 %91
  %93 = getelementptr i16, i16* %54, i64 %91
  %94 = bitcast i16* %92 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !318
  %96 = getelementptr i16, i16* %92, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !318
  %99 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %99, align 2, !alias.scope !321, !noalias !318
  %100 = getelementptr i16, i16* %93, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %101, align 2, !alias.scope !321, !noalias !318
  %102 = or i64 %79, 32
  %103 = getelementptr i16, i16* %27, i64 %102
  %104 = getelementptr i16, i16* %54, i64 %102
  %105 = bitcast i16* %103 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !318
  %107 = getelementptr i16, i16* %103, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !318
  %110 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %110, align 2, !alias.scope !321, !noalias !318
  %111 = getelementptr i16, i16* %104, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !321, !noalias !318
  %113 = or i64 %79, 48
  %114 = getelementptr i16, i16* %27, i64 %113
  %115 = getelementptr i16, i16* %54, i64 %113
  %116 = bitcast i16* %114 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !318
  %118 = getelementptr i16, i16* %114, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !318
  %121 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %121, align 2, !alias.scope !321, !noalias !318
  %122 = getelementptr i16, i16* %115, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %123, align 2, !alias.scope !321, !noalias !318
  %124 = add i64 %79, 64
  %125 = add i64 %80, -4
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %78, !llvm.loop !323

127:                                              ; preds = %78, %66
  %128 = phi i64 [ 0, %66 ], [ %124, %78 ]
  %129 = icmp eq i64 %74, 0
  br i1 %129, label %146, label %130

130:                                              ; preds = %127, %130
  %131 = phi i64 [ %143, %130 ], [ %128, %127 ]
  %132 = phi i64 [ %144, %130 ], [ %74, %127 ]
  %133 = getelementptr i16, i16* %27, i64 %131
  %134 = getelementptr i16, i16* %54, i64 %131
  %135 = bitcast i16* %133 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !318
  %137 = getelementptr i16, i16* %133, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !318
  %140 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %140, align 2, !alias.scope !321, !noalias !318
  %141 = getelementptr i16, i16* %134, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %142, align 2, !alias.scope !321, !noalias !318
  %143 = add i64 %131, 16
  %144 = add i64 %132, -1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %130, !llvm.loop !324

146:                                              ; preds = %130, %127
  %147 = icmp eq i64 %56, %67
  br i1 %147, label %201, label %148

148:                                              ; preds = %146, %58, %53
  %149 = phi i64 [ %55, %58 ], [ %55, %53 ], [ %68, %146 ]
  %150 = phi i16* [ %27, %58 ], [ %27, %53 ], [ %69, %146 ]
  %151 = phi i16* [ %54, %58 ], [ %54, %53 ], [ %70, %146 ]
  %152 = add i64 %149, -1
  %153 = and i64 %149, 7
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %166, label %155

155:                                              ; preds = %148, %155
  %156 = phi i64 [ %161, %155 ], [ %149, %148 ]
  %157 = phi i16* [ %163, %155 ], [ %150, %148 ]
  %158 = phi i16* [ %162, %155 ], [ %151, %148 ]
  %159 = phi i64 [ %164, %155 ], [ %153, %148 ]
  %160 = load i16, i16* %157, align 2
  store i16 %160, i16* %158, align 2
  %161 = add i64 %156, -1
  %162 = getelementptr inbounds i16, i16* %158, i64 1
  %163 = getelementptr inbounds i16, i16* %157, i64 1
  %164 = add i64 %159, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %155, !llvm.loop !325

166:                                              ; preds = %155, %148
  %167 = phi i64 [ %149, %148 ], [ %161, %155 ]
  %168 = phi i16* [ %150, %148 ], [ %163, %155 ]
  %169 = phi i16* [ %151, %148 ], [ %162, %155 ]
  %170 = icmp ult i64 %152, 7
  br i1 %170, label %201, label %171

171:                                              ; preds = %166, %171
  %172 = phi i64 [ %197, %171 ], [ %167, %166 ]
  %173 = phi i16* [ %199, %171 ], [ %168, %166 ]
  %174 = phi i16* [ %198, %171 ], [ %169, %166 ]
  %175 = load i16, i16* %173, align 2
  store i16 %175, i16* %174, align 2
  %176 = getelementptr inbounds i16, i16* %174, i64 1
  %177 = getelementptr inbounds i16, i16* %173, i64 1
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %174, i64 2
  %180 = getelementptr inbounds i16, i16* %173, i64 2
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %174, i64 3
  %183 = getelementptr inbounds i16, i16* %173, i64 3
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %174, i64 4
  %186 = getelementptr inbounds i16, i16* %173, i64 4
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %174, i64 5
  %189 = getelementptr inbounds i16, i16* %173, i64 5
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %174, i64 6
  %192 = getelementptr inbounds i16, i16* %173, i64 6
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = getelementptr inbounds i16, i16* %174, i64 7
  %195 = getelementptr inbounds i16, i16* %173, i64 7
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = add i64 %172, -8
  %198 = getelementptr inbounds i16, i16* %174, i64 8
  %199 = getelementptr inbounds i16, i16* %173, i64 8
  %200 = icmp eq i64 %197, 0
  br i1 %200, label %201, label %171, !llvm.loop !326

201:                                              ; preds = %166, %171, %146, %22
  store i8 1, i8* %11, align 8
  br label %202

202:                                              ; preds = %8, %201
  %203 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 1
  %204 = load %"class.absl::optional"*, %"class.absl::optional"** %3, align 8
  %205 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %204, i64 1
  store %"class.absl::optional"* %205, %"class.absl::optional"** %3, align 8
  %206 = icmp eq %"class.absl::optional"* %203, %2
  br i1 %206, label %207, label %8

207:                                              ; preds = %202, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink18ExplodedFrameStateENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.47"*, %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.blink::ExplodedFrameState"* %2 to i64
  %5 = ptrtoint %"struct.blink::ExplodedFrameState"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 9
  %8 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.blink::ExplodedFrameState"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.47"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 9
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.blink::ExplodedFrameState"*
  br i1 %15, label %88, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.blink::ExplodedFrameState"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 9
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %1, i64 %22
  %25 = select i1 %23, %"struct.blink::ExplodedFrameState"* %24, %"struct.blink::ExplodedFrameState"* %2
  %26 = icmp eq %"struct.blink::ExplodedFrameState"* %25, %1
  br i1 %26, label %36, label %27

27:                                               ; preds = %17, %32
  %28 = phi %"struct.blink::ExplodedFrameState"* [ %34, %32 ], [ %16, %17 ]
  %29 = phi %"struct.blink::ExplodedFrameState"* [ %33, %32 ], [ %1, %17 ]
  %30 = icmp eq %"struct.blink::ExplodedFrameState"* %29, %28
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  tail call void @_ZN5blink18ExplodedFrameState6assignERKS0_(%"struct.blink::ExplodedFrameState"* %28, %"struct.blink::ExplodedFrameState"* dereferenceable(512) %29) #13
  br label %32

32:                                               ; preds = %27, %31
  %33 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %29, i64 1
  %34 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %28, i64 1
  %35 = icmp eq %"struct.blink::ExplodedFrameState"* %33, %25
  br i1 %35, label %36, label %27

36:                                               ; preds = %32, %17
  %37 = phi %"struct.blink::ExplodedFrameState"* [ %16, %17 ], [ %34, %32 ]
  br i1 %23, label %38, label %80

38:                                               ; preds = %36
  %39 = load i64, i64* %19, align 8
  %40 = icmp eq %"struct.blink::ExplodedFrameState"* %25, %2
  br i1 %40, label %78, label %41

41:                                               ; preds = %38, %41
  %42 = phi %"struct.blink::ExplodedFrameState"* [ %72, %41 ], [ %24, %38 ]
  %43 = phi i64 [ %74, %41 ], [ %39, %38 ]
  %44 = inttoptr i64 %43 to %"struct.blink::ExplodedFrameState"*
  %45 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %45, align 8
  %46 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %44, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %44, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %44, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %44, i64 0, i32 7
  %52 = bitcast %union.anon* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 25, i1 false)
  %53 = bitcast %union.anon* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 25, i1 false)
  %54 = bitcast %union.anon.34* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 81, i1 false)
  %55 = bitcast %union.anon* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 25, i1 false)
  %56 = bitcast %union.anon* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 52, i1 false)
  store i8 1, i8* %51, align 4
  %57 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %44, i64 0, i32 8, i32 0
  %58 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %44, i64 0, i32 13
  %59 = bitcast float* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 40, i1 false)
  store i32 1, i32* %58, align 8
  %60 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %44, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %44, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = bitcast %union.anon* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 33, i1 false) #13
  %63 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %44, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %63, align 8
  %64 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %44, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %44, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %44, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1
  %67 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %44, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1
  %68 = bitcast %union.anon* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 41, i1 false)
  %69 = bitcast %union.anon* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 25, i1 false)
  %70 = bitcast %union.anon* %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 25, i1 false)
  %71 = bitcast %union.anon* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 48, i1 false)
  tail call void @_ZN5blink18ExplodedFrameState6assignERKS0_(%"struct.blink::ExplodedFrameState"* %44, %"struct.blink::ExplodedFrameState"* dereferenceable(512) %42) #13
  %72 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %42, i64 1
  %73 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %44, i64 1
  %74 = ptrtoint %"struct.blink::ExplodedFrameState"* %73 to i64
  %75 = icmp eq %"struct.blink::ExplodedFrameState"* %72, %2
  br i1 %75, label %76, label %41

76:                                               ; preds = %41
  %77 = ptrtoint %"struct.blink::ExplodedFrameState"* %73 to i64
  br label %78

78:                                               ; preds = %76, %38
  %79 = phi i64 [ %39, %38 ], [ %77, %76 ]
  store i64 %79, i64* %19, align 8
  br label %169

80:                                               ; preds = %36
  %81 = load %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"** %18, align 8
  %82 = icmp eq %"struct.blink::ExplodedFrameState"* %81, %37
  br i1 %82, label %87, label %83

83:                                               ; preds = %80, %83
  %84 = phi %"struct.blink::ExplodedFrameState"* [ %85, %83 ], [ %81, %80 ]
  %85 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %84, i64 -1
  tail call void @_ZN5blink18ExplodedFrameStateD2Ev(%"struct.blink::ExplodedFrameState"* %85) #13
  %86 = icmp eq %"struct.blink::ExplodedFrameState"* %85, %37
  br i1 %86, label %87, label %83

87:                                               ; preds = %83, %80
  store %"struct.blink::ExplodedFrameState"* %37, %"struct.blink::ExplodedFrameState"** %18, align 8
  br label %169

88:                                               ; preds = %3
  %89 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %0, i64 0, i32 0, i32 0
  %90 = icmp eq i64 %12, 0
  br i1 %90, label %105, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %0, i64 0, i32 0, i32 1
  %93 = load %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"** %92, align 8
  %94 = icmp eq %"struct.blink::ExplodedFrameState"* %93, %16
  br i1 %94, label %101, label %95

95:                                               ; preds = %91, %95
  %96 = phi %"struct.blink::ExplodedFrameState"* [ %97, %95 ], [ %93, %91 ]
  %97 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %96, i64 -1
  tail call void @_ZN5blink18ExplodedFrameStateD2Ev(%"struct.blink::ExplodedFrameState"* %97) #13
  %98 = icmp eq %"struct.blink::ExplodedFrameState"* %97, %16
  br i1 %98, label %99, label %95

99:                                               ; preds = %95
  %100 = load %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"** %89, align 8
  br label %101

101:                                              ; preds = %99, %91
  %102 = phi %"struct.blink::ExplodedFrameState"* [ %100, %99 ], [ %16, %91 ]
  store %"struct.blink::ExplodedFrameState"* %16, %"struct.blink::ExplodedFrameState"** %92, align 8
  %103 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %103) #14
  %104 = bitcast %"class.std::__1::vector.47"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 24, i1 false) #13
  br label %105

105:                                              ; preds = %88, %101
  %106 = phi i64 [ %10, %88 ], [ 0, %101 ]
  %107 = icmp ugt i64 %7, 36028797018963967
  br i1 %107, label %108, label %110

108:                                              ; preds = %105
  %109 = bitcast %"class.std::__1::vector.47"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %109) #15
  unreachable

110:                                              ; preds = %105
  %111 = ashr exact i64 %106, 9
  %112 = icmp ult i64 %111, 18014398509481983
  br i1 %112, label %113, label %120

113:                                              ; preds = %110
  %114 = ashr exact i64 %106, 8
  %115 = icmp ult i64 %114, %7
  br i1 %115, label %120, label %116

116:                                              ; preds = %113
  %117 = icmp ugt i64 %114, 36028797018963967
  br i1 %117, label %118, label %120

118:                                              ; preds = %116
  %119 = bitcast %"class.std::__1::vector.47"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %119) #15
  unreachable

120:                                              ; preds = %113, %110, %116
  %121 = phi i64 [ %114, %116 ], [ 36028797018963967, %110 ], [ %7, %113 ]
  %122 = shl i64 %121, 9
  %123 = tail call i8* @_Znwm(i64 %122) #14
  %124 = bitcast i8* %123 to %"struct.blink::ExplodedFrameState"*
  %125 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %0, i64 0, i32 0, i32 1
  %126 = bitcast %"struct.blink::ExplodedFrameState"** %125 to i8**
  store i8* %123, i8** %126, align 8
  %127 = bitcast %"class.std::__1::vector.47"* %0 to i8**
  store i8* %123, i8** %127, align 8
  %128 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %124, i64 %121
  store %"struct.blink::ExplodedFrameState"* %128, %"struct.blink::ExplodedFrameState"** %8, align 8
  %129 = ptrtoint i8* %123 to i64
  %130 = icmp eq %"struct.blink::ExplodedFrameState"* %1, %2
  br i1 %130, label %166, label %131

131:                                              ; preds = %120, %131
  %132 = phi %"struct.blink::ExplodedFrameState"* [ %161, %131 ], [ %1, %120 ]
  %133 = phi %"struct.blink::ExplodedFrameState"* [ %162, %131 ], [ %124, %120 ]
  %134 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %134, align 8
  %135 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %136 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %133, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %137 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %138 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %133, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %139 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %133, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %140 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %133, i64 0, i32 7
  %141 = bitcast %union.anon* %135 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 25, i1 false)
  %142 = bitcast %union.anon* %136 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 25, i1 false)
  %143 = bitcast %union.anon.34* %137 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 81, i1 false)
  %144 = bitcast %union.anon* %138 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 25, i1 false)
  %145 = bitcast %union.anon* %139 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 52, i1 false)
  store i8 1, i8* %140, align 4
  %146 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %133, i64 0, i32 8, i32 0
  %147 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %133, i64 0, i32 13
  %148 = bitcast float* %146 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %148, i8 0, i64 40, i1 false)
  store i32 1, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %133, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %149, align 8
  %150 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %133, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 1
  %151 = bitcast %union.anon* %150 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %151, i8 0, i64 33, i1 false) #13
  %152 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %133, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %152, align 8
  %153 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %133, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1
  %154 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %133, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %155 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %133, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1
  %156 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %133, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1
  %157 = bitcast %union.anon* %153 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %157, i8 0, i64 41, i1 false)
  %158 = bitcast %union.anon* %154 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %158, i8 0, i64 25, i1 false)
  %159 = bitcast %union.anon* %155 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %159, i8 0, i64 25, i1 false)
  %160 = bitcast %union.anon* %156 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %160, i8 0, i64 48, i1 false)
  tail call void @_ZN5blink18ExplodedFrameState6assignERKS0_(%"struct.blink::ExplodedFrameState"* %133, %"struct.blink::ExplodedFrameState"* dereferenceable(512) %132) #13
  %161 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %132, i64 1
  %162 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %133, i64 1
  %163 = icmp eq %"struct.blink::ExplodedFrameState"* %161, %2
  br i1 %163, label %164, label %131

164:                                              ; preds = %131
  %165 = ptrtoint %"struct.blink::ExplodedFrameState"* %162 to i64
  br label %166

166:                                              ; preds = %164, %120
  %167 = phi i64 [ %165, %164 ], [ %129, %120 ]
  %168 = bitcast %"struct.blink::ExplodedFrameState"** %125 to i64*
  store i64 %167, i64* %168, align 8
  br label %169

169:                                              ; preds = %78, %87, %166
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !9}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink12_GLOBAL__N_18ReadGURLEPNS0_15SerializeObjectE: argument 0"}
!16 = distinct !{!16, !"_ZN5blink12_GLOBAL__N_18ReadGURLEPNS0_15SerializeObjectE"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink5mojom9PageState3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!19 = distinct !{!19, !"_ZN5blink5mojom9PageState3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN5blink5mojom10FrameState3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!22 = distinct !{!22, !"_ZN5blink5mojom10FrameState3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !9}
!29 = distinct !{!29, !11}
!30 = distinct !{!30, !11}
!31 = distinct !{!31, !9}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN5blink12_GLOBAL__N_115SerializeObject11GetAsStringEv: argument 0"}
!34 = distinct !{!34, !"_ZN5blink12_GLOBAL__N_115SerializeObject11GetAsStringEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN5blink12_GLOBAL__N_115SerializeObject11GetAsStringEv: argument 0"}
!37 = distinct !{!37, !"_ZN5blink12_GLOBAL__N_115SerializeObject11GetAsStringEv"}
!38 = !{!39}
!39 = distinct !{!39, !40}
!40 = distinct !{!40, !"LVerDomain"}
!41 = !{!42}
!42 = distinct !{!42, !40}
!43 = distinct !{!43, !9}
!44 = distinct !{!44, !11}
!45 = distinct !{!45, !11}
!46 = distinct !{!46, !9}
!47 = !{!48}
!48 = distinct !{!48, !49}
!49 = distinct !{!49, !"LVerDomain"}
!50 = !{!51}
!51 = distinct !{!51, !49}
!52 = distinct !{!52, !9}
!53 = distinct !{!53, !11}
!54 = distinct !{!54, !11}
!55 = distinct !{!55, !9}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !9}
!62 = distinct !{!62, !11}
!63 = distinct !{!63, !11}
!64 = distinct !{!64, !9}
!65 = !{!66}
!66 = distinct !{!66, !67}
!67 = distinct !{!67, !"LVerDomain"}
!68 = !{!69}
!69 = distinct !{!69, !67}
!70 = distinct !{!70, !9}
!71 = distinct !{!71, !11}
!72 = distinct !{!72, !11}
!73 = distinct !{!73, !9}
!74 = distinct !{!74, !9}
!75 = distinct !{!75, !11}
!76 = distinct !{!76, !77, !9}
!77 = !{!"llvm.loop.unroll.runtime.disable"}
!78 = !{!79}
!79 = distinct !{!79, !80}
!80 = distinct !{!80, !"LVerDomain"}
!81 = !{!82}
!82 = distinct !{!82, !80}
!83 = distinct !{!83, !9}
!84 = distinct !{!84, !11}
!85 = distinct !{!85, !11}
!86 = distinct !{!86, !9}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE: argument 0"}
!89 = distinct !{!89, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE"}
!90 = !{!91}
!91 = distinct !{!91, !92}
!92 = distinct !{!92, !"LVerDomain"}
!93 = !{!94}
!94 = distinct !{!94, !92}
!95 = distinct !{!95, !9}
!96 = distinct !{!96, !11}
!97 = distinct !{!97, !11}
!98 = distinct !{!98, !9}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE: argument 0"}
!101 = distinct !{!101, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE"}
!102 = !{!103}
!103 = distinct !{!103, !104}
!104 = distinct !{!104, !"LVerDomain"}
!105 = !{!106}
!106 = distinct !{!106, !104}
!107 = distinct !{!107, !9}
!108 = distinct !{!108, !11}
!109 = distinct !{!109, !11}
!110 = distinct !{!110, !9}
!111 = !{!112}
!112 = distinct !{!112, !113, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE: argument 0"}
!113 = distinct !{!113, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE"}
!114 = !{!115}
!115 = distinct !{!115, !116}
!116 = distinct !{!116, !"LVerDomain"}
!117 = !{!118}
!118 = distinct !{!118, !116}
!119 = distinct !{!119, !9}
!120 = distinct !{!120, !11}
!121 = distinct !{!121, !11}
!122 = distinct !{!122, !9}
!123 = !{!124}
!124 = distinct !{!124, !125, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE: argument 0"}
!125 = distinct !{!125, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE"}
!126 = !{!127}
!127 = distinct !{!127, !128}
!128 = distinct !{!128, !"LVerDomain"}
!129 = !{!130}
!130 = distinct !{!130, !128}
!131 = distinct !{!131, !9}
!132 = distinct !{!132, !11}
!133 = distinct !{!133, !11}
!134 = distinct !{!134, !9}
!135 = !{!136}
!136 = distinct !{!136, !137, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE: argument 0"}
!137 = distinct !{!137, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE"}
!138 = !{!139}
!139 = distinct !{!139, !140}
!140 = distinct !{!140, !"LVerDomain"}
!141 = !{!142}
!142 = distinct !{!142, !140}
!143 = distinct !{!143, !9}
!144 = distinct !{!144, !11}
!145 = distinct !{!145, !11}
!146 = distinct !{!146, !9}
!147 = !{!148}
!148 = distinct !{!148, !149, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE: argument 0"}
!149 = distinct !{!149, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE"}
!150 = !{!151}
!151 = distinct !{!151, !152}
!152 = distinct !{!152, !"LVerDomain"}
!153 = !{!154}
!154 = distinct !{!154, !152}
!155 = distinct !{!155, !9}
!156 = distinct !{!156, !11}
!157 = distinct !{!157, !11}
!158 = distinct !{!158, !9}
!159 = !{!160}
!160 = distinct !{!160, !161, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE: argument 0"}
!161 = distinct !{!161, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE"}
!162 = !{!163}
!163 = distinct !{!163, !164}
!164 = distinct !{!164, !"LVerDomain"}
!165 = !{!166}
!166 = distinct !{!166, !164}
!167 = distinct !{!167, !9}
!168 = distinct !{!168, !11}
!169 = distinct !{!169, !11}
!170 = distinct !{!170, !9}
!171 = !{!172}
!172 = distinct !{!172, !173, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE: argument 0"}
!173 = distinct !{!173, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE"}
!174 = !{!175}
!175 = distinct !{!175, !176}
!176 = distinct !{!176, !"LVerDomain"}
!177 = !{!178}
!178 = distinct !{!178, !176}
!179 = distinct !{!179, !9}
!180 = distinct !{!180, !11}
!181 = distinct !{!181, !11}
!182 = distinct !{!182, !9}
!183 = !{!184}
!184 = distinct !{!184, !185, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE: argument 0"}
!185 = distinct !{!185, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE"}
!186 = !{!187}
!187 = distinct !{!187, !188}
!188 = distinct !{!188, !"LVerDomain"}
!189 = !{!190}
!190 = distinct !{!190, !188}
!191 = distinct !{!191, !9}
!192 = distinct !{!192, !11}
!193 = distinct !{!193, !11}
!194 = distinct !{!194, !9}
!195 = !{!196}
!196 = distinct !{!196, !197, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE: argument 0"}
!197 = distinct !{!197, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE"}
!198 = !{!199}
!199 = distinct !{!199, !200}
!200 = distinct !{!200, !"LVerDomain"}
!201 = !{!202}
!202 = distinct !{!202, !200}
!203 = distinct !{!203, !9}
!204 = distinct !{!204, !11}
!205 = distinct !{!205, !11}
!206 = distinct !{!206, !9}
!207 = !{!208}
!208 = distinct !{!208, !209, !"_ZN5blink12_GLOBAL__N_113ReadStdStringEPNS0_15SerializeObjectE: argument 0"}
!209 = distinct !{!209, !"_ZN5blink12_GLOBAL__N_113ReadStdStringEPNS0_15SerializeObjectE"}
!210 = !{!211}
!211 = distinct !{!211, !212, !"_ZN5blink12_GLOBAL__N_18ReadGURLEPNS0_15SerializeObjectE: argument 0"}
!212 = distinct !{!212, !"_ZN5blink12_GLOBAL__N_18ReadGURLEPNS0_15SerializeObjectE"}
!213 = !{!214}
!214 = distinct !{!214, !215, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE: argument 0"}
!215 = distinct !{!215, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE"}
!216 = !{!217}
!217 = distinct !{!217, !218}
!218 = distinct !{!218, !"LVerDomain"}
!219 = !{!220}
!220 = distinct !{!220, !218}
!221 = distinct !{!221, !9}
!222 = distinct !{!222, !11}
!223 = distinct !{!223, !11}
!224 = distinct !{!224, !9}
!225 = !{!226}
!226 = distinct !{!226, !227, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE: argument 0"}
!227 = distinct !{!227, !"_ZN5blink12_GLOBAL__N_110ReadStringEPNS0_15SerializeObjectE"}
!228 = !{!229}
!229 = distinct !{!229, !230}
!230 = distinct !{!230, !"LVerDomain"}
!231 = !{!232}
!232 = distinct !{!232, !230}
!233 = distinct !{!233, !9}
!234 = distinct !{!234, !11}
!235 = distinct !{!235, !11}
!236 = distinct !{!236, !9}
!237 = !{!238}
!238 = distinct !{!238, !239}
!239 = distinct !{!239, !"LVerDomain"}
!240 = !{!241}
!241 = distinct !{!241, !239}
!242 = distinct !{!242, !9}
!243 = distinct !{!243, !11}
!244 = distinct !{!244, !11}
!245 = distinct !{!245, !9}
!246 = !{!247}
!247 = distinct !{!247, !248}
!248 = distinct !{!248, !"LVerDomain"}
!249 = !{!250}
!250 = distinct !{!250, !248}
!251 = distinct !{!251, !9}
!252 = distinct !{!252, !11}
!253 = distinct !{!253, !11}
!254 = distinct !{!254, !9}
!255 = !{!256}
!256 = distinct !{!256, !257}
!257 = distinct !{!257, !"LVerDomain"}
!258 = !{!259}
!259 = distinct !{!259, !257}
!260 = distinct !{!260, !9}
!261 = distinct !{!261, !11}
!262 = distinct !{!262, !11}
!263 = distinct !{!263, !9}
!264 = distinct !{!264, !11}
!265 = distinct !{!265, !11}
!266 = !{!267}
!267 = distinct !{!267, !268}
!268 = distinct !{!268, !"LVerDomain"}
!269 = !{!270}
!270 = distinct !{!270, !268}
!271 = distinct !{!271, !9}
!272 = distinct !{!272, !11}
!273 = distinct !{!273, !11}
!274 = distinct !{!274, !9}
!275 = !{!"branch_weights", i32 1, i32 2000}
!276 = !{!277}
!277 = distinct !{!277, !278, !"_ZN5blink5mojom9ViewState3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!278 = distinct !{!278, !"_ZN5blink5mojom9ViewState3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!279 = !{!280}
!280 = distinct !{!280, !281, !"_ZN5blink5mojom8HttpBody3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!281 = distinct !{!281, !"_ZN5blink5mojom8HttpBody3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!282 = !{!283}
!283 = distinct !{!283, !284, !"_ZN5blink5mojom11RequestBody3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!284 = distinct !{!284, !"_ZN5blink5mojom11RequestBody3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!285 = !{!286}
!286 = distinct !{!286, !287, !"_ZN5blink5mojom7Element3NewEv: argument 0"}
!287 = distinct !{!287, !"_ZN5blink5mojom7Element3NewEv"}
!288 = !{!"branch_weights", i32 1, i32 2001, i32 2001, i32 2001, i32 2000}
!289 = !{!290}
!290 = distinct !{!290, !291}
!291 = distinct !{!291, !"LVerDomain"}
!292 = !{!293}
!293 = distinct !{!293, !291}
!294 = distinct !{!294, !9}
!295 = distinct !{!295, !11}
!296 = distinct !{!296, !9}
!297 = !{!298}
!298 = distinct !{!298, !299, !"_ZN5blink5mojom4File3NewIJNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEmmN4base4TimeEEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!299 = distinct !{!299, !"_ZN5blink5mojom4File3NewIJNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEmmN4base4TimeEEEEN4mojo9StructPtrIS1_EEDpOT_"}
!300 = !{!301}
!301 = distinct !{!301, !302, !"_ZN5blink5mojom10FrameState3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!302 = distinct !{!302, !"_ZN5blink5mojom10FrameState3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!303 = distinct !{!303, !11}
!304 = distinct !{!304, !11}
!305 = !{!306}
!306 = distinct !{!306, !307, !"_ZN4mojo8internal22SerializeAsMessageImplIN5blink5mojom17PageStateDataViewENS_9StructPtrINS3_9PageStateEEEEENS_7MessageEPT0_: argument 0"}
!307 = distinct !{!307, !"_ZN4mojo8internal22SerializeAsMessageImplIN5blink5mojom17PageStateDataViewENS_9StructPtrINS3_9PageStateEEEEENS_7MessageEPT0_"}
!308 = distinct !{!308, !11}
!309 = !{!310}
!310 = distinct !{!310, !311}
!311 = distinct !{!311, !"LVerDomain"}
!312 = !{!313}
!313 = distinct !{!313, !311}
!314 = distinct !{!314, !9}
!315 = distinct !{!315, !11}
!316 = distinct !{!316, !9}
!317 = distinct !{!317, !11}
!318 = !{!319}
!319 = distinct !{!319, !320}
!320 = distinct !{!320, !"LVerDomain"}
!321 = !{!322}
!322 = distinct !{!322, !320}
!323 = distinct !{!323, !9}
!324 = distinct !{!324, !11}
!325 = distinct !{!325, !11}
!326 = distinct !{!326, !9}
