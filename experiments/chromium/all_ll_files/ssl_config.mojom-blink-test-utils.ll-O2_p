; ModuleID = 'gen/services/network/public/mojom/ssl_config.mojom-blink-test-utils.cc'
source_filename = "gen/services/network/public/mojom/ssl_config.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.network::mojom::blink::SSLConfigClientAsyncWaiter" = type { %"class.network::mojom::blink::SSLConfigClient"* }
%"class.network::mojom::blink::SSLConfigClient" = type { i32 (...)** }
%"class.network::mojom::blink::SSLConfigClientInterceptorForTesting" = type { %"class.network::mojom::blink::SSLConfigClient" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.network::mojom::blink::SSLConfig"* }
%"class.network::mojom::blink::SSLConfig" = type <{ i8, i8, i8, i8, i32, i32, i32, %"class.WTF::Vector", %"class.WTF::Vector.0", i8, i8, [6 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i16*, i32, i32 }
%"class.WTF::Vector.0" = type { %"class.WTF::VectorBuffer.1" }
%"class.WTF::VectorBuffer.1" = type { %"class.WTF::VectorBufferBase.2" }
%"class.WTF::VectorBufferBase.2" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

$_ZN7network5mojom5blink15SSLConfigClientD2Ev = comdat any

$_ZN7network5mojom5blink36SSLConfigClientInterceptorForTestingD0Ev = comdat any

@_ZTVN7network5mojom5blink36SSLConfigClientInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.network::mojom::blink::SSLConfigClient"*)* @_ZN7network5mojom5blink15SSLConfigClientD2Ev to i8*), i8* bitcast (void (%"class.network::mojom::blink::SSLConfigClientInterceptorForTesting"*)* @_ZN7network5mojom5blink36SSLConfigClientInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.network::mojom::blink::SSLConfigClientInterceptorForTesting"*, %"class.mojo::StructPtr"*)* @_ZN7network5mojom5blink36SSLConfigClientInterceptorForTesting18OnSSLConfigUpdatedEN4mojo9StructPtrINS1_9SSLConfigEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN7network5mojom5blink26SSLConfigClientAsyncWaiterC1EPNS1_15SSLConfigClientE = hidden unnamed_addr alias void (%"class.network::mojom::blink::SSLConfigClientAsyncWaiter"*, %"class.network::mojom::blink::SSLConfigClient"*), void (%"class.network::mojom::blink::SSLConfigClientAsyncWaiter"*, %"class.network::mojom::blink::SSLConfigClient"*)* @_ZN7network5mojom5blink26SSLConfigClientAsyncWaiterC2EPNS1_15SSLConfigClientE
@_ZN7network5mojom5blink26SSLConfigClientAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::blink::SSLConfigClientAsyncWaiter"*), void (%"class.network::mojom::blink::SSLConfigClientAsyncWaiter"*)* @_ZN7network5mojom5blink26SSLConfigClientAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink36SSLConfigClientInterceptorForTesting18OnSSLConfigUpdatedEN4mojo9StructPtrINS1_9SSLConfigEEE(%"class.network::mojom::blink::SSLConfigClientInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr", align 8
  %4 = bitcast %"class.network::mojom::blink::SSLConfigClientInterceptorForTesting"* %0 to %"class.network::mojom::blink::SSLConfigClient"* (%"class.network::mojom::blink::SSLConfigClientInterceptorForTesting"*)***
  %5 = load %"class.network::mojom::blink::SSLConfigClient"* (%"class.network::mojom::blink::SSLConfigClientInterceptorForTesting"*)**, %"class.network::mojom::blink::SSLConfigClient"* (%"class.network::mojom::blink::SSLConfigClientInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.network::mojom::blink::SSLConfigClient"* (%"class.network::mojom::blink::SSLConfigClientInterceptorForTesting"*)*, %"class.network::mojom::blink::SSLConfigClient"* (%"class.network::mojom::blink::SSLConfigClientInterceptorForTesting"*)** %5, i64 3
  %7 = load %"class.network::mojom::blink::SSLConfigClient"* (%"class.network::mojom::blink::SSLConfigClientInterceptorForTesting"*)*, %"class.network::mojom::blink::SSLConfigClient"* (%"class.network::mojom::blink::SSLConfigClientInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.network::mojom::blink::SSLConfigClient"* %7(%"class.network::mojom::blink::SSLConfigClientInterceptorForTesting"* %0) #7
  %9 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %10 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 0, i64* %11, align 8
  %13 = bitcast %"class.network::mojom::blink::SSLConfigClient"* %8 to void (%"class.network::mojom::blink::SSLConfigClient"*, %"class.mojo::StructPtr"*)***
  %14 = load void (%"class.network::mojom::blink::SSLConfigClient"*, %"class.mojo::StructPtr"*)**, void (%"class.network::mojom::blink::SSLConfigClient"*, %"class.mojo::StructPtr"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.network::mojom::blink::SSLConfigClient"*, %"class.mojo::StructPtr"*)*, void (%"class.network::mojom::blink::SSLConfigClient"*, %"class.mojo::StructPtr"*)** %14, i64 2
  %16 = load void (%"class.network::mojom::blink::SSLConfigClient"*, %"class.mojo::StructPtr"*)*, void (%"class.network::mojom::blink::SSLConfigClient"*, %"class.mojo::StructPtr"*)** %15, align 8
  call void %16(%"class.network::mojom::blink::SSLConfigClient"* %8, %"class.mojo::StructPtr"* nonnull %3) #7
  %17 = load %"class.network::mojom::blink::SSLConfig"*, %"class.network::mojom::blink::SSLConfig"** %10, align 8
  store %"class.network::mojom::blink::SSLConfig"* null, %"class.network::mojom::blink::SSLConfig"** %10, align 8
  %18 = icmp eq %"class.network::mojom::blink::SSLConfig"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  call void @_ZN7network5mojom5blink9SSLConfigD1Ev(%"class.network::mojom::blink::SSLConfig"* nonnull %17) #7
  %20 = getelementptr inbounds %"class.network::mojom::blink::SSLConfig", %"class.network::mojom::blink::SSLConfig"* %17, i64 0, i32 0
  call void @_ZdlPv(i8* %20) #8
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network5mojom5blink26SSLConfigClientAsyncWaiterC2EPNS1_15SSLConfigClientE(%"class.network::mojom::blink::SSLConfigClientAsyncWaiter"* nocapture, %"class.network::mojom::blink::SSLConfigClient"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::blink::SSLConfigClientAsyncWaiter", %"class.network::mojom::blink::SSLConfigClientAsyncWaiter"* %0, i64 0, i32 0
  store %"class.network::mojom::blink::SSLConfigClient"* %1, %"class.network::mojom::blink::SSLConfigClient"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7network5mojom5blink26SSLConfigClientAsyncWaiterD2Ev(%"class.network::mojom::blink::SSLConfigClientAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom5blink15SSLConfigClientD2Ev(%"class.network::mojom::blink::SSLConfigClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom5blink36SSLConfigClientInterceptorForTestingD0Ev(%"class.network::mojom::blink::SSLConfigClientInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink9SSLConfigD1Ev(%"class.network::mojom::blink::SSLConfig"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
