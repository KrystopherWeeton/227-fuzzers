; ModuleID = '../../net/dns/host_resolver_manager.cc'
source_filename = "../../net/dns/host_resolver_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::FeatureParam" = type { %"struct.base::Feature"*, i8*, i8, %"struct.base::FeatureParam<base::TaskPriority, true>::Option"*, i64 }
%"struct.base::Feature" = type { i8*, i32 }
%"struct.base::FeatureParam<base::TaskPriority, true>::Option" = type { i8, i8* }
%"struct.net::HostCache::EntryStaleness" = type { %"class.base::TimeDelta", i32, i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array.138" }
%"struct.std::__1::array.138" = type { [8 x i8] }
%"struct.std::__1::atomic.531" = type { %"struct.std::__1::__atomic_base.532" }
%"struct.std::__1::__atomic_base.532" = type { %"struct.std::__1::__atomic_base.533" }
%"struct.std::__1::__atomic_base.533" = type { %"struct.std::__1::__cxx_atomic_impl.534" }
%"struct.std::__1::__cxx_atomic_impl.534" = type { %"struct.std::__1::__cxx_atomic_base_impl.535" }
%"struct.std::__1::__cxx_atomic_base_impl.535" = type { i64 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.base::FeatureParam.614" = type <{ %"struct.base::Feature"*, i8*, i8, [7 x i8] }>
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.base::FeatureParam.650" = type <{ %"struct.base::Feature"*, i8*, i32, [4 x i8] }>
%"class.base::NoDestructor" = type { [56 x i8] }
%"class.base::NoDestructor.744" = type { [32 x i8] }
%"class.base::NoDestructor.745" = type { [32 x i8] }
%"class.base::NoDestructor.746" = type { [32 x i8] }
%"class.net::HostResolverManager" = type { %"class.net::NetworkChangeNotifier::IPAddressObserver", %"class.net::NetworkChangeNotifier::ConnectionTypeObserver", %"class.net::SystemDnsConfigChangeNotifier::Observer", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.18", %"class.std::__1::map", %"class.std::__1::unique_ptr.32", i64, %"struct.net::ProcTaskParams", %"class.net::NetLog"*, %"class.std::__1::unique_ptr.71", %"class.net::SystemDnsConfigChangeNotifier"*, i8, %"class.base::TimeTicks", i8, i32, i8, %class.scoped_refptr.83, %"class.base::TickClock"*, %"class.base::ObserverList", i8, %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory" }
%"class.net::NetworkChangeNotifier::IPAddressObserver" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::ObserverListThreadSafe"* }
%"class.base::ObserverListThreadSafe" = type opaque
%"class.net::NetworkChangeNotifier::ConnectionTypeObserver" = type { i32 (...)**, %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::ObserverListThreadSafe.14"* }
%"class.base::ObserverListThreadSafe.14" = type opaque
%"class.net::SystemDnsConfigChangeNotifier::Observer" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.net::MDnsSocketFactory"* }
%"class.net::MDnsSocketFactory" = type { i32 (...)** }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.net::MDnsClient"* }
%"class.net::MDnsClient" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { i64 }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.net::PrioritizedDispatcher"* }
%"class.net::PrioritizedDispatcher" = type { %"class.net::PriorityQueue", %"class.std::__1::vector.46", i64 }
%"class.net::PriorityQueue" = type { %"class.std::__1::vector.35", i64 }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.std::__1::list"*, %"class.std::__1::list"*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.37" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.std::__1::list"* }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { i64*, i64*, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { i64* }
%"struct.net::ProcTaskParams" = type <{ %class.scoped_refptr.56, i64, %"class.base::TimeDelta", i32, [4 x i8] }>
%class.scoped_refptr.56 = type { %"class.net::HostResolverProc"* }
%"class.net::HostResolverProc" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.99", i8, %class.scoped_refptr.56 }
%"class.base::RefCountedThreadSafe.99" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.82" }
%"struct.std::__1::__atomic_base.82" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.net::DnsClient"* }
%"class.net::DnsClient" = type { i32 (...)** }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.83 = type { %"class.base::TaskRunner"* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.84", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.93" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.86 }
%class.scoped_refptr.86 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.87", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.87" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.88" }
%"struct.std::__1::atomic.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__atomic_base.90" }
%"struct.std::__1::__atomic_base.90" = type { %"struct.std::__1::__cxx_atomic_impl.91" }
%"struct.std::__1::__cxx_atomic_impl.91" = type { %"struct.std::__1::__cxx_atomic_base_impl.92" }
%"struct.std::__1::__cxx_atomic_base_impl.92" = type { i8 }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.98 }
%class.scoped_refptr.98 = type { %"class.base::internal::WeakReference::Flag"* }
%"struct.net::HostResolver::ManagerOptions" = type <{ i64, i64, i8, i8, [6 x i8], %"struct.net::DnsConfigOverrides", i8, [7 x i8] }>
%"struct.net::DnsConfigOverrides" = type <{ %"class.absl::optional", %"class.absl::optional.101", %"class.absl::optional.106", [2 x i8], %"class.absl::optional.111", [4 x i8], %"class.absl::optional.116", %"class.absl::optional.111", %"class.absl::optional.111", %"class.absl::optional.106", %"class.absl::optional.106", [4 x i8], %"class.absl::optional.121", %"class.absl::optional.133", %"class.absl::optional.106", [6 x i8], %"class.absl::optional.101", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.100 }
%union.anon.100 = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::IPEndPoint"* }
%"class.absl::optional.116" = type { %"class.absl::optional_internal::optional_data.117" }
%"class.absl::optional_internal::optional_data.117" = type { %"class.absl::optional_internal::optional_data_base.118" }
%"class.absl::optional_internal::optional_data_base.118" = type { %"class.absl::optional_internal::optional_data_dtor_base.119" }
%"class.absl::optional_internal::optional_data_dtor_base.119" = type { i8, %union.anon.120 }
%union.anon.120 = type { %"class.base::TimeDelta" }
%"class.absl::optional.111" = type { %"class.absl::optional_internal::optional_data.112" }
%"class.absl::optional_internal::optional_data.112" = type { %"class.absl::optional_internal::optional_data_base.113" }
%"class.absl::optional_internal::optional_data_base.113" = type { %"class.absl::optional_internal::optional_data_dtor_base.114" }
%"class.absl::optional_internal::optional_data_dtor_base.114" = type { i8, %union.anon.115 }
%union.anon.115 = type { i32 }
%"class.absl::optional.121" = type { %"class.absl::optional_internal::optional_data.122" }
%"class.absl::optional_internal::optional_data.122" = type { %"class.absl::optional_internal::optional_data_base.123" }
%"class.absl::optional_internal::optional_data_base.123" = type { %"class.absl::optional_internal::optional_data_dtor_base.124" }
%"class.absl::optional_internal::optional_data_dtor_base.124" = type { i8, %union.anon.125 }
%union.anon.125 = type { %"class.std::__1::vector.126" }
%"class.std::__1::vector.126" = type { %"class.std::__1::__vector_base.127" }
%"class.std::__1::__vector_base.127" = type { %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"*, %"class.std::__1::__compressed_pair.128" }
%"struct.net::DnsOverHttpsServerConfig" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.net::DnsOverHttpsServerConfig"* }
%"class.absl::optional.133" = type { %"class.absl::optional_internal::optional_data.134" }
%"class.absl::optional_internal::optional_data.134" = type { %"class.absl::optional_internal::optional_data_base.135" }
%"class.absl::optional_internal::optional_data_base.135" = type { %"class.absl::optional_internal::optional_data_dtor_base.136" }
%"class.absl::optional_internal::optional_data_dtor_base.136" = type { i8, %union.anon.137 }
%union.anon.137 = type { i32 }
%"class.absl::optional.106" = type { %"class.absl::optional_internal::optional_data.107" }
%"class.absl::optional_internal::optional_data.107" = type { %"class.absl::optional_internal::optional_data_base.108" }
%"class.absl::optional_internal::optional_data_base.108" = type { %"class.absl::optional_internal::optional_data_dtor_base.109" }
%"class.absl::optional_internal::optional_data_dtor_base.109" = type { i8, %union.anon.110 }
%union.anon.110 = type { i8 }
%"class.absl::optional.101" = type { %"class.absl::optional_internal::optional_data.102" }
%"class.absl::optional_internal::optional_data.102" = type { %"class.absl::optional_internal::optional_data_base.103" }
%"class.absl::optional_internal::optional_data_base.103" = type { %"class.absl::optional_internal::optional_data_dtor_base.104" }
%"class.absl::optional_internal::optional_data_dtor_base.104" = type { i8, %union.anon.105 }
%union.anon.105 = type { %"class.std::__1::vector.1" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::basic_string"* }
%"class.net::SystemDnsConfigChangeNotifier" = type { %"class.std::__1::unique_ptr.77" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79", %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.net::SystemDnsConfigChangeNotifier::Core"* }
%"class.net::SystemDnsConfigChangeNotifier::Core" = type opaque
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.base::OnTaskRunnerDeleter" }
%"struct.base::OnTaskRunnerDeleter" = type { %class.scoped_refptr.81 }
%class.scoped_refptr.81 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.57", %"class.std::__1::vector.64" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.59" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.66" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.net::AddressList" = type { %"class.std::__1::vector", %"class.std::__1::vector.1" }
%"class.std::__1::vector.506" = type { %"class.std::__1::__vector_base.507" }
%"class.std::__1::__vector_base.507" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.508" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.base::BasicStringPiece"* }
%"struct.net::PrioritizedDispatcher::Limits" = type { i64, %"class.std::__1::vector.46" }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.467" }
%"struct.std::__1::pair.467" = type { %"struct.net::HostResolverManager::JobKey", %"class.std::__1::unique_ptr.460" }
%"struct.net::HostResolverManager::JobKey" = type { %"class.std::__1::basic_string", %"class.net::NetworkIsolationKey", i32, i32, i32, i32, %"class.net::ResolveContext"* }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.145", %"class.absl::optional.145" }
%"class.absl::optional.145" = type { %"class.absl::optional_internal::optional_data.146" }
%"class.absl::optional_internal::optional_data.146" = type { %"class.absl::optional_internal::optional_data_base.147" }
%"class.absl::optional_internal::optional_data_base.147" = type { %"class.absl::optional_internal::optional_data_dtor_base.148" }
%"class.absl::optional_internal::optional_data_dtor_base.148" = type { i8, %union.anon.149 }
%union.anon.149 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.150" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.150" = type { %"class.absl::optional_internal::optional_data.151" }
%"class.absl::optional_internal::optional_data.151" = type { %"class.absl::optional_internal::optional_data_base.152" }
%"class.absl::optional_internal::optional_data_base.152" = type { %"class.absl::optional_internal::optional_data_dtor_base.153" }
%"class.absl::optional_internal::optional_data_dtor_base.153" = type { i8, %union.anon.154 }
%union.anon.154 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::ResolveContext" = type { %"class.base::CheckedObserver", %"class.net::URLRequestContext"*, %"class.std::__1::unique_ptr.161", %"class.base::TimeDelta", %"class.base::ObserverList.178", %"class.base::WeakPtr.182", i32, %"class.base::TimeDelta", %"class.std::__1::vector.183", %"class.std::__1::vector.183", %"class.net::IsolationInfo" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.160" }
%"class.base::WeakPtrFactory.160" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::URLRequestContext" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.net::HostCache"* }
%"class.net::HostCache" = type { %"class.std::__1::map.164", i64, i32, i64, %"class.net::HostCache::PersistenceDelegate"*, %"class.base::TickClock"* }
%"class.std::__1::map.164" = type { %"class.std::__1::__tree.165" }
%"class.std::__1::__tree.165" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.net::HostCache::PersistenceDelegate" = type { i32 (...)** }
%"class.base::ObserverList.178" = type <{ %"class.std::__1::vector.84", %"class.base::LinkedList.179", i64, i32, [4 x i8] }>
%"class.base::LinkedList.179" = type { %"class.base::LinkNode.180" }
%"class.base::LinkNode.180" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::WeakPtr.182" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"*, %"class.std::__1::__compressed_pair.202" }
%"struct.net::ResolveContext::ServerStats" = type { i32, i8, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.std::__1::unique_ptr.185" }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.base::SampleVector"* }
%"class.base::SampleVector" = type { %"class.base::SampleVectorBase", %"class.std::__1::vector.192" }
%"class.base::SampleVectorBase" = type { %"class.base::HistogramSamples", %"struct.std::__1::atomic.188", %"class.base::BucketRanges"* }
%"class.base::HistogramSamples" = type { i32 (...)**, %"struct.base::HistogramSamples::Metadata"* }
%"struct.base::HistogramSamples::Metadata" = type { i64, i64, i32, %"union.base::HistogramSamples::AtomicSingleSample" }
%"union.base::HistogramSamples::AtomicSingleSample" = type { i32 }
%"struct.std::__1::atomic.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__cxx_atomic_impl.190" }
%"struct.std::__1::__cxx_atomic_impl.190" = type { %"struct.std::__1::__cxx_atomic_base_impl.191" }
%"struct.std::__1::__cxx_atomic_base_impl.191" = type { i32* }
%"class.base::BucketRanges" = type { %"class.std::__1::vector.192", i32, %"struct.std::__1::atomic" }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { i32*, i32*, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { i32* }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.net::ResolveContext::ServerStats"* }
%"class.net::IsolationInfo" = type { i32, %"class.absl::optional.207", %"class.absl::optional.207", %"class.net::NetworkIsolationKey", %"class.net::SiteForCookies", i8, %"class.absl::optional.212" }
%"class.absl::optional.207" = type { %"class.absl::optional_internal::optional_data.208" }
%"class.absl::optional_internal::optional_data.208" = type { %"class.absl::optional_internal::optional_data_base.209" }
%"class.absl::optional_internal::optional_data_base.209" = type { %"class.absl::optional_internal::optional_data_dtor_base.210" }
%"class.absl::optional_internal::optional_data_dtor_base.210" = type { i8, %union.anon.211 }
%union.anon.211 = type { %"class.url::Origin" }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.absl::optional.212" = type { %"class.absl::optional_internal::optional_data.213" }
%"class.absl::optional_internal::optional_data.213" = type { %"class.absl::optional_internal::optional_data_base.214" }
%"class.absl::optional_internal::optional_data_base.214" = type { %"class.absl::optional_internal::optional_data_dtor_base.215" }
%"class.absl::optional_internal::optional_data_dtor_base.215" = type { i8, %union.anon.216 }
%union.anon.216 = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.217" }
%"class.std::__1::__tree.217" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.net::HostResolverManager::Job"* }
%"class.net::HostResolverManager::Job" = type { %"class.net::PrioritizedDispatcher::Job", %"class.net::HostResolverManager::DnsTask::Delegate", %"class.base::WeakPtr.230", %"class.std::__1::basic_string", %"class.net::NetworkIsolationKey", i32, i32, i32, i32, i32, %"class.net::ResolveContext"*, %"class.net::HostCache"*, %"class.std::__1::vector.231", %"class.std::__1::deque", i8, %"class.net::(anonymous namespace)::PriorityTracker", %class.scoped_refptr.83, i8, i32, %"class.net::PrioritizedDispatcher"*, i32, %"class.base::TickClock"*, %"class.base::TimeTicks", %"class.net::NetLogWithSource", %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.339", %"class.base::LinkedList.353", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.absl::optional.354", %"class.base::TimeDelta", %"class.base::WeakPtrFactory.359" }
%"class.net::PrioritizedDispatcher::Job" = type { i32 (...)** }
%"class.net::HostResolverManager::DnsTask::Delegate" = type { i32 (...)** }
%"class.base::WeakPtr.230" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::vector.231" = type { %"class.std::__1::__vector_base.232" }
%"class.std::__1::__vector_base.232" = type { %"struct.net::HostResolverManager::Job::CompletionResult"*, %"struct.net::HostResolverManager::Job::CompletionResult"*, %"class.std::__1::__compressed_pair.257" }
%"struct.net::HostResolverManager::Job::CompletionResult" = type <{ %"class.net::HostCache::Entry", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.net::HostCache::Entry" = type <{ i32, [4 x i8], %"class.absl::optional.233", %"class.absl::optional.101", %"class.absl::optional.238", %"class.absl::optional.250", i32, i8, [3 x i8], %"class.base::TimeDelta", %"class.base::TimeTicks", i32, %"class.base::internal::ClampedNumeric", %"class.base::internal::ClampedNumeric", [4 x i8] }>
%"class.absl::optional.233" = type { %"class.absl::optional_internal::optional_data.234" }
%"class.absl::optional_internal::optional_data.234" = type { %"class.absl::optional_internal::optional_data_base.235" }
%"class.absl::optional_internal::optional_data_base.235" = type { %"class.absl::optional_internal::optional_data_dtor_base.236" }
%"class.absl::optional_internal::optional_data_dtor_base.236" = type { i8, %union.anon.237 }
%union.anon.237 = type { %"class.net::AddressList" }
%"class.absl::optional.238" = type { %"class.absl::optional_internal::optional_data.239" }
%"class.absl::optional_internal::optional_data.239" = type { %"class.absl::optional_internal::optional_data_base.240" }
%"class.absl::optional_internal::optional_data_base.240" = type { %"class.absl::optional_internal::optional_data_dtor_base.241" }
%"class.absl::optional_internal::optional_data_dtor_base.241" = type { i8, %union.anon.242 }
%union.anon.242 = type { %"class.std::__1::vector.243" }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { %"class.net::HostPortPair"*, %"class.net::HostPortPair"*, %"class.std::__1::__compressed_pair.245" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.net::HostPortPair"* }
%"class.absl::optional.250" = type { %"class.absl::optional_internal::optional_data.251" }
%"class.absl::optional_internal::optional_data.251" = type { %"class.absl::optional_internal::optional_data_base.252" }
%"class.absl::optional_internal::optional_data_base.252" = type { %"class.absl::optional_internal::optional_data_dtor_base.253" }
%"class.absl::optional_internal::optional_data_dtor_base.253" = type { i8, %union.anon.254 }
%union.anon.254 = type { %"class.std::__1::vector.255" }
%"class.std::__1::vector.255" = type { i64*, i64, %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.base::internal::ClampedNumeric" = type { i32 }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.net::HostResolverManager::Job::CompletionResult"* }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.267" }
%"struct.std::__1::__split_buffer" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { i32** }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.net::(anonymous namespace)::PriorityTracker" = type { i32, i64, [6 x i64] }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.net::HostResolverManager::ProcTask"* }
%"class.net::HostResolverManager::ProcTask" = type { %"class.std::__1::basic_string", i32, i32, %"struct.net::ProcTaskParams", %"class.base::OnceCallback", %class.scoped_refptr.276, %class.scoped_refptr.83, i32, %"class.net::NetLogWithSource", %"class.base::TickClock"*, %"class.base::WeakPtrFactory.277" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.274 }
%class.scoped_refptr.274 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.275", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.275" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.276 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.277" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.net::HostResolverManager::DnsTask"* }
%"class.net::HostResolverManager::DnsTask" = type <{ %"class.base::SupportsWeakPtr", %"class.net::DnsClient"*, %"class.std::__1::basic_string", %"class.net::ResolveContext"*, i8, [3 x i8], i32, %"class.net::HostResolverManager::DnsTask::Delegate"*, %"class.net::NetLogWithSource", %"class.std::__1::queue", %"class.base::internal::flat_tree", i32, i32, %"class.absl::optional.297", %"class.base::TickClock"*, %"class.base::TimeTicks", %"class.net::HttpssvcExperimentDomainCache", %"class.absl::optional.308", %"class.base::OneShotTimer", i8, [7 x i8] }>
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { i32*, i64 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.284" }
%"class.std::__1::vector.284" = type { %"class.std::__1::__vector_base.285" }
%"class.std::__1::__vector_base.285" = type { %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"*, %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.net::DnsTransaction"* }
%"class.net::DnsTransaction" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.std::__1::unique_ptr.286"* }
%"class.absl::optional.297" = type { %"class.absl::optional_internal::optional_data.298" }
%"class.absl::optional_internal::optional_data.298" = type { %"class.absl::optional_internal::optional_data_base.299" }
%"class.absl::optional_internal::optional_data_base.299" = type { %"class.absl::optional_internal::optional_data_dtor_base.300" }
%"class.absl::optional_internal::optional_data_dtor_base.300" = type { i8, [7 x i8], %union.anon.301 }
%union.anon.301 = type { %"class.net::HostCache::Entry" }
%"class.net::HttpssvcExperimentDomainCache" = type { %"class.absl::optional.302", %"class.absl::optional.302" }
%"class.absl::optional.302" = type { %"class.absl::optional_internal::optional_data.303" }
%"class.absl::optional_internal::optional_data.303" = type { %"class.absl::optional_internal::optional_data_base.304" }
%"class.absl::optional_internal::optional_data_base.304" = type { %"class.absl::optional_internal::optional_data_dtor_base.305" }
%"class.absl::optional_internal::optional_data_dtor_base.305" = type { i8, %union.anon.306 }
%union.anon.306 = type { %"class.base::internal::flat_tree.307" }
%"class.base::internal::flat_tree.307" = type { %"class.std::__1::vector.1" }
%"class.absl::optional.308" = type { %"class.absl::optional_internal::optional_data.309" }
%"class.absl::optional_internal::optional_data.309" = type { %"class.absl::optional_internal::optional_data_base.310" }
%"class.absl::optional_internal::optional_data_base.310" = type { %"class.absl::optional_internal::optional_data_dtor_base.311" }
%"class.absl::optional_internal::optional_data_dtor_base.311" = type { i8, %union.anon.312 }
%union.anon.312 = type { %"class.net::HttpssvcMetrics" }
%"class.net::HttpssvcMetrics" = type { i8, i8, i8, %"class.absl::optional.313", %"class.absl::optional.318", %"class.absl::optional.318", i64, i64, %"class.absl::optional.106", %"class.absl::optional.106", %"class.absl::optional.116", %"class.absl::optional.116", %"class.std::__1::vector.323" }
%"class.absl::optional.313" = type { %"class.absl::optional_internal::optional_data.314" }
%"class.absl::optional_internal::optional_data.314" = type { %"class.absl::optional_internal::optional_data_base.315" }
%"class.absl::optional_internal::optional_data_base.315" = type { %"class.absl::optional_internal::optional_data_dtor_base.316" }
%"class.absl::optional_internal::optional_data_dtor_base.316" = type { i8, %union.anon.317 }
%union.anon.317 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.318" = type { %"class.absl::optional_internal::optional_data.319" }
%"class.absl::optional_internal::optional_data.319" = type { %"class.absl::optional_internal::optional_data_base.320" }
%"class.absl::optional_internal::optional_data_base.320" = type { %"class.absl::optional_internal::optional_data_dtor_base.321" }
%"class.absl::optional_internal::optional_data_dtor_base.321" = type { i8, %union.anon.322 }
%union.anon.322 = type { i32 }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.base::TimeDelta"* }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.335" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.81, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.334" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.334" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback.335" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.net::HostResolverMdnsTask"* }
%"class.net::HostResolverMdnsTask" = type { %"class.net::MDnsClient"*, %"class.std::__1::basic_string", %"class.std::__1::vector.342", %"class.base::OnceCallback.335", %"class.base::WeakPtrFactory.349" }
%"class.std::__1::vector.342" = type { %"class.std::__1::__vector_base.343" }
%"class.std::__1::__vector_base.343" = type { %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"*, %"class.std::__1::__compressed_pair.344" }
%"class.net::HostResolverMdnsTask::Transaction" = type opaque
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.net::HostResolverMdnsTask::Transaction"* }
%"class.base::WeakPtrFactory.349" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::LinkedList.353" = type { %"class.base::LinkNode.229" }
%"class.base::LinkNode.229" = type { %"class.base::internal::LinkNodeBase" }
%"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer" = type { i32, %"class.std::__1::__list_iterator", %"class.std::__1::list" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"class.absl::optional.354" = type { %"class.absl::optional_internal::optional_data.355" }
%"class.absl::optional_internal::optional_data.355" = type { %"class.absl::optional_internal::optional_data_base.356" }
%"class.absl::optional_internal::optional_data_base.356" = type { %"class.absl::optional_internal::optional_data_dtor_base.357" }
%"class.absl::optional_internal::optional_data_dtor_base.357" = type { i8, %union.anon.358 }
%union.anon.358 = type { %"class.std::__1::__map_iterator" }
%"class.std::__1::__map_iterator" = type { %"class.std::__1::__tree_iterator" }
%"class.std::__1::__tree_iterator" = type { %"class.std::__1::__tree_end_node"* }
%"class.base::WeakPtrFactory.359" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::HostResolverManager::CancellableResolveHostRequest" = type { %"class.net::HostResolverManager::CancellableRequest", %"class.net::HostResolver::ResolveHostRequest" }
%"class.net::HostResolverManager::CancellableRequest" = type { i32 (...)** }
%"class.net::HostResolver::ResolveHostRequest" = type { i32 (...)** }
%"class.absl::optional.155" = type { %"class.absl::optional_internal::optional_data.156" }
%"class.absl::optional_internal::optional_data.156" = type { %"class.absl::optional_internal::optional_data_base.157" }
%"class.absl::optional_internal::optional_data_base.157" = type { %"class.absl::optional_internal::optional_data_dtor_base.158" }
%"class.absl::optional_internal::optional_data_dtor_base.158" = type { i8, %union.anon.159 }
%union.anon.159 = type { %"struct.net::HostResolver::ResolveHostParameters" }
%"struct.net::HostResolver::ResolveHostParameters" = type { i32, i32, i32, i32, i8, i8, i8, i8, i32 }
%"class.net::HostResolverManager::RequestImpl" = type { %"class.net::HostResolverManager::CancellableResolveHostRequest", %"class.base::LinkNode.229", %"class.net::NetLogWithSource", %"class.net::HostPortPair", %"class.net::NetworkIsolationKey", %"struct.net::HostResolver::ResolveHostParameters", %"class.net::ResolveContext"*, %"class.net::HostCache"*, i32, i32, %"class.net::HostResolverManager::Job"*, %"class.base::WeakPtr.230", %"class.base::OnceCallback.360", i8, [7 x i8], %"class.absl::optional.297", %"class.absl::optional.361", %"class.absl::optional.101", %"struct.net::ResolveErrorInfo", %"class.base::TickClock"*, %"class.base::TimeTicks" }
%"class.base::OnceCallback.360" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.361" = type { %"class.absl::optional_internal::optional_data.362" }
%"class.absl::optional_internal::optional_data.362" = type { %"class.absl::optional_internal::optional_data_base.363" }
%"class.absl::optional_internal::optional_data_base.363" = type { %"class.absl::optional_internal::optional_data_dtor_base.364" }
%"class.absl::optional_internal::optional_data_dtor_base.364" = type { i8, %union.anon.365 }
%union.anon.365 = type { %"struct.net::HostCache::EntryStaleness" }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.net::HostResolverManager::CancellableProbeRequest" = type { %"class.net::HostResolverManager::CancellableRequest", %"class.net::HostResolver::ProbeRequest" }
%"class.net::HostResolver::ProbeRequest" = type { i32 (...)** }
%"class.net::HostResolver::MdnsListener" = type { i32 (...)** }
%"class.net::HostResolverMdnsListenerImpl" = type { %"class.net::HostResolver::MdnsListener", %"class.net::MDnsListener::Delegate", %"class.net::HostPortPair", i32, i32, %"class.std::__1::unique_ptr.397", %"class.net::HostResolver::MdnsListener::Delegate"* }
%"class.net::MDnsListener::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.net::MDnsListener"* }
%"class.net::MDnsListener" = type { i32 (...)** }
%"class.net::HostResolver::MdnsListener::Delegate" = type { i32 (...)** }
%"class.base::WeakPtr.542" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::vector.488" = type { %"class.std::__1::__vector_base.489" }
%"class.std::__1::__vector_base.489" = type { %"class.base::OnceCallback.335"*, %"class.base::OnceCallback.335"*, %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.base::OnceCallback.335"* }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.406" }
%"union.absl::variant_internal::DestructibleUnionImpl.406" = type { %"union.absl::variant_internal::DestructibleUnionImpl.407" }
%"union.absl::variant_internal::DestructibleUnionImpl.407" = type { %"union.absl::variant_internal::DestructibleUnionImpl.408" }
%"union.absl::variant_internal::DestructibleUnionImpl.408" = type { %"union.absl::variant_internal::DestructibleUnionImpl.409" }
%"union.absl::variant_internal::DestructibleUnionImpl.409" = type { %"class.std::__1::basic_string" }
%"struct.net::DnsConfig" = type { %"class.std::__1::vector", i8, %"class.std::__1::basic_string", %"class.std::__1::vector.1", %"class.std::__1::unordered_map", i8, i8, i32, %"class.base::TimeDelta", i32, i32, i8, i8, %"class.std::__1::vector.126", i32, i8, %"class.std::__1::vector.1" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.436", %"class.std::__1::__compressed_pair.444", %"class.std::__1::__compressed_pair.449", %"class.std::__1::__compressed_pair.451", [4 x i8] }>
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438", %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { float }
%"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.net::DnsSession" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.absl::optional.455" = type { %"class.absl::optional_internal::optional_data.456" }
%"class.absl::optional_internal::optional_data.456" = type { %"class.absl::optional_internal::optional_data_base.457" }
%"class.absl::optional_internal::optional_data_base.457" = type { %"class.absl::optional_internal::optional_data_dtor_base.458" }
%"class.absl::optional_internal::optional_data_dtor_base.458" = type { i8, %union.anon.459 }
%union.anon.459 = type { %"struct.net::DnsConfig" }
%"struct.net::HostCache::Key" = type <{ %"class.std::__1::basic_string", i32, i32, i32, [4 x i8], %"class.net::NetworkIsolationKey", i8, [7 x i8] }>
%"struct.std::__1::__tuple_less.779" = type { i8 }
%"class.std::__1::tuple.766" = type { %"struct.std::__1::__tuple_impl.767" }
%"struct.std::__1::__tuple_impl.767" = type { %"class.std::__1::__tuple_leaf.768", %"class.std::__1::__tuple_leaf.769", %"class.std::__1::__tuple_leaf.770", %"class.std::__1::__tuple_leaf.771", %"class.std::__1::__tuple_leaf.772", %"class.std::__1::__tuple_leaf.773", %"class.std::__1::__tuple_leaf.774" }
%"class.std::__1::__tuple_leaf.768" = type { i32* }
%"class.std::__1::__tuple_leaf.769" = type { i32* }
%"class.std::__1::__tuple_leaf.770" = type { i32* }
%"class.std::__1::__tuple_leaf.771" = type { i32* }
%"class.std::__1::__tuple_leaf.772" = type { %"class.net::ResolveContext"** }
%"class.std::__1::__tuple_leaf.773" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__tuple_leaf.774" = type { %"class.net::NetworkIsolationKey"* }
%"struct.std::__1::pair.468" = type { %"struct.net::HostCache::Key", %"class.net::HostCache::Entry" }
%"struct.std::__1::pair.469" = type <{ %"class.std::__1::basic_string", i32, [4 x i8] }>
%class.anon.530 = type { %"class.net::HostResolverManager::RequestImpl"**, %"class.net::HostResolverManager::Job"* }
%"class.net::ClientSocketFactory" = type { i32 (...)** }
%"class.net::DatagramClientSocket" = type { %"class.net::DatagramSocket", %"class.net::Socket" }
%"class.net::DatagramSocket" = type { i32 (...)** }
%"class.net::Socket" = type { i32 (...)**, %"class.std::__1::vector.1" }
%"class.base::OnceCallback.479" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.480" = type { %"class.base::internal::CallbackBase" }
%"class.base::ScopedBlockingCall" = type { %"class.base::internal::UncheckedScopedBlockingCall" }
%"class.base::internal::UncheckedScopedBlockingCall" = type { %"class.base::internal::BlockingObserver"*, %"class.base::internal::UncheckedScopedBlockingCall"*, i8, [7 x i8], %"class.base::debug::ScopedActivity", %"class.absl::optional.726" }
%"class.base::internal::BlockingObserver" = type { i32 (...)** }
%"class.base::debug::ScopedActivity" = type <{ %"class.base::debug::GlobalActivityTracker::ScopedThreadActivity", i32, [4 x i8] }>
%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity" = type { %"class.base::debug::ThreadActivityTracker::ScopedActivity.base", %"class.std::__1::unique_ptr.709" }
%"class.base::debug::ThreadActivityTracker::ScopedActivity.base" = type <{ %"class.base::debug::ThreadActivityTracker"*, i32 }>
%"class.base::debug::ThreadActivityTracker" = type <{ i32 (...)**, %"struct.base::debug::ThreadActivityTracker::Header"*, %"struct.base::debug::Activity"*, i32, i8, [3 x i8] }>
%"struct.base::debug::ThreadActivityTracker::Header" = type opaque
%"struct.base::debug::Activity" = type { i64, i64, i64, [10 x i64], i32, i32, i8, [7 x i8], %"union.base::debug::ActivityData" }
%"union.base::debug::ActivityData" = type { %struct.anon.703 }
%struct.anon.703 = type { i64 }
%"class.std::__1::unique_ptr.709" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.base::debug::ActivityUserData"* }
%"class.base::debug::ActivityUserData" = type { i32 (...)**, %"class.std::__1::map.712", i8*, i64, %"struct.base::debug::ActivityUserData::MemoryHeader"*, i32, i64, i64 }
%"class.std::__1::map.712" = type { %"class.std::__1::__tree.713" }
%"class.std::__1::__tree.713" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.base::debug::ActivityUserData::MemoryHeader" = type { %"struct.base::debug::OwningProcess" }
%"struct.base::debug::OwningProcess" = type { %"struct.std::__1::atomic.536", i32, i64, i64 }
%"struct.std::__1::atomic.536" = type { %"struct.std::__1::__atomic_base.537" }
%"struct.std::__1::__atomic_base.537" = type { %"struct.std::__1::__atomic_base.538" }
%"struct.std::__1::__atomic_base.538" = type { %"struct.std::__1::__cxx_atomic_impl.539" }
%"struct.std::__1::__cxx_atomic_impl.539" = type { %"struct.std::__1::__cxx_atomic_base_impl.540" }
%"struct.std::__1::__cxx_atomic_base_impl.540" = type { i32 }
%"class.absl::optional.726" = type { %"class.absl::optional_internal::optional_data.727" }
%"class.absl::optional_internal::optional_data.727" = type { %"class.absl::optional_internal::optional_data_base.728" }
%"class.absl::optional_internal::optional_data_base.728" = type { %"class.absl::optional_internal::optional_data_dtor_base.729" }
%"class.absl::optional_internal::optional_data_dtor_base.729" = type { i8, %union.anon.730 }
%union.anon.730 = type { %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" }
%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" = type { %"class.base::TimeTicks", %class.scoped_refptr.731 }
%class.scoped_refptr.731 = type { %"class.base::internal::IOJankMonitoringWindow"* }
%"class.base::internal::IOJankMonitoringWindow" = type <{ %"class.base::RefCountedThreadSafe.732", [4 x i8], %"class.base::Lock", [60 x i64], %"class.base::TimeTicks", %class.scoped_refptr.731, i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe.732" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.ifaddrs = type { %struct.ifaddrs*, i8*, i32, %struct.sockaddr*, %struct.sockaddr*, %union.anon.733, i8* }
%struct.sockaddr = type { i16, [14 x i8] }
%union.anon.733 = type { %struct.sockaddr* }
%"class.std::__1::vector.481" = type { %"class.std::__1::__vector_base.482" }
%"class.std::__1::__vector_base.482" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.std::__1::unique_ptr.460"* }
%"class.net::DnsProbeRunner" = type { i32 (...)** }
%"class.net::DnsTransactionFactory" = type { i32 (...)**, %"class.base::WeakPtrFactory.502" }
%"class.base::WeakPtrFactory.502" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.anon.742 = type { %"class.net::HostResolverManager::RequestImpl"**, %"class.net::HostResolverManager::Job"* }
%class.anon.743 = type { %"class.net::HostResolverManager::RequestImpl"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.683" = type { %"class.std::__1::__vector_base.684" }
%"class.std::__1::__vector_base.684" = type { i32*, i32*, %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.686" = type { i32* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.536", [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"struct.url::Component" = type { i32, i32 }
%"class.net::SystemHostResolverProc" = type { %"class.net::HostResolverProc" }
%"class.base::OnceCallback.556" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtr.557" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"struct.base::internal::BindState.601" = type { %"class.base::internal::BindStateBase", %"class.base::OnceCallback.556", %"class.std::__1::tuple.602" }
%"class.std::__1::tuple.602" = type { %"struct.std::__1::__tuple_impl.603" }
%"struct.std::__1::__tuple_impl.603" = type { %"class.std::__1::__tuple_leaf.604", %"class.std::__1::__tuple_leaf.605", %"class.std::__1::__tuple_leaf.594" }
%"class.std::__1::__tuple_leaf.604" = type { %"class.net::AddressList" }
%"class.std::__1::__tuple_leaf.605" = type { i32 }
%"class.std::__1::__tuple_leaf.594" = type { i32 }
%class.anon.586 = type { i32*, i32* }
%"class.std::__1::tuple.590" = type { %"struct.std::__1::__tuple_impl.591" }
%"struct.std::__1::__tuple_impl.591" = type { %"class.std::__1::__tuple_leaf.592", %"class.std::__1::__tuple_leaf.593", %"class.std::__1::__tuple_leaf.594", %"class.std::__1::__tuple_leaf.595", %"class.std::__1::__tuple_leaf.596", %"class.std::__1::__tuple_leaf.597" }
%"class.std::__1::__tuple_leaf.592" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__tuple_leaf.593" = type { i32 }
%"class.std::__1::__tuple_leaf.595" = type { %class.scoped_refptr.56 }
%"class.std::__1::__tuple_leaf.596" = type { %class.scoped_refptr.276 }
%"class.std::__1::__tuple_leaf.597" = type { %"class.base::OnceCallback.556" }
%"class.base::OnceCallback.621" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.net::DnsResponse" = type { %class.scoped_refptr.623, i64, %"class.net::DnsRecordParser", i8, %"class.std::__1::vector.1", %"class.std::__1::vector.625" }
%class.scoped_refptr.623 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.624", i8* }
%"class.base::RefCountedThreadSafe.624" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::DnsRecordParser" = type { i8*, i64, i64, i64, i8* }
%"class.std::__1::vector.625" = type { %"class.std::__1::__vector_base.626" }
%"class.std::__1::__vector_base.626" = type { i16*, i16*, %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { i16* }
%"class.net::DnsResponseResultExtractor" = type { %"class.net::DnsResponse"* }
%"class.base::OnceCallback.662" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtr.663" = type { %"class.base::internal::WeakPtrBase" }
%"class.net::AddressSorter" = type { i32 (...)** }
%"struct.std::__1::__split_buffer.680" = type { %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.293", %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::allocator.295"* }
%"class.std::__1::allocator.295" = type { i8 }
%"class.std::__1::tuple.736" = type { %"struct.std::__1::__tuple_impl.737" }
%"struct.std::__1::__tuple_impl.737" = type <{ %"class.std::__1::__tuple_leaf.545", %"class.std::__1::__tuple_leaf.605", %"class.std::__1::__tuple_leaf.738", [3 x i8] }>
%"class.std::__1::__tuple_leaf.545" = type { %"class.base::WeakPtr.542" }
%"class.std::__1::__tuple_leaf.738" = type { i8 }
%"class.net::HostResolverManager::ProbeRequestImpl" = type { %"class.net::HostResolverManager::CancellableProbeRequest", %"class.net::ResolveContext::DohStatusObserver", %"class.net::ResolveContext"*, %"class.std::__1::unique_ptr.378", %"class.base::WeakPtr.230", %"class.base::WeakPtrFactory.384" }
%"class.net::ResolveContext::DohStatusObserver" = type { %"class.base::CheckedObserver" }
%"class.std::__1::unique_ptr.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.net::DnsProbeRunner"* }
%"class.base::WeakPtrFactory.384" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtr.751" = type { %"class.base::internal::WeakPtrBase" }
%"struct.std::__1::__tuple_less.778" = type { i8 }
%"class.std::__1::tuple.782" = type { %"struct.std::__1::__tuple_impl.783" }
%"struct.std::__1::__tuple_impl.783" = type { %"class.std::__1::__tuple_leaf.784", %"class.std::__1::__tuple_leaf.785", %"class.std::__1::__tuple_leaf.786" }
%"class.std::__1::__tuple_leaf.784" = type { %"class.absl::optional.145"* }
%"class.std::__1::__tuple_leaf.785" = type { %"class.absl::optional.145"* }
%"class.std::__1::__tuple_leaf.786" = type { i8* }
%class.anon.792 = type { %"class.net::NetLogWithSource"*, %"class.net::HostResolverManager::Job"* }
%"struct.std::__1::__split_buffer.793" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.794" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.263", %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"class.std::__1::allocator.265"* }
%"class.std::__1::allocator.265" = type { i8 }
%"class.std::__1::unique_ptr.818" = type { %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { i8* }

$_ZNK4base12FeatureParamINS_12TaskPriorityELb1EE3GetEv = comdat any

$_ZN4base12ObserverListIN3net14ResolveContextELb1ELb0ENS_8internal22CheckedObserverAdapterEED2Ev = comdat any

$_ZN4base12ObserverListIN3net14ResolveContextELb1ELb0ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS2_ = comdat any

$_ZN4base12ObserverListIN3net14ResolveContextELb1ELb0ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS2_ = comdat any

$_ZN3net19HostResolverManager11RequestImpl23SanitizeDnsAliasResultsEv = comdat any

$_ZNSt3__112__deque_baseIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEED2Ev = comdat any

$_ZN3net19HostResolverManager3Job10AddRequestEPNS0_11RequestImplE = comdat any

$_ZN3net19HostResolverManager3Job11RunNextTaskEv = comdat any

$_ZN3net19HostResolverManager3Job14ServeFromHostsEv = comdat any

$_ZN3net19HostResolverManager3Job13CancelRequestEPNS0_11RequestImplE = comdat any

$_ZN3net19HostResolverManager11RequestImplD2Ev = comdat any

$_ZN3net19HostResolverManager11RequestImplD0Ev = comdat any

$_ZN3net19HostResolverManager11RequestImpl5StartEN4base12OnceCallbackIFviEEE = comdat any

$_ZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEv = comdat any

$_ZNK3net19HostResolverManager11RequestImpl14GetTextResultsEv = comdat any

$_ZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEv = comdat any

$_ZNK3net19HostResolverManager11RequestImpl18GetDnsAliasResultsEv = comdat any

$_ZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEv = comdat any

$_ZNK3net19HostResolverManager11RequestImpl19GetResolveErrorInfoEv = comdat any

$_ZNK3net19HostResolverManager11RequestImpl12GetStaleInfoEv = comdat any

$_ZThn8_N3net19HostResolverManager11RequestImplD1Ev = comdat any

$_ZThn8_N3net19HostResolverManager11RequestImplD0Ev = comdat any

$_ZThn8_N3net19HostResolverManager11RequestImpl5StartEN4base12OnceCallbackIFviEEE = comdat any

$_ZThn8_NK3net19HostResolverManager11RequestImpl17GetAddressResultsEv = comdat any

$_ZThn8_NK3net19HostResolverManager11RequestImpl14GetTextResultsEv = comdat any

$_ZThn8_NK3net19HostResolverManager11RequestImpl18GetHostnameResultsEv = comdat any

$_ZThn8_NK3net19HostResolverManager11RequestImpl18GetDnsAliasResultsEv = comdat any

$_ZThn8_NK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEv = comdat any

$_ZThn8_NK3net19HostResolverManager11RequestImpl19GetResolveErrorInfoEv = comdat any

$_ZThn8_NK3net19HostResolverManager11RequestImpl12GetStaleInfoEv = comdat any

$_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNK3net16NetLogWithSource8AddEntryIZNS_19HostResolverManager3Job10AddRequestEPNS2_11RequestImplEEUlvE_EEvNS_15NetLogEventTypeENS_16NetLogEventPhaseERKT_ = comdat any

$_ZN3net19HostResolverManager3Job25CompleteRequestsWithErrorEi = comdat any

$_ZN3net19HostResolverManager3Job16MaybeCacheResultERKNS_9HostCache5EntryEN4base9TimeDeltaEb = comdat any

$_ZN3net19HostResolverManager3Job16CompleteRequestsERKNS_9HostCache5EntryEN4base9TimeDeltaEbb = comdat any

$_ZN3net19HostResolverManager3Job8ScheduleEb = comdat any

$_ZN3net19HostResolverManager3Job9OnEvictedEv = comdat any

$_ZN3net19HostResolverManager3Job13StartProcTaskEv = comdat any

$_ZN3net19HostResolverManager3Job12StartDnsTaskEb = comdat any

$_ZN3net19HostResolverManager3Job13StartMdnsTaskEv = comdat any

$_ZN3net19HostResolverManager3Job19InsecureCacheLookupEv = comdat any

$_ZN3net19HostResolverManager3Job11KillDnsTaskEv = comdat any

$_ZN3net19HostResolverManager3Job19RecordJobHistogramsEi = comdat any

$_ZN3net19HostResolverManager8ProcTaskD2Ev = comdat any

$_ZN3net19HostResolverManager7DnsTaskD2Ev = comdat any

$_ZN4base14circular_dequeIN3net12DnsQueryTypeEED2Ev = comdat any

$_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm = comdat any

$_ZN3net19HostResolverManager11RequestImpl16LogFinishRequestEib = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS5_EENS3_5ErrorEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS4_EENS2_5ErrorEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS5_EENS3_5ErrorEEEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE = comdat any

$_ZN3net19HostResolverManager3Job18OnProcTaskCompleteEN4base9TimeTicksEiRKNS_11AddressListE = comdat any

$_ZN3net19HostResolverManager8ProcTaskC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13AddressFamilyEiRKNS_14ProcTaskParamsEN4base12OnceCallbackIFviRKNS_11AddressListEEEE13scoped_refptrINSD_10TaskRunnerEERKNS_16NetLogWithSourceEPKNSD_9TickClockE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager3JobEFvNS_9TimeTicksEiRKNS3_11AddressListEEJNS0_17UnretainedWrapperIS5_EES6_EEEFviS9_EE7RunOnceEPNS0_13BindStateBaseEiS9_ = comdat any

$_ZN4base8internal9BindStateIMN3net19HostResolverManager3JobEFvNS_9TimeTicksEiRKNS2_11AddressListEEJNS0_17UnretainedWrapperIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3net19HostResolverManager8ProcTask18StartLookupAttemptEv = comdat any

$_ZN3net19HostResolverManager8ProcTask23OnLookupAttemptCompleteEN4base7WeakPtrIS1_EERKNS2_9TimeTicksEjPKNS2_9TickClockERKNS_11AddressListEii = comdat any

$_ZN3net19HostResolverManager8ProcTask8DoLookupENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13AddressFamilyEi13scoped_refptrINS_16HostResolverProcEESA_IN4base22SingleThreadTaskRunnerEENSD_12OnceCallbackIFvRKNS_11AddressListEiiEEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN3net19HostResolverManager8ProcTaskEEERKNS_9TimeTicksEjPKNS_9TickClockERKNS4_11AddressListEiiEJS7_S8_jSD_EEEFvSG_iiEE7RunOnceEPNS0_13BindStateBaseESG_ii = comdat any

$_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN3net19HostResolverManager8ProcTaskEEERKNS_9TimeTicksEjPKNS_9TickClockERKNS3_11AddressListEiiEJS6_S7_jSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3net19HostResolverManager8ProcTask16OnLookupCompleteERKNS_11AddressListERKN4base9TimeTicksEjii = comdat any

$_ZNK3net16NetLogWithSource8AddEntryIZNS_19HostResolverManager8ProcTask16OnLookupCompleteERKNS_11AddressListERKN4base9TimeTicksEjiiEUlvE_EEvNS_15NetLogEventTypeENS_16NetLogEventPhaseERKT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN3net13AddressFamilyEi13scoped_refptrINSA_16HostResolverProcEESC_INS_22SingleThreadTaskRunnerEENS_12OnceCallbackIFvRKNSA_11AddressListEiiEEEEJS9_SB_iSE_SG_SM_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN3net13AddressFamilyEi13scoped_refptrINS9_16HostResolverProcEESB_INS_22SingleThreadTaskRunnerEENS_12OnceCallbackIFvRKNS9_11AddressListEiiEEEEJS8_SA_iSD_SF_SL_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS_12OnceCallbackIFvRKN3net11AddressListEiiEEEJS4_iiEE6CreateIS8_JRS4_RiSC_EEEPS9_PFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvRKN3net11AddressListEiiEEEJS5_iiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS_12OnceCallbackIFvRKN3net11AddressListEiiEEEJS4_iiEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvRKN3net11AddressListEiiEEEJS5_iiEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager8ProcTaskEFvvEJNS_7WeakPtrIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net19HostResolverManager8ProcTaskEFvvEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManager8ProcTaskEFvvEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE = comdat any

$_ZN3net19HostResolverManager7DnsTask20StartNextTransactionEv = comdat any

$_ZN3net19HostResolverManager7DnsTaskC2EPNS_9DnsClientEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_12DnsQueryTypeEPNS_14ResolveContextEbNS_13SecureDnsModeEPNS1_8DelegateERKNS_16NetLogWithSourceEPKNS4_9TickClockEb = comdat any

$_ZN4base14circular_dequeIN3net12DnsQueryTypeEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeIN3net12DnsQueryTypeEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_ = comdat any

$_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEE9MoveRangeIS3_Li0EEEvPS3_S6_S6_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNK4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm = comdat any

$_ZN4base14circular_dequeIN3net12DnsQueryTypeEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZN3net19HostResolverManager7DnsTask21OnTransactionCompleteERKN4base9TimeTicksENS_12DnsQueryTypeEPNS_14DnsTransactionEiPKNS_11DnsResponseEN4absl8optionalINSt3__112basic_stringIcNSE_11char_traitsIcEENSE_9allocatorIcEEEEEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager7DnsTaskEFvRKNS_9TimeTicksENS3_12DnsQueryTypeEPNS3_14DnsTransactionEiPKNS3_11DnsResponseEN4absl8optionalINSt3__112basic_stringIcNSH_11char_traitsIcEENSH_9allocatorIcEEEEEEEJNS0_17UnretainedWrapperIS5_EES6_S9_EEEFvSB_iSE_SO_EE7RunOnceEPNS0_13BindStateBaseESB_iSE_OSO_ = comdat any

$_ZN4base8internal9BindStateIMN3net19HostResolverManager7DnsTaskEFvRKNS_9TimeTicksENS2_12DnsQueryTypeEPNS2_14DnsTransactionEiPKNS2_11DnsResponseEN4absl8optionalINSt3__112basic_stringIcNSG_11char_traitsIcEENSG_9allocatorIcEEEEEEEJNS0_17UnretainedWrapperIS4_EES5_S8_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9flat_treeINSt3__110unique_ptrIN3net14DnsTransactionENS2_14default_deleteIS5_EEEENS_8identityENS_19UniquePtrComparatorENS2_6vectorIS8_NS2_9allocatorIS8_EEEEE5eraseENS2_11__wrap_iterIPS8_EE = comdat any

$_ZN3net19HostResolverManager7DnsTask9OnFailureEiNS_26DnsResponseResultExtractor15ExtractionErrorEN4absl8optionalIN4base9TimeDeltaEEE = comdat any

$_ZN3net19HostResolverManager7DnsTask32MaybeStartExperimentalQueryTimerEN4absl8optionalINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE = comdat any

$_ZN3net19HostResolverManager7DnsTask26ProcessResultsOnCompletionEv = comdat any

$_ZN3net19HostResolverManager7DnsTask26OnExperimentalQueryTimeoutEN4absl8optionalINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager7DnsTaskEFvN4absl8optionalINSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEEEEJNS0_17UnretainedWrapperIS5_EESF_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net19HostResolverManager7DnsTaskEFvN4absl8optionalINSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEEEEJNS0_17UnretainedWrapperIS4_EESE_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3net19HostResolverManager7DnsTask14OnSortCompleteEN4base9TimeTicksENS_9HostCache5EntryEbbRKNS_11AddressListE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager7DnsTaskEFvNS_9TimeTicksENS3_9HostCache5EntryEbbRKNS3_11AddressListEEJNS_7WeakPtrIS5_EES6_S8_bEEEFvbSB_EE7RunOnceEPNS0_13BindStateBaseEbSB_ = comdat any

$_ZN4base8internal13FunctorTraitsIMN3net19HostResolverManager7DnsTaskEFvNS_9TimeTicksENS2_9HostCache5EntryEbbRKNS2_11AddressListEEvE6InvokeISC_NS_7WeakPtrIS4_EEJS5_S7_bbSA_EEEvT_OT0_DpOT1_ = comdat any

$_ZN4base8internal9BindStateIMN3net19HostResolverManager7DnsTaskEFvNS_9TimeTicksENS2_9HostCache5EntryEbbRKNS2_11AddressListEEJNS_7WeakPtrIS4_EES5_S7_bEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManager7DnsTaskEFvNS_9TimeTicksENS3_9HostCache5EntryEbbRKNS3_11AddressListEEJNS_7WeakPtrIS5_EES6_S8_bEEEEEbPKNS0_13BindStateBaseENSH_21CancellationQueryModeE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN3net14DnsTransactionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE7emplaceIJS6_EEENS_11__wrap_iterIPS6_EENSB_IPKS6_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_10unique_ptrIN3net14DnsTransactionENS_14default_deleteIS3_EEEERNS_9allocatorIS6_EEE12emplace_backIJS6_EEEvDpOT_ = comdat any

$_ZN3net19HostResolverManager3Job18OnMdnsTaskCompleteEv = comdat any

$_ZN3net19HostResolverManager3Job22OnMdnsImmediateFailureEi = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager3JobEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net19HostResolverManager3JobEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS5_EEiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS4_EEiEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS5_EEiEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE = comdat any

$_ZN3net19HostResolverManager3Job20AbortInsecureDnsTaskEib = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager3JobEFvibEJNS_7WeakPtrIS5_EEibEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net19HostResolverManager3JobEFvibEJNS_7WeakPtrIS4_EEibEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManager3JobEFvibEJNS_7WeakPtrIS5_EEibEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE = comdat any

$_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE5eraseENS_16__deque_iteratorIS3_PKS3_RS8_PKS9_lLl0EEE = comdat any

$_ZNSt3__113move_backwardIN3net19HostResolverManager8TaskTypeEPS3_RS3_PS4_lLl0ES3_S4_S5_S6_lLl0EEENS_16__deque_iteratorIT5_T6_T7_T8_T9_XT10_EEENS7_IT_T0_T1_T2_T3_XT4_EEESJ_SD_ = comdat any

$_ZNSt3__14moveIN3net19HostResolverManager8TaskTypeEPS3_RS3_PS4_lLl0ES3_S4_S5_S6_lLl0EEENS_16__deque_iteratorIT5_T6_T7_T8_T9_XT10_EEENS7_IT_T0_T1_T2_T3_XT4_EEESJ_SD_ = comdat any

$_ZNK3net16NetLogWithSource8AddEntryIZNS_19HostResolverManager3Job13CancelRequestEPNS2_11RequestImplEEUlvE_EEvNS_15NetLogEventTypeENS_16NetLogEventPhaseERKT_ = comdat any

$_ZZN3net19HostResolverManager11RequestImpl15LogStartRequestEvENKUlvE_clEv = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net19HostResolverManager6JobKeyENS_10unique_ptrINS3_3JobENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

$_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN3net14ResolveContextELb1ELb0ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_ = comdat any

$_ZN3net19HostResolverManager11RequestImplC2ERKNS_16NetLogWithSourceERKNS_12HostPortPairERKNS_19NetworkIsolationKeyERKN4absl8optionalINS_12HostResolver21ResolveHostParametersEEEPNS_14ResolveContextEPNS_9HostCacheEN4base7WeakPtrIS0_EEPKNSM_9TickClockE = comdat any

$_ZN3net19HostResolverManager29CancellableResolveHostRequestD2Ev = comdat any

$_ZN3net19HostResolverManager29CancellableResolveHostRequestD0Ev = comdat any

$_ZThn8_N3net19HostResolverManager29CancellableResolveHostRequestD1Ev = comdat any

$_ZThn8_N3net19HostResolverManager29CancellableResolveHostRequestD0Ev = comdat any

$_ZN3net12HostResolver18ResolveHostRequest21ChangeRequestPriorityENS_15RequestPriorityE = comdat any

$_ZN3net19HostResolverManager16ProbeRequestImplD2Ev = comdat any

$_ZN3net19HostResolverManager16ProbeRequestImplD0Ev = comdat any

$_ZN3net19HostResolverManager16ProbeRequestImpl6CancelEv = comdat any

$_ZN3net19HostResolverManager16ProbeRequestImpl5StartEv = comdat any

$_ZN3net19HostResolverManager16ProbeRequestImpl16OnSessionChangedEv = comdat any

$_ZN3net19HostResolverManager16ProbeRequestImpl22OnDohServerUnavailableEb = comdat any

$_ZThn8_N3net19HostResolverManager16ProbeRequestImplD1Ev = comdat any

$_ZThn8_N3net19HostResolverManager16ProbeRequestImplD0Ev = comdat any

$_ZThn8_N3net19HostResolverManager16ProbeRequestImpl5StartEv = comdat any

$_ZThn16_N3net19HostResolverManager16ProbeRequestImplD1Ev = comdat any

$_ZThn16_N3net19HostResolverManager16ProbeRequestImplD0Ev = comdat any

$_ZThn16_N3net19HostResolverManager16ProbeRequestImpl16OnSessionChangedEv = comdat any

$_ZThn16_N3net19HostResolverManager16ProbeRequestImpl22OnDohServerUnavailableEb = comdat any

$_ZN3net19HostResolverManager23CancellableProbeRequestD2Ev = comdat any

$_ZN3net19HostResolverManager23CancellableProbeRequestD0Ev = comdat any

$_ZThn8_N3net19HostResolverManager23CancellableProbeRequestD1Ev = comdat any

$_ZThn8_N3net19HostResolverManager23CancellableProbeRequestD0Ev = comdat any

$_ZN3net19HostResolverManager16ProbeRequestImpl11StartRunnerEb = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager16ProbeRequestImplEFvbEJNS_7WeakPtrIS5_EEbEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net19HostResolverManager16ProbeRequestImplEFvbEJNS_7WeakPtrIS4_EEbEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManager16ProbeRequestImplEFvbEJNS_7WeakPtrIS5_EEbEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE = comdat any

$_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_ = comdat any

$_ZNK3net19HostResolverManager6JobKeyltERKS1_ = comdat any

$_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKN3net12DnsQueryTypeERKiRKNS4_18HostResolverSourceERKNS4_13SecureDnsModeERKPNS4_14ResolveContextERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_19NetworkIsolationKeyEEEESV_EEbRKT_RKT0_ = comdat any

$_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_ = comdat any

$_ZN3net19HostResolverManager3JobC2ERKN4base7WeakPtrIS0_EENS2_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_19NetworkIsolationKeyENS_12DnsQueryTypeEiNS_18HostResolverSourceENS_12HostResolver21ResolveHostParameters10CacheUsageENS_13SecureDnsModeEPNS_14ResolveContextEPNS_9HostCacheENS8_5dequeINS0_8TaskTypeENS8_9allocatorISQ_EEEENS_15RequestPriorityE13scoped_refptrINS2_10TaskRunnerEERKNS_16NetLogWithSourceEPKNS2_9TickClockE = comdat any

$_ZN3net19HostResolverManager3JobD2Ev = comdat any

$_ZN3net19HostResolverManager3JobD0Ev = comdat any

$_ZN3net19HostResolverManager3Job5StartEv = comdat any

$_ZN3net19HostResolverManager3Job17OnDnsTaskCompleteEN4base9TimeTicksERKNS_9HostCache5EntryEb = comdat any

$_ZN3net19HostResolverManager3Job33OnIntermediateTransactionCompleteEv = comdat any

$_ZN3net19HostResolverManager3Job24AddTransactionTimeQueuedEN4base9TimeDeltaE = comdat any

$_ZNK3net19HostResolverManager3Job8priorityEv = comdat any

$_ZThn8_N3net19HostResolverManager3Job17OnDnsTaskCompleteEN4base9TimeTicksERKNS_9HostCache5EntryEb = comdat any

$_ZThn8_N3net19HostResolverManager3Job33OnIntermediateTransactionCompleteEv = comdat any

$_ZThn8_NK3net19HostResolverManager3Job8priorityEv = comdat any

$_ZThn8_N3net19HostResolverManager3Job24AddTransactionTimeQueuedEN4base9TimeDeltaE = comdat any

$_ZThn8_N3net19HostResolverManager3JobD1Ev = comdat any

$_ZThn8_N3net19HostResolverManager3JobD0Ev = comdat any

$_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE8__appendINS_16__deque_iteratorIS3_PKS3_RS9_PKSA_lLl0EEEEEvT_SF_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISF_EE5valueEvE4typeE = comdat any

$_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEm = comdat any

$_ZNSt3__114__split_bufferIPN3net19HostResolverManager8TaskTypeENS_9allocatorIS4_EEE9push_backEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPN3net19HostResolverManager8TaskTypeENS_9allocatorIS4_EEE10push_frontEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPN3net19HostResolverManager8TaskTypeERNS_9allocatorIS4_EEE10push_frontERKS4_ = comdat any

$_ZNK3net16NetLogWithSource8AddEntryIZNS_19HostResolverManager3JobC1ERKN4base7WeakPtrIS2_EENS4_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_19NetworkIsolationKeyENS_12DnsQueryTypeEiNS_18HostResolverSourceENS_12HostResolver21ResolveHostParameters10CacheUsageENS_13SecureDnsModeEPNS_14ResolveContextEPNS_9HostCacheENSA_5dequeINS2_8TaskTypeENSA_9allocatorISS_EEEENS_15RequestPriorityE13scoped_refptrINS4_10TaskRunnerEERKS0_PKNS4_9TickClockEEUlvE_EEvNS_15NetLogEventTypeENS_16NetLogEventPhaseERKT_ = comdat any

$_ZN3net19HostResolverManager3Job16OnDnsTaskFailureERKN4base7WeakPtrINS0_7DnsTaskEEENS2_9TimeDeltaERKNS_9HostCache5EntryEb = comdat any

$_ZNSt3__16vectorIN3net19HostResolverManager3Job16CompletionResultENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net19HostResolverManager6JobKeyENS_10unique_ptrINS3_3JobENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS4_JS4_S9_EEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE4findISB_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISD_PvEEEERKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net19HostResolverManager6JobKeyENS_10unique_ptrINS3_3JobENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS_9allocatorISA_EEE5eraseENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE20__add_front_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN3net19HostResolverManager8TaskTypeENS_9allocatorIS4_EEE10push_frontERKS4_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFbvEJEEES3_E7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFbvEJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManagerEFvbEJNS_7WeakPtrIS4_EEEEEFvbEE7RunOnceEPNS0_13BindStateBaseEb = comdat any

$_ZN4base8internal9BindStateIMN3net19HostResolverManagerEFvbEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManagerEFvbEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN4base8internal20ReturnAsParamAdapterIbEEvNS_12OnceCallbackIFT_vEEEPNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEE = comdat any

$_ZN4base8internal12ReplyAdapterIbbEEvNS_12OnceCallbackIFvT0_EEEPNSt3__110unique_ptrIT_NS6_14default_deleteIS8_EEEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFbvEEEPNSt3__110unique_ptrIbNS6_14default_deleteIbEEEEEJS5_SB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFbvEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_SA_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvbEEEPNSt3__110unique_ptrIbNS6_14default_deleteIbEEEEEJS5_NS0_12OwnedWrapperISA_NS8_ISA_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvbEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_NS0_12OwnedWrapperIS9_NS7_IS9_EEEEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN3net19HostResolverManager3JobENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZNSt3__16vectorIN4base12OnceCallbackIFvvEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZN4base12ObserverListIN3net14ResolveContextELb1ELb0ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv = comdat any

$_ZZN3net19HostResolverManager3Job19RecordJobHistogramsEiE24atomic_histogram_pointer = comdat any

$_ZZN3net19HostResolverManager3Job19RecordJobHistogramsEiE24atomic_histogram_pointer_0 = comdat any

$_ZZN3net19HostResolverManager3Job19RecordJobHistogramsEiE24atomic_histogram_pointer_1 = comdat any

$_ZZN3net19HostResolverManager11RequestImpl16LogFinishRequestEibE24atomic_histogram_pointer = comdat any

$_ZZN3net19HostResolverManager11RequestImpl16LogFinishRequestEibE24atomic_histogram_pointer_0 = comdat any

$_ZZN3net19HostResolverManager11RequestImpl16LogFinishRequestEibE24atomic_histogram_pointer_1 = comdat any

$_ZZN3net19HostResolverManager11RequestImpl16LogFinishRequestEibE24atomic_histogram_pointer_2 = comdat any

$_ZZN3net19HostResolverManager7DnsTask20StartNextTransactionEvE24atomic_histogram_pointer = comdat any

$_ZZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEvE14nullopt_result = comdat any

$_ZGVZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEvE14nullopt_result = comdat any

$_ZZNK3net19HostResolverManager11RequestImpl14GetTextResultsEvE14nullopt_result = comdat any

$_ZGVZNK3net19HostResolverManager11RequestImpl14GetTextResultsEvE14nullopt_result = comdat any

$_ZZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEvE14nullopt_result = comdat any

$_ZGVZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEvE14nullopt_result = comdat any

$_ZZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEvE14nullopt_result = comdat any

$_ZGVZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEvE14nullopt_result = comdat any

$_ZTVN3net19HostResolverManager29CancellableResolveHostRequestE = comdat any

$_ZTVN3net19HostResolverManager16ProbeRequestImplE = comdat any

$_ZTVN3net19HostResolverManager23CancellableProbeRequestE = comdat any

$_ZTVN3net19HostResolverManager3JobE = comdat any

$_ZZN3net19HostResolverManager3Job17OnDnsTaskCompleteEN4base9TimeTicksERKNS_9HostCache5EntryEbE24atomic_histogram_pointer = comdat any

$_ZZN3net19HostResolverManager3Job17OnDnsTaskCompleteEN4base9TimeTicksERKNS_9HostCache5EntryEbE24atomic_histogram_pointer_0 = comdat any

$_ZZN3net19HostResolverManager3Job16OnDnsTaskFailureERKN4base7WeakPtrINS0_7DnsTaskEEENS2_9TimeDeltaERKNS_9HostCache5EntryEbE24atomic_histogram_pointer = comdat any

$_ZZN3net19HostResolverManager3Job16OnDnsTaskFailureERKN4base7WeakPtrINS0_7DnsTaskEEENS2_9TimeDeltaERKNS_9HostCache5EntryEbE24atomic_histogram_pointer_0 = comdat any

$_ZZN3net19HostResolverManager3Job16OnDnsTaskFailureERKN4base7WeakPtrINS0_7DnsTaskEEENS2_9TimeDeltaERKNS_9HostCache5EntryEbE24atomic_histogram_pointer_1 = comdat any

$_ZZN3net19HostResolverManager3Job16OnDnsTaskFailureERKN4base7WeakPtrINS0_7DnsTaskEEENS2_9TimeDeltaERKNS_9HostCache5EntryEbE24atomic_histogram_pointer_2 = comdat any

@_ZTVN3net19HostResolverManagerE = hidden unnamed_addr constant { [10 x i8*], [5 x i8*], [3 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::HostResolverManager"*)* @_ZN3net19HostResolverManager18OnIPAddressChangedEv to i8*), i8* bitcast (void (%"class.net::HostResolverManager"*)* @_ZN3net19HostResolverManagerD2Ev to i8*), i8* bitcast (void (%"class.net::HostResolverManager"*)* @_ZN3net19HostResolverManagerD0Ev to i8*), i8* bitcast (void (%"class.net::HostResolverManager"*, i1, i1)* @_ZN3net19HostResolverManager27SetInsecureDnsClientEnabledEbb to i8*), i8* bitcast (i1 (%"class.net::HostResolverManager"*, %"class.net::IPAddress"*, %"class.net::NetLogWithSource"*)* @_ZN3net19HostResolverManager19IsGloballyReachableERKNS_9IPAddressERKNS_16NetLogWithSourceE to i8*), i8* bitcast (void (%"class.net::HostResolverManager"*)* @_ZN3net19HostResolverManager19RunLoopbackProbeJobEv to i8*), i8* bitcast (void (%"class.net::HostResolverManager"*, i32)* @_ZN3net19HostResolverManager23OnConnectionTypeChangedENS_21NetworkChangeNotifier14ConnectionTypeE to i8*), i8* bitcast (void (%"class.net::HostResolverManager"*, %"class.absl::optional.455"*)* @_ZN3net19HostResolverManager24OnSystemDnsConfigChangedEN4absl8optionalINS_9DnsConfigEEE to i8*)], [5 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.net::HostResolverManager"*, i32)* @_ZThn16_N3net19HostResolverManager23OnConnectionTypeChangedENS_21NetworkChangeNotifier14ConnectionTypeE to i8*), i8* bitcast (void (%"class.net::HostResolverManager"*)* @_ZThn16_N3net19HostResolverManagerD1Ev to i8*), i8* bitcast (void (%"class.net::HostResolverManager"*)* @_ZThn16_N3net19HostResolverManagerD0Ev to i8*)], [3 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%"class.net::HostResolverManager"*, %"class.absl::optional.455"*)* @_ZThn32_N3net19HostResolverManager24OnSystemDnsConfigChangedEN4absl8optionalINS_9DnsConfigEEE to i8*)] }, align 8
@_ZN3net12_GLOBAL__N_113priority_modeE = internal constant %"struct.base::FeatureParam" { %"struct.base::Feature"* @_ZN3net12_GLOBAL__N_133kSystemResolverPriorityExperimentE, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i8 1, %"struct.base::FeatureParam<base::TaskPriority, true>::Option"* getelementptr inbounds ([2 x %"struct.base::FeatureParam<base::TaskPriority, true>::Option"], [2 x %"struct.base::FeatureParam<base::TaskPriority, true>::Option"]* @_ZN3net12_GLOBAL__N_110prio_modesE, i32 0, i32 0), i64 2 }, align 8
@_ZN3net9HostCache9kNotStaleE = external local_unnamed_addr global %"struct.net::HostCache::EntryStaleness", align 8
@_ZN3net12_GLOBAL__N_117kIPv6ProbeAddressE = internal constant [16 x i8] c" \01H`H`\00\00\00\00\00\00\00\00\88\88", align 16
@.str = private unnamed_addr constant [20 x i8] c"RunLoopbackProbeJob\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"../../net/dns/host_resolver_manager.cc\00", align 1
@.ref.tmp = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 2, i8 -128, i8 0, i8 1, i8 0, i8 0 }, align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"DnsUnresponsiveDelayMsByConnectionType\00", align 1
@_ZN3net14ProcTaskParams28kDnsDefaultUnresponsiveDelayE = external local_unnamed_addr global %"class.base::TimeDelta", align 8
@_ZTVN3net19HostResolverManager11RequestImplE = hidden unnamed_addr constant { [14 x i8*], [13 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::HostResolverManager::RequestImpl"*)* @_ZN3net19HostResolverManager11RequestImplD2Ev to i8*), i8* bitcast (void (%"class.net::HostResolverManager::RequestImpl"*)* @_ZN3net19HostResolverManager11RequestImplD0Ev to i8*), i8* bitcast (void (%"class.net::HostResolverManager::RequestImpl"*)* @_ZN3net19HostResolverManager11RequestImpl6CancelEv to i8*), i8* bitcast (i32 (%"class.net::HostResolverManager::RequestImpl"*, %"class.base::OnceCallback.360"*)* @_ZN3net19HostResolverManager11RequestImpl5StartEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (%"class.absl::optional.233"* (%"class.net::HostResolverManager::RequestImpl"*)* @_ZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEv to i8*), i8* bitcast (%"class.absl::optional.101"* (%"class.net::HostResolverManager::RequestImpl"*)* @_ZNK3net19HostResolverManager11RequestImpl14GetTextResultsEv to i8*), i8* bitcast (%"class.absl::optional.238"* (%"class.net::HostResolverManager::RequestImpl"*)* @_ZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEv to i8*), i8* bitcast (%"class.absl::optional.101"* (%"class.net::HostResolverManager::RequestImpl"*)* @_ZNK3net19HostResolverManager11RequestImpl18GetDnsAliasResultsEv to i8*), i8* bitcast (%"class.absl::optional.250"* (%"class.net::HostResolverManager::RequestImpl"*)* @_ZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEv to i8*), i8* bitcast (void (%"struct.net::ResolveErrorInfo"*, %"class.net::HostResolverManager::RequestImpl"*)* @_ZNK3net19HostResolverManager11RequestImpl19GetResolveErrorInfoEv to i8*), i8* bitcast (%"class.absl::optional.361"* (%"class.net::HostResolverManager::RequestImpl"*)* @_ZNK3net19HostResolverManager11RequestImpl12GetStaleInfoEv to i8*), i8* bitcast (void (%"class.net::HostResolverManager::RequestImpl"*, i32)* @_ZN3net19HostResolverManager11RequestImpl21ChangeRequestPriorityENS_15RequestPriorityE to i8*)], [13 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.net::HostResolverManager::RequestImpl"*)* @_ZThn8_N3net19HostResolverManager11RequestImplD1Ev to i8*), i8* bitcast (void (%"class.net::HostResolverManager::RequestImpl"*)* @_ZThn8_N3net19HostResolverManager11RequestImplD0Ev to i8*), i8* bitcast (i32 (%"class.net::HostResolverManager::RequestImpl"*, %"class.base::OnceCallback.360"*)* @_ZThn8_N3net19HostResolverManager11RequestImpl5StartEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (%"class.absl::optional.233"* (%"class.net::HostResolverManager::RequestImpl"*)* @_ZThn8_NK3net19HostResolverManager11RequestImpl17GetAddressResultsEv to i8*), i8* bitcast (%"class.absl::optional.101"* (%"class.net::HostResolverManager::RequestImpl"*)* @_ZThn8_NK3net19HostResolverManager11RequestImpl14GetTextResultsEv to i8*), i8* bitcast (%"class.absl::optional.238"* (%"class.net::HostResolverManager::RequestImpl"*)* @_ZThn8_NK3net19HostResolverManager11RequestImpl18GetHostnameResultsEv to i8*), i8* bitcast (%"class.absl::optional.101"* (%"class.net::HostResolverManager::RequestImpl"*)* @_ZThn8_NK3net19HostResolverManager11RequestImpl18GetDnsAliasResultsEv to i8*), i8* bitcast (%"class.absl::optional.250"* (%"class.net::HostResolverManager::RequestImpl"*)* @_ZThn8_NK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEv to i8*), i8* bitcast (void (%"struct.net::ResolveErrorInfo"*, %"class.net::HostResolverManager::RequestImpl"*)* @_ZThn8_NK3net19HostResolverManager11RequestImpl19GetResolveErrorInfoEv to i8*), i8* bitcast (%"class.absl::optional.361"* (%"class.net::HostResolverManager::RequestImpl"*)* @_ZThn8_NK3net19HostResolverManager11RequestImpl12GetStaleInfoEv to i8*), i8* bitcast (void (%"class.net::HostResolverManager::RequestImpl"*, i32)* @_ZThn8_N3net19HostResolverManager11RequestImpl21ChangeRequestPriorityENS_15RequestPriorityE to i8*)] }, align 8
@.str.4 = private unnamed_addr constant [21 x i8] c"HostResolverDispatch\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c":\00", align 1
@_ZN3net12_GLOBAL__N_133kSystemResolverPriorityExperimentE = internal constant %"struct.base::Feature" { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i32 0, i32 0), i32 0 }, align 8
@.str.8 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@_ZN3net12_GLOBAL__N_110prio_modesE = internal constant [2 x %"struct.base::FeatureParam<base::TaskPriority, true>::Option"] [%"struct.base::FeatureParam<base::TaskPriority, true>::Option" { i8 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0) }, %"struct.base::FeatureParam<base::TaskPriority, true>::Option" { i8 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i32 0, i32 0) }], align 16
@.str.9 = private unnamed_addr constant [33 x i8] c"SystemResolverPriorityExperiment\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"user_blocking\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"AsyncDns\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"AsyncDnsNoFallback\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"priority\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"resolver_.get()\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.17 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@_ZZN3net19HostResolverManager3Job19RecordJobHistogramsEiE24atomic_histogram_pointer = linkonce_odr hidden local_unnamed_addr global %"struct.std::__1::atomic.531" zeroinitializer, comdat, align 8
@.str.18 = private unnamed_addr constant [27 x i8] c"Net.DNS.ResolveSuccessTime\00", align 1
@_ZZN3net19HostResolverManager3Job19RecordJobHistogramsEiE24atomic_histogram_pointer_0 = linkonce_odr hidden local_unnamed_addr global %"struct.std::__1::atomic.531" zeroinitializer, comdat, align 8
@.str.19 = private unnamed_addr constant [27 x i8] c"Net.DNS.ResolveFailureTime\00", align 1
@_ZZN3net19HostResolverManager3Job19RecordJobHistogramsEiE24atomic_histogram_pointer_1 = linkonce_odr hidden local_unnamed_addr global %"struct.std::__1::atomic.531" zeroinitializer, comdat, align 8
@.str.20 = private unnamed_addr constant [24 x i8] c"Net.DNS.ResolveCategory\00", align 1
@.str.21 = private unnamed_addr constant [26 x i8] c"Net.DNS.ResolveError.Fast\00", align 1
@.str.22 = private unnamed_addr constant [26 x i8] c"Net.DNS.ResolveError.Slow\00", align 1
@.str.23 = private unnamed_addr constant [37 x i8] c"Net.DNS.SecureDnsMode.%s.ResolveTime\00", align 1
@_ZZN3net19HostResolverManager11RequestImpl16LogFinishRequestEibE24atomic_histogram_pointer = linkonce_odr hidden local_unnamed_addr global %"struct.std::__1::atomic.531" zeroinitializer, comdat, align 8
@.str.24 = private unnamed_addr constant [41 x i8] c"Net.DNS.Request.Success.HostSafetyStatus\00", align 1
@_ZZN3net19HostResolverManager11RequestImpl16LogFinishRequestEibE24atomic_histogram_pointer_0 = linkonce_odr hidden local_unnamed_addr global %"struct.std::__1::atomic.531" zeroinitializer, comdat, align 8
@.str.25 = private unnamed_addr constant [41 x i8] c"Net.DNS.Request.Failure.HostSafetyStatus\00", align 1
@_ZZN3net19HostResolverManager11RequestImpl16LogFinishRequestEibE24atomic_histogram_pointer_1 = linkonce_odr hidden local_unnamed_addr global %"struct.std::__1::atomic.531" zeroinitializer, comdat, align 8
@.str.26 = private unnamed_addr constant [26 x i8] c"Net.DNS.Request.TotalTime\00", align 1
@_ZZN3net19HostResolverManager11RequestImpl16LogFinishRequestEibE24atomic_histogram_pointer_2 = linkonce_odr hidden local_unnamed_addr global %"struct.std::__1::atomic.531" zeroinitializer, comdat, align 8
@.str.27 = private unnamed_addr constant [31 x i8] c"Net.DNS.Request.TotalTimeAsync\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"OnEvicted\00", align 1
@.str.31 = private unnamed_addr constant [19 x i8] c"StartLookupAttempt\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c"attempt_number\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.33 = private unnamed_addr constant [27 x i8] c"ProcTask::OnLookupComplete\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"net_error\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"os_error\00", align 1
@.str.36 = private unnamed_addr constant [16 x i8] c"os_error_string\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"DoLookup\00", align 1
@.str.38 = private unnamed_addr constant [27 x i8] c"../../base/bind_internal.h\00", align 1
@.str.39 = private unnamed_addr constant [18 x i8] c"!IsNull(functor_)\00", align 1
@_ZN3net8features35kDnsHttpssvcEnableQueryOverInsecureE = external global %"struct.base::FeatureParam.614", align 8
@_ZN3net8features12kDnsHttpssvcE = external global %"struct.base::Feature", align 8
@_ZN3net8features24kDnsHttpssvcUseIntegrityE = external global %"struct.base::FeatureParam.614", align 8
@_ZN3net8features23kDnsHttpssvcUseHttpssvcE = external global %"struct.base::FeatureParam.614", align 8
@.str.40 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.41 = private unnamed_addr constant [15 x i8] c"from_begin: 0x\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c", from_end: 0x\00", align 1
@.str.43 = private unnamed_addr constant [9 x i8] c", to: 0x\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZZN3net19HostResolverManager7DnsTask20StartNextTransactionEvE24atomic_histogram_pointer = linkonce_odr hidden local_unnamed_addr global %"struct.std::__1::atomic.531" zeroinitializer, comdat, align 8
@.str.44 = private unnamed_addr constant [36 x i8] c"Net.DNS.JobQueueTime.PerTransaction\00", align 1
@.str.45 = private unnamed_addr constant [22 x i8] c"condensed.has_value()\00", align 1
@.str.46 = private unnamed_addr constant [34 x i8] c"../../base/containers/flat_tree.h\00", align 1
@.str.47 = private unnamed_addr constant [24 x i8] c"position != body_.end()\00", align 1
@.str.48 = private unnamed_addr constant [10 x i8] c"dns_error\00", align 1
@.str.49 = private unnamed_addr constant [16 x i8] c"resolve_results\00", align 1
@_ZN3net8features28kDnsHttpssvcExtraTimePercentE = external global %"struct.base::FeatureParam.650", align 8
@.str.51 = private unnamed_addr constant [33 x i8] c"MaybeStartExperimentalQueryTimer\00", align 1
@.str.52 = private unnamed_addr constant [38 x i8] c"Address list empty after RFC3484 sort\00", align 1
@.str.53 = private unnamed_addr constant [14 x i8] c"StartMdnsTask\00", align 1
@_ZZN3net12_GLOBAL__N_125ResemblesMulticastDNSNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE7kSuffix = internal constant [8 x i8] c".local.\00", align 1
@.str.54 = private unnamed_addr constant [26 x i8] c"HaveOnlyLoopbackAddresses\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"host\00", align 1
@.str.56 = private unnamed_addr constant [15 x i8] c"dns_query_type\00", align 1
@.str.57 = private unnamed_addr constant [22 x i8] c"allow_cached_response\00", align 1
@.str.58 = private unnamed_addr constant [15 x i8] c"is_speculative\00", align 1
@.str.59 = private unnamed_addr constant [22 x i8] c"network_isolation_key\00", align 1
@_ZZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEvE14nullopt_result = linkonce_odr hidden global %"class.base::NoDestructor" zeroinitializer, comdat, align 8
@_ZGVZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEvE14nullopt_result = linkonce_odr hidden global i64 0, comdat, align 8
@_ZZNK3net19HostResolverManager11RequestImpl14GetTextResultsEvE14nullopt_result = linkonce_odr hidden global %"class.base::NoDestructor.744" zeroinitializer, comdat, align 8
@_ZGVZNK3net19HostResolverManager11RequestImpl14GetTextResultsEvE14nullopt_result = linkonce_odr hidden global i64 0, comdat, align 8
@_ZZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEvE14nullopt_result = linkonce_odr hidden global %"class.base::NoDestructor.745" zeroinitializer, comdat, align 8
@_ZGVZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEvE14nullopt_result = linkonce_odr hidden global i64 0, comdat, align 8
@_ZZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEvE14nullopt_result = linkonce_odr hidden global %"class.base::NoDestructor.746" zeroinitializer, comdat, align 8
@_ZGVZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEvE14nullopt_result = linkonce_odr hidden global i64 0, comdat, align 8
@.str.60 = private unnamed_addr constant [36 x i8] c"../../base/observer_list_internal.h\00", align 1
@.str.61 = private unnamed_addr constant [28 x i8] c"!weak_ptr_.WasInvalidated()\00", align 1
@_ZN3net8features36kSplitHostCacheByNetworkIsolationKeyE = external global %"struct.base::Feature", align 8
@_ZTVN3net19HostResolverManager29CancellableResolveHostRequestE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [13 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::HostResolverManager::CancellableResolveHostRequest"*)* @_ZN3net19HostResolverManager29CancellableResolveHostRequestD2Ev to i8*), i8* bitcast (void (%"class.net::HostResolverManager::CancellableResolveHostRequest"*)* @_ZN3net19HostResolverManager29CancellableResolveHostRequestD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [13 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.net::HostResolverManager::CancellableResolveHostRequest"*)* @_ZThn8_N3net19HostResolverManager29CancellableResolveHostRequestD1Ev to i8*), i8* bitcast (void (%"class.net::HostResolverManager::CancellableResolveHostRequest"*)* @_ZThn8_N3net19HostResolverManager29CancellableResolveHostRequestD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.absl::optional.250"* (%"class.net::HostResolver::ResolveHostRequest"*)* @_ZNK3net12HostResolver18ResolveHostRequest32GetExperimentalResultsForTestingEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.net::HostResolver::ResolveHostRequest"*, i32)* @_ZN3net12HostResolver18ResolveHostRequest21ChangeRequestPriorityENS_15RequestPriorityE to i8*)] }, comdat, align 8
@_ZTVN3net19HostResolverManager16ProbeRequestImplE = linkonce_odr hidden unnamed_addr constant { [8 x i8*], [5 x i8*], [6 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::HostResolverManager::ProbeRequestImpl"*)* @_ZN3net19HostResolverManager16ProbeRequestImplD2Ev to i8*), i8* bitcast (void (%"class.net::HostResolverManager::ProbeRequestImpl"*)* @_ZN3net19HostResolverManager16ProbeRequestImplD0Ev to i8*), i8* bitcast (void (%"class.net::HostResolverManager::ProbeRequestImpl"*)* @_ZN3net19HostResolverManager16ProbeRequestImpl6CancelEv to i8*), i8* bitcast (i32 (%"class.net::HostResolverManager::ProbeRequestImpl"*)* @_ZN3net19HostResolverManager16ProbeRequestImpl5StartEv to i8*), i8* bitcast (void (%"class.net::HostResolverManager::ProbeRequestImpl"*)* @_ZN3net19HostResolverManager16ProbeRequestImpl16OnSessionChangedEv to i8*), i8* bitcast (void (%"class.net::HostResolverManager::ProbeRequestImpl"*, i1)* @_ZN3net19HostResolverManager16ProbeRequestImpl22OnDohServerUnavailableEb to i8*)], [5 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.net::HostResolverManager::ProbeRequestImpl"*)* @_ZThn8_N3net19HostResolverManager16ProbeRequestImplD1Ev to i8*), i8* bitcast (void (%"class.net::HostResolverManager::ProbeRequestImpl"*)* @_ZThn8_N3net19HostResolverManager16ProbeRequestImplD0Ev to i8*), i8* bitcast (i32 (%"class.net::HostResolverManager::ProbeRequestImpl"*)* @_ZThn8_N3net19HostResolverManager16ProbeRequestImpl5StartEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.net::HostResolverManager::ProbeRequestImpl"*)* @_ZThn16_N3net19HostResolverManager16ProbeRequestImplD1Ev to i8*), i8* bitcast (void (%"class.net::HostResolverManager::ProbeRequestImpl"*)* @_ZThn16_N3net19HostResolverManager16ProbeRequestImplD0Ev to i8*), i8* bitcast (void (%"class.net::HostResolverManager::ProbeRequestImpl"*)* @_ZThn16_N3net19HostResolverManager16ProbeRequestImpl16OnSessionChangedEv to i8*), i8* bitcast (void (%"class.net::HostResolverManager::ProbeRequestImpl"*, i1)* @_ZThn16_N3net19HostResolverManager16ProbeRequestImpl22OnDohServerUnavailableEb to i8*)] }, comdat, align 8
@_ZTVN3net19HostResolverManager23CancellableProbeRequestE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::HostResolverManager::CancellableProbeRequest"*)* @_ZN3net19HostResolverManager23CancellableProbeRequestD2Ev to i8*), i8* bitcast (void (%"class.net::HostResolverManager::CancellableProbeRequest"*)* @_ZN3net19HostResolverManager23CancellableProbeRequestD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [5 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.net::HostResolverManager::CancellableProbeRequest"*)* @_ZThn8_N3net19HostResolverManager23CancellableProbeRequestD1Ev to i8*), i8* bitcast (void (%"class.net::HostResolverManager::CancellableProbeRequest"*)* @_ZThn8_N3net19HostResolverManager23CancellableProbeRequestD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.62 = private unnamed_addr constant [23 x i8] c"OnDohServerUnavailable\00", align 1
@_ZTVN3net19HostResolverManager3JobE = linkonce_odr hidden unnamed_addr constant { [9 x i8*], [8 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::HostResolverManager::Job"*)* @_ZN3net19HostResolverManager3JobD2Ev to i8*), i8* bitcast (void (%"class.net::HostResolverManager::Job"*)* @_ZN3net19HostResolverManager3JobD0Ev to i8*), i8* bitcast (void (%"class.net::HostResolverManager::Job"*)* @_ZN3net19HostResolverManager3Job5StartEv to i8*), i8* bitcast (void (%"class.net::HostResolverManager::Job"*, i64, %"class.net::HostCache::Entry"*, i1)* @_ZN3net19HostResolverManager3Job17OnDnsTaskCompleteEN4base9TimeTicksERKNS_9HostCache5EntryEb to i8*), i8* bitcast (void (%"class.net::HostResolverManager::Job"*)* @_ZN3net19HostResolverManager3Job33OnIntermediateTransactionCompleteEv to i8*), i8* bitcast (void (%"class.net::HostResolverManager::Job"*, i64)* @_ZN3net19HostResolverManager3Job24AddTransactionTimeQueuedEN4base9TimeDeltaE to i8*), i8* bitcast (i32 (%"class.net::HostResolverManager::Job"*)* @_ZNK3net19HostResolverManager3Job8priorityEv to i8*)], [8 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.net::HostResolverManager::Job"*, i64, %"class.net::HostCache::Entry"*, i1)* @_ZThn8_N3net19HostResolverManager3Job17OnDnsTaskCompleteEN4base9TimeTicksERKNS_9HostCache5EntryEb to i8*), i8* bitcast (void (%"class.net::HostResolverManager::Job"*)* @_ZThn8_N3net19HostResolverManager3Job33OnIntermediateTransactionCompleteEv to i8*), i8* bitcast (i32 (%"class.net::HostResolverManager::Job"*)* @_ZThn8_NK3net19HostResolverManager3Job8priorityEv to i8*), i8* bitcast (void (%"class.net::HostResolverManager::Job"*, i64)* @_ZThn8_N3net19HostResolverManager3Job24AddTransactionTimeQueuedEN4base9TimeDeltaE to i8*), i8* bitcast (void (%"class.net::HostResolverManager::Job"*)* @_ZThn8_N3net19HostResolverManager3JobD1Ev to i8*), i8* bitcast (void (%"class.net::HostResolverManager::Job"*)* @_ZThn8_N3net19HostResolverManager3JobD0Ev to i8*)] }, comdat, align 8
@_ZZN3net19HostResolverManager3Job17OnDnsTaskCompleteEN4base9TimeTicksERKNS_9HostCache5EntryEbE24atomic_histogram_pointer = linkonce_odr hidden local_unnamed_addr global %"struct.std::__1::atomic.531" zeroinitializer, comdat, align 8
@.str.63 = private unnamed_addr constant [28 x i8] c"Net.DNS.DnsTask.SuccessTime\00", align 1
@_ZZN3net19HostResolverManager3Job17OnDnsTaskCompleteEN4base9TimeTicksERKNS_9HostCache5EntryEbE24atomic_histogram_pointer_0 = linkonce_odr hidden local_unnamed_addr global %"struct.std::__1::atomic.531" zeroinitializer, comdat, align 8
@.str.64 = private unnamed_addr constant [29 x i8] c"Net.DNS.JobQueueTime.Success\00", align 1
@_ZZN3net19HostResolverManager3Job16OnDnsTaskFailureERKN4base7WeakPtrINS0_7DnsTaskEEENS2_9TimeDeltaERKNS_9HostCache5EntryEbE24atomic_histogram_pointer = linkonce_odr hidden local_unnamed_addr global %"struct.std::__1::atomic.531" zeroinitializer, comdat, align 8
@.str.65 = private unnamed_addr constant [48 x i8] c"Net.DNS.SecureDnsTask.DnsModeSecure.FailureTime\00", align 1
@_ZZN3net19HostResolverManager3Job16OnDnsTaskFailureERKN4base7WeakPtrINS0_7DnsTaskEEENS2_9TimeDeltaERKNS_9HostCache5EntryEbE24atomic_histogram_pointer_0 = linkonce_odr hidden local_unnamed_addr global %"struct.std::__1::atomic.531" zeroinitializer, comdat, align 8
@.str.66 = private unnamed_addr constant [51 x i8] c"Net.DNS.SecureDnsTask.DnsModeAutomatic.FailureTime\00", align 1
@_ZZN3net19HostResolverManager3Job16OnDnsTaskFailureERKN4base7WeakPtrINS0_7DnsTaskEEENS2_9TimeDeltaERKNS_9HostCache5EntryEbE24atomic_histogram_pointer_1 = linkonce_odr hidden local_unnamed_addr global %"struct.std::__1::atomic.531" zeroinitializer, comdat, align 8
@.str.67 = private unnamed_addr constant [36 x i8] c"Net.DNS.InsecureDnsTask.FailureTime\00", align 1
@_ZZN3net19HostResolverManager3Job16OnDnsTaskFailureERKN4base7WeakPtrINS0_7DnsTaskEEENS2_9TimeDeltaERKNS_9HostCache5EntryEbE24atomic_histogram_pointer_2 = linkonce_odr hidden local_unnamed_addr global %"struct.std::__1::atomic.531" zeroinitializer, comdat, align 8
@.str.68 = private unnamed_addr constant [29 x i8] c"Net.DNS.JobQueueTime.Failure\00", align 1
@.str.69 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.70 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.71 = private unnamed_addr constant [15 x i8] c"ipv6_available\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c"cached\00", align 1
@_ZTVN3net21MDnsSocketFactoryImplE = external unnamed_addr constant { [5 x i8*] }, align 8

@_ZN3net19HostResolverManagerC1ERKNS_12HostResolver14ManagerOptionsEPNS_29SystemDnsConfigChangeNotifierEPNS_6NetLogE = hidden unnamed_addr alias void (%"class.net::HostResolverManager"*, %"struct.net::HostResolver::ManagerOptions"*, %"class.net::SystemDnsConfigChangeNotifier"*, %"class.net::NetLog"*), void (%"class.net::HostResolverManager"*, %"struct.net::HostResolver::ManagerOptions"*, %"class.net::SystemDnsConfigChangeNotifier"*, %"class.net::NetLog"*)* @_ZN3net19HostResolverManagerC2ERKNS_12HostResolver14ManagerOptionsEPNS_29SystemDnsConfigChangeNotifierEPNS_6NetLogE
@_ZN3net19HostResolverManagerD1Ev = hidden unnamed_addr alias void (%"class.net::HostResolverManager"*), void (%"class.net::HostResolverManager"*)* @_ZN3net19HostResolverManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net20ResolveLocalHostnameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS_11AddressListE(i8*, i64, %"class.net::AddressList"*) local_unnamed_addr #0 {
  %4 = alloca %"class.net::IPEndPoint", align 2
  %5 = alloca %"class.net::IPAddress", align 1
  %6 = alloca %"class.net::IPEndPoint", align 2
  %7 = alloca %"class.net::IPAddress", align 1
  %8 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %8, align 8
  %10 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %2, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %10, align 8
  %12 = icmp eq %"class.net::IPEndPoint"* %11, %9
  br i1 %12, label %17, label %13

13:                                               ; preds = %3, %13
  %14 = phi %"class.net::IPEndPoint"* [ %15, %13 ], [ %11, %3 ]
  %15 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %14, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %15) #18
  %16 = icmp eq %"class.net::IPEndPoint"* %15, %9
  br i1 %16, label %17, label %13

17:                                               ; preds = %13, %3
  store %"class.net::IPEndPoint"* %9, %"class.net::IPEndPoint"** %10, align 8
  %18 = tail call zeroext i1 @_ZN3net15IsLocalHostnameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %0, i64 %1) #18
  br i1 %18, label %19, label %45

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %20) #18
  %21 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %5, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %21) #18
  call void @_ZN3net9IPAddress13IPv6LocalhostEv(%"class.net::IPAddress"* nonnull sret %5) #18
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %4, %"class.net::IPAddress"* nonnull dereferenceable(17) %5, i16 zeroext 0) #18
  %22 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %10, align 8
  %23 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %24 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %23, align 8
  %25 = icmp eq %"class.net::IPEndPoint"* %22, %24
  br i1 %25, label %30, label %26

26:                                               ; preds = %19
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %22, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %4) #18
  %27 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %22, i64 1
  %28 = ptrtoint %"class.net::IPEndPoint"* %27 to i64
  %29 = bitcast %"class.net::IPEndPoint"** %10 to i64*
  store i64 %28, i64* %29, align 8
  br label %32

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %2, i64 0, i32 0
  call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %31, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %4) #18
  br label %32

32:                                               ; preds = %26, %30
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %4) #18
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %21) #18
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %20) #18
  %33 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %33) #18
  %34 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %7, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %34) #18
  call void @_ZN3net9IPAddress13IPv4LocalhostEv(%"class.net::IPAddress"* nonnull sret %7) #18
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %6, %"class.net::IPAddress"* nonnull dereferenceable(17) %7, i16 zeroext 0) #18
  %35 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %10, align 8
  %36 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %23, align 8
  %37 = icmp eq %"class.net::IPEndPoint"* %35, %36
  br i1 %37, label %42, label %38

38:                                               ; preds = %32
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %35, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %6) #18
  %39 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %35, i64 1
  %40 = ptrtoint %"class.net::IPEndPoint"* %39 to i64
  %41 = bitcast %"class.net::IPEndPoint"** %10 to i64*
  store i64 %40, i64* %41, align 8
  br label %44

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %2, i64 0, i32 0
  call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %43, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %6) #18
  br label %44

44:                                               ; preds = %38, %42
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %6) #18
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %34) #18
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %33) #18
  br label %45

45:                                               ; preds = %17, %44
  %46 = phi i1 [ true, %44 ], [ false, %17 ]
  ret i1 %46
}

declare zeroext i1 @_ZN3net15IsLocalHostnameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3net9IPAddress13IPv6LocalhostEv(%"class.net::IPAddress"* sret) local_unnamed_addr #1

declare void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"*, %"class.net::IPAddress"* dereferenceable(17), i16 zeroext) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3net9IPAddress13IPv4LocalhostEv(%"class.net::IPAddress"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManagerC2ERKNS_12HostResolver14ManagerOptionsEPNS_29SystemDnsConfigChangeNotifierEPNS_6NetLogE(%"class.net::HostResolverManager"*, %"struct.net::HostResolver::ManagerOptions"* dereferenceable(240), %"class.net::SystemDnsConfigChangeNotifier"*, %"class.net::NetLog"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::vector.506", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"struct.net::PrioritizedDispatcher::Limits", align 8
  %9 = alloca %"class.base::TaskTraits", align 1
  %10 = alloca %"struct.net::DnsConfigOverrides", align 8
  %11 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 0
  tail call void @_ZN3net21NetworkChangeNotifier17IPAddressObserverC2Ev(%"class.net::NetworkChangeNotifier::IPAddressObserver"* %11) #18
  %12 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 1
  tail call void @_ZN3net21NetworkChangeNotifier22ConnectionTypeObserverC2Ev(%"class.net::NetworkChangeNotifier::ConnectionTypeObserver"* %12) #18
  %13 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Observer", %"class.net::SystemDnsConfigChangeNotifier::Observer"* %13, i64 0, i32 0
  %15 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [5 x i8*], [3 x i8*] }, { [10 x i8*], [5 x i8*], [3 x i8*] }* @_ZTVN3net19HostResolverManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.net::NetworkChangeNotifier::ConnectionTypeObserver", %"class.net::NetworkChangeNotifier::ConnectionTypeObserver"* %12, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [5 x i8*], [3 x i8*] }, { [10 x i8*], [5 x i8*], [3 x i8*] }* @_ZTVN3net19HostResolverManagerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [5 x i8*], [3 x i8*] }, { [10 x i8*], [5 x i8*], [3 x i8*] }* @_ZTVN3net19HostResolverManagerE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %17 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %20 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_node_base"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #18
  %22 = bitcast %"class.std::__1::unique_ptr"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  store %"class.std::__1::__tree_end_node"* %19, %"class.std::__1::__tree_end_node"** %20, align 8
  %23 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 6
  %24 = bitcast %"class.std::__1::unique_ptr.32"* %23 to i64*
  %25 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 7
  %26 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 8
  %27 = getelementptr inbounds %"struct.net::HostResolver::ManagerOptions", %"struct.net::HostResolver::ManagerOptions"* %1, i64 0, i32 1
  %28 = bitcast %"class.std::__1::unique_ptr.32"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false)
  %29 = load i64, i64* %27, align 8
  tail call void @_ZN3net14ProcTaskParamsC1EPNS_16HostResolverProcEm(%"struct.net::ProcTaskParams"* %26, %"class.net::HostResolverProc"* null, i64 %29) #18
  %30 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 9
  store %"class.net::NetLog"* %3, %"class.net::NetLog"** %30, align 8
  %31 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 10
  %32 = bitcast %"class.std::__1::unique_ptr.71"* %31 to i64*
  store i64 0, i64* %32, align 8
  %33 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 11
  store %"class.net::SystemDnsConfigChangeNotifier"* %2, %"class.net::SystemDnsConfigChangeNotifier"** %33, align 8
  %34 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 12
  %35 = getelementptr inbounds %"struct.net::HostResolver::ManagerOptions", %"struct.net::HostResolver::ManagerOptions"* %1, i64 0, i32 6
  %36 = load i8, i8* %35, align 8, !range !2
  store i8 %36, i8* %34, align 8
  %37 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 13, i32 0, i32 0
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 14
  store i8 1, i8* %38, align 8
  %39 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 15
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 16
  store i8 1, i8* %40, align 8
  %41 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 17
  %42 = getelementptr inbounds %class.scoped_refptr.83, %class.scoped_refptr.83* %41, i64 0, i32 0
  store %"class.base::TaskRunner"* null, %"class.base::TaskRunner"** %42, align 8
  %43 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 18
  %44 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #18
  %45 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %44, i64 0, i32 0
  store %"class.base::TickClock"* %45, %"class.base::TickClock"** %43, align 8
  %46 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 19
  %47 = bitcast %"class.base::ObserverList"* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #18
  %48 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 19, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %48, %"class.base::internal::LinkNodeBase"* %48, %"class.base::internal::LinkNodeBase"* %48) #18
  %49 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 19, i32 2
  store i64 0, i64* %49, align 8
  %50 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 19, i32 3
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 20
  store i8 0, i8* %51, align 8
  %52 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 21, i32 0
  %53 = ptrtoint %"class.net::HostResolverManager"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %52, i64 %53) #18
  %54 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 22, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %54, i64 %53) #18
  %55 = bitcast %"struct.net::PrioritizedDispatcher::Limits"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %55) #18
  %56 = getelementptr inbounds %"struct.net::PrioritizedDispatcher::Limits", %"struct.net::PrioritizedDispatcher::Limits"* %8, i64 0, i32 0
  %57 = getelementptr inbounds %"struct.net::PrioritizedDispatcher::Limits", %"struct.net::PrioritizedDispatcher::Limits"* %8, i64 0, i32 1
  %58 = getelementptr inbounds %"struct.net::HostResolver::ManagerOptions", %"struct.net::HostResolver::ManagerOptions"* %1, i64 0, i32 0
  %59 = bitcast %"struct.net::PrioritizedDispatcher::Limits"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 32, i1 false)
  %60 = load i64, i64* %58, align 8, !noalias !3
  call void @_ZN3net21PrioritizedDispatcher6LimitsC1Ejm(%"struct.net::PrioritizedDispatcher::Limits"* nonnull %8, i32 6, i64 %60) #18
  %61 = load i64, i64* %56, align 8, !alias.scope !3
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %290

63:                                               ; preds = %4
  store i64 64, i64* %56, align 8, !alias.scope !3
  %64 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #18, !noalias !3
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 24, i1 false) #18, !noalias !3
  call void @_ZN4base14FieldTrialList12FindFullNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 20) #18
  %67 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1, !noalias !3
  %70 = icmp slt i8 %69, 0
  %71 = load i64, i64* %66, align 8, !noalias !3
  %72 = zext i8 %69 to i64
  %73 = select i1 %70, i64 %71, i64 %72
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %255, label %75

75:                                               ; preds = %63
  %76 = bitcast %"class.std::__1::vector.506"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #18, !noalias !3
  %77 = getelementptr inbounds %"class.std::__1::vector.506", %"class.std::__1::vector.506"* %6, i64 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::vector.506", %"class.std::__1::vector.506"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 24, i1 false) #18, !noalias !3
  %79 = load i8*, i8** %65, align 8, !noalias !3
  %80 = select i1 %70, i8* %79, i8* %64
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.506"* nonnull sret %6, i8* %80, i64 %73, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i64 1, i32 1, i32 0) #18
  %81 = bitcast %"class.base::BasicStringPiece"** %78 to i64*
  %82 = load i64, i64* %81, align 8, !noalias !3
  %83 = bitcast %"class.std::__1::vector.506"* %6 to i64*
  %84 = load i64, i64* %83, align 8, !noalias !3
  %85 = sub i64 %82, %84
  %86 = ashr exact i64 %85, 4
  %87 = icmp eq i64 %85, 112
  br i1 %87, label %88, label %258

88:                                               ; preds = %75
  %89 = call i8* @_Znwm(i64 56) #19
  %90 = bitcast i8* %89 to i64*
  %91 = ptrtoint i8* %89 to i64
  %92 = getelementptr inbounds i64, i64* %90, i64 %86
  %93 = add nsw i64 %86, -1
  %94 = getelementptr i64, i64* %90, i64 %93
  %95 = ptrtoint i64* %94 to i64
  %96 = sub i64 8, %91
  %97 = add i64 %96, %95
  %98 = and i64 %97, -8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 0, i64 %98, i1 false) #18, !noalias !3
  %99 = icmp eq i64 %82, %84
  br i1 %99, label %117, label %106

100:                                              ; preds = %106
  %101 = load i64, i64* %81, align 8, !noalias !3
  %102 = load i64, i64* %83, align 8, !noalias !3
  %103 = sub i64 %101, %102
  %104 = ashr exact i64 %103, 4
  %105 = icmp ult i64 %116, %104
  br i1 %105, label %106, label %117

106:                                              ; preds = %88, %100
  %107 = phi i64 [ %102, %100 ], [ %84, %88 ]
  %108 = phi i64 [ %116, %100 ], [ 0, %88 ]
  %109 = inttoptr i64 %107 to %"class.base::BasicStringPiece"*
  %110 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %109, i64 %108, i32 0
  %111 = load i8*, i8** %110, align 8
  %112 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %109, i64 %108, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds i64, i64* %90, i64 %108
  %115 = call zeroext i1 @_ZN4base13StringToSizeTENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPm(i8* %111, i64 %113, i64* %114) #18
  %116 = add nuw i64 %108, 1
  br i1 %115, label %100, label %244

117:                                              ; preds = %100, %88
  %118 = getelementptr inbounds i64, i64* %92, i64 -1
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i64* %118 to i8*
  %121 = icmp eq i8* %89, %120
  br i1 %121, label %227, label %122

122:                                              ; preds = %117
  %123 = ptrtoint i64* %118 to i64
  %124 = ptrtoint i8* %89 to i64
  %125 = sub i64 %123, %124
  %126 = ashr exact i64 %125, 3
  %127 = icmp ugt i64 %126, 1
  %128 = select i1 %127, i64 %126, i64 1
  %129 = icmp ult i64 %128, 4
  br i1 %129, label %130, label %133

130:                                              ; preds = %208, %122
  %131 = phi i64 [ 0, %122 ], [ %134, %208 ]
  %132 = phi i64 [ 0, %122 ], [ %214, %208 ]
  br label %219

133:                                              ; preds = %122
  %134 = and i64 %128, -4
  %135 = add nsw i64 %134, -4
  %136 = lshr exact i64 %135, 2
  %137 = add nuw nsw i64 %136, 1
  %138 = and i64 %137, 3
  %139 = icmp ult i64 %135, 12
  br i1 %139, label %185, label %140

140:                                              ; preds = %133
  %141 = sub nsw i64 %137, %138
  br label %142

142:                                              ; preds = %142, %140
  %143 = phi i64 [ 0, %140 ], [ %182, %142 ]
  %144 = phi <2 x i64> [ zeroinitializer, %140 ], [ %180, %142 ]
  %145 = phi <2 x i64> [ zeroinitializer, %140 ], [ %181, %142 ]
  %146 = phi i64 [ %141, %140 ], [ %183, %142 ]
  %147 = getelementptr inbounds i64, i64* %90, i64 %143
  %148 = bitcast i64* %147 to <2 x i64>*
  %149 = load <2 x i64>, <2 x i64>* %148, align 8
  %150 = getelementptr inbounds i64, i64* %147, i64 2
  %151 = bitcast i64* %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8
  %153 = add <2 x i64> %149, %144
  %154 = add <2 x i64> %152, %145
  %155 = or i64 %143, 4
  %156 = getelementptr inbounds i64, i64* %90, i64 %155
  %157 = bitcast i64* %156 to <2 x i64>*
  %158 = load <2 x i64>, <2 x i64>* %157, align 8
  %159 = getelementptr inbounds i64, i64* %156, i64 2
  %160 = bitcast i64* %159 to <2 x i64>*
  %161 = load <2 x i64>, <2 x i64>* %160, align 8
  %162 = add <2 x i64> %158, %153
  %163 = add <2 x i64> %161, %154
  %164 = or i64 %143, 8
  %165 = getelementptr inbounds i64, i64* %90, i64 %164
  %166 = bitcast i64* %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8
  %168 = getelementptr inbounds i64, i64* %165, i64 2
  %169 = bitcast i64* %168 to <2 x i64>*
  %170 = load <2 x i64>, <2 x i64>* %169, align 8
  %171 = add <2 x i64> %167, %162
  %172 = add <2 x i64> %170, %163
  %173 = or i64 %143, 12
  %174 = getelementptr inbounds i64, i64* %90, i64 %173
  %175 = bitcast i64* %174 to <2 x i64>*
  %176 = load <2 x i64>, <2 x i64>* %175, align 8
  %177 = getelementptr inbounds i64, i64* %174, i64 2
  %178 = bitcast i64* %177 to <2 x i64>*
  %179 = load <2 x i64>, <2 x i64>* %178, align 8
  %180 = add <2 x i64> %176, %171
  %181 = add <2 x i64> %179, %172
  %182 = add i64 %143, 16
  %183 = add i64 %146, -4
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %142, !llvm.loop !6

185:                                              ; preds = %142, %133
  %186 = phi <2 x i64> [ undef, %133 ], [ %180, %142 ]
  %187 = phi <2 x i64> [ undef, %133 ], [ %181, %142 ]
  %188 = phi i64 [ 0, %133 ], [ %182, %142 ]
  %189 = phi <2 x i64> [ zeroinitializer, %133 ], [ %180, %142 ]
  %190 = phi <2 x i64> [ zeroinitializer, %133 ], [ %181, %142 ]
  %191 = icmp eq i64 %138, 0
  br i1 %191, label %208, label %192

192:                                              ; preds = %185, %192
  %193 = phi i64 [ %205, %192 ], [ %188, %185 ]
  %194 = phi <2 x i64> [ %203, %192 ], [ %189, %185 ]
  %195 = phi <2 x i64> [ %204, %192 ], [ %190, %185 ]
  %196 = phi i64 [ %206, %192 ], [ %138, %185 ]
  %197 = getelementptr inbounds i64, i64* %90, i64 %193
  %198 = bitcast i64* %197 to <2 x i64>*
  %199 = load <2 x i64>, <2 x i64>* %198, align 8
  %200 = getelementptr inbounds i64, i64* %197, i64 2
  %201 = bitcast i64* %200 to <2 x i64>*
  %202 = load <2 x i64>, <2 x i64>* %201, align 8
  %203 = add <2 x i64> %199, %194
  %204 = add <2 x i64> %202, %195
  %205 = add i64 %193, 4
  %206 = add i64 %196, -1
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %208, label %192, !llvm.loop !8

208:                                              ; preds = %192, %185
  %209 = phi <2 x i64> [ %186, %185 ], [ %203, %192 ]
  %210 = phi <2 x i64> [ %187, %185 ], [ %204, %192 ]
  %211 = add <2 x i64> %210, %209
  %212 = shufflevector <2 x i64> %211, <2 x i64> undef, <2 x i32> <i32 1, i32 undef>
  %213 = add <2 x i64> %211, %212
  %214 = extractelement <2 x i64> %213, i32 0
  %215 = icmp eq i64 %128, %134
  br i1 %215, label %216, label %130

216:                                              ; preds = %219, %208
  %217 = phi i64 [ %214, %208 ], [ %224, %219 ]
  %218 = icmp ugt i64 %217, %119
  br i1 %218, label %267, label %227

219:                                              ; preds = %130, %219
  %220 = phi i64 [ %225, %219 ], [ %131, %130 ]
  %221 = phi i64 [ %224, %219 ], [ %132, %130 ]
  %222 = getelementptr inbounds i64, i64* %90, i64 %220
  %223 = load i64, i64* %222, align 8
  %224 = add i64 %223, %221
  %225 = add nuw i64 %220, 1
  %226 = icmp ult i64 %225, %126
  br i1 %226, label %219, label %216, !llvm.loop !10

227:                                              ; preds = %216, %117
  %228 = phi i64 [ %217, %216 ], [ 0, %117 ]
  %229 = icmp eq i64 %228, %119
  br i1 %229, label %230, label %233

230:                                              ; preds = %227
  %231 = load i64, i64* %90, align 8
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %278, label %233

233:                                              ; preds = %230, %227
  store i64 %119, i64* %56, align 8, !alias.scope !3
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.46"* %57, i64* nonnull %90, i64* %118) #18
  call void @_ZdlPv(i8* nonnull %89) #19
  %234 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %77, align 8, !noalias !3
  %235 = icmp eq %"class.base::BasicStringPiece"* %234, null
  br i1 %235, label %239, label %236

236:                                              ; preds = %233
  %237 = ptrtoint %"class.base::BasicStringPiece"* %234 to i64
  store i64 %237, i64* %81, align 8, !noalias !3
  %238 = bitcast %"class.base::BasicStringPiece"* %234 to i8*
  call void @_ZdlPv(i8* %238) #19
  br label %239

239:                                              ; preds = %236, %233
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #18, !noalias !3
  %240 = load i8, i8* %68, align 1, !noalias !3
  %241 = icmp slt i8 %240, 0
  br i1 %241, label %242, label %289

242:                                              ; preds = %239
  %243 = load i8*, i8** %65, align 8, !noalias !3
  call void @_ZdlPv(i8* %243) #19
  br label %289

244:                                              ; preds = %106
  call void @_ZdlPv(i8* nonnull %89) #19
  %245 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %77, align 8, !noalias !3
  %246 = icmp eq %"class.base::BasicStringPiece"* %245, null
  br i1 %246, label %250, label %247

247:                                              ; preds = %244
  %248 = ptrtoint %"class.base::BasicStringPiece"* %245 to i64
  store i64 %248, i64* %81, align 8, !noalias !3
  %249 = bitcast %"class.base::BasicStringPiece"* %245 to i8*
  call void @_ZdlPv(i8* %249) #19
  br label %250

250:                                              ; preds = %247, %244
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #18, !noalias !3
  %251 = load i8, i8* %68, align 1, !noalias !3
  %252 = icmp slt i8 %251, 0
  br i1 %252, label %253, label %289

253:                                              ; preds = %250
  %254 = load i8*, i8** %65, align 8, !noalias !3
  call void @_ZdlPv(i8* %254) #19
  br label %289

255:                                              ; preds = %63
  br i1 %70, label %256, label %289

256:                                              ; preds = %255
  %257 = load i8*, i8** %65, align 8, !noalias !3
  call void @_ZdlPv(i8* %257) #19
  br label %289

258:                                              ; preds = %75
  %259 = icmp eq i64 %84, 0
  br i1 %259, label %262, label %260

260:                                              ; preds = %258
  store i64 %84, i64* %81, align 8, !noalias !3
  %261 = inttoptr i64 %84 to i8*
  call void @_ZdlPv(i8* %261) #19
  br label %262

262:                                              ; preds = %260, %258
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #18, !noalias !3
  %263 = load i8, i8* %68, align 1, !noalias !3
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %289

265:                                              ; preds = %262
  %266 = load i8*, i8** %65, align 8, !noalias !3
  call void @_ZdlPv(i8* %266) #19
  br label %289

267:                                              ; preds = %216
  call void @_ZdlPv(i8* nonnull %89) #19
  %268 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %77, align 8, !noalias !3
  %269 = icmp eq %"class.base::BasicStringPiece"* %268, null
  br i1 %269, label %273, label %270

270:                                              ; preds = %267
  %271 = ptrtoint %"class.base::BasicStringPiece"* %268 to i64
  store i64 %271, i64* %81, align 8, !noalias !3
  %272 = bitcast %"class.base::BasicStringPiece"* %268 to i8*
  call void @_ZdlPv(i8* %272) #19
  br label %273

273:                                              ; preds = %270, %267
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #18, !noalias !3
  %274 = load i8, i8* %68, align 1, !noalias !3
  %275 = icmp slt i8 %274, 0
  br i1 %275, label %276, label %289

276:                                              ; preds = %273
  %277 = load i8*, i8** %65, align 8, !noalias !3
  call void @_ZdlPv(i8* %277) #19
  br label %289

278:                                              ; preds = %230
  call void @_ZdlPv(i8* nonnull %89) #19
  %279 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %77, align 8, !noalias !3
  %280 = icmp eq %"class.base::BasicStringPiece"* %279, null
  br i1 %280, label %284, label %281

281:                                              ; preds = %278
  %282 = ptrtoint %"class.base::BasicStringPiece"* %279 to i64
  store i64 %282, i64* %81, align 8, !noalias !3
  %283 = bitcast %"class.base::BasicStringPiece"* %279 to i8*
  call void @_ZdlPv(i8* %283) #19
  br label %284

284:                                              ; preds = %281, %278
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #18, !noalias !3
  %285 = load i8, i8* %68, align 1, !noalias !3
  %286 = icmp slt i8 %285, 0
  br i1 %286, label %287, label %289

287:                                              ; preds = %284
  %288 = load i8*, i8** %65, align 8, !noalias !3
  call void @_ZdlPv(i8* %288) #19
  br label %289

289:                                              ; preds = %284, %287, %273, %276, %262, %265, %255, %256, %250, %253, %239, %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #18, !noalias !3
  br label %290

290:                                              ; preds = %289, %4
  %291 = call i8* @_Znwm(i64 64) #19
  %292 = bitcast i8* %291 to %"class.net::PrioritizedDispatcher"*
  call void @_ZN3net21PrioritizedDispatcherC1ERKNS0_6LimitsE(%"class.net::PrioritizedDispatcher"* nonnull %292, %"struct.net::PrioritizedDispatcher::Limits"* nonnull dereferenceable(32) %8) #18
  %293 = ptrtoint i8* %291 to i64
  %294 = getelementptr inbounds %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.32"* %23, i64 0, i32 0, i32 0, i32 0
  %295 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %294, align 8
  store i64 %293, i64* %24, align 8
  %296 = icmp eq %"class.net::PrioritizedDispatcher"* %295, null
  br i1 %296, label %299, label %297

297:                                              ; preds = %290
  call void @_ZN3net21PrioritizedDispatcherD1Ev(%"class.net::PrioritizedDispatcher"* nonnull %295) #18
  %298 = bitcast %"class.net::PrioritizedDispatcher"* %295 to i8*
  call void @_ZdlPv(i8* %298) #19
  br label %299

299:                                              ; preds = %297, %290
  %300 = load i64, i64* %56, align 8
  %301 = mul i64 %300, 100
  store i64 %301, i64* %25, align 8
  %302 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %9, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %302) #18
  %303 = call zeroext i8 @_ZNK4base12FeatureParamINS_12TaskPriorityELb1EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN3net12_GLOBAL__N_113priority_modeE)
  store i8 0, i8* %302, align 1, !alias.scope !12
  %304 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %9, i64 0, i32 0, i32 1, i32 0, i64 0
  %305 = bitcast i8* %304 to i64*
  store i64 0, i64* %305, align 1, !alias.scope !12
  %306 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %9, i64 0, i32 1
  store i8 %303, i8* %306, align 1
  %307 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %9, i64 0, i32 2
  store i8 -128, i8* %307, align 1
  %308 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %9, i64 0, i32 3
  store i8 0, i8* %308, align 1
  %309 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %9, i64 0, i32 4
  store i8 1, i8* %309, align 1
  %310 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %9, i64 0, i32 5
  store i8 0, i8* %310, align 1
  %311 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %9, i64 0, i32 6
  store i8 0, i8* %311, align 1
  %312 = call %"class.base::TaskRunner"* @_ZN4base10ThreadPool16CreateTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* nonnull dereferenceable(15) %9) #18
  %313 = ptrtoint %"class.base::TaskRunner"* %312 to i64
  %314 = bitcast %class.scoped_refptr.83* %41 to i64*
  %315 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %42, align 8
  store i64 %313, i64* %314, align 8
  %316 = icmp eq %"class.base::TaskRunner"* %315, null
  br i1 %316, label %325, label %317

317:                                              ; preds = %299
  %318 = getelementptr inbounds %"class.base::TaskRunner", %"class.base::TaskRunner"* %315, i64 0, i32 1
  %319 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %318, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = atomicrmw sub i32* %319, i32 1 acq_rel
  %321 = icmp eq i32 %320, 1
  br i1 %321, label %322, label %325

322:                                              ; preds = %317
  %323 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %318, i64 -2
  %324 = bitcast %"class.base::RefCountedThreadSafe"* %323 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %324) #18
  br label %325

325:                                              ; preds = %299, %317, %322
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %302) #18
  %326 = bitcast %"class.net::HostResolverManager"* %0 to void (%"class.net::HostResolverManager"*)***
  %327 = load void (%"class.net::HostResolverManager"*)**, void (%"class.net::HostResolverManager"*)*** %326, align 8
  %328 = getelementptr inbounds void (%"class.net::HostResolverManager"*)*, void (%"class.net::HostResolverManager"*)** %327, i64 5
  %329 = load void (%"class.net::HostResolverManager"*)*, void (%"class.net::HostResolverManager"*)** %328, align 8
  call void %329(%"class.net::HostResolverManager"* %0) #18
  call void @_ZN3net21NetworkChangeNotifier20AddIPAddressObserverEPNS0_17IPAddressObserverE(%"class.net::NetworkChangeNotifier::IPAddressObserver"* %11) #18
  call void @_ZN3net21NetworkChangeNotifier25AddConnectionTypeObserverEPNS0_22ConnectionTypeObserverE(%"class.net::NetworkChangeNotifier::ConnectionTypeObserver"* %12) #18
  %330 = load %"class.net::SystemDnsConfigChangeNotifier"*, %"class.net::SystemDnsConfigChangeNotifier"** %33, align 8
  %331 = icmp eq %"class.net::SystemDnsConfigChangeNotifier"* %330, null
  br i1 %331, label %333, label %332

332:                                              ; preds = %325
  call void @_ZN3net29SystemDnsConfigChangeNotifier11AddObserverEPNS0_8ObserverE(%"class.net::SystemDnsConfigChangeNotifier"* nonnull %330, %"class.net::SystemDnsConfigChangeNotifier::Observer"* %13) #18
  br label %333

333:                                              ; preds = %325, %332
  call void @_ZN3net21EnsureDnsReloaderInitEv() #18
  %334 = call i32 @_ZN3net21NetworkChangeNotifier17GetConnectionTypeEv() #18
  %335 = bitcast %"class.net::HostResolverManager"* %0 to void (%"class.net::HostResolverManager"*, i32)***
  %336 = load void (%"class.net::HostResolverManager"*, i32)**, void (%"class.net::HostResolverManager"*, i32)*** %335, align 8
  %337 = getelementptr inbounds void (%"class.net::HostResolverManager"*, i32)*, void (%"class.net::HostResolverManager"*, i32)** %336, i64 6
  %338 = load void (%"class.net::HostResolverManager"*, i32)*, void (%"class.net::HostResolverManager"*, i32)** %337, align 8
  call void %338(%"class.net::HostResolverManager"* %0, i32 %334) #18
  %339 = load %"class.net::NetLog"*, %"class.net::NetLog"** %30, align 8
  %340 = call %"class.net::DnsClient"* @_ZN3net9DnsClient12CreateClientEPNS_6NetLogE(%"class.net::NetLog"* %339) #18
  %341 = ptrtoint %"class.net::DnsClient"* %340 to i64
  %342 = getelementptr inbounds %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.71"* %31, i64 0, i32 0, i32 0, i32 0
  %343 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %342, align 8
  store i64 %341, i64* %32, align 8
  %344 = icmp eq %"class.net::DnsClient"* %343, null
  br i1 %344, label %351, label %345

345:                                              ; preds = %333
  %346 = bitcast %"class.net::DnsClient"* %343 to void (%"class.net::DnsClient"*)***
  %347 = load void (%"class.net::DnsClient"*)**, void (%"class.net::DnsClient"*)*** %346, align 8
  %348 = getelementptr inbounds void (%"class.net::DnsClient"*)*, void (%"class.net::DnsClient"*)** %347, i64 1
  %349 = load void (%"class.net::DnsClient"*)*, void (%"class.net::DnsClient"*)** %348, align 8
  call void %349(%"class.net::DnsClient"* nonnull %343) #18
  %350 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %342, align 8
  br label %351

351:                                              ; preds = %345, %333
  %352 = phi %"class.net::DnsClient"* [ %350, %345 ], [ %340, %333 ]
  %353 = getelementptr inbounds %"struct.net::HostResolver::ManagerOptions", %"struct.net::HostResolver::ManagerOptions"* %1, i64 0, i32 2
  %354 = load i8, i8* %353, align 8, !range !2
  %355 = icmp ne i8 %354, 0
  %356 = getelementptr inbounds %"struct.net::HostResolver::ManagerOptions", %"struct.net::HostResolver::ManagerOptions"* %1, i64 0, i32 3
  %357 = load i8, i8* %356, align 1, !range !2
  %358 = icmp ne i8 %357, 0
  %359 = bitcast %"class.net::DnsClient"* %352 to void (%"class.net::DnsClient"*, i1, i1)***
  %360 = load void (%"class.net::DnsClient"*, i1, i1)**, void (%"class.net::DnsClient"*, i1, i1)*** %359, align 8
  %361 = getelementptr inbounds void (%"class.net::DnsClient"*, i1, i1)*, void (%"class.net::DnsClient"*, i1, i1)** %360, i64 5
  %362 = load void (%"class.net::DnsClient"*, i1, i1)*, void (%"class.net::DnsClient"*, i1, i1)** %361, align 8
  call void %362(%"class.net::DnsClient"* %352, i1 zeroext %355, i1 zeroext %358) #18
  %363 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %342, align 8
  %364 = getelementptr inbounds %"struct.net::HostResolver::ManagerOptions", %"struct.net::HostResolver::ManagerOptions"* %1, i64 0, i32 5
  call void @_ZN3net18DnsConfigOverridesC1ERKS0_(%"struct.net::DnsConfigOverrides"* nonnull %10, %"struct.net::DnsConfigOverrides"* dereferenceable(208) %364) #18
  %365 = bitcast %"class.net::DnsClient"* %363 to i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)***
  %366 = load i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)**, i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)*** %365, align 8
  %367 = getelementptr inbounds i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)*, i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)** %366, i64 9
  %368 = load i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)*, i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)** %367, align 8
  %369 = call zeroext i1 %368(%"class.net::DnsClient"* %363, %"struct.net::DnsConfigOverrides"* nonnull %10) #18
  call void @_ZN3net18DnsConfigOverridesD1Ev(%"struct.net::DnsConfigOverrides"* nonnull %10) #18
  %370 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %370) #18
  %371 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %372 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %370, i8 -86, i64 24, i1 false) #18
  call void @_ZN4base14FieldTrialList12FindFullNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), i64 8) #18
  %373 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %374 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %373, i64 0, i32 1, i32 0
  %375 = load i8, i8* %374, align 1
  %376 = icmp slt i8 %375, 0
  %377 = load i64, i64* %372, align 8
  %378 = zext i8 %375 to i64
  %379 = select i1 %376, i64 %377, i64 %378
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %388, label %381

381:                                              ; preds = %351
  %382 = load i8*, i8** %371, align 8
  %383 = select i1 %376, i8* %382, i8* %370
  %384 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %383, i64 %379, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0), i64 18, i32 1) #18
  %385 = load i8, i8* %374, align 1
  %386 = xor i1 %384, true
  %387 = zext i1 %386 to i8
  br label %388

388:                                              ; preds = %381, %351
  %389 = phi i8 [ %385, %381 ], [ %375, %351 ]
  %390 = phi i8 [ %387, %381 ], [ 1, %351 ]
  %391 = icmp slt i8 %389, 0
  br i1 %391, label %392, label %394

392:                                              ; preds = %388
  %393 = load i8*, i8** %371, align 8
  call void @_ZdlPv(i8* %393) #19
  br label %394

394:                                              ; preds = %388, %392
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %370) #18
  store i8 %390, i8* %40, align 8
  call void @_ZN3net21PrioritizedDispatcher6LimitsD1Ev(%"struct.net::PrioritizedDispatcher::Limits"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %55) #18
  ret void
}

declare void @_ZN3net21NetworkChangeNotifier17IPAddressObserverC2Ev(%"class.net::NetworkChangeNotifier::IPAddressObserver"*) unnamed_addr #1

declare void @_ZN3net21NetworkChangeNotifier22ConnectionTypeObserverC2Ev(%"class.net::NetworkChangeNotifier::ConnectionTypeObserver"*) unnamed_addr #1

declare void @_ZN3net14ProcTaskParamsC1EPNS_16HostResolverProcEm(%"struct.net::ProcTaskParams"*, %"class.net::HostResolverProc"*, i64) unnamed_addr #1

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #1

declare %"class.base::TaskRunner"* @_ZN4base10ThreadPool16CreateTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* dereferenceable(15)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK4base12FeatureParamINS_12TaskPriorityELb1EE3GetEv(%"struct.base::FeatureParam"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load %"struct.base::Feature"*, %"struct.base::Feature"** %8, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #18
  %12 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i64 @strlen(i8* %13) #18
  %15 = icmp ugt i64 %14, -17
  br i1 %15, label %16, label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %17) #20
  unreachable

18:                                               ; preds = %1
  %19 = icmp ult i64 %14, 23
  br i1 %19, label %29, label %20

20:                                               ; preds = %18
  %21 = add nuw i64 %14, 16
  %22 = and i64 %21, -16
  %23 = tail call i8* @_Znwm(i64 %22) #19
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = or i64 %22, -9223372036854775808
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %27, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %34

29:                                               ; preds = %18
  %30 = trunc i64 %14 to i8
  %31 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1
  %33 = icmp eq i64 %14, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29, %20
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %28, %20 ]
  %36 = phi i8* [ %11, %29 ], [ %23, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 %13, i64 %14, i1 false) #18
  br label %37

37:                                               ; preds = %29, %34
  %38 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %35, %34 ]
  %39 = phi i8* [ %11, %29 ], [ %36, %34 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %14
  store i8 0, i8* %40, align 1
  call void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"struct.base::Feature"* dereferenceable(16) %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #18
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #19
  br label %47

47:                                               ; preds = %37, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #18
  %48 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i64, i64* %7, align 8
  %53 = zext i8 %50 to i64
  %54 = select i1 %51, i64 %52, i64 %53
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 4
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %92, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 3
  br label %64

62:                                               ; preds = %47
  %63 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 2
  br label %133

64:                                               ; preds = %86, %60
  %65 = phi i64 [ %58, %60 ], [ %83, %86 ]
  %66 = phi i64 [ %52, %60 ], [ %88, %86 ]
  %67 = phi i8 [ %50, %60 ], [ %87, %86 ]
  %68 = phi i64 [ 0, %60 ], [ %84, %86 ]
  %69 = load %"struct.base::FeatureParam<base::TaskPriority, true>::Option"*, %"struct.base::FeatureParam<base::TaskPriority, true>::Option"** %61, align 8
  %70 = getelementptr inbounds %"struct.base::FeatureParam<base::TaskPriority, true>::Option", %"struct.base::FeatureParam<base::TaskPriority, true>::Option"* %69, i64 %68, i32 1
  %71 = load i8*, i8** %70, align 8
  %72 = call i64 @strlen(i8* %71) #18
  %73 = icmp slt i8 %67, 0
  %74 = zext i8 %67 to i64
  %75 = select i1 %73, i64 %66, i64 %74
  %76 = icmp eq i64 %72, %75
  br i1 %76, label %77, label %82

77:                                               ; preds = %64
  %78 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* %71, i64 %72) #18
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %89, label %80

80:                                               ; preds = %77
  %81 = load i64, i64* %57, align 8
  br label %82

82:                                               ; preds = %80, %64
  %83 = phi i64 [ %81, %80 ], [ %65, %64 ]
  %84 = add nuw i64 %68, 1
  %85 = icmp ult i64 %84, %83
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = load i8, i8* %49, align 1
  %88 = load i64, i64* %7, align 8
  br label %64

89:                                               ; preds = %77
  %90 = load %"struct.base::FeatureParam<base::TaskPriority, true>::Option"*, %"struct.base::FeatureParam<base::TaskPriority, true>::Option"** %61, align 8
  %91 = getelementptr inbounds %"struct.base::FeatureParam<base::TaskPriority, true>::Option", %"struct.base::FeatureParam<base::TaskPriority, true>::Option"* %90, i64 %68, i32 0
  br label %133

92:                                               ; preds = %82, %56
  %93 = load %"struct.base::Feature"*, %"struct.base::Feature"** %8, align 8
  %94 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #18
  %95 = load i8*, i8** %12, align 8
  %96 = call i64 @strlen(i8* %95) #18
  %97 = icmp ugt i64 %96, -17
  br i1 %97, label %98, label %100

98:                                               ; preds = %92
  %99 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %99) #20
  unreachable

100:                                              ; preds = %92
  %101 = icmp ult i64 %96, 23
  br i1 %101, label %111, label %102

102:                                              ; preds = %100
  %103 = add nuw i64 %96, 16
  %104 = and i64 %103, -16
  %105 = call i8* @_Znwm(i64 %104) #19
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %105, i8** %106, align 8
  %107 = or i64 %104, -9223372036854775808
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %96, i64* %109, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %116

111:                                              ; preds = %100
  %112 = trunc i64 %96 to i8
  %113 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  store i8 %112, i8* %114, align 1
  %115 = icmp eq i64 %96, 0
  br i1 %115, label %119, label %116

116:                                              ; preds = %111, %102
  %117 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %113, %111 ], [ %110, %102 ]
  %118 = phi i8* [ %94, %111 ], [ %105, %102 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %118, i8* align 1 %95, i64 %96, i1 false) #18
  br label %119

119:                                              ; preds = %111, %116
  %120 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %113, %111 ], [ %117, %116 ]
  %121 = phi i8* [ %94, %111 ], [ %118, %116 ]
  %122 = getelementptr inbounds i8, i8* %121, i64 %96
  store i8 0, i8* %122, align 1
  %123 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 2
  %124 = load i8, i8* %123, align 8
  %125 = zext i8 %124 to i32
  call void @_ZN4base19LogInvalidEnumValueERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_i(%"struct.base::Feature"* dereferenceable(16) %93, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i32 %125) #18
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %119
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  call void @_ZdlPv(i8* %131) #19
  br label %132

132:                                              ; preds = %119, %129
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #18
  br label %133

133:                                              ; preds = %89, %132, %62
  %134 = phi i8* [ %63, %62 ], [ %123, %132 ], [ %91, %89 ]
  %135 = load i8, i8* %134, align 8
  %136 = load i8, i8* %49, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %139) #19
  br label %140

140:                                              ; preds = %133, %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #18
  ret i8 %135
}

declare void @_ZN3net21NetworkChangeNotifier20AddIPAddressObserverEPNS0_17IPAddressObserverE(%"class.net::NetworkChangeNotifier::IPAddressObserver"*) local_unnamed_addr #1

declare void @_ZN3net21NetworkChangeNotifier25AddConnectionTypeObserverEPNS0_22ConnectionTypeObserverE(%"class.net::NetworkChangeNotifier::ConnectionTypeObserver"*) local_unnamed_addr #1

declare void @_ZN3net29SystemDnsConfigChangeNotifier11AddObserverEPNS0_8ObserverE(%"class.net::SystemDnsConfigChangeNotifier"*, %"class.net::SystemDnsConfigChangeNotifier::Observer"*) local_unnamed_addr #1

declare void @_ZN3net21EnsureDnsReloaderInitEv() local_unnamed_addr #1

declare i32 @_ZN3net21NetworkChangeNotifier17GetConnectionTypeEv() local_unnamed_addr #1

declare %"class.net::DnsClient"* @_ZN3net9DnsClient12CreateClientEPNS_6NetLogE(%"class.net::NetLog"*) local_unnamed_addr #1

declare void @_ZN3net18DnsConfigOverridesC1ERKS0_(%"struct.net::DnsConfigOverrides"*, %"struct.net::DnsConfigOverrides"* dereferenceable(208)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net18DnsConfigOverridesD1Ev(%"struct.net::DnsConfigOverrides"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net21PrioritizedDispatcher6LimitsD1Ev(%"struct.net::PrioritizedDispatcher::Limits"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManagerD2Ev(%"class.net::HostResolverManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [5 x i8*], [3 x i8*] }, { [10 x i8*], [5 x i8*], [3 x i8*] }* @_ZTVN3net19HostResolverManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.net::NetworkChangeNotifier::ConnectionTypeObserver", %"class.net::NetworkChangeNotifier::ConnectionTypeObserver"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [5 x i8*], [3 x i8*] }, { [10 x i8*], [5 x i8*], [3 x i8*] }* @_ZTVN3net19HostResolverManagerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Observer", %"class.net::SystemDnsConfigChangeNotifier::Observer"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [5 x i8*], [3 x i8*] }, { [10 x i8*], [5 x i8*], [3 x i8*] }* @_ZTVN3net19HostResolverManagerE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %7, align 8
  tail call void @_ZN3net21PrioritizedDispatcher15SetLimitsToZeroEv(%"class.net::PrioritizedDispatcher"* %8) #18
  %9 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %13 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net19HostResolverManager6JobKeyENS_10unique_ptrINS3_3JobENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %10, %"class.std::__1::__tree_node"* %13) #18
  %14 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %9, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %16, align 8
  %17 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 0
  tail call void @_ZN3net21NetworkChangeNotifier23RemoveIPAddressObserverEPNS0_17IPAddressObserverE(%"class.net::NetworkChangeNotifier::IPAddressObserver"* %17) #18
  tail call void @_ZN3net21NetworkChangeNotifier28RemoveConnectionTypeObserverEPNS0_22ConnectionTypeObserverE(%"class.net::NetworkChangeNotifier::ConnectionTypeObserver"* %3) #18
  %18 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 11
  %19 = load %"class.net::SystemDnsConfigChangeNotifier"*, %"class.net::SystemDnsConfigChangeNotifier"** %18, align 8
  %20 = icmp eq %"class.net::SystemDnsConfigChangeNotifier"* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %1
  tail call void @_ZN3net29SystemDnsConfigChangeNotifier14RemoveObserverEPNS0_8ObserverE(%"class.net::SystemDnsConfigChangeNotifier"* nonnull %19, %"class.net::SystemDnsConfigChangeNotifier::Observer"* %5) #18
  br label %22

22:                                               ; preds = %1, %21
  %23 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 22, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %23) #18
  %24 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 21, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %24) #18
  %25 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 19
  tail call void @_ZN4base12ObserverListIN3net14ResolveContextELb1ELb0ENS_8internal22CheckedObserverAdapterEED2Ev(%"class.base::ObserverList"* %25) #18
  %26 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 17, i32 0
  %27 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %26, align 8
  %28 = icmp eq %"class.base::TaskRunner"* %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.base::TaskRunner", %"class.base::TaskRunner"* %27, i64 0, i32 1
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw sub i32* %31, i32 1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %30, i64 -2
  %36 = bitcast %"class.base::RefCountedThreadSafe"* %35 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %36) #18
  br label %37

37:                                               ; preds = %22, %29, %34
  %38 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %39 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %38, align 8
  store %"class.net::DnsClient"* null, %"class.net::DnsClient"** %38, align 8
  %40 = icmp eq %"class.net::DnsClient"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.net::DnsClient"* %39 to void (%"class.net::DnsClient"*)***
  %43 = load void (%"class.net::DnsClient"*)**, void (%"class.net::DnsClient"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.net::DnsClient"*)*, void (%"class.net::DnsClient"*)** %43, i64 1
  %45 = load void (%"class.net::DnsClient"*)*, void (%"class.net::DnsClient"*)** %44, align 8
  tail call void %45(%"class.net::DnsClient"* nonnull %39) #18
  br label %46

46:                                               ; preds = %37, %41
  %47 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 8
  tail call void @_ZN3net14ProcTaskParamsD1Ev(%"struct.net::ProcTaskParams"* %47) #18
  %48 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %7, align 8
  store %"class.net::PrioritizedDispatcher"* null, %"class.net::PrioritizedDispatcher"** %7, align 8
  %49 = icmp eq %"class.net::PrioritizedDispatcher"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  tail call void @_ZN3net21PrioritizedDispatcherD1Ev(%"class.net::PrioritizedDispatcher"* nonnull %48) #18
  %51 = bitcast %"class.net::PrioritizedDispatcher"* %48 to i8*
  tail call void @_ZdlPv(i8* %51) #19
  br label %52

52:                                               ; preds = %46, %50
  %53 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net19HostResolverManager6JobKeyENS_10unique_ptrINS3_3JobENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %10, %"class.std::__1::__tree_node"* %53) #18
  %54 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %55 = load %"class.net::MDnsClient"*, %"class.net::MDnsClient"** %54, align 8
  store %"class.net::MDnsClient"* null, %"class.net::MDnsClient"** %54, align 8
  %56 = icmp eq %"class.net::MDnsClient"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %52
  %58 = bitcast %"class.net::MDnsClient"* %55 to void (%"class.net::MDnsClient"*)***
  %59 = load void (%"class.net::MDnsClient"*)**, void (%"class.net::MDnsClient"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.net::MDnsClient"*)*, void (%"class.net::MDnsClient"*)** %59, i64 1
  %61 = load void (%"class.net::MDnsClient"*)*, void (%"class.net::MDnsClient"*)** %60, align 8
  tail call void %61(%"class.net::MDnsClient"* nonnull %55) #18
  br label %62

62:                                               ; preds = %52, %57
  %63 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.net::MDnsSocketFactory"*, %"class.net::MDnsSocketFactory"** %63, align 8
  store %"class.net::MDnsSocketFactory"* null, %"class.net::MDnsSocketFactory"** %63, align 8
  %65 = icmp eq %"class.net::MDnsSocketFactory"* %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.net::MDnsSocketFactory"* %64 to void (%"class.net::MDnsSocketFactory"*)***
  %68 = load void (%"class.net::MDnsSocketFactory"*)**, void (%"class.net::MDnsSocketFactory"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.net::MDnsSocketFactory"*)*, void (%"class.net::MDnsSocketFactory"*)** %68, i64 1
  %70 = load void (%"class.net::MDnsSocketFactory"*)*, void (%"class.net::MDnsSocketFactory"*)** %69, align 8
  tail call void %70(%"class.net::MDnsSocketFactory"* nonnull %64) #18
  br label %71

71:                                               ; preds = %62, %66
  tail call void @_ZN3net21NetworkChangeNotifier22ConnectionTypeObserverD2Ev(%"class.net::NetworkChangeNotifier::ConnectionTypeObserver"* %3) #18
  tail call void @_ZN3net21NetworkChangeNotifier17IPAddressObserverD2Ev(%"class.net::NetworkChangeNotifier::IPAddressObserver"* %17) #18
  ret void
}

declare void @_ZN3net21PrioritizedDispatcher15SetLimitsToZeroEv(%"class.net::PrioritizedDispatcher"*) local_unnamed_addr #1

declare void @_ZN3net21NetworkChangeNotifier23RemoveIPAddressObserverEPNS0_17IPAddressObserverE(%"class.net::NetworkChangeNotifier::IPAddressObserver"*) local_unnamed_addr #1

declare void @_ZN3net21NetworkChangeNotifier28RemoveConnectionTypeObserverEPNS0_22ConnectionTypeObserverE(%"class.net::NetworkChangeNotifier::ConnectionTypeObserver"*) local_unnamed_addr #1

declare void @_ZN3net29SystemDnsConfigChangeNotifier14RemoveObserverEPNS0_8ObserverE(%"class.net::SystemDnsConfigChangeNotifier"*, %"class.net::SystemDnsConfigChangeNotifier::Observer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN3net14ResolveContextELb1ELb0ENS_8internal22CheckedObserverAdapterEED2Ev(%"class.base::ObserverList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %3 = bitcast %"class.base::internal::LinkNodeBase"** %2 to %"class.base::LinkNode"**
  %4 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %3, align 8
  %6 = icmp eq %"class.base::LinkNode"* %5, %4
  br i1 %6, label %19, label %7

7:                                                ; preds = %1, %16
  %8 = phi %"class.base::LinkNode"* [ %17, %16 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %8, i64 1
  %10 = bitcast %"class.base::LinkNode"* %9 to %"class.base::ObserverList"**
  %11 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %12 = icmp eq %"class.base::ObserverList"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %10, align 8
  %14 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %8, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %14) #18
  %15 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %3, align 8
  br label %16

16:                                               ; preds = %7, %13
  %17 = phi %"class.base::LinkNode"* [ %8, %7 ], [ %15, %13 ]
  %18 = icmp eq %"class.base::LinkNode"* %17, %4
  br i1 %18, label %19, label %7

19:                                               ; preds = %16, %1
  %20 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %20, align 8
  %22 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %23 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %22, align 8
  %24 = tail call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN3net14ResolveContextELb1ELb0ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %21, %"class.base::internal::CheckedObserverAdapter"* %23) #18
  %25 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %22, align 8
  %26 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %24, %25
  br i1 %26, label %32, label %27

27:                                               ; preds = %19, %27
  %28 = phi %"class.base::internal::CheckedObserverAdapter"* [ %29, %27 ], [ %25, %19 ]
  %29 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %28, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %29) #18
  %30 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %29, %24
  br i1 %30, label %31, label %27

31:                                               ; preds = %27
  store %"class.base::internal::CheckedObserverAdapter"* %24, %"class.base::internal::CheckedObserverAdapter"** %22, align 8
  br label %32

32:                                               ; preds = %19, %31
  %33 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %20, align 8
  %34 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %33, null
  br i1 %34, label %47, label %35

35:                                               ; preds = %32
  %36 = bitcast %"class.base::internal::CheckedObserverAdapter"* %33 to i8*
  %37 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %24, %33
  br i1 %37, label %45, label %38

38:                                               ; preds = %35, %38
  %39 = phi %"class.base::internal::CheckedObserverAdapter"* [ %40, %38 ], [ %24, %35 ]
  %40 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %39, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %40) #18
  %41 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %40, %33
  br i1 %41, label %42, label %38

42:                                               ; preds = %38
  %43 = bitcast %"class.base::ObserverList"* %0 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %35
  %46 = phi i8* [ %44, %42 ], [ %36, %35 ]
  store %"class.base::internal::CheckedObserverAdapter"* %33, %"class.base::internal::CheckedObserverAdapter"** %22, align 8
  tail call void @_ZdlPv(i8* %46) #19
  br label %47

47:                                               ; preds = %32, %45
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net14ProcTaskParamsD1Ev(%"struct.net::ProcTaskParams"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net21NetworkChangeNotifier22ConnectionTypeObserverD2Ev(%"class.net::NetworkChangeNotifier::ConnectionTypeObserver"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net21NetworkChangeNotifier17IPAddressObserverD2Ev(%"class.net::NetworkChangeNotifier::IPAddressObserver"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N3net19HostResolverManagerD1Ev(%"class.net::HostResolverManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 -1, i32 22
  %3 = bitcast %"class.base::WeakPtrFactory"* %2 to %"class.net::HostResolverManager"*
  tail call void @_ZN3net19HostResolverManagerD2Ev(%"class.net::HostResolverManager"* %3) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManagerD0Ev(%"class.net::HostResolverManager"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net19HostResolverManagerD2Ev(%"class.net::HostResolverManager"* %0) #18
  %2 = bitcast %"class.net::HostResolverManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #19
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N3net19HostResolverManagerD0Ev(%"class.net::HostResolverManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 -1, i32 22
  %3 = bitcast %"class.base::WeakPtrFactory"* %2 to %"class.net::HostResolverManager"*
  tail call void @_ZN3net19HostResolverManagerD2Ev(%"class.net::HostResolverManager"* %3) #18
  %4 = bitcast %"class.base::WeakPtrFactory"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::HostResolverManager::CancellableResolveHostRequest"* @_ZN3net19HostResolverManager13CreateRequestERKNS_12HostPortPairERKNS_19NetworkIsolationKeyERKNS_16NetLogWithSourceERKN4absl8optionalINS_12HostResolver21ResolveHostParametersEEEPNS_14ResolveContextEPNS_9HostCacheE(%"class.net::HostResolverManager"*, %"class.net::HostPortPair"* dereferenceable(32), %"class.net::NetworkIsolationKey"* dereferenceable(184), %"class.net::NetLogWithSource"* dereferenceable(24), %"class.absl::optional.155"* dereferenceable(28), %"class.net::ResolveContext"*, %"class.net::HostCache"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.base::WeakPtr.230", align 8
  %9 = alloca %"class.base::internal::WeakReference", align 8
  %10 = alloca %"class.base::WeakPtr.230", align 8
  %11 = bitcast %"class.base::WeakPtr.230"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #18
  %12 = bitcast %"class.base::internal::WeakReference"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #18, !noalias !15
  %13 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 21, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %9, %"class.base::internal::WeakReferenceOwner"* %13) #18, !noalias !15
  %14 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 21, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !15
  %16 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %10, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %16, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %9, i64 %15) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #18, !noalias !15
  %17 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 18
  %18 = bitcast %"class.base::WeakPtr.230"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18)
  %19 = call i8* @_Znwm(i64 648) #19
  %20 = bitcast i8* %19 to %"class.net::HostResolverManager::RequestImpl"*
  %21 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %8, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %10, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %21, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %22) #18
  %23 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %8, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %10, i64 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %23, align 8
  %26 = load %"class.base::TickClock"*, %"class.base::TickClock"** %17, align 8
  call void @_ZN3net19HostResolverManager11RequestImplC2ERKNS_16NetLogWithSourceERKNS_12HostPortPairERKNS_19NetworkIsolationKeyERKN4absl8optionalINS_12HostResolver21ResolveHostParametersEEEPNS_14ResolveContextEPNS_9HostCacheEN4base7WeakPtrIS0_EEPKNSM_9TickClockE(%"class.net::HostResolverManager::RequestImpl"* nonnull %20, %"class.net::NetLogWithSource"* dereferenceable(24) %3, %"class.net::HostPortPair"* dereferenceable(32) %1, %"class.net::NetworkIsolationKey"* dereferenceable(184) %2, %"class.absl::optional.155"* dereferenceable(28) %4, %"class.net::ResolveContext"* %5, %"class.net::HostCache"* %6, %"class.base::WeakPtr.230"* nonnull %8, %"class.base::TickClock"* %26) #18
  %27 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %27) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18)
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %16) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #18
  %28 = bitcast i8* %19 to %"class.net::HostResolverManager::CancellableResolveHostRequest"*
  ret %"class.net::HostResolverManager::CancellableResolveHostRequest"* %28
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::HostResolverManager::CancellableProbeRequest"* @_ZN3net19HostResolverManager21CreateDohProbeRequestEPNS_14ResolveContextE(%"class.net::HostResolverManager"*, %"class.net::ResolveContext"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::WeakPtr.230", align 8
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.base::WeakPtr.230", align 8
  %6 = ptrtoint %"class.net::ResolveContext"* %1 to i64
  %7 = bitcast %"class.base::WeakPtr.230"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #18
  %8 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #18, !noalias !18
  %9 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 21, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %9) #18, !noalias !18
  %10 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 21, i32 0, i32 1
  %11 = load i64, i64* %10, align 8, !noalias !18
  %12 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %12, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %11) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #18, !noalias !18
  %13 = bitcast %"class.base::WeakPtr.230"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13)
  %14 = call i8* @_Znwm(i64 88) #19
  %15 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %3, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %15, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %16) #18
  %17 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %3, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %5, i64 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %17, align 8
  %20 = bitcast i8* %14 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN3net19HostResolverManager23CancellableProbeRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN3net19HostResolverManager23CancellableProbeRequestE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %20, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 16
  %22 = bitcast i8* %21 to %"class.base::CheckedObserver"*
  call void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"* %22) #18
  %23 = bitcast i8* %21 to i32 (...)***
  %24 = bitcast i8* %14 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*], [6 x i8*] }, { [8 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN3net19HostResolverManager16ProbeRequestImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*], [6 x i8*] }, { [8 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN3net19HostResolverManager16ProbeRequestImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %24, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*], [6 x i8*] }, { [8 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN3net19HostResolverManager16ProbeRequestImplE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %25 = getelementptr inbounds i8, i8* %14, i64 40
  %26 = bitcast i8* %25 to i64*
  store i64 %6, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %14, i64 48
  %28 = bitcast i8* %27 to i64*
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %14, i64 56
  %30 = bitcast i8* %29 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %30, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %15) #18
  %31 = getelementptr inbounds i8, i8* %14, i64 64
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %17, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds i8, i8* %14, i64 72
  %35 = bitcast i8* %34 to %"class.base::internal::WeakPtrFactoryBase"*
  %36 = ptrtoint i8* %14 to i64
  call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %35, i64 %36) #18
  %37 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %3, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %37) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13)
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %12) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #18
  %38 = bitcast i8* %14 to %"class.net::HostResolverManager::CancellableProbeRequest"*
  ret %"class.net::HostResolverManager::CancellableProbeRequest"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::HostResolver::MdnsListener"* @_ZN3net19HostResolverManager18CreateMdnsListenerERKNS_12HostPortPairENS_12DnsQueryTypeE(%"class.net::HostResolverManager"* nocapture, %"class.net::HostPortPair"* dereferenceable(32), i32) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 72) #19
  %5 = bitcast i8* %4 to %"class.net::HostResolverMdnsListenerImpl"*
  tail call void @_ZN3net28HostResolverMdnsListenerImplC1ERKNS_12HostPortPairENS_12DnsQueryTypeE(%"class.net::HostResolverMdnsListenerImpl"* nonnull %5, %"class.net::HostPortPair"* dereferenceable(32) %1, i32 %2) #18
  %6 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.net::MDnsClient"*, %"class.net::MDnsClient"** %7, align 8
  %9 = icmp eq %"class.net::MDnsClient"* %8, null
  br i1 %9, label %10, label %35

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.net::MDnsSocketFactory"*, %"class.net::MDnsSocketFactory"** %11, align 8
  %13 = icmp eq %"class.net::MDnsSocketFactory"* %12, null
  br i1 %13, label %14, label %23

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 9
  %16 = tail call i8* @_Znwm(i64 16) #19
  %17 = bitcast %"class.net::NetLog"** %15 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast i8* %16 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net21MDnsSocketFactoryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds i8, i8* %16, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %18, i64* %21, align 8
  %22 = bitcast %"class.net::MDnsSocketFactory"** %11 to i8**
  store i8* %16, i8** %22, align 8
  br label %23

23:                                               ; preds = %14, %10
  %24 = tail call %"class.net::MDnsClient"* @_ZN3net10MDnsClient13CreateDefaultEv() #18
  %25 = ptrtoint %"class.net::MDnsClient"* %24 to i64
  %26 = load %"class.net::MDnsClient"*, %"class.net::MDnsClient"** %7, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.18"* %6 to i64*
  store i64 %25, i64* %27, align 8
  %28 = icmp eq %"class.net::MDnsClient"* %26, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.net::MDnsClient"* %26 to void (%"class.net::MDnsClient"*)***
  %31 = load void (%"class.net::MDnsClient"*)**, void (%"class.net::MDnsClient"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.net::MDnsClient"*)*, void (%"class.net::MDnsClient"*)** %31, i64 1
  %33 = load void (%"class.net::MDnsClient"*)*, void (%"class.net::MDnsClient"*)** %32, align 8
  tail call void %33(%"class.net::MDnsClient"* nonnull %26) #18
  %34 = load %"class.net::MDnsClient"*, %"class.net::MDnsClient"** %7, align 8
  br label %35

35:                                               ; preds = %29, %23, %3
  %36 = phi %"class.net::MDnsClient"* [ %8, %3 ], [ %24, %23 ], [ %34, %29 ]
  %37 = bitcast %"class.net::MDnsClient"* %36 to i1 (%"class.net::MDnsClient"*)***
  %38 = load i1 (%"class.net::MDnsClient"*)**, i1 (%"class.net::MDnsClient"*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.net::MDnsClient"*)*, i1 (%"class.net::MDnsClient"*)** %38, i64 6
  %40 = load i1 (%"class.net::MDnsClient"*)*, i1 (%"class.net::MDnsClient"*)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.net::MDnsClient"* %36) #18
  br i1 %41, label %52, label %42

42:                                               ; preds = %35
  %43 = load %"class.net::MDnsClient"*, %"class.net::MDnsClient"** %7, align 8
  %44 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.net::MDnsSocketFactory"*, %"class.net::MDnsSocketFactory"** %44, align 8
  %46 = bitcast %"class.net::MDnsClient"* %43 to i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)***
  %47 = load i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)**, i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)*** %46, align 8
  %48 = getelementptr inbounds i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)*, i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)** %47, i64 4
  %49 = load i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)*, i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)** %48, align 8
  %50 = tail call i32 %49(%"class.net::MDnsClient"* %43, %"class.net::MDnsSocketFactory"* %45) #18
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %74

52:                                               ; preds = %35, %42
  %53 = load %"class.net::MDnsClient"*, %"class.net::MDnsClient"** %7, align 8
  %54 = tail call zeroext i16 @_ZN3net19DnsQueryTypeToQtypeENS_12DnsQueryTypeE(i32 %2) #18
  %55 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 0
  %56 = getelementptr inbounds i8, i8* %4, i64 8
  %57 = bitcast i8* %56 to %"class.net::MDnsListener::Delegate"*
  %58 = bitcast %"class.net::MDnsClient"* %53 to %"class.net::MDnsListener"* (%"class.net::MDnsClient"*, i16, %"class.std::__1::basic_string"*, %"class.net::MDnsListener::Delegate"*)***
  %59 = load %"class.net::MDnsListener"* (%"class.net::MDnsClient"*, i16, %"class.std::__1::basic_string"*, %"class.net::MDnsListener::Delegate"*)**, %"class.net::MDnsListener"* (%"class.net::MDnsClient"*, i16, %"class.std::__1::basic_string"*, %"class.net::MDnsListener::Delegate"*)*** %58, align 8
  %60 = getelementptr inbounds %"class.net::MDnsListener"* (%"class.net::MDnsClient"*, i16, %"class.std::__1::basic_string"*, %"class.net::MDnsListener::Delegate"*)*, %"class.net::MDnsListener"* (%"class.net::MDnsClient"*, i16, %"class.std::__1::basic_string"*, %"class.net::MDnsListener::Delegate"*)** %59, i64 2
  %61 = load %"class.net::MDnsListener"* (%"class.net::MDnsClient"*, i16, %"class.std::__1::basic_string"*, %"class.net::MDnsListener::Delegate"*)*, %"class.net::MDnsListener"* (%"class.net::MDnsClient"*, i16, %"class.std::__1::basic_string"*, %"class.net::MDnsListener::Delegate"*)** %60, align 8
  %62 = tail call %"class.net::MDnsListener"* %61(%"class.net::MDnsClient"* %53, i16 zeroext %54, %"class.std::__1::basic_string"* dereferenceable(24) %55, %"class.net::MDnsListener::Delegate"* %57) #18
  %63 = ptrtoint %"class.net::MDnsListener"* %62 to i64
  %64 = getelementptr inbounds i8, i8* %4, i64 56
  %65 = bitcast i8* %64 to %"class.net::MDnsListener"**
  %66 = load %"class.net::MDnsListener"*, %"class.net::MDnsListener"** %65, align 8
  %67 = bitcast i8* %64 to i64*
  store i64 %63, i64* %67, align 8
  %68 = icmp eq %"class.net::MDnsListener"* %66, null
  br i1 %68, label %77, label %69

69:                                               ; preds = %52
  %70 = bitcast %"class.net::MDnsListener"* %66 to void (%"class.net::MDnsListener"*)***
  %71 = load void (%"class.net::MDnsListener"*)**, void (%"class.net::MDnsListener"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.net::MDnsListener"*)*, void (%"class.net::MDnsListener"*)** %71, i64 1
  %73 = load void (%"class.net::MDnsListener"*)*, void (%"class.net::MDnsListener"*)** %72, align 8
  tail call void %73(%"class.net::MDnsListener"* nonnull %66) #18
  br label %77

74:                                               ; preds = %42
  %75 = getelementptr inbounds i8, i8* %4, i64 52
  %76 = bitcast i8* %75 to i32*
  store i32 %50, i32* %76, align 4
  br label %77

77:                                               ; preds = %74, %69, %52
  %78 = bitcast i8* %4 to %"class.net::HostResolver::MdnsListener"*
  ret %"class.net::HostResolver::MdnsListener"* %78
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19HostResolverManager21GetOrCreateMdnsClientEPPNS_10MDnsClientE(%"class.net::HostResolverManager"* nocapture, %"class.net::MDnsClient"** nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.net::MDnsClient"*, %"class.net::MDnsClient"** %4, align 8
  %6 = icmp eq %"class.net::MDnsClient"* %5, null
  br i1 %6, label %7, label %32

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"class.net::MDnsSocketFactory"*, %"class.net::MDnsSocketFactory"** %8, align 8
  %10 = icmp eq %"class.net::MDnsSocketFactory"* %9, null
  br i1 %10, label %11, label %20

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 9
  %13 = tail call i8* @_Znwm(i64 16) #19
  %14 = bitcast %"class.net::NetLog"** %12 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net21MDnsSocketFactoryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 8
  %18 = bitcast i8* %17 to i64*
  store i64 %15, i64* %18, align 8
  %19 = bitcast %"class.net::MDnsSocketFactory"** %8 to i8**
  store i8* %13, i8** %19, align 8
  br label %20

20:                                               ; preds = %7, %11
  %21 = tail call %"class.net::MDnsClient"* @_ZN3net10MDnsClient13CreateDefaultEv() #18
  %22 = ptrtoint %"class.net::MDnsClient"* %21 to i64
  %23 = load %"class.net::MDnsClient"*, %"class.net::MDnsClient"** %4, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.18"* %3 to i64*
  store i64 %22, i64* %24, align 8
  %25 = icmp eq %"class.net::MDnsClient"* %23, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.net::MDnsClient"* %23 to void (%"class.net::MDnsClient"*)***
  %28 = load void (%"class.net::MDnsClient"*)**, void (%"class.net::MDnsClient"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.net::MDnsClient"*)*, void (%"class.net::MDnsClient"*)** %28, i64 1
  %30 = load void (%"class.net::MDnsClient"*)*, void (%"class.net::MDnsClient"*)** %29, align 8
  tail call void %30(%"class.net::MDnsClient"* nonnull %23) #18
  %31 = load %"class.net::MDnsClient"*, %"class.net::MDnsClient"** %4, align 8
  br label %32

32:                                               ; preds = %2, %20, %26
  %33 = phi %"class.net::MDnsClient"* [ %5, %2 ], [ %21, %20 ], [ %31, %26 ]
  %34 = bitcast %"class.net::MDnsClient"* %33 to i1 (%"class.net::MDnsClient"*)***
  %35 = load i1 (%"class.net::MDnsClient"*)**, i1 (%"class.net::MDnsClient"*)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.net::MDnsClient"*)*, i1 (%"class.net::MDnsClient"*)** %35, i64 6
  %37 = load i1 (%"class.net::MDnsClient"*)*, i1 (%"class.net::MDnsClient"*)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.net::MDnsClient"* %33) #18
  br i1 %38, label %49, label %39

39:                                               ; preds = %32
  %40 = load %"class.net::MDnsClient"*, %"class.net::MDnsClient"** %4, align 8
  %41 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.net::MDnsSocketFactory"*, %"class.net::MDnsSocketFactory"** %41, align 8
  %43 = bitcast %"class.net::MDnsClient"* %40 to i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)***
  %44 = load i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)**, i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)*** %43, align 8
  %45 = getelementptr inbounds i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)*, i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)** %44, i64 4
  %46 = load i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)*, i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)** %45, align 8
  %47 = tail call i32 %46(%"class.net::MDnsClient"* %40, %"class.net::MDnsSocketFactory"* %42) #18
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %53

49:                                               ; preds = %32, %39
  %50 = bitcast %"class.std::__1::unique_ptr.18"* %3 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.net::MDnsClient"** %1 to i64*
  store i64 %51, i64* %52, align 8
  br label %53

53:                                               ; preds = %49, %39
  %54 = phi i32 [ 0, %49 ], [ %47, %39 ]
  ret i32 %54
}

declare zeroext i16 @_ZN3net19DnsQueryTypeToQtypeENS_12DnsQueryTypeE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager27SetInsecureDnsClientEnabledEbb(%"class.net::HostResolverManager"*, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %5 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %4, align 8
  %6 = icmp eq %"class.net::DnsClient"* %5, null
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.net::DnsClient"* %5 to i1 (%"class.net::DnsClient"*)***
  %9 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %9, i64 3
  %11 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.net::DnsClient"* nonnull %5) #18
  br i1 %12, label %13, label %21

13:                                               ; preds = %7
  %14 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %4, align 8
  %15 = bitcast %"class.net::DnsClient"* %14 to i1 (%"class.net::DnsClient"*)***
  %16 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %16, i64 4
  %18 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.net::DnsClient"* %14) #18
  %20 = zext i1 %19 to i32
  br label %21

21:                                               ; preds = %13, %7
  %22 = phi i32 [ 0, %7 ], [ %20, %13 ]
  %23 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %4, align 8
  %24 = bitcast %"class.net::DnsClient"* %23 to void (%"class.net::DnsClient"*, i1, i1)***
  %25 = load void (%"class.net::DnsClient"*, i1, i1)**, void (%"class.net::DnsClient"*, i1, i1)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.net::DnsClient"*, i1, i1)*, void (%"class.net::DnsClient"*, i1, i1)** %25, i64 5
  %27 = load void (%"class.net::DnsClient"*, i1, i1)*, void (%"class.net::DnsClient"*, i1, i1)** %26, align 8
  tail call void %27(%"class.net::DnsClient"* %23, i1 zeroext %1, i1 zeroext %2) #18
  %28 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %4, align 8
  %29 = bitcast %"class.net::DnsClient"* %28 to i1 (%"class.net::DnsClient"*)***
  %30 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %30, i64 3
  %32 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.net::DnsClient"* %28) #18
  %34 = xor i1 %12, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %21
  %36 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %4, align 8
  %37 = bitcast %"class.net::DnsClient"* %36 to i1 (%"class.net::DnsClient"*)***
  %38 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %38, i64 3
  %40 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.net::DnsClient"* %36) #18
  br i1 %41, label %42, label %52

42:                                               ; preds = %35
  %43 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %4, align 8
  %44 = bitcast %"class.net::DnsClient"* %43 to i1 (%"class.net::DnsClient"*)***
  %45 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %45, i64 4
  %47 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.net::DnsClient"* %43) #18
  %49 = zext i1 %48 to i32
  %50 = icmp eq i32 %22, %49
  br i1 %50, label %52, label %51

51:                                               ; preds = %42, %21
  tail call void @_ZN3net19HostResolverManager21AbortInsecureDnsTasksEib(%"class.net::HostResolverManager"* %0, i32 -21, i1 zeroext false)
  br label %52

52:                                               ; preds = %3, %35, %51, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager21AbortInsecureDnsTasksEib(%"class.net::HostResolverManager"*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.base::WeakPtr.542", align 8
  %6 = alloca %"class.base::OnceCallback.335", align 8
  %7 = alloca %"class.std::__1::vector.488", align 8
  %8 = alloca %"class.base::OnceCallback.335", align 8
  %9 = alloca %"struct.net::PrioritizedDispatcher::Limits", align 8
  %10 = alloca %"struct.net::PrioritizedDispatcher::Limits", align 8
  %11 = bitcast %"class.std::__1::vector.488"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #18
  %12 = getelementptr inbounds %"class.std::__1::vector.488", %"class.std::__1::vector.488"* %7, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.488", %"class.std::__1::vector.488"* %7, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector.488", %"class.std::__1::vector.488"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #18
  %15 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 5, i32 0, i32 0
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %16, %17
  br i1 %18, label %32, label %19

19:                                               ; preds = %3
  %20 = bitcast %"class.base::OnceCallback.335"* %8 to i8*
  %21 = zext i1 %2 to i8
  %22 = bitcast %"class.base::WeakPtr.542"* %5 to i8*
  %23 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  %24 = getelementptr inbounds %"class.base::WeakPtr.542", %"class.base::WeakPtr.542"* %5, i64 0, i32 0
  %25 = getelementptr inbounds %"class.base::WeakPtr.542", %"class.base::WeakPtr.542"* %5, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.base::WeakPtr.542", %"class.base::WeakPtr.542"* %5, i64 0, i32 0, i32 1
  %27 = bitcast %"class.base::OnceCallback.335"* %8 to i8**
  %28 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %8, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.base::OnceCallback.335"* %8 to i64*
  %30 = bitcast %"class.base::OnceCallback.335"** %13 to i64*
  %31 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %8, i64 0, i32 0
  br label %55

32:                                               ; preds = %112, %3
  %33 = bitcast %"struct.net::PrioritizedDispatcher::Limits"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #18
  %34 = getelementptr inbounds %"struct.net::PrioritizedDispatcher::Limits", %"struct.net::PrioritizedDispatcher::Limits"* %9, i64 0, i32 1
  %35 = getelementptr inbounds %"struct.net::PrioritizedDispatcher::Limits", %"struct.net::PrioritizedDispatcher::Limits"* %9, i64 0, i32 1, i32 0, i32 1
  %36 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %37 = bitcast %"struct.net::PrioritizedDispatcher::Limits"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 32, i1 false)
  %38 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %36, align 8
  call void @_ZNK3net21PrioritizedDispatcher9GetLimitsEv(%"struct.net::PrioritizedDispatcher::Limits"* nonnull sret %9, %"class.net::PrioritizedDispatcher"* %38) #18
  %39 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %36, align 8
  %40 = bitcast %"struct.net::PrioritizedDispatcher::Limits"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #18
  %41 = bitcast i64** %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::vector.46"* %34 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = lshr exact i64 %45, 3
  %47 = trunc i64 %46 to i32
  call void @_ZN3net21PrioritizedDispatcher6LimitsC1Ejm(%"struct.net::PrioritizedDispatcher::Limits"* nonnull %10, i32 %47, i64 0) #18
  call void @_ZN3net21PrioritizedDispatcher9SetLimitsERKNS0_6LimitsE(%"class.net::PrioritizedDispatcher"* %39, %"struct.net::PrioritizedDispatcher::Limits"* nonnull dereferenceable(32) %10) #18
  call void @_ZN3net21PrioritizedDispatcher6LimitsD1Ev(%"struct.net::PrioritizedDispatcher::Limits"* nonnull %10) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #18
  %48 = load %"class.base::OnceCallback.335"*, %"class.base::OnceCallback.335"** %12, align 8
  %49 = load %"class.base::OnceCallback.335"*, %"class.base::OnceCallback.335"** %13, align 8
  %50 = icmp eq %"class.base::OnceCallback.335"* %48, %49
  br i1 %50, label %115, label %51

51:                                               ; preds = %32
  %52 = bitcast %"class.base::OnceCallback.335"* %6 to i8*
  %53 = bitcast %"class.base::OnceCallback.335"* %6 to i64*
  %54 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %6, i64 0, i32 0
  br label %134

55:                                               ; preds = %19, %112
  %56 = phi %"class.std::__1::__tree_end_node"* [ %16, %19 ], [ %113, %112 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 33
  %58 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"class.net::HostResolverManager::Job"**
  %59 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %58, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #18, !noalias !21
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #18, !noalias !24
  %60 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %59, i64 0, i32 31, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %60) #18, !noalias !24
  %61 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %59, i64 0, i32 31, i32 0, i32 1
  %62 = load i64, i64* %61, align 8, !noalias !24
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %24, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %62) #18, !noalias !21
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #18, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #18, !noalias !24
  %63 = call i8* @_Znwm(i64 72) #19, !noalias !27
  %64 = bitcast i8* %63 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %64, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager3JobEFvibEJNS_7WeakPtrIS5_EEibEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net19HostResolverManager3JobEFvibEJNS_7WeakPtrIS4_EEibEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManager3JobEFvibEJNS_7WeakPtrIS5_EEibEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE) #18, !noalias !27
  %65 = getelementptr inbounds i8, i8* %63, i64 32
  %66 = bitcast i8* %65 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::HostResolverManager::Job"*, i32, i1)* @_ZN3net19HostResolverManager3Job20AbortInsecureDnsTaskEib to i64), i64 0>, <2 x i64>* %66, align 8, !noalias !27
  %67 = getelementptr inbounds i8, i8* %63, i64 48
  %68 = bitcast i8* %67 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %68, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %25) #18, !noalias !27
  %69 = getelementptr inbounds i8, i8* %63, i64 56
  %70 = bitcast i8* %69 to i64*
  %71 = load i64, i64* %26, align 8, !noalias !27
  store i64 %71, i64* %70, align 8, !noalias !27
  %72 = getelementptr inbounds i8, i8* %63, i64 64
  %73 = bitcast i8* %72 to i32*
  store i32 %1, i32* %73, align 4, !noalias !27
  %74 = getelementptr inbounds i8, i8* %63, i64 68
  store i8 %21, i8* %74, align 1, !noalias !27
  store i8* %63, i8** %27, align 8, !alias.scope !27
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %24) #18, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #18, !noalias !21
  %75 = load %"class.base::OnceCallback.335"*, %"class.base::OnceCallback.335"** %13, align 8
  %76 = load %"class.base::OnceCallback.335"*, %"class.base::OnceCallback.335"** %14, align 8
  %77 = icmp ult %"class.base::OnceCallback.335"* %75, %76
  br i1 %77, label %78, label %83

78:                                               ; preds = %55
  %79 = load i64, i64* %29, align 8
  %80 = bitcast %"class.base::OnceCallback.335"* %75 to i64*
  store i64 %79, i64* %80, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %28, align 8
  %81 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %75, i64 1
  %82 = ptrtoint %"class.base::OnceCallback.335"* %81 to i64
  store i64 %82, i64* %30, align 8
  br label %84

83:                                               ; preds = %55
  call void @_ZNSt3__16vectorIN4base12OnceCallbackIFvvEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.488"* nonnull %7, %"class.base::OnceCallback.335"* nonnull dereferenceable(8) %8) #18
  br label %84

84:                                               ; preds = %78, %83
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 1, i32 0
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node_base"* %86, null
  br i1 %87, label %88, label %96

88:                                               ; preds = %84
  %89 = bitcast %"class.std::__1::__tree_end_node"* %56 to %"class.std::__1::__tree_node_base"*
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 2
  %91 = bitcast %"class.std::__1::__tree_end_node"* %90 to %"class.std::__1::__tree_end_node"**
  %92 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %92, i64 0, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, %89
  br i1 %95, label %112, label %103

96:                                               ; preds = %84, %96
  %97 = phi %"class.std::__1::__tree_node_base"* [ %99, %96 ], [ %86, %84 ]
  %98 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %97, i64 0, i32 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, null
  br i1 %100, label %101, label %96

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %97, i64 0, i32 0
  br label %112

103:                                              ; preds = %88, %103
  %104 = phi %"class.std::__1::__tree_end_node"** [ %107, %103 ], [ %91, %88 ]
  %105 = bitcast %"class.std::__1::__tree_end_node"** %104 to %"class.std::__1::__tree_node_base"**
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %106, i64 0, i32 2
  %108 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %107, align 8
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 0, i32 0
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %110, %106
  br i1 %111, label %112, label %103

112:                                              ; preds = %103, %88, %101
  %113 = phi %"class.std::__1::__tree_end_node"* [ %102, %101 ], [ %92, %88 ], [ %108, %103 ]
  %114 = icmp eq %"class.std::__1::__tree_end_node"* %113, %17
  br i1 %114, label %32, label %55

115:                                              ; preds = %134, %32
  %116 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %36, align 8
  call void @_ZN3net21PrioritizedDispatcher9SetLimitsERKNS0_6LimitsE(%"class.net::PrioritizedDispatcher"* %116, %"struct.net::PrioritizedDispatcher::Limits"* nonnull dereferenceable(32) %9) #18
  call void @_ZN3net21PrioritizedDispatcher6LimitsD1Ev(%"struct.net::PrioritizedDispatcher::Limits"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #18
  %117 = load %"class.base::OnceCallback.335"*, %"class.base::OnceCallback.335"** %12, align 8
  %118 = icmp eq %"class.base::OnceCallback.335"* %117, null
  br i1 %118, label %133, label %119

119:                                              ; preds = %115
  %120 = bitcast %"class.base::OnceCallback.335"* %117 to i8*
  %121 = load %"class.base::OnceCallback.335"*, %"class.base::OnceCallback.335"** %13, align 8
  %122 = icmp eq %"class.base::OnceCallback.335"* %121, %117
  br i1 %122, label %131, label %123

123:                                              ; preds = %119, %123
  %124 = phi %"class.base::OnceCallback.335"* [ %125, %123 ], [ %121, %119 ]
  %125 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %124, i64 -1
  %126 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %125, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %126) #18
  %127 = icmp eq %"class.base::OnceCallback.335"* %125, %117
  br i1 %127, label %128, label %123

128:                                              ; preds = %123
  %129 = bitcast %"class.std::__1::vector.488"* %7 to i8**
  %130 = load i8*, i8** %129, align 8
  br label %131

131:                                              ; preds = %128, %119
  %132 = phi i8* [ %130, %128 ], [ %120, %119 ]
  store %"class.base::OnceCallback.335"* %117, %"class.base::OnceCallback.335"** %13, align 8
  call void @_ZdlPv(i8* %132) #19
  br label %133

133:                                              ; preds = %115, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #18
  ret void

134:                                              ; preds = %51, %134
  %135 = phi %"class.base::OnceCallback.335"* [ %48, %51 ], [ %143, %134 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #18
  %136 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %135, i64 0, i32 0, i32 0, i32 0
  %137 = bitcast %"class.base::OnceCallback.335"* %135 to i64*
  %138 = load i64, i64* %137, align 8
  store i64 %138, i64* %53, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %136, align 8
  %139 = inttoptr i64 %138 to %"class.base::internal::BindStateBase"*
  %140 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %139, i64 0, i32 1
  %141 = bitcast void ()** %140 to void (%"class.base::internal::BindStateBase"*)**
  %142 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %141, align 8
  call void %142(%"class.base::internal::BindStateBase"* %139) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %54) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #18
  %143 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %135, i64 1
  %144 = icmp eq %"class.base::OnceCallback.335"* %143, %49
  br i1 %144, label %115, label %134
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net19HostResolverManager19GetDnsConfigAsValueEv(%"class.base::Value"* noalias sret, %"class.net::HostResolverManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %3, align 8
  %5 = icmp eq %"class.net::DnsClient"* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #18
  br label %16

7:                                                ; preds = %2
  %8 = bitcast %"class.net::DnsClient"* %4 to %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)***
  %9 = load %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)**, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*** %8, align 8
  %10 = getelementptr inbounds %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)** %9, i64 12
  %11 = load %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)** %10, align 8
  %12 = tail call %"struct.net::DnsConfig"* %11(%"class.net::DnsClient"* nonnull %4) #18
  %13 = icmp eq %"struct.net::DnsConfig"* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %7
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #18
  br label %16

15:                                               ; preds = %7
  tail call void @_ZNK3net9DnsConfig7ToValueEv(%"class.base::Value"* sret %0, %"struct.net::DnsConfig"* nonnull %12) #18
  br label %16

16:                                               ; preds = %14, %15, %6
  ret void
}

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #1

declare void @_ZNK3net9DnsConfig7ToValueEv(%"class.base::Value"* sret, %"struct.net::DnsConfig"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager21SetDnsConfigOverridesENS_18DnsConfigOverridesE(%"class.net::HostResolverManager"*, %"struct.net::DnsConfigOverrides"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::DnsConfigOverrides", align 8
  %4 = alloca %"struct.net::DnsConfigOverrides", align 8
  %5 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %6 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %5, align 8
  %7 = icmp eq %"class.net::DnsClient"* %6, null
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %9) #18
  call void @_ZN3net18DnsConfigOverridesC1Ev(%"struct.net::DnsConfigOverrides"* nonnull %3) #18
  %10 = call zeroext i1 @_ZNK3net18DnsConfigOverrideseqERKS0_(%"struct.net::DnsConfigOverrides"* %1, %"struct.net::DnsConfigOverrides"* nonnull dereferenceable(208) %3) #18
  call void @_ZN3net18DnsConfigOverridesD1Ev(%"struct.net::DnsConfigOverrides"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %9) #18
  br i1 %10, label %37, label %11

11:                                               ; preds = %8
  %12 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %5, align 8
  br label %13

13:                                               ; preds = %11, %2
  %14 = phi %"class.net::DnsClient"* [ %12, %11 ], [ %6, %2 ]
  %15 = bitcast %"class.net::DnsClient"* %14 to i1 (%"class.net::DnsClient"*)***
  %16 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %16, i64 2
  %18 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %17, align 8
  %19 = call zeroext i1 %18(%"class.net::DnsClient"* %14) #18
  br i1 %19, label %27, label %20

20:                                               ; preds = %13
  %21 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %5, align 8
  %22 = bitcast %"class.net::DnsClient"* %21 to i1 (%"class.net::DnsClient"*)***
  %23 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %23, i64 3
  %25 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %24, align 8
  %26 = call zeroext i1 %25(%"class.net::DnsClient"* %21) #18
  br label %27

27:                                               ; preds = %20, %13
  %28 = phi i1 [ true, %13 ], [ %26, %20 ]
  %29 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %5, align 8
  call void @_ZN3net18DnsConfigOverridesC1EOS0_(%"struct.net::DnsConfigOverrides"* nonnull %4, %"struct.net::DnsConfigOverrides"* dereferenceable(208) %1) #18
  %30 = bitcast %"class.net::DnsClient"* %29 to i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)***
  %31 = load i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)**, i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)*, i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)** %31, i64 9
  %33 = load i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)*, i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)** %32, align 8
  %34 = call zeroext i1 %33(%"class.net::DnsClient"* %29, %"struct.net::DnsConfigOverrides"* nonnull %4) #18
  call void @_ZN3net18DnsConfigOverridesD1Ev(%"struct.net::DnsConfigOverrides"* nonnull %4) #18
  br i1 %34, label %35, label %37

35:                                               ; preds = %27
  call void @_ZN3net21NetworkChangeNotifier25TriggerNonSystemDnsChangeEv() #18
  call void @_ZN3net19HostResolverManager16InvalidateCachesEb(%"class.net::HostResolverManager"* %0, i1 zeroext false)
  br i1 %28, label %36, label %37

36:                                               ; preds = %35
  call void @_ZN3net19HostResolverManager26UpdateJobsForChangedConfigEv(%"class.net::HostResolverManager"* %0)
  br label %37

37:                                               ; preds = %27, %36, %35, %8
  ret void
}

declare zeroext i1 @_ZNK3net18DnsConfigOverrideseqERKS0_(%"struct.net::DnsConfigOverrides"*, %"struct.net::DnsConfigOverrides"* dereferenceable(208)) local_unnamed_addr #1

declare void @_ZN3net18DnsConfigOverridesC1Ev(%"struct.net::DnsConfigOverrides"*) unnamed_addr #1

declare void @_ZN3net18DnsConfigOverridesC1EOS0_(%"struct.net::DnsConfigOverrides"*, %"struct.net::DnsConfigOverrides"* dereferenceable(208)) unnamed_addr #1

declare void @_ZN3net21NetworkChangeNotifier25TriggerNonSystemDnsChangeEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager16InvalidateCachesEb(%"class.net::HostResolverManager"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 20
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 19
  %7 = bitcast %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #18
  %8 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %11 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %6, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 40, i1 false)
  %13 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %11, align 8, !noalias !32
  %14 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %15 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %14, align 8, !noalias !32
  %16 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %13, %15
  %17 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %17) #18
  br i1 %16, label %18, label %20

18:                                               ; preds = %2
  %19 = bitcast %"class.base::ObserverList"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #18, !alias.scope !32
  br label %34

20:                                               ; preds = %2
  store %"class.base::ObserverList"* %6, %"class.base::ObserverList"** %8, align 8, !alias.scope !32
  %21 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 19, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %17, %"class.base::internal::LinkNodeBase"* %21) #18
  store i64 0, i64* %9, align 8, !alias.scope !32
  %22 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 19, i32 3
  %23 = load i32, i32* %22, align 8, !noalias !32
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.base::internal::CheckedObserverAdapter"** %14 to i64*
  %27 = load i64, i64* %26, align 8, !noalias !32
  %28 = bitcast %"class.base::ObserverList"* %6 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !32
  %30 = sub i64 %27, %29
  %31 = ashr exact i64 %30, 4
  br label %32

32:                                               ; preds = %25, %20
  %33 = phi i64 [ %31, %25 ], [ -1, %20 ]
  store i64 %33, i64* %10, align 8, !alias.scope !32
  call void @_ZN4base12ObserverListIN3net14ResolveContextELb1ELb0ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter"* nonnull %3) #18
  br label %34

34:                                               ; preds = %18, %32
  %35 = bitcast %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #18
  %36 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %38 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %39 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %39) #18
  %41 = bitcast %"class.base::ObserverList"** %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #18, !alias.scope !35
  %42 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  br label %43

43:                                               ; preds = %162, %34
  %44 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %8, align 8
  %45 = icmp eq %"class.base::ObserverList"* %44, null
  br i1 %45, label %61, label %46

46:                                               ; preds = %43
  %47 = load i64, i64* %9, align 8
  %48 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %44, i64 0, i32 0, i32 0, i32 1
  %49 = bitcast %"class.base::internal::CheckedObserverAdapter"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.base::ObserverList"* %44 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 4
  %55 = load i64, i64* %10, align 8
  %56 = icmp ult i64 %54, %55
  %57 = select i1 %56, i64 %54, i64 %55
  %58 = icmp eq i64 %47, %57
  br i1 %58, label %61, label %59

59:                                               ; preds = %46
  %60 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %36, align 8
  br label %77

61:                                               ; preds = %46, %43
  %62 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %36, align 8
  %63 = icmp eq %"class.base::ObserverList"* %62, null
  br i1 %63, label %112, label %64

64:                                               ; preds = %61
  %65 = load i64, i64* %37, align 8
  %66 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %62, i64 0, i32 0, i32 0, i32 1
  %67 = bitcast %"class.base::internal::CheckedObserverAdapter"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.base::ObserverList"* %62 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %68, %70
  %72 = ashr exact i64 %71, 4
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  %75 = select i1 %74, i64 %72, i64 %73
  %76 = icmp eq i64 %65, %75
  br i1 %76, label %86, label %77

77:                                               ; preds = %64, %59
  %78 = phi %"class.base::ObserverList"* [ %60, %59 ], [ %62, %64 ]
  %79 = icmp eq %"class.base::ObserverList"* %44, %78
  %80 = load i64, i64* %9, align 8
  %81 = load i64, i64* %37, align 8
  %82 = icmp eq i64 %80, %81
  %83 = and i1 %79, %82
  br i1 %83, label %84, label %141

84:                                               ; preds = %77
  %85 = icmp eq %"class.base::ObserverList"* %44, null
  br i1 %85, label %112, label %86

86:                                               ; preds = %64, %84
  %87 = phi %"class.base::ObserverList"* [ %44, %84 ], [ %62, %64 ]
  %88 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 1
  %89 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 1, i32 0, i32 0, i32 1
  %90 = bitcast %"class.base::internal::LinkNodeBase"** %89 to %"class.base::LinkNode"**
  %91 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %90, align 8
  %92 = bitcast %"class.base::LinkedList"* %88 to %"class.base::LinkNode"**
  %93 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %92, align 8
  %94 = icmp eq %"class.base::LinkNode"* %91, %93
  br i1 %94, label %95, label %108

95:                                               ; preds = %86
  %96 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %96, align 8
  %98 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 0, i32 0, i32 1
  %99 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %98, align 8
  %100 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN3net14ResolveContextELb1ELb0ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %97, %"class.base::internal::CheckedObserverAdapter"* %99) #18
  %101 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %98, align 8
  %102 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %100, %101
  br i1 %102, label %108, label %103

103:                                              ; preds = %95, %103
  %104 = phi %"class.base::internal::CheckedObserverAdapter"* [ %105, %103 ], [ %101, %95 ]
  %105 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %104, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %105) #18
  %106 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %105, %100
  br i1 %106, label %107, label %103

107:                                              ; preds = %103
  store %"class.base::internal::CheckedObserverAdapter"* %100, %"class.base::internal::CheckedObserverAdapter"** %98, align 8
  br label %108

108:                                              ; preds = %107, %95, %86
  %109 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %36, align 8
  %110 = icmp eq %"class.base::ObserverList"* %109, null
  br i1 %110, label %112, label %111

111:                                              ; preds = %108
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %36, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %39) #18
  br label %112

112:                                              ; preds = %61, %84, %108, %111
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #18
  %113 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %8, align 8
  %114 = icmp eq %"class.base::ObserverList"* %113, null
  br i1 %114, label %140, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 1
  %117 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 1, i32 0, i32 0, i32 1
  %118 = bitcast %"class.base::internal::LinkNodeBase"** %117 to %"class.base::LinkNode"**
  %119 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %118, align 8
  %120 = bitcast %"class.base::LinkedList"* %116 to %"class.base::LinkNode"**
  %121 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %120, align 8
  %122 = icmp eq %"class.base::LinkNode"* %119, %121
  br i1 %122, label %123, label %136

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %124, align 8
  %126 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 0, i32 0, i32 1
  %127 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %126, align 8
  %128 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN3net14ResolveContextELb1ELb0ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %125, %"class.base::internal::CheckedObserverAdapter"* %127) #18
  %129 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %126, align 8
  %130 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %128, %129
  br i1 %130, label %136, label %131

131:                                              ; preds = %123, %131
  %132 = phi %"class.base::internal::CheckedObserverAdapter"* [ %133, %131 ], [ %129, %123 ]
  %133 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %132, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %133) #18
  %134 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %133, %128
  br i1 %134, label %135, label %131

135:                                              ; preds = %131
  store %"class.base::internal::CheckedObserverAdapter"* %128, %"class.base::internal::CheckedObserverAdapter"** %126, align 8
  br label %136

136:                                              ; preds = %135, %123, %115
  %137 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %8, align 8
  %138 = icmp eq %"class.base::ObserverList"* %137, null
  br i1 %138, label %140, label %139

139:                                              ; preds = %136
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %8, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %17) #18
  br label %140

140:                                              ; preds = %112, %136, %139
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #18
  store i8 0, i8* %5, align 8
  ret void

141:                                              ; preds = %77
  %142 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %44, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %142, align 8
  %144 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %143, i64 %80, i32 0, i32 0, i32 0
  %145 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %144) #18
  %146 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %143, i64 %80, i32 0, i32 0, i32 1
  %147 = bitcast i64* %146 to %"class.net::ResolveContext"**
  %148 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %147, align 8
  %149 = select i1 %145, %"class.net::ResolveContext"* %148, %"class.net::ResolveContext"* null
  %150 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %42, align 8
  %151 = icmp eq %"class.net::DnsClient"* %150, null
  br i1 %151, label %158, label %152

152:                                              ; preds = %141
  %153 = bitcast %"class.net::DnsClient"* %150 to %"class.net::DnsSession"* (%"class.net::DnsClient"*)***
  %154 = load %"class.net::DnsSession"* (%"class.net::DnsClient"*)**, %"class.net::DnsSession"* (%"class.net::DnsClient"*)*** %153, align 8
  %155 = getelementptr inbounds %"class.net::DnsSession"* (%"class.net::DnsClient"*)*, %"class.net::DnsSession"* (%"class.net::DnsClient"*)** %154, i64 11
  %156 = load %"class.net::DnsSession"* (%"class.net::DnsClient"*)*, %"class.net::DnsSession"* (%"class.net::DnsClient"*)** %155, align 8
  %157 = call %"class.net::DnsSession"* %156(%"class.net::DnsClient"* nonnull %150) #18
  br label %158

158:                                              ; preds = %141, %152
  %159 = phi %"class.net::DnsSession"* [ %157, %152 ], [ null, %141 ]
  call void @_ZN3net14ResolveContext33InvalidateCachesAndPerSessionDataEPKNS_10DnsSessionEb(%"class.net::ResolveContext"* %149, %"class.net::DnsSession"* %159, i1 zeroext %1) #18
  %160 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %8, align 8
  %161 = icmp eq %"class.base::ObserverList"* %160, null
  br i1 %161, label %162, label %163

162:                                              ; preds = %158, %163
  br label %43

163:                                              ; preds = %158
  %164 = load i64, i64* %9, align 8
  %165 = add i64 %164, 1
  store i64 %165, i64* %9, align 8
  call void @_ZN4base12ObserverListIN3net14ResolveContextELb1ELb0ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter"* nonnull %3) #18
  br label %162
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager26UpdateJobsForChangedConfigEv(%"class.net::HostResolverManager"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::WeakPtr.230", align 8
  %4 = bitcast %"class.base::WeakPtr.230"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #18
  %5 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  %6 = bitcast %"class.base::WeakPtr.230"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18, !noalias !38
  %7 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 21, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %7) #18, !noalias !38
  %8 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 21, i32 0, i32 1
  %9 = load i64, i64* %8, align 8, !noalias !38
  %10 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %3, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %10, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %9) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18, !noalias !38
  call void @_ZN3net19HostResolverManager12AbortAllJobsEb(%"class.net::HostResolverManager"* %0, i1 zeroext false)
  %11 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %3, i64 0, i32 0, i32 0
  %12 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %11) #18
  br i1 %12, label %13, label %19

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %3, i64 0, i32 0, i32 1
  %15 = bitcast i64* %14 to %"class.net::HostResolverManager"**
  %16 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %15, align 8
  %17 = icmp eq %"class.net::HostResolverManager"* %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %13
  call void @_ZN3net19HostResolverManager26TryServingAllJobsFromHostsEv(%"class.net::HostResolverManager"* %0)
  br label %19

19:                                               ; preds = %1, %13, %18
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %10) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager22RegisterResolveContextEPNS_14ResolveContextE(%"class.net::HostResolverManager"*, %"class.net::ResolveContext"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 19
  tail call void @_ZN4base12ObserverListIN3net14ResolveContextELb1ELb0ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS2_(%"class.base::ObserverList"* %3, %"class.net::ResolveContext"* %1)
  %4 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %5 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %4, align 8
  %6 = icmp eq %"class.net::DnsClient"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.net::DnsClient"* %5 to %"class.net::DnsSession"* (%"class.net::DnsClient"*)***
  %9 = load %"class.net::DnsSession"* (%"class.net::DnsClient"*)**, %"class.net::DnsSession"* (%"class.net::DnsClient"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.net::DnsSession"* (%"class.net::DnsClient"*)*, %"class.net::DnsSession"* (%"class.net::DnsClient"*)** %9, i64 11
  %11 = load %"class.net::DnsSession"* (%"class.net::DnsClient"*)*, %"class.net::DnsSession"* (%"class.net::DnsClient"*)** %10, align 8
  %12 = tail call %"class.net::DnsSession"* %11(%"class.net::DnsClient"* nonnull %5) #18
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi %"class.net::DnsSession"* [ %12, %7 ], [ null, %2 ]
  tail call void @_ZN3net14ResolveContext33InvalidateCachesAndPerSessionDataEPKNS_10DnsSessionEb(%"class.net::ResolveContext"* %1, %"class.net::DnsSession"* %14, i1 zeroext false) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN3net14ResolveContextELb1ELb0ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS2_(%"class.base::ObserverList"*, %"class.net::ResolveContext"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::internal::CheckedObserverAdapter", align 8
  %4 = icmp eq %"class.net::ResolveContext"* %1, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %6, align 8
  %8 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %8, align 8
  %10 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %7, %9
  %11 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %1, i64 0, i32 0
  br i1 %10, label %28, label %12

12:                                               ; preds = %5, %21
  %13 = phi %"class.base::internal::CheckedObserverAdapter"* [ %22, %21 ], [ %7, %5 ]
  %14 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %14) #18
  %16 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %13, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast i64* %16 to %"class.base::CheckedObserver"**
  %18 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %17, align 8
  %19 = select i1 %15, %"class.base::CheckedObserver"* %18, %"class.base::CheckedObserver"* null
  %20 = icmp eq %"class.base::CheckedObserver"* %19, %11
  br i1 %20, label %24, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %13, i64 1
  %23 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %22, %9
  br i1 %23, label %24, label %12

24:                                               ; preds = %12, %21
  %25 = phi %"class.base::internal::CheckedObserverAdapter"* [ %9, %21 ], [ %13, %12 ]
  %26 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %8, align 8
  %27 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %25, %26
  br i1 %27, label %28, label %46

28:                                               ; preds = %24, %5, %2
  %29 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = bitcast %"class.base::internal::CheckedObserverAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #18
  %33 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %1, i64 0, i32 0
  call void @_ZN4base8internal22CheckedObserverAdapterC1EPKNS_15CheckedObserverE(%"class.base::internal::CheckedObserverAdapter"* nonnull %3, %"class.base::CheckedObserver"* %33) #18
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %35 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %34, align 8
  %36 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %37 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %36, align 8
  %38 = icmp ult %"class.base::internal::CheckedObserverAdapter"* %35, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %28
  call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %35, %"class.base::internal::CheckedObserverAdapter"* nonnull dereferenceable(16) %3) #18
  %40 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %35, i64 1
  %41 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %40 to i64
  %42 = bitcast %"class.base::internal::CheckedObserverAdapter"** %34 to i64*
  store i64 %41, i64* %42, align 8
  br label %45

43:                                               ; preds = %28
  %44 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.84"* %44, %"class.base::internal::CheckedObserverAdapter"* nonnull dereferenceable(16) %3) #18
  br label %45

45:                                               ; preds = %39, %43
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #18
  br label %46

46:                                               ; preds = %24, %45
  ret void
}

declare void @_ZN3net14ResolveContext33InvalidateCachesAndPerSessionDataEPKNS_10DnsSessionEb(%"class.net::ResolveContext"*, %"class.net::DnsSession"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager24DeregisterResolveContextEPKNS_14ResolveContextE(%"class.net::HostResolverManager"*, %"class.net::ResolveContext"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 19
  tail call void @_ZN4base12ObserverListIN3net14ResolveContextELb1ELb0ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS2_(%"class.base::ObserverList"* %3, %"class.net::ResolveContext"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN3net14ResolveContextELb1ELb0ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS2_(%"class.base::ObserverList"*, %"class.net::ResolveContext"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %5, align 8
  %7 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %9 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %6, %8
  %10 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %1, i64 0, i32 0
  br i1 %9, label %97, label %11

11:                                               ; preds = %2, %20
  %12 = phi %"class.base::internal::CheckedObserverAdapter"* [ %21, %20 ], [ %6, %2 ]
  %13 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #18
  %15 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %12, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast i64* %15 to %"class.base::CheckedObserver"**
  %17 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %16, align 8
  %18 = select i1 %14, %"class.base::CheckedObserver"* %17, %"class.base::CheckedObserver"* null
  %19 = icmp eq %"class.base::CheckedObserver"* %18, %10
  br i1 %19, label %23, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %12, i64 1
  %22 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %21, %8
  br i1 %22, label %23, label %11

23:                                               ; preds = %11, %20
  %24 = phi %"class.base::internal::CheckedObserverAdapter"* [ %8, %20 ], [ %12, %11 ]
  %25 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %26 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %24, %25
  br i1 %26, label %97, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 0
  %33 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %32) #18
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.60, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.61, i64 0, i64 0)) #18
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #18
  br label %37

37:                                               ; preds = %27, %31, %34
  %38 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 0
  %39 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %38) #18
  %40 = bitcast i64* %28 to %"class.base::CheckedObserver"**
  %41 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %40, align 8
  %42 = icmp eq %"class.base::CheckedObserver"* %41, null
  %43 = xor i1 %39, true
  %44 = or i1 %42, %43
  br i1 %44, label %49, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  store i64 %48, i64* %46, align 8
  br label %49

49:                                               ; preds = %45, %37
  %50 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %51 = bitcast %"class.base::internal::LinkNodeBase"** %50 to %"class.base::LinkNode"**
  %52 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %51, align 8
  %53 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 1, i32 0
  %54 = icmp eq %"class.base::LinkNode"* %52, %53
  br i1 %54, label %55, label %78

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 1
  %57 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %58 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %56, %57
  br i1 %58, label %69, label %59

59:                                               ; preds = %55, %59
  %60 = phi %"class.base::internal::CheckedObserverAdapter"* [ %64, %59 ], [ %24, %55 ]
  %61 = phi %"class.base::internal::CheckedObserverAdapter"* [ %63, %59 ], [ %56, %55 ]
  %62 = call dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"* %60, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %61) #18
  %63 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %61, i64 1
  %64 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %60, i64 1
  %65 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %63, %57
  br i1 %65, label %66, label %59

66:                                               ; preds = %59
  %67 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %68 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %67, %64
  br i1 %68, label %76, label %69

69:                                               ; preds = %66, %55
  %70 = phi %"class.base::internal::CheckedObserverAdapter"* [ %64, %66 ], [ %24, %55 ]
  %71 = phi %"class.base::internal::CheckedObserverAdapter"* [ %67, %66 ], [ %56, %55 ]
  br label %72

72:                                               ; preds = %72, %69
  %73 = phi %"class.base::internal::CheckedObserverAdapter"* [ %74, %72 ], [ %71, %69 ]
  %74 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %73, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %74) #18
  %75 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %74, %70
  br i1 %75, label %76, label %72

76:                                               ; preds = %72, %66
  %77 = phi %"class.base::internal::CheckedObserverAdapter"* [ %64, %66 ], [ %70, %72 ]
  store %"class.base::internal::CheckedObserverAdapter"* %77, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  br label %97

78:                                               ; preds = %49
  %79 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #18
  %80 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* nonnull %80) #18
  %81 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::WeakPtr"* %4 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %81, align 8
  %84 = bitcast %"class.base::internal::CheckedObserverAdapter"* %24 to i64*
  %85 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %85, align 8
  store i64 %83, i64* %84, align 8
  %87 = icmp eq %"class.base::internal::WeakReference::Flag"* %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %78
  %89 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw sub i32* %89, i32 1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %94

92:                                               ; preds = %88
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %86) #18
  %93 = bitcast %"class.base::internal::WeakReference::Flag"* %86 to i8*
  call void @_ZdlPv(i8* %93) #19
  br label %94

94:                                               ; preds = %78, %88, %92
  %95 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %28, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %80) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #18
  br label %97

97:                                               ; preds = %2, %76, %94, %23
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net19HostResolverManager22SetTickClockForTestingEPKN4base9TickClockE(%"class.net::HostResolverManager"* nocapture, %"class.base::TickClock"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 18
  store %"class.base::TickClock"* %1, %"class.base::TickClock"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net19HostResolverManager26SetMaxQueuedJobsForTestingEm(%"class.net::HostResolverManager"* nocapture, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 7
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager28SetHaveOnlyLoopbackAddressesEb(%"class.net::HostResolverManager"* nocapture, i1 zeroext) #6 align 2 {
  %3 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 15
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, -3
  %6 = or i32 %4, 2
  %7 = select i1 %1, i32 %6, i32 %5
  store i32 %7, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager30SetMdnsSocketFactoryForTestingENSt3__110unique_ptrINS_17MDnsSocketFactoryENS1_14default_deleteIS3_EEEE(%"class.net::HostResolverManager"* nocapture, %"class.net::MDnsSocketFactory"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.net::MDnsSocketFactory"* %1 to i64
  %4 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.net::MDnsSocketFactory"*, %"class.net::MDnsSocketFactory"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.net::MDnsSocketFactory"* %6, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.net::MDnsSocketFactory"* %6 to void (%"class.net::MDnsSocketFactory"*)***
  %11 = load void (%"class.net::MDnsSocketFactory"*)**, void (%"class.net::MDnsSocketFactory"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.net::MDnsSocketFactory"*)*, void (%"class.net::MDnsSocketFactory"*)** %11, i64 1
  %13 = load void (%"class.net::MDnsSocketFactory"*)*, void (%"class.net::MDnsSocketFactory"*)** %12, align 8
  tail call void %13(%"class.net::MDnsSocketFactory"* nonnull %6) #18
  br label %14

14:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager23SetMdnsClientForTestingENSt3__110unique_ptrINS_10MDnsClientENS1_14default_deleteIS3_EEEE(%"class.net::HostResolverManager"* nocapture, %"class.net::MDnsClient"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.net::MDnsClient"* %1 to i64
  %4 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.net::MDnsClient"*, %"class.net::MDnsClient"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.18"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.net::MDnsClient"* %6, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.net::MDnsClient"* %6 to void (%"class.net::MDnsClient"*)***
  %11 = load void (%"class.net::MDnsClient"*)**, void (%"class.net::MDnsClient"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.net::MDnsClient"*)*, void (%"class.net::MDnsClient"*)** %11, i64 1
  %13 = load void (%"class.net::MDnsClient"*)*, void (%"class.net::MDnsClient"*)** %12, align 8
  tail call void %13(%"class.net::MDnsClient"* nonnull %6) #18
  br label %14

14:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager22SetDnsClientForTestingENSt3__110unique_ptrINS_9DnsClientENS1_14default_deleteIS3_EEEE(%"class.net::HostResolverManager"* nocapture, %"class.net::DnsClient"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.455", align 8
  %4 = alloca %"class.absl::optional.455", align 8
  %5 = alloca %"struct.net::DnsConfigOverrides", align 8
  %6 = ptrtoint %"class.net::DnsClient"* %1 to i64
  %7 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 10
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.71"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %8, align 8
  %10 = icmp eq %"class.net::DnsClient"* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::unique_ptr.71"* %7 to i64*
  store i64 %6, i64* %12, align 8
  br label %58

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.absl::optional.455", %"class.absl::optional.455"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %14) #18
  %15 = bitcast %"class.net::DnsClient"* %1 to void (%"class.absl::optional.455"*, %"class.net::DnsClient"*)***
  %16 = load void (%"class.absl::optional.455"*, %"class.net::DnsClient"*)**, void (%"class.absl::optional.455"*, %"class.net::DnsClient"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.absl::optional.455"*, %"class.net::DnsClient"*)*, void (%"class.absl::optional.455"*, %"class.net::DnsClient"*)** %16, i64 18
  %18 = load void (%"class.absl::optional.455"*, %"class.net::DnsClient"*)*, void (%"class.absl::optional.455"*, %"class.net::DnsClient"*)** %17, align 8
  call void %18(%"class.absl::optional.455"* nonnull sret %3, %"class.net::DnsClient"* %1) #18
  %19 = load i8, i8* %14, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.absl::optional.455", %"class.absl::optional.455"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"* %22) #18
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %14) #18
  br label %39

23:                                               ; preds = %13
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %14) #18
  %24 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %8, align 8
  %25 = bitcast %"class.net::DnsClient"* %24 to void (%"class.absl::optional.455"*, %"class.net::DnsClient"*)***
  %26 = load void (%"class.absl::optional.455"*, %"class.net::DnsClient"*)**, void (%"class.absl::optional.455"*, %"class.net::DnsClient"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.absl::optional.455"*, %"class.net::DnsClient"*)*, void (%"class.absl::optional.455"*, %"class.net::DnsClient"*)** %26, i64 18
  %28 = load void (%"class.absl::optional.455"*, %"class.net::DnsClient"*)*, void (%"class.absl::optional.455"*, %"class.net::DnsClient"*)** %27, align 8
  call void %28(%"class.absl::optional.455"* nonnull sret %4, %"class.net::DnsClient"* %24) #18
  %29 = bitcast %"class.net::DnsClient"* %1 to i1 (%"class.net::DnsClient"*, %"class.absl::optional.455"*)***
  %30 = load i1 (%"class.net::DnsClient"*, %"class.absl::optional.455"*)**, i1 (%"class.net::DnsClient"*, %"class.absl::optional.455"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.net::DnsClient"*, %"class.absl::optional.455"*)*, i1 (%"class.net::DnsClient"*, %"class.absl::optional.455"*)** %30, i64 8
  %32 = load i1 (%"class.net::DnsClient"*, %"class.absl::optional.455"*)*, i1 (%"class.net::DnsClient"*, %"class.absl::optional.455"*)** %31, align 8
  %33 = call zeroext i1 %32(%"class.net::DnsClient"* %1, %"class.absl::optional.455"* nonnull %4) #18
  %34 = getelementptr inbounds %"class.absl::optional.455", %"class.absl::optional.455"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %23
  %38 = getelementptr inbounds %"class.absl::optional.455", %"class.absl::optional.455"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"* %38) #18
  store i8 0, i8* %34, align 8
  br label %39

39:                                               ; preds = %21, %23, %37
  %40 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %8, align 8
  %41 = bitcast %"class.net::DnsClient"* %40 to void (%"struct.net::DnsConfigOverrides"*, %"class.net::DnsClient"*)***
  %42 = load void (%"struct.net::DnsConfigOverrides"*, %"class.net::DnsClient"*)**, void (%"struct.net::DnsConfigOverrides"*, %"class.net::DnsClient"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"struct.net::DnsConfigOverrides"*, %"class.net::DnsClient"*)*, void (%"struct.net::DnsConfigOverrides"*, %"class.net::DnsClient"*)** %42, i64 19
  %44 = load void (%"struct.net::DnsConfigOverrides"*, %"class.net::DnsClient"*)*, void (%"struct.net::DnsConfigOverrides"*, %"class.net::DnsClient"*)** %43, align 8
  call void %44(%"struct.net::DnsConfigOverrides"* nonnull sret %5, %"class.net::DnsClient"* %40) #18
  %45 = bitcast %"class.net::DnsClient"* %1 to i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)***
  %46 = load i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)**, i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)*, i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)** %46, i64 9
  %48 = load i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)*, i1 (%"class.net::DnsClient"*, %"struct.net::DnsConfigOverrides"*)** %47, align 8
  %49 = call zeroext i1 %48(%"class.net::DnsClient"* %1, %"struct.net::DnsConfigOverrides"* nonnull %5) #18
  call void @_ZN3net18DnsConfigOverridesD1Ev(%"struct.net::DnsConfigOverrides"* nonnull %5) #18
  %50 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %8, align 8
  %51 = bitcast %"class.std::__1::unique_ptr.71"* %7 to i64*
  store i64 %6, i64* %51, align 8
  %52 = icmp eq %"class.net::DnsClient"* %50, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %39
  %54 = bitcast %"class.net::DnsClient"* %50 to void (%"class.net::DnsClient"*)***
  %55 = load void (%"class.net::DnsClient"*)**, void (%"class.net::DnsClient"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.net::DnsClient"*)*, void (%"class.net::DnsClient"*)** %55, i64 1
  %57 = load void (%"class.net::DnsClient"*)*, void (%"class.net::DnsClient"*)** %56, align 8
  call void %57(%"class.net::DnsClient"* nonnull %50) #18
  br label %58

58:                                               ; preds = %53, %39, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager32SetLastIPv6ProbeResultForTestingEb(%"class.net::HostResolverManager"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 14
  store i8 %3, i8* %4, align 8
  %5 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 18
  %6 = load %"class.base::TickClock"*, %"class.base::TickClock"** %5, align 8
  %7 = bitcast %"class.base::TickClock"* %6 to i64 (%"class.base::TickClock"*)***
  %8 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %8, i64 2
  %10 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %9, align 8
  %11 = tail call i64 %10(%"class.base::TickClock"* %6) #18
  %12 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 13, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager22SetLastIPv6ProbeResultEb(%"class.net::HostResolverManager"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 14
  store i8 %3, i8* %4, align 8
  %5 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 18
  %6 = load %"class.base::TickClock"*, %"class.base::TickClock"** %5, align 8
  %7 = bitcast %"class.base::TickClock"* %6 to i64 (%"class.base::TickClock"*)***
  %8 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %8, i64 2
  %10 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %9, align 8
  %11 = tail call i64 %10(%"class.base::TickClock"* %6) #18
  %12 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 13, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager23SetTaskRunnerForTestingE13scoped_refptrIN4base10TaskRunnerEE(%"class.net::HostResolverManager"* nocapture, %"class.base::TaskRunner"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::TaskRunner"* %1 to i64
  %4 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 17
  %5 = bitcast %class.scoped_refptr.83* %4 to i64*
  %6 = getelementptr inbounds %class.scoped_refptr.83, %class.scoped_refptr.83* %4, i64 0, i32 0
  %7 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %6, align 8
  store i64 %3, i64* %5, align 8
  %8 = icmp eq %"class.base::TaskRunner"* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::TaskRunner", %"class.base::TaskRunner"* %7, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %10, i64 -2
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %15 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %16) #18
  br label %17

17:                                               ; preds = %14, %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19HostResolverManager7ResolveEPNS0_11RequestImplE(%"class.net::HostResolverManager"*, %"class.net::HostResolverManager::RequestImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::ResolveErrorInfo", align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::deque", align 16
  %8 = alloca %"class.absl::optional.361", align 8
  %9 = alloca %"class.net::HostCache::Entry", align 8
  %10 = alloca %"class.net::HostCache::Entry", align 8
  %11 = alloca %"class.std::__1::deque", align 16
  %12 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #18
  store i32 -1431655766, i32* %4, align 4
  %13 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #18
  store i32 -1431655766, i32* %5, align 4
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #18
  store i32 -1431655766, i32* %6, align 4
  %15 = bitcast %"class.std::__1::deque"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #18
  %16 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 0, i64 48, i1 false) #18
  %19 = getelementptr inbounds %"class.absl::optional.361", %"class.absl::optional.361"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  store i8 0, i8* %19, align 8
  %20 = bitcast %"class.net::HostCache::Entry"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %20) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 200, i1 false)
  %21 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 3, i32 0
  %22 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 4
  %23 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 5, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 5, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 8
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 5, i32 8
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 5, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 2
  %34 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 7
  %35 = load %"class.net::HostCache"*, %"class.net::HostCache"** %34, align 8
  %36 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 6
  %37 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %36, align 8
  call void @_ZN3net19HostResolverManager14ResolveLocallyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19NetworkIsolationKeyENS_12DnsQueryTypeENS_18HostResolverSourceEiNS_15SecureDnsPolicyENS_12HostResolver21ResolveHostParameters10CacheUsageERKNS_16NetLogWithSourceEPNS_9HostCacheEPNS_14ResolveContextEPSD_PiPNS_13SecureDnsModeEPNS1_5dequeINS0_8TaskTypeENS5_ISV_EEEEPN4absl8optionalINSM_14EntryStalenessEEE(%"class.net::HostCache::Entry"* nonnull sret %9, %"class.net::HostResolverManager"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %21, %"class.net::NetworkIsolationKey"* dereferenceable(184) %22, i32 %24, i32 %26, i32 %28, i32 %30, i32 %32, %"class.net::NetLogWithSource"* dereferenceable(24) %33, %"class.net::HostCache"* %35, %"class.net::ResolveContext"* %37, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6, %"class.std::__1::deque"* nonnull %7, %"class.absl::optional.361"* nonnull %8)
  %38 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  switch i32 %39, label %61 [
    i32 -804, label %40
    i32 0, label %46
  ]

40:                                               ; preds = %2
  %41 = load i32, i32* %25, align 4
  %42 = icmp eq i32 %41, 4
  br i1 %42, label %61, label %43

43:                                               ; preds = %40
  %44 = load i64, i64* %18, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %61, label %85

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 5, i32 6
  %48 = load i8, i8* %47, align 2, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %61

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 3, i32 1
  %52 = load i16, i16* %51, align 8
  call void @_ZNK3net9HostCache5Entry19CopyWithDefaultPortEt(%"class.net::HostCache::Entry"* nonnull sret %10, %"class.net::HostCache::Entry"* nonnull %9, i16 zeroext %52) #18
  %53 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  %56 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 2, i32 0
  br i1 %55, label %59, label %57

57:                                               ; preds = %50
  %58 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %56, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %10) #18
  br label %60

59:                                               ; preds = %50
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* %56, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %10) #18
  store i8 1, i8* %53, align 8
  br label %60

60:                                               ; preds = %57, %59
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %10) #18
  call void @_ZN3net19HostResolverManager11RequestImpl23SanitizeDnsAliasResultsEv(%"class.net::HostResolverManager::RequestImpl"* %1)
  br label %61

61:                                               ; preds = %2, %40, %43, %46, %60
  %62 = load i8, i8* %19, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %78, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 5, i32 6
  %66 = load i8, i8* %65, align 2, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %78

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.absl::optional.361", %"class.absl::optional.361"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %70 = bitcast i64* %69 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8
  %72 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  %75 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %76 = bitcast i64* %75 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %76, align 8
  br i1 %74, label %77, label %78

77:                                               ; preds = %68
  store i8 1, i8* %72, align 8
  br label %78

78:                                               ; preds = %61, %77, %68, %64
  %79 = load i32, i32* %38, align 8
  %80 = bitcast %"struct.net::ResolveErrorInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #18
  call void @_ZN3net16ResolveErrorInfoC1Eib(%"struct.net::ResolveErrorInfo"* nonnull %3, i32 %79, i1 zeroext false) #18
  %81 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 18
  %82 = call dereferenceable(8) %"struct.net::ResolveErrorInfo"* @_ZN3net16ResolveErrorInfoaSEOS0_(%"struct.net::ResolveErrorInfo"* %81, %"struct.net::ResolveErrorInfo"* nonnull dereferenceable(8) %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #18
  %83 = load i32, i32* %38, align 8
  %84 = call i32 @_ZN3net12HostResolver15SquashErrorCodeEi(i32 %83) #18
  br label %101

85:                                               ; preds = %43
  %86 = load i32, i32* %4, align 4
  %87 = load i32, i32* %5, align 4
  %88 = load i32, i32* %6, align 4
  %89 = bitcast %"class.std::__1::deque"* %7 to <2 x i64>*
  %90 = load <2 x i64>, <2 x i64>* %89, align 16
  %91 = bitcast %"class.std::__1::deque"* %11 to <2 x i64>*
  store <2 x i64> %90, <2 x i64>* %91, align 16
  %92 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %11, i64 0, i32 0, i32 0, i32 2
  %93 = bitcast i32*** %16 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 16
  %95 = bitcast i32*** %92 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %95, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 0, i64 32, i1 false) #18
  %96 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %11, i64 0, i32 0, i32 1
  %97 = load i64, i64* %17, align 16
  store i64 %97, i64* %96, align 16
  %98 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64 %44, i64* %98, align 8
  %99 = bitcast i64* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %99, i8 0, i64 16, i1 false) #18
  call void @_ZN3net19HostResolverManager17CreateAndStartJobENS_12DnsQueryTypeEiNS_13SecureDnsModeENSt3__15dequeINS0_8TaskTypeENS3_9allocatorIS5_EEEEPNS0_11RequestImplE(%"class.net::HostResolverManager"* %0, i32 %86, i32 %87, i32 %88, %"class.std::__1::deque"* nonnull %11, %"class.net::HostResolverManager::RequestImpl"* %1)
  %100 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %11, i64 0, i32 0
  call void @_ZNSt3__112__deque_baseIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEED2Ev(%"class.std::__1::__deque_base"* nonnull %100) #18
  br label %101

101:                                              ; preds = %85, %78
  %102 = phi i32 [ %84, %78 ], [ -1, %85 ]
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %20) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #18
  %103 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0
  call void @_ZNSt3__112__deque_baseIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEED2Ev(%"class.std::__1::__deque_base"* nonnull %103) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #18
  ret i32 %102
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager14ResolveLocallyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19NetworkIsolationKeyENS_12DnsQueryTypeENS_18HostResolverSourceEiNS_15SecureDnsPolicyENS_12HostResolver21ResolveHostParameters10CacheUsageERKNS_16NetLogWithSourceEPNS_9HostCacheEPNS_14ResolveContextEPSD_PiPNS_13SecureDnsModeEPNS1_5dequeINS0_8TaskTypeENS5_ISV_EEEEPN4absl8optionalINSM_14EntryStalenessEEE(%"class.net::HostCache::Entry"* noalias sret, %"class.net::HostResolverManager"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.net::NetworkIsolationKey"* dereferenceable(184), i32, i32, i32, i32, i32, %"class.net::NetLogWithSource"* dereferenceable(24), %"class.net::HostCache"*, %"class.net::ResolveContext"*, i32* nocapture, i32* nocapture, i32* nocapture, %"class.std::__1::deque"*, %"class.absl::optional.361"* nocapture) local_unnamed_addr #0 align 2 {
  %18 = alloca %"class.base::Value", align 8
  %19 = alloca %"class.base::Value", align 8
  %20 = alloca %"class.net::IPAddress", align 1
  %21 = alloca %"class.base::BasicStringPiece", align 8
  %22 = alloca %"class.base::BasicStringPiece", align 8
  %23 = alloca %"class.base::BasicStringPiece", align 8
  %24 = alloca %"class.absl::optional.297", align 8
  %25 = alloca %"class.absl::optional.297", align 8
  %26 = alloca %"struct.net::HostCache::Key", align 8
  %27 = alloca %"class.absl::optional.297", align 8
  %28 = alloca %"class.absl::optional.297", align 8
  %29 = getelementptr inbounds %"class.absl::optional.361", %"class.absl::optional.361"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %20, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %30) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %30, i8 -86, i64 17, i1 false)
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %20) #18
  %31 = bitcast %"class.base::BasicStringPiece"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #18
  %32 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %21, i64 0, i32 0
  %33 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %40 = select i1 %36, i8* %38, i8* %39
  store i8* %40, i8** %32, align 8
  %41 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %21, i64 0, i32 1
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = zext i8 %35 to i64
  %45 = select i1 %36, i64 %43, i64 %44
  store i64 %45, i64* %41, align 8
  %46 = call zeroext i1 @_ZN3net9IPAddress19AssignFromIPLiteralERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::IPAddress"* nonnull %20, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %21) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #18
  %47 = select i1 %46, %"class.net::IPAddress"* %20, %"class.net::IPAddress"* null
  %48 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %1, i64 0, i32 15
  %49 = load i32, i32* %48, align 4
  %50 = or i32 %49, %6
  store i32 %50, i32* %13, align 4
  store i32 %4, i32* %12, align 4
  %51 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %52 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %51, align 8
  %53 = icmp eq %"class.net::DnsClient"* %52, null
  br i1 %53, label %68, label %54

54:                                               ; preds = %17
  %55 = bitcast %"class.net::DnsClient"* %52 to %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)***
  %56 = load %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)**, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*** %55, align 8
  %57 = getelementptr inbounds %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)** %56, i64 12
  %58 = load %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)** %57, align 8
  %59 = call %"struct.net::DnsConfig"* %58(%"class.net::DnsClient"* nonnull %52) #18
  %60 = icmp eq %"struct.net::DnsConfig"* %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %59, i64 0, i32 12
  %63 = load i8, i8* %62, align 1, !range !2
  %64 = icmp ne i8 %63, 0
  br label %65

65:                                               ; preds = %61, %54
  %66 = phi i1 [ true, %54 ], [ %64, %61 ]
  %67 = load i32, i32* %12, align 4
  br label %68

68:                                               ; preds = %65, %17
  %69 = phi i32 [ %67, %65 ], [ %4, %17 ]
  %70 = phi i1 [ %66, %65 ], [ true, %17 ]
  %71 = icmp eq i32 %69, 0
  br i1 %71, label %72, label %81

72:                                               ; preds = %68
  %73 = xor i1 %70, true
  %74 = icmp eq %"class.net::IPAddress"* %47, null
  %75 = and i1 %74, %73
  br i1 %75, label %76, label %81

76:                                               ; preds = %72
  %77 = call zeroext i1 @_ZN3net19HostResolverManager15IsIPv6ReachableERKNS_16NetLogWithSourceE(%"class.net::HostResolverManager"* %1, %"class.net::NetLogWithSource"* dereferenceable(24) %9) #18
  br i1 %77, label %81, label %78

78:                                               ; preds = %76
  store i32 1, i32* %12, align 4
  %79 = load i32, i32* %13, align 4
  %80 = or i32 %79, 4
  store i32 %80, i32* %13, align 4
  br label %81

81:                                               ; preds = %68, %72, %76, %78
  %82 = load i32, i32* %12, align 4
  %83 = load i32, i32* %13, align 4
  call void @_ZN3net19HostResolverManager18CreateTaskSequenceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_12DnsQueryTypeENS_18HostResolverSourceEiNS_15SecureDnsPolicyENS_12HostResolver21ResolveHostParameters10CacheUsageEPNS_14ResolveContextEPNS_13SecureDnsModeEPNS1_5dequeINS0_8TaskTypeENS5_ISL_EEEE(%"class.net::HostResolverManager"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, i32 %82, i32 %5, i32 %83, i32 %7, i32 %8, %"class.net::ResolveContext"* %11, i32* %14, %"class.std::__1::deque"* %15) #18
  %84 = call zeroext i1 @_ZNK3net9IPAddress7IsValidEv(%"class.net::IPAddress"* nonnull %20) #18
  br i1 %84, label %112, label %85

85:                                               ; preds = %81
  %86 = icmp eq i32 %5, 3
  %87 = bitcast %"class.base::BasicStringPiece"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #18
  %88 = bitcast %"class.base::BasicStringPiece"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #18
  br i1 %86, label %89, label %100

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %22, i64 0, i32 0
  %91 = load i8, i8* %34, align 1
  %92 = icmp slt i8 %91, 0
  %93 = load i8*, i8** %37, align 8
  %94 = select i1 %92, i8* %93, i8* %39
  store i8* %94, i8** %90, align 8
  %95 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %22, i64 0, i32 1
  %96 = load i64, i64* %42, align 8
  %97 = zext i8 %91 to i64
  %98 = select i1 %92, i64 %96, i64 %97
  store i64 %98, i64* %95, align 8
  %99 = call zeroext i1 @_ZN3net28IsValidUnrestrictedDNSDomainERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %22) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #18
  br i1 %99, label %112, label %111

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %23, i64 0, i32 0
  %102 = load i8, i8* %34, align 1
  %103 = icmp slt i8 %102, 0
  %104 = load i8*, i8** %37, align 8
  %105 = select i1 %103, i8* %104, i8* %39
  store i8* %105, i8** %101, align 8
  %106 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %23, i64 0, i32 1
  %107 = load i64, i64* %42, align 8
  %108 = zext i8 %102 to i64
  %109 = select i1 %103, i64 %107, i64 %108
  store i64 %109, i64* %106, align 8
  %110 = call zeroext i1 @_ZN3net16IsValidDNSDomainERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %23) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #18
  br i1 %110, label %112, label %111

111:                                              ; preds = %89, %100
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* %0, i32 -105, i32 0, i8 0, i64 undef) #18
  br label %334

112:                                              ; preds = %89, %100, %81
  %113 = load i32, i32* %13, align 4
  %114 = and i32 %113, 4
  %115 = icmp ne i32 %114, 0
  %116 = load i8, i8* %34, align 1
  %117 = icmp slt i8 %116, 0
  %118 = load i64, i64* %42, align 8
  %119 = zext i8 %116 to i64
  %120 = select i1 %117, i64 %118, i64 %119
  %121 = icmp eq i64 %120, 0
  %122 = icmp ugt i64 %118, 4096
  %123 = and i1 %117, %122
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126

125:                                              ; preds = %112
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* %0, i32 -105, i32 0, i8 0, i64 undef) #18
  br label %334

126:                                              ; preds = %112
  %127 = and i32 %113, 1
  %128 = icmp ne i32 %127, 0
  %129 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %129) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 -86, i64 208, i1 false)
  %130 = load i32, i32* %12, align 4
  call void @_ZN3net19HostResolverManager11ResolveAsIPENS_12DnsQueryTypeEbPKNS_9IPAddressE(%"class.absl::optional.297"* nonnull sret %24, %"class.net::HostResolverManager"* undef, i32 %130, i1 zeroext %128, %"class.net::IPAddress"* %47)
  %131 = load i8, i8* %129, align 8, !range !2
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %126
  %134 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %24, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryC1ERKS1_(%"class.net::HostCache::Entry"* %0, %"class.net::HostCache::Entry"* dereferenceable(200) %134) #18
  br label %328

135:                                              ; preds = %126
  %136 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %136) #18
  %137 = load i8, i8* %34, align 1
  %138 = icmp slt i8 %137, 0
  %139 = load i8*, i8** %37, align 8
  %140 = select i1 %138, i8* %139, i8* %39
  %141 = load i64, i64* %42, align 8
  %142 = zext i8 %137 to i64
  %143 = select i1 %138, i64 %141, i64 %142
  %144 = load i32, i32* %12, align 4
  call void @_ZN3net19HostResolverManager14ServeLocalhostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_12DnsQueryTypeEb(%"class.absl::optional.297"* nonnull sret %25, %"class.net::HostResolverManager"* undef, i8* %140, i64 %143, i32 %144, i1 zeroext %115)
  %145 = load i8, i8* %136, align 8, !range !2
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %155, label %147

147:                                              ; preds = %135
  %148 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %25, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %149 = load i8, i8* %129, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  %151 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %24, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  br i1 %150, label %154, label %152

152:                                              ; preds = %147
  %153 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %151, %"class.net::HostCache::Entry"* dereferenceable(200) %148) #18
  br label %161

154:                                              ; preds = %147
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* %151, %"class.net::HostCache::Entry"* dereferenceable(200) %148) #18
  store i8 1, i8* %129, align 8
  br label %161

155:                                              ; preds = %135
  %156 = load i8, i8* %129, align 8, !range !2
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %136) #18
  br label %171

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %24, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* %160) #18
  store i8 0, i8* %129, align 8
  br label %161

161:                                              ; preds = %152, %154, %159
  %162 = load i8, i8* %136, align 8
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %166, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %25, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* %165) #18
  store i8 0, i8* %136, align 8
  br label %166

166:                                              ; preds = %161, %164
  %167 = load i8, i8* %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %136) #18
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %171, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %24, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryC1ERKS1_(%"class.net::HostCache::Entry"* %0, %"class.net::HostCache::Entry"* dereferenceable(200) %170) #18
  br label %328

171:                                              ; preds = %158, %166
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %173 = load i64, i64* %172, align 8
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %279, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %15, i64 0, i32 0, i32 0, i32 1
  %177 = load i32**, i32*** %176, align 8
  %178 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %15, i64 0, i32 0, i32 1
  %179 = load i64, i64* %178, align 8
  %180 = lshr i64 %179, 10
  %181 = getelementptr inbounds i32*, i32** %177, i64 %180
  %182 = load i32*, i32** %181, align 8
  %183 = and i64 %179, 1023
  %184 = getelementptr inbounds i32, i32* %182, i64 %183
  %185 = load i32, i32* %184, align 4
  %186 = add i32 %185, -4
  %187 = icmp ult i32 %186, 3
  br i1 %187, label %188, label %279

188:                                              ; preds = %175
  %189 = bitcast %"struct.net::HostCache::Key"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %189) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 -86, i64 232, i1 false)
  %190 = load i32, i32* %12, align 4
  %191 = load i32, i32* %13, align 4
  call void @_ZN3net9HostCache3KeyC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_12DnsQueryTypeEiNS_18HostResolverSourceERKNS_19NetworkIsolationKeyE(%"struct.net::HostCache::Key"* nonnull %26, %"class.std::__1::basic_string"* dereferenceable(24) %2, i32 %190, i32 %191, i32 %5, %"class.net::NetworkIsolationKey"* dereferenceable(184) %3) #18
  %192 = load i32**, i32*** %176, align 8
  %193 = load i64, i64* %178, align 8
  %194 = lshr i64 %193, 10
  %195 = getelementptr inbounds i32*, i32** %192, i64 %194
  %196 = load i32*, i32** %195, align 8
  %197 = and i64 %193, 1023
  %198 = getelementptr inbounds i32, i32* %196, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, 6
  %201 = bitcast i32** %192 to i8**
  br i1 %200, label %202, label %207

202:                                              ; preds = %188
  %203 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %26, i64 0, i32 6
  store i8 1, i8* %203, align 8
  %204 = load i32*, i32** %195, align 8
  %205 = getelementptr inbounds i32, i32* %204, i64 %197
  %206 = load i32, i32* %205, align 4
  br label %207

207:                                              ; preds = %202, %188
  %208 = phi i32 [ %206, %202 ], [ %199, %188 ]
  %209 = icmp eq i32 %208, 4
  %210 = load i64, i64* %172, align 8
  %211 = add i64 %210, -1
  store i64 %211, i64* %172, align 8
  %212 = add i64 %193, 1
  store i64 %212, i64* %178, align 8
  %213 = icmp ult i64 %212, 2048
  br i1 %213, label %220, label %214

214:                                              ; preds = %207
  %215 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %215) #19
  %216 = load i32**, i32*** %176, align 8
  %217 = getelementptr inbounds i32*, i32** %216, i64 1
  store i32** %217, i32*** %176, align 8
  %218 = load i64, i64* %178, align 8
  %219 = add i64 %218, -1024
  store i64 %219, i64* %178, align 8
  br label %220

220:                                              ; preds = %207, %214
  %221 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %221) #18
  call void @_ZN3net19HostResolverManager19MaybeServeFromCacheEPNS_9HostCacheERKNS1_3KeyENS_12HostResolver21ResolveHostParameters10CacheUsageEbRKNS_16NetLogWithSourceEPN4absl8optionalINS1_14EntryStalenessEEE(%"class.absl::optional.297"* nonnull sret %27, %"class.net::HostResolverManager"* %1, %"class.net::HostCache"* %10, %"struct.net::HostCache::Key"* nonnull dereferenceable(232) %26, i32 %8, i1 zeroext %209, %"class.net::NetLogWithSource"* dereferenceable(24) %9, %"class.absl::optional.361"* %16)
  %222 = load i8, i8* %221, align 8, !range !2
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %232, label %224

224:                                              ; preds = %220
  %225 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %27, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %226 = load i8, i8* %129, align 8, !range !2
  %227 = icmp eq i8 %226, 0
  %228 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %24, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  br i1 %227, label %231, label %229

229:                                              ; preds = %224
  %230 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %228, %"class.net::HostCache::Entry"* dereferenceable(200) %225) #18
  br label %238

231:                                              ; preds = %224
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* %228, %"class.net::HostCache::Entry"* dereferenceable(200) %225) #18
  store i8 1, i8* %129, align 8
  br label %238

232:                                              ; preds = %220
  %233 = load i8, i8* %129, align 8, !range !2
  %234 = icmp eq i8 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %221) #18
  br label %269

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %24, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* %237) #18
  store i8 0, i8* %129, align 8
  br label %238

238:                                              ; preds = %229, %231, %236
  %239 = load i8, i8* %221, align 8
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %243, label %241

241:                                              ; preds = %238
  %242 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %27, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* %242) #18
  store i8 0, i8* %221, align 8
  br label %243

243:                                              ; preds = %238, %241
  %244 = load i8, i8* %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %221) #18
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %269, label %246

246:                                              ; preds = %243
  %247 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %24, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %248 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %9, i64 0, i32 1
  %249 = load %"class.net::NetLog"*, %"class.net::NetLog"** %248, align 8
  %250 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %249, i64 0, i32 3
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %259, label %253, !prof !41

253:                                              ; preds = %246
  %254 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %9, i64 0, i32 0
  %255 = bitcast %"class.base::Value"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %255) #18
  call void @_ZNK3net9HostCache5Entry12NetLogParamsEv(%"class.base::Value"* nonnull sret %18, %"class.net::HostCache::Entry"* %247) #18
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %249, i32 5, %"struct.net::NetLogSource"* dereferenceable(16) %254, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %18) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %18) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %255) #18
  %256 = load i8, i8* %129, align 8, !range !2
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %258, label %259

258:                                              ; preds = %253
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #20
  unreachable

259:                                              ; preds = %246, %253
  call void @_ZN3net9HostCache5EntryC1ERKS1_(%"class.net::HostCache::Entry"* %0, %"class.net::HostCache::Entry"* dereferenceable(200) %247) #18
  %260 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %26, i64 0, i32 5
  call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %260) #18
  %261 = bitcast %"struct.net::HostCache::Key"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %262 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %261, i64 0, i32 1, i32 0
  %263 = load i8, i8* %262, align 1
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %268

265:                                              ; preds = %259
  %266 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load i8*, i8** %266, align 8
  call void @_ZdlPv(i8* %267) #19
  br label %268

268:                                              ; preds = %259, %265
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %189) #18
  br label %328

269:                                              ; preds = %235, %243
  %270 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %26, i64 0, i32 5
  call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %270) #18
  %271 = bitcast %"struct.net::HostCache::Key"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %272 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %271, i64 0, i32 1, i32 0
  %273 = load i8, i8* %272, align 1
  %274 = icmp slt i8 %273, 0
  br i1 %274, label %275, label %278

275:                                              ; preds = %269
  %276 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = load i8*, i8** %276, align 8
  call void @_ZdlPv(i8* %277) #19
  br label %278

278:                                              ; preds = %269, %275
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %189) #18
  br label %279

279:                                              ; preds = %175, %278, %171
  %280 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %280) #18
  %281 = load i8, i8* %34, align 1
  %282 = icmp slt i8 %281, 0
  %283 = load i8*, i8** %37, align 8
  %284 = select i1 %282, i8* %283, i8* %39
  %285 = load i64, i64* %42, align 8
  %286 = zext i8 %281 to i64
  %287 = select i1 %282, i64 %285, i64 %286
  %288 = load i32, i32* %12, align 4
  call void @_ZN3net19HostResolverManager14ServeFromHostsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_12DnsQueryTypeEbRKNS3_5dequeINS0_8TaskTypeENS3_9allocatorIS9_EEEE(%"class.absl::optional.297"* nonnull sret %28, %"class.net::HostResolverManager"* %1, i8* %284, i64 %287, i32 %288, i1 zeroext %115, %"class.std::__1::deque"* dereferenceable(48) %15)
  %289 = load i8, i8* %280, align 8, !range !2
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %299, label %291

291:                                              ; preds = %279
  %292 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %28, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %293 = load i8, i8* %129, align 8, !range !2
  %294 = icmp eq i8 %293, 0
  %295 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %24, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  br i1 %294, label %298, label %296

296:                                              ; preds = %291
  %297 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %295, %"class.net::HostCache::Entry"* dereferenceable(200) %292) #18
  br label %305

298:                                              ; preds = %291
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* %295, %"class.net::HostCache::Entry"* dereferenceable(200) %292) #18
  store i8 1, i8* %129, align 8
  br label %305

299:                                              ; preds = %279
  %300 = load i8, i8* %129, align 8, !range !2
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %302, label %303

302:                                              ; preds = %299
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %280) #18
  br label %327

303:                                              ; preds = %299
  %304 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %24, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* %304) #18
  store i8 0, i8* %129, align 8
  br label %305

305:                                              ; preds = %296, %298, %303
  %306 = load i8, i8* %280, align 8
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %310, label %308

308:                                              ; preds = %305
  %309 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %28, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* %309) #18
  store i8 0, i8* %280, align 8
  br label %310

310:                                              ; preds = %305, %308
  %311 = load i8, i8* %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %280) #18
  %312 = icmp eq i8 %311, 0
  br i1 %312, label %327, label %313

313:                                              ; preds = %310
  %314 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %24, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %315 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %9, i64 0, i32 1
  %316 = load %"class.net::NetLog"*, %"class.net::NetLog"** %315, align 8
  %317 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %316, i64 0, i32 3
  %318 = load atomic i32, i32* %317 monotonic, align 4
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %326, label %320, !prof !41

320:                                              ; preds = %313
  %321 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %9, i64 0, i32 0
  %322 = bitcast %"class.base::Value"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %322) #18
  call void @_ZNK3net9HostCache5Entry12NetLogParamsEv(%"class.base::Value"* nonnull sret %19, %"class.net::HostCache::Entry"* %314) #18
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %316, i32 6, %"struct.net::NetLogSource"* dereferenceable(16) %321, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %19) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %19) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %322) #18
  %323 = load i8, i8* %129, align 8, !range !2
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %325, label %326

325:                                              ; preds = %320
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #20
  unreachable

326:                                              ; preds = %313, %320
  call void @_ZN3net9HostCache5EntryC1ERKS1_(%"class.net::HostCache::Entry"* %0, %"class.net::HostCache::Entry"* dereferenceable(200) %314) #18
  br label %328

327:                                              ; preds = %302, %310
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* %0, i32 -804, i32 0, i8 0, i64 undef) #18
  br label %328

328:                                              ; preds = %268, %327, %326, %169, %133
  %329 = load i8, i8* %129, align 8, !range !2
  %330 = icmp eq i8 %329, 0
  br i1 %330, label %333, label %331

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %24, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* %332) #18
  store i8 0, i8* %129, align 8
  br label %333

333:                                              ; preds = %328, %331
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %129) #18
  br label %334

334:                                              ; preds = %125, %333, %111
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %20) #18
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %30) #18
  ret void
}

declare void @_ZNK3net9HostCache5Entry19CopyWithDefaultPortEt(%"class.net::HostCache::Entry"* sret, %"class.net::HostCache::Entry"*, i16 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager11RequestImpl23SanitizeDnsAliasResultsEv(%"class.net::HostResolverManager::RequestImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::vector.1", align 16
  %3 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %72, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %72, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %15 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %16 = icmp eq %"class.std::__1::basic_string"* %13, %15
  br i1 %16, label %72, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %72

21:                                               ; preds = %17
  %22 = bitcast %"class.std::__1::vector.1"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #18
  call void @_ZN3net17dns_alias_utility18SanitizeDnsAliasesERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.std::__1::vector.1"* nonnull sret %2, %"class.std::__1::vector.1"* dereferenceable(24) %11) #18
  %23 = load i8, i8* %18, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %24, label %62, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %25, i64 0, i32 0, i32 0
  %28 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %27, align 8
  %29 = icmp eq %"class.std::__1::basic_string"* %28, null
  br i1 %29, label %53, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %32 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %33 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  %34 = icmp eq %"class.std::__1::basic_string"* %33, %28
  br i1 %34, label %50, label %35

35:                                               ; preds = %30, %45
  %36 = phi %"class.std::__1::basic_string"* [ %37, %45 ], [ %33, %30 ]
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 -1
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #19
  br label %45

45:                                               ; preds = %42, %35
  %46 = icmp eq %"class.std::__1::basic_string"* %37, %28
  br i1 %46, label %47, label %35

47:                                               ; preds = %45
  %48 = bitcast %"class.std::__1::vector.1"* %25 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %30
  %51 = phi i8* [ %49, %47 ], [ %31, %30 ]
  store %"class.std::__1::basic_string"* %28, %"class.std::__1::basic_string"** %32, align 8
  call void @_ZdlPv(i8* %51) #19
  %52 = bitcast %"class.std::__1::vector.1"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #18
  br label %53

53:                                               ; preds = %50, %26
  %54 = bitcast %"class.std::__1::vector.1"* %2 to <2 x i64>*
  %55 = load <2 x i64>, <2 x i64>* %54, align 16
  %56 = bitcast %"class.std::__1::vector.1"* %25 to <2 x i64>*
  store <2 x i64> %55, <2 x i64>* %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast %"class.std::__1::basic_string"** %57 to i64*
  %59 = load i64, i64* %58, align 16
  %60 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %61 = bitcast %"class.std::__1::basic_string"** %60 to i64*
  store i64 %59, i64* %61, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 0, i64 24, i1 false) #18
  br label %71

62:                                               ; preds = %21
  %63 = bitcast %"class.std::__1::vector.1"* %2 to <2 x i64>*
  %64 = load <2 x i64>, <2 x i64>* %63, align 16
  %65 = bitcast %"class.std::__1::vector.1"* %25 to <2 x i64>*
  store <2 x i64> %64, <2 x i64>* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %67 = bitcast %"class.std::__1::basic_string"** %66 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %70 = bitcast %"class.std::__1::basic_string"** %69 to i64*
  store i64 %68, i64* %70, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 0, i64 24, i1 false) #18
  store i8 1, i8* %18, align 8
  br label %71

71:                                               ; preds = %62, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #18
  br label %72

72:                                               ; preds = %17, %6, %1, %10, %71
  ret void
}

declare i32 @_ZN3net12HostResolver15SquashErrorCodeEi(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager17CreateAndStartJobENS_12DnsQueryTypeEiNS_13SecureDnsModeENSt3__15dequeINS0_8TaskTypeENS3_9allocatorIS5_EEEEPNS0_11RequestImplE(%"class.net::HostResolverManager"*, i32, i32, i32, %"class.std::__1::deque"* nocapture, %"class.net::HostResolverManager::RequestImpl"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::deque", align 16
  %8 = alloca %"class.base::internal::WeakReference", align 8
  %9 = alloca %"struct.std::__1::__tuple_less.779", align 1
  %10 = alloca %"class.std::__1::tuple.766", align 8
  %11 = alloca %"class.std::__1::tuple.766", align 8
  %12 = alloca %"struct.std::__1::__tuple_less.779", align 1
  %13 = alloca %"class.std::__1::tuple.766", align 8
  %14 = alloca %"class.std::__1::tuple.766", align 8
  %15 = alloca %"struct.net::HostResolverManager::JobKey", align 8
  %16 = alloca %"class.std::__1::unique_ptr.460", align 8
  %17 = alloca %"class.base::WeakPtr.230", align 8
  %18 = bitcast %"struct.net::HostResolverManager::JobKey"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %18) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 232, i1 false)
  %19 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %15, i64 0, i32 0
  %20 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %5, i64 0, i32 3, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %6
  %26 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %26, i64 24, i1 false) #18
  br label %32

27:                                               ; preds = %6
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %5, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %19, i8* %29, i64 %31) #18
  br label %32

32:                                               ; preds = %25, %27
  %33 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %15, i64 0, i32 1
  %34 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %5, i64 0, i32 4
  call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %33, %"class.net::NetworkIsolationKey"* dereferenceable(184) %34) #18
  %35 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %15, i64 0, i32 2
  store i32 %1, i32* %35, align 8
  %36 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %15, i64 0, i32 3
  store i32 %2, i32* %36, align 4
  %37 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %15, i64 0, i32 4
  %38 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %5, i64 0, i32 5, i32 2
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %15, i64 0, i32 5
  store i32 %3, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %15, i64 0, i32 6
  %42 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %5, i64 0, i32 6
  %43 = bitcast %"class.net::ResolveContext"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.net::ResolveContext"** %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.std::__1::__tree_node"**
  %48 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node"* %48, null
  br i1 %49, label %193, label %50

50:                                               ; preds = %32
  %51 = bitcast %"class.std::__1::tuple.766"* %10 to i8*
  %52 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %10, i64 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %10, i64 0, i32 0, i32 1, i32 0
  %54 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %10, i64 0, i32 0, i32 2, i32 0
  %55 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %10, i64 0, i32 0, i32 3, i32 0
  %56 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %10, i64 0, i32 0, i32 4, i32 0
  %57 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %10, i64 0, i32 0, i32 5, i32 0
  %58 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %10, i64 0, i32 0, i32 6, i32 0
  %59 = bitcast %"class.std::__1::tuple.766"* %11 to i8*
  %60 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %11, i64 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %11, i64 0, i32 0, i32 1, i32 0
  %62 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %11, i64 0, i32 0, i32 2, i32 0
  %63 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %11, i64 0, i32 0, i32 3, i32 0
  %64 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %11, i64 0, i32 0, i32 4, i32 0
  %65 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %11, i64 0, i32 0, i32 5, i32 0
  %66 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %11, i64 0, i32 0, i32 6, i32 0
  %67 = getelementptr inbounds %"struct.std::__1::__tuple_less.779", %"struct.std::__1::__tuple_less.779"* %9, i64 0, i32 0
  br label %68

68:                                               ; preds = %123, %50
  %69 = phi i32 [ %124, %123 ], [ %1, %50 ]
  %70 = phi %"class.std::__1::__tree_end_node"* [ %120, %123 ], [ %46, %50 ]
  %71 = phi %"class.std::__1::__tree_node"* [ %121, %123 ], [ %48, %50 ]
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %51) #18
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %71, i64 0, i32 1, i32 0, i32 0, i32 2
  %73 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %71, i64 0, i32 1, i32 0, i32 0, i32 3
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %71, i64 0, i32 1, i32 0, i32 0, i32 4
  %75 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %71, i64 0, i32 1, i32 0, i32 0, i32 5
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %71, i64 0, i32 1, i32 0, i32 0, i32 6
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %71, i64 0, i32 1, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %71, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32* %72, i32** %52, align 8, !alias.scope !42
  store i32* %73, i32** %53, align 8, !alias.scope !42
  store i32* %74, i32** %54, align 8, !alias.scope !42
  store i32* %75, i32** %55, align 8, !alias.scope !42
  store %"class.net::ResolveContext"** %76, %"class.net::ResolveContext"*** %56, align 8, !alias.scope !42
  store %"class.std::__1::basic_string"* %77, %"class.std::__1::basic_string"** %57, align 8, !alias.scope !42
  store %"class.net::NetworkIsolationKey"* %78, %"class.net::NetworkIsolationKey"** %58, align 8, !alias.scope !42
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %59) #18
  store i32* %35, i32** %60, align 8, !alias.scope !45
  store i32* %36, i32** %61, align 8, !alias.scope !45
  store i32* %37, i32** %62, align 8, !alias.scope !45
  store i32* %40, i32** %63, align 8, !alias.scope !45
  store %"class.net::ResolveContext"** %41, %"class.net::ResolveContext"*** %64, align 8, !alias.scope !45
  store %"class.std::__1::basic_string"* %19, %"class.std::__1::basic_string"** %65, align 8, !alias.scope !45
  store %"class.net::NetworkIsolationKey"* %33, %"class.net::NetworkIsolationKey"** %66, align 8, !alias.scope !45
  %79 = load i32, i32* %72, align 4
  %80 = icmp slt i32 %79, %69
  br i1 %80, label %107, label %81

81:                                               ; preds = %68
  %82 = icmp slt i32 %69, %79
  br i1 %82, label %110, label %83

83:                                               ; preds = %81
  %84 = load i32, i32* %73, align 4
  %85 = load i32, i32* %36, align 4
  %86 = icmp slt i32 %84, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %83
  %88 = icmp slt i32 %85, %84
  br i1 %88, label %110, label %89

89:                                               ; preds = %87
  %90 = load i32, i32* %74, align 4
  %91 = load i32, i32* %37, align 8
  %92 = icmp slt i32 %90, %91
  br i1 %92, label %107, label %93

93:                                               ; preds = %89
  %94 = icmp slt i32 %91, %90
  br i1 %94, label %110, label %95

95:                                               ; preds = %93
  %96 = load i32, i32* %75, align 4
  %97 = load i32, i32* %40, align 4
  %98 = icmp slt i32 %96, %97
  br i1 %98, label %107, label %99

99:                                               ; preds = %95
  %100 = icmp slt i32 %97, %96
  br i1 %100, label %110, label %101

101:                                              ; preds = %99
  %102 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %76, align 8
  %103 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %41, align 8
  %104 = icmp ult %"class.net::ResolveContext"* %102, %103
  br i1 %104, label %107, label %105

105:                                              ; preds = %101
  %106 = icmp ult %"class.net::ResolveContext"* %103, %102
  br i1 %106, label %110, label %111

107:                                              ; preds = %68, %83, %89, %95, %101
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %59) #18
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %51) #18
  %108 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %71, i64 0, i32 0, i32 1
  %109 = bitcast %"class.std::__1::__tree_node_base"** %108 to %"class.std::__1::__tree_node"**
  br label %118

110:                                              ; preds = %81, %87, %93, %99, %105
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %59) #18
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %51) #18
  br label %115

111:                                              ; preds = %105
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %67) #18
  %112 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKN3net12DnsQueryTypeERKiRKNS4_18HostResolverSourceERKNS4_13SecureDnsModeERKPNS4_14ResolveContextERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_19NetworkIsolationKeyEEEESV_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.779"* nonnull %9, %"class.std::__1::tuple.766"* nonnull dereferenceable(56) %10, %"class.std::__1::tuple.766"* nonnull dereferenceable(56) %11) #18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %67) #18
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %59) #18
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %51) #18
  %113 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %71, i64 0, i32 0, i32 1
  %114 = bitcast %"class.std::__1::__tree_node_base"** %113 to %"class.std::__1::__tree_node"**
  br i1 %112, label %118, label %115

115:                                              ; preds = %111, %110
  %116 = bitcast %"class.std::__1::__tree_node"* %71 to %"class.std::__1::__tree_node"**
  %117 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %71, i64 0, i32 0, i32 0
  br label %118

118:                                              ; preds = %111, %107, %115
  %119 = phi %"class.std::__1::__tree_node"** [ %116, %115 ], [ %109, %107 ], [ %114, %111 ]
  %120 = phi %"class.std::__1::__tree_end_node"* [ %117, %115 ], [ %70, %107 ], [ %70, %111 ]
  %121 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %119, align 8
  %122 = icmp eq %"class.std::__1::__tree_node"* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %118
  %124 = load i32, i32* %35, align 8
  br label %68

125:                                              ; preds = %118
  %126 = icmp eq %"class.std::__1::__tree_end_node"* %120, %46
  br i1 %126, label %193, label %127

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %120, i64 4
  %129 = bitcast %"class.std::__1::__tree_end_node"* %128 to %"struct.net::HostResolverManager::JobKey"*
  %130 = bitcast %"class.std::__1::tuple.766"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %130) #18
  %131 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %13, i64 0, i32 0, i32 0, i32 0
  store i32* %35, i32** %131, align 8, !alias.scope !48
  %132 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %13, i64 0, i32 0, i32 1, i32 0
  store i32* %36, i32** %132, align 8, !alias.scope !48
  %133 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %13, i64 0, i32 0, i32 2, i32 0
  store i32* %37, i32** %133, align 8, !alias.scope !48
  %134 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %13, i64 0, i32 0, i32 3, i32 0
  store i32* %40, i32** %134, align 8, !alias.scope !48
  %135 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %13, i64 0, i32 0, i32 4, i32 0
  store %"class.net::ResolveContext"** %41, %"class.net::ResolveContext"*** %135, align 8, !alias.scope !48
  %136 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %13, i64 0, i32 0, i32 5, i32 0
  store %"class.std::__1::basic_string"* %19, %"class.std::__1::basic_string"** %136, align 8, !alias.scope !48
  %137 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %13, i64 0, i32 0, i32 6, i32 0
  store %"class.net::NetworkIsolationKey"* %33, %"class.net::NetworkIsolationKey"** %137, align 8, !alias.scope !48
  %138 = bitcast %"class.std::__1::tuple.766"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %138) #18
  %139 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %120, i64 30
  %140 = bitcast %"class.std::__1::__tree_end_node"* %139 to i32*
  %141 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %129, i64 0, i32 3
  %142 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %120, i64 31
  %143 = bitcast %"class.std::__1::__tree_end_node"* %142 to i32*
  %144 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %129, i64 0, i32 5
  %145 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %120, i64 32
  %146 = bitcast %"class.std::__1::__tree_end_node"* %145 to %"class.net::ResolveContext"**
  %147 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %120, i64 7
  %148 = bitcast %"class.std::__1::tuple.766"* %14 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %139, %"class.std::__1::__tree_end_node"** %148, align 8, !alias.scope !51
  %149 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %14, i64 0, i32 0, i32 1, i32 0
  store i32* %141, i32** %149, align 8, !alias.scope !51
  %150 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %14, i64 0, i32 0, i32 2, i32 0
  %151 = bitcast i32** %150 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %142, %"class.std::__1::__tree_end_node"** %151, align 8, !alias.scope !51
  %152 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %14, i64 0, i32 0, i32 3, i32 0
  store i32* %144, i32** %152, align 8, !alias.scope !51
  %153 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %14, i64 0, i32 0, i32 4, i32 0
  %154 = bitcast %"class.net::ResolveContext"*** %153 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %145, %"class.std::__1::__tree_end_node"** %154, align 8, !alias.scope !51
  %155 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %14, i64 0, i32 0, i32 5, i32 0
  %156 = bitcast %"class.std::__1::basic_string"** %155 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %128, %"class.std::__1::__tree_end_node"** %156, align 8, !alias.scope !51
  %157 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %14, i64 0, i32 0, i32 6, i32 0
  %158 = bitcast %"class.net::NetworkIsolationKey"** %157 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %147, %"class.std::__1::__tree_end_node"** %158, align 8, !alias.scope !51
  %159 = load i32, i32* %35, align 8
  %160 = load i32, i32* %140, align 4
  %161 = icmp slt i32 %159, %160
  br i1 %161, label %188, label %162

162:                                              ; preds = %127
  %163 = icmp slt i32 %160, %159
  br i1 %163, label %189, label %164

164:                                              ; preds = %162
  %165 = load i32, i32* %36, align 4
  %166 = load i32, i32* %141, align 4
  %167 = icmp slt i32 %165, %166
  br i1 %167, label %188, label %168

168:                                              ; preds = %164
  %169 = icmp slt i32 %166, %165
  br i1 %169, label %189, label %170

170:                                              ; preds = %168
  %171 = load i32, i32* %37, align 8
  %172 = load i32, i32* %143, align 4
  %173 = icmp slt i32 %171, %172
  br i1 %173, label %188, label %174

174:                                              ; preds = %170
  %175 = icmp slt i32 %172, %171
  br i1 %175, label %189, label %176

176:                                              ; preds = %174
  %177 = load i32, i32* %40, align 4
  %178 = load i32, i32* %144, align 4
  %179 = icmp slt i32 %177, %178
  br i1 %179, label %188, label %180

180:                                              ; preds = %176
  %181 = icmp slt i32 %178, %177
  br i1 %181, label %189, label %182

182:                                              ; preds = %180
  %183 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %41, align 8
  %184 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %146, align 8
  %185 = icmp ult %"class.net::ResolveContext"* %183, %184
  br i1 %185, label %188, label %186

186:                                              ; preds = %182
  %187 = icmp ult %"class.net::ResolveContext"* %184, %183
  br i1 %187, label %189, label %190

188:                                              ; preds = %127, %164, %170, %176, %182
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %138) #18
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %130) #18
  br label %193

189:                                              ; preds = %162, %168, %174, %180, %186
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %138) #18
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %130) #18
  br label %270

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"struct.std::__1::__tuple_less.779", %"struct.std::__1::__tuple_less.779"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %191) #18
  %192 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKN3net12DnsQueryTypeERKiRKNS4_18HostResolverSourceERKNS4_13SecureDnsModeERKPNS4_14ResolveContextERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_19NetworkIsolationKeyEEEESV_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.779"* nonnull %12, %"class.std::__1::tuple.766"* nonnull dereferenceable(56) %13, %"class.std::__1::tuple.766"* nonnull dereferenceable(56) %14) #18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %191) #18
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %138) #18
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %130) #18
  br i1 %192, label %193, label %270

193:                                              ; preds = %188, %190, %125, %32
  %194 = bitcast %"class.std::__1::unique_ptr.460"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %194) #18
  %195 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.net::HostResolverManager::Job"* inttoptr (i64 -6148914691236517206 to %"class.net::HostResolverManager::Job"*), %"class.net::HostResolverManager::Job"** %195, align 8
  %196 = bitcast %"class.base::WeakPtr.230"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %196) #18
  %197 = bitcast %"class.base::internal::WeakReference"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %197) #18, !noalias !54
  %198 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 21, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %8, %"class.base::internal::WeakReferenceOwner"* %198) #18, !noalias !54
  %199 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 21, i32 0, i32 1
  %200 = load i64, i64* %199, align 8, !noalias !54
  %201 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %17, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %201, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %8, i64 %200) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #18, !noalias !54
  %202 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %5, i64 0, i32 5, i32 3
  %203 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %42, align 8
  %204 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %5, i64 0, i32 7
  %205 = load %"class.net::HostCache"*, %"class.net::HostCache"** %204, align 8
  %206 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %5, i64 0, i32 9
  %207 = load i32, i32* %206, align 4
  %208 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %5, i64 0, i32 2
  %209 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 18
  %210 = bitcast %"class.std::__1::deque"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %210)
  %211 = call i8* @_Znwm(i64 616) #19
  %212 = bitcast i8* %211 to %"class.net::HostResolverManager::Job"*
  %213 = load i8, i8* %22, align 1
  %214 = icmp slt i8 %213, 0
  %215 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load i8*, i8** %215, align 8
  %217 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %218 = select i1 %214, i8* %216, i8* %217
  %219 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %5, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %220 = load i64, i64* %219, align 8
  %221 = zext i8 %213 to i64
  %222 = select i1 %214, i64 %220, i64 %221
  %223 = load i32, i32* %38, align 4
  %224 = load i32, i32* %202, align 4
  %225 = bitcast %"class.std::__1::deque"* %4 to <2 x i64>*
  %226 = load <2 x i64>, <2 x i64>* %225, align 8
  %227 = bitcast %"class.std::__1::deque"* %7 to <2 x i64>*
  store <2 x i64> %226, <2 x i64>* %227, align 16
  %228 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 2
  %229 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %4, i64 0, i32 0, i32 0, i32 2
  %230 = bitcast i32*** %229 to <2 x i64>*
  %231 = load <2 x i64>, <2 x i64>* %230, align 8
  %232 = bitcast i32*** %228 to <2 x i64>*
  store <2 x i64> %231, <2 x i64>* %232, align 16
  %233 = bitcast %"class.std::__1::deque"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %233, i8 0, i64 32, i1 false) #18
  %234 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 1
  %235 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %4, i64 0, i32 0, i32 1
  %236 = bitcast i64* %235 to <2 x i64>*
  %237 = load <2 x i64>, <2 x i64>* %236, align 8
  %238 = bitcast i64* %234 to <2 x i64>*
  store <2 x i64> %237, <2 x i64>* %238, align 16
  %239 = bitcast i64* %235 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %239, i8 0, i64 16, i1 false) #18
  %240 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 17, i32 0
  %241 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %240, align 8
  %242 = ptrtoint %"class.base::TaskRunner"* %241 to i64
  %243 = icmp eq %"class.base::TaskRunner"* %241, null
  br i1 %243, label %247, label %244

244:                                              ; preds = %193
  %245 = getelementptr inbounds %"class.base::TaskRunner", %"class.base::TaskRunner"* %241, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = atomicrmw add i32* %245, i32 1 monotonic
  br label %247

247:                                              ; preds = %193, %244
  %248 = load %"class.base::TickClock"*, %"class.base::TickClock"** %209, align 8
  call void @_ZN3net19HostResolverManager3JobC2ERKN4base7WeakPtrIS0_EENS2_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_19NetworkIsolationKeyENS_12DnsQueryTypeEiNS_18HostResolverSourceENS_12HostResolver21ResolveHostParameters10CacheUsageENS_13SecureDnsModeEPNS_14ResolveContextEPNS_9HostCacheENS8_5dequeINS0_8TaskTypeENS8_9allocatorISQ_EEEENS_15RequestPriorityE13scoped_refptrINS2_10TaskRunnerEERKNS_16NetLogWithSourceEPKNS2_9TickClockE(%"class.net::HostResolverManager::Job"* nonnull %212, %"class.base::WeakPtr.230"* nonnull dereferenceable(16) %17, i8* %218, i64 %222, %"class.net::NetworkIsolationKey"* dereferenceable(184) %34, i32 %1, i32 %2, i32 %223, i32 %224, i32 %3, %"class.net::ResolveContext"* %203, %"class.net::HostCache"* %205, %"class.std::__1::deque"* nonnull %7, i32 %207, i64 %242, %"class.net::NetLogWithSource"* dereferenceable(24) %208, %"class.base::TickClock"* %248) #18
  %249 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0
  call void @_ZNSt3__112__deque_baseIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEED2Ev(%"class.std::__1::__deque_base"* nonnull %249) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %210)
  %250 = bitcast %"class.std::__1::unique_ptr.460"* %16 to i8**
  store i8* %211, i8** %250, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %201) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %196) #18
  %251 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 5, i32 0
  %252 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net19HostResolverManager6JobKeyENS_10unique_ptrINS3_3JobENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS4_JS4_S9_EEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %251, %"struct.net::HostResolverManager::JobKey"* nonnull dereferenceable(232) %15, %"struct.net::HostResolverManager::JobKey"* nonnull dereferenceable(232) %15, %"class.std::__1::unique_ptr.460"* nonnull dereferenceable(8) %16) #18
  %253 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %252, 0
  %254 = ptrtoint %"class.std::__1::__tree_end_node"* %253 to i64
  %255 = getelementptr inbounds i8, i8* %211, i64 576
  %256 = load i8, i8* %255, align 8, !range !2
  %257 = icmp eq i8 %256, 0
  %258 = getelementptr inbounds i8, i8* %211, i64 584
  %259 = bitcast i8* %258 to i64*
  store i64 %254, i64* %259, align 8
  br i1 %257, label %260, label %261

260:                                              ; preds = %247
  store i8 1, i8* %255, align 8
  br label %261

261:                                              ; preds = %247, %260
  call void @_ZN3net19HostResolverManager3Job10AddRequestEPNS0_11RequestImplE(%"class.net::HostResolverManager::Job"* nonnull %212, %"class.net::HostResolverManager::RequestImpl"* %5)
  call void @_ZN3net19HostResolverManager3Job11RunNextTaskEv(%"class.net::HostResolverManager::Job"* nonnull %212)
  %262 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %195, align 8
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %195, align 8
  %263 = icmp eq %"class.net::HostResolverManager::Job"* %262, null
  br i1 %263, label %269, label %264

264:                                              ; preds = %261
  %265 = bitcast %"class.net::HostResolverManager::Job"* %262 to void (%"class.net::HostResolverManager::Job"*)***
  %266 = load void (%"class.net::HostResolverManager::Job"*)**, void (%"class.net::HostResolverManager::Job"*)*** %265, align 8
  %267 = getelementptr inbounds void (%"class.net::HostResolverManager::Job"*)*, void (%"class.net::HostResolverManager::Job"*)** %266, i64 1
  %268 = load void (%"class.net::HostResolverManager::Job"*)*, void (%"class.net::HostResolverManager::Job"*)** %267, align 8
  call void %268(%"class.net::HostResolverManager::Job"* nonnull %262) #18
  br label %269

269:                                              ; preds = %261, %264
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #18
  br label %274

270:                                              ; preds = %189, %190
  %271 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %120, i64 33
  %272 = bitcast %"class.std::__1::__tree_end_node"* %271 to %"class.net::HostResolverManager::Job"**
  %273 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %272, align 8
  call void @_ZN3net19HostResolverManager3Job10AddRequestEPNS0_11RequestImplE(%"class.net::HostResolverManager::Job"* %273, %"class.net::HostResolverManager::RequestImpl"* %5)
  br label %274

274:                                              ; preds = %270, %269
  call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %33) #18
  %275 = bitcast %"struct.net::HostResolverManager::JobKey"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %276 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %275, i64 0, i32 1, i32 0
  %277 = load i8, i8* %276, align 1
  %278 = icmp slt i8 %277, 0
  br i1 %278, label %279, label %282

279:                                              ; preds = %274
  %280 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load i8*, i8** %280, align 8
  call void @_ZdlPv(i8* %281) #19
  br label %282

282:                                              ; preds = %274, %279
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %18) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEED2Ev(%"class.std::__1::__deque_base"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 1
  %3 = load i32**, i32*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 10
  %7 = getelementptr inbounds i32*, i32** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 2
  %9 = load i32**, i32*** %8, align 8
  %10 = icmp eq i32** %9, %3
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load i32*, i32** %7, align 8
  %17 = and i64 %5, 1023
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 10
  %23 = getelementptr inbounds i32*, i32** %3, i64 %22
  %24 = load i32*, i32** %23, align 8
  %25 = and i64 %21, 1023
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  %27 = icmp eq i32* %26, %18
  br i1 %27, label %28, label %34

28:                                               ; preds = %47, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %47 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast i32*** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %52, label %65

34:                                               ; preds = %15, %47
  %35 = phi i32* [ %50, %47 ], [ %18, %15 ]
  %36 = phi i32** [ %49, %47 ], [ %7, %15 ]
  %37 = getelementptr inbounds i32, i32* %35, i64 1
  %38 = ptrtoint i32* %37 to i64
  %39 = bitcast i32** %36 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 4096
  br i1 %42, label %43, label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds i32*, i32** %36, i64 1
  %45 = bitcast i32** %44 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %43, %34
  %48 = phi i64 [ %46, %43 ], [ %38, %34 ]
  %49 = phi i32** [ %44, %43 ], [ %36, %34 ]
  %50 = inttoptr i64 %48 to i32*
  %51 = icmp eq i32* %26, %50
  br i1 %51, label %28, label %34

52:                                               ; preds = %28, %52
  %53 = phi i32** [ %57, %52 ], [ %3, %28 ]
  %54 = bitcast i32** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #19
  %56 = load i32**, i32*** %2, align 8
  %57 = getelementptr inbounds i32*, i32** %56, i64 1
  store i32** %57, i32*** %2, align 8
  %58 = load i64, i64* %30, align 8
  %59 = ptrtoint i32** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, 2
  br i1 %62, label %52, label %63

63:                                               ; preds = %52
  %64 = inttoptr i64 %58 to i32**
  br label %65

65:                                               ; preds = %63, %28
  %66 = phi i32** [ %9, %28 ], [ %64, %63 ]
  %67 = phi i32** [ %3, %28 ], [ %57, %63 ]
  %68 = phi i64 [ %32, %28 ], [ %61, %63 ]
  switch i64 %68, label %72 [
    i64 1, label %70
    i64 2, label %69
  ]

69:                                               ; preds = %65
  br label %70

70:                                               ; preds = %65, %69
  %71 = phi i64 [ 1024, %69 ], [ 512, %65 ]
  store i64 %71, i64* %4, align 8
  br label %72

72:                                               ; preds = %70, %65
  %73 = icmp eq i32** %67, %66
  br i1 %73, label %83, label %74

74:                                               ; preds = %72, %74
  %75 = phi i32** [ %78, %74 ], [ %67, %72 ]
  %76 = bitcast i32** %75 to i8**
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZdlPv(i8* %77) #19
  %78 = getelementptr inbounds i32*, i32** %75, i64 1
  %79 = icmp eq i32** %78, %66
  br i1 %79, label %80, label %74

80:                                               ; preds = %74
  %81 = load i32**, i32*** %2, align 8
  %82 = load i32**, i32*** %8, align 8
  br label %83

83:                                               ; preds = %80, %72
  %84 = phi i32** [ %82, %80 ], [ %66, %72 ]
  %85 = phi i32** [ %81, %80 ], [ %66, %72 ]
  %86 = icmp eq i32** %84, %85
  br i1 %86, label %95, label %87

87:                                               ; preds = %83
  %88 = ptrtoint i32** %85 to i64
  %89 = getelementptr i32*, i32** %84, i64 -1
  %90 = ptrtoint i32** %89 to i64
  %91 = sub i64 %90, %88
  %92 = lshr i64 %91, 3
  %93 = xor i64 %92, -1
  %94 = getelementptr i32*, i32** %84, i64 %93
  store i32** %94, i32*** %8, align 8
  br label %95

95:                                               ; preds = %87, %83
  %96 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 0
  %97 = load i32**, i32*** %96, align 8
  %98 = icmp eq i32** %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %95
  %100 = bitcast i32** %97 to i8*
  tail call void @_ZdlPv(i8* %100) #19
  br label %101

101:                                              ; preds = %95, %99
  ret void
}

declare void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"*) unnamed_addr #1

declare zeroext i1 @_ZN3net9IPAddress19AssignFromIPLiteralERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::IPAddress"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager32GetEffectiveParametersForRequestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_12DnsQueryTypeENS_18HostResolverSourceEiNS_15SecureDnsPolicyENS_12HostResolver21ResolveHostParameters10CacheUsageEPKNS_9IPAddressERKNS_16NetLogWithSourceEPNS_14ResolveContextEPSA_PiPNS_13SecureDnsModeEPNS1_5dequeINS0_8TaskTypeENS5_IST_EEEE(%"class.net::HostResolverManager"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32, i32, i32, %"class.net::IPAddress"* readnone, %"class.net::NetLogWithSource"* dereferenceable(24), %"class.net::ResolveContext"*, i32* nocapture, i32* nocapture, i32* nocapture, %"class.std::__1::deque"*) local_unnamed_addr #0 align 2 {
  %15 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 15
  %16 = load i32, i32* %15, align 4
  %17 = or i32 %16, %4
  store i32 %17, i32* %11, align 4
  store i32 %2, i32* %10, align 4
  %18 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %19 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %18, align 8
  %20 = icmp eq %"class.net::DnsClient"* %19, null
  br i1 %20, label %35, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.net::DnsClient"* %19 to %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)***
  %23 = load %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)**, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*** %22, align 8
  %24 = getelementptr inbounds %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)** %23, i64 12
  %25 = load %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)** %24, align 8
  %26 = tail call %"struct.net::DnsConfig"* %25(%"class.net::DnsClient"* nonnull %19) #18
  %27 = icmp eq %"struct.net::DnsConfig"* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %26, i64 0, i32 12
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = icmp ne i8 %30, 0
  br label %32

32:                                               ; preds = %21, %28
  %33 = phi i1 [ true, %21 ], [ %31, %28 ]
  %34 = load i32, i32* %10, align 4
  br label %35

35:                                               ; preds = %14, %32
  %36 = phi i32 [ %34, %32 ], [ %2, %14 ]
  %37 = phi i1 [ %33, %32 ], [ true, %14 ]
  %38 = icmp eq i32 %36, 0
  br i1 %38, label %39, label %48

39:                                               ; preds = %35
  %40 = xor i1 %37, true
  %41 = icmp eq %"class.net::IPAddress"* %7, null
  %42 = and i1 %41, %40
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = tail call zeroext i1 @_ZN3net19HostResolverManager15IsIPv6ReachableERKNS_16NetLogWithSourceE(%"class.net::HostResolverManager"* %0, %"class.net::NetLogWithSource"* dereferenceable(24) %8)
  br i1 %44, label %48, label %45

45:                                               ; preds = %43
  store i32 1, i32* %10, align 4
  %46 = load i32, i32* %11, align 4
  %47 = or i32 %46, 4
  store i32 %47, i32* %11, align 4
  br label %48

48:                                               ; preds = %39, %45, %43, %35
  %49 = load i32, i32* %10, align 4
  %50 = load i32, i32* %11, align 4
  tail call void @_ZN3net19HostResolverManager18CreateTaskSequenceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_12DnsQueryTypeENS_18HostResolverSourceEiNS_15SecureDnsPolicyENS_12HostResolver21ResolveHostParameters10CacheUsageEPNS_14ResolveContextEPNS_13SecureDnsModeEPNS1_5dequeINS0_8TaskTypeENS5_ISL_EEEE(%"class.net::HostResolverManager"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i32 %49, i32 %3, i32 %50, i32 %5, i32 %6, %"class.net::ResolveContext"* %9, i32* %12, %"class.std::__1::deque"* %13)
  ret void
}

declare zeroext i1 @_ZNK3net9IPAddress7IsValidEv(%"class.net::IPAddress"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net28IsValidUnrestrictedDNSDomainERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZN3net16IsValidDNSDomainERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"*, i32, i32, i8, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager11ResolveAsIPENS_12DnsQueryTypeEbPKNS_9IPAddressE(%"class.absl::optional.297"* noalias sret, %"class.net::HostResolverManager"* nocapture readnone, i32, i1 zeroext, %"class.net::IPAddress"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.net::AddressList", align 8
  %7 = alloca %"class.net::HostCache::Entry", align 8
  %8 = alloca %"class.net::AddressList", align 8
  %9 = alloca %"class.net::HostCache::Entry", align 8
  %10 = icmp eq %"class.net::IPAddress"* %4, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = tail call zeroext i1 @_ZN3net13IsAddressTypeENS_12DnsQueryTypeE(i32 %2) #18
  br i1 %12, label %17, label %13

13:                                               ; preds = %11, %5
  %14 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %16 = bitcast %union.anon.301* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 200, i1 false) #18
  br label %52

17:                                               ; preds = %11
  %18 = tail call i32 @_ZN3net16GetAddressFamilyERKNS_9IPAddressE(%"class.net::IPAddress"* nonnull dereferenceable(17) %4) #18
  %19 = icmp eq i32 %2, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %17
  %21 = tail call i32 @_ZN3net27AddressFamilyToDnsQueryTypeENS_13AddressFamilyE(i32 %18) #18
  %22 = icmp eq i32 %21, %2
  br i1 %22, label %27, label %23

23:                                               ; preds = %20
  %24 = bitcast %"class.net::HostCache::Entry"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %24) #18
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* nonnull %7, i32 -105, i32 0, i8 0, i64 undef) #18
  %25 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %25, align 8
  %26 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* %26, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %7) #18
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %24) #18
  br label %52

27:                                               ; preds = %20, %17
  %28 = bitcast %"class.net::AddressList"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %28) #18
  %29 = bitcast %"class.net::AddressList"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 48, i1 false)
  call void @_ZN3net11AddressList19CreateFromIPAddressERKNS_9IPAddressEt(%"class.net::AddressList"* nonnull sret %8, %"class.net::IPAddress"* nonnull dereferenceable(17) %4, i16 zeroext 0) #18
  br i1 %3, label %30, label %31

30:                                               ; preds = %27
  call void @_ZN3net11AddressList23SetDefaultCanonicalNameEv(%"class.net::AddressList"* nonnull %8) #18
  br label %31

31:                                               ; preds = %30, %27
  %32 = bitcast %"class.net::HostCache::Entry"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %32) #18
  %33 = bitcast %"class.net::AddressList"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %33) #18
  %34 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %9, i64 0, i32 0
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %9, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %9, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %9, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %40 = bitcast %union.anon.237* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 49, i1 false) #18
  %41 = bitcast %union.anon.105* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 25, i1 false) #18
  %42 = bitcast %union.anon.242* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 25, i1 false) #18
  %43 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %9, i64 0, i32 9, i32 0
  %44 = bitcast %union.anon.254* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 29, i1 false)
  %45 = bitcast i64* %43 to <2 x i64>*
  store <2 x i64> <i64 -1000000, i64 0>, <2 x i64>* %45, align 8
  %46 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %9, i64 0, i32 11
  store i32 -1, i32* %46, align 8
  %47 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %9, i64 0, i32 12, i32 0
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %9, i64 0, i32 13, i32 0
  store i32 0, i32* %48, align 8
  call void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"* nonnull %6, %"class.net::AddressList"* nonnull dereferenceable(48) %8) #18
  %49 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"* %49, %"class.net::AddressList"* nonnull dereferenceable(48) %6) #18
  store i8 1, i8* %35, align 8
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %33) #18
  %50 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %50, align 8
  %51 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* %51, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %9) #18
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %32) #18
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %28) #18
  br label %52

52:                                               ; preds = %23, %31, %13
  ret void
}

declare void @_ZN3net9HostCache5EntryC1ERKS1_(%"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"* dereferenceable(200)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager14ServeLocalhostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_12DnsQueryTypeEb(%"class.absl::optional.297"* noalias sret, %"class.net::HostResolverManager"* nocapture readnone, i8*, i64, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.net::AddressList", align 8
  %8 = alloca %"class.net::AddressList", align 8
  %9 = alloca %"class.net::AddressList", align 8
  %10 = alloca %"class.net::HostCache::Entry", align 8
  %11 = bitcast %"class.net::AddressList"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #18
  %12 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %8, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %8, i64 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.net::AddressList"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false)
  call void @_ZN3net11AddressListC1Ev(%"class.net::AddressList"* nonnull %8) #18
  %15 = call zeroext i1 @_ZN3net13IsAddressTypeENS_12DnsQueryTypeE(i32 %4) #18
  br i1 %15, label %16, label %18

16:                                               ; preds = %6
  %17 = call zeroext i1 @_ZN3net20ResolveLocalHostnameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS_11AddressListE(i8* %2, i64 %3, %"class.net::AddressList"* nonnull %8)
  br i1 %17, label %22, label %18

18:                                               ; preds = %16, %6
  %19 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %21 = bitcast %union.anon.301* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 200, i1 false) #18
  br label %79

22:                                               ; preds = %16
  %23 = bitcast %"class.net::AddressList"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %23) #18
  %24 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %9, i64 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %9, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast %"class.net::AddressList"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 48, i1 false)
  call void @_ZN3net11AddressListC1Ev(%"class.net::AddressList"* nonnull %9) #18
  %27 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %12, align 8
  %28 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %13, align 8
  %29 = icmp eq %"class.net::IPEndPoint"* %27, %28
  br i1 %29, label %36, label %30

30:                                               ; preds = %22
  %31 = icmp eq i32 %4, 0
  %32 = icmp ne i32 %4, 1
  %33 = xor i1 %5, true
  %34 = bitcast %"class.net::IPEndPoint"** %24 to i64*
  %35 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %9, i64 0, i32 0
  br label %57

36:                                               ; preds = %76, %22
  %37 = bitcast %"class.net::HostCache::Entry"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %37) #18
  %38 = bitcast %"class.net::AddressList"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %38) #18
  %39 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %10, i64 0, i32 0
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %10, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %10, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %10, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %45 = bitcast %union.anon.237* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 49, i1 false) #18
  %46 = bitcast %union.anon.105* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 25, i1 false) #18
  %47 = bitcast %union.anon.242* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 25, i1 false) #18
  %48 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %10, i64 0, i32 9, i32 0
  %49 = bitcast %union.anon.254* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 29, i1 false)
  %50 = bitcast i64* %48 to <2 x i64>*
  store <2 x i64> <i64 -1000000, i64 0>, <2 x i64>* %50, align 8
  %51 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %10, i64 0, i32 11
  store i32 -1, i32* %51, align 8
  %52 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %10, i64 0, i32 12, i32 0
  store i32 0, i32* %52, align 4
  %53 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %10, i64 0, i32 13, i32 0
  store i32 0, i32* %53, align 8
  call void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"* nonnull %7, %"class.net::AddressList"* nonnull dereferenceable(48) %9) #18
  %54 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"* %54, %"class.net::AddressList"* nonnull dereferenceable(48) %7) #18
  store i8 1, i8* %40, align 8
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %38) #18
  %55 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %55, align 8
  %56 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* %56, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %10) #18
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %10) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %37) #18
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %23) #18
  br label %79

57:                                               ; preds = %30, %76
  %58 = phi %"class.net::IPEndPoint"* [ %27, %30 ], [ %77, %76 ]
  br i1 %31, label %68, label %59

59:                                               ; preds = %57
  %60 = call i32 @_ZN3net12HostResolver27DnsQueryTypeToAddressFamilyENS_12DnsQueryTypeE(i32 %4) #18
  %61 = call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %58) #18
  %62 = icmp eq i32 %60, %61
  br i1 %62, label %68, label %63

63:                                               ; preds = %59
  %64 = call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %58) #18
  %65 = icmp ne i32 %64, 2
  %66 = or i1 %32, %65
  %67 = or i1 %66, %33
  br i1 %67, label %76, label %68

68:                                               ; preds = %63, %59, %57
  %69 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %24, align 8
  %70 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %25, align 8
  %71 = icmp eq %"class.net::IPEndPoint"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %68
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %69, %"class.net::IPEndPoint"* dereferenceable(20) %58) #18
  %73 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %69, i64 1
  %74 = ptrtoint %"class.net::IPEndPoint"* %73 to i64
  store i64 %74, i64* %34, align 8
  br label %76

75:                                               ; preds = %68
  call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* nonnull %35, %"class.net::IPEndPoint"* dereferenceable(20) %58) #18
  br label %76

76:                                               ; preds = %75, %72, %63
  %77 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %58, i64 1
  %78 = icmp eq %"class.net::IPEndPoint"* %77, %28
  br i1 %78, label %36, label %57

79:                                               ; preds = %36, %18
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #18
  ret void
}

declare void @_ZN3net9HostCache3KeyC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_12DnsQueryTypeEiNS_18HostResolverSourceERKNS_19NetworkIsolationKeyE(%"struct.net::HostCache::Key"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32, %"class.net::NetworkIsolationKey"* dereferenceable(184)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager19MaybeServeFromCacheEPNS_9HostCacheERKNS1_3KeyENS_12HostResolver21ResolveHostParameters10CacheUsageEbRKNS_16NetLogWithSourceEPN4absl8optionalINS1_14EntryStalenessEEE(%"class.absl::optional.297"* noalias sret, %"class.net::HostResolverManager"* nocapture readonly, %"class.net::HostCache"*, %"struct.net::HostCache::Key"* dereferenceable(232), i32, i1 zeroext, %"class.net::NetLogWithSource"* dereferenceable(24), %"class.absl::optional.361"* nocapture) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.base::Value", align 8
  %10 = alloca %"struct.net::HostCache::Key", align 8
  %11 = alloca <2 x i64>, align 16
  %12 = bitcast <2 x i64>* %11 to %"struct.net::HostCache::EntryStaleness"*
  %13 = getelementptr inbounds %"class.absl::optional.361", %"class.absl::optional.361"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %13, align 8
  %14 = icmp eq %"class.net::HostCache"* %2, null
  br i1 %14, label %15, label %19

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = bitcast %union.anon.301* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 200, i1 false) #18
  br label %84

19:                                               ; preds = %8
  %20 = icmp eq i32 %4, 2
  br i1 %20, label %21, label %25

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %24 = bitcast %union.anon.301* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 200, i1 false) #18
  br label %84

25:                                               ; preds = %19
  %26 = bitcast %"struct.net::HostCache::Key"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %26) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 232, i1 false)
  call void @_ZN3net9HostCache3KeyC1ERKS1_(%"struct.net::HostCache::Key"* nonnull %10, %"struct.net::HostCache::Key"* dereferenceable(232) %3) #18
  %27 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %10, i64 0, i32 3
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 4
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  store i32 0, i32* %27, align 8
  br label %31

31:                                               ; preds = %30, %25
  %32 = bitcast <2 x i64>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #18
  store <2 x i64> <i64 0, i64 -6148914691236517206>, <2 x i64>* %11, align 16
  %33 = icmp eq i32 %4, 1
  %34 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %1, i64 0, i32 18
  %35 = load %"class.base::TickClock"*, %"class.base::TickClock"** %34, align 8
  %36 = bitcast %"class.base::TickClock"* %35 to i64 (%"class.base::TickClock"*)***
  %37 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %36, align 8
  %38 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %37, i64 2
  %39 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %38, align 8
  %40 = call i64 %39(%"class.base::TickClock"* %35) #18
  br i1 %33, label %41, label %43

41:                                               ; preds = %31
  %42 = call %"struct.std::__1::pair.468"* @_ZN3net9HostCache11LookupStaleERKNS0_3KeyEN4base9TimeTicksEPNS0_14EntryStalenessEb(%"class.net::HostCache"* nonnull %2, %"struct.net::HostCache::Key"* nonnull dereferenceable(232) %10, i64 %40, %"struct.net::HostCache::EntryStaleness"* nonnull %12, i1 zeroext %5) #18
  br label %45

43:                                               ; preds = %31
  %44 = call %"struct.std::__1::pair.468"* @_ZN3net9HostCache6LookupERKNS0_3KeyEN4base9TimeTicksEb(%"class.net::HostCache"* nonnull %2, %"struct.net::HostCache::Key"* nonnull dereferenceable(232) %10, i64 %40, i1 zeroext %5) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %32, i8* align 8 bitcast (%"struct.net::HostCache::EntryStaleness"* @_ZN3net9HostCache9kNotStaleE to i8*), i64 16, i1 false)
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi %"struct.std::__1::pair.468"* [ %42, %41 ], [ %44, %43 ]
  %47 = icmp eq %"struct.std::__1::pair.468"* %46, null
  br i1 %47, label %70, label %48

48:                                               ; preds = %45
  %49 = load i8, i8* %13, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.absl::optional.361", %"class.absl::optional.361"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %53 = bitcast %"struct.net::HostCache::EntryStaleness"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* nonnull align 16 %32, i64 16, i1 false) #18
  br label %57

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.absl::optional.361", %"class.absl::optional.361"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %56 = bitcast %union.anon.365* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 16 %32, i64 16, i1 false) #18
  store i8 1, i8* %13, align 8
  br label %57

57:                                               ; preds = %51, %54
  %58 = getelementptr inbounds %"struct.std::__1::pair.468", %"struct.std::__1::pair.468"* %46, i64 0, i32 1
  %59 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %6, i64 0, i32 1
  %60 = load %"class.net::NetLog"*, %"class.net::NetLog"** %59, align 8
  %61 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %60, i64 0, i32 3
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %67, label %64, !prof !41

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %6, i64 0, i32 0
  %66 = bitcast %"class.base::Value"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %66) #18
  call void @_ZNK3net9HostCache5Entry12NetLogParamsEv(%"class.base::Value"* nonnull sret %9, %"class.net::HostCache::Entry"* %58) #18
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %60, i32 5, %"struct.net::NetLogSource"* dereferenceable(16) %65, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %9) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %66) #18
  br label %67

67:                                               ; preds = %57, %64
  %68 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %68, align 8
  %69 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryC1ERKS1_(%"class.net::HostCache::Entry"* %69, %"class.net::HostCache::Entry"* dereferenceable(200) %58) #18
  br label %74

70:                                               ; preds = %45
  %71 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %71, align 8
  %72 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %73 = bitcast %union.anon.301* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 200, i1 false) #18
  br label %74

74:                                               ; preds = %70, %67
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #18
  %75 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %10, i64 0, i32 5
  call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %75) #18
  %76 = bitcast %"struct.net::HostCache::Key"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %82) #19
  br label %83

83:                                               ; preds = %74, %80
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %26) #18
  br label %84

84:                                               ; preds = %83, %21, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager14ServeFromHostsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_12DnsQueryTypeEbRKNS3_5dequeINS0_8TaskTypeENS3_9allocatorIS9_EEEE(%"class.absl::optional.297"* noalias sret, %"class.net::HostResolverManager"* nocapture readonly, i8*, i64, i32, i1 zeroext, %"class.std::__1::deque"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.net::AddressList", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.net::AddressList", align 8
  %11 = alloca %"struct.std::__1::pair.469", align 8
  %12 = alloca %"class.net::IPEndPoint", align 2
  %13 = alloca %"struct.std::__1::pair.469", align 8
  %14 = alloca %"class.net::IPEndPoint", align 2
  %15 = alloca %"class.net::HostCache::Entry", align 8
  %16 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %17 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %16, align 8
  %18 = icmp eq %"class.net::DnsClient"* %17, null
  br i1 %18, label %37, label %19

19:                                               ; preds = %7
  %20 = tail call zeroext i1 @_ZN3net13IsAddressTypeENS_12DnsQueryTypeE(i32 %4) #18
  br i1 %20, label %21, label %37

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %6, i64 0, i32 0, i32 0, i32 1
  %27 = load i32**, i32*** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %6, i64 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %29, 10
  %31 = getelementptr inbounds i32*, i32** %27, i64 %30
  %32 = load i32*, i32** %31, align 8
  %33 = and i64 %29, 1023
  %34 = getelementptr inbounds i32, i32* %32, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %7, %25, %19
  %38 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %40 = bitcast %union.anon.301* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 200, i1 false) #18
  br label %214

41:                                               ; preds = %25, %21
  %42 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %16, align 8
  %43 = bitcast %"class.net::DnsClient"* %42 to %"class.std::__1::unordered_map"* (%"class.net::DnsClient"*)***
  %44 = load %"class.std::__1::unordered_map"* (%"class.net::DnsClient"*)**, %"class.std::__1::unordered_map"* (%"class.net::DnsClient"*)*** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::unordered_map"* (%"class.net::DnsClient"*)*, %"class.std::__1::unordered_map"* (%"class.net::DnsClient"*)** %44, i64 13
  %46 = load %"class.std::__1::unordered_map"* (%"class.net::DnsClient"*)*, %"class.std::__1::unordered_map"* (%"class.net::DnsClient"*)** %45, align 8
  %47 = tail call %"class.std::__1::unordered_map"* %46(%"class.net::DnsClient"* %42) #18
  %48 = icmp eq %"class.std::__1::unordered_map"* %47, null
  br i1 %48, label %53, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %47, i64 0, i32 0, i32 2, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %41, %49
  %54 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %54, align 8
  %55 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %56 = bitcast %union.anon.301* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 200, i1 false) #18
  br label %214

57:                                               ; preds = %49
  %58 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #18
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 24, i1 false)
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %9, i8* %2, i64 %3) #18
  %62 = bitcast %"class.net::AddressList"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %62) #18
  %63 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %10, i64 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %10, i64 0, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %10, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %66 = bitcast %"class.net::AddressList"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 48, i1 false)
  call void @_ZN3net11AddressListC1Ev(%"class.net::AddressList"* nonnull %10) #18
  %67 = and i32 %4, -3
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %107

69:                                               ; preds = %57
  %70 = bitcast %"struct.std::__1::pair.469"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %70) #18
  %71 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %69
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* nonnull align 8 %58, i64 24, i1 false) #18
  br label %80

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"struct.std::__1::pair.469", %"struct.std::__1::pair.469"* %11, i64 0, i32 0
  %78 = load i8*, i8** %59, align 8
  %79 = load i64, i64* %60, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %77, i8* %78, i64 %79) #18
  br label %80

80:                                               ; preds = %75, %76
  %81 = getelementptr inbounds %"struct.std::__1::pair.469", %"struct.std::__1::pair.469"* %11, i64 0, i32 1
  store i32 2, i32* %81, align 8
  %82 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %47, i64 0, i32 0
  %83 = call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE4findISB_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISD_PvEEEERKT_(%"class.std::__1::__hash_table"* %82, %"struct.std::__1::pair.469"* nonnull dereferenceable(32) %11) #18
  %84 = bitcast %"struct.std::__1::pair.469"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %80
  %89 = getelementptr inbounds %"struct.std::__1::pair.469", %"struct.std::__1::pair.469"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %90) #19
  br label %91

91:                                               ; preds = %80, %88
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %70) #18
  %92 = icmp eq %"struct.std::__1::__hash_node_base"* %83, null
  br i1 %92, label %107, label %93

93:                                               ; preds = %91
  %94 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %94) #18
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %83, i64 6
  %96 = bitcast %"struct.std::__1::__hash_node_base"* %95 to %"class.net::IPAddress"*
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %12, %"class.net::IPAddress"* dereferenceable(17) %96, i16 zeroext 0) #18
  %97 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %64, align 8
  %98 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %65, align 8
  %99 = icmp eq %"class.net::IPEndPoint"* %97, %98
  br i1 %99, label %104, label %100

100:                                              ; preds = %93
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %97, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %12) #18
  %101 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %97, i64 1
  %102 = ptrtoint %"class.net::IPEndPoint"* %101 to i64
  %103 = bitcast %"class.net::IPEndPoint"** %64 to i64*
  store i64 %102, i64* %103, align 8
  br label %106

104:                                              ; preds = %93
  %105 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %10, i64 0, i32 0
  call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* nonnull %105, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %12) #18
  br label %106

106:                                              ; preds = %100, %104
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %12) #18
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %94) #18
  br label %107

107:                                              ; preds = %91, %106, %57
  %108 = icmp ult i32 %4, 2
  br i1 %108, label %109, label %147

109:                                              ; preds = %107
  %110 = bitcast %"struct.std::__1::pair.469"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %110) #18
  %111 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %116, label %115

115:                                              ; preds = %109
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %110, i8* nonnull align 8 %58, i64 24, i1 false) #18
  br label %120

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"struct.std::__1::pair.469", %"struct.std::__1::pair.469"* %13, i64 0, i32 0
  %118 = load i8*, i8** %59, align 8
  %119 = load i64, i64* %60, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %117, i8* %118, i64 %119) #18
  br label %120

120:                                              ; preds = %115, %116
  %121 = getelementptr inbounds %"struct.std::__1::pair.469", %"struct.std::__1::pair.469"* %13, i64 0, i32 1
  store i32 1, i32* %121, align 8
  %122 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %47, i64 0, i32 0
  %123 = call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE4findISB_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISD_PvEEEERKT_(%"class.std::__1::__hash_table"* %122, %"struct.std::__1::pair.469"* nonnull dereferenceable(32) %13) #18
  %124 = bitcast %"struct.std::__1::pair.469"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"struct.std::__1::pair.469", %"struct.std::__1::pair.469"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %130) #19
  br label %131

131:                                              ; preds = %120, %128
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %110) #18
  %132 = icmp eq %"struct.std::__1::__hash_node_base"* %123, null
  br i1 %132, label %147, label %133

133:                                              ; preds = %131
  %134 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %134) #18
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 6
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %135 to %"class.net::IPAddress"*
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %14, %"class.net::IPAddress"* dereferenceable(17) %136, i16 zeroext 0) #18
  %137 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %64, align 8
  %138 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %65, align 8
  %139 = icmp eq %"class.net::IPEndPoint"* %137, %138
  br i1 %139, label %144, label %140

140:                                              ; preds = %133
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %137, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %14) #18
  %141 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %137, i64 1
  %142 = ptrtoint %"class.net::IPEndPoint"* %141 to i64
  %143 = bitcast %"class.net::IPEndPoint"** %64 to i64*
  store i64 %142, i64* %143, align 8
  br label %146

144:                                              ; preds = %133
  %145 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %10, i64 0, i32 0
  call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* nonnull %145, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %14) #18
  br label %146

146:                                              ; preds = %140, %144
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %14) #18
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %134) #18
  br label %147

147:                                              ; preds = %131, %146, %107
  br i1 %5, label %148, label %175

148:                                              ; preds = %147
  %149 = bitcast %"class.net::IPEndPoint"** %64 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.net::AddressList"* %10 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = icmp eq i64 %150, %152
  br i1 %153, label %174, label %161

154:                                              ; preds = %169
  %155 = zext i32 %173 to i64
  %156 = load i64, i64* %149, align 8
  %157 = load i64, i64* %151, align 8
  %158 = sub i64 %156, %157
  %159 = sdiv exact i64 %158, 20
  %160 = icmp ugt i64 %159, %155
  br i1 %160, label %161, label %174

161:                                              ; preds = %148, %154
  %162 = phi i64 [ %157, %154 ], [ %152, %148 ]
  %163 = phi i64 [ %155, %154 ], [ 0, %148 ]
  %164 = phi i32 [ %173, %154 ], [ 0, %148 ]
  %165 = inttoptr i64 %162 to %"class.net::IPEndPoint"*
  %166 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %165, i64 %163
  %167 = call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %166) #18
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %169, label %175

169:                                              ; preds = %161
  %170 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %166, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %171 = load i8, i8* %170, align 1
  %172 = icmp eq i8 %171, 127
  %173 = add i32 %164, 1
  br i1 %172, label %154, label %175

174:                                              ; preds = %154, %148
  call void @_ZN3net19HostResolverManager14ServeFromHostsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_12DnsQueryTypeEbRKNS3_5dequeINS0_8TaskTypeENS3_9allocatorIS9_EEEE(%"class.absl::optional.297"* sret %0, %"class.net::HostResolverManager"* %1, i8* %2, i64 %3, i32 0, i1 zeroext false, %"class.std::__1::deque"* dereferenceable(48) %6)
  br label %206

175:                                              ; preds = %169, %161, %147
  %176 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %63, align 8
  %177 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %64, align 8
  %178 = icmp eq %"class.net::IPEndPoint"* %176, %177
  br i1 %178, label %202, label %179

179:                                              ; preds = %175
  %180 = bitcast %"class.net::HostCache::Entry"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %180) #18
  %181 = bitcast %"class.net::AddressList"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %181) #18
  %182 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %15, i64 0, i32 0
  store i32 0, i32* %182, align 8
  %183 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %183, align 8
  %184 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %185 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %15, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %186 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %15, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %187 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %15, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %188 = bitcast %union.anon.254* %187 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 24, i1 false) #18
  %189 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %15, i64 0, i32 6
  %190 = bitcast %union.anon.237* %184 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %190, i8 0, i64 49, i1 false) #18
  %191 = bitcast %union.anon.105* %185 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 25, i1 false) #18
  %192 = bitcast %union.anon.242* %186 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 25, i1 false) #18
  store i32 2, i32* %189, align 8
  %193 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %15, i64 0, i32 7
  store i8 0, i8* %193, align 4
  %194 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %15, i64 0, i32 9, i32 0
  %195 = bitcast i64* %194 to <2 x i64>*
  store <2 x i64> <i64 -1000000, i64 0>, <2 x i64>* %195, align 8
  %196 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %15, i64 0, i32 11
  store i32 -1, i32* %196, align 8
  %197 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %15, i64 0, i32 12, i32 0
  store i32 0, i32* %197, align 4
  %198 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %15, i64 0, i32 13, i32 0
  store i32 0, i32* %198, align 8
  call void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"* nonnull %8, %"class.net::AddressList"* nonnull dereferenceable(48) %10) #18
  %199 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"* %199, %"class.net::AddressList"* nonnull dereferenceable(48) %8) #18
  store i8 1, i8* %183, align 8
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %181) #18
  %200 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %200, align 8
  %201 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* %201, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %15) #18
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %15) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %180) #18
  br label %206

202:                                              ; preds = %175
  %203 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %203, align 8
  %204 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %205 = bitcast %union.anon.301* %204 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %205, i8 0, i64 200, i1 false) #18
  br label %206

206:                                              ; preds = %202, %179, %174
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %10) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %62) #18
  %207 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %207, i64 0, i32 1, i32 0
  %209 = load i8, i8* %208, align 1
  %210 = icmp slt i8 %209, 0
  br i1 %210, label %211, label %213

211:                                              ; preds = %206
  %212 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %212) #19
  br label %213

213:                                              ; preds = %206, %211
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #18
  br label %214

214:                                              ; preds = %53, %213, %37
  ret void
}

declare void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job10AddRequestEPNS0_11RequestImplE(%"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::RequestImpl"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", align 8
  %4 = alloca %"class.net::HostResolverManager::RequestImpl"*, align 8
  %5 = alloca %class.anon.530, align 8
  store %"class.net::HostResolverManager::RequestImpl"* %1, %"class.net::HostResolverManager::RequestImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 10
  store %"class.net::HostResolverManager::Job"* %0, %"class.net::HostResolverManager::Job"** %6, align 8
  %7 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 9
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 15, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  store i64 %11, i64* %9, align 8
  %12 = zext i32 %8 to i64
  %13 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 15, i32 2, i64 %12
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %13, align 8
  %16 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 15, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp slt i32 %17, %8
  br i1 %18, label %19, label %20

19:                                               ; preds = %2
  store i32 %8, i32* %16, align 8
  br label %20

20:                                               ; preds = %2, %19
  %21 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 2
  %22 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 23
  %23 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %22, i64 0, i32 0
  tail call void @_ZNK3net16NetLogWithSource25AddEventReferencingSourceENS_15NetLogEventTypeERKNS_12NetLogSourceE(%"class.net::NetLogWithSource"* %21, i32 13, %"struct.net::NetLogSource"* dereferenceable(16) %23) #18
  %24 = bitcast %class.anon.530* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #18
  %25 = getelementptr inbounds %class.anon.530, %class.anon.530* %5, i64 0, i32 0
  store %"class.net::HostResolverManager::RequestImpl"** %4, %"class.net::HostResolverManager::RequestImpl"*** %25, align 8
  %26 = getelementptr inbounds %class.anon.530, %class.anon.530* %5, i64 0, i32 1
  store %"class.net::HostResolverManager::Job"* %0, %"class.net::HostResolverManager::Job"** %26, align 8
  call void @_ZNK3net16NetLogWithSource8AddEntryIZNS_19HostResolverManager3Job10AddRequestEPNS2_11RequestImplEEUlvE_EEvNS_15NetLogEventTypeENS_16NetLogEventPhaseERKT_(%"class.net::NetLogWithSource"* %22, i32 14, i32 0, %class.anon.530* nonnull dereferenceable(16) %5) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #18
  %27 = load %"class.net::HostResolverManager::RequestImpl"*, %"class.net::HostResolverManager::RequestImpl"** %4, align 8
  %28 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %27, i64 0, i32 5, i32 6
  %29 = load i8, i8* %28, align 2, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %20
  %32 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 17
  store i8 1, i8* %32, align 8
  br label %33

33:                                               ; preds = %20, %31
  %34 = icmp eq %"class.net::HostResolverManager::RequestImpl"* %27, null
  %35 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %27, i64 0, i32 1
  %36 = select i1 %34, %"class.base::LinkNode.229"* null, %"class.base::LinkNode.229"* %35
  %37 = getelementptr inbounds %"class.base::LinkNode.229", %"class.base::LinkNode.229"* %36, i64 0, i32 0
  %38 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 27, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* %37, %"class.base::internal::LinkNodeBase"* %38) #18
  %39 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, -1
  br i1 %41, label %91, label %42

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 19
  %44 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %43, align 8
  %45 = icmp eq %"class.net::PrioritizedDispatcher"* %44, null
  br i1 %45, label %91, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %47) #18
  %48 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28
  %49 = bitcast %"class.net::HostResolverManager::Job"* %0 to i32 (%"class.net::HostResolverManager::Job"*)***
  %50 = load i32 (%"class.net::HostResolverManager::Job"*)**, i32 (%"class.net::HostResolverManager::Job"*)*** %49, align 8
  %51 = getelementptr inbounds i32 (%"class.net::HostResolverManager::Job"*)*, i32 (%"class.net::HostResolverManager::Job"*)** %50, i64 6
  %52 = load i32 (%"class.net::HostResolverManager::Job"*)*, i32 (%"class.net::HostResolverManager::Job"*)** %51, align 8
  %53 = call i32 %52(%"class.net::HostResolverManager::Job"* %0) #18
  call void @_ZN3net21PrioritizedDispatcher14ChangePriorityERKNS_13PriorityQueueIPNS0_3JobEE7PointerEj(%"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* nonnull sret %3, %"class.net::PrioritizedDispatcher"* nonnull %44, %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* dereferenceable(40) %48, i32 %53) #18
  %54 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %48, i64 0, i32 0
  store i32 %55, i32* %56, align 8
  %57 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 1
  %58 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 1
  %59 = bitcast %"class.std::__1::__list_iterator"* %57 to i64*
  %60 = bitcast %"class.std::__1::__list_iterator"* %58 to i64*
  %61 = load i64, i64* %59, align 8
  store i64 %61, i64* %60, align 8
  %62 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 2, i32 0
  %63 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %90, label %66

66:                                               ; preds = %46
  %67 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 2, i32 0, i32 0, i32 1
  %68 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %62, i64 0, i32 0
  %70 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %62, i64 0, i32 0, i32 0
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = bitcast %"struct.std::__1::__list_node_base"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %68, i64 0, i32 0
  %76 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %76, i64 0, i32 1
  %78 = bitcast %"struct.std::__1::__list_node_base"** %77 to i64*
  store i64 %74, i64* %78, align 8
  %79 = bitcast %"struct.std::__1::__list_node_base"* %68 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"struct.std::__1::__list_node_base"** %72 to i64**
  %82 = load i64*, i64** %81, align 8
  store i64 %80, i64* %82, align 8
  store i64 0, i64* %63, align 8
  %83 = icmp eq %"struct.std::__1::__list_node_base"* %68, %69
  br i1 %83, label %90, label %84

84:                                               ; preds = %66, %84
  %85 = phi %"struct.std::__1::__list_node_base"* [ %87, %84 ], [ %68, %66 ]
  %86 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %85, i64 0, i32 1
  %87 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %86, align 8
  %88 = bitcast %"struct.std::__1::__list_node_base"* %85 to i8*
  call void @_ZdlPv(i8* %88) #19
  %89 = icmp eq %"struct.std::__1::__list_node_base"* %87, %69
  br i1 %89, label %90, label %84

90:                                               ; preds = %84, %66, %46
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %47) #18
  br label %91

91:                                               ; preds = %33, %42, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job11RunNextTaskEv(%"class.net::HostResolverManager::Job"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.net::HostCache::Entry", align 8
  %5 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %47

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 12
  %10 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 12, i32 0, i32 1
  %11 = bitcast %"struct.net::HostResolverManager::Job::CompletionResult"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.231"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %12, %14
  br i1 %15, label %19, label %16

16:                                               ; preds = %8
  %17 = sub i64 %12, %14
  %18 = icmp eq i64 %17, 216
  br i1 %18, label %21, label %30

19:                                               ; preds = %8
  %20 = bitcast %"class.net::HostCache::Entry"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %20) #18
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* nonnull %4, i32 -105, i32 0, i8 0, i64 undef) #18
  call void @_ZN3net19HostResolverManager3Job16CompleteRequestsERKNS_9HostCache5EntryEN4base9TimeDeltaEbb(%"class.net::HostResolverManager::Job"* %0, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %4, i64 0, i1 zeroext true, i1 zeroext false) #18
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %20) #18
  br label %139

21:                                               ; preds = %30, %16
  %22 = phi i64 [ %12, %16 ], [ %41, %30 ]
  %23 = inttoptr i64 %22 to %"struct.net::HostResolverManager::Job::CompletionResult"*
  %24 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %23, i64 -1, i32 0
  %25 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %23, i64 -1, i32 1, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %23, i64 -1, i32 2
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp ne i8 %28, 0
  tail call void @_ZN3net19HostResolverManager3Job16CompleteRequestsERKNS_9HostCache5EntryEN4base9TimeDeltaEbb(%"class.net::HostResolverManager::Job"* %0, %"class.net::HostCache::Entry"* dereferenceable(200) %24, i64 %26, i1 zeroext true, i1 zeroext %29)
  br label %139

30:                                               ; preds = %16, %30
  %31 = phi i64 [ %42, %30 ], [ %14, %16 ]
  %32 = phi i64 [ %40, %30 ], [ 0, %16 ]
  %33 = inttoptr i64 %31 to %"struct.net::HostResolverManager::Job::CompletionResult"*
  %34 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %33, i64 %32, i32 0
  %35 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %33, i64 %32, i32 1, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %33, i64 %32, i32 2
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp ne i8 %38, 0
  tail call void @_ZN3net19HostResolverManager3Job16MaybeCacheResultERKNS_9HostCache5EntryEN4base9TimeDeltaEb(%"class.net::HostResolverManager::Job"* %0, %"class.net::HostCache::Entry"* dereferenceable(200) %34, i64 %36, i1 zeroext %39)
  %40 = add nuw i64 %32, 1
  %41 = load i64, i64* %11, align 8
  %42 = load i64, i64* %13, align 8
  %43 = sub i64 %41, %42
  %44 = sdiv exact i64 %43, 216
  %45 = add nsw i64 %44, -1
  %46 = icmp ult i64 %40, %45
  br i1 %46, label %30, label %21

47:                                               ; preds = %1
  %48 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %49 = load i32**, i32*** %48, align 8
  %50 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 13, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = lshr i64 %51, 10
  %53 = getelementptr inbounds i32*, i32** %49, i64 %52
  %54 = load i32*, i32** %53, align 8
  %55 = and i64 %51, 1023
  %56 = getelementptr inbounds i32, i32* %54, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 19
  %59 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %58, align 8
  %60 = icmp eq %"class.net::PrioritizedDispatcher"* %59, null
  br i1 %60, label %61, label %103

61:                                               ; preds = %47
  switch i32 %57, label %103 [
    i32 3, label %62
    i32 1, label %62
    i32 0, label %62
  ]

62:                                               ; preds = %61, %61, %61
  %63 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 0
  %64 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %63) #18
  br i1 %64, label %68, label %65

65:                                               ; preds = %62
  %66 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %67 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #18
  br label %68

68:                                               ; preds = %65, %62
  %69 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %63) #18
  br i1 %69, label %70, label %74

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 1
  %72 = bitcast i64* %71 to %"class.net::HostResolverManager"**
  %73 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %72, align 8
  br label %74

74:                                               ; preds = %68, %70
  %75 = phi %"class.net::HostResolverManager"* [ %73, %70 ], [ null, %68 ]
  %76 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %75, i64 0, i32 6, i32 0, i32 0, i32 0
  %77 = bitcast %"class.net::PrioritizedDispatcher"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.net::PrioritizedDispatcher"** %58 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 14
  store i8 0, i8* %80, align 8
  call void @_ZN3net19HostResolverManager3Job8ScheduleEb(%"class.net::HostResolverManager::Job"* %0, i1 zeroext false)
  %81 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %58, align 8
  %82 = getelementptr inbounds %"class.net::PrioritizedDispatcher", %"class.net::PrioritizedDispatcher"* %81, i64 0, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %63) #18
  br i1 %84, label %88, label %85

85:                                               ; preds = %74
  %86 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #18
  br label %88

88:                                               ; preds = %85, %74
  %89 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %63) #18
  br i1 %89, label %90, label %94

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 1
  %92 = bitcast i64* %91 to %"class.net::HostResolverManager"**
  %93 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %92, align 8
  br label %94

94:                                               ; preds = %88, %90
  %95 = phi %"class.net::HostResolverManager"* [ %93, %90 ], [ null, %88 ]
  %96 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %95, i64 0, i32 7
  %97 = load i64, i64* %96, align 8
  %98 = icmp ugt i64 %83, %97
  br i1 %98, label %99, label %139

99:                                               ; preds = %94
  %100 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %58, align 8
  %101 = call %"class.net::PrioritizedDispatcher::Job"* @_ZN3net21PrioritizedDispatcher17EvictOldestLowestEv(%"class.net::PrioritizedDispatcher"* %100) #18
  %102 = bitcast %"class.net::PrioritizedDispatcher::Job"* %101 to %"class.net::HostResolverManager::Job"*
  call void @_ZN3net19HostResolverManager3Job9OnEvictedEv(%"class.net::HostResolverManager::Job"* %102)
  br label %139

103:                                              ; preds = %61, %47
  %104 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 22, i32 0, i32 0
  %105 = load i64, i64* %104, align 8
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 23
  tail call void @_ZNK3net16NetLogWithSource8AddEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %108, i32 10) #18
  %109 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 21
  %110 = load %"class.base::TickClock"*, %"class.base::TickClock"** %109, align 8
  %111 = bitcast %"class.base::TickClock"* %110 to i64 (%"class.base::TickClock"*)***
  %112 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %111, align 8
  %113 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %112, i64 2
  %114 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %113, align 8
  %115 = tail call i64 %114(%"class.base::TickClock"* %110) #18
  store i64 %115, i64* %104, align 8
  %116 = load i64, i64* %50, align 8
  %117 = load i64, i64* %5, align 8
  br label %118

118:                                              ; preds = %107, %103
  %119 = phi i64 [ %117, %107 ], [ %6, %103 ]
  %120 = phi i64 [ %116, %107 ], [ %51, %103 ]
  %121 = add i64 %119, -1
  store i64 %121, i64* %5, align 8
  %122 = add i64 %120, 1
  store i64 %122, i64* %50, align 8
  %123 = icmp ult i64 %122, 2048
  br i1 %123, label %132, label %124

124:                                              ; preds = %118
  %125 = bitcast i32*** %48 to i8***
  %126 = load i8**, i8*** %125, align 8
  %127 = load i8*, i8** %126, align 8
  tail call void @_ZdlPv(i8* %127) #19
  %128 = load i32**, i32*** %48, align 8
  %129 = getelementptr inbounds i32*, i32** %128, i64 1
  store i32** %129, i32*** %48, align 8
  %130 = load i64, i64* %50, align 8
  %131 = add i64 %130, -1024
  store i64 %131, i64* %50, align 8
  br label %132

132:                                              ; preds = %118, %124
  %133 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 14
  store i8 1, i8* %133, align 8
  switch i32 %57, label %139 [
    i32 0, label %134
    i32 1, label %135
    i32 2, label %136
    i32 3, label %137
    i32 5, label %138
  ]

134:                                              ; preds = %132
  tail call void @_ZN3net19HostResolverManager3Job13StartProcTaskEv(%"class.net::HostResolverManager::Job"* %0)
  br label %139

135:                                              ; preds = %132
  tail call void @_ZN3net19HostResolverManager3Job12StartDnsTaskEb(%"class.net::HostResolverManager::Job"* %0, i1 zeroext false)
  br label %139

136:                                              ; preds = %132
  tail call void @_ZN3net19HostResolverManager3Job12StartDnsTaskEb(%"class.net::HostResolverManager::Job"* %0, i1 zeroext true)
  br label %139

137:                                              ; preds = %132
  tail call void @_ZN3net19HostResolverManager3Job13StartMdnsTaskEv(%"class.net::HostResolverManager::Job"* %0)
  br label %139

138:                                              ; preds = %132
  tail call void @_ZN3net19HostResolverManager3Job19InsecureCacheLookupEv(%"class.net::HostResolverManager::Job"* %0)
  br label %139

139:                                              ; preds = %99, %94, %132, %138, %137, %136, %135, %134, %19, %21
  ret void
}

declare zeroext i1 @_ZN3net13IsAddressTypeENS_12DnsQueryTypeE(i32) local_unnamed_addr #1

declare i32 @_ZN3net16GetAddressFamilyERKNS_9IPAddressE(%"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #1

declare i32 @_ZN3net27AddressFamilyToDnsQueryTypeENS_13AddressFamilyE(i32) local_unnamed_addr #1

declare void @_ZN3net11AddressList19CreateFromIPAddressERKNS_9IPAddressEt(%"class.net::AddressList"* sret, %"class.net::IPAddress"* dereferenceable(17), i16 zeroext) local_unnamed_addr #1

declare void @_ZN3net11AddressList23SetDefaultCanonicalNameEv(%"class.net::AddressList"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"*) unnamed_addr #3

declare void @_ZN3net9HostCache3KeyC1ERKS1_(%"struct.net::HostCache::Key"*, %"struct.net::HostCache::Key"* dereferenceable(232)) unnamed_addr #1

declare %"struct.std::__1::pair.468"* @_ZN3net9HostCache11LookupStaleERKNS0_3KeyEN4base9TimeTicksEPNS0_14EntryStalenessEb(%"class.net::HostCache"*, %"struct.net::HostCache::Key"* dereferenceable(232), i64, %"struct.net::HostCache::EntryStaleness"*, i1 zeroext) local_unnamed_addr #1

declare %"struct.std::__1::pair.468"* @_ZN3net9HostCache6LookupERKNS0_3KeyEN4base9TimeTicksEb(%"class.net::HostCache"*, %"struct.net::HostCache::Key"* dereferenceable(232), i64, i1 zeroext) local_unnamed_addr #1

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #1

declare void @_ZN3net11AddressListC1Ev(%"class.net::AddressList"*) unnamed_addr #1

declare i32 @_ZN3net12HostResolver27DnsQueryTypeToAddressFamilyENS_12DnsQueryTypeE(i32) local_unnamed_addr #1

declare i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager11CacheResultEPNS_9HostCacheERKNS1_3KeyERKNS1_5EntryEN4base9TimeDeltaE(%"class.net::HostResolverManager"* nocapture readonly, %"class.net::HostCache"*, %"struct.net::HostCache::Key"* dereferenceable(232), %"class.net::HostCache::Entry"* dereferenceable(200), i64) local_unnamed_addr #0 align 2 {
  %6 = icmp eq %"class.net::HostCache"* %1, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %3, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  %11 = icmp sgt i64 %4, 0
  %12 = or i1 %11, %10
  br i1 %12, label %13, label %21

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 18
  %15 = load %"class.base::TickClock"*, %"class.base::TickClock"** %14, align 8
  %16 = bitcast %"class.base::TickClock"* %15 to i64 (%"class.base::TickClock"*)***
  %17 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %16, align 8
  %18 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %17, i64 2
  %19 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %18, align 8
  %20 = tail call i64 %19(%"class.base::TickClock"* %15) #18
  tail call void @_ZN3net9HostCache3SetERKNS0_3KeyERKNS0_5EntryEN4base9TimeTicksENS7_9TimeDeltaE(%"class.net::HostCache"* nonnull %1, %"struct.net::HostCache::Key"* dereferenceable(232) %2, %"class.net::HostCache::Entry"* dereferenceable(200) %3, i64 %20, i64 %4) #18
  br label %21

21:                                               ; preds = %7, %5, %13
  ret void
}

declare void @_ZN3net9HostCache3SetERKNS0_3KeyERKNS0_5EntryEN4base9TimeTicksENS7_9TimeDeltaE(%"class.net::HostCache"*, %"struct.net::HostCache::Key"* dereferenceable(232), %"class.net::HostCache::Entry"* dereferenceable(200), i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::HostResolverManager::Job"* @_ZN3net19HostResolverManager9RemoveJobENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeINS0_6JobKeyENS1_10unique_ptrINS0_3JobENS1_14default_deleteIS7_EEEEEEPNS1_11__tree_nodeISB_PvEElEEEE(%"class.net::HostResolverManager"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 33
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to i64*
  %5 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.net::HostResolverManager::Job"**
  %6 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %5, align 8
  store i64 0, i64* %4, align 8
  %7 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 5, i32 0
  %8 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net19HostResolverManager6JobKeyENS_10unique_ptrINS3_3JobENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS_9allocatorISA_EEE5eraseENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEE(%"class.std::__1::__tree"* %7, %"class.std::__1::__tree_end_node"* %1) #18
  %9 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %6, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  ret %"class.net::HostResolverManager::Job"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19HostResolverManager25GetEffectiveSecureDnsModeENS_15SecureDnsPolicyE(%"class.net::HostResolverManager"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 1
  br i1 %3, label %18, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %6 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %5, align 8
  %7 = icmp eq %"class.net::DnsClient"* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.net::DnsClient"* %6 to %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)***
  %10 = load %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)**, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*** %9, align 8
  %11 = getelementptr inbounds %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)** %10, i64 12
  %12 = load %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)** %11, align 8
  %13 = tail call %"struct.net::DnsConfig"* %12(%"class.net::DnsClient"* nonnull %6) #18
  %14 = icmp eq %"struct.net::DnsConfig"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %13, i64 0, i32 14
  %17 = load i32, i32* %16, align 8
  br label %18

18:                                               ; preds = %4, %15, %8, %2
  %19 = phi i32 [ 0, %2 ], [ %17, %15 ], [ 0, %8 ], [ 0, %4 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net19HostResolverManager20HaveTestProcOverrideEv(%"class.net::HostResolverManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.net::HostResolverProc"*, %"class.net::HostResolverProc"** %2, align 8
  %4 = icmp eq %"class.net::HostResolverProc"* %3, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = tail call %"class.net::HostResolverProc"* @_ZN3net16HostResolverProc10GetDefaultEv() #18
  %7 = icmp ne %"class.net::HostResolverProc"* %6, null
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i1 [ false, %1 ], [ %7, %5 ]
  ret i1 %9
}

declare %"class.net::HostResolverProc"* @_ZN3net16HostResolverProc10GetDefaultEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager12PushDnsTasksEbNS_13SecureDnsModeEbbbPNS_14ResolveContextEPNSt3__15dequeINS0_8TaskTypeENS4_9allocatorIS6_EEEE(%"class.net::HostResolverManager"* nocapture readonly, i1 zeroext, i32, i1 zeroext, i1 zeroext, i1 zeroext, %"class.net::ResolveContext"*, %"class.std::__1::deque"*) local_unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 8, i32 0, i32 0
  %10 = load %"class.net::HostResolverProc"*, %"class.net::HostResolverProc"** %9, align 8
  %11 = icmp eq %"class.net::HostResolverProc"* %10, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %8
  %13 = tail call %"class.net::HostResolverProc"* @_ZN3net16HostResolverProc10GetDefaultEv() #18
  %14 = icmp ne %"class.net::HostResolverProc"* %13, null
  br label %15

15:                                               ; preds = %8, %12
  %16 = phi i1 [ false, %8 ], [ %14, %12 ]
  switch i32 %2, label %423 [
    i32 2, label %17
    i32 1, label %59
    i32 0, label %379
  ]

17:                                               ; preds = %15
  br i1 %16, label %423, label %18

18:                                               ; preds = %17
  %19 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 2
  %20 = bitcast i32*** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast i32*** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %21, %24
  %26 = icmp eq i64 %25, 0
  %27 = shl i64 %25, 7
  %28 = add i64 %27, -1
  %29 = select i1 %26, i64 0, i64 %28
  %30 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, %31
  %35 = icmp eq i64 %29, %34
  %36 = inttoptr i64 %24 to i32**
  %37 = inttoptr i64 %21 to i32**
  br i1 %35, label %38, label %44

38:                                               ; preds = %18
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %7) #18
  %39 = load i64, i64* %32, align 8
  %40 = load i64, i64* %30, align 8
  %41 = load i32**, i32*** %22, align 8
  %42 = load i32**, i32*** %19, align 8
  %43 = add i64 %40, %39
  br label %44

44:                                               ; preds = %38, %18
  %45 = phi i64 [ %43, %38 ], [ %34, %18 ]
  %46 = phi i32** [ %42, %38 ], [ %37, %18 ]
  %47 = phi i32** [ %41, %38 ], [ %36, %18 ]
  %48 = icmp eq i32** %46, %47
  br i1 %48, label %55, label %49

49:                                               ; preds = %44
  %50 = lshr i64 %45, 10
  %51 = getelementptr inbounds i32*, i32** %47, i64 %50
  %52 = load i32*, i32** %51, align 8
  %53 = and i64 %45, 1023
  %54 = getelementptr inbounds i32, i32* %52, i64 %53
  br label %55

55:                                               ; preds = %44, %49
  %56 = phi i32* [ %54, %49 ], [ null, %44 ]
  store i32 2, i32* %56, align 4
  %57 = load i64, i64* %32, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %32, align 8
  br label %423

59:                                               ; preds = %15
  %60 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %61 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %60, align 8
  %62 = bitcast %"class.net::DnsClient"* %61 to i1 (%"class.net::DnsClient"*, %"class.net::ResolveContext"*)***
  %63 = load i1 (%"class.net::DnsClient"*, %"class.net::ResolveContext"*)**, i1 (%"class.net::DnsClient"*, %"class.net::ResolveContext"*)*** %62, align 8
  %64 = getelementptr inbounds i1 (%"class.net::DnsClient"*, %"class.net::ResolveContext"*)*, i1 (%"class.net::DnsClient"*, %"class.net::ResolveContext"*)** %63, i64 6
  %65 = load i1 (%"class.net::DnsClient"*, %"class.net::ResolveContext"*)*, i1 (%"class.net::DnsClient"*, %"class.net::ResolveContext"*)** %64, align 8
  %66 = tail call zeroext i1 %65(%"class.net::DnsClient"* %61, %"class.net::ResolveContext"* %6) #18
  br i1 %66, label %67, label %111

67:                                               ; preds = %59
  %68 = xor i1 %3, true
  %69 = or i1 %16, %68
  br i1 %69, label %423, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 2
  %72 = bitcast i32*** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast i32*** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %73, %76
  %78 = icmp eq i64 %77, 0
  %79 = shl i64 %77, 7
  %80 = add i64 %79, -1
  %81 = select i1 %78, i64 0, i64 %80
  %82 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, %83
  %87 = icmp eq i64 %81, %86
  %88 = inttoptr i64 %76 to i32**
  %89 = inttoptr i64 %73 to i32**
  br i1 %87, label %90, label %96

90:                                               ; preds = %70
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %7) #18
  %91 = load i64, i64* %84, align 8
  %92 = load i64, i64* %82, align 8
  %93 = load i32**, i32*** %74, align 8
  %94 = load i32**, i32*** %71, align 8
  %95 = add i64 %92, %91
  br label %96

96:                                               ; preds = %90, %70
  %97 = phi i64 [ %95, %90 ], [ %86, %70 ]
  %98 = phi i32** [ %94, %90 ], [ %89, %70 ]
  %99 = phi i32** [ %93, %90 ], [ %88, %70 ]
  %100 = icmp eq i32** %98, %99
  br i1 %100, label %107, label %101

101:                                              ; preds = %96
  %102 = lshr i64 %97, 10
  %103 = getelementptr inbounds i32*, i32** %99, i64 %102
  %104 = load i32*, i32** %103, align 8
  %105 = and i64 %97, 1023
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  br label %107

107:                                              ; preds = %96, %101
  %108 = phi i32* [ %106, %101 ], [ null, %96 ]
  store i32 1, i32* %108, align 4
  %109 = load i64, i64* %84, align 8
  %110 = add i64 %109, 1
  store i64 %110, i64* %84, align 8
  br label %423

111:                                              ; preds = %59
  br i1 %5, label %112, label %188

112:                                              ; preds = %111
  br i1 %16, label %423, label %113

113:                                              ; preds = %112
  %114 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 2
  %115 = bitcast i32*** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 1
  %118 = bitcast i32*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = sub i64 %116, %119
  %121 = icmp eq i64 %120, 0
  %122 = shl i64 %120, 7
  %123 = add i64 %122, -1
  %124 = select i1 %121, i64 0, i64 %123
  %125 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %128, %126
  %130 = icmp eq i64 %124, %129
  %131 = inttoptr i64 %119 to i32**
  %132 = inttoptr i64 %116 to i32**
  br i1 %130, label %133, label %139

133:                                              ; preds = %113
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %7) #18
  %134 = load i64, i64* %127, align 8
  %135 = load i64, i64* %125, align 8
  %136 = load i32**, i32*** %117, align 8
  %137 = load i32**, i32*** %114, align 8
  %138 = add i64 %135, %134
  br label %139

139:                                              ; preds = %133, %113
  %140 = phi i64 [ %138, %133 ], [ %129, %113 ]
  %141 = phi i32** [ %137, %133 ], [ %132, %113 ]
  %142 = phi i32** [ %136, %133 ], [ %131, %113 ]
  %143 = icmp eq i32** %141, %142
  br i1 %143, label %150, label %144

144:                                              ; preds = %139
  %145 = lshr i64 %140, 10
  %146 = getelementptr inbounds i32*, i32** %142, i64 %145
  %147 = load i32*, i32** %146, align 8
  %148 = and i64 %140, 1023
  %149 = getelementptr inbounds i32, i32* %147, i64 %148
  br label %150

150:                                              ; preds = %139, %144
  %151 = phi i32* [ %149, %144 ], [ null, %139 ]
  store i32 2, i32* %151, align 4
  %152 = load i64, i64* %127, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %127, align 8
  br i1 %3, label %154, label %423

154:                                              ; preds = %150
  %155 = load i64, i64* %115, align 8
  %156 = load i64, i64* %118, align 8
  %157 = sub i64 %155, %156
  %158 = icmp eq i64 %157, 0
  %159 = shl i64 %157, 7
  %160 = add i64 %159, -1
  %161 = select i1 %158, i64 0, i64 %160
  %162 = load i64, i64* %125, align 8
  %163 = add i64 %162, %153
  %164 = icmp eq i64 %161, %163
  %165 = inttoptr i64 %156 to i32**
  %166 = inttoptr i64 %155 to i32**
  br i1 %164, label %167, label %173

167:                                              ; preds = %154
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %7) #18
  %168 = load i64, i64* %127, align 8
  %169 = load i64, i64* %125, align 8
  %170 = load i32**, i32*** %117, align 8
  %171 = load i32**, i32*** %114, align 8
  %172 = add i64 %169, %168
  br label %173

173:                                              ; preds = %167, %154
  %174 = phi i64 [ %172, %167 ], [ %163, %154 ]
  %175 = phi i32** [ %171, %167 ], [ %166, %154 ]
  %176 = phi i32** [ %170, %167 ], [ %165, %154 ]
  %177 = icmp eq i32** %175, %176
  br i1 %177, label %184, label %178

178:                                              ; preds = %173
  %179 = lshr i64 %174, 10
  %180 = getelementptr inbounds i32*, i32** %176, i64 %179
  %181 = load i32*, i32** %180, align 8
  %182 = and i64 %174, 1023
  %183 = getelementptr inbounds i32, i32* %181, i64 %182
  br label %184

184:                                              ; preds = %173, %178
  %185 = phi i32* [ %183, %178 ], [ null, %173 ]
  store i32 1, i32* %185, align 4
  %186 = load i64, i64* %127, align 8
  %187 = add i64 %186, 1
  store i64 %187, i64* %127, align 8
  br label %423

188:                                              ; preds = %111
  br i1 %4, label %189, label %251

189:                                              ; preds = %188
  %190 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 1
  %191 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %192 = bitcast i64* %190 to <2 x i64>*
  %193 = load <2 x i64>, <2 x i64>* %192, align 8
  %194 = add <2 x i64> %193, <i64 1, i64 -1>
  %195 = bitcast i64* %190 to <2 x i64>*
  store <2 x i64> %194, <2 x i64>* %195, align 8
  %196 = extractelement <2 x i64> %194, i32 0
  %197 = icmp ult i64 %196, 2048
  %198 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 1
  br i1 %197, label %199, label %203

199:                                              ; preds = %189
  %200 = bitcast i32*** %198 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = extractelement <2 x i64> %194, i32 1
  br label %213

203:                                              ; preds = %189
  %204 = bitcast i32*** %198 to i8***
  %205 = load i8**, i8*** %204, align 8
  %206 = load i8*, i8** %205, align 8
  tail call void @_ZdlPv(i8* %206) #19
  %207 = load i32**, i32*** %198, align 8
  %208 = getelementptr inbounds i32*, i32** %207, i64 1
  store i32** %208, i32*** %198, align 8
  %209 = load i64, i64* %190, align 8
  %210 = add i64 %209, -1024
  store i64 %210, i64* %190, align 8
  %211 = ptrtoint i32** %208 to i64
  %212 = load i64, i64* %191, align 8
  br label %213

213:                                              ; preds = %199, %203
  %214 = phi i64 [ %202, %199 ], [ %212, %203 ]
  %215 = phi i64 [ %196, %199 ], [ %210, %203 ]
  %216 = phi i64 [ %201, %199 ], [ %211, %203 ]
  %217 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 2
  %218 = bitcast i32*** %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = sub i64 %219, %216
  %221 = icmp eq i64 %220, 0
  %222 = shl i64 %220, 7
  %223 = add i64 %222, -1
  %224 = select i1 %221, i64 0, i64 %223
  %225 = add i64 %214, %215
  %226 = icmp eq i64 %224, %225
  %227 = inttoptr i64 %216 to i32**
  %228 = inttoptr i64 %219 to i32**
  br i1 %226, label %229, label %236

229:                                              ; preds = %213
  %230 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %7) #18
  %231 = load i64, i64* %191, align 8
  %232 = load i64, i64* %190, align 8
  %233 = load i32**, i32*** %230, align 8
  %234 = load i32**, i32*** %217, align 8
  %235 = add i64 %232, %231
  br label %236

236:                                              ; preds = %229, %213
  %237 = phi i64 [ %235, %229 ], [ %225, %213 ]
  %238 = phi i32** [ %234, %229 ], [ %228, %213 ]
  %239 = phi i32** [ %233, %229 ], [ %227, %213 ]
  %240 = icmp eq i32** %238, %239
  br i1 %240, label %247, label %241

241:                                              ; preds = %236
  %242 = lshr i64 %237, 10
  %243 = getelementptr inbounds i32*, i32** %239, i64 %242
  %244 = load i32*, i32** %243, align 8
  %245 = and i64 %237, 1023
  %246 = getelementptr inbounds i32, i32* %244, i64 %245
  br label %247

247:                                              ; preds = %236, %241
  %248 = phi i32* [ %246, %241 ], [ null, %236 ]
  store i32 6, i32* %248, align 4
  %249 = load i64, i64* %191, align 8
  %250 = add i64 %249, 1
  store i64 %250, i64* %191, align 8
  br label %251

251:                                              ; preds = %247, %188
  br i1 %16, label %293, label %252

252:                                              ; preds = %251
  %253 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 2
  %254 = bitcast i32*** %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 1
  %257 = bitcast i32*** %256 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = sub i64 %255, %258
  %260 = icmp eq i64 %259, 0
  %261 = shl i64 %259, 7
  %262 = add i64 %261, -1
  %263 = select i1 %260, i64 0, i64 %262
  %264 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 1
  %265 = load i64, i64* %264, align 8
  %266 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %267 = load i64, i64* %266, align 8
  %268 = add i64 %267, %265
  %269 = icmp eq i64 %263, %268
  %270 = inttoptr i64 %258 to i32**
  %271 = inttoptr i64 %255 to i32**
  br i1 %269, label %272, label %278

272:                                              ; preds = %252
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %7) #18
  %273 = load i64, i64* %266, align 8
  %274 = load i64, i64* %264, align 8
  %275 = load i32**, i32*** %256, align 8
  %276 = load i32**, i32*** %253, align 8
  %277 = add i64 %274, %273
  br label %278

278:                                              ; preds = %272, %252
  %279 = phi i64 [ %277, %272 ], [ %268, %252 ]
  %280 = phi i32** [ %276, %272 ], [ %271, %252 ]
  %281 = phi i32** [ %275, %272 ], [ %270, %252 ]
  %282 = icmp eq i32** %280, %281
  br i1 %282, label %289, label %283

283:                                              ; preds = %278
  %284 = lshr i64 %279, 10
  %285 = getelementptr inbounds i32*, i32** %281, i64 %284
  %286 = load i32*, i32** %285, align 8
  %287 = and i64 %279, 1023
  %288 = getelementptr inbounds i32, i32* %286, i64 %287
  br label %289

289:                                              ; preds = %278, %283
  %290 = phi i32* [ %288, %283 ], [ null, %278 ]
  store i32 2, i32* %290, align 4
  %291 = load i64, i64* %266, align 8
  %292 = add i64 %291, 1
  store i64 %292, i64* %266, align 8
  br label %293

293:                                              ; preds = %251, %289
  br i1 %4, label %294, label %335

294:                                              ; preds = %293
  %295 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 2
  %296 = bitcast i32*** %295 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 1
  %299 = bitcast i32*** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = sub i64 %297, %300
  %302 = icmp eq i64 %301, 0
  %303 = shl i64 %301, 7
  %304 = add i64 %303, -1
  %305 = select i1 %302, i64 0, i64 %304
  %306 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 1
  %307 = load i64, i64* %306, align 8
  %308 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %309 = load i64, i64* %308, align 8
  %310 = add i64 %309, %307
  %311 = icmp eq i64 %305, %310
  %312 = inttoptr i64 %300 to i32**
  %313 = inttoptr i64 %297 to i32**
  br i1 %311, label %314, label %320

314:                                              ; preds = %294
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %7) #18
  %315 = load i64, i64* %308, align 8
  %316 = load i64, i64* %306, align 8
  %317 = load i32**, i32*** %298, align 8
  %318 = load i32**, i32*** %295, align 8
  %319 = add i64 %316, %315
  br label %320

320:                                              ; preds = %314, %294
  %321 = phi i64 [ %319, %314 ], [ %310, %294 ]
  %322 = phi i32** [ %318, %314 ], [ %313, %294 ]
  %323 = phi i32** [ %317, %314 ], [ %312, %294 ]
  %324 = icmp eq i32** %322, %323
  br i1 %324, label %331, label %325

325:                                              ; preds = %320
  %326 = lshr i64 %321, 10
  %327 = getelementptr inbounds i32*, i32** %323, i64 %326
  %328 = load i32*, i32** %327, align 8
  %329 = and i64 %321, 1023
  %330 = getelementptr inbounds i32, i32* %328, i64 %329
  br label %331

331:                                              ; preds = %320, %325
  %332 = phi i32* [ %330, %325 ], [ null, %320 ]
  store i32 5, i32* %332, align 4
  %333 = load i64, i64* %308, align 8
  %334 = add i64 %333, 1
  store i64 %334, i64* %308, align 8
  br label %335

335:                                              ; preds = %331, %293
  %336 = xor i1 %3, true
  %337 = or i1 %16, %336
  br i1 %337, label %423, label %338

338:                                              ; preds = %335
  %339 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 2
  %340 = bitcast i32*** %339 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 1
  %343 = bitcast i32*** %342 to i64*
  %344 = load i64, i64* %343, align 8
  %345 = sub i64 %341, %344
  %346 = icmp eq i64 %345, 0
  %347 = shl i64 %345, 7
  %348 = add i64 %347, -1
  %349 = select i1 %346, i64 0, i64 %348
  %350 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 1
  %351 = load i64, i64* %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %353 = load i64, i64* %352, align 8
  %354 = add i64 %353, %351
  %355 = icmp eq i64 %349, %354
  %356 = inttoptr i64 %344 to i32**
  %357 = inttoptr i64 %341 to i32**
  br i1 %355, label %358, label %364

358:                                              ; preds = %338
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %7) #18
  %359 = load i64, i64* %352, align 8
  %360 = load i64, i64* %350, align 8
  %361 = load i32**, i32*** %342, align 8
  %362 = load i32**, i32*** %339, align 8
  %363 = add i64 %360, %359
  br label %364

364:                                              ; preds = %358, %338
  %365 = phi i64 [ %363, %358 ], [ %354, %338 ]
  %366 = phi i32** [ %362, %358 ], [ %357, %338 ]
  %367 = phi i32** [ %361, %358 ], [ %356, %338 ]
  %368 = icmp eq i32** %366, %367
  br i1 %368, label %375, label %369

369:                                              ; preds = %364
  %370 = lshr i64 %365, 10
  %371 = getelementptr inbounds i32*, i32** %367, i64 %370
  %372 = load i32*, i32** %371, align 8
  %373 = and i64 %365, 1023
  %374 = getelementptr inbounds i32, i32* %372, i64 %373
  br label %375

375:                                              ; preds = %364, %369
  %376 = phi i32* [ %374, %369 ], [ null, %364 ]
  store i32 1, i32* %376, align 4
  %377 = load i64, i64* %352, align 8
  %378 = add i64 %377, 1
  store i64 %378, i64* %352, align 8
  br label %423

379:                                              ; preds = %15
  %380 = xor i1 %3, true
  %381 = or i1 %16, %380
  br i1 %381, label %423, label %382

382:                                              ; preds = %379
  %383 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 2
  %384 = bitcast i32*** %383 to i64*
  %385 = load i64, i64* %384, align 8
  %386 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 1
  %387 = bitcast i32*** %386 to i64*
  %388 = load i64, i64* %387, align 8
  %389 = sub i64 %385, %388
  %390 = icmp eq i64 %389, 0
  %391 = shl i64 %389, 7
  %392 = add i64 %391, -1
  %393 = select i1 %390, i64 0, i64 %392
  %394 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 1
  %395 = load i64, i64* %394, align 8
  %396 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %397 = load i64, i64* %396, align 8
  %398 = add i64 %397, %395
  %399 = icmp eq i64 %393, %398
  %400 = inttoptr i64 %388 to i32**
  %401 = inttoptr i64 %385 to i32**
  br i1 %399, label %402, label %408

402:                                              ; preds = %382
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %7) #18
  %403 = load i64, i64* %396, align 8
  %404 = load i64, i64* %394, align 8
  %405 = load i32**, i32*** %386, align 8
  %406 = load i32**, i32*** %383, align 8
  %407 = add i64 %404, %403
  br label %408

408:                                              ; preds = %402, %382
  %409 = phi i64 [ %407, %402 ], [ %398, %382 ]
  %410 = phi i32** [ %406, %402 ], [ %401, %382 ]
  %411 = phi i32** [ %405, %402 ], [ %400, %382 ]
  %412 = icmp eq i32** %410, %411
  br i1 %412, label %419, label %413

413:                                              ; preds = %408
  %414 = lshr i64 %409, 10
  %415 = getelementptr inbounds i32*, i32** %411, i64 %414
  %416 = load i32*, i32** %415, align 8
  %417 = and i64 %409, 1023
  %418 = getelementptr inbounds i32, i32* %416, i64 %417
  br label %419

419:                                              ; preds = %408, %413
  %420 = phi i32* [ %418, %413 ], [ null, %408 ]
  store i32 1, i32* %420, align 4
  %421 = load i64, i64* %396, align 8
  %422 = add i64 %421, 1
  store i64 %422, i64* %396, align 8
  br label %423

423:                                              ; preds = %379, %335, %67, %17, %112, %15, %419, %107, %375, %184, %150, %55
  %424 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 1
  %425 = load i32**, i32*** %424, align 8
  %426 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 1
  %427 = load i64, i64* %426, align 8
  %428 = lshr i64 %427, 10
  %429 = getelementptr inbounds i32*, i32** %425, i64 %428
  %430 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 0, i32 2
  %431 = load i32**, i32*** %430, align 8
  %432 = icmp eq i32** %431, %425
  %433 = ptrtoint i32** %431 to i64
  %434 = ptrtoint i32** %425 to i64
  br i1 %432, label %439, label %435

435:                                              ; preds = %423
  %436 = load i32*, i32** %429, align 8
  %437 = and i64 %427, 1023
  %438 = getelementptr inbounds i32, i32* %436, i64 %437
  br label %439

439:                                              ; preds = %423, %435
  %440 = phi i32* [ %438, %435 ], [ null, %423 ]
  %441 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %442 = load i64, i64* %441, align 8
  %443 = add i64 %442, %427
  %444 = lshr i64 %443, 10
  %445 = getelementptr inbounds i32*, i32** %425, i64 %444
  %446 = and i64 %443, 1023
  br label %447

447:                                              ; preds = %469, %439
  %448 = phi i32** [ %470, %469 ], [ %429, %439 ]
  %449 = phi i32* [ %471, %469 ], [ %440, %439 ]
  %450 = bitcast i32** %448 to i64*
  br label %451

451:                                              ; preds = %447, %463
  %452 = phi i32* [ %464, %463 ], [ %449, %447 ]
  br i1 %432, label %456, label %453

453:                                              ; preds = %451
  %454 = load i32*, i32** %445, align 8
  %455 = getelementptr inbounds i32, i32* %454, i64 %446
  br label %456

456:                                              ; preds = %451, %453
  %457 = phi i32* [ %455, %453 ], [ null, %451 ]
  %458 = icmp eq i32* %457, %452
  br i1 %458, label %472, label %459

459:                                              ; preds = %456
  %460 = load i32, i32* %452, align 4
  %461 = add i32 %460, -1
  %462 = icmp ult i32 %461, 2
  br i1 %462, label %472, label %463

463:                                              ; preds = %459
  %464 = getelementptr inbounds i32, i32* %452, i64 1
  %465 = ptrtoint i32* %464 to i64
  %466 = load i64, i64* %450, align 8
  %467 = sub i64 %465, %466
  %468 = icmp eq i64 %467, 4096
  br i1 %468, label %469, label %451

469:                                              ; preds = %463
  %470 = getelementptr inbounds i32*, i32** %448, i64 1
  %471 = load i32*, i32** %470, align 8
  br label %447

472:                                              ; preds = %456, %459
  %473 = phi i1 [ false, %456 ], [ true, %459 ]
  br i1 %1, label %474, label %507

474:                                              ; preds = %472
  br i1 %473, label %475, label %479

475:                                              ; preds = %474
  %476 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 16
  %477 = load i8, i8* %476, align 8, !range !2
  %478 = icmp eq i8 %477, 0
  br i1 %478, label %507, label %479

479:                                              ; preds = %475, %474
  %480 = sub i64 %433, %434
  %481 = icmp eq i64 %480, 0
  %482 = shl i64 %480, 7
  %483 = add i64 %482, -1
  %484 = select i1 %481, i64 0, i64 %483
  %485 = icmp eq i64 %484, %443
  br i1 %485, label %486, label %492

486:                                              ; preds = %479
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %7) #18
  %487 = load i64, i64* %441, align 8
  %488 = load i64, i64* %426, align 8
  %489 = load i32**, i32*** %424, align 8
  %490 = load i32**, i32*** %430, align 8
  %491 = add i64 %488, %487
  br label %492

492:                                              ; preds = %486, %479
  %493 = phi i64 [ %491, %486 ], [ %443, %479 ]
  %494 = phi i32** [ %490, %486 ], [ %431, %479 ]
  %495 = phi i32** [ %489, %486 ], [ %425, %479 ]
  %496 = icmp eq i32** %494, %495
  br i1 %496, label %503, label %497

497:                                              ; preds = %492
  %498 = lshr i64 %493, 10
  %499 = getelementptr inbounds i32*, i32** %495, i64 %498
  %500 = load i32*, i32** %499, align 8
  %501 = and i64 %493, 1023
  %502 = getelementptr inbounds i32, i32* %500, i64 %501
  br label %503

503:                                              ; preds = %492, %497
  %504 = phi i32* [ %502, %497 ], [ null, %492 ]
  store i32 0, i32* %504, align 4
  %505 = load i64, i64* %441, align 8
  %506 = add i64 %505, 1
  store i64 %506, i64* %441, align 8
  br label %507

507:                                              ; preds = %475, %503, %472
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager18CreateTaskSequenceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_12DnsQueryTypeENS_18HostResolverSourceEiNS_15SecureDnsPolicyENS_12HostResolver21ResolveHostParameters10CacheUsageEPNS_14ResolveContextEPNS_13SecureDnsModeEPNS1_5dequeINS0_8TaskTypeENS5_ISL_EEEE(%"class.net::HostResolverManager"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32, i32, i32, %"class.net::ResolveContext"*, i32* nocapture, %"class.std::__1::deque"*) local_unnamed_addr #0 align 2 {
  %11 = icmp eq i32 %5, 1
  br i1 %11, label %26, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %14 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %13, align 8
  %15 = icmp eq %"class.net::DnsClient"* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.net::DnsClient"* %14 to %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)***
  %18 = load %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)**, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*** %17, align 8
  %19 = getelementptr inbounds %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)** %18, i64 12
  %20 = load %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)** %19, align 8
  %21 = tail call %"struct.net::DnsConfig"* %20(%"class.net::DnsClient"* nonnull %14) #18
  %22 = icmp eq %"struct.net::DnsConfig"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %21, i64 0, i32 14
  %25 = load i32, i32* %24, align 8
  br label %26

26:                                               ; preds = %10, %12, %16, %23
  %27 = phi i32 [ 0, %10 ], [ %25, %23 ], [ 0, %16 ], [ 0, %12 ]
  store i32 %27, i32* %8, align 4
  %28 = icmp ne i32 %6, 2
  br i1 %28, label %29, label %84

29:                                               ; preds = %26
  %30 = icmp eq i32 %27, 2
  %31 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %30, label %34, label %55

34:                                               ; preds = %29
  br i1 %33, label %35, label %37

35:                                               ; preds = %34
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE20__add_front_capacityEv(%"class.std::__1::deque"* %9) #18
  %36 = load i64, i64* %31, align 8
  br label %37

37:                                               ; preds = %35, %34
  %38 = phi i64 [ %36, %35 ], [ %32, %34 ]
  %39 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 0, i32 1
  %40 = load i32**, i32*** %39, align 8
  %41 = lshr i64 %38, 10
  %42 = getelementptr inbounds i32*, i32** %40, i64 %41
  %43 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 0, i32 2
  %44 = load i32**, i32*** %43, align 8
  %45 = icmp eq i32** %44, %40
  %46 = load i32*, i32** %42, align 8
  %47 = and i64 %38, 1023
  %48 = getelementptr inbounds i32, i32* %46, i64 %47
  %49 = select i1 %45, i32* null, i32* %48
  %50 = icmp eq i32* %49, %46
  br i1 %50, label %51, label %76

51:                                               ; preds = %37
  %52 = getelementptr inbounds i32*, i32** %42, i64 -1
  %53 = load i32*, i32** %52, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 1024
  br label %76

55:                                               ; preds = %29
  br i1 %33, label %56, label %58

56:                                               ; preds = %55
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE20__add_front_capacityEv(%"class.std::__1::deque"* %9) #18
  %57 = load i64, i64* %31, align 8
  br label %58

58:                                               ; preds = %56, %55
  %59 = phi i64 [ %57, %56 ], [ %32, %55 ]
  %60 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 0, i32 1
  %61 = load i32**, i32*** %60, align 8
  %62 = lshr i64 %59, 10
  %63 = getelementptr inbounds i32*, i32** %61, i64 %62
  %64 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 0, i32 2
  %65 = load i32**, i32*** %64, align 8
  %66 = icmp eq i32** %65, %61
  %67 = load i32*, i32** %63, align 8
  %68 = and i64 %59, 1023
  %69 = getelementptr inbounds i32, i32* %67, i64 %68
  %70 = select i1 %66, i32* null, i32* %69
  %71 = icmp eq i32* %70, %67
  br i1 %71, label %72, label %76

72:                                               ; preds = %58
  %73 = getelementptr inbounds i32*, i32** %63, i64 -1
  %74 = load i32*, i32** %73, align 8
  %75 = getelementptr inbounds i32, i32* %74, i64 1024
  br label %76

76:                                               ; preds = %72, %58, %51, %37
  %77 = phi i32* [ %54, %51 ], [ %49, %37 ], [ %75, %72 ], [ %70, %58 ]
  %78 = phi i32 [ 6, %51 ], [ 6, %37 ], [ 4, %72 ], [ 4, %58 ]
  %79 = getelementptr inbounds i32, i32* %77, i64 -1
  store i32 %78, i32* %79, align 4
  %80 = bitcast i64* %31 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 8
  %82 = add <2 x i64> %81, <i64 -1, i64 1>
  %83 = bitcast i64* %31 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %83, align 8
  br label %84

84:                                               ; preds = %76, %26
  %85 = icmp eq i32 %6, 1
  switch i32 %3, label %429 [
    i32 0, label %86
    i32 1, label %317
    i32 2, label %358
    i32 3, label %388
  ]

86:                                               ; preds = %84
  %87 = and i32 %4, 1
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %132, label %89

89:                                               ; preds = %86
  %90 = tail call zeroext i1 @_ZN3net13IsAddressTypeENS_12DnsQueryTypeE(i32 %2) #18
  br i1 %90, label %91, label %132

91:                                               ; preds = %89
  %92 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 0, i32 2
  %93 = bitcast i32*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 0, i32 1
  %96 = bitcast i32*** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %94, %97
  %99 = icmp eq i64 %98, 0
  %100 = shl i64 %98, 7
  %101 = add i64 %100, -1
  %102 = select i1 %99, i64 0, i64 %101
  %103 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, %104
  %108 = icmp eq i64 %102, %107
  %109 = inttoptr i64 %97 to i32**
  %110 = inttoptr i64 %94 to i32**
  br i1 %108, label %111, label %117

111:                                              ; preds = %91
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %9) #18
  %112 = load i64, i64* %105, align 8
  %113 = load i64, i64* %103, align 8
  %114 = load i32**, i32*** %95, align 8
  %115 = load i32**, i32*** %92, align 8
  %116 = add i64 %113, %112
  br label %117

117:                                              ; preds = %111, %91
  %118 = phi i64 [ %116, %111 ], [ %107, %91 ]
  %119 = phi i32** [ %115, %111 ], [ %110, %91 ]
  %120 = phi i32** [ %114, %111 ], [ %109, %91 ]
  %121 = icmp eq i32** %119, %120
  br i1 %121, label %128, label %122

122:                                              ; preds = %117
  %123 = lshr i64 %118, 10
  %124 = getelementptr inbounds i32*, i32** %120, i64 %123
  %125 = load i32*, i32** %124, align 8
  %126 = and i64 %118, 1023
  %127 = getelementptr inbounds i32, i32* %125, i64 %126
  br label %128

128:                                              ; preds = %117, %122
  %129 = phi i32* [ %127, %122 ], [ null, %117 ]
  store i32 0, i32* %129, align 4
  %130 = load i64, i64* %105, align 8
  %131 = add i64 %130, 1
  store i64 %131, i64* %105, align 8
  br label %429

132:                                              ; preds = %86, %89
  %133 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = zext i8 %135 to i64
  %140 = select i1 %136, i64 %138, i64 %139
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %160, label %142

142:                                              ; preds = %132
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  %145 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %146 = select i1 %136, i8* %144, i8* %145
  %147 = getelementptr inbounds i8, i8* %146, i64 %140
  %148 = getelementptr inbounds i8, i8* %147, i64 -1
  %149 = load i8, i8* %148, align 1
  %150 = icmp eq i8 %149, 46
  br i1 %150, label %151, label %158

151:                                              ; preds = %142
  %152 = icmp ugt i64 %140, 7
  br i1 %152, label %153, label %160

153:                                              ; preds = %151
  %154 = add i64 %140, -7
  %155 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKc(%"class.std::__1::basic_string"* %1, i64 %154, i64 7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZZN3net12_GLOBAL__N_125ResemblesMulticastDNSNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE7kSuffix, i64 0, i64 0)) #18
  %156 = icmp eq i32 %155, 0
  %157 = tail call zeroext i1 @_ZN3net13IsAddressTypeENS_12DnsQueryTypeE(i32 %2) #18
  br i1 %156, label %252, label %167

158:                                              ; preds = %142
  %159 = icmp ugt i64 %140, 6
  br i1 %159, label %162, label %160

160:                                              ; preds = %151, %158, %132
  %161 = tail call zeroext i1 @_ZN3net13IsAddressTypeENS_12DnsQueryTypeE(i32 %2) #18
  br i1 %161, label %169, label %172

162:                                              ; preds = %158
  %163 = add i64 %140, -6
  %164 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 %163, i64 6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZZN3net12_GLOBAL__N_125ResemblesMulticastDNSNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE7kSuffix, i64 0, i64 0), i64 6) #18
  %165 = icmp eq i32 %164, 0
  %166 = tail call zeroext i1 @_ZN3net13IsAddressTypeENS_12DnsQueryTypeE(i32 %2) #18
  br i1 %165, label %252, label %167

167:                                              ; preds = %153, %162
  %168 = phi i1 [ %166, %162 ], [ %157, %153 ]
  br i1 %168, label %169, label %172

169:                                              ; preds = %160, %167
  %170 = load i32, i32* %8, align 4
  %171 = icmp ne i32 %170, 2
  br label %172

172:                                              ; preds = %160, %169, %167
  %173 = phi i1 [ false, %167 ], [ %171, %169 ], [ false, %160 ]
  %174 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %175 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %174, align 8
  %176 = icmp eq %"class.net::DnsClient"* %175, null
  br i1 %176, label %210, label %177

177:                                              ; preds = %172
  %178 = bitcast %"class.net::DnsClient"* %175 to %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)***
  %179 = load %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)**, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*** %178, align 8
  %180 = getelementptr inbounds %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)** %179, i64 12
  %181 = load %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)** %180, align 8
  %182 = tail call %"struct.net::DnsConfig"* %181(%"class.net::DnsClient"* nonnull %175) #18
  %183 = icmp eq %"struct.net::DnsConfig"* %182, null
  br i1 %183, label %210, label %184

184:                                              ; preds = %177
  %185 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %174, align 8
  %186 = bitcast %"class.net::DnsClient"* %185 to i1 (%"class.net::DnsClient"*)***
  %187 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %186, align 8
  %188 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %187, i64 3
  %189 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %188, align 8
  %190 = tail call zeroext i1 %189(%"class.net::DnsClient"* %185) #18
  br i1 %190, label %191, label %207

191:                                              ; preds = %184
  %192 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %174, align 8
  %193 = bitcast %"class.net::DnsClient"* %192 to i1 (%"class.net::DnsClient"*)***
  %194 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %193, align 8
  %195 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %194, i64 7
  %196 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %195, align 8
  %197 = tail call zeroext i1 %196(%"class.net::DnsClient"* %192) #18
  br i1 %197, label %207, label %198

198:                                              ; preds = %191
  %199 = tail call zeroext i1 @_ZN3net13IsAddressTypeENS_12DnsQueryTypeE(i32 %2) #18
  br i1 %199, label %207, label %200

200:                                              ; preds = %198
  %201 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %174, align 8
  %202 = bitcast %"class.net::DnsClient"* %201 to i1 (%"class.net::DnsClient"*)***
  %203 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %202, align 8
  %204 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %203, i64 4
  %205 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %204, align 8
  %206 = tail call zeroext i1 %205(%"class.net::DnsClient"* %201) #18
  br label %207

207:                                              ; preds = %198, %200, %191, %184
  %208 = phi i1 [ false, %191 ], [ false, %184 ], [ true, %198 ], [ %206, %200 ]
  %209 = load i32, i32* %8, align 4
  tail call void @_ZN3net19HostResolverManager12PushDnsTasksEbNS_13SecureDnsModeEbbbPNS_14ResolveContextEPNSt3__15dequeINS0_8TaskTypeENS4_9allocatorIS6_EEEE(%"class.net::HostResolverManager"* %0, i1 zeroext %173, i32 %209, i1 zeroext %208, i1 zeroext %28, i1 zeroext %85, %"class.net::ResolveContext"* %7, %"class.std::__1::deque"* %9)
  br label %429

210:                                              ; preds = %172, %177
  br i1 %173, label %211, label %429

211:                                              ; preds = %210
  %212 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 0, i32 2
  %213 = bitcast i32*** %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 0, i32 1
  %216 = bitcast i32*** %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = sub i64 %214, %217
  %219 = icmp eq i64 %218, 0
  %220 = shl i64 %218, 7
  %221 = add i64 %220, -1
  %222 = select i1 %219, i64 0, i64 %221
  %223 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 1
  %224 = load i64, i64* %223, align 8
  %225 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %226 = load i64, i64* %225, align 8
  %227 = add i64 %226, %224
  %228 = icmp eq i64 %222, %227
  %229 = inttoptr i64 %217 to i32**
  %230 = inttoptr i64 %214 to i32**
  br i1 %228, label %231, label %237

231:                                              ; preds = %211
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %9) #18
  %232 = load i64, i64* %225, align 8
  %233 = load i64, i64* %223, align 8
  %234 = load i32**, i32*** %215, align 8
  %235 = load i32**, i32*** %212, align 8
  %236 = add i64 %233, %232
  br label %237

237:                                              ; preds = %231, %211
  %238 = phi i64 [ %236, %231 ], [ %227, %211 ]
  %239 = phi i32** [ %235, %231 ], [ %230, %211 ]
  %240 = phi i32** [ %234, %231 ], [ %229, %211 ]
  %241 = icmp eq i32** %239, %240
  br i1 %241, label %248, label %242

242:                                              ; preds = %237
  %243 = lshr i64 %238, 10
  %244 = getelementptr inbounds i32*, i32** %240, i64 %243
  %245 = load i32*, i32** %244, align 8
  %246 = and i64 %238, 1023
  %247 = getelementptr inbounds i32, i32* %245, i64 %246
  br label %248

248:                                              ; preds = %237, %242
  %249 = phi i32* [ %247, %242 ], [ null, %237 ]
  store i32 0, i32* %249, align 4
  %250 = load i64, i64* %225, align 8
  %251 = add i64 %250, 1
  store i64 %251, i64* %225, align 8
  br label %429

252:                                              ; preds = %153, %162
  %253 = phi i1 [ %157, %153 ], [ %166, %162 ]
  %254 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 0, i32 2
  %255 = bitcast i32*** %254 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 0, i32 1
  %258 = bitcast i32*** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = sub i64 %256, %259
  %261 = icmp eq i64 %260, 0
  %262 = shl i64 %260, 7
  %263 = add i64 %262, -1
  %264 = select i1 %261, i64 0, i64 %263
  %265 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 1
  %266 = load i64, i64* %265, align 8
  %267 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %268 = load i64, i64* %267, align 8
  %269 = add i64 %268, %266
  %270 = icmp eq i64 %264, %269
  %271 = inttoptr i64 %259 to i32**
  %272 = inttoptr i64 %256 to i32**
  br i1 %253, label %273, label %295

273:                                              ; preds = %252
  br i1 %270, label %274, label %280

274:                                              ; preds = %273
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %9) #18
  %275 = load i64, i64* %267, align 8
  %276 = load i64, i64* %265, align 8
  %277 = load i32**, i32*** %257, align 8
  %278 = load i32**, i32*** %254, align 8
  %279 = add i64 %276, %275
  br label %280

280:                                              ; preds = %274, %273
  %281 = phi i64 [ %279, %274 ], [ %269, %273 ]
  %282 = phi i32** [ %278, %274 ], [ %272, %273 ]
  %283 = phi i32** [ %277, %274 ], [ %271, %273 ]
  %284 = icmp eq i32** %282, %283
  br i1 %284, label %291, label %285

285:                                              ; preds = %280
  %286 = lshr i64 %281, 10
  %287 = getelementptr inbounds i32*, i32** %283, i64 %286
  %288 = load i32*, i32** %287, align 8
  %289 = and i64 %281, 1023
  %290 = getelementptr inbounds i32, i32* %288, i64 %289
  br label %291

291:                                              ; preds = %280, %285
  %292 = phi i32* [ %290, %285 ], [ null, %280 ]
  store i32 0, i32* %292, align 4
  %293 = load i64, i64* %267, align 8
  %294 = add i64 %293, 1
  store i64 %294, i64* %267, align 8
  br label %429

295:                                              ; preds = %252
  br i1 %270, label %296, label %302

296:                                              ; preds = %295
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %9) #18
  %297 = load i64, i64* %267, align 8
  %298 = load i64, i64* %265, align 8
  %299 = load i32**, i32*** %257, align 8
  %300 = load i32**, i32*** %254, align 8
  %301 = add i64 %298, %297
  br label %302

302:                                              ; preds = %296, %295
  %303 = phi i64 [ %301, %296 ], [ %269, %295 ]
  %304 = phi i32** [ %300, %296 ], [ %272, %295 ]
  %305 = phi i32** [ %299, %296 ], [ %271, %295 ]
  %306 = icmp eq i32** %304, %305
  br i1 %306, label %313, label %307

307:                                              ; preds = %302
  %308 = lshr i64 %303, 10
  %309 = getelementptr inbounds i32*, i32** %305, i64 %308
  %310 = load i32*, i32** %309, align 8
  %311 = and i64 %303, 1023
  %312 = getelementptr inbounds i32, i32* %310, i64 %311
  br label %313

313:                                              ; preds = %302, %307
  %314 = phi i32* [ %312, %307 ], [ null, %302 ]
  store i32 3, i32* %314, align 4
  %315 = load i64, i64* %267, align 8
  %316 = add i64 %315, 1
  store i64 %316, i64* %267, align 8
  br label %429

317:                                              ; preds = %84
  %318 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 0, i32 2
  %319 = bitcast i32*** %318 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 0, i32 1
  %322 = bitcast i32*** %321 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = sub i64 %320, %323
  %325 = icmp eq i64 %324, 0
  %326 = shl i64 %324, 7
  %327 = add i64 %326, -1
  %328 = select i1 %325, i64 0, i64 %327
  %329 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 1
  %330 = load i64, i64* %329, align 8
  %331 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %332 = load i64, i64* %331, align 8
  %333 = add i64 %332, %330
  %334 = icmp eq i64 %328, %333
  %335 = inttoptr i64 %323 to i32**
  %336 = inttoptr i64 %320 to i32**
  br i1 %334, label %337, label %343

337:                                              ; preds = %317
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %9) #18
  %338 = load i64, i64* %331, align 8
  %339 = load i64, i64* %329, align 8
  %340 = load i32**, i32*** %321, align 8
  %341 = load i32**, i32*** %318, align 8
  %342 = add i64 %339, %338
  br label %343

343:                                              ; preds = %337, %317
  %344 = phi i64 [ %342, %337 ], [ %333, %317 ]
  %345 = phi i32** [ %341, %337 ], [ %336, %317 ]
  %346 = phi i32** [ %340, %337 ], [ %335, %317 ]
  %347 = icmp eq i32** %345, %346
  br i1 %347, label %354, label %348

348:                                              ; preds = %343
  %349 = lshr i64 %344, 10
  %350 = getelementptr inbounds i32*, i32** %346, i64 %349
  %351 = load i32*, i32** %350, align 8
  %352 = and i64 %344, 1023
  %353 = getelementptr inbounds i32, i32* %351, i64 %352
  br label %354

354:                                              ; preds = %343, %348
  %355 = phi i32* [ %353, %348 ], [ null, %343 ]
  store i32 0, i32* %355, align 4
  %356 = load i64, i64* %331, align 8
  %357 = add i64 %356, 1
  store i64 %357, i64* %331, align 8
  br label %429

358:                                              ; preds = %84
  %359 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %360 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %359, align 8
  %361 = icmp eq %"class.net::DnsClient"* %360, null
  br i1 %361, label %429, label %362

362:                                              ; preds = %358
  %363 = bitcast %"class.net::DnsClient"* %360 to %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)***
  %364 = load %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)**, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*** %363, align 8
  %365 = getelementptr inbounds %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)** %364, i64 12
  %366 = load %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)** %365, align 8
  %367 = tail call %"struct.net::DnsConfig"* %366(%"class.net::DnsClient"* nonnull %360) #18
  %368 = icmp eq %"struct.net::DnsConfig"* %367, null
  br i1 %368, label %429, label %369

369:                                              ; preds = %362
  %370 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %359, align 8
  %371 = bitcast %"class.net::DnsClient"* %370 to i1 (%"class.net::DnsClient"*)***
  %372 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %371, align 8
  %373 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %372, i64 3
  %374 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %373, align 8
  %375 = tail call zeroext i1 %374(%"class.net::DnsClient"* %370) #18
  br i1 %375, label %376, label %385

376:                                              ; preds = %369
  %377 = tail call zeroext i1 @_ZN3net13IsAddressTypeENS_12DnsQueryTypeE(i32 %2) #18
  br i1 %377, label %385, label %378

378:                                              ; preds = %376
  %379 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %359, align 8
  %380 = bitcast %"class.net::DnsClient"* %379 to i1 (%"class.net::DnsClient"*)***
  %381 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %380, align 8
  %382 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %381, i64 4
  %383 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %382, align 8
  %384 = tail call zeroext i1 %383(%"class.net::DnsClient"* %379) #18
  br label %385

385:                                              ; preds = %376, %378, %369
  %386 = phi i1 [ false, %369 ], [ true, %376 ], [ %384, %378 ]
  %387 = load i32, i32* %8, align 4
  tail call void @_ZN3net19HostResolverManager12PushDnsTasksEbNS_13SecureDnsModeEbbbPNS_14ResolveContextEPNSt3__15dequeINS0_8TaskTypeENS4_9allocatorIS6_EEEE(%"class.net::HostResolverManager"* %0, i1 zeroext false, i32 %387, i1 zeroext %386, i1 zeroext %28, i1 zeroext %85, %"class.net::ResolveContext"* %7, %"class.std::__1::deque"* %9)
  br label %429

388:                                              ; preds = %84
  %389 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 0, i32 2
  %390 = bitcast i32*** %389 to i64*
  %391 = load i64, i64* %390, align 8
  %392 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 0, i32 1
  %393 = bitcast i32*** %392 to i64*
  %394 = load i64, i64* %393, align 8
  %395 = sub i64 %391, %394
  %396 = icmp eq i64 %395, 0
  %397 = shl i64 %395, 7
  %398 = add i64 %397, -1
  %399 = select i1 %396, i64 0, i64 %398
  %400 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 1
  %401 = load i64, i64* %400, align 8
  %402 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %403 = load i64, i64* %402, align 8
  %404 = add i64 %403, %401
  %405 = icmp eq i64 %399, %404
  %406 = inttoptr i64 %394 to i32**
  %407 = inttoptr i64 %391 to i32**
  br i1 %405, label %408, label %414

408:                                              ; preds = %388
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %9) #18
  %409 = load i64, i64* %402, align 8
  %410 = load i64, i64* %400, align 8
  %411 = load i32**, i32*** %392, align 8
  %412 = load i32**, i32*** %389, align 8
  %413 = add i64 %410, %409
  br label %414

414:                                              ; preds = %408, %388
  %415 = phi i64 [ %413, %408 ], [ %404, %388 ]
  %416 = phi i32** [ %412, %408 ], [ %407, %388 ]
  %417 = phi i32** [ %411, %408 ], [ %406, %388 ]
  %418 = icmp eq i32** %416, %417
  br i1 %418, label %425, label %419

419:                                              ; preds = %414
  %420 = lshr i64 %415, 10
  %421 = getelementptr inbounds i32*, i32** %417, i64 %420
  %422 = load i32*, i32** %421, align 8
  %423 = and i64 %415, 1023
  %424 = getelementptr inbounds i32, i32* %422, i64 %423
  br label %425

425:                                              ; preds = %414, %419
  %426 = phi i32* [ %424, %419 ], [ null, %414 ]
  store i32 3, i32* %426, align 4
  %427 = load i64, i64* %402, align 8
  %428 = add i64 %427, 1
  store i64 %428, i64* %402, align 8
  br label %429

429:                                              ; preds = %358, %207, %248, %210, %362, %385, %128, %291, %313, %84, %425, %354
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net19HostResolverManager15IsIPv6ReachableERKNS_16NetLogWithSourceE(%"class.net::HostResolverManager"*, %"class.net::NetLogWithSource"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Value", align 8
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca %"class.net::IPAddress", align 1
  %6 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = tail call i32 @_ZN3net21NetworkChangeNotifier17GetConnectionTypeEv() #18
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %67, label %12

12:                                               ; preds = %2, %9
  %13 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  %16 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #18
  br i1 %15, label %30, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 18
  %19 = load %"class.base::TickClock"*, %"class.base::TickClock"** %18, align 8
  %20 = bitcast %"class.base::TickClock"* %19 to i64 (%"class.base::TickClock"*)***
  %21 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %20, align 8
  %22 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %21, i64 2
  %23 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %22, align 8
  %24 = tail call i64 %23(%"class.base::TickClock"* %19) #18
  %25 = load i64, i64* %13, align 8
  %26 = sub nsw i64 %24, %25
  %27 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %26, i64* %27, align 8
  %28 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %4) #18
  %29 = icmp sgt i64 %28, 1000
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #18
  br i1 %29, label %31, label %47

30:                                               ; preds = %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #18
  br label %31

31:                                               ; preds = %30, %17
  %32 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %5, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %32) #18
  call void @_ZN3net9IPAddressC2EPKhm(%"class.net::IPAddress"* nonnull %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN3net12_GLOBAL__N_117kIPv6ProbeAddressE, i64 0, i64 0), i64 16) #18
  %33 = bitcast %"class.net::HostResolverManager"* %0 to i1 (%"class.net::HostResolverManager"*, %"class.net::IPAddress"*, %"class.net::NetLogWithSource"*)***
  %34 = load i1 (%"class.net::HostResolverManager"*, %"class.net::IPAddress"*, %"class.net::NetLogWithSource"*)**, i1 (%"class.net::HostResolverManager"*, %"class.net::IPAddress"*, %"class.net::NetLogWithSource"*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.net::HostResolverManager"*, %"class.net::IPAddress"*, %"class.net::NetLogWithSource"*)*, i1 (%"class.net::HostResolverManager"*, %"class.net::IPAddress"*, %"class.net::NetLogWithSource"*)** %34, i64 4
  %36 = load i1 (%"class.net::HostResolverManager"*, %"class.net::IPAddress"*, %"class.net::NetLogWithSource"*)*, i1 (%"class.net::HostResolverManager"*, %"class.net::IPAddress"*, %"class.net::NetLogWithSource"*)** %35, align 8
  %37 = call zeroext i1 %36(%"class.net::HostResolverManager"* %0, %"class.net::IPAddress"* nonnull dereferenceable(17) %5, %"class.net::NetLogWithSource"* dereferenceable(24) %1) #18
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 14
  store i8 %38, i8* %39, align 8
  %40 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 18
  %41 = load %"class.base::TickClock"*, %"class.base::TickClock"** %40, align 8
  %42 = bitcast %"class.base::TickClock"* %41 to i64 (%"class.base::TickClock"*)***
  %43 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %42, align 8
  %44 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %43, i64 2
  %45 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %44, align 8
  %46 = call i64 %45(%"class.base::TickClock"* %41) #18
  store i64 %46, i64* %13, align 8
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %32) #18
  br label %47

47:                                               ; preds = %31, %17
  %48 = phi i8 [ 0, %31 ], [ 1, %17 ]
  %49 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %1, i64 0, i32 1
  %50 = load %"class.net::NetLog"*, %"class.net::NetLog"** %49, align 8
  %51 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %50, i64 0, i32 3
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %63, label %54, !prof !41

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %1, i64 0, i32 0
  %56 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #18
  %57 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 14
  %58 = load i8, i8* %57, align 8, !range !2, !noalias !57
  %59 = icmp ne i8 %58, 0
  %60 = icmp ne i8 %48, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 32, i1 false) #18, !alias.scope !60
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %3, i8 zeroext 6) #18
  %61 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.71, i64 0, i64 0), i64 14, i1 zeroext %59) #18
  %62 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i64 6, i1 zeroext %60) #18
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %50, i32 4, %"struct.net::NetLogSource"* dereferenceable(16) %55, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %3) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #18
  br label %63

63:                                               ; preds = %47, %54
  %64 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 14
  %65 = load i8, i8* %64, align 8, !range !2
  %66 = icmp ne i8 %65, 0
  br label %67

67:                                               ; preds = %9, %63
  %68 = phi i1 [ %66, %63 ], [ false, %9 ]
  ret i1 %68
}

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net19HostResolverManager19IsGloballyReachableERKNS_9IPAddressERKNS_16NetLogWithSourceE(%"class.net::HostResolverManager"* nocapture readnone, %"class.net::IPAddress"* dereferenceable(17), %"class.net::NetLogWithSource"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.net::IPEndPoint", align 2
  %5 = alloca %"class.net::IPEndPoint", align 2
  %6 = tail call %"class.net::ClientSocketFactory"* @_ZN3net19ClientSocketFactory17GetDefaultFactoryEv() #18
  %7 = tail call %"class.net::NetLog"* @_ZNK3net16NetLogWithSource7net_logEv(%"class.net::NetLogWithSource"* %2) #18
  %8 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %2, i64 0, i32 0
  %9 = bitcast %"class.net::ClientSocketFactory"* %6 to %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)***
  %10 = load %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)**, %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)*, %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)** %10, i64 2
  %12 = load %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)*, %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)** %11, align 8
  %13 = tail call %"class.net::DatagramClientSocket"* %12(%"class.net::ClientSocketFactory"* %6, i32 1, %"class.net::NetLog"* %7, %"struct.net::NetLogSource"* dereferenceable(16) %8) #18
  %14 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %14) #18
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %4, %"class.net::IPAddress"* dereferenceable(17) %1, i16 zeroext 53) #18
  %15 = bitcast %"class.net::DatagramClientSocket"* %13 to i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)***
  %16 = load i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)** %16, i64 9
  %18 = load i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)** %17, align 8
  %19 = call i32 %18(%"class.net::DatagramClientSocket"* %13, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %4) #18
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %14) #18
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %58

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %22) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %22, i8 -86, i64 20, i1 false)
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %5) #18
  %23 = getelementptr inbounds %"class.net::DatagramClientSocket", %"class.net::DatagramClientSocket"* %13, i64 0, i32 0
  %24 = bitcast %"class.net::DatagramClientSocket"* %13 to i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)***
  %25 = load i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*** %24, align 8
  %26 = getelementptr inbounds i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)** %25, i64 4
  %27 = load i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)** %26, align 8
  %28 = call i32 %27(%"class.net::DatagramSocket"* %23, %"class.net::IPEndPoint"* nonnull %5) #18
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %56

30:                                               ; preds = %21
  %31 = load i8, i8* %22, align 2
  %32 = icmp eq i8 %31, -2
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %35 = load i8, i8* %34, align 1
  %36 = and i8 %35, -64
  %37 = icmp eq i8 %36, -128
  br i1 %37, label %56, label %38

38:                                               ; preds = %30, %33
  %39 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %5, i64 0, i32 0, i32 0, i32 1
  %40 = load i8, i8* %39, align 2
  %41 = icmp ugt i8 %40, 3
  %42 = icmp eq i8 %31, 32
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %56

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 1
  br i1 %47, label %48, label %56

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %50 = load i8, i8* %49, align 2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %54 = load i8, i8* %53, align 1
  %55 = icmp ne i8 %54, 0
  br label %56

56:                                               ; preds = %38, %52, %44, %48, %33, %21
  %57 = phi i1 [ false, %21 ], [ false, %33 ], [ true, %48 ], [ true, %44 ], [ true, %38 ], [ %55, %52 ]
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %22) #18
  br label %58

58:                                               ; preds = %3, %56
  %59 = phi i1 [ %57, %56 ], [ false, %3 ]
  %60 = icmp eq %"class.net::DatagramClientSocket"* %13, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %58
  %62 = bitcast %"class.net::DatagramClientSocket"* %13 to void (%"class.net::DatagramClientSocket"*)***
  %63 = load void (%"class.net::DatagramClientSocket"*)**, void (%"class.net::DatagramClientSocket"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %63, i64 1
  %65 = load void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %64, align 8
  call void %65(%"class.net::DatagramClientSocket"* nonnull %13) #18
  br label %66

66:                                               ; preds = %58, %61
  ret i1 %59
}

declare %"class.net::ClientSocketFactory"* @_ZN3net19ClientSocketFactory17GetDefaultFactoryEv() local_unnamed_addr #1

declare %"class.net::NetLog"* @_ZNK3net16NetLogWithSource7net_logEv(%"class.net::NetLogWithSource"*) local_unnamed_addr #1

declare void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager19RunLoopbackProbeJobEv(%"class.net::HostResolverManager"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.335", align 8
  %3 = alloca %"class.base::OnceCallback.335", align 8
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback.479", align 8
  %7 = alloca %"class.base::OnceCallback.480", align 8
  %8 = alloca %"class.base::WeakPtr.230", align 8
  %9 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #18
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 3416) #18
  %10 = call i8* @_Znwm(i64 48) #19, !noalias !63
  %11 = bitcast i8* %10 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %11, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbvEJEEES3_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbvEJEE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !63
  %12 = getelementptr inbounds i8, i8* %10, i64 32
  %13 = bitcast i8* %12 to i64*
  store i64 ptrtoint (i1 ()* @_ZN3net12_GLOBAL__N_125HaveOnlyLoopbackAddressesEv to i64), i64* %13, align 8, !noalias !63
  %14 = bitcast %"class.base::WeakPtr.230"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #18
  %15 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #18, !noalias !68
  %16 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 21, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %16) #18, !noalias !68
  %17 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 21, i32 0, i32 1
  %18 = load i64, i64* %17, align 8, !noalias !68
  %19 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %19, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %18) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #18, !noalias !68
  %20 = call i8* @_Znwm(i64 64) #19, !noalias !71
  %21 = bitcast i8* %20 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %21, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManagerEFvbEJNS_7WeakPtrIS4_EEEEEFvbEE7RunOnceEPNS0_13BindStateBaseEb to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net19HostResolverManagerEFvbEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManagerEFvbEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #18, !noalias !71
  %22 = getelementptr inbounds i8, i8* %20, i64 32
  %23 = bitcast i8* %22 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::HostResolverManager"*, i1)* @_ZN3net19HostResolverManager28SetHaveOnlyLoopbackAddressesEb to i64), i64 0>, <2 x i64>* %23, align 8, !noalias !71
  %24 = getelementptr inbounds i8, i8* %20, i64 48
  %25 = bitcast i8* %24 to %"class.base::internal::WeakReference"*
  %26 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %25, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %26) #18, !noalias !71
  %27 = getelementptr inbounds i8, i8* %20, i64 56
  %28 = bitcast i8* %27 to i64*
  %29 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %8, i64 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8, !noalias !71
  store i64 %30, i64* %28, align 8, !noalias !71
  %31 = bitcast %"class.base::OnceCallback.335"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31)
  %32 = bitcast %"class.base::OnceCallback.335"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  %33 = call i8* @_Znwm(i64 8) #19
  %34 = bitcast i8* %33 to i64*
  store i64 0, i64* %34, align 8
  %35 = ptrtoint i8* %33 to i64
  %36 = call i8* @_Znwm(i64 56) #19, !noalias !76
  %37 = bitcast i8* %36 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %37, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFbvEEEPNSt3__110unique_ptrIbNS6_14default_deleteIbEEEEEJS5_SB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFbvEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_SA_EE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !76
  %38 = getelementptr inbounds i8, i8* %36, i64 32
  %39 = bitcast i8* %38 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.479"*, %"class.std::__1::unique_ptr.818"*)* @_ZN4base8internal20ReturnAsParamAdapterIbEEvNS_12OnceCallbackIFT_vEEEPNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEE to i64), i64* %39, align 8, !noalias !76
  %40 = getelementptr inbounds i8, i8* %36, i64 40
  %41 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %6, i64 0, i32 0, i32 0, i32 0
  %42 = ptrtoint i8* %10 to i64
  %43 = bitcast i8* %40 to i64*
  store i64 %42, i64* %43, align 8, !noalias !76
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %41, align 8, !noalias !76
  %44 = getelementptr inbounds i8, i8* %36, i64 48
  %45 = bitcast i8* %44 to i64*
  store i64 %35, i64* %45, align 8, !noalias !76
  %46 = bitcast %"class.base::OnceCallback.335"* %2 to i8**
  store i8* %36, i8** %46, align 8, !alias.scope !76
  %47 = call i8* @_Znwm(i64 56) #19, !noalias !81
  %48 = bitcast i8* %47 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %48, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvbEEEPNSt3__110unique_ptrIbNS6_14default_deleteIbEEEEEJS5_NS0_12OwnedWrapperISA_NS8_ISA_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvbEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_NS0_12OwnedWrapperIS9_NS7_IS9_EEEEEE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !81
  %49 = getelementptr inbounds i8, i8* %47, i64 32
  %50 = bitcast i8* %49 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.480"*, %"class.std::__1::unique_ptr.818"*)* @_ZN4base8internal12ReplyAdapterIbbEEvNS_12OnceCallbackIFvT0_EEEPNSt3__110unique_ptrIT_NS6_14default_deleteIS8_EEEE to i64), i64* %50, align 8, !noalias !81
  %51 = getelementptr inbounds i8, i8* %47, i64 40
  %52 = getelementptr inbounds %"class.base::OnceCallback.480", %"class.base::OnceCallback.480"* %7, i64 0, i32 0, i32 0, i32 0
  %53 = ptrtoint i8* %20 to i64
  %54 = bitcast i8* %51 to i64*
  store i64 %53, i64* %54, align 8, !noalias !81
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %52, align 8, !noalias !81
  %55 = getelementptr inbounds i8, i8* %47, i64 48
  %56 = bitcast i8* %55 to i64*
  store i64 %35, i64* %56, align 8, !noalias !81
  %57 = bitcast %"class.base::OnceCallback.335"* %3 to i8**
  store i8* %47, i8** %57, align 8, !alias.scope !81
  %58 = call zeroext i1 @_ZN4base10ThreadPool16PostTaskAndReplyERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEES9_(%"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp, %"class.base::OnceCallback.335"* nonnull %2, %"class.base::OnceCallback.335"* nonnull %3) #18
  %59 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %59) #18
  %60 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %60) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  %61 = getelementptr inbounds %"class.base::OnceCallback.480", %"class.base::OnceCallback.480"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %61) #18
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %19) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #18
  %62 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %62) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #18
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN3net12_GLOBAL__N_125HaveOnlyLoopbackAddressesEv() #0 {
  %1 = alloca %"class.base::ScopedBlockingCall", align 8
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %struct.ifaddrs*, align 8
  %4 = bitcast %"class.base::ScopedBlockingCall"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %4) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 80, i1 false)
  %5 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #18
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 236) #18
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %1, %"class.base::Location"* nonnull dereferenceable(32) %2, i32 1) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #18
  %6 = bitcast %struct.ifaddrs** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  store %struct.ifaddrs* null, %struct.ifaddrs** %3, align 8
  %7 = call i32 @getifaddrs(%struct.ifaddrs** nonnull %3) #18
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %54

9:                                                ; preds = %0
  %10 = load %struct.ifaddrs*, %struct.ifaddrs** %3, align 8
  %11 = icmp eq %struct.ifaddrs* %10, null
  br i1 %11, label %52, label %12

12:                                               ; preds = %9, %48
  %13 = phi %struct.ifaddrs* [ %50, %48 ], [ %10, %9 ]
  %14 = getelementptr inbounds %struct.ifaddrs, %struct.ifaddrs* %13, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 9
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %48

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.ifaddrs, %struct.ifaddrs* %13, i64 0, i32 3
  %20 = load %struct.sockaddr*, %struct.sockaddr** %19, align 8
  %21 = icmp eq %struct.sockaddr* %20, null
  br i1 %21, label %48, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %20, i64 0, i32 0
  %24 = load i16, i16* %23, align 2
  switch i16 %24, label %48 [
    i16 10, label %25
    i16 2, label %52
  ]

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %20, i64 0, i32 1, i64 6
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %45

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %20, i64 0, i32 1, i64 10
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %52

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %20, i64 0, i32 1, i64 14
  %37 = bitcast i8* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %20, i64 0, i32 1, i64 18
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 16777216
  br i1 %44, label %48, label %52

45:                                               ; preds = %25
  %46 = and i32 %28, 49407
  %47 = icmp eq i32 %46, 33022
  br i1 %47, label %48, label %52

48:                                               ; preds = %22, %45, %40, %18, %12
  %49 = getelementptr inbounds %struct.ifaddrs, %struct.ifaddrs* %13, i64 0, i32 0
  %50 = load %struct.ifaddrs*, %struct.ifaddrs** %49, align 8
  %51 = icmp eq %struct.ifaddrs* %50, null
  br i1 %51, label %52, label %12

52:                                               ; preds = %48, %45, %30, %35, %40, %22, %9
  %53 = phi i1 [ true, %9 ], [ false, %22 ], [ false, %40 ], [ false, %35 ], [ false, %30 ], [ false, %45 ], [ true, %48 ]
  call void @freeifaddrs(%struct.ifaddrs* %10) #18
  br label %54

54:                                               ; preds = %0, %52
  %55 = phi i1 [ %53, %52 ], [ false, %0 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %1) #18
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %4) #18
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager12AbortAllJobsEb(%"class.net::HostResolverManager"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.net::HostCache::Entry", align 8
  %5 = alloca %"class.std::__1::vector.481", align 8
  %6 = alloca %"class.std::__1::unique_ptr.460", align 8
  %7 = alloca %"struct.net::PrioritizedDispatcher::Limits", align 8
  %8 = alloca %"struct.net::PrioritizedDispatcher::Limits", align 8
  %9 = alloca %"class.base::WeakPtr.230", align 8
  %10 = bitcast %"class.std::__1::vector.481"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #18
  %11 = getelementptr inbounds %"class.std::__1::vector.481", %"class.std::__1::vector.481"* %5, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.481", %"class.std::__1::vector.481"* %5, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.481", %"class.std::__1::vector.481"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #18
  %14 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 5, i32 0, i32 0
  %15 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %14, align 8
  %16 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %17 = icmp eq %"class.std::__1::__tree_end_node"* %15, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = bitcast %"class.std::__1::unique_ptr.460"** %12 to i64*
  br label %25

20:                                               ; preds = %2
  %21 = bitcast %"class.std::__1::unique_ptr.460"* %6 to i8*
  %22 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 5, i32 0
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::unique_ptr.460"** %12 to i64*
  br label %56

25:                                               ; preds = %147, %18
  %26 = phi i64* [ %19, %18 ], [ %24, %147 ]
  %27 = bitcast %"struct.net::PrioritizedDispatcher::Limits"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #18
  %28 = getelementptr inbounds %"struct.net::PrioritizedDispatcher::Limits", %"struct.net::PrioritizedDispatcher::Limits"* %7, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.net::PrioritizedDispatcher::Limits", %"struct.net::PrioritizedDispatcher::Limits"* %7, i64 0, i32 1, i32 0, i32 1
  %30 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %31 = bitcast %"struct.net::PrioritizedDispatcher::Limits"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false)
  %32 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %30, align 8
  call void @_ZNK3net21PrioritizedDispatcher9GetLimitsEv(%"struct.net::PrioritizedDispatcher::Limits"* nonnull sret %7, %"class.net::PrioritizedDispatcher"* %32) #18
  %33 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %30, align 8
  %34 = bitcast %"struct.net::PrioritizedDispatcher::Limits"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #18
  %35 = bitcast i64** %29 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector.46"* %28 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = lshr exact i64 %39, 3
  %41 = trunc i64 %40 to i32
  call void @_ZN3net21PrioritizedDispatcher6LimitsC1Ejm(%"struct.net::PrioritizedDispatcher::Limits"* nonnull %8, i32 %41, i64 0) #18
  call void @_ZN3net21PrioritizedDispatcher9SetLimitsERKNS0_6LimitsE(%"class.net::PrioritizedDispatcher"* %33, %"struct.net::PrioritizedDispatcher::Limits"* nonnull dereferenceable(32) %8) #18
  call void @_ZN3net21PrioritizedDispatcher6LimitsD1Ev(%"struct.net::PrioritizedDispatcher::Limits"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #18
  %42 = bitcast %"class.base::WeakPtr.230"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #18
  %43 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %9, i64 0, i32 0, i32 1
  %44 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  %45 = bitcast %"class.base::WeakPtr.230"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #18, !noalias !86
  %46 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 21, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %46) #18, !noalias !86
  %47 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 21, i32 0, i32 1
  %48 = load i64, i64* %47, align 8, !noalias !86
  %49 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %49, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %48) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #18, !noalias !86
  %50 = bitcast i64* %43 to %"class.net::HostResolverManager"**
  %51 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %9, i64 0, i32 0, i32 0
  %52 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %51) #18
  br i1 %52, label %53, label %160

53:                                               ; preds = %25
  %54 = bitcast %"class.std::__1::vector.481"* %5 to i64*
  %55 = bitcast %"class.net::HostCache::Entry"* %4 to i8*
  br label %150

56:                                               ; preds = %20, %147
  %57 = phi %"class.std::__1::__tree_end_node"* [ %15, %20 ], [ %148, %147 ]
  br i1 %1, label %58, label %65

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 33
  %60 = bitcast %"class.std::__1::__tree_end_node"* %59 to %"class.net::HostResolverManager::Job"**
  %61 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %60, align 8
  %62 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %61, i64 0, i32 14
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %119, label %65

65:                                               ; preds = %58, %56
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #18
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 1, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, null
  br i1 %68, label %69, label %77

69:                                               ; preds = %65
  %70 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"class.std::__1::__tree_node_base"*
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 2
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to %"class.std::__1::__tree_end_node"**
  %73 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, %70
  br i1 %76, label %93, label %84

77:                                               ; preds = %65, %77
  %78 = phi %"class.std::__1::__tree_node_base"* [ %80, %77 ], [ %67, %65 ]
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %78, i64 0, i32 0, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %81, label %82, label %77

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %78, i64 0, i32 0
  br label %93

84:                                               ; preds = %69, %84
  %85 = phi %"class.std::__1::__tree_end_node"** [ %88, %84 ], [ %72, %69 ]
  %86 = bitcast %"class.std::__1::__tree_end_node"** %85 to %"class.std::__1::__tree_node_base"**
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %87, i64 0, i32 2
  %89 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %88, align 8
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %89, i64 0, i32 0
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  %92 = icmp eq %"class.std::__1::__tree_node_base"* %91, %87
  br i1 %92, label %93, label %84

93:                                               ; preds = %84, %69, %82
  %94 = phi %"class.std::__1::__tree_end_node"* [ %83, %82 ], [ %73, %69 ], [ %89, %84 ]
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 33
  %96 = bitcast %"class.std::__1::__tree_end_node"* %95 to i64*
  %97 = bitcast %"class.std::__1::__tree_end_node"* %95 to %"class.net::HostResolverManager::Job"**
  %98 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %97, align 8
  store i64 0, i64* %96, align 8
  %99 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net19HostResolverManager6JobKeyENS_10unique_ptrINS3_3JobENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS_9allocatorISA_EEE5eraseENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEE(%"class.std::__1::__tree"* %22, %"class.std::__1::__tree_end_node"* %57) #18
  %100 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %98, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %100, align 8
  store %"class.net::HostResolverManager::Job"* %98, %"class.net::HostResolverManager::Job"** %23, align 8
  %101 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %12, align 8
  %102 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %13, align 8
  %103 = icmp ult %"class.std::__1::unique_ptr.460"* %101, %102
  br i1 %103, label %104, label %109

104:                                              ; preds = %93
  %105 = ptrtoint %"class.net::HostResolverManager::Job"* %98 to i64
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %23, align 8
  %106 = bitcast %"class.std::__1::unique_ptr.460"* %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %101, i64 1
  %108 = ptrtoint %"class.std::__1::unique_ptr.460"* %107 to i64
  store i64 %108, i64* %24, align 8
  br label %110

109:                                              ; preds = %93
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3net19HostResolverManager3JobENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.481"* nonnull %5, %"class.std::__1::unique_ptr.460"* nonnull dereferenceable(8) %6) #18
  br label %110

110:                                              ; preds = %104, %109
  %111 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %23, align 8
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %23, align 8
  %112 = icmp eq %"class.net::HostResolverManager::Job"* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %110
  %114 = bitcast %"class.net::HostResolverManager::Job"* %111 to void (%"class.net::HostResolverManager::Job"*)***
  %115 = load void (%"class.net::HostResolverManager::Job"*)**, void (%"class.net::HostResolverManager::Job"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.net::HostResolverManager::Job"*)*, void (%"class.net::HostResolverManager::Job"*)** %115, i64 1
  %117 = load void (%"class.net::HostResolverManager::Job"*)*, void (%"class.net::HostResolverManager::Job"*)** %116, align 8
  call void %117(%"class.net::HostResolverManager::Job"* nonnull %111) #18
  br label %118

118:                                              ; preds = %110, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #18
  br label %147

119:                                              ; preds = %58
  %120 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 1, i32 0
  %121 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  %122 = icmp eq %"class.std::__1::__tree_node_base"* %121, null
  br i1 %122, label %123, label %131

123:                                              ; preds = %119
  %124 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"class.std::__1::__tree_node_base"*
  %125 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 2
  %126 = bitcast %"class.std::__1::__tree_end_node"* %125 to %"class.std::__1::__tree_end_node"**
  %127 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %126, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %127, i64 0, i32 0
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = icmp eq %"class.std::__1::__tree_node_base"* %129, %124
  br i1 %130, label %147, label %138

131:                                              ; preds = %119, %131
  %132 = phi %"class.std::__1::__tree_node_base"* [ %134, %131 ], [ %121, %119 ]
  %133 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %132, i64 0, i32 0, i32 0
  %134 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %133, align 8
  %135 = icmp eq %"class.std::__1::__tree_node_base"* %134, null
  br i1 %135, label %136, label %131

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %132, i64 0, i32 0
  br label %147

138:                                              ; preds = %123, %138
  %139 = phi %"class.std::__1::__tree_end_node"** [ %142, %138 ], [ %126, %123 ]
  %140 = bitcast %"class.std::__1::__tree_end_node"** %139 to %"class.std::__1::__tree_node_base"**
  %141 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %140, align 8
  %142 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %141, i64 0, i32 2
  %143 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %142, align 8
  %144 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %143, i64 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, %141
  br i1 %146, label %147, label %138

147:                                              ; preds = %138, %136, %123, %118
  %148 = phi %"class.std::__1::__tree_end_node"* [ %94, %118 ], [ %137, %136 ], [ %127, %123 ], [ %143, %138 ]
  %149 = icmp eq %"class.std::__1::__tree_end_node"* %148, %16
  br i1 %149, label %25, label %56

150:                                              ; preds = %53, %166
  %151 = phi i64 [ 0, %53 ], [ %170, %166 ]
  %152 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %50, align 8
  %153 = icmp eq %"class.net::HostResolverManager"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %150
  %155 = load i64, i64* %26, align 8
  %156 = load i64, i64* %54, align 8
  %157 = sub i64 %155, %156
  %158 = ashr exact i64 %157, 3
  %159 = icmp ult i64 %151, %158
  br i1 %159, label %166, label %160

160:                                              ; preds = %154, %150, %166, %25
  %161 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %51) #18
  %162 = xor i1 %161, true
  %163 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %50, align 8
  %164 = icmp eq %"class.net::HostResolverManager"* %163, null
  %165 = or i1 %164, %162
  br i1 %165, label %174, label %172

166:                                              ; preds = %154
  %167 = inttoptr i64 %156 to %"class.std::__1::unique_ptr.460"*
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %167, i64 %151, i32 0, i32 0, i32 0
  %169 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %168, align 8
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %55) #18
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* nonnull %4, i32 -21, i32 0, i8 0, i64 undef) #18
  call void @_ZN3net19HostResolverManager3Job16CompleteRequestsERKNS_9HostCache5EntryEN4base9TimeDeltaEbb(%"class.net::HostResolverManager::Job"* %169, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %4, i64 0, i1 zeroext true, i1 zeroext false) #18
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %55) #18
  %170 = add nuw i64 %151, 1
  %171 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %51) #18
  br i1 %171, label %150, label %160

172:                                              ; preds = %160
  %173 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %30, align 8
  call void @_ZN3net21PrioritizedDispatcher9SetLimitsERKNS0_6LimitsE(%"class.net::PrioritizedDispatcher"* %173, %"struct.net::PrioritizedDispatcher::Limits"* nonnull dereferenceable(32) %7) #18
  br label %174

174:                                              ; preds = %160, %172
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %49) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #18
  call void @_ZN3net21PrioritizedDispatcher6LimitsD1Ev(%"struct.net::PrioritizedDispatcher::Limits"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #18
  %175 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %11, align 8
  %176 = icmp eq %"class.std::__1::unique_ptr.460"* %175, null
  br i1 %176, label %199, label %177

177:                                              ; preds = %174
  %178 = bitcast %"class.std::__1::unique_ptr.460"* %175 to i8*
  %179 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %12, align 8
  %180 = icmp eq %"class.std::__1::unique_ptr.460"* %179, %175
  br i1 %180, label %197, label %181

181:                                              ; preds = %177, %192
  %182 = phi %"class.std::__1::unique_ptr.460"* [ %183, %192 ], [ %179, %177 ]
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %182, i64 -1
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %183, i64 0, i32 0, i32 0, i32 0
  %185 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %184, align 8
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %184, align 8
  %186 = icmp eq %"class.net::HostResolverManager::Job"* %185, null
  br i1 %186, label %192, label %187

187:                                              ; preds = %181
  %188 = bitcast %"class.net::HostResolverManager::Job"* %185 to void (%"class.net::HostResolverManager::Job"*)***
  %189 = load void (%"class.net::HostResolverManager::Job"*)**, void (%"class.net::HostResolverManager::Job"*)*** %188, align 8
  %190 = getelementptr inbounds void (%"class.net::HostResolverManager::Job"*)*, void (%"class.net::HostResolverManager::Job"*)** %189, i64 1
  %191 = load void (%"class.net::HostResolverManager::Job"*)*, void (%"class.net::HostResolverManager::Job"*)** %190, align 8
  call void %191(%"class.net::HostResolverManager::Job"* nonnull %185) #18
  br label %192

192:                                              ; preds = %187, %181
  %193 = icmp eq %"class.std::__1::unique_ptr.460"* %183, %175
  br i1 %193, label %194, label %181

194:                                              ; preds = %192
  %195 = bitcast %"class.std::__1::vector.481"* %5 to i8**
  %196 = load i8*, i8** %195, align 8
  br label %197

197:                                              ; preds = %194, %177
  %198 = phi i8* [ %196, %194 ], [ %178, %177 ]
  store %"class.std::__1::unique_ptr.460"* %175, %"class.std::__1::unique_ptr.460"** %12, align 8
  call void @_ZdlPv(i8* %198) #19
  br label %199

199:                                              ; preds = %174, %197
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #18
  ret void
}

declare void @_ZNK3net21PrioritizedDispatcher9GetLimitsEv(%"struct.net::PrioritizedDispatcher::Limits"* sret, %"class.net::PrioritizedDispatcher"*) local_unnamed_addr #1

declare void @_ZN3net21PrioritizedDispatcher9SetLimitsERKNS0_6LimitsE(%"class.net::PrioritizedDispatcher"*, %"struct.net::PrioritizedDispatcher::Limits"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN3net21PrioritizedDispatcher6LimitsC1Ejm(%"struct.net::PrioritizedDispatcher::Limits"*, i32, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager26TryServingAllJobsFromHostsEv(%"class.net::HostResolverManager"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::WeakPtr.230", align 8
  %4 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %5 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %4, align 8
  %6 = icmp eq %"class.net::DnsClient"* %5, null
  br i1 %6, label %72, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.net::DnsClient"* %5 to %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)***
  %9 = load %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)**, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*** %8, align 8
  %10 = getelementptr inbounds %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)** %9, i64 12
  %11 = load %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)*, %"struct.net::DnsConfig"* (%"class.net::DnsClient"*)** %10, align 8
  %12 = tail call %"struct.net::DnsConfig"* %11(%"class.net::DnsClient"* nonnull %5) #18
  %13 = icmp eq %"struct.net::DnsConfig"* %12, null
  br i1 %13, label %72, label %14

14:                                               ; preds = %7
  %15 = bitcast %"class.base::WeakPtr.230"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #18
  %16 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  %17 = bitcast %"class.base::WeakPtr.230"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #18, !noalias !89
  %18 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 21, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %18) #18, !noalias !89
  %19 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 21, i32 0, i32 1
  %20 = load i64, i64* %19, align 8, !noalias !89
  %21 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %3, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %21, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %20) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #18, !noalias !89
  %22 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 5, i32 0, i32 0
  %23 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %22, align 8
  %24 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %3, i64 0, i32 0, i32 0
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %24) #18
  br i1 %25, label %26, label %36

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %3, i64 0, i32 0, i32 1
  %28 = bitcast i64* %27 to %"class.net::HostResolverManager"**
  %29 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  br label %30

30:                                               ; preds = %26, %68
  %31 = phi %"class.std::__1::__tree_end_node"* [ %23, %26 ], [ %69, %68 ]
  %32 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %28, align 8
  %33 = icmp ne %"class.net::HostResolverManager"* %32, null
  %34 = icmp ne %"class.std::__1::__tree_end_node"* %31, %29
  %35 = and i1 %34, %33
  br i1 %35, label %37, label %36

36:                                               ; preds = %68, %30, %14
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %21) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #18
  br label %72

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 33
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.net::HostResolverManager::Job"**
  %40 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 1, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, null
  br i1 %43, label %44, label %52

44:                                               ; preds = %37
  %45 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_node_base"*
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 2
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.std::__1::__tree_end_node"**
  %48 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %48, i64 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, %45
  br i1 %51, label %68, label %59

52:                                               ; preds = %37, %52
  %53 = phi %"class.std::__1::__tree_node_base"* [ %55, %52 ], [ %42, %37 ]
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %52

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 0
  br label %68

59:                                               ; preds = %44, %59
  %60 = phi %"class.std::__1::__tree_end_node"** [ %63, %59 ], [ %47, %44 ]
  %61 = bitcast %"class.std::__1::__tree_end_node"** %60 to %"class.std::__1::__tree_node_base"**
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, %62
  br i1 %67, label %68, label %59

68:                                               ; preds = %59, %44, %57
  %69 = phi %"class.std::__1::__tree_end_node"* [ %58, %57 ], [ %48, %44 ], [ %64, %59 ]
  %70 = call zeroext i1 @_ZN3net19HostResolverManager3Job14ServeFromHostsEv(%"class.net::HostResolverManager::Job"* %40)
  %71 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %24) #18
  br i1 %71, label %30, label %36

72:                                               ; preds = %1, %7, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3net19HostResolverManager3Job14ServeFromHostsEv(%"class.net::HostResolverManager::Job"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.absl::optional.297", align 8
  %4 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %4) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 208, i1 false)
  %5 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #18
  br label %10

10:                                               ; preds = %7, %1
  %11 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  br i1 %11, label %12, label %16

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 1
  %14 = bitcast i64* %13 to %"class.net::HostResolverManager"**
  %15 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %14, align 8
  br label %16

16:                                               ; preds = %10, %12
  %17 = phi %"class.net::HostResolverManager"* [ %15, %12 ], [ null, %10 ]
  %18 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 3
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %26 = select i1 %22, i8* %24, i8* %25
  %27 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %21 to i64
  %30 = select i1 %22, i64 %28, i64 %29
  %31 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 5
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 6
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 4
  %36 = icmp ne i32 %35, 0
  %37 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 13
  call void @_ZN3net19HostResolverManager14ServeFromHostsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_12DnsQueryTypeEbRKNS3_5dequeINS0_8TaskTypeENS3_9allocatorIS9_EEEE(%"class.absl::optional.297"* nonnull sret %3, %"class.net::HostResolverManager"* %17, i8* %26, i64 %30, i32 %32, i1 zeroext %36, %"class.std::__1::deque"* dereferenceable(48) %37)
  %38 = load i8, i8* %4, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %16
  %41 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net19HostResolverManager3Job16CompleteRequestsERKNS_9HostCache5EntryEN4base9TimeDeltaEbb(%"class.net::HostResolverManager::Job"* %0, %"class.net::HostCache::Entry"* dereferenceable(200) %41, i64 0, i1 zeroext true, i1 zeroext true)
  %42 = load i8, i8* %4, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* %45) #18
  store i8 0, i8* %4, align 8
  br label %46

46:                                               ; preds = %16, %40, %44
  %47 = phi i1 [ true, %40 ], [ true, %44 ], [ false, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %4) #18
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager18OnIPAddressChangedEv(%"class.net::HostResolverManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 13, i32 0, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 22, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %3) #18
  tail call void @_ZN3net19HostResolverManager16InvalidateCachesEb(%"class.net::HostResolverManager"* %0, i1 zeroext false)
  %4 = bitcast %"class.net::HostResolverManager"* %0 to void (%"class.net::HostResolverManager"*)***
  %5 = load void (%"class.net::HostResolverManager"*)**, void (%"class.net::HostResolverManager"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.net::HostResolverManager"*)*, void (%"class.net::HostResolverManager"*)** %5, i64 5
  %7 = load void (%"class.net::HostResolverManager"*)*, void (%"class.net::HostResolverManager"*)** %6, align 8
  tail call void %7(%"class.net::HostResolverManager"* %0) #18
  tail call void @_ZN3net19HostResolverManager12AbortAllJobsEb(%"class.net::HostResolverManager"* %0, i1 zeroext true)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager23OnConnectionTypeChangedENS_21NetworkChangeNotifier14ConnectionTypeE(%"class.net::HostResolverManager"*, i32) unnamed_addr #0 align 2 {
  %3 = load i64, i64* getelementptr inbounds (%"class.base::TimeDelta", %"class.base::TimeDelta"* @_ZN3net14ProcTaskParams28kDnsDefaultUnresponsiveDelayE, i64 0, i32 0), align 8
  %4 = tail call i64 @_ZN3net52GetTimeDeltaForConnectionTypeFromFieldTrialOrDefaultEPKcN4base9TimeDeltaENS_21NetworkChangeNotifier14ConnectionTypeE(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0), i64 %3, i32 %1) #18
  %5 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 8, i32 2, i32 0
  store i64 %4, i64* %5, align 8
  %6 = icmp eq i32 %1, 6
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %9 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %8, align 8
  %10 = icmp eq %"class.net::DnsClient"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.net::DnsClient"* %9 to void (%"class.net::DnsClient"*)***
  %13 = load void (%"class.net::DnsClient"*)**, void (%"class.net::DnsClient"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.net::DnsClient"*)*, void (%"class.net::DnsClient"*)** %13, i64 10
  %15 = load void (%"class.net::DnsClient"*)*, void (%"class.net::DnsClient"*)** %14, align 8
  tail call void %15(%"class.net::DnsClient"* nonnull %9) #18
  tail call void @_ZN3net19HostResolverManager16InvalidateCachesEb(%"class.net::HostResolverManager"* %0, i1 zeroext true)
  br label %16

16:                                               ; preds = %7, %11, %2
  ret void
}

declare i64 @_ZN3net52GetTimeDeltaForConnectionTypeFromFieldTrialOrDefaultEPKcN4base9TimeDeltaENS_21NetworkChangeNotifier14ConnectionTypeE(i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N3net19HostResolverManager23OnConnectionTypeChangedENS_21NetworkChangeNotifier14ConnectionTypeE(%"class.net::HostResolverManager"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 -1, i32 22
  %4 = bitcast %"class.base::WeakPtrFactory"* %3 to %"class.net::HostResolverManager"*
  %5 = load i64, i64* getelementptr inbounds (%"class.base::TimeDelta", %"class.base::TimeDelta"* @_ZN3net14ProcTaskParams28kDnsDefaultUnresponsiveDelayE, i64 0, i32 0), align 8
  %6 = tail call i64 @_ZN3net52GetTimeDeltaForConnectionTypeFromFieldTrialOrDefaultEPKcN4base9TimeDeltaENS_21NetworkChangeNotifier14ConnectionTypeE(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0), i64 %5, i32 %1) #18
  %7 = getelementptr inbounds %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory"* %3, i64 7
  %8 = bitcast %"class.base::WeakPtrFactory"* %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = icmp eq i32 %1, 6
  br i1 %9, label %10, label %20

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory"* %3, i64 8, i32 0, i32 1
  %12 = bitcast i64* %11 to %"class.net::DnsClient"**
  %13 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %12, align 8
  %14 = icmp eq %"class.net::DnsClient"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.net::DnsClient"* %13 to void (%"class.net::DnsClient"*)***
  %17 = load void (%"class.net::DnsClient"*)**, void (%"class.net::DnsClient"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.net::DnsClient"*)*, void (%"class.net::DnsClient"*)** %17, i64 10
  %19 = load void (%"class.net::DnsClient"*)*, void (%"class.net::DnsClient"*)** %18, align 8
  tail call void %19(%"class.net::DnsClient"* nonnull %13) #18
  tail call void @_ZN3net19HostResolverManager16InvalidateCachesEb(%"class.net::HostResolverManager"* %4, i1 zeroext true) #18
  br label %20

20:                                               ; preds = %2, %10, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager24OnSystemDnsConfigChangedEN4absl8optionalINS_9DnsConfigEEE(%"class.net::HostResolverManager"*, %"class.absl::optional.455"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.455", align 8
  %4 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %5 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %4, align 8
  %6 = icmp eq %"class.net::DnsClient"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  call void @_ZN3net19HostResolverManager16InvalidateCachesEb(%"class.net::HostResolverManager"* %0, i1 zeroext false)
  br label %44

8:                                                ; preds = %2
  %9 = bitcast %"class.net::DnsClient"* %5 to i1 (%"class.net::DnsClient"*)***
  %10 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %10, i64 2
  %12 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.net::DnsClient"* nonnull %5) #18
  br i1 %13, label %21, label %14

14:                                               ; preds = %8
  %15 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %4, align 8
  %16 = bitcast %"class.net::DnsClient"* %15 to i1 (%"class.net::DnsClient"*)***
  %17 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %17, i64 3
  %19 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.net::DnsClient"* %15) #18
  br label %21

21:                                               ; preds = %14, %8
  %22 = phi i1 [ true, %8 ], [ %20, %14 ]
  %23 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %4, align 8
  %24 = getelementptr inbounds %"class.absl::optional.455", %"class.absl::optional.455"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.absl::optional.455", %"class.absl::optional.455"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 216, i1 false) #18
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.absl::optional.455", %"class.absl::optional.455"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.absl::optional.455", %"class.absl::optional.455"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net9DnsConfigC1EOS0_(%"struct.net::DnsConfig"* %30, %"struct.net::DnsConfig"* dereferenceable(208) %29) #18
  store i8 1, i8* %24, align 8
  br label %31

31:                                               ; preds = %21, %28
  %32 = bitcast %"class.net::DnsClient"* %23 to i1 (%"class.net::DnsClient"*, %"class.absl::optional.455"*)***
  %33 = load i1 (%"class.net::DnsClient"*, %"class.absl::optional.455"*)**, i1 (%"class.net::DnsClient"*, %"class.absl::optional.455"*)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.net::DnsClient"*, %"class.absl::optional.455"*)*, i1 (%"class.net::DnsClient"*, %"class.absl::optional.455"*)** %33, i64 8
  %35 = load i1 (%"class.net::DnsClient"*, %"class.absl::optional.455"*)*, i1 (%"class.net::DnsClient"*, %"class.absl::optional.455"*)** %34, align 8
  %36 = call zeroext i1 %35(%"class.net::DnsClient"* %23, %"class.absl::optional.455"* nonnull %3) #18
  %37 = load i8, i8* %24, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.absl::optional.455", %"class.absl::optional.455"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"* %40) #18
  store i8 0, i8* %24, align 8
  br label %41

41:                                               ; preds = %39, %31
  call void @_ZN3net19HostResolverManager16InvalidateCachesEb(%"class.net::HostResolverManager"* %0, i1 zeroext false)
  %42 = and i1 %36, %22
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  call void @_ZN3net19HostResolverManager26UpdateJobsForChangedConfigEv(%"class.net::HostResolverManager"* %0)
  br label %44

44:                                               ; preds = %7, %41, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N3net19HostResolverManager24OnSystemDnsConfigChangedEN4absl8optionalINS_9DnsConfigEEE(%"class.net::HostResolverManager"*, %"class.absl::optional.455"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 -1, i32 21
  %4 = bitcast %"class.base::WeakPtrFactory"* %3 to %"class.net::HostResolverManager"*
  tail call void @_ZN3net19HostResolverManager24OnSystemDnsConfigChangedEN4absl8optionalINS_9DnsConfigEEE(%"class.net::HostResolverManager"* %4, %"class.absl::optional.455"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager17OnFallbackResolveEi(%"class.net::HostResolverManager"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %3, align 8
  %5 = bitcast %"class.net::DnsClient"* %4 to i1 (%"class.net::DnsClient"*)***
  %6 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %6, i64 7
  %8 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.net::DnsClient"* %4) #18
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %3, align 8
  %12 = bitcast %"class.net::DnsClient"* %11 to void (%"class.net::DnsClient"*)***
  %13 = load void (%"class.net::DnsClient"*)**, void (%"class.net::DnsClient"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.net::DnsClient"*)*, void (%"class.net::DnsClient"*)** %13, i64 16
  %15 = load void (%"class.net::DnsClient"*)*, void (%"class.net::DnsClient"*)** %14, align 8
  tail call void %15(%"class.net::DnsClient"* %11) #18
  %16 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %3, align 8
  %17 = bitcast %"class.net::DnsClient"* %16 to i1 (%"class.net::DnsClient"*)***
  %18 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %18, i64 7
  %20 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.net::DnsClient"* %16) #18
  br i1 %21, label %22, label %23

22:                                               ; preds = %10
  tail call void @_ZN3net19HostResolverManager21AbortInsecureDnsTasksEib(%"class.net::HostResolverManager"* %0, i32 -2, i1 zeroext true)
  br label %23

23:                                               ; preds = %2, %22, %10
  ret void
}

declare %"class.net::MDnsClient"* @_ZN3net10MDnsClient13CreateDefaultEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::DnsProbeRunner"* @_ZN3net19HostResolverManager20CreateDohProbeRunnerEPNS_14ResolveContextE(%"class.net::HostResolverManager"* nocapture readonly, %"class.net::ResolveContext"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %3, align 8
  %5 = bitcast %"class.net::DnsClient"* %4 to i1 (%"class.net::DnsClient"*)***
  %6 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %6, i64 2
  %8 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.net::DnsClient"* %4) #18
  br i1 %9, label %10, label %22

10:                                               ; preds = %2
  %11 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %3, align 8
  %12 = bitcast %"class.net::DnsClient"* %11 to %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)***
  %13 = load %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)**, %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)*, %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)** %13, i64 14
  %15 = load %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)*, %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)** %14, align 8
  %16 = tail call %"class.net::DnsTransactionFactory"* %15(%"class.net::DnsClient"* %11) #18
  %17 = bitcast %"class.net::DnsTransactionFactory"* %16 to %"class.net::DnsProbeRunner"* (%"class.net::DnsTransactionFactory"*, %"class.net::ResolveContext"*)***
  %18 = load %"class.net::DnsProbeRunner"* (%"class.net::DnsTransactionFactory"*, %"class.net::ResolveContext"*)**, %"class.net::DnsProbeRunner"* (%"class.net::DnsTransactionFactory"*, %"class.net::ResolveContext"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.net::DnsProbeRunner"* (%"class.net::DnsTransactionFactory"*, %"class.net::ResolveContext"*)*, %"class.net::DnsProbeRunner"* (%"class.net::DnsTransactionFactory"*, %"class.net::ResolveContext"*)** %18, i64 3
  %20 = load %"class.net::DnsProbeRunner"* (%"class.net::DnsTransactionFactory"*, %"class.net::ResolveContext"*)*, %"class.net::DnsProbeRunner"* (%"class.net::DnsTransactionFactory"*, %"class.net::ResolveContext"*)** %19, align 8
  %21 = tail call %"class.net::DnsProbeRunner"* %20(%"class.net::DnsTransactionFactory"* %16, %"class.net::ResolveContext"* %1) #18
  br label %22

22:                                               ; preds = %2, %10
  %23 = phi %"class.net::DnsProbeRunner"* [ %21, %10 ], [ null, %2 ]
  ret %"class.net::DnsProbeRunner"* %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager11RequestImpl6CancelEv(%"class.net::HostResolverManager::RequestImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 10
  %3 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %2, align 8
  %4 = icmp eq %"class.net::HostResolverManager::Job"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  tail call void @_ZN3net19HostResolverManager3Job13CancelRequestEPNS0_11RequestImplE(%"class.net::HostResolverManager::Job"* nonnull %3, %"class.net::HostResolverManager::RequestImpl"* %0)
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %2, align 8
  %6 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 12, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %6) #18
  %7 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 2
  tail call void @_ZNK3net16NetLogWithSource8AddEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %7, i32 0) #18
  tail call void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %7, i32 3) #18
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job13CancelRequestEPNS0_11RequestImplE(%"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::RequestImpl"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", align 8
  %4 = alloca %"class.net::HostCache::Entry", align 8
  %5 = alloca %"class.net::HostResolverManager::RequestImpl"*, align 8
  %6 = alloca %class.anon.742, align 8
  store %"class.net::HostResolverManager::RequestImpl"* %1, %"class.net::HostResolverManager::RequestImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 9
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 15, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, -1
  store i64 %11, i64* %9, align 8
  %12 = zext i32 %8 to i64
  %13 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 15, i32 2, i64 %12
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -1
  store i64 %15, i64* %13, align 8
  %16 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 15, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %2
  %20 = zext i32 %17 to i64
  br label %21

21:                                               ; preds = %19, %26
  %22 = phi i64 [ %27, %26 ], [ %20, %19 ]
  %23 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 15, i32 2, i64 %22
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = add nsw i64 %22, -1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %21

29:                                               ; preds = %21, %26, %2
  %30 = phi i64 [ 0, %2 ], [ %22, %21 ], [ 0, %26 ]
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* %16, align 8
  %32 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 23
  %33 = bitcast %class.anon.742* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #18
  %34 = getelementptr inbounds %class.anon.742, %class.anon.742* %6, i64 0, i32 0
  store %"class.net::HostResolverManager::RequestImpl"** %5, %"class.net::HostResolverManager::RequestImpl"*** %34, align 8
  %35 = getelementptr inbounds %class.anon.742, %class.anon.742* %6, i64 0, i32 1
  store %"class.net::HostResolverManager::Job"* %0, %"class.net::HostResolverManager::Job"** %35, align 8
  call void @_ZNK3net16NetLogWithSource8AddEntryIZNS_19HostResolverManager3Job13CancelRequestEPNS2_11RequestImplEEUlvE_EEvNS_15NetLogEventTypeENS_16NetLogEventPhaseERKT_(%"class.net::NetLogWithSource"* %32, i32 15, i32 0, %class.anon.742* nonnull dereferenceable(16) %6) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #18
  %36 = load i64, i64* %9, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %96, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, -1
  br i1 %41, label %91, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 19
  %44 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %43, align 8
  %45 = icmp eq %"class.net::PrioritizedDispatcher"* %44, null
  br i1 %45, label %91, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %47) #18
  %48 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28
  %49 = bitcast %"class.net::HostResolverManager::Job"* %0 to i32 (%"class.net::HostResolverManager::Job"*)***
  %50 = load i32 (%"class.net::HostResolverManager::Job"*)**, i32 (%"class.net::HostResolverManager::Job"*)*** %49, align 8
  %51 = getelementptr inbounds i32 (%"class.net::HostResolverManager::Job"*)*, i32 (%"class.net::HostResolverManager::Job"*)** %50, i64 6
  %52 = load i32 (%"class.net::HostResolverManager::Job"*)*, i32 (%"class.net::HostResolverManager::Job"*)** %51, align 8
  %53 = call i32 %52(%"class.net::HostResolverManager::Job"* %0) #18
  call void @_ZN3net21PrioritizedDispatcher14ChangePriorityERKNS_13PriorityQueueIPNS0_3JobEE7PointerEj(%"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* nonnull sret %3, %"class.net::PrioritizedDispatcher"* nonnull %44, %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* dereferenceable(40) %48, i32 %53) #18
  %54 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %48, i64 0, i32 0
  store i32 %55, i32* %56, align 8
  %57 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 1
  %58 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 1
  %59 = bitcast %"class.std::__1::__list_iterator"* %57 to i64*
  %60 = bitcast %"class.std::__1::__list_iterator"* %58 to i64*
  %61 = load i64, i64* %59, align 8
  store i64 %61, i64* %60, align 8
  %62 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 2, i32 0
  %63 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %90, label %66

66:                                               ; preds = %46
  %67 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 2, i32 0, i32 0, i32 1
  %68 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %62, i64 0, i32 0
  %70 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %62, i64 0, i32 0, i32 0
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = bitcast %"struct.std::__1::__list_node_base"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %68, i64 0, i32 0
  %76 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %76, i64 0, i32 1
  %78 = bitcast %"struct.std::__1::__list_node_base"** %77 to i64*
  store i64 %74, i64* %78, align 8
  %79 = bitcast %"struct.std::__1::__list_node_base"* %68 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"struct.std::__1::__list_node_base"** %72 to i64**
  %82 = load i64*, i64** %81, align 8
  store i64 %80, i64* %82, align 8
  store i64 0, i64* %63, align 8
  %83 = icmp eq %"struct.std::__1::__list_node_base"* %68, %69
  br i1 %83, label %90, label %84

84:                                               ; preds = %66, %84
  %85 = phi %"struct.std::__1::__list_node_base"* [ %87, %84 ], [ %68, %66 ]
  %86 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %85, i64 0, i32 1
  %87 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %86, align 8
  %88 = bitcast %"struct.std::__1::__list_node_base"* %85 to i8*
  call void @_ZdlPv(i8* %88) #19
  %89 = icmp eq %"struct.std::__1::__list_node_base"* %87, %69
  br i1 %89, label %90, label %84

90:                                               ; preds = %84, %66, %46
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %47) #18
  br label %91

91:                                               ; preds = %38, %42, %90
  %92 = bitcast %"class.net::HostResolverManager::RequestImpl"** %5 to i8**
  %93 = load i8*, i8** %92, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 16
  %95 = bitcast i8* %94 to %"class.base::internal::LinkNodeBase"*
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %95) #18
  br label %98

96:                                               ; preds = %29
  %97 = bitcast %"class.net::HostCache::Entry"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %97) #18
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* nonnull %4, i32 -2, i32 0, i8 0, i64 undef) #18
  call void @_ZN3net19HostResolverManager3Job16CompleteRequestsERKNS_9HostCache5EntryEN4base9TimeDeltaEbb(%"class.net::HostResolverManager::Job"* %0, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %4, i64 0, i1 zeroext true, i1 zeroext false) #18
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %97) #18
  br label %98

98:                                               ; preds = %96, %91
  ret void
}

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19HostResolverManager11RequestImpl21ChangeRequestPriorityENS_15RequestPriorityE(%"class.net::HostResolverManager::RequestImpl"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", align 8
  %4 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 10
  %5 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %4, align 8
  %6 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 9
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %5, i64 0, i32 15, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, -1
  store i64 %10, i64* %8, align 8
  %11 = zext i32 %7 to i64
  %12 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %5, i64 0, i32 15, i32 2, i64 %11
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -1
  store i64 %14, i64* %12, align 8
  %15 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %5, i64 0, i32 15, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %2
  %19 = zext i32 %16 to i64
  br label %20

20:                                               ; preds = %25, %18
  %21 = phi i64 [ %26, %25 ], [ %19, %18 ]
  %22 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %5, i64 0, i32 15, i32 2, i64 %21
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = add nsw i64 %21, -1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %20

28:                                               ; preds = %25, %20, %2
  %29 = phi i64 [ 0, %2 ], [ 0, %25 ], [ %21, %20 ]
  %30 = trunc i64 %29 to i32
  store i32 %30, i32* %15, align 8
  store i32 %1, i32* %6, align 4
  %31 = load i64, i64* %8, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %8, align 8
  %33 = zext i32 %1 to i64
  %34 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %5, i64 0, i32 15, i32 2, i64 %33
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %34, align 8
  %37 = load i32, i32* %15, align 8
  %38 = icmp slt i32 %37, %1
  br i1 %38, label %39, label %40

39:                                               ; preds = %28
  store i32 %1, i32* %15, align 8
  br label %40

40:                                               ; preds = %28, %39
  %41 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %5, i64 0, i32 28, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %93, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %5, i64 0, i32 19
  %46 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %45, align 8
  %47 = icmp eq %"class.net::PrioritizedDispatcher"* %46, null
  br i1 %47, label %93, label %48

48:                                               ; preds = %44
  %49 = bitcast %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %49) #18
  %50 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %5, i64 0, i32 28
  %51 = bitcast %"class.net::HostResolverManager::Job"* %5 to i32 (%"class.net::HostResolverManager::Job"*)***
  %52 = load i32 (%"class.net::HostResolverManager::Job"*)**, i32 (%"class.net::HostResolverManager::Job"*)*** %51, align 8
  %53 = getelementptr inbounds i32 (%"class.net::HostResolverManager::Job"*)*, i32 (%"class.net::HostResolverManager::Job"*)** %52, i64 6
  %54 = load i32 (%"class.net::HostResolverManager::Job"*)*, i32 (%"class.net::HostResolverManager::Job"*)** %53, align 8
  %55 = tail call i32 %54(%"class.net::HostResolverManager::Job"* %5) #18
  call void @_ZN3net21PrioritizedDispatcher14ChangePriorityERKNS_13PriorityQueueIPNS0_3JobEE7PointerEj(%"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* nonnull sret %3, %"class.net::PrioritizedDispatcher"* nonnull %46, %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* dereferenceable(40) %50, i32 %55) #18
  %56 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %50, i64 0, i32 0
  store i32 %57, i32* %58, align 8
  %59 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 1
  %60 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %5, i64 0, i32 28, i32 1
  %61 = bitcast %"class.std::__1::__list_iterator"* %59 to i64*
  %62 = bitcast %"class.std::__1::__list_iterator"* %60 to i64*
  %63 = load i64, i64* %61, align 8
  store i64 %63, i64* %62, align 8
  %64 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 2, i32 0
  %65 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %48
  %69 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 2, i32 0, i32 0, i32 1
  %70 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %64, i64 0, i32 0
  %72 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %64, i64 0, i32 0, i32 0
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = bitcast %"struct.std::__1::__list_node_base"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %70, i64 0, i32 0
  %78 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %78, i64 0, i32 1
  %80 = bitcast %"struct.std::__1::__list_node_base"** %79 to i64*
  store i64 %76, i64* %80, align 8
  %81 = bitcast %"struct.std::__1::__list_node_base"* %70 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"struct.std::__1::__list_node_base"** %74 to i64**
  %84 = load i64*, i64** %83, align 8
  store i64 %82, i64* %84, align 8
  store i64 0, i64* %65, align 8
  %85 = icmp eq %"struct.std::__1::__list_node_base"* %70, %71
  br i1 %85, label %92, label %86

86:                                               ; preds = %68, %86
  %87 = phi %"struct.std::__1::__list_node_base"* [ %89, %86 ], [ %70, %68 ]
  %88 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %87, i64 0, i32 1
  %89 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %88, align 8
  %90 = bitcast %"struct.std::__1::__list_node_base"* %87 to i8*
  call void @_ZdlPv(i8* %90) #19
  %91 = icmp eq %"struct.std::__1::__list_node_base"* %89, %71
  br i1 %91, label %92, label %86

92:                                               ; preds = %86, %68, %48
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %49) #18
  br label %93

93:                                               ; preds = %40, %44, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3net19HostResolverManager11RequestImpl21ChangeRequestPriorityENS_15RequestPriorityE(%"class.net::HostResolverManager::RequestImpl"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 -1, i32 20
  %4 = bitcast %"class.base::TimeTicks"* %3 to %"class.net::HostResolverManager::RequestImpl"*
  tail call void @_ZN3net19HostResolverManager11RequestImpl21ChangeRequestPriorityENS_15RequestPriorityE(%"class.net::HostResolverManager::RequestImpl"* %4, i32 %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager11RequestImplD2Ev(%"class.net::HostResolverManager::RequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.net::HostResolverManager::RequestImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [13 x i8*] }, { [14 x i8*], [13 x i8*] }* @_ZTVN3net19HostResolverManager11RequestImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [13 x i8*] }, { [14 x i8*], [13 x i8*] }* @_ZTVN3net19HostResolverManager11RequestImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 10
  %4 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %3, align 8
  %5 = icmp eq %"class.net::HostResolverManager::Job"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  tail call void @_ZN3net19HostResolverManager3Job13CancelRequestEPNS0_11RequestImplE(%"class.net::HostResolverManager::Job"* nonnull %4, %"class.net::HostResolverManager::RequestImpl"* %0) #18
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %3, align 8
  %7 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 12, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %7) #18
  %8 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 2
  tail call void @_ZNK3net16NetLogWithSource8AddEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %8, i32 0) #18
  tail call void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %8, i32 3) #18
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %41, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8
  %17 = icmp eq %"class.std::__1::basic_string"* %16, null
  br i1 %17, label %40, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %20 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %21 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %20, align 8
  %22 = icmp eq %"class.std::__1::basic_string"* %21, %16
  br i1 %22, label %38, label %23

23:                                               ; preds = %18, %33
  %24 = phi %"class.std::__1::basic_string"* [ %25, %33 ], [ %21, %18 ]
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 -1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  tail call void @_ZdlPv(i8* %32) #19
  br label %33

33:                                               ; preds = %30, %23
  %34 = icmp eq %"class.std::__1::basic_string"* %25, %16
  br i1 %34, label %35, label %23

35:                                               ; preds = %33
  %36 = bitcast %"class.std::__1::vector.1"* %14 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %18
  %39 = phi i8* [ %37, %35 ], [ %19, %18 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %20, align 8
  tail call void @_ZdlPv(i8* %39) #19
  br label %40

40:                                               ; preds = %38, %13
  store i8 0, i8* %10, align 8
  br label %41

41:                                               ; preds = %9, %40
  %42 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* %46) #18
  store i8 0, i8* %42, align 8
  br label %47

47:                                               ; preds = %41, %45
  %48 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 12, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %48) #18
  %49 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 11, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %49) #18
  %50 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 4
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %50) #18
  %51 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 3
  %52 = bitcast %"class.net::HostPortPair"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  tail call void @_ZdlPv(i8* %58) #19
  br label %59

59:                                               ; preds = %47, %56
  %60 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 2
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %60) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager11RequestImplD0Ev(%"class.net::HostResolverManager::RequestImpl"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN3net19HostResolverManager11RequestImplD2Ev(%"class.net::HostResolverManager::RequestImpl"* %0) #18
  %2 = bitcast %"class.net::HostResolverManager::RequestImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3net19HostResolverManager11RequestImpl5StartEN4base12OnceCallbackIFviEEE(%"class.net::HostResolverManager::RequestImpl"*, %"class.base::OnceCallback.360"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::Value", align 8
  %5 = alloca %class.anon.743, align 8
  %6 = alloca %"class.base::WeakPtr.230", align 8
  %7 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 19
  %8 = load %"class.base::TickClock"*, %"class.base::TickClock"** %7, align 8
  %9 = bitcast %"class.base::TickClock"* %8 to i64 (%"class.base::TickClock"*)***
  %10 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %10, i64 2
  %12 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %11, align 8
  %13 = tail call i64 %12(%"class.base::TickClock"* %8) #18
  %14 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 20, i32 0, i32 0
  store i64 %13, i64* %14, align 8
  %15 = bitcast %class.anon.743* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #18
  %16 = getelementptr inbounds %class.anon.743, %class.anon.743* %5, i64 0, i32 0
  store %"class.net::HostResolverManager::RequestImpl"* %0, %"class.net::HostResolverManager::RequestImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 2, i32 1
  %18 = load %"class.net::NetLog"*, %"class.net::NetLog"** %17, align 8
  %19 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %18, i64 0, i32 3
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22, !prof !41

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 2, i32 0
  %24 = bitcast %"class.base::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #18
  call void @_ZZN3net19HostResolverManager11RequestImpl15LogStartRequestEvENKUlvE_clEv(%"class.base::Value"* nonnull sret %4, %class.anon.743* nonnull %5) #18
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %18, i32 3, %"struct.net::NetLogSource"* dereferenceable(16) %23, i32 1, %"class.base::Value"* nonnull dereferenceable(32) %4) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #18
  br label %25

25:                                               ; preds = %2, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #18
  %26 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 11
  %27 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %26, i64 0, i32 0, i32 0
  %28 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %27) #18
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #18
  br label %32

32:                                               ; preds = %29, %25
  %33 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %27) #18
  br i1 %33, label %34, label %38

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 11, i32 0, i32 1
  %36 = bitcast i64* %35 to %"class.net::HostResolverManager"**
  %37 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi %"class.net::HostResolverManager"* [ %37, %34 ], [ null, %32 ]
  %40 = call i32 @_ZN3net19HostResolverManager7ResolveEPNS0_11RequestImplE(%"class.net::HostResolverManager"* %39, %"class.net::HostResolverManager::RequestImpl"* %0)
  %41 = icmp eq i32 %40, -1
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 12, i32 0
  %44 = getelementptr inbounds %"class.base::OnceCallback.360", %"class.base::OnceCallback.360"* %1, i64 0, i32 0
  %45 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %43, %"class.base::internal::CallbackBase"* dereferenceable(8) %44) #18
  br label %48

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 13
  store i8 1, i8* %47, align 8
  call void @_ZN3net19HostResolverManager11RequestImpl16LogFinishRequestEib(%"class.net::HostResolverManager::RequestImpl"* %0, i32 %40, i1 zeroext false)
  br label %48

48:                                               ; preds = %46, %42
  %49 = bitcast %"class.base::WeakPtr.230"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #18
  %50 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* nonnull %50) #18
  %51 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = bitcast %"class.base::WeakPtr.230"* %6 to i64*
  %53 = load i64, i64* %52, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %51, align 8
  %54 = bitcast %"class.base::WeakPtr.230"* %26 to i64*
  %55 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %55, align 8
  store i64 %53, i64* %54, align 8
  %57 = icmp eq %"class.base::internal::WeakReference::Flag"* %56, null
  br i1 %57, label %64, label %58

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw sub i32* %59, i32 1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %64

62:                                               ; preds = %58
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %56) #18
  %63 = bitcast %"class.base::internal::WeakReference::Flag"* %56 to i8*
  call void @_ZdlPv(i8* %63) #19
  br label %64

64:                                               ; preds = %48, %58, %62
  %65 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %6, i64 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 11, i32 0, i32 1
  store i64 %66, i64* %67, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %50) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #18
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.absl::optional.233"* @_ZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEv(%"class.net::HostResolverManager::RequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEvE14nullopt_result to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %9, !prof !92

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEvE14nullopt_result) #18
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEvE14nullopt_result, i64 0, i32 0, i64 0), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEvE14nullopt_result, i64 0, i32 0, i64 8), i8 0, i64 48, i1 false) #18
  %8 = tail call {}* @llvm.invariant.start.p0i8(i64 56, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEvE14nullopt_result, i64 0, i32 0, i64 0))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEvE14nullopt_result) #18
  br label %9

9:                                                ; preds = %4, %7, %1
  %10 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %14 = select i1 %12, %"class.absl::optional.233"* bitcast (%"class.base::NoDestructor"* @_ZZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEvE14nullopt_result to %"class.absl::optional.233"*), %"class.absl::optional.233"* %13
  ret %"class.absl::optional.233"* %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.absl::optional.101"* @_ZNK3net19HostResolverManager11RequestImpl14GetTextResultsEv(%"class.net::HostResolverManager::RequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK3net19HostResolverManager11RequestImpl14GetTextResultsEvE14nullopt_result to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %9, !prof !92

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK3net19HostResolverManager11RequestImpl14GetTextResultsEvE14nullopt_result) #18
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor.744", %"class.base::NoDestructor.744"* @_ZZNK3net19HostResolverManager11RequestImpl14GetTextResultsEvE14nullopt_result, i64 0, i32 0, i64 0), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor.744", %"class.base::NoDestructor.744"* @_ZZNK3net19HostResolverManager11RequestImpl14GetTextResultsEvE14nullopt_result, i64 0, i32 0, i64 8), i8 0, i64 24, i1 false) #18
  %8 = tail call {}* @llvm.invariant.start.p0i8(i64 32, i8* getelementptr inbounds (%"class.base::NoDestructor.744", %"class.base::NoDestructor.744"* @_ZZNK3net19HostResolverManager11RequestImpl14GetTextResultsEvE14nullopt_result, i64 0, i32 0, i64 0))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK3net19HostResolverManager11RequestImpl14GetTextResultsEvE14nullopt_result) #18
  br label %9

9:                                                ; preds = %4, %7, %1
  %10 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %14 = select i1 %12, %"class.absl::optional.101"* bitcast (%"class.base::NoDestructor.744"* @_ZZNK3net19HostResolverManager11RequestImpl14GetTextResultsEvE14nullopt_result to %"class.absl::optional.101"*), %"class.absl::optional.101"* %13
  ret %"class.absl::optional.101"* %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.absl::optional.238"* @_ZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEv(%"class.net::HostResolverManager::RequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEvE14nullopt_result to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %9, !prof !92

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEvE14nullopt_result) #18
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor.745", %"class.base::NoDestructor.745"* @_ZZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEvE14nullopt_result, i64 0, i32 0, i64 0), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor.745", %"class.base::NoDestructor.745"* @_ZZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEvE14nullopt_result, i64 0, i32 0, i64 8), i8 0, i64 24, i1 false) #18
  %8 = tail call {}* @llvm.invariant.start.p0i8(i64 32, i8* getelementptr inbounds (%"class.base::NoDestructor.745", %"class.base::NoDestructor.745"* @_ZZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEvE14nullopt_result, i64 0, i32 0, i64 0))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEvE14nullopt_result) #18
  br label %9

9:                                                ; preds = %4, %7, %1
  %10 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4
  %14 = select i1 %12, %"class.absl::optional.238"* bitcast (%"class.base::NoDestructor.745"* @_ZZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEvE14nullopt_result to %"class.absl::optional.238"*), %"class.absl::optional.238"* %13
  ret %"class.absl::optional.238"* %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.absl::optional.101"* @_ZNK3net19HostResolverManager11RequestImpl18GetDnsAliasResultsEv(%"class.net::HostResolverManager::RequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 17
  ret %"class.absl::optional.101"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.absl::optional.250"* @_ZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEv(%"class.net::HostResolverManager::RequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEvE14nullopt_result to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %9, !prof !92

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEvE14nullopt_result) #18
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor.746", %"class.base::NoDestructor.746"* @_ZZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEvE14nullopt_result, i64 0, i32 0, i64 0), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor.746", %"class.base::NoDestructor.746"* @_ZZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEvE14nullopt_result, i64 0, i32 0, i64 8), i8 0, i64 24, i1 false) #18
  %8 = tail call {}* @llvm.invariant.start.p0i8(i64 32, i8* getelementptr inbounds (%"class.base::NoDestructor.746", %"class.base::NoDestructor.746"* @_ZZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEvE14nullopt_result, i64 0, i32 0, i64 0))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEvE14nullopt_result) #18
  br label %9

9:                                                ; preds = %4, %7, %1
  %10 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  %14 = select i1 %12, %"class.absl::optional.250"* bitcast (%"class.base::NoDestructor.746"* @_ZZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEvE14nullopt_result to %"class.absl::optional.250"*), %"class.absl::optional.250"* %13
  ret %"class.absl::optional.250"* %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3net19HostResolverManager11RequestImpl19GetResolveErrorInfoEv(%"struct.net::ResolveErrorInfo"* noalias sret, %"class.net::HostResolverManager::RequestImpl"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 0, i32 18
  tail call void @_ZN3net16ResolveErrorInfoC1ERKS0_(%"struct.net::ResolveErrorInfo"* %0, %"struct.net::ResolveErrorInfo"* dereferenceable(8) %3) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.absl::optional.361"* @_ZNK3net19HostResolverManager11RequestImpl12GetStaleInfoEv(%"class.net::HostResolverManager::RequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 16
  ret %"class.absl::optional.361"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N3net19HostResolverManager11RequestImplD1Ev(%"class.net::HostResolverManager::RequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 -1, i32 20
  %3 = bitcast %"class.base::TimeTicks"* %2 to %"class.net::HostResolverManager::RequestImpl"*
  tail call void @_ZN3net19HostResolverManager11RequestImplD2Ev(%"class.net::HostResolverManager::RequestImpl"* %3) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N3net19HostResolverManager11RequestImplD0Ev(%"class.net::HostResolverManager::RequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 -1, i32 20
  %3 = bitcast %"class.base::TimeTicks"* %2 to %"class.net::HostResolverManager::RequestImpl"*
  tail call void @_ZN3net19HostResolverManager11RequestImplD2Ev(%"class.net::HostResolverManager::RequestImpl"* %3) #18
  %4 = bitcast %"class.base::TimeTicks"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn8_N3net19HostResolverManager11RequestImpl5StartEN4base12OnceCallbackIFviEEE(%"class.net::HostResolverManager::RequestImpl"*, %"class.base::OnceCallback.360"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 -1, i32 20
  %4 = bitcast %"class.base::TimeTicks"* %3 to %"class.net::HostResolverManager::RequestImpl"*
  %5 = tail call i32 @_ZN3net19HostResolverManager11RequestImpl5StartEN4base12OnceCallbackIFviEEE(%"class.net::HostResolverManager::RequestImpl"* %4, %"class.base::OnceCallback.360"* %1)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.absl::optional.233"* @_ZThn8_NK3net19HostResolverManager11RequestImpl17GetAddressResultsEv(%"class.net::HostResolverManager::RequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 -1, i32 20
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEvE14nullopt_result to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10, !prof !92

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEvE14nullopt_result) #18
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %5
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEvE14nullopt_result, i64 0, i32 0, i64 0), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEvE14nullopt_result, i64 0, i32 0, i64 8), i8 0, i64 48, i1 false) #18
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 56, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEvE14nullopt_result, i64 0, i32 0, i64 0)) #18
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEvE14nullopt_result) #18
  br label %10

10:                                               ; preds = %1, %5, %8
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 45
  %12 = bitcast %"class.base::TimeTicks"* %11 to i8*
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 47
  %16 = bitcast %"class.base::TimeTicks"* %15 to %"class.absl::optional.233"*
  %17 = select i1 %14, %"class.absl::optional.233"* bitcast (%"class.base::NoDestructor"* @_ZZNK3net19HostResolverManager11RequestImpl17GetAddressResultsEvE14nullopt_result to %"class.absl::optional.233"*), %"class.absl::optional.233"* %16
  ret %"class.absl::optional.233"* %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.absl::optional.101"* @_ZThn8_NK3net19HostResolverManager11RequestImpl14GetTextResultsEv(%"class.net::HostResolverManager::RequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 -1, i32 20
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZNK3net19HostResolverManager11RequestImpl14GetTextResultsEvE14nullopt_result to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10, !prof !92

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK3net19HostResolverManager11RequestImpl14GetTextResultsEvE14nullopt_result) #18
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %5
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor.744", %"class.base::NoDestructor.744"* @_ZZNK3net19HostResolverManager11RequestImpl14GetTextResultsEvE14nullopt_result, i64 0, i32 0, i64 0), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor.744", %"class.base::NoDestructor.744"* @_ZZNK3net19HostResolverManager11RequestImpl14GetTextResultsEvE14nullopt_result, i64 0, i32 0, i64 8), i8 0, i64 24, i1 false) #18
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 32, i8* getelementptr inbounds (%"class.base::NoDestructor.744", %"class.base::NoDestructor.744"* @_ZZNK3net19HostResolverManager11RequestImpl14GetTextResultsEvE14nullopt_result, i64 0, i32 0, i64 0)) #18
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK3net19HostResolverManager11RequestImpl14GetTextResultsEvE14nullopt_result) #18
  br label %10

10:                                               ; preds = %1, %5, %8
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 45
  %12 = bitcast %"class.base::TimeTicks"* %11 to i8*
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 54
  %16 = bitcast %"class.base::TimeTicks"* %15 to %"class.absl::optional.101"*
  %17 = select i1 %14, %"class.absl::optional.101"* bitcast (%"class.base::NoDestructor.744"* @_ZZNK3net19HostResolverManager11RequestImpl14GetTextResultsEvE14nullopt_result to %"class.absl::optional.101"*), %"class.absl::optional.101"* %16
  ret %"class.absl::optional.101"* %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.absl::optional.238"* @_ZThn8_NK3net19HostResolverManager11RequestImpl18GetHostnameResultsEv(%"class.net::HostResolverManager::RequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 -1, i32 20
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEvE14nullopt_result to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10, !prof !92

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEvE14nullopt_result) #18
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %5
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor.745", %"class.base::NoDestructor.745"* @_ZZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEvE14nullopt_result, i64 0, i32 0, i64 0), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor.745", %"class.base::NoDestructor.745"* @_ZZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEvE14nullopt_result, i64 0, i32 0, i64 8), i8 0, i64 24, i1 false) #18
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 32, i8* getelementptr inbounds (%"class.base::NoDestructor.745", %"class.base::NoDestructor.745"* @_ZZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEvE14nullopt_result, i64 0, i32 0, i64 0)) #18
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEvE14nullopt_result) #18
  br label %10

10:                                               ; preds = %1, %5, %8
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 45
  %12 = bitcast %"class.base::TimeTicks"* %11 to i8*
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 58
  %16 = bitcast %"class.base::TimeTicks"* %15 to %"class.absl::optional.238"*
  %17 = select i1 %14, %"class.absl::optional.238"* bitcast (%"class.base::NoDestructor.745"* @_ZZNK3net19HostResolverManager11RequestImpl18GetHostnameResultsEvE14nullopt_result to %"class.absl::optional.238"*), %"class.absl::optional.238"* %16
  ret %"class.absl::optional.238"* %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.absl::optional.101"* @_ZThn8_NK3net19HostResolverManager11RequestImpl18GetDnsAliasResultsEv(%"class.net::HostResolverManager::RequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 -1, i32 20
  %3 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 74
  %4 = bitcast %"class.base::TimeTicks"* %3 to %"class.absl::optional.101"*
  ret %"class.absl::optional.101"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.absl::optional.250"* @_ZThn8_NK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEv(%"class.net::HostResolverManager::RequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 -1, i32 20
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEvE14nullopt_result to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10, !prof !92

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEvE14nullopt_result) #18
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %5
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor.746", %"class.base::NoDestructor.746"* @_ZZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEvE14nullopt_result, i64 0, i32 0, i64 0), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor.746", %"class.base::NoDestructor.746"* @_ZZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEvE14nullopt_result, i64 0, i32 0, i64 8), i8 0, i64 24, i1 false) #18
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 32, i8* getelementptr inbounds (%"class.base::NoDestructor.746", %"class.base::NoDestructor.746"* @_ZZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEvE14nullopt_result, i64 0, i32 0, i64 0)) #18
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEvE14nullopt_result) #18
  br label %10

10:                                               ; preds = %1, %5, %8
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 45
  %12 = bitcast %"class.base::TimeTicks"* %11 to i8*
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 62
  %16 = bitcast %"class.base::TimeTicks"* %15 to %"class.absl::optional.250"*
  %17 = select i1 %14, %"class.absl::optional.250"* bitcast (%"class.base::NoDestructor.746"* @_ZZNK3net19HostResolverManager11RequestImpl32GetExperimentalResultsForTestingEvE14nullopt_result to %"class.absl::optional.250"*), %"class.absl::optional.250"* %16
  ret %"class.absl::optional.250"* %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_NK3net19HostResolverManager11RequestImpl19GetResolveErrorInfoEv(%"struct.net::ResolveErrorInfo"* noalias sret, %"class.net::HostResolverManager::RequestImpl"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %1, i64 -1, i32 20
  %4 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 78
  %5 = bitcast %"class.base::TimeTicks"* %4 to %"struct.net::ResolveErrorInfo"*
  tail call void @_ZN3net16ResolveErrorInfoC1ERKS0_(%"struct.net::ResolveErrorInfo"* %0, %"struct.net::ResolveErrorInfo"* dereferenceable(8) %5) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.absl::optional.361"* @_ZThn8_NK3net19HostResolverManager11RequestImpl12GetStaleInfoEv(%"class.net::HostResolverManager::RequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 -1, i32 20
  %3 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 71
  %4 = bitcast %"class.base::TimeTicks"* %3 to %"class.absl::optional.361"*
  ret %"class.absl::optional.361"* %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"*, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.net::IPEndPoint"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 20
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 922337203685477580
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::IPEndPoint"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 20
  %20 = icmp ult i64 %19, 461168601842738790
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 922337203685477580, %14 ]
  %28 = mul i64 %27, 20
  %29 = tail call i8* @_Znwm(i64 %28) #19
  %30 = bitcast i8* %29 to %"class.net::IPEndPoint"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.net::IPEndPoint"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %33, i64 %9
  %35 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %33, i64 %32
  %36 = ptrtoint %"class.net::IPEndPoint"* %35 to i64
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %34, %"class.net::IPEndPoint"* dereferenceable(20) %1) #18
  %37 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %34, i64 1
  %38 = ptrtoint %"class.net::IPEndPoint"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %39, align 8
  %41 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %3, align 8
  %42 = icmp eq %"class.net::IPEndPoint"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.net::IPEndPoint"* %34 to i64
  store i64 %44, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  br label %60

45:                                               ; preds = %31, %45
  %46 = phi %"class.net::IPEndPoint"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.net::IPEndPoint"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %46, i64 -1
  %49 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %47, i64 -1
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %48, %"class.net::IPEndPoint"* dereferenceable(20) %49) #18
  %50 = icmp eq %"class.net::IPEndPoint"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %39, align 8
  %53 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %3, align 8
  %54 = ptrtoint %"class.net::IPEndPoint"* %48 to i64
  store i64 %54, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %55 = icmp eq %"class.net::IPEndPoint"* %53, %52
  br i1 %55, label %60, label %56

56:                                               ; preds = %51, %56
  %57 = phi %"class.net::IPEndPoint"* [ %58, %56 ], [ %53, %51 ]
  %58 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %57, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %58) #18
  %59 = icmp eq %"class.net::IPEndPoint"* %58, %52
  br i1 %59, label %60, label %56

60:                                               ; preds = %56, %43, %51
  %61 = phi %"class.net::IPEndPoint"* [ %40, %43 ], [ %52, %51 ], [ %52, %56 ]
  %62 = icmp eq %"class.net::IPEndPoint"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %64) #19
  br label %65

65:                                               ; preds = %60, %63
  ret void
}

declare void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN4base14FieldTrialList12FindFullNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.506"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN4base13StringToSizeTENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPm(i8*, i64, i64*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.46"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i64* %2 to i64
  %5 = ptrtoint i64* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i64** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.46"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i64*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i64** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i64, i64* %1, i64 %22
  %25 = select i1 %23, i64* %24, i64* %2
  %26 = ptrtoint i64* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i64* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #18
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i64* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #18
  %42 = inttoptr i64 %35 to i64*
  %43 = getelementptr inbounds i64, i64* %42, i64 %39
  %44 = ptrtoint i64* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i64, i64* %16, i64 %28
  store i64* %48, i64** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i64** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #19
  %55 = bitcast %"class.std::__1::vector.46"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #18
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.46"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #20
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.46"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #20
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #19
  %75 = bitcast i8* %74 to i64*
  %76 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i64** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.46"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i64, i64* %75, i64 %72
  store i64* %79, i64** %8, align 8
  %80 = bitcast i64** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast i64* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #18
  %86 = getelementptr inbounds i64, i64* %75, i64 %84
  %87 = ptrtoint i64* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"*) unnamed_addr #3

declare dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"* dereferenceable(200)) local_unnamed_addr #1

declare void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"* dereferenceable(200)) unnamed_addr #1

declare void @_ZN3net17dns_alias_utility18SanitizeDnsAliasesERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.std::__1::vector.1"* sret, %"class.std::__1::vector.1"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

declare void @_ZN3net16ResolveErrorInfoC1Eib(%"struct.net::ResolveErrorInfo"*, i32, i1 zeroext) unnamed_addr #1

declare dereferenceable(8) %"struct.net::ResolveErrorInfo"* @_ZN3net16ResolveErrorInfoaSEOS0_(%"struct.net::ResolveErrorInfo"*, %"struct.net::ResolveErrorInfo"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

declare void @_ZNK3net9HostCache5Entry12NetLogParamsEv(%"class.base::Value"* sret, %"class.net::HostCache::Entry"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"*) unnamed_addr #3

declare void @_ZNK3net16NetLogWithSource25AddEventReferencingSourceENS_15NetLogEventTypeERKNS_12NetLogSourceE(%"class.net::NetLogWithSource"*, i32, %"struct.net::NetLogSource"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3net16NetLogWithSource8AddEntryIZNS_19HostResolverManager3Job10AddRequestEPNS2_11RequestImplEEUlvE_EEvNS_15NetLogEventTypeENS_16NetLogEventPhaseERKT_(%"class.net::NetLogWithSource"*, i32, i32, %class.anon.530* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.base::Value", align 8
  %6 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 1
  %7 = load %"class.net::NetLog"*, %"class.net::NetLog"** %6, align 8
  %8 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %7, i64 0, i32 3
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %27, label %11, !prof !41

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 0
  %13 = bitcast %"class.base::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #18
  %14 = getelementptr inbounds %class.anon.530, %class.anon.530* %3, i64 0, i32 1
  %15 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %14, align 8, !noalias !93
  %16 = getelementptr inbounds %class.anon.530, %class.anon.530* %3, i64 0, i32 0
  %17 = load %"class.net::HostResolverManager::RequestImpl"**, %"class.net::HostResolverManager::RequestImpl"*** %16, align 8, !noalias !93
  %18 = load %"class.net::HostResolverManager::RequestImpl"*, %"class.net::HostResolverManager::RequestImpl"** %17, align 8, !noalias !93
  %19 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %18, i64 0, i32 2, i32 0
  %20 = bitcast %"class.net::HostResolverManager::Job"* %15 to i32 (%"class.net::HostResolverManager::Job"*)***
  %21 = load i32 (%"class.net::HostResolverManager::Job"*)**, i32 (%"class.net::HostResolverManager::Job"*)*** %20, align 8, !noalias !93
  %22 = getelementptr inbounds i32 (%"class.net::HostResolverManager::Job"*)*, i32 (%"class.net::HostResolverManager::Job"*)** %21, i64 6
  %23 = load i32 (%"class.net::HostResolverManager::Job"*)*, i32 (%"class.net::HostResolverManager::Job"*)** %22, align 8, !noalias !93
  %24 = tail call i32 %23(%"class.net::HostResolverManager::Job"* %15) #18, !noalias !93
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false) #18, !alias.scope !96
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %5, i8 zeroext 6) #18
  call void @_ZNK3net12NetLogSource20AddToEventParametersEPN4base5ValueE(%"struct.net::NetLogSource"* %19, %"class.base::Value"* nonnull %5) #18
  %25 = call i8* @_ZN3net23RequestPriorityToStringENS_15RequestPriorityE(i32 %24) #18
  %26 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKc(%"class.base::Value"* nonnull %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0), i64 8, i8* %25) #18
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %7, i32 %1, %"struct.net::NetLogSource"* dereferenceable(16) %12, i32 %2, %"class.base::Value"* nonnull dereferenceable(32) %5) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #18
  br label %27

27:                                               ; preds = %4, %11
  ret void
}

declare void @_ZNK3net12NetLogSource20AddToEventParametersEPN4base5ValueE(%"struct.net::NetLogSource"*, %"class.base::Value"*) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKc(%"class.base::Value"*, i8*, i64, i8*) local_unnamed_addr #1

declare i8* @_ZN3net23RequestPriorityToStringENS_15RequestPriorityE(i32) local_unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

declare void @_ZN3net21PrioritizedDispatcher14ChangePriorityERKNS_13PriorityQueueIPNS0_3JobEE7PointerEj(%"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* sret, %"class.net::PrioritizedDispatcher"*, %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* dereferenceable(40), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job25CompleteRequestsWithErrorEi(%"class.net::HostResolverManager::Job"*, i32) #0 comdat align 2 {
  %3 = alloca %"class.net::HostCache::Entry", align 8
  %4 = bitcast %"class.net::HostCache::Entry"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %4) #18
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* nonnull %3, i32 %1, i32 0, i8 0, i64 undef) #18
  call void @_ZN3net19HostResolverManager3Job16CompleteRequestsERKNS_9HostCache5EntryEN4base9TimeDeltaEbb(%"class.net::HostResolverManager::Job"* %0, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %3, i64 0, i1 zeroext true, i1 zeroext false)
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job16MaybeCacheResultERKNS_9HostCache5EntryEN4base9TimeDeltaEb(%"class.net::HostResolverManager::Job"*, %"class.net::HostCache::Entry"* dereferenceable(200), i64, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"struct.net::HostCache::Key", align 8
  %7 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %9 [
    i32 -21, label %61
    i32 -119, label %61
  ]

9:                                                ; preds = %4
  %10 = bitcast %"struct.net::HostCache::Key"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %10) #18
  %11 = zext i1 %3 to i8
  %12 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 5
  %14 = bitcast %"struct.net::HostCache::Key"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 232, i1 false)
  %15 = load i32, i32* %13, align 8, !noalias !99
  %16 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 6
  %17 = load i32, i32* %16, align 4, !noalias !99
  %18 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 7
  %19 = load i32, i32* %18, align 8, !noalias !99
  %20 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 4
  call void @_ZN3net9HostCache3KeyC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_12DnsQueryTypeEiNS_18HostResolverSourceERKNS_19NetworkIsolationKeyE(%"struct.net::HostCache::Key"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %12, i32 %15, i32 %17, i32 %19, %"class.net::NetworkIsolationKey"* dereferenceable(184) %20) #18
  %21 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %6, i64 0, i32 6
  store i8 %11, i8* %21, align 8, !alias.scope !99
  %22 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %22) #18
  br i1 %23, label %27, label %24

24:                                               ; preds = %9
  %25 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #18
  br label %27

27:                                               ; preds = %24, %9
  %28 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %22) #18
  br i1 %28, label %29, label %33

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 1
  %31 = bitcast i64* %30 to %"class.net::HostResolverManager"**
  %32 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %31, align 8
  br label %33

33:                                               ; preds = %27, %29
  %34 = phi %"class.net::HostResolverManager"* [ %32, %29 ], [ null, %27 ]
  %35 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 11
  %36 = load %"class.net::HostCache"*, %"class.net::HostCache"** %35, align 8
  %37 = icmp eq %"class.net::HostCache"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %33
  %39 = load i32, i32* %7, align 8
  %40 = icmp eq i32 %39, 0
  %41 = icmp sgt i64 %2, 0
  %42 = or i1 %41, %40
  br i1 %42, label %43, label %51

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %34, i64 0, i32 18
  %45 = load %"class.base::TickClock"*, %"class.base::TickClock"** %44, align 8
  %46 = bitcast %"class.base::TickClock"* %45 to i64 (%"class.base::TickClock"*)***
  %47 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %46, align 8
  %48 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %47, i64 2
  %49 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %48, align 8
  %50 = call i64 %49(%"class.base::TickClock"* %45) #18
  call void @_ZN3net9HostCache3SetERKNS0_3KeyERKNS0_5EntryEN4base9TimeTicksENS7_9TimeDeltaE(%"class.net::HostCache"* nonnull %36, %"struct.net::HostCache::Key"* nonnull dereferenceable(232) %6, %"class.net::HostCache::Entry"* dereferenceable(200) %1, i64 %50, i64 %2) #18
  br label %51

51:                                               ; preds = %33, %38, %43
  %52 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %6, i64 0, i32 5
  call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %52) #18
  %53 = bitcast %"struct.net::HostCache::Key"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #19
  br label %60

60:                                               ; preds = %51, %57
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %10) #18
  br label %61

61:                                               ; preds = %4, %4, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job16CompleteRequestsERKNS_9HostCache5EntryEN4base9TimeDeltaEbb(%"class.net::HostResolverManager::Job"*, %"class.net::HostCache::Entry"* dereferenceable(200), i64, i1 zeroext, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.base::OnceCallback.360", align 8
  %9 = alloca %"struct.net::ResolveErrorInfo", align 4
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.net::HostCache::Entry", align 8
  %12 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %12) #18
  br i1 %13, label %14, label %19

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 1
  %16 = bitcast i64* %15 to %"class.net::HostResolverManager"**
  %17 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %16, align 8
  %18 = icmp eq %"class.net::HostResolverManager"* %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5, %14
  %20 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 2320, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %14, %19
  %23 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %52, label %26

26:                                               ; preds = %22
  %27 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %12) #18
  br i1 %27, label %31, label %28

28:                                               ; preds = %26
  %29 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #18
  br label %31

31:                                               ; preds = %28, %26
  %32 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %12) #18
  br i1 %32, label %33, label %37

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 1
  %35 = bitcast i64* %34 to %"class.net::HostResolverManager"**
  %36 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %35, align 8
  br label %37

37:                                               ; preds = %31, %33
  %38 = phi %"class.net::HostResolverManager"* [ %36, %33 ], [ null, %31 ]
  %39 = load i8, i8* %23, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #20
  unreachable

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %44 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 33
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to i64*
  %47 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.net::HostResolverManager::Job"**
  %48 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %47, align 8
  store i64 0, i64* %46, align 8
  %49 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %38, i64 0, i32 5, i32 0
  %50 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net19HostResolverManager6JobKeyENS_10unique_ptrINS3_3JobENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS_9allocatorISA_EEE5eraseENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEE(%"class.std::__1::__tree"* %49, %"class.std::__1::__tree_end_node"* %44) #18
  %51 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %48, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %51, align 8
  br label %52

52:                                               ; preds = %22, %42
  %53 = phi %"class.net::HostResolverManager::Job"* [ %48, %42 ], [ null, %22 ]
  %54 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 14
  %55 = load i8, i8* %54, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %74, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %59 = load %"class.net::HostResolverManager::ProcTask"*, %"class.net::HostResolverManager::ProcTask"** %58, align 8
  store %"class.net::HostResolverManager::ProcTask"* null, %"class.net::HostResolverManager::ProcTask"** %58, align 8
  %60 = icmp eq %"class.net::HostResolverManager::ProcTask"* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %57
  call void @_ZN3net19HostResolverManager8ProcTaskD2Ev(%"class.net::HostResolverManager::ProcTask"* nonnull %59) #18
  %62 = bitcast %"class.net::HostResolverManager::ProcTask"* %59 to i8*
  call void @_ZdlPv(i8* %62) #19
  br label %63

63:                                               ; preds = %57, %61
  call void @_ZN3net19HostResolverManager3Job11KillDnsTaskEv(%"class.net::HostResolverManager::Job"* %0)
  %64 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %65 = load %"class.net::HostResolverMdnsTask"*, %"class.net::HostResolverMdnsTask"** %64, align 8
  store %"class.net::HostResolverMdnsTask"* null, %"class.net::HostResolverMdnsTask"** %64, align 8
  %66 = icmp eq %"class.net::HostResolverMdnsTask"* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  call void @_ZN3net20HostResolverMdnsTaskD1Ev(%"class.net::HostResolverMdnsTask"* nonnull %65) #18
  %68 = bitcast %"class.net::HostResolverMdnsTask"* %65 to i8*
  call void @_ZdlPv(i8* %68) #19
  br label %69

69:                                               ; preds = %63, %67
  store i8 0, i8* %54, align 8
  %70 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 19
  %71 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %70, align 8
  %72 = icmp eq %"class.net::PrioritizedDispatcher"* %71, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %69
  call void @_ZN3net21PrioritizedDispatcher13OnJobFinishedEv(%"class.net::PrioritizedDispatcher"* nonnull %71) #18
  br label %88

74:                                               ; preds = %52
  %75 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, -1
  br i1 %77, label %88, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 19
  %80 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %79, align 8
  %81 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28
  call void @_ZN3net21PrioritizedDispatcher6CancelERKNS_13PriorityQueueIPNS0_3JobEE7PointerE(%"class.net::PrioritizedDispatcher"* %80, %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* dereferenceable(40) %81) #18
  %82 = bitcast %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %82) #18
  %83 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %6, i64 0, i32 2
  %84 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %81, i64 0, i32 0
  store i32 -1, i32* %84, align 8
  %85 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 1
  %86 = bitcast %"class.std::__1::__list_iterator"* %85 to i64*
  %87 = ptrtoint %"class.std::__1::list"* %83 to i64
  store i64 %87, i64* %86, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %82) #18
  br label %88

88:                                               ; preds = %74, %69, %78, %73
  %89 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 15, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, 0
  %92 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 23
  br i1 %91, label %93, label %94

93:                                               ; preds = %88
  call void @_ZNK3net16NetLogWithSource8AddEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %92, i32 0) #18
  call void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %92, i32 8, i32 0) #18
  br label %164

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 0
  %96 = load i32, i32* %95, align 8
  call void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %92, i32 8, i32 %96) #18
  br i1 %3, label %97, label %98

97:                                               ; preds = %94
  call void @_ZN3net19HostResolverManager3Job16MaybeCacheResultERKNS_9HostCache5EntryEN4base9TimeDeltaEb(%"class.net::HostResolverManager::Job"* %0, %"class.net::HostCache::Entry"* dereferenceable(200) %1, i64 %2, i1 zeroext %4)
  br label %98

98:                                               ; preds = %97, %94
  %99 = load i32, i32* %95, align 8
  call void @_ZN3net19HostResolverManager3Job19RecordJobHistogramsEi(%"class.net::HostResolverManager::Job"* %0, i32 %99)
  %100 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 1
  %101 = bitcast i64* %100 to %"class.net::HostResolverManager"**
  %102 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 27, i32 0, i32 0, i32 1
  %103 = bitcast %"class.base::internal::LinkNodeBase"** %102 to %"class.base::LinkNode.229"**
  %104 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 27, i32 0
  %105 = bitcast %"struct.net::ResolveErrorInfo"* %9 to i8*
  %106 = bitcast %"class.base::OnceCallback.360"* %8 to i8*
  %107 = bitcast %"class.base::OnceCallback.360"* %8 to i64*
  %108 = getelementptr inbounds %"class.base::OnceCallback.360", %"class.base::OnceCallback.360"* %8, i64 0, i32 0
  br label %109

109:                                              ; preds = %161, %98
  %110 = load %"class.base::LinkNode.229"*, %"class.base::LinkNode.229"** %103, align 8
  %111 = icmp eq %"class.base::LinkNode.229"* %110, %104
  br i1 %111, label %164, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.base::LinkNode.229", %"class.base::LinkNode.229"* %110, i64 -1
  %114 = bitcast %"class.base::LinkNode.229"* %113 to %"class.net::HostResolverManager::RequestImpl"*
  %115 = getelementptr inbounds %"class.base::LinkNode.229", %"class.base::LinkNode.229"* %110, i64 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %115) #18
  %116 = load i32, i32* %95, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %140

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.base::LinkNode.229", %"class.base::LinkNode.229"* %110, i64 16
  %120 = bitcast %"class.base::LinkNode.229"* %119 to %"struct.net::HostResolver::ResolveHostParameters"*
  %121 = getelementptr inbounds %"struct.net::HostResolver::ResolveHostParameters", %"struct.net::HostResolver::ResolveHostParameters"* %120, i64 0, i32 6
  %122 = load i8, i8* %121, align 2, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %140

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.base::LinkNode.229", %"class.base::LinkNode.229"* %110, i64 2, i32 0, i32 1
  %126 = getelementptr inbounds %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %125, i64 3
  %127 = bitcast %"class.base::internal::LinkNodeBase"** %126 to i16*
  %128 = load i16, i16* %127, align 8
  call void @_ZNK3net9HostCache5Entry19CopyWithDefaultPortEt(%"class.net::HostCache::Entry"* nonnull sret %11, %"class.net::HostCache::Entry"* %1, i16 zeroext %128) #18
  %129 = getelementptr inbounds %"class.base::LinkNode.229", %"class.base::LinkNode.229"* %110, i64 21, i32 0, i32 1
  %130 = bitcast %"class.base::internal::LinkNodeBase"** %129 to i8*
  %131 = load i8, i8* %130, align 8, !range !2
  %132 = icmp eq i8 %131, 0
  %133 = getelementptr inbounds %"class.base::LinkNode.229", %"class.base::LinkNode.229"* %110, i64 22
  %134 = bitcast %"class.base::LinkNode.229"* %133 to %"class.net::HostCache::Entry"*
  br i1 %132, label %137, label %135

135:                                              ; preds = %124
  %136 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %134, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %11) #18
  br label %138

137:                                              ; preds = %124
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* %134, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %11) #18
  store i8 1, i8* %130, align 8
  br label %138

138:                                              ; preds = %135, %137
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %11) #18
  call void @_ZN3net19HostResolverManager11RequestImpl23SanitizeDnsAliasResultsEv(%"class.net::HostResolverManager::RequestImpl"* %114)
  %139 = load i32, i32* %95, align 8
  br label %140

140:                                              ; preds = %118, %138, %112
  %141 = phi i32 [ 0, %118 ], [ %139, %138 ], [ %116, %112 ]
  %142 = icmp ne i32 %141, 0
  %143 = and i1 %142, %4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #18
  call void @_ZN3net16ResolveErrorInfoC1Eib(%"struct.net::ResolveErrorInfo"* nonnull %9, i32 %141, i1 zeroext %143) #18
  %144 = getelementptr inbounds %"class.base::LinkNode.229", %"class.base::LinkNode.229"* %110, i64 38
  %145 = bitcast %"class.base::LinkNode.229"* %144 to %"struct.net::ResolveErrorInfo"*
  %146 = call dereferenceable(8) %"struct.net::ResolveErrorInfo"* @_ZN3net16ResolveErrorInfoaSEOS0_(%"struct.net::ResolveErrorInfo"* %145, %"struct.net::ResolveErrorInfo"* nonnull dereferenceable(8) %9) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #18
  %147 = getelementptr inbounds %"class.base::LinkNode.229", %"class.base::LinkNode.229"* %110, i64 19
  %148 = bitcast %"class.base::LinkNode.229"* %147 to %"class.net::HostResolverManager::Job"**
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %148, align 8
  %149 = getelementptr inbounds %"class.base::LinkNode.229", %"class.base::LinkNode.229"* %110, i64 21
  %150 = bitcast %"class.base::LinkNode.229"* %149 to i8*
  store i8 1, i8* %150, align 8
  call void @_ZN3net19HostResolverManager11RequestImpl16LogFinishRequestEib(%"class.net::HostResolverManager::RequestImpl"* %114, i32 %141, i1 zeroext true) #18
  %151 = getelementptr inbounds %"class.base::LinkNode.229", %"class.base::LinkNode.229"* %110, i64 20, i32 0, i32 1
  %152 = call i32 @_ZN3net12HostResolver15SquashErrorCodeEi(i32 %141) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #18
  %153 = bitcast %"class.base::internal::LinkNodeBase"** %151 to %"class.base::internal::BindStateBase"**
  %154 = bitcast %"class.base::internal::LinkNodeBase"** %151 to i64*
  %155 = load i64, i64* %154, align 8
  store i64 %155, i64* %107, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %153, align 8
  %156 = inttoptr i64 %155 to %"class.base::internal::BindStateBase"*
  %157 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %156, i64 0, i32 1
  %158 = bitcast void ()** %157 to void (%"class.base::internal::BindStateBase"*, i32)**
  %159 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %158, align 8
  call void %159(%"class.base::internal::BindStateBase"* %156, i32 %152) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %108) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #18
  %160 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %12) #18
  br i1 %160, label %161, label %164

161:                                              ; preds = %140
  %162 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %101, align 8
  %163 = icmp eq %"class.net::HostResolverManager"* %162, null
  br i1 %163, label %164, label %109

164:                                              ; preds = %161, %140, %109, %93
  %165 = icmp eq %"class.net::HostResolverManager::Job"* %53, null
  br i1 %165, label %171, label %166

166:                                              ; preds = %164
  %167 = bitcast %"class.net::HostResolverManager::Job"* %53 to void (%"class.net::HostResolverManager::Job"*)***
  %168 = load void (%"class.net::HostResolverManager::Job"*)**, void (%"class.net::HostResolverManager::Job"*)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.net::HostResolverManager::Job"*)*, void (%"class.net::HostResolverManager::Job"*)** %168, i64 1
  %170 = load void (%"class.net::HostResolverManager::Job"*)*, void (%"class.net::HostResolverManager::Job"*)** %169, align 8
  call void %170(%"class.net::HostResolverManager::Job"* nonnull %53) #18
  br label %171

171:                                              ; preds = %164, %166
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job8ScheduleEb(%"class.net::HostResolverManager::Job"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", align 8
  %4 = alloca %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", align 8
  %5 = alloca %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", align 8
  %6 = bitcast %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #18
  %7 = bitcast %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3 to i64*
  store i64 -6148914691236517206, i64* %7, align 8
  %8 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 0
  store i32 -1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %10, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %10, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %11, %"struct.std::__1::__list_node_base"** %12, align 8
  %13 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 2, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %11, %"struct.std::__1::__list_node_base"** %13, align 8
  %14 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %14, align 8
  store %"struct.std::__1::__list_node_base"* %11, %"struct.std::__1::__list_node_base"** %9, align 8
  br i1 %1, label %60, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #18
  %17 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 19
  %18 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %17, align 8
  %19 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 0
  %20 = bitcast %"class.net::HostResolverManager::Job"* %0 to i32 (%"class.net::HostResolverManager::Job"*)***
  %21 = load i32 (%"class.net::HostResolverManager::Job"*)**, i32 (%"class.net::HostResolverManager::Job"*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.net::HostResolverManager::Job"*)*, i32 (%"class.net::HostResolverManager::Job"*)** %21, i64 6
  %23 = load i32 (%"class.net::HostResolverManager::Job"*)*, i32 (%"class.net::HostResolverManager::Job"*)** %22, align 8
  %24 = call i32 %23(%"class.net::HostResolverManager::Job"* %0) #18
  call void @_ZN3net21PrioritizedDispatcher3AddEPNS0_3JobEj(%"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* nonnull sret %4, %"class.net::PrioritizedDispatcher"* %18, %"class.net::PrioritizedDispatcher::Job"* %19, i32 %24) #18
  %25 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %4, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  store i32 %26, i32* %8, align 8
  %27 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %4, i64 0, i32 1
  %28 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 1
  %29 = bitcast %"class.std::__1::__list_iterator"* %27 to i64*
  %30 = bitcast %"class.std::__1::__list_iterator"* %28 to i64*
  %31 = load i64, i64* %29, align 8
  store i64 %31, i64* %30, align 8
  %32 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %4, i64 0, i32 2, i32 0
  %33 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %4, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %105, label %36

36:                                               ; preds = %15
  %37 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %4, i64 0, i32 2, i32 0, i32 0, i32 1
  %38 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %32, i64 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %32, i64 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %41, i64 0, i32 1
  %43 = bitcast %"struct.std::__1::__list_node_base"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %38, i64 0, i32 0
  %46 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %45, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %46, i64 0, i32 1
  %48 = bitcast %"struct.std::__1::__list_node_base"** %47 to i64*
  store i64 %44, i64* %48, align 8
  %49 = bitcast %"struct.std::__1::__list_node_base"* %38 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"struct.std::__1::__list_node_base"** %42 to i64**
  %52 = load i64*, i64** %51, align 8
  store i64 %50, i64* %52, align 8
  store i64 0, i64* %33, align 8
  %53 = icmp eq %"struct.std::__1::__list_node_base"* %38, %39
  br i1 %53, label %105, label %54

54:                                               ; preds = %36, %54
  %55 = phi %"struct.std::__1::__list_node_base"* [ %57, %54 ], [ %38, %36 ]
  %56 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %55, i64 0, i32 1
  %57 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %56, align 8
  %58 = bitcast %"struct.std::__1::__list_node_base"* %55 to i8*
  call void @_ZdlPv(i8* %58) #19
  %59 = icmp eq %"struct.std::__1::__list_node_base"* %57, %39
  br i1 %59, label %105, label %54

60:                                               ; preds = %2
  %61 = bitcast %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %61) #18
  %62 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 19
  %63 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %62, align 8
  %64 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 0
  %65 = bitcast %"class.net::HostResolverManager::Job"* %0 to i32 (%"class.net::HostResolverManager::Job"*)***
  %66 = load i32 (%"class.net::HostResolverManager::Job"*)**, i32 (%"class.net::HostResolverManager::Job"*)*** %65, align 8
  %67 = getelementptr inbounds i32 (%"class.net::HostResolverManager::Job"*)*, i32 (%"class.net::HostResolverManager::Job"*)** %66, i64 6
  %68 = load i32 (%"class.net::HostResolverManager::Job"*)*, i32 (%"class.net::HostResolverManager::Job"*)** %67, align 8
  %69 = call i32 %68(%"class.net::HostResolverManager::Job"* %0) #18
  call void @_ZN3net21PrioritizedDispatcher9AddAtHeadEPNS0_3JobEj(%"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* nonnull sret %5, %"class.net::PrioritizedDispatcher"* %63, %"class.net::PrioritizedDispatcher::Job"* %64, i32 %69) #18
  %70 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %5, i64 0, i32 0
  %71 = load i32, i32* %70, align 8
  store i32 %71, i32* %8, align 8
  %72 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %5, i64 0, i32 1
  %73 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 1
  %74 = bitcast %"class.std::__1::__list_iterator"* %72 to i64*
  %75 = bitcast %"class.std::__1::__list_iterator"* %73 to i64*
  %76 = load i64, i64* %74, align 8
  store i64 %76, i64* %75, align 8
  %77 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %5, i64 0, i32 2, i32 0
  %78 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %5, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %105, label %81

81:                                               ; preds = %60
  %82 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %5, i64 0, i32 2, i32 0, i32 0, i32 1
  %83 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %77, i64 0, i32 0
  %85 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %77, i64 0, i32 0, i32 0
  %86 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %85, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %86, i64 0, i32 1
  %88 = bitcast %"struct.std::__1::__list_node_base"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %83, i64 0, i32 0
  %91 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %90, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %91, i64 0, i32 1
  %93 = bitcast %"struct.std::__1::__list_node_base"** %92 to i64*
  store i64 %89, i64* %93, align 8
  %94 = bitcast %"struct.std::__1::__list_node_base"* %83 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"struct.std::__1::__list_node_base"** %87 to i64**
  %97 = load i64*, i64** %96, align 8
  store i64 %95, i64* %97, align 8
  store i64 0, i64* %78, align 8
  %98 = icmp eq %"struct.std::__1::__list_node_base"* %83, %84
  br i1 %98, label %105, label %99

99:                                               ; preds = %81, %99
  %100 = phi %"struct.std::__1::__list_node_base"* [ %102, %99 ], [ %83, %81 ]
  %101 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %100, i64 0, i32 1
  %102 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %101, align 8
  %103 = bitcast %"struct.std::__1::__list_node_base"* %100 to i8*
  call void @_ZdlPv(i8* %103) #19
  %104 = icmp eq %"struct.std::__1::__list_node_base"* %102, %84
  br i1 %104, label %105, label %99

105:                                              ; preds = %54, %99, %81, %60, %36, %15
  %106 = phi i8* [ %16, %15 ], [ %16, %36 ], [ %61, %60 ], [ %61, %81 ], [ %61, %99 ], [ %16, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %106) #18
  %107 = load i32, i32* %8, align 8
  %108 = icmp eq i32 %107, -1
  br i1 %108, label %116, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 0
  store i32 %107, i32* %110, align 8
  %111 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 1
  %112 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 1
  %113 = bitcast %"class.std::__1::__list_iterator"* %111 to i64*
  %114 = bitcast %"class.std::__1::__list_iterator"* %112 to i64*
  %115 = load i64, i64* %113, align 8
  store i64 %115, i64* %114, align 8
  br label %116

116:                                              ; preds = %109, %105
  %117 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 2, i32 0
  %118 = load i64, i64* %14, align 8
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %143, label %120

120:                                              ; preds = %116
  %121 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %13, align 8
  %122 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %117, i64 0, i32 0
  %123 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %117, i64 0, i32 0, i32 0
  %124 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %123, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %124, i64 0, i32 1
  %126 = bitcast %"struct.std::__1::__list_node_base"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %121, i64 0, i32 0
  %129 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %128, align 8
  %130 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %131 = bitcast %"struct.std::__1::__list_node_base"** %130 to i64*
  store i64 %127, i64* %131, align 8
  %132 = bitcast %"struct.std::__1::__list_node_base"* %121 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.std::__1::__list_node_base"** %125 to i64**
  %135 = load i64*, i64** %134, align 8
  store i64 %133, i64* %135, align 8
  store i64 0, i64* %14, align 8
  %136 = icmp eq %"struct.std::__1::__list_node_base"* %121, %122
  br i1 %136, label %143, label %137

137:                                              ; preds = %120, %137
  %138 = phi %"struct.std::__1::__list_node_base"* [ %140, %137 ], [ %121, %120 ]
  %139 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %138, i64 0, i32 1
  %140 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %139, align 8
  %141 = bitcast %"struct.std::__1::__list_node_base"* %138 to i8*
  call void @_ZdlPv(i8* %141) #19
  %142 = icmp eq %"struct.std::__1::__list_node_base"* %140, %122
  br i1 %142, label %143, label %137

143:                                              ; preds = %137, %116, %120
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #18
  ret void
}

declare %"class.net::PrioritizedDispatcher::Job"* @_ZN3net21PrioritizedDispatcher17EvictOldestLowestEv(%"class.net::PrioritizedDispatcher"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job9OnEvictedEv(%"class.net::HostResolverManager::Job"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback.335", align 8
  %6 = alloca %"class.base::WeakPtr.542", align 8
  %7 = bitcast %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #18
  %8 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 0
  store i32 -1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 1
  %11 = bitcast %"class.std::__1::__list_iterator"* %10 to i64*
  %12 = ptrtoint %"class.std::__1::list"* %8 to i64
  store i64 %12, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #18
  %13 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 23
  call void @_ZNK3net16NetLogWithSource8AddEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %13, i32 9) #18
  %14 = call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #18
  %15 = bitcast %class.scoped_refptr.81* %14 to %"class.base::TaskRunner"**
  %16 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %15, align 8
  %17 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #18
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 1811) #18
  %18 = bitcast %"class.base::WeakPtr.542"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #18
  %19 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #18, !noalias !102
  %20 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 31, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %20) #18, !noalias !102
  %21 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 31, i32 0, i32 1
  %22 = load i64, i64* %21, align 8, !noalias !102
  %23 = getelementptr inbounds %"class.base::WeakPtr.542", %"class.base::WeakPtr.542"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %23, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %22) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #18, !noalias !102
  %24 = call i8* @_Znwm(i64 72) #19, !noalias !105
  %25 = bitcast i8* %24 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %25, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS5_EENS3_5ErrorEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS4_EENS2_5ErrorEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS5_EENS3_5ErrorEEEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE) #18, !noalias !105
  %26 = getelementptr inbounds i8, i8* %24, i64 32
  %27 = bitcast i8* %26 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::HostResolverManager::Job"*, i32)* @_ZN3net19HostResolverManager3Job25CompleteRequestsWithErrorEi to i64), i64 0>, <2 x i64>* %27, align 8, !noalias !105
  %28 = getelementptr inbounds i8, i8* %24, i64 48
  %29 = bitcast i8* %28 to %"class.base::internal::WeakReference"*
  %30 = getelementptr inbounds %"class.base::WeakPtr.542", %"class.base::WeakPtr.542"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %29, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %30) #18, !noalias !105
  %31 = getelementptr inbounds i8, i8* %24, i64 56
  %32 = bitcast i8* %31 to i64*
  %33 = getelementptr inbounds %"class.base::WeakPtr.542", %"class.base::WeakPtr.542"* %6, i64 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8, !noalias !105
  store i64 %34, i64* %32, align 8, !noalias !105
  %35 = getelementptr inbounds i8, i8* %24, i64 64
  %36 = bitcast i8* %35 to i32*
  store i32 -119, i32* %36, align 4, !noalias !105
  %37 = bitcast %"class.base::OnceCallback.335"* %5 to i8**
  store i8* %24, i8** %37, align 8, !alias.scope !105
  %38 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %16, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback.335"* nonnull %5) #18
  %39 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #18
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %23) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #18
  ret void
}

declare void @_ZNK3net16NetLogWithSource8AddEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job13StartProcTaskEv(%"class.net::HostResolverManager::Job"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 8
  %9 = tail call i32 @_ZN3net12HostResolver27DnsQueryTypeToAddressFamilyENS_12DnsQueryTypeE(i32 %8) #18
  %10 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 6
  %11 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %11) #18
  br i1 %12, label %16, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #18
  br label %16

16:                                               ; preds = %13, %1
  %17 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %11) #18
  br i1 %17, label %18, label %22

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 1
  %20 = bitcast i64* %19 to %"class.net::HostResolverManager"**
  %21 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %20, align 8
  br label %22

22:                                               ; preds = %16, %18
  %23 = phi %"class.net::HostResolverManager"* [ %21, %18 ], [ null, %16 ]
  %24 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %23, i64 0, i32 8
  %25 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #18
  %26 = ptrtoint %"class.net::HostResolverManager::Job"* %0 to i64
  %27 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 21
  %28 = load %"class.base::TickClock"*, %"class.base::TickClock"** %27, align 8
  %29 = bitcast %"class.base::TickClock"* %28 to i64 (%"class.base::TickClock"*)***
  %30 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %29, align 8
  %31 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %30, i64 2
  %32 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %31, align 8
  %33 = call i64 %32(%"class.base::TickClock"* %28) #18
  %34 = call i8* @_Znwm(i64 64) #19, !noalias !110
  %35 = bitcast i8* %34 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %35, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.net::AddressList"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager3JobEFvNS_9TimeTicksEiRKNS3_11AddressListEEJNS0_17UnretainedWrapperIS5_EES6_EEEFviS9_EE7RunOnceEPNS0_13BindStateBaseEiS9_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net19HostResolverManager3JobEFvNS_9TimeTicksEiRKNS2_11AddressListEEJNS0_17UnretainedWrapperIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !110
  %36 = getelementptr inbounds i8, i8* %34, i64 32
  %37 = bitcast i8* %36 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::HostResolverManager::Job"*, i64, i32, %"class.net::AddressList"*)* @_ZN3net19HostResolverManager3Job18OnProcTaskCompleteEN4base9TimeTicksEiRKNS_11AddressListE to i64), i64 0>, <2 x i64>* %37, align 8, !noalias !110
  %38 = getelementptr inbounds i8, i8* %34, i64 48
  %39 = bitcast i8* %38 to i64*
  store i64 %26, i64* %39, align 8, !noalias !110
  %40 = getelementptr inbounds i8, i8* %34, i64 56
  %41 = bitcast i8* %40 to i64*
  store i64 %33, i64* %41, align 8, !noalias !110
  %42 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %34, i8** %42, align 8, !alias.scope !110
  %43 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 23
  %44 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44)
  %45 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  %46 = call i8* @_Znwm(i64 144) #19
  %47 = bitcast i8* %46 to %"class.net::HostResolverManager::ProcTask"*
  %48 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %22
  %53 = ptrtoint i8* %34 to i64
  %54 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %54, i64 24, i1 false) #18
  br label %62

55:                                               ; preds = %22
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %2, i8* %57, i64 %59) #18
  %60 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %61 = load i64, i64* %60, align 8
  br label %62

62:                                               ; preds = %55, %52
  %63 = phi i64 [ %61, %55 ], [ %53, %52 ]
  %64 = load i32, i32* %10, align 4
  %65 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %63, i64* %66, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %65, align 8
  %67 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 16, i32 0
  %68 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %67, align 8
  %69 = ptrtoint %"class.base::TaskRunner"* %68 to i64
  %70 = icmp eq %"class.base::TaskRunner"* %68, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %62
  %72 = getelementptr inbounds %"class.base::TaskRunner", %"class.base::TaskRunner"* %68, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 1 monotonic
  br label %74

74:                                               ; preds = %71, %62
  %75 = load %"class.base::TickClock"*, %"class.base::TickClock"** %27, align 8
  call void @_ZN3net19HostResolverManager8ProcTaskC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13AddressFamilyEiRKNS_14ProcTaskParamsEN4base12OnceCallbackIFviRKNS_11AddressListEEEE13scoped_refptrINSD_10TaskRunnerEERKNS_16NetLogWithSourceEPKNSD_9TickClockE(%"class.net::HostResolverManager::ProcTask"* nonnull %47, %"class.std::__1::basic_string"* nonnull %2, i32 %9, i32 %64, %"struct.net::ProcTaskParams"* dereferenceable(32) %24, %"class.base::OnceCallback"* nonnull %3, i64 %69, %"class.net::NetLogWithSource"* dereferenceable(24) %43, %"class.base::TickClock"* %75) #18
  %76 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %76) #18
  %77 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %83) #19
  br label %84

84:                                               ; preds = %74, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  %85 = ptrtoint i8* %46 to i64
  %86 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 24
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.271"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.net::HostResolverManager::ProcTask"*, %"class.net::HostResolverManager::ProcTask"** %87, align 8
  %89 = bitcast %"class.std::__1::unique_ptr.271"* %86 to i64*
  store i64 %85, i64* %89, align 8
  %90 = icmp eq %"class.net::HostResolverManager::ProcTask"* %88, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %84
  call void @_ZN3net19HostResolverManager8ProcTaskD2Ev(%"class.net::HostResolverManager::ProcTask"* nonnull %88) #18
  %92 = bitcast %"class.net::HostResolverManager::ProcTask"* %88 to i8*
  call void @_ZdlPv(i8* %92) #19
  br label %93

93:                                               ; preds = %91, %84
  %94 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %94) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #18
  %95 = load %"class.net::HostResolverManager::ProcTask"*, %"class.net::HostResolverManager::ProcTask"** %87, align 8
  %96 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %95, i64 0, i32 8
  call void @_ZNK3net16NetLogWithSource10BeginEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %96, i32 16) #18
  call void @_ZN3net19HostResolverManager8ProcTask18StartLookupAttemptEv(%"class.net::HostResolverManager::ProcTask"* %95) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job12StartDnsTaskEb(%"class.net::HostResolverManager::Job"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #18
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #18
  br label %9

9:                                                ; preds = %6, %2
  %10 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #18
  br i1 %10, label %11, label %15

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 1
  %13 = bitcast i64* %12 to %"class.net::HostResolverManager"**
  %14 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %13, align 8
  br label %15

15:                                               ; preds = %9, %11
  %16 = phi %"class.net::HostResolverManager"* [ %14, %11 ], [ null, %9 ]
  %17 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %16, i64 0, i32 10, i32 0, i32 0, i32 0
  %18 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %17, align 8
  %19 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 3
  %20 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 5
  %21 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 10
  %22 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 9
  %23 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 23
  %24 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 21
  %25 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp ne i64 %26, 0
  %28 = call i8* @_Znwm(i64 720) #19
  %29 = bitcast i8* %28 to %"class.net::HostResolverManager::DnsTask"*
  %30 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %37 = select i1 %33, i8* %35, i8* %36
  %38 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %32 to i64
  %41 = select i1 %33, i64 %39, i64 %40
  %42 = load i32, i32* %20, align 4
  %43 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %21, align 8
  %44 = load i32, i32* %22, align 4
  %45 = icmp eq %"class.net::HostResolverManager::Job"* %0, null
  %46 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 1
  %47 = select i1 %45, %"class.net::HostResolverManager::DnsTask::Delegate"* null, %"class.net::HostResolverManager::DnsTask::Delegate"* %46
  %48 = load %"class.base::TickClock"*, %"class.base::TickClock"** %24, align 8
  call void @_ZN3net19HostResolverManager7DnsTaskC2EPNS_9DnsClientEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_12DnsQueryTypeEPNS_14ResolveContextEbNS_13SecureDnsModeEPNS1_8DelegateERKNS_16NetLogWithSourceEPKNS4_9TickClockEb(%"class.net::HostResolverManager::DnsTask"* nonnull %29, %"class.net::DnsClient"* %18, i8* %37, i64 %41, i32 %42, %"class.net::ResolveContext"* %43, i1 zeroext %1, i32 %44, %"class.net::HostResolverManager::DnsTask::Delegate"* %47, %"class.net::NetLogWithSource"* dereferenceable(24) %23, %"class.base::TickClock"* %48, i1 zeroext %27) #18
  %49 = ptrtoint i8* %28 to i64
  %50 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 25
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.281"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.net::HostResolverManager::DnsTask"*, %"class.net::HostResolverManager::DnsTask"** %51, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.281"* %50 to i64*
  store i64 %49, i64* %53, align 8
  %54 = icmp eq %"class.net::HostResolverManager::DnsTask"* %52, null
  %55 = bitcast i8* %28 to %"class.net::HostResolverManager::DnsTask"*
  br i1 %54, label %59, label %56

56:                                               ; preds = %15
  call void @_ZN3net19HostResolverManager7DnsTaskD2Ev(%"class.net::HostResolverManager::DnsTask"* nonnull %52) #18
  %57 = bitcast %"class.net::HostResolverManager::DnsTask"* %52 to i8*
  call void @_ZdlPv(i8* %57) #19
  %58 = load %"class.net::HostResolverManager::DnsTask"*, %"class.net::HostResolverManager::DnsTask"** %51, align 8
  br label %59

59:                                               ; preds = %56, %15
  %60 = phi %"class.net::HostResolverManager::DnsTask"* [ %58, %56 ], [ %55, %15 ]
  call void @_ZN3net19HostResolverManager7DnsTask20StartNextTransactionEv(%"class.net::HostResolverManager::DnsTask"* %60)
  %61 = load %"class.net::HostResolverManager::DnsTask"*, %"class.net::HostResolverManager::DnsTask"** %51, align 8
  %62 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %61, i64 0, i32 9, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %61, i64 0, i32 9, i32 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %63, %65
  br i1 %1, label %67, label %76

67:                                               ; preds = %59
  br i1 %66, label %78, label %68

68:                                               ; preds = %67, %68
  %69 = phi %"class.net::HostResolverManager::DnsTask"* [ %70, %68 ], [ %61, %67 ]
  call void @_ZN3net19HostResolverManager7DnsTask20StartNextTransactionEv(%"class.net::HostResolverManager::DnsTask"* %69)
  %70 = load %"class.net::HostResolverManager::DnsTask"*, %"class.net::HostResolverManager::DnsTask"** %51, align 8
  %71 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %70, i64 0, i32 9, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %70, i64 0, i32 9, i32 0, i32 2
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %72, %74
  br i1 %75, label %78, label %68

76:                                               ; preds = %59
  br i1 %66, label %78, label %77

77:                                               ; preds = %76
  call void @_ZN3net19HostResolverManager3Job8ScheduleEb(%"class.net::HostResolverManager::Job"* %0, i1 zeroext true)
  br label %78

78:                                               ; preds = %68, %67, %76, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job13StartMdnsTaskEv(%"class.net::HostResolverManager::Job"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.std::__1::vector.683", align 8
  %5 = alloca %"class.base::OnceCallback.335", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.base::OnceCallback.335", align 8
  %8 = alloca %"class.base::WeakPtr.542", align 8
  %9 = bitcast %"class.std::__1::vector.683"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #18
  %10 = getelementptr inbounds %"class.std::__1::vector.683", %"class.std::__1::vector.683"* %4, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.683", %"class.std::__1::vector.683"* %4, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.683", %"class.std::__1::vector.683"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #18
  %13 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 5
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = bitcast i32** %11 to i64*
  %17 = bitcast %"class.std::__1::vector.683"* %4 to i64*
  %18 = bitcast i32** %12 to i64*
  %19 = tail call i8* @_Znwm(i64 4) #19
  %20 = bitcast i8* %19 to i32*
  %21 = getelementptr inbounds i8, i8* %19, i64 4
  %22 = ptrtoint i8* %21 to i64
  br i1 %15, label %23, label %38

23:                                               ; preds = %1
  store i32 1, i32* %20, align 4
  %24 = ptrtoint i8* %19 to i64
  store i64 %24, i64* %17, align 8
  store i64 %22, i64* %16, align 8
  store i64 %22, i64* %18, align 8
  %25 = bitcast %"class.std::__1::vector.683"* %4 to i64*
  %26 = tail call i8* @_Znwm(i64 8) #19
  %27 = bitcast i8* %26 to i32*
  %28 = getelementptr inbounds i8, i8* %26, i64 4
  %29 = bitcast i8* %28 to i32*
  store i32 2, i32* %29, align 4
  %30 = insertelement <2 x i8*> undef, i8* %26, i32 0
  %31 = shufflevector <2 x i8*> %30, <2 x i8*> undef, <2 x i32> zeroinitializer
  %32 = getelementptr i8, <2 x i8*> %31, <2 x i64> <i64 8, i64 8>
  %33 = ptrtoint <2 x i8*> %32 to <2 x i64>
  %34 = ptrtoint i8* %26 to i64
  %35 = bitcast i8* %19 to i32*
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %27, align 4
  store i64 %34, i64* %25, align 8
  %37 = bitcast i32** %11 to <2 x i64>*
  store <2 x i64> %33, <2 x i64>* %37, align 8
  tail call void @_ZdlPv(i8* nonnull %19) #19
  br label %40

38:                                               ; preds = %1
  store i32 %14, i32* %20, align 4
  %39 = ptrtoint i8* %19 to i64
  store i64 %39, i64* %17, align 8
  store i64 %22, i64* %16, align 8
  store i64 %22, i64* %18, align 8
  br label %40

40:                                               ; preds = %38, %23
  %41 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 0
  %42 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %41) #18
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #18
  br label %46

46:                                               ; preds = %43, %40
  %47 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %41) #18
  br i1 %47, label %48, label %52

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 1
  %50 = bitcast i64* %49 to %"class.net::HostResolverManager"**
  %51 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %50, align 8
  br label %52

52:                                               ; preds = %46, %48
  %53 = phi %"class.net::HostResolverManager"* [ %51, %48 ], [ null, %46 ]
  %54 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %53, i64 0, i32 4
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.net::MDnsClient"*, %"class.net::MDnsClient"** %55, align 8
  %57 = icmp eq %"class.net::MDnsClient"* %56, null
  br i1 %57, label %58, label %83

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %53, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.net::MDnsSocketFactory"*, %"class.net::MDnsSocketFactory"** %59, align 8
  %61 = icmp eq %"class.net::MDnsSocketFactory"* %60, null
  br i1 %61, label %62, label %71

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %53, i64 0, i32 9
  %64 = call i8* @_Znwm(i64 16) #19
  %65 = bitcast %"class.net::NetLog"** %63 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast i8* %64 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net21MDnsSocketFactoryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds i8, i8* %64, i64 8
  %69 = bitcast i8* %68 to i64*
  store i64 %66, i64* %69, align 8
  %70 = bitcast %"class.net::MDnsSocketFactory"** %59 to i8**
  store i8* %64, i8** %70, align 8
  br label %71

71:                                               ; preds = %62, %58
  %72 = call %"class.net::MDnsClient"* @_ZN3net10MDnsClient13CreateDefaultEv() #18
  %73 = ptrtoint %"class.net::MDnsClient"* %72 to i64
  %74 = load %"class.net::MDnsClient"*, %"class.net::MDnsClient"** %55, align 8
  %75 = bitcast %"class.std::__1::unique_ptr.18"* %54 to i64*
  store i64 %73, i64* %75, align 8
  %76 = icmp eq %"class.net::MDnsClient"* %74, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %71
  %78 = bitcast %"class.net::MDnsClient"* %74 to void (%"class.net::MDnsClient"*)***
  %79 = load void (%"class.net::MDnsClient"*)**, void (%"class.net::MDnsClient"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.net::MDnsClient"*)*, void (%"class.net::MDnsClient"*)** %79, i64 1
  %81 = load void (%"class.net::MDnsClient"*)*, void (%"class.net::MDnsClient"*)** %80, align 8
  call void %81(%"class.net::MDnsClient"* nonnull %74) #18
  %82 = load %"class.net::MDnsClient"*, %"class.net::MDnsClient"** %55, align 8
  br label %83

83:                                               ; preds = %77, %71, %52
  %84 = phi %"class.net::MDnsClient"* [ %56, %52 ], [ %72, %71 ], [ %82, %77 ]
  %85 = bitcast %"class.net::MDnsClient"* %84 to i1 (%"class.net::MDnsClient"*)***
  %86 = load i1 (%"class.net::MDnsClient"*)**, i1 (%"class.net::MDnsClient"*)*** %85, align 8
  %87 = getelementptr inbounds i1 (%"class.net::MDnsClient"*)*, i1 (%"class.net::MDnsClient"*)** %86, i64 6
  %88 = load i1 (%"class.net::MDnsClient"*)*, i1 (%"class.net::MDnsClient"*)** %87, align 8
  %89 = call zeroext i1 %88(%"class.net::MDnsClient"* %84) #18
  br i1 %89, label %100, label %90

90:                                               ; preds = %83
  %91 = load %"class.net::MDnsClient"*, %"class.net::MDnsClient"** %55, align 8
  %92 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %53, i64 0, i32 3, i32 0, i32 0, i32 0
  %93 = load %"class.net::MDnsSocketFactory"*, %"class.net::MDnsSocketFactory"** %92, align 8
  %94 = bitcast %"class.net::MDnsClient"* %91 to i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)***
  %95 = load i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)**, i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)*** %94, align 8
  %96 = getelementptr inbounds i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)*, i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)** %95, i64 4
  %97 = load i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)*, i32 (%"class.net::MDnsClient"*, %"class.net::MDnsSocketFactory"*)** %96, align 8
  %98 = call i32 %97(%"class.net::MDnsClient"* %91, %"class.net::MDnsSocketFactory"* %93) #18
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %90, %83
  %101 = load %"class.net::MDnsClient"*, %"class.net::MDnsClient"** %55, align 8
  br label %102

102:                                              ; preds = %90, %100
  %103 = phi %"class.net::MDnsClient"* [ %101, %100 ], [ null, %90 ]
  %104 = phi i32 [ 0, %100 ], [ %98, %90 ]
  %105 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 3
  %106 = call i8* @_Znwm(i64 80) #19
  %107 = bitcast i8* %106 to %"class.net::HostResolverMdnsTask"*
  call void @_ZN3net20HostResolverMdnsTaskC1EPNS_10MDnsClientERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS3_6vectorINS_12DnsQueryTypeENS7_ISD_EEEE(%"class.net::HostResolverMdnsTask"* nonnull %107, %"class.net::MDnsClient"* %103, %"class.std::__1::basic_string"* dereferenceable(24) %105, %"class.std::__1::vector.683"* nonnull dereferenceable(24) %4) #18
  %108 = ptrtoint i8* %106 to i64
  %109 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 26
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.339", %"class.std::__1::unique_ptr.339"* %109, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.net::HostResolverMdnsTask"*, %"class.net::HostResolverMdnsTask"** %110, align 8
  %112 = bitcast %"class.std::__1::unique_ptr.339"* %109 to i64*
  store i64 %108, i64* %112, align 8
  %113 = icmp eq %"class.net::HostResolverMdnsTask"* %111, null
  br i1 %113, label %116, label %114

114:                                              ; preds = %102
  call void @_ZN3net20HostResolverMdnsTaskD1Ev(%"class.net::HostResolverMdnsTask"* nonnull %111) #18
  %115 = bitcast %"class.net::HostResolverMdnsTask"* %111 to i8*
  call void @_ZdlPv(i8* %115) #19
  br label %116

116:                                              ; preds = %114, %102
  %117 = icmp eq i32 %104, 0
  br i1 %117, label %118, label %129

118:                                              ; preds = %116
  %119 = load %"class.net::HostResolverMdnsTask"*, %"class.net::HostResolverMdnsTask"** %110, align 8
  %120 = ptrtoint %"class.net::HostResolverManager::Job"* %0 to i64
  %121 = call i8* @_Znwm(i64 56) #19, !noalias !115
  %122 = bitcast i8* %121 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %122, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager3JobEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net19HostResolverManager3JobEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !115
  %123 = getelementptr inbounds i8, i8* %121, i64 32
  %124 = bitcast i8* %123 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::HostResolverManager::Job"*)* @_ZN3net19HostResolverManager3Job18OnMdnsTaskCompleteEv to i64), i64 0>, <2 x i64>* %124, align 8, !noalias !115
  %125 = getelementptr inbounds i8, i8* %121, i64 48
  %126 = bitcast i8* %125 to i64*
  store i64 %120, i64* %126, align 8, !noalias !115
  %127 = bitcast %"class.base::OnceCallback.335"* %5 to i8**
  store i8* %121, i8** %127, align 8, !alias.scope !115
  call void @_ZN3net20HostResolverMdnsTask5StartEN4base12OnceCallbackIFvvEEE(%"class.net::HostResolverMdnsTask"* %119, %"class.base::OnceCallback.335"* nonnull %5) #18
  %128 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %128) #18
  br label %156

129:                                              ; preds = %116
  %130 = call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #18
  %131 = bitcast %class.scoped_refptr.81* %130 to %"class.base::TaskRunner"**
  %132 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %131, align 8
  %133 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %133) #18
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 2220) #18
  %134 = bitcast %"class.base::WeakPtr.542"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %134) #18
  %135 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %135) #18, !noalias !120
  %136 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 31, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %136) #18, !noalias !120
  %137 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 31, i32 0, i32 1
  %138 = load i64, i64* %137, align 8, !noalias !120
  %139 = getelementptr inbounds %"class.base::WeakPtr.542", %"class.base::WeakPtr.542"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %139, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %138) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135) #18, !noalias !120
  %140 = call i8* @_Znwm(i64 72) #19, !noalias !123
  %141 = bitcast i8* %140 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %141, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS5_EEiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS4_EEiEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS5_EEiEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE) #18, !noalias !123
  %142 = getelementptr inbounds i8, i8* %140, i64 32
  %143 = bitcast i8* %142 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::HostResolverManager::Job"*, i32)* @_ZN3net19HostResolverManager3Job22OnMdnsImmediateFailureEi to i64), i64 0>, <2 x i64>* %143, align 8, !noalias !123
  %144 = getelementptr inbounds i8, i8* %140, i64 48
  %145 = bitcast i8* %144 to %"class.base::internal::WeakReference"*
  %146 = getelementptr inbounds %"class.base::WeakPtr.542", %"class.base::WeakPtr.542"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %145, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %146) #18, !noalias !123
  %147 = getelementptr inbounds i8, i8* %140, i64 56
  %148 = bitcast i8* %147 to i64*
  %149 = getelementptr inbounds %"class.base::WeakPtr.542", %"class.base::WeakPtr.542"* %8, i64 0, i32 0, i32 1
  %150 = load i64, i64* %149, align 8, !noalias !123
  store i64 %150, i64* %148, align 8, !noalias !123
  %151 = getelementptr inbounds i8, i8* %140, i64 64
  %152 = bitcast i8* %151 to i32*
  store i32 %104, i32* %152, align 4, !noalias !123
  %153 = bitcast %"class.base::OnceCallback.335"* %7 to i8**
  store i8* %140, i8** %153, align 8, !alias.scope !123
  %154 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %132, %"class.base::Location"* nonnull dereferenceable(32) %6, %"class.base::OnceCallback.335"* nonnull %7) #18
  %155 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %155) #18
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %139) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %134) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %133) #18
  br label %156

156:                                              ; preds = %129, %118
  %157 = load i32*, i32** %10, align 8
  %158 = icmp eq i32* %157, null
  br i1 %158, label %163, label %159

159:                                              ; preds = %156
  %160 = ptrtoint i32* %157 to i64
  %161 = bitcast i32** %11 to i64*
  store i64 %160, i64* %161, align 8
  %162 = bitcast i32* %157 to i8*
  call void @_ZdlPv(i8* %162) #19
  br label %163

163:                                              ; preds = %156, %159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job19InsecureCacheLookupEv(%"class.net::HostResolverManager::Job"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.absl::optional.361", align 8
  %4 = alloca %"class.absl::optional.297", align 8
  %5 = alloca %"struct.net::HostCache::Key", align 8
  %6 = getelementptr inbounds %"class.absl::optional.361", %"class.absl::optional.361"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %7) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 208, i1 false)
  %8 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #18
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #18
  br label %13

13:                                               ; preds = %10, %1
  %14 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #18
  br i1 %14, label %15, label %19

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 1
  %17 = bitcast i64* %16 to %"class.net::HostResolverManager"**
  %18 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %17, align 8
  br label %19

19:                                               ; preds = %13, %15
  %20 = phi %"class.net::HostResolverManager"* [ %18, %15 ], [ null, %13 ]
  %21 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 11
  %22 = load %"class.net::HostCache"*, %"class.net::HostCache"** %21, align 8
  %23 = bitcast %"struct.net::HostCache::Key"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %23) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 232, i1 false) #18, !alias.scope !128
  %24 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 3
  %25 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 5
  %26 = load i32, i32* %25, align 8, !noalias !128
  %27 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 6
  %28 = load i32, i32* %27, align 4, !noalias !128
  %29 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 7
  %30 = load i32, i32* %29, align 8, !noalias !128
  %31 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 4
  call void @_ZN3net9HostCache3KeyC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_12DnsQueryTypeEiNS_18HostResolverSourceERKNS_19NetworkIsolationKeyE(%"struct.net::HostCache::Key"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %24, i32 %26, i32 %28, i32 %30, %"class.net::NetworkIsolationKey"* dereferenceable(184) %31) #18
  %32 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %5, i64 0, i32 6
  store i8 0, i8* %32, align 8, !alias.scope !128
  %33 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 8
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 23
  call void @_ZN3net19HostResolverManager19MaybeServeFromCacheEPNS_9HostCacheERKNS1_3KeyENS_12HostResolver21ResolveHostParameters10CacheUsageEbRKNS_16NetLogWithSourceEPN4absl8optionalINS1_14EntryStalenessEEE(%"class.absl::optional.297"* nonnull sret %4, %"class.net::HostResolverManager"* %20, %"class.net::HostCache"* %22, %"struct.net::HostCache::Key"* nonnull dereferenceable(232) %5, i32 %34, i1 zeroext false, %"class.net::NetLogWithSource"* dereferenceable(24) %35, %"class.absl::optional.361"* nonnull %3)
  %36 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %5, i64 0, i32 5
  call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %36) #18
  %37 = bitcast %"struct.net::HostCache::Key"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %19
  %42 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #19
  br label %44

44:                                               ; preds = %19, %41
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %23) #18
  %45 = load i8, i8* %7, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %81, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %49 = load i8, i8* %6, align 8
  %50 = getelementptr inbounds %"class.absl::optional.361", %"class.absl::optional.361"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = bitcast i64* %50 to <2 x i64>*
  %52 = load <2 x i64>, <2 x i64>* %51, align 8
  %53 = icmp eq i8 %49, 0
  br i1 %53, label %80, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 27, i32 0, i32 0, i32 1
  %56 = bitcast %"class.base::internal::LinkNodeBase"** %55 to %"class.base::LinkNode.229"**
  %57 = load %"class.base::LinkNode.229"*, %"class.base::LinkNode.229"** %56, align 8
  %58 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 27, i32 0
  %59 = icmp eq %"class.base::LinkNode.229"* %57, %58
  br i1 %59, label %80, label %60

60:                                               ; preds = %54, %75
  %61 = phi %"class.base::LinkNode.229"* [ %78, %75 ], [ %57, %54 ]
  %62 = getelementptr inbounds %"class.base::LinkNode.229", %"class.base::LinkNode.229"* %61, i64 16
  %63 = bitcast %"class.base::LinkNode.229"* %62 to %"struct.net::HostResolver::ResolveHostParameters"*
  %64 = getelementptr inbounds %"struct.net::HostResolver::ResolveHostParameters", %"struct.net::HostResolver::ResolveHostParameters"* %63, i64 0, i32 6
  %65 = load i8, i8* %64, align 2, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %75

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.base::LinkNode.229", %"class.base::LinkNode.229"* %61, i64 34, i32 0, i32 1
  %69 = bitcast %"class.base::internal::LinkNodeBase"** %68 to i8*
  %70 = load i8, i8* %69, align 8, !range !2
  %71 = icmp eq i8 %70, 0
  %72 = getelementptr inbounds %"class.base::LinkNode.229", %"class.base::LinkNode.229"* %61, i64 35
  %73 = bitcast %"class.base::LinkNode.229"* %72 to <2 x i64>*
  store <2 x i64> %52, <2 x i64>* %73, align 8
  br i1 %71, label %74, label %75

74:                                               ; preds = %67
  store i8 1, i8* %69, align 8
  br label %75

75:                                               ; preds = %74, %67, %60
  %76 = getelementptr inbounds %"class.base::LinkNode.229", %"class.base::LinkNode.229"* %61, i64 0, i32 0, i32 1
  %77 = bitcast %"class.base::internal::LinkNodeBase"** %76 to %"class.base::LinkNode.229"**
  %78 = load %"class.base::LinkNode.229"*, %"class.base::LinkNode.229"** %77, align 8
  %79 = icmp eq %"class.base::LinkNode.229"* %78, %58
  br i1 %79, label %80, label %60

80:                                               ; preds = %75, %47, %54
  call void @_ZN3net19HostResolverManager3Job16CompleteRequestsERKNS_9HostCache5EntryEN4base9TimeDeltaEbb(%"class.net::HostResolverManager::Job"* %0, %"class.net::HostCache::Entry"* dereferenceable(200) %48, i64 0, i1 zeroext false, i1 zeroext false) #18
  br label %82

81:                                               ; preds = %44
  call void @_ZN3net19HostResolverManager3Job11RunNextTaskEv(%"class.net::HostResolverManager::Job"* %0)
  br label %82

82:                                               ; preds = %81, %80
  %83 = load i8, i8* %7, align 8, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.absl::optional.297", %"class.absl::optional.297"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* %86) #18
  store i8 0, i8* %7, align 8
  br label %87

87:                                               ; preds = %82, %85
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job11KillDnsTaskEv(%"class.net::HostResolverManager::Job"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", align 8
  %3 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %4 = load %"class.net::HostResolverManager::DnsTask"*, %"class.net::HostResolverManager::DnsTask"** %3, align 8
  %5 = icmp eq %"class.net::HostResolverManager::DnsTask"* %4, null
  br i1 %5, label %41, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 19
  %8 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %7, align 8
  %9 = icmp eq %"class.net::PrioritizedDispatcher"* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store %"class.net::HostResolverManager::DnsTask"* null, %"class.net::HostResolverManager::DnsTask"** %3, align 8
  br label %38

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 0
  %13 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 18
  %14 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28
  %15 = bitcast %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %2 to i8*
  %16 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %2, i64 0, i32 2
  %17 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %14, i64 0, i32 0
  %18 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 1
  %19 = bitcast %"class.std::__1::__list_iterator"* %18 to i64*
  %20 = ptrtoint %"class.std::__1::list"* %16 to i64
  br label %21

21:                                               ; preds = %30, %11
  %22 = load i32, i32* %13, align 4
  %23 = icmp sgt i32 %22, 1
  %24 = load i32, i32* %12, align 8
  %25 = icmp eq i32 %24, -1
  br i1 %23, label %27, label %26

26:                                               ; preds = %21
  br i1 %25, label %35, label %28

27:                                               ; preds = %21
  br i1 %25, label %31, label %28

28:                                               ; preds = %26, %27
  %29 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %7, align 8
  call void @_ZN3net21PrioritizedDispatcher6CancelERKNS_13PriorityQueueIPNS0_3JobEE7PointerE(%"class.net::PrioritizedDispatcher"* %29, %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* dereferenceable(40) %14) #18
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #18
  store i32 -1, i32* %17, align 8
  store i64 %20, i64* %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #18
  br label %30

30:                                               ; preds = %28, %31
  br label %21

31:                                               ; preds = %27
  %32 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %7, align 8
  call void @_ZN3net21PrioritizedDispatcher13OnJobFinishedEv(%"class.net::PrioritizedDispatcher"* %32) #18
  %33 = load i32, i32* %13, align 4
  %34 = add nsw i32 %33, -1
  store i32 %34, i32* %13, align 4
  br label %30

35:                                               ; preds = %26
  %36 = load %"class.net::HostResolverManager::DnsTask"*, %"class.net::HostResolverManager::DnsTask"** %3, align 8
  store %"class.net::HostResolverManager::DnsTask"* null, %"class.net::HostResolverManager::DnsTask"** %3, align 8
  %37 = icmp eq %"class.net::HostResolverManager::DnsTask"* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %10, %35
  %39 = phi %"class.net::HostResolverManager::DnsTask"* [ %4, %10 ], [ %36, %35 ]
  call void @_ZN3net19HostResolverManager7DnsTaskD2Ev(%"class.net::HostResolverManager::DnsTask"* nonnull %39) #18
  %40 = bitcast %"class.net::HostResolverManager::DnsTask"* %39 to i8*
  call void @_ZdlPv(i8* %40) #19
  br label %41

41:                                               ; preds = %1, %38, %35
  ret void
}

declare void @_ZN3net21PrioritizedDispatcher13OnJobFinishedEv(%"class.net::PrioritizedDispatcher"*) local_unnamed_addr #1

declare void @_ZN3net21PrioritizedDispatcher6CancelERKNS_13PriorityQueueIPNS0_3JobEE7PointerE(%"class.net::PrioritizedDispatcher"*, %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* dereferenceable(40)) local_unnamed_addr #1

declare void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job19RecordJobHistogramsEi(%"class.net::HostResolverManager::Job"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 -6148914691236517206, i64* %7, align 8
  %8 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 21
  %9 = load %"class.base::TickClock"*, %"class.base::TickClock"** %8, align 8
  %10 = bitcast %"class.base::TickClock"* %9 to i64 (%"class.base::TickClock"*)***
  %11 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %11, i64 2
  %13 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %12, align 8
  %14 = tail call i64 %13(%"class.base::TickClock"* %9) #18
  %15 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 22, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = sub nsw i64 %14, %16
  store i64 %17, i64* %7, align 8
  %18 = icmp eq i32 %1, 0
  %19 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 17
  %20 = load i8, i8* %19, align 8, !range !2
  br i1 %18, label %21, label %32

21:                                               ; preds = %2
  %22 = icmp eq i8 %20, 0
  br i1 %22, label %46, label %23

23:                                               ; preds = %21
  %24 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager3Job19RecordJobHistogramsEiE24atomic_histogram_pointer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %25 = inttoptr i64 %24 to %"class.base::HistogramBase"*
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0), i64 1000, i64 3600000000, i32 100, i32 1) #18
  %29 = ptrtoint %"class.base::HistogramBase"* %28 to i64
  store atomic i64 %29, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager3Job19RecordJobHistogramsEiE24atomic_histogram_pointer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 8
  br label %30

30:                                               ; preds = %23, %27
  %31 = phi %"class.base::HistogramBase"* [ %25, %23 ], [ %28, %27 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %31, %"class.base::TimeDelta"* nonnull dereferenceable(8) %3) #18
  br label %46

32:                                               ; preds = %2
  %33 = icmp ne i8 %20, 0
  switch i32 %1, label %36 [
    i32 -21, label %34
    i32 -119, label %34
  ]

34:                                               ; preds = %32, %32
  %35 = select i1 %33, i32 4, i32 5
  br label %46

36:                                               ; preds = %32
  br i1 %33, label %37, label %46

37:                                               ; preds = %36
  %38 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager3Job19RecordJobHistogramsEiE24atomic_histogram_pointer_0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %39 = inttoptr i64 %38 to %"class.base::HistogramBase"*
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %37
  %42 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i64 1000, i64 3600000000, i32 100, i32 1) #18
  %43 = ptrtoint %"class.base::HistogramBase"* %42 to i64
  store atomic i64 %43, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager3Job19RecordJobHistogramsEiE24atomic_histogram_pointer_0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 8
  br label %44

44:                                               ; preds = %37, %41
  %45 = phi %"class.base::HistogramBase"* [ %39, %37 ], [ %42, %41 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %45, %"class.base::TimeDelta"* nonnull dereferenceable(8) %3) #18
  br label %46

46:                                               ; preds = %36, %21, %34, %44, %30
  %47 = phi i32 [ 0, %30 ], [ %35, %34 ], [ 1, %44 ], [ 2, %21 ], [ 3, %36 ]
  %48 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager3Job19RecordJobHistogramsEiE24atomic_histogram_pointer_1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %49 = inttoptr i64 %48 to %"class.base::HistogramBase"*
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i64 0, i64 0), i32 1, i32 6, i32 7, i32 1) #18
  %53 = ptrtoint %"class.base::HistogramBase"* %52 to i64
  store atomic i64 %53, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager3Job19RecordJobHistogramsEiE24atomic_histogram_pointer_1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 8
  br label %54

54:                                               ; preds = %46, %51
  %55 = phi %"class.base::HistogramBase"* [ %49, %46 ], [ %52, %51 ]
  %56 = bitcast %"class.base::HistogramBase"* %55 to void (%"class.base::HistogramBase"*, i32)***
  %57 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %57, i64 6
  %59 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %58, align 8
  call void %59(%"class.base::HistogramBase"* %55, i32 %47) #18
  %60 = icmp eq i32 %47, 1
  br i1 %60, label %66, label %61

61:                                               ; preds = %54
  %62 = load i64, i64* %15, align 8
  %63 = icmp ne i64 %62, 0
  %64 = icmp eq i32 %47, 4
  %65 = and i1 %64, %63
  br i1 %65, label %66, label %73

66:                                               ; preds = %54, %61
  %67 = load i64, i64* %7, align 8
  %68 = icmp slt i64 %67, 10000
  %69 = icmp slt i32 %1, 0
  %70 = sub nsw i32 0, %1
  %71 = select i1 %69, i32 %70, i32 %1
  %72 = select i1 %68, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.22, i64 0, i64 0)
  call void @_ZN4base18UmaHistogramSparseEPKci(i8* %72, i32 %71) #18
  br label %73

73:                                               ; preds = %66, %61
  %74 = load i8, i8* %19, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %102, label %76

76:                                               ; preds = %73
  %77 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #18
  %78 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #18
  %79 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 9
  %80 = load i32, i32* %79, align 8
  call void @_ZN3net21SecureDnsModeToStringENS_13SecureDnsModeE(%"class.std::__1::basic_string"* nonnull sret %5, i32 %80) #18
  %81 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = select i1 %84, i8* %86, i8* %78
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.23, i64 0, i64 0), i8* %87) #18
  %88 = load i64, i64* %7, align 8
  call void @_ZN4base23UmaHistogramMediumTimesERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_9TimeDeltaE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i64 %88) #18
  %89 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %76
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #19
  br label %96

96:                                               ; preds = %76, %93
  %97 = load i8, i8* %82, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %96
  %100 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %100) #19
  br label %101

101:                                              ; preds = %96, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #18
  br label %102

102:                                              ; preds = %73, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  ret void
}

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager8ProcTaskD2Ev(%"class.net::HostResolverManager::ProcTask"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %2, align 8
  %4 = icmp eq %"class.base::internal::BindStateBase"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 8
  tail call void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %6, i32 16) #18
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 10, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %8) #18
  %9 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 8
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %9) #18
  %10 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 6, i32 0
  %11 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %10, align 8
  %12 = icmp eq %"class.base::TaskRunner"* %11, null
  br i1 %12, label %21, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.base::TaskRunner", %"class.base::TaskRunner"* %11, i64 0, i32 1
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw sub i32* %15, i32 1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %14, i64 -2
  %20 = bitcast %"class.base::RefCountedThreadSafe"* %19 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %20) #18
  br label %21

21:                                               ; preds = %7, %13, %18
  %22 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 5, i32 0
  %23 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %22, align 8
  %24 = icmp eq %"class.base::SingleThreadTaskRunner"* %23, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %23, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 -2
  %32 = bitcast %"class.base::RefCountedThreadSafe"* %31 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %32) #18
  br label %33

33:                                               ; preds = %21, %25, %30
  %34 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %34) #18
  %35 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 3
  tail call void @_ZN3net14ProcTaskParamsD1Ev(%"struct.net::ProcTaskParams"* %35) #18
  %36 = bitcast %"class.net::HostResolverManager::ProcTask"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  tail call void @_ZdlPv(i8* %42) #19
  br label %43

43:                                               ; preds = %33, %40
  ret void
}

declare void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager7DnsTaskD2Ev(%"class.net::HostResolverManager::DnsTask"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 18
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %2) #18
  %3 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net15HttpssvcMetricsD1Ev(%"class.net::HttpssvcMetrics"* %7) #18
  store i8 0, i8* %3, align 8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 16
  tail call void @_ZN3net29HttpssvcExperimentDomainCacheD1Ev(%"class.net::HttpssvcExperimentDomainCache"* %9) #18
  %10 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* %14) #18
  store i8 0, i8* %10, align 8
  br label %15

15:                                               ; preds = %8, %13
  %16 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 10
  %17 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %17, align 8
  %19 = icmp eq %"class.std::__1::unique_ptr.286"* %18, null
  br i1 %19, label %43, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.std::__1::unique_ptr.286"* %18 to i8*
  %22 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %23 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %22, align 8
  %24 = icmp eq %"class.std::__1::unique_ptr.286"* %23, %18
  br i1 %24, label %41, label %25

25:                                               ; preds = %20, %36
  %26 = phi %"class.std::__1::unique_ptr.286"* [ %27, %36 ], [ %23, %20 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %26, i64 -1
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.net::DnsTransaction"*, %"class.net::DnsTransaction"** %28, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %28, align 8
  %30 = icmp eq %"class.net::DnsTransaction"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.net::DnsTransaction"* %29 to void (%"class.net::DnsTransaction"*)***
  %33 = load void (%"class.net::DnsTransaction"*)**, void (%"class.net::DnsTransaction"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %33, i64 1
  %35 = load void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %34, align 8
  tail call void %35(%"class.net::DnsTransaction"* nonnull %29) #18
  br label %36

36:                                               ; preds = %31, %25
  %37 = icmp eq %"class.std::__1::unique_ptr.286"* %27, %18
  br i1 %37, label %38, label %25

38:                                               ; preds = %36
  %39 = bitcast %"class.base::internal::flat_tree"* %16 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %38, %20
  %42 = phi i8* [ %40, %38 ], [ %21, %20 ]
  store %"class.std::__1::unique_ptr.286"* %18, %"class.std::__1::unique_ptr.286"** %22, align 8
  tail call void @_ZdlPv(i8* %42) #19
  br label %43

43:                                               ; preds = %15, %41
  %44 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base14circular_dequeIN3net12DnsQueryTypeEED2Ev(%"class.base::circular_deque"* %44) #18
  %45 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 8
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %45) #18
  %46 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 2
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  tail call void @_ZdlPv(i8* %53) #19
  br label %54

54:                                               ; preds = %43, %51
  %55 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"* %55) #18
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net29HttpssvcExperimentDomainCacheD1Ev(%"class.net::HttpssvcExperimentDomainCache"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net15HttpssvcMetricsD1Ev(%"class.net::HttpssvcMetrics"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3net12DnsQueryTypeEED2Ev(%"class.base::circular_deque"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %3
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = icmp ugt i64 %5, %3
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %3) #18
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %13) #18
  %15 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 0) #18
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %5) #18
  br label %18

18:                                               ; preds = %16, %1
  %19 = bitcast %"class.base::circular_deque"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 %1
  ret i32* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net20HostResolverMdnsTaskD1Ev(%"class.net::HostResolverMdnsTask"*) unnamed_addr #3

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN4base18UmaHistogramSparseEPKci(i8*, i32) local_unnamed_addr #1

declare void @_ZN4base23UmaHistogramMediumTimesERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_9TimeDeltaE(%"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #1

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #1

declare void @_ZN3net21SecureDnsModeToStringENS_13SecureDnsModeE(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager11RequestImpl16LogFinishRequestEib(%"class.net::HostResolverManager::RequestImpl"*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.url::Component", align 4
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 2
  tail call void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %6, i32 3, i32 %1) #18
  %7 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 3, i32 0
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"struct.url::Component"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #18
  %16 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  br label %22

18:                                               ; preds = %3
  %19 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %20 = bitcast %"struct.url::Component"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  %21 = zext i8 %10 to i64
  br label %22

22:                                               ; preds = %12, %18
  %23 = phi i8* [ %15, %12 ], [ %20, %18 ]
  %24 = phi i8* [ %14, %12 ], [ %19, %18 ]
  %25 = phi i64 [ %17, %12 ], [ %21, %18 ]
  %26 = trunc i64 %25 to i32
  %27 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 0
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 1
  store i32 %26, i32* %28, align 4
  %29 = call i32 @_ZN3url19CheckHostnameSafetyEPKcRKNS_9ComponentE(i8* %24, %"struct.url::Component"* nonnull dereferenceable(8) %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #18
  %30 = icmp eq i32 %1, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %22
  %32 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager11RequestImpl16LogFinishRequestEibE24atomic_histogram_pointer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %33 = inttoptr i64 %32 to %"class.base::HistogramBase"*
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %31
  %36 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.24, i64 0, i64 0), i32 1, i32 3, i32 4, i32 1) #18
  %37 = ptrtoint %"class.base::HistogramBase"* %36 to i64
  store atomic i64 %37, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager11RequestImpl16LogFinishRequestEibE24atomic_histogram_pointer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 8
  br label %38

38:                                               ; preds = %31, %35
  %39 = phi %"class.base::HistogramBase"* [ %33, %31 ], [ %36, %35 ]
  %40 = bitcast %"class.base::HistogramBase"* %39 to void (%"class.base::HistogramBase"*, i32)***
  %41 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %41, i64 6
  %43 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %42, align 8
  call void %43(%"class.base::HistogramBase"* %39, i32 %29) #18
  br label %57

44:                                               ; preds = %22
  %45 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager11RequestImpl16LogFinishRequestEibE24atomic_histogram_pointer_0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %46 = inttoptr i64 %45 to %"class.base::HistogramBase"*
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %44
  %49 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.25, i64 0, i64 0), i32 1, i32 3, i32 4, i32 1) #18
  %50 = ptrtoint %"class.base::HistogramBase"* %49 to i64
  store atomic i64 %50, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager11RequestImpl16LogFinishRequestEibE24atomic_histogram_pointer_0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 8
  br label %51

51:                                               ; preds = %44, %48
  %52 = phi %"class.base::HistogramBase"* [ %46, %44 ], [ %49, %48 ]
  %53 = bitcast %"class.base::HistogramBase"* %52 to void (%"class.base::HistogramBase"*, i32)***
  %54 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %54, i64 6
  %56 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %55, align 8
  call void %56(%"class.base::HistogramBase"* %52, i32 %29) #18
  br label %57

57:                                               ; preds = %51, %38
  %58 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 5, i32 6
  %59 = load i8, i8* %58, align 2, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %92

61:                                               ; preds = %57
  %62 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #18
  %63 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 -6148914691236517206, i64* %63, align 8
  %64 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 19
  %65 = load %"class.base::TickClock"*, %"class.base::TickClock"** %64, align 8
  %66 = bitcast %"class.base::TickClock"* %65 to i64 (%"class.base::TickClock"*)***
  %67 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %66, align 8
  %68 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %67, i64 2
  %69 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %68, align 8
  %70 = call i64 %69(%"class.base::TickClock"* %65) #18
  %71 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 20, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = sub nsw i64 %70, %72
  store i64 %73, i64* %63, align 8
  %74 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager11RequestImpl16LogFinishRequestEibE24atomic_histogram_pointer_1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %75 = inttoptr i64 %74 to %"class.base::HistogramBase"*
  %76 = icmp eq i64 %74, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %61
  %78 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.26, i64 0, i64 0), i64 10000, i64 180000000, i32 50, i32 1) #18
  %79 = ptrtoint %"class.base::HistogramBase"* %78 to i64
  store atomic i64 %79, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager11RequestImpl16LogFinishRequestEibE24atomic_histogram_pointer_1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 8
  br label %80

80:                                               ; preds = %61, %77
  %81 = phi %"class.base::HistogramBase"* [ %75, %61 ], [ %78, %77 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %81, %"class.base::TimeDelta"* nonnull dereferenceable(8) %5) #18
  br i1 %2, label %82, label %91

82:                                               ; preds = %80
  %83 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager11RequestImpl16LogFinishRequestEibE24atomic_histogram_pointer_2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %84 = inttoptr i64 %83 to %"class.base::HistogramBase"*
  %85 = icmp eq i64 %83, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %82
  %87 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i64 0, i64 0), i64 10000, i64 180000000, i32 50, i32 1) #18
  %88 = ptrtoint %"class.base::HistogramBase"* %87 to i64
  store atomic i64 %88, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager11RequestImpl16LogFinishRequestEibE24atomic_histogram_pointer_2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 8
  br label %89

89:                                               ; preds = %82, %86
  %90 = phi %"class.base::HistogramBase"* [ %84, %82 ], [ %87, %86 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %90, %"class.base::TimeDelta"* nonnull dereferenceable(8) %5) #18
  br label %91

91:                                               ; preds = %89, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #18
  br label %92

92:                                               ; preds = %57, %91
  ret void
}

declare i32 @_ZN3url19CheckHostnameSafetyEPKcRKNS_9ComponentE(i8*, %"struct.url::Component"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN3net21PrioritizedDispatcher3AddEPNS0_3JobEj(%"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* sret, %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher::Job"*, i32) local_unnamed_addr #1

declare void @_ZN3net21PrioritizedDispatcher9AddAtHeadEPNS0_3JobEj(%"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* sret, %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher::Job"*, i32) local_unnamed_addr #1

declare dereferenceable(8) %class.scoped_refptr.81* @_ZN4base25SequencedTaskRunnerHandle3GetEv() local_unnamed_addr #1

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.335"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS5_EENS3_5ErrorEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i32*
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #18
  br i1 %8, label %9, label %45

9:                                                ; preds = %1
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.net::HostResolverManager::Job"**
  %12 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %11, align 8
  %13 = icmp eq %"class.net::HostResolverManager::Job"* %12, null
  br i1 %13, label %45, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #18
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #18
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #18
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.net::HostResolverManager::Job"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.net::HostResolverManager::Job"*, i32)**
  %39 = load void (%"class.net::HostResolverManager::Job"*, i32)*, void (%"class.net::HostResolverManager::Job"*, i32)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.net::HostResolverManager::Job"*, i32)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.net::HostResolverManager::Job"*, i32)* [ %39, %33 ], [ %41, %40 ]
  %44 = load i32, i32* %6, align 4
  call void %43(%"class.net::HostResolverManager::Job"* %30, i32 %44) #18
  br label %45

45:                                               ; preds = %1, %9, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS4_EENS2_5ErrorEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #18
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #19
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS5_EENS3_5ErrorEEEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::HostResolverManager::Job"**
  %9 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %8, align 8
  %10 = icmp ne %"class.net::HostResolverManager::Job"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #18
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job18OnProcTaskCompleteEN4base9TimeTicksEiRKNS_11AddressListE(%"class.net::HostResolverManager::Job"*, i64, i32, %"class.net::AddressList"* dereferenceable(48)) #0 comdat align 2 {
  %5 = alloca %"class.net::AddressList", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.net::HostCache::Entry", align 8
  %8 = alloca %"class.net::AddressList", align 8
  %9 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 20
  %10 = load i32, i32* %9, align 8
  %11 = icmp ne i32 %10, 0
  %12 = icmp eq i32 %2, 0
  %13 = and i1 %12, %11
  br i1 %13, label %14, label %48

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %15) #18
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #18
  br label %20

20:                                               ; preds = %17, %14
  %21 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %15) #18
  br i1 %21, label %22, label %26

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 1
  %24 = bitcast i64* %23 to %"class.net::HostResolverManager"**
  %25 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %24, align 8
  br label %26

26:                                               ; preds = %20, %22
  %27 = phi %"class.net::HostResolverManager"* [ %25, %22 ], [ null, %20 ]
  %28 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %27, i64 0, i32 10, i32 0, i32 0, i32 0
  %29 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %28, align 8
  %30 = bitcast %"class.net::DnsClient"* %29 to i1 (%"class.net::DnsClient"*)***
  %31 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %31, i64 7
  %33 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %32, align 8
  %34 = call zeroext i1 %33(%"class.net::DnsClient"* %29) #18
  br i1 %34, label %48, label %35

35:                                               ; preds = %26
  %36 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %28, align 8
  %37 = bitcast %"class.net::DnsClient"* %36 to void (%"class.net::DnsClient"*)***
  %38 = load void (%"class.net::DnsClient"*)**, void (%"class.net::DnsClient"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.net::DnsClient"*)*, void (%"class.net::DnsClient"*)** %38, i64 16
  %40 = load void (%"class.net::DnsClient"*)*, void (%"class.net::DnsClient"*)** %39, align 8
  call void %40(%"class.net::DnsClient"* %36) #18
  %41 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %28, align 8
  %42 = bitcast %"class.net::DnsClient"* %41 to i1 (%"class.net::DnsClient"*)***
  %43 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %42, align 8
  %44 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %43, i64 7
  %45 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %44, align 8
  %46 = call zeroext i1 %45(%"class.net::DnsClient"* %41) #18
  br i1 %46, label %47, label %48

47:                                               ; preds = %35
  call void @_ZN3net19HostResolverManager21AbortInsecureDnsTasksEib(%"class.net::HostResolverManager"* %27, i32 -2, i1 zeroext true) #18
  br label %48

48:                                               ; preds = %47, %35, %26, %4
  %49 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %3, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %49, align 8
  %51 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %3, i64 0, i32 0, i32 0, i32 1
  %52 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %51, align 8
  %53 = icmp eq %"class.net::IPEndPoint"* %50, %52
  br i1 %53, label %81, label %54

54:                                               ; preds = %48, %78
  %55 = phi %"class.net::IPEndPoint"* [ %79, %78 ], [ %50, %48 ]
  %56 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %55, i64 0, i32 0
  %57 = call zeroext i1 @_ZNK3net9IPAddress6IsIPv4Ev(%"class.net::IPAddress"* %56) #18
  br i1 %57, label %58, label %78

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %55, i64 0, i32 0, i32 0, i32 1
  %60 = load i8, i8* %59, align 1
  %61 = icmp ult i8 %60, 4
  br i1 %61, label %78, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, 127
  br i1 %65, label %66, label %78

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %78

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %72, 53
  br i1 %73, label %74, label %78

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, 53
  br i1 %77, label %85, label %78

78:                                               ; preds = %74, %70, %66, %62, %58, %54
  %79 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %55, i64 1
  %80 = icmp eq %"class.net::IPEndPoint"* %79, %52
  br i1 %80, label %81, label %54

81:                                               ; preds = %78, %48
  br i1 %12, label %82, label %85

82:                                               ; preds = %81
  %83 = bitcast %"class.net::HostCache::Entry"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %83) #18
  %84 = bitcast %"class.net::AddressList"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %84) #18
  call void @_ZN3net11AddressList12CopyWithPortERKS0_t(%"class.net::AddressList"* nonnull sret %8, %"class.net::AddressList"* dereferenceable(48) %3, i16 zeroext 0) #18
  br label %89

85:                                               ; preds = %74, %81
  %86 = phi i32 [ %2, %81 ], [ -166, %74 ]
  %87 = bitcast %"class.net::HostCache::Entry"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %87) #18
  %88 = bitcast %"class.net::AddressList"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %88) #18
  call void @_ZN3net11AddressListC1Ev(%"class.net::AddressList"* nonnull %8) #18
  br label %89

89:                                               ; preds = %85, %82
  %90 = phi i8* [ %88, %85 ], [ %84, %82 ]
  %91 = phi i8* [ %87, %85 ], [ %83, %82 ]
  %92 = phi i64 [ 0, %85 ], [ 60000000, %82 ]
  %93 = phi i32 [ %86, %85 ], [ 0, %82 ]
  %94 = bitcast %"class.net::AddressList"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %94) #18
  %95 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %7, i64 0, i32 0
  store i32 %93, i32* %95, align 8
  %96 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %96, align 8
  %97 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %98 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %7, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %99 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %7, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %7, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %101 = bitcast %union.anon.237* %97 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 49, i1 false) #18
  %102 = bitcast %union.anon.105* %98 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 25, i1 false) #18
  %103 = bitcast %union.anon.242* %99 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 25, i1 false) #18
  %104 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %7, i64 0, i32 9, i32 0
  %105 = bitcast %union.anon.254* %100 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 29, i1 false)
  %106 = bitcast i64* %104 to <2 x i64>*
  store <2 x i64> <i64 -1000000, i64 0>, <2 x i64>* %106, align 8
  %107 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %7, i64 0, i32 11
  store i32 -1, i32* %107, align 8
  %108 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %7, i64 0, i32 12, i32 0
  store i32 0, i32* %108, align 4
  %109 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %7, i64 0, i32 13, i32 0
  store i32 0, i32* %109, align 8
  call void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"* nonnull %5, %"class.net::AddressList"* nonnull dereferenceable(48) %8) #18
  %110 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"* %110, %"class.net::AddressList"* nonnull dereferenceable(48) %5) #18
  store i8 1, i8* %96, align 8
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %94) #18
  call void @_ZN3net19HostResolverManager3Job16CompleteRequestsERKNS_9HostCache5EntryEN4base9TimeDeltaEbb(%"class.net::HostResolverManager::Job"* %0, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %7, i64 %92, i1 zeroext true, i1 zeroext false)
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %7) #18
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %90) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %91) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager8ProcTaskC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13AddressFamilyEiRKNS_14ProcTaskParamsEN4base12OnceCallbackIFviRKNS_11AddressListEEEE13scoped_refptrINSD_10TaskRunnerEERKNS_16NetLogWithSourceEPKNSD_9TickClockE(%"class.net::HostResolverManager::ProcTask"*, %"class.std::__1::basic_string"*, i32, i32, %"struct.net::ProcTaskParams"* dereferenceable(32), %"class.base::OnceCallback"*, i64, %"class.net::NetLogWithSource"* dereferenceable(24), %"class.base::TickClock"*) unnamed_addr #0 comdat align 2 {
  %10 = bitcast %"class.net::HostResolverManager::ProcTask"* %0 to i8*
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #18
  %12 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 1
  store i32 %2, i32* %12, align 8
  %13 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 2
  store i32 %3, i32* %13, align 4
  %14 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 3
  tail call void @_ZN3net14ProcTaskParamsC1ERKS0_(%"struct.net::ProcTaskParams"* %14, %"struct.net::ProcTaskParams"* dereferenceable(32) %4) #18
  %15 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.base::OnceCallback"* %15 to i64*
  store i64 %18, i64* %19, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %20 = tail call dereferenceable(8) %class.scoped_refptr.276* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #18
  %21 = getelementptr inbounds %class.scoped_refptr.276, %class.scoped_refptr.276* %20, i64 0, i32 0
  %22 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %21, align 8
  %23 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 5, i32 0
  store %"class.base::SingleThreadTaskRunner"* %22, %"class.base::SingleThreadTaskRunner"** %23, align 8
  %24 = icmp eq %"class.base::SingleThreadTaskRunner"* %22, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %9
  %26 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  br label %28

28:                                               ; preds = %9, %25
  %29 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 6
  %30 = bitcast %class.scoped_refptr.83* %29 to i64*
  store i64 %6, i64* %30, align 8
  %31 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 7
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 8
  %33 = bitcast %"class.net::NetLogWithSource"* %32 to i8*
  %34 = bitcast %"class.net::NetLogWithSource"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false)
  %35 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 9
  store %"class.base::TickClock"* %8, %"class.base::TickClock"** %35, align 8
  %36 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 10, i32 0
  %37 = ptrtoint %"class.net::HostResolverManager::ProcTask"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %36, i64 %37) #18
  %38 = getelementptr inbounds %"struct.net::ProcTaskParams", %"struct.net::ProcTaskParams"* %14, i64 0, i32 0, i32 0
  %39 = load %"class.net::HostResolverProc"*, %"class.net::HostResolverProc"** %38, align 8
  %40 = icmp eq %"class.net::HostResolverProc"* %39, null
  br i1 %40, label %41, label %90

41:                                               ; preds = %28
  %42 = tail call %"class.net::HostResolverProc"* @_ZN3net16HostResolverProc10GetDefaultEv() #18
  %43 = icmp eq %"class.net::HostResolverProc"* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.net::HostResolverProc", %"class.net::HostResolverProc"* %42, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 1 monotonic
  br label %47

47:                                               ; preds = %44, %41
  %48 = ptrtoint %"class.net::HostResolverProc"* %42 to i64
  %49 = bitcast %"struct.net::ProcTaskParams"* %14 to i64*
  %50 = load %"class.net::HostResolverProc"*, %"class.net::HostResolverProc"** %38, align 8
  store i64 %48, i64* %49, align 8
  %51 = icmp eq %"class.net::HostResolverProc"* %50, null
  br i1 %51, label %66, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.net::HostResolverProc", %"class.net::HostResolverProc"* %50, i64 0, i32 1
  %54 = getelementptr inbounds %"class.base::RefCountedThreadSafe.99", %"class.base::RefCountedThreadSafe.99"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw sub i32* %54, i32 1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %64

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.base::RefCountedThreadSafe.99", %"class.base::RefCountedThreadSafe.99"* %53, i64 -2
  %59 = bitcast %"class.base::RefCountedThreadSafe.99"* %58 to %"class.net::HostResolverProc"*
  %60 = bitcast %"class.base::RefCountedThreadSafe.99"* %58 to void (%"class.net::HostResolverProc"*)***
  %61 = load void (%"class.net::HostResolverProc"*)**, void (%"class.net::HostResolverProc"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.net::HostResolverProc"*)*, void (%"class.net::HostResolverProc"*)** %61, i64 2
  %63 = load void (%"class.net::HostResolverProc"*)*, void (%"class.net::HostResolverProc"*)** %62, align 8
  tail call void %63(%"class.net::HostResolverProc"* nonnull %59) #18
  br label %64

64:                                               ; preds = %52, %57
  %65 = load %"class.net::HostResolverProc"*, %"class.net::HostResolverProc"** %38, align 8
  br label %66

66:                                               ; preds = %64, %47
  %67 = phi %"class.net::HostResolverProc"* [ %65, %64 ], [ %42, %47 ]
  %68 = icmp eq %"class.net::HostResolverProc"* %67, null
  br i1 %68, label %69, label %90

69:                                               ; preds = %66
  %70 = tail call i8* @_Znwm(i64 24) #19
  %71 = bitcast i8* %70 to %"class.net::SystemHostResolverProc"*
  tail call void @_ZN3net22SystemHostResolverProcC1Ev(%"class.net::SystemHostResolverProc"* nonnull %71) #18
  %72 = getelementptr inbounds i8, i8* %70, i64 8
  %73 = bitcast i8* %72 to i32*
  %74 = atomicrmw add i32* %73, i32 1 monotonic
  %75 = ptrtoint i8* %70 to i64
  %76 = load %"class.net::HostResolverProc"*, %"class.net::HostResolverProc"** %38, align 8
  store i64 %75, i64* %49, align 8
  %77 = icmp eq %"class.net::HostResolverProc"* %76, null
  br i1 %77, label %90, label %78

78:                                               ; preds = %69
  %79 = getelementptr inbounds %"class.net::HostResolverProc", %"class.net::HostResolverProc"* %76, i64 0, i32 1
  %80 = getelementptr inbounds %"class.base::RefCountedThreadSafe.99", %"class.base::RefCountedThreadSafe.99"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw sub i32* %80, i32 1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %90

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.base::RefCountedThreadSafe.99", %"class.base::RefCountedThreadSafe.99"* %79, i64 -2
  %85 = bitcast %"class.base::RefCountedThreadSafe.99"* %84 to %"class.net::HostResolverProc"*
  %86 = bitcast %"class.base::RefCountedThreadSafe.99"* %84 to void (%"class.net::HostResolverProc"*)***
  %87 = load void (%"class.net::HostResolverProc"*)**, void (%"class.net::HostResolverProc"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.net::HostResolverProc"*)*, void (%"class.net::HostResolverProc"*)** %87, i64 2
  %89 = load void (%"class.net::HostResolverProc"*)*, void (%"class.net::HostResolverProc"*)** %88, align 8
  tail call void %89(%"class.net::HostResolverProc"* nonnull %85) #18
  br label %90

90:                                               ; preds = %28, %66, %69, %78, %83
  ret void
}

declare void @_ZN3net14ProcTaskParamsC1ERKS0_(%"struct.net::ProcTaskParams"*, %"struct.net::ProcTaskParams"* dereferenceable(32)) unnamed_addr #1

declare dereferenceable(8) %class.scoped_refptr.276* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #1

declare void @_ZN3net22SystemHostResolverProcC1Ev(%"class.net::SystemHostResolverProc"*) unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager3JobEFvNS_9TimeTicksEiRKNS3_11AddressListEEJNS0_17UnretainedWrapperIS5_EES6_EEEFviS9_EE7RunOnceEPNS0_13BindStateBaseEiS9_(%"class.base::internal::BindStateBase"*, i32, %"class.net::AddressList"* dereferenceable(48)) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 %12
  %14 = bitcast i8* %13 to %"class.net::HostResolverManager::Job"*
  %15 = and i64 %9, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %3
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %9, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.net::HostResolverManager::Job"*, i64, i32, %"class.net::AddressList"*)**
  %23 = load void (%"class.net::HostResolverManager::Job"*, i64, i32, %"class.net::AddressList"*)*, void (%"class.net::HostResolverManager::Job"*, i64, i32, %"class.net::AddressList"*)** %22, align 8
  br label %26

24:                                               ; preds = %3
  %25 = inttoptr i64 %9 to void (%"class.net::HostResolverManager::Job"*, i64, i32, %"class.net::AddressList"*)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.net::HostResolverManager::Job"*, i64, i32, %"class.net::AddressList"*)* [ %23, %17 ], [ %25, %24 ]
  %28 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %29 = bitcast void (%"class.base::internal::BindStateBase"*)** %28 to i64*
  %30 = load i64, i64* %29, align 8
  tail call void %27(%"class.net::HostResolverManager::Job"* %14, i64 %30, i32 %1, %"class.net::AddressList"* dereferenceable(48) %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net19HostResolverManager3JobEFvNS_9TimeTicksEiRKNS2_11AddressListEEJNS0_17UnretainedWrapperIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #19
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare void @_ZN3net11AddressList12CopyWithPortERKS0_t(%"class.net::AddressList"* sret, %"class.net::AddressList"* dereferenceable(48), i16 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net9IPAddress6IsIPv4Ev(%"class.net::IPAddress"*) local_unnamed_addr #1

declare void @_ZNK3net16NetLogWithSource10BeginEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager8ProcTask18StartLookupAttemptEv(%"class.net::HostResolverManager::ProcTask"*) #0 comdat align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::OnceCallback.556", align 8
  %5 = alloca %"class.base::WeakPtr.557", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.base::OnceCallback.335", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.base::OnceCallback.335", align 8
  %10 = alloca %"class.base::WeakPtr.557", align 8
  %11 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 9
  %12 = load %"class.base::TickClock"*, %"class.base::TickClock"** %11, align 8
  %13 = bitcast %"class.base::TickClock"* %12 to i64 (%"class.base::TickClock"*)***
  %14 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %14, i64 2
  %16 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %15, align 8
  %17 = tail call i64 %16(%"class.base::TickClock"* %12) #18
  %18 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 7
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, 1
  store i32 %20, i32* %18, align 8
  %21 = bitcast %"class.base::OnceCallback.556"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #18
  %22 = getelementptr inbounds %"class.base::OnceCallback.556", %"class.base::OnceCallback.556"* %4, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.base::WeakPtr.557"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #18
  %24 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #18, !noalias !131
  %25 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 10, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %25) #18, !noalias !131
  %26 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 10, i32 0, i32 1
  %27 = load i64, i64* %26, align 8, !noalias !131
  %28 = getelementptr inbounds %"class.base::WeakPtr.557", %"class.base::WeakPtr.557"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %28, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %27) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #18, !noalias !131
  %29 = call i8* @_Znwm(i64 80) #19, !noalias !134
  %30 = bitcast i8* %29 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %30, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.net::AddressList"*, i32, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN3net19HostResolverManager8ProcTaskEEERKNS_9TimeTicksEjPKNS_9TickClockERKNS4_11AddressListEiiEJS7_S8_jSD_EEEFvSG_iiEE7RunOnceEPNS0_13BindStateBaseESG_ii to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN3net19HostResolverManager8ProcTaskEEERKNS_9TimeTicksEjPKNS_9TickClockERKNS3_11AddressListEiiEJS6_S7_jSC_EE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !134
  %31 = getelementptr inbounds i8, i8* %29, i64 32
  %32 = bitcast i8* %31 to i64*
  store i64 ptrtoint (void (%"class.base::WeakPtr.557"*, %"class.base::TimeTicks"*, i32, %"class.base::TickClock"*, %"class.net::AddressList"*, i32, i32)* @_ZN3net19HostResolverManager8ProcTask23OnLookupAttemptCompleteEN4base7WeakPtrIS1_EERKNS2_9TimeTicksEjPKNS2_9TickClockERKNS_11AddressListEii to i64), i64* %32, align 8, !noalias !134
  %33 = getelementptr inbounds i8, i8* %29, i64 40
  %34 = bitcast i8* %33 to %"class.base::internal::WeakReference"*
  %35 = getelementptr inbounds %"class.base::WeakPtr.557", %"class.base::WeakPtr.557"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %34, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %35) #18, !noalias !134
  %36 = getelementptr inbounds i8, i8* %29, i64 48
  %37 = bitcast i8* %36 to i64*
  %38 = getelementptr inbounds %"class.base::WeakPtr.557", %"class.base::WeakPtr.557"* %5, i64 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8, !noalias !134
  store i64 %39, i64* %37, align 8, !noalias !134
  %40 = getelementptr inbounds i8, i8* %29, i64 56
  %41 = bitcast i8* %40 to i64*
  store i64 %17, i64* %41, align 8, !noalias !134
  %42 = getelementptr inbounds i8, i8* %29, i64 64
  %43 = bitcast i8* %42 to i32*
  %44 = load i32, i32* %18, align 4, !noalias !134
  store i32 %44, i32* %43, align 4, !noalias !134
  %45 = getelementptr inbounds i8, i8* %29, i64 72
  %46 = bitcast %"class.base::TickClock"** %11 to i64*
  %47 = load i64, i64* %46, align 8, !noalias !134
  %48 = bitcast i8* %45 to i64*
  store i64 %47, i64* %48, align 8, !noalias !134
  %49 = bitcast %"class.base::OnceCallback.556"* %4 to i8**
  store i8* %29, i8** %49, align 8, !alias.scope !134
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %28) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #18
  %50 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 6, i32 0
  %51 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %50, align 8
  %52 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #18
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 947) #18
  %53 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 1
  %54 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 2
  %55 = call i8* @_Znwm(i64 96) #19, !noalias !139
  %56 = bitcast i8* %55 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %56, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN3net13AddressFamilyEi13scoped_refptrINSA_16HostResolverProcEESC_INS_22SingleThreadTaskRunnerEENS_12OnceCallbackIFvRKNSA_11AddressListEiiEEEEJS9_SB_iSE_SG_SM_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN3net13AddressFamilyEi13scoped_refptrINS9_16HostResolverProcEESB_INS_22SingleThreadTaskRunnerEENS_12OnceCallbackIFvRKNS9_11AddressListEiiEEEEJS8_SA_iSD_SF_SL_EE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !139
  %57 = getelementptr inbounds i8, i8* %55, i64 32
  %58 = bitcast i8* %57 to i64*
  store i64 ptrtoint (void (%"class.std::__1::basic_string"*, i32, i32, %"class.net::HostResolverProc"*, %"class.base::SingleThreadTaskRunner"*, %"class.base::OnceCallback.556"*)* @_ZN3net19HostResolverManager8ProcTask8DoLookupENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13AddressFamilyEi13scoped_refptrINS_16HostResolverProcEESA_IN4base22SingleThreadTaskRunnerEENSD_12OnceCallbackIFvRKNS_11AddressListEiiEEE to i64), i64* %58, align 8, !noalias !139
  %59 = getelementptr inbounds i8, i8* %55, i64 40
  %60 = bitcast %"class.net::HostResolverManager::ProcTask"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1, !noalias !139
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %1
  %65 = bitcast %"class.net::HostResolverManager::ProcTask"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %65, i64 24, i1 false) #18, !noalias !139
  br label %72

66:                                               ; preds = %1
  %67 = bitcast i8* %59 to %"class.std::__1::basic_string"*
  %68 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8, !noalias !139
  %70 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8, !noalias !139
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %67, i8* %69, i64 %71) #18, !noalias !139
  br label %72

72:                                               ; preds = %66, %64
  %73 = getelementptr inbounds i8, i8* %55, i64 64
  %74 = bitcast i8* %73 to i32*
  %75 = load i32, i32* %53, align 4, !noalias !139
  store i32 %75, i32* %74, align 4, !noalias !139
  %76 = getelementptr inbounds i8, i8* %55, i64 68
  %77 = bitcast i8* %76 to i32*
  %78 = load i32, i32* %54, align 4, !noalias !139
  store i32 %78, i32* %77, align 4, !noalias !139
  %79 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 3, i32 0, i32 0
  %80 = load %"class.net::HostResolverProc"*, %"class.net::HostResolverProc"** %79, align 8, !noalias !139
  %81 = getelementptr inbounds i8, i8* %55, i64 72
  %82 = bitcast i8* %81 to %"class.net::HostResolverProc"**
  store %"class.net::HostResolverProc"* %80, %"class.net::HostResolverProc"** %82, align 8, !noalias !139
  %83 = icmp eq %"class.net::HostResolverProc"* %80, null
  br i1 %83, label %87, label %84

84:                                               ; preds = %72
  %85 = getelementptr inbounds %"class.net::HostResolverProc", %"class.net::HostResolverProc"* %80, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw add i32* %85, i32 1 monotonic, !noalias !139
  br label %87

87:                                               ; preds = %84, %72
  %88 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 5, i32 0
  %89 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %88, align 8, !noalias !139
  %90 = getelementptr inbounds i8, i8* %55, i64 80
  %91 = bitcast i8* %90 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %89, %"class.base::SingleThreadTaskRunner"** %91, align 8, !noalias !139
  %92 = icmp eq %"class.base::SingleThreadTaskRunner"* %89, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %89, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 1 monotonic, !noalias !139
  br label %96

96:                                               ; preds = %87, %93
  %97 = getelementptr inbounds i8, i8* %55, i64 88
  %98 = bitcast %"class.base::OnceCallback.556"* %4 to i64*
  %99 = load i64, i64* %98, align 8, !noalias !139
  %100 = bitcast i8* %97 to i64*
  store i64 %99, i64* %100, align 8, !noalias !139
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8, !noalias !139
  %101 = bitcast %"class.base::OnceCallback.335"* %7 to i8**
  store i8* %55, i8** %101, align 8, !alias.scope !139
  %102 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %51, %"class.base::Location"* nonnull dereferenceable(32) %6, %"class.base::OnceCallback.335"* nonnull %7) #18
  %103 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %103) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #18
  %104 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 8
  %105 = load i32, i32* %18, align 8
  call void @_ZNK3net16NetLogWithSource21AddEventWithIntParamsENS_15NetLogEventTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.net::NetLogWithSource"* %104, i32 11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i64 0, i64 0), i64 14, i32 %105) #18
  %106 = load i32, i32* %18, align 8
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 3, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = icmp ult i64 %109, %107
  br i1 %110, label %160, label %111

111:                                              ; preds = %96
  %112 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %88, align 8
  %113 = bitcast %"class.base::SingleThreadTaskRunner"* %112 to %"class.base::TaskRunner"*
  %114 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #18
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 963) #18
  %115 = bitcast %"class.base::WeakPtr.557"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %115) #18
  %116 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #18, !noalias !144
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %25) #18, !noalias !144
  %117 = load i64, i64* %26, align 8, !noalias !144
  %118 = getelementptr inbounds %"class.base::WeakPtr.557", %"class.base::WeakPtr.557"* %10, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %118, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %117) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #18, !noalias !144
  %119 = call i8* @_Znwm(i64 64) #19, !noalias !147
  %120 = bitcast i8* %119 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %120, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager8ProcTaskEFvvEJNS_7WeakPtrIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net19HostResolverManager8ProcTaskEFvvEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManager8ProcTaskEFvvEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE) #18, !noalias !147
  %121 = getelementptr inbounds i8, i8* %119, i64 32
  %122 = bitcast i8* %121 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::HostResolverManager::ProcTask"*)* @_ZN3net19HostResolverManager8ProcTask18StartLookupAttemptEv to i64), i64 0>, <2 x i64>* %122, align 8, !noalias !147
  %123 = getelementptr inbounds i8, i8* %119, i64 48
  %124 = bitcast i8* %123 to %"class.base::internal::WeakReference"*
  %125 = getelementptr inbounds %"class.base::WeakPtr.557", %"class.base::WeakPtr.557"* %10, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %124, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %125) #18, !noalias !147
  %126 = getelementptr inbounds i8, i8* %119, i64 56
  %127 = bitcast i8* %126 to i64*
  %128 = getelementptr inbounds %"class.base::WeakPtr.557", %"class.base::WeakPtr.557"* %10, i64 0, i32 0, i32 1
  %129 = load i64, i64* %128, align 8, !noalias !147
  store i64 %129, i64* %127, align 8, !noalias !147
  %130 = bitcast %"class.base::OnceCallback.335"* %9 to i8**
  store i8* %119, i8** %130, align 8, !alias.scope !147
  %131 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 3, i32 3
  %132 = load i32, i32* %131, align 8
  %133 = load i32, i32* %18, align 8
  %134 = add i32 %133, -1
  %135 = uitofp i32 %132 to double
  %136 = uitofp i32 %134 to double
  %137 = call double @pow(double %135, double %136) #18
  %138 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 3, i32 2, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = sitofp i64 %139 to double
  %141 = fmul double %137, %140
  %142 = fcmp oge double %141, 0xC3E0000000000000
  %143 = fcmp ole double %141, 0x43DFFFFFFFFFFFFF
  %144 = and i1 %143, %142
  %145 = fptosi double %141 to i64
  br i1 %144, label %153, label %146

146:                                              ; preds = %111
  %147 = lshr i64 %139, 63
  %148 = trunc i64 %147 to i32
  %149 = fcmp olt double %137, 0.000000e+00
  %150 = zext i1 %149 to i32
  %151 = icmp eq i32 %148, %150
  %152 = select i1 %151, i64 9223372036854775807, i64 -9223372036854775808
  br label %153

153:                                              ; preds = %111, %146
  %154 = phi i64 [ %145, %111 ], [ %152, %146 ]
  %155 = bitcast %"class.base::SingleThreadTaskRunner"* %112 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.335"*, i64)***
  %156 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.335"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.335"*, i64)*** %155, align 8
  %157 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.335"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.335"*, i64)** %156, align 8
  %158 = call zeroext i1 %157(%"class.base::TaskRunner"* %113, %"class.base::Location"* nonnull dereferenceable(32) %8, %"class.base::OnceCallback.335"* nonnull %9, i64 %154) #18
  %159 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %159) #18
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %118) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %115) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #18
  br label %160

160:                                              ; preds = %96, %153
  %161 = getelementptr inbounds %"class.base::OnceCallback.556", %"class.base::OnceCallback.556"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %161) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager8ProcTask23OnLookupAttemptCompleteEN4base7WeakPtrIS1_EERKNS2_9TimeTicksEjPKNS2_9TickClockERKNS_11AddressListEii(%"class.base::WeakPtr.557"*, %"class.base::TimeTicks"* dereferenceable(8), i32, %"class.base::TickClock"*, %"class.net::AddressList"* dereferenceable(48), i32, i32) #0 comdat align 2 {
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.base::TimeTicks", align 8
  %10 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 193, i32 0), align 16
  %11 = and i8 %10, 25
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %19, label %13, !prof !41

13:                                               ; preds = %7
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #18
  %15 = bitcast %"class.base::TimeTicks"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #18
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %9, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #18
  store i64 %17, i64* %16, align 8
  %18 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 193, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %9, %"class.base::trace_event::TraceArguments"* null, i32 0) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #18
  br label %19

19:                                               ; preds = %7, %13
  %20 = phi i64 [ -6148914691236517206, %7 ], [ %18, %13 ]
  %21 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %7 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), %13 ]
  %22 = phi i8* [ null, %7 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 193, i32 0), %13 ]
  %23 = icmp eq i32 %5, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %4, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %25, align 8
  %27 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %27, align 8
  %29 = icmp eq %"class.net::IPEndPoint"* %26, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %24, %19
  %31 = phi i32 [ %5, %19 ], [ -105, %24 ]
  %32 = call zeroext i1 @_ZN3net21NetworkChangeNotifier9IsOfflineEv() #18
  %33 = select i1 %32, i32 -106, i32 %31
  br label %34

34:                                               ; preds = %24, %30
  %35 = phi i32 [ %33, %30 ], [ 0, %24 ]
  %36 = getelementptr inbounds %"class.base::WeakPtr.557", %"class.base::WeakPtr.557"* %0, i64 0, i32 0, i32 0
  %37 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %36) #18
  br i1 %37, label %38, label %54

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.base::WeakPtr.557", %"class.base::WeakPtr.557"* %0, i64 0, i32 0, i32 1
  %40 = bitcast i64* %39 to %"class.net::HostResolverManager::ProcTask"**
  %41 = load %"class.net::HostResolverManager::ProcTask"*, %"class.net::HostResolverManager::ProcTask"** %40, align 8
  %42 = icmp eq %"class.net::HostResolverManager::ProcTask"* %41, null
  br i1 %42, label %54, label %43

43:                                               ; preds = %38
  %44 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %36) #18
  br i1 %44, label %48, label %45

45:                                               ; preds = %43
  %46 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #18
  br label %48

48:                                               ; preds = %45, %43
  %49 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %36) #18
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  %51 = load %"class.net::HostResolverManager::ProcTask"*, %"class.net::HostResolverManager::ProcTask"** %40, align 8
  br label %52

52:                                               ; preds = %48, %50
  %53 = phi %"class.net::HostResolverManager::ProcTask"* [ %51, %50 ], [ null, %48 ]
  call void @_ZN3net19HostResolverManager8ProcTask16OnLookupCompleteERKNS_11AddressListERKN4base9TimeTicksEjii(%"class.net::HostResolverManager::ProcTask"* %53, %"class.net::AddressList"* dereferenceable(48) %4, %"class.base::TimeTicks"* dereferenceable(8) %1, i32 %2, i32 %35, i32 %6)
  br label %54

54:                                               ; preds = %38, %34, %52
  %55 = icmp eq i8* %22, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %54
  %57 = load i8, i8* %22, align 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %56
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %22, i8* %21, i64 %20) #18
  br label %60

60:                                               ; preds = %54, %56, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager8ProcTask8DoLookupENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13AddressFamilyEi13scoped_refptrINS_16HostResolverProcEESA_IN4base22SingleThreadTaskRunnerEENSD_12OnceCallbackIFvRKNS_11AddressListEiiEEE(%"class.std::__1::basic_string"*, i32, i32, %"class.net::HostResolverProc"*, %"class.base::SingleThreadTaskRunner"*, %"class.base::OnceCallback.556"*) #0 comdat align 2 {
  %7 = alloca %"class.net::AddressList", align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.base::Location", align 8
  %11 = alloca %"class.base::OnceCallback.335", align 8
  %12 = bitcast %"class.net::AddressList"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #18
  %13 = bitcast %"class.net::AddressList"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 48, i1 false)
  call void @_ZN3net11AddressListC1Ev(%"class.net::AddressList"* nonnull %7) #18
  %14 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #18
  store i32 0, i32* %8, align 4
  %15 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #18
  %16 = bitcast %"class.net::HostResolverProc"* %3 to i32 (%"class.net::HostResolverProc"*, %"class.std::__1::basic_string"*, i32, i32, %"class.net::AddressList"*, i32*)***
  %17 = load i32 (%"class.net::HostResolverProc"*, %"class.std::__1::basic_string"*, i32, i32, %"class.net::AddressList"*, i32*)**, i32 (%"class.net::HostResolverProc"*, %"class.std::__1::basic_string"*, i32, i32, %"class.net::AddressList"*, i32*)*** %16, align 8
  %18 = load i32 (%"class.net::HostResolverProc"*, %"class.std::__1::basic_string"*, i32, i32, %"class.net::AddressList"*, i32*)*, i32 (%"class.net::HostResolverProc"*, %"class.std::__1::basic_string"*, i32, i32, %"class.net::AddressList"*, i32*)** %17, align 8
  %19 = call i32 %18(%"class.net::HostResolverProc"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %0, i32 %1, i32 %2, %"class.net::AddressList"* nonnull %7, i32* nonnull %8) #18
  store i32 %19, i32* %9, align 4
  %20 = bitcast %"class.base::SingleThreadTaskRunner"* %4 to %"class.base::TaskRunner"*
  %21 = bitcast %"class.base::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #18
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 988) #18
  %22 = call %"struct.base::internal::BindState.601"* @_ZN4base8internal9BindStateINS_12OnceCallbackIFvRKN3net11AddressListEiiEEEJS4_iiEE6CreateIS8_JRS4_RiSC_EEEPS9_PFvvEOT_DpOT0_(void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvRKN3net11AddressListEiiEEEJS5_iiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), %"class.base::OnceCallback.556"* dereferenceable(8) %5, %"class.net::AddressList"* nonnull dereferenceable(48) %7, i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %8) #18, !noalias !152
  %23 = getelementptr inbounds %"struct.base::internal::BindState.601", %"struct.base::internal::BindState.601"* %22, i64 0, i32 0
  %24 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* %23, %"class.base::internal::BindStateBase"** %24, align 8, !alias.scope !152
  %25 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %20, %"class.base::Location"* nonnull dereferenceable(32) %10, %"class.base::OnceCallback.335"* nonnull %11) #18
  %26 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #18
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #18
  %27 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %6
  %29 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe"* %34 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %35) #18
  br label %36

36:                                               ; preds = %6, %28, %33
  %37 = icmp eq %"class.net::HostResolverProc"* %3, null
  br i1 %37, label %50, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.net::HostResolverProc", %"class.net::HostResolverProc"* %3, i64 0, i32 1
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe.99", %"class.base::RefCountedThreadSafe.99"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %50

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe.99", %"class.base::RefCountedThreadSafe.99"* %39, i64 -2
  %45 = bitcast %"class.base::RefCountedThreadSafe.99"* %44 to %"class.net::HostResolverProc"*
  %46 = bitcast %"class.base::RefCountedThreadSafe.99"* %44 to void (%"class.net::HostResolverProc"*)***
  %47 = load void (%"class.net::HostResolverProc"*)**, void (%"class.net::HostResolverProc"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.net::HostResolverProc"*)*, void (%"class.net::HostResolverProc"*)** %47, i64 2
  %49 = load void (%"class.net::HostResolverProc"*)*, void (%"class.net::HostResolverProc"*)** %48, align 8
  call void %49(%"class.net::HostResolverProc"* nonnull %45) #18
  br label %50

50:                                               ; preds = %36, %38, %43
  ret void
}

declare void @_ZNK3net16NetLogWithSource21AddEventWithIntParamsENS_15NetLogEventTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.net::NetLogWithSource"*, i32, i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN3net19HostResolverManager8ProcTaskEEERKNS_9TimeTicksEjPKNS_9TickClockERKNS4_11AddressListEiiEJS7_S8_jSD_EEEFvSG_iiEE7RunOnceEPNS0_13BindStateBaseESG_ii(%"class.base::internal::BindStateBase"*, %"class.net::AddressList"* dereferenceable(48), i32, i32) #0 comdat align 2 {
  %5 = alloca %"class.base::WeakPtr.557", align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %7 = bitcast %"class.base::internal::BindStateBase"* %6 to void (%"class.base::WeakPtr.557"*, %"class.base::TimeTicks"*, i32, %"class.base::TickClock"*, %"class.net::AddressList"*, i32, i32)**
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = getelementptr inbounds void ()*, void ()** %8, i64 2
  %10 = bitcast void ()** %9 to %"class.base::TimeTicks"*
  %11 = getelementptr inbounds void ()*, void ()** %8, i64 3
  %12 = bitcast void ()** %11 to i32*
  %13 = getelementptr inbounds void ()*, void ()** %8, i64 4
  %14 = bitcast void ()** %13 to %"class.base::TickClock"**
  %15 = bitcast %"class.base::WeakPtr.557"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #18
  %16 = load void (%"class.base::WeakPtr.557"*, %"class.base::TimeTicks"*, i32, %"class.base::TickClock"*, %"class.net::AddressList"*, i32, i32)*, void (%"class.base::WeakPtr.557"*, %"class.base::TimeTicks"*, i32, %"class.base::TickClock"*, %"class.net::AddressList"*, i32, i32)** %7, align 8
  %17 = getelementptr inbounds %"class.base::WeakPtr.557", %"class.base::WeakPtr.557"* %5, i64 0, i32 0, i32 0
  %18 = bitcast void ()** %8 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %17, %"class.base::internal::WeakReference"* dereferenceable(8) %18) #18
  %19 = getelementptr inbounds %"class.base::WeakPtr.557", %"class.base::WeakPtr.557"* %5, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds void ()*, void ()** %8, i64 1
  %21 = bitcast void ()** %20 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %19, align 8
  %23 = load i32, i32* %12, align 4
  %24 = load %"class.base::TickClock"*, %"class.base::TickClock"** %14, align 8
  call void %16(%"class.base::WeakPtr.557"* nonnull %5, %"class.base::TimeTicks"* dereferenceable(8) %10, i32 %23, %"class.base::TickClock"* %24, %"class.net::AddressList"* dereferenceable(48) %1, i32 %2, i32 %3) #18
  %25 = getelementptr inbounds %"class.base::WeakPtr.557", %"class.base::WeakPtr.557"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %25) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN3net19HostResolverManager8ProcTaskEEERKNS_9TimeTicksEjPKNS_9TickClockERKNS3_11AddressListEiiEJS6_S7_jSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #18
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #19
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN3net21NetworkChangeNotifier9IsOfflineEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager8ProcTask16OnLookupCompleteERKNS_11AddressListERKN4base9TimeTicksEjii(%"class.net::HostResolverManager::ProcTask"*, %"class.net::AddressList"* dereferenceable(48), %"class.base::TimeTicks"* dereferenceable(8), i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::Value", align 8
  %9 = alloca %"class.base::Value", align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %class.anon.586, align 8
  store i32 %4, i32* %10, align 4
  store i32 %5, i32* %11, align 4
  %13 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 10, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %13) #18
  %14 = icmp eq i32 %4, 0
  %15 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 8
  br i1 %14, label %41, label %16

16:                                               ; preds = %6
  %17 = bitcast %class.anon.586* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #18
  %18 = getelementptr inbounds %class.anon.586, %class.anon.586* %12, i64 0, i32 0
  store i32* %10, i32** %18, align 8
  %19 = getelementptr inbounds %class.anon.586, %class.anon.586* %12, i64 0, i32 1
  store i32* %11, i32** %19, align 8
  call void @_ZNK3net16NetLogWithSource8AddEntryIZNS_19HostResolverManager8ProcTask16OnLookupCompleteERKNS_11AddressListERKN4base9TimeTicksEjiiEUlvE_EEvNS_15NetLogEventTypeENS_16NetLogEventPhaseERKT_(%"class.net::NetLogWithSource"* %15, i32 16, i32 2, %class.anon.586* nonnull dereferenceable(16) %12) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #18
  %20 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 8, i32 1
  %21 = load %"class.net::NetLog"*, %"class.net::NetLog"** %20, align 8
  %22 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %21, i64 0, i32 3
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %51, label %25, !prof !41

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %15, i64 0, i32 0
  %27 = bitcast %"class.base::Value"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #18
  %28 = load i32, i32* %10, align 4, !noalias !157
  %29 = load i32, i32* %11, align 4, !noalias !157
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 32, i1 false) #18, !alias.scope !160
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %9, i8 zeroext 6) #18
  %30 = icmp eq i32 %3, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %9, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i64 0, i64 0), i64 14, i32 %3) #18
  br label %33

33:                                               ; preds = %31, %25
  %34 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i64 0, i64 0), i64 9, i32 %28) #18
  %35 = icmp eq i32 %29, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %33
  %37 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i64 0, i64 0), i64 8, i32 %29) #18
  %38 = call i8* @gai_strerror(i32 %29) #18
  %39 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKc(%"class.base::Value"* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i64 0, i64 0), i64 15, i8* %38) #18
  br label %40

40:                                               ; preds = %33, %36
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %21, i32 12, %"struct.net::NetLogSource"* dereferenceable(16) %26, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %9) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #18
  br label %51

41:                                               ; preds = %6
  %42 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 8, i32 1
  %43 = load %"class.net::NetLog"*, %"class.net::NetLog"** %42, align 8
  %44 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %43, i64 0, i32 3
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47, !prof !41

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %15, i64 0, i32 0
  %49 = bitcast %"class.base::Value"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #18
  call void @_ZNK3net11AddressList12NetLogParamsEv(%"class.base::Value"* nonnull sret %8, %"class.net::AddressList"* %1) #18
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %43, i32 16, %"struct.net::NetLogSource"* dereferenceable(16) %48, i32 2, %"class.base::Value"* nonnull dereferenceable(32) %8) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #18
  br label %50

50:                                               ; preds = %41, %47
  call void @_ZNK3net16NetLogWithSource21AddEventWithIntParamsENS_15NetLogEventTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.net::NetLogWithSource"* %15, i32 12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i64 0, i64 0), i64 14, i32 %3) #18
  br label %51

51:                                               ; preds = %40, %16, %50
  %52 = getelementptr inbounds %"class.net::HostResolverManager::ProcTask", %"class.net::HostResolverManager::ProcTask"* %0, i64 0, i32 4
  %53 = load i32, i32* %10, align 4
  %54 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #18
  %55 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %52, i64 0, i32 0, i32 0, i32 0
  %56 = bitcast %"class.base::OnceCallback"* %52 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %57, i64* %58, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %55, align 8
  %59 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %60 = inttoptr i64 %57 to %"class.base::internal::BindStateBase"*
  %61 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %60, i64 0, i32 1
  %62 = bitcast void ()** %61 to void (%"class.base::internal::BindStateBase"*, i32, %"class.net::AddressList"*)**
  %63 = load void (%"class.base::internal::BindStateBase"*, i32, %"class.net::AddressList"*)*, void (%"class.base::internal::BindStateBase"*, i32, %"class.net::AddressList"*)** %62, align 8
  call void %63(%"class.base::internal::BindStateBase"* %60, i32 %53, %"class.net::AddressList"* dereferenceable(48) %1) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %59) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #18
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3net16NetLogWithSource8AddEntryIZNS_19HostResolverManager8ProcTask16OnLookupCompleteERKNS_11AddressListERKN4base9TimeTicksEjiiEUlvE_EEvNS_15NetLogEventTypeENS_16NetLogEventPhaseERKT_(%"class.net::NetLogWithSource"*, i32, i32, %class.anon.586* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.base::Value", align 8
  %6 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 1
  %7 = load %"class.net::NetLog"*, %"class.net::NetLog"** %6, align 8
  %8 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %7, i64 0, i32 3
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %27, label %12, !prof !41

12:                                               ; preds = %4
  %13 = bitcast %"class.base::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #18
  %14 = getelementptr inbounds %class.anon.586, %class.anon.586* %3, i64 0, i32 0
  %15 = load i32*, i32** %14, align 8, !noalias !163
  %16 = load i32, i32* %15, align 4, !noalias !163
  %17 = getelementptr inbounds %class.anon.586, %class.anon.586* %3, i64 0, i32 1
  %18 = load i32*, i32** %17, align 8, !noalias !163
  %19 = load i32, i32* %18, align 4, !noalias !163
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false) #18, !alias.scope !166
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %5, i8 zeroext 6) #18
  %20 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i64 0, i64 0), i64 9, i32 %16) #18
  %21 = icmp eq i32 %19, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %12
  %23 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i64 0, i64 0), i64 8, i32 %19) #18
  %24 = call i8* @gai_strerror(i32 %19) #18
  %25 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKc(%"class.base::Value"* nonnull %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i64 0, i64 0), i64 15, i8* %24) #18
  br label %26

26:                                               ; preds = %22, %12
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %7, i32 %1, %"struct.net::NetLogSource"* dereferenceable(16) %8, i32 %2, %"class.base::Value"* nonnull dereferenceable(32) %5) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #18
  br label %27

27:                                               ; preds = %4, %26
  ret void
}

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare i8* @gai_strerror(i32) local_unnamed_addr #3

declare void @_ZNK3net11AddressList12NetLogParamsEv(%"class.base::Value"* sret, %"class.net::AddressList"*) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN3net13AddressFamilyEi13scoped_refptrINSA_16HostResolverProcEESC_INS_22SingleThreadTaskRunnerEENS_12OnceCallbackIFvRKNSA_11AddressListEiiEEEEJS9_SB_iSE_SG_SM_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.base::OnceCallback.556", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.std::__1::basic_string"*, i32, i32, %"class.net::HostResolverProc"*, %"class.base::SingleThreadTaskRunner"*, %"class.base::OnceCallback.556"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.std::__1::tuple.590"*
  %8 = getelementptr inbounds void ()*, void ()** %6, i64 3
  %9 = bitcast void ()** %8 to i32*
  %10 = getelementptr inbounds %"class.std::__1::tuple.590", %"class.std::__1::tuple.590"* %7, i64 0, i32 0, i32 2, i32 0
  %11 = getelementptr inbounds void ()*, void ()** %6, i64 6
  %12 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #18
  %13 = bitcast %"class.base::OnceCallback.556"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #18
  %14 = load void (%"class.std::__1::basic_string"*, i32, i32, %"class.net::HostResolverProc"*, %"class.base::SingleThreadTaskRunner"*, %"class.base::OnceCallback.556"*)*, void (%"class.std::__1::basic_string"*, i32, i32, %"class.net::HostResolverProc"*, %"class.base::SingleThreadTaskRunner"*, %"class.base::OnceCallback.556"*)** %5, align 8
  %15 = bitcast void ()** %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %15, i64 24, i1 false) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #18
  %16 = load i32, i32* %9, align 4
  %17 = load i32, i32* %10, align 4
  %18 = getelementptr inbounds void ()*, void ()** %6, i64 4
  %19 = bitcast void ()** %18 to %"class.net::HostResolverProc"**
  %20 = load %"class.net::HostResolverProc"*, %"class.net::HostResolverProc"** %19, align 8
  store %"class.net::HostResolverProc"* null, %"class.net::HostResolverProc"** %19, align 8
  %21 = getelementptr inbounds void ()*, void ()** %6, i64 5
  %22 = bitcast void ()** %21 to %"class.base::SingleThreadTaskRunner"**
  %23 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %22, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %22, align 8
  %24 = bitcast void ()** %11 to %"class.base::internal::BindStateBase"**
  %25 = bitcast void ()** %11 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.base::OnceCallback.556"* %3 to i64*
  store i64 %26, i64* %27, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8
  call void %14(%"class.std::__1::basic_string"* nonnull %2, i32 %16, i32 %17, %"class.net::HostResolverProc"* %20, %"class.base::SingleThreadTaskRunner"* %23, %"class.base::OnceCallback.556"* nonnull %3) #18
  %28 = getelementptr inbounds %"class.base::OnceCallback.556", %"class.base::OnceCallback.556"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #18
  %29 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %1
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #19
  br label %36

36:                                               ; preds = %1, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN3net13AddressFamilyEi13scoped_refptrINS9_16HostResolverProcEESB_INS_22SingleThreadTaskRunnerEENS_12OnceCallbackIFvRKNS9_11AddressListEiiEEEEJS8_SA_iSD_SF_SL_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %46, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 3
  %6 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %5 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %6) #18
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 2
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.base::SingleThreadTaskRunner"**
  %9 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %8, align 8
  %10 = icmp eq %"class.base::SingleThreadTaskRunner"* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %9, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %12, i64 -2
  %18 = bitcast %"class.base::RefCountedThreadSafe"* %17 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %18) #18
  br label %19

19:                                               ; preds = %16, %11, %3
  %20 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 1
  %21 = bitcast void ()** %20 to %"class.net::HostResolverProc"**
  %22 = load %"class.net::HostResolverProc"*, %"class.net::HostResolverProc"** %21, align 8
  %23 = icmp eq %"class.net::HostResolverProc"* %22, null
  br i1 %23, label %36, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.net::HostResolverProc", %"class.net::HostResolverProc"* %22, i64 0, i32 1
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe.99", %"class.base::RefCountedThreadSafe.99"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw sub i32* %26, i32 1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %36

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.99", %"class.base::RefCountedThreadSafe.99"* %25, i64 -2
  %31 = bitcast %"class.base::RefCountedThreadSafe.99"* %30 to %"class.net::HostResolverProc"*
  %32 = bitcast %"class.base::RefCountedThreadSafe.99"* %30 to void (%"class.net::HostResolverProc"*)***
  %33 = load void (%"class.net::HostResolverProc"*)**, void (%"class.net::HostResolverProc"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.net::HostResolverProc"*)*, void (%"class.net::HostResolverProc"*)** %33, i64 2
  %35 = load void (%"class.net::HostResolverProc"*)*, void (%"class.net::HostResolverProc"*)** %34, align 8
  tail call void %35(%"class.net::HostResolverProc"* nonnull %31) #18
  br label %36

36:                                               ; preds = %29, %24, %19
  %37 = bitcast void ()** %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = bitcast void ()** %4 to i8**
  %43 = load i8*, i8** %42, align 8
  tail call void @_ZdlPv(i8* %43) #19
  br label %44

44:                                               ; preds = %36, %41
  %45 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %45) #19
  br label %46

46:                                               ; preds = %44, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.base::internal::BindState.601"* @_ZN4base8internal9BindStateINS_12OnceCallbackIFvRKN3net11AddressListEiiEEEJS4_iiEE6CreateIS8_JRS4_RiSC_EEEPS9_PFvvEOT_DpOT0_(void ()*, %"class.base::OnceCallback.556"* dereferenceable(8), %"class.net::AddressList"* dereferenceable(48), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = tail call i8* @_Znwm(i64 96) #19
  %8 = bitcast i8* %7 to %"struct.base::internal::BindState.601"*
  %9 = bitcast i8* %7 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %9, void ()* %0, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_12OnceCallbackIFvRKN3net11AddressListEiiEEEJS4_iiEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvRKN3net11AddressListEiiEEEJS5_iiEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE) #18
  %10 = getelementptr inbounds i8, i8* %7, i64 32
  %11 = getelementptr inbounds %"class.base::OnceCallback.556", %"class.base::OnceCallback.556"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback.556"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast i8* %10 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 40
  %16 = bitcast i8* %15 to %"class.net::AddressList"*
  tail call void @_ZN3net11AddressListC1ERKS0_(%"class.net::AddressList"* %16, %"class.net::AddressList"* dereferenceable(48) %2) #18
  %17 = getelementptr inbounds i8, i8* %7, i64 88
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %3, align 4
  store i32 %19, i32* %18, align 4
  %20 = getelementptr inbounds i8, i8* %7, i64 92
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %4, align 4
  store i32 %22, i32* %21, align 4
  %23 = bitcast i8* %10 to %"class.base::internal::BindStateBase"**
  %24 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %23, align 8
  %25 = icmp eq %"class.base::internal::BindStateBase"* %24, null
  br i1 %25, label %26, label %29

26:                                               ; preds = %5
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.38, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.39, i64 0, i64 0)) #18
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #18
  br label %29

29:                                               ; preds = %5, %26
  ret %"struct.base::internal::BindState.601"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvRKN3net11AddressListEiiEEEJS5_iiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.556", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.std::__1::tuple.602"*
  %6 = bitcast void ()** %4 to %"class.net::AddressList"*
  %7 = getelementptr inbounds void ()*, void ()** %4, i64 6
  %8 = bitcast void ()** %7 to i32*
  %9 = getelementptr inbounds %"class.std::__1::tuple.602", %"class.std::__1::tuple.602"* %5, i64 0, i32 0, i32 2, i32 0
  %10 = load i32, i32* %8, align 4
  %11 = load i32, i32* %9, align 4
  %12 = bitcast %"class.base::OnceCallback.556"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #18
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::BindStateBase"**
  %14 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::OnceCallback.556"* %2 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %17 = getelementptr inbounds %"class.base::OnceCallback.556", %"class.base::OnceCallback.556"* %2, i64 0, i32 0
  %18 = inttoptr i64 %15 to %"class.base::internal::BindStateBase"*
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %18, i64 0, i32 1
  %20 = bitcast void ()** %19 to void (%"class.base::internal::BindStateBase"*, %"class.net::AddressList"*, i32, i32)**
  %21 = load void (%"class.base::internal::BindStateBase"*, %"class.net::AddressList"*, i32, i32)*, void (%"class.base::internal::BindStateBase"*, %"class.net::AddressList"*, i32, i32)** %20, align 8
  tail call void %21(%"class.base::internal::BindStateBase"* %18, %"class.net::AddressList"* dereferenceable(48) %6, i32 %10, i32 %11) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS_12OnceCallbackIFvRKN3net11AddressListEiiEEEJS4_iiEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.net::AddressList"*
  tail call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* %5) #18
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %7 = bitcast %"class.base::internal::BindStateBase"* %6 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %7) #18
  %8 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #19
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvRKN3net11AddressListEiiEEEJS5_iiEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  switch i32 %1, label %10 [
    i32 0, label %4
    i32 1, label %7
  ]

4:                                                ; preds = %2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %6 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %5) #18
  br label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %9 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"* %8) #18
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi i1 [ %9, %7 ], [ %6, %4 ], [ false, %2 ]
  ret i1 %11
}

declare zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

declare void @_ZN3net11AddressListC1ERKS0_(%"class.net::AddressList"*, %"class.net::AddressList"* dereferenceable(48)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager8ProcTaskEFvvEJNS_7WeakPtrIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.net::HostResolverManager::ProcTask"**
  %10 = load %"class.net::HostResolverManager::ProcTask"*, %"class.net::HostResolverManager::ProcTask"** %9, align 8
  %11 = icmp eq %"class.net::HostResolverManager::ProcTask"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.net::HostResolverManager::ProcTask"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.net::HostResolverManager::ProcTask"*)**
  %37 = load void (%"class.net::HostResolverManager::ProcTask"*)*, void (%"class.net::HostResolverManager::ProcTask"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.net::HostResolverManager::ProcTask"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.net::HostResolverManager::ProcTask"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.net::HostResolverManager::ProcTask"* %28) #18
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net19HostResolverManager8ProcTaskEFvvEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #18
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #19
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManager8ProcTaskEFvvEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::HostResolverManager::ProcTask"**
  %9 = load %"class.net::HostResolverManager::ProcTask"*, %"class.net::HostResolverManager::ProcTask"** %8, align 8
  %10 = icmp ne %"class.net::HostResolverManager::ProcTask"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #18
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nofree nounwind
declare double @pow(double, double) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager7DnsTask20StartNextTransactionEv(%"class.net::HostResolverManager::DnsTask"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.621", align 8
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.std::__1::unique_ptr.286", align 8
  %5 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 9
  %8 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 9, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 9, i32 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, %9
  br i1 %12, label %15, label %13

13:                                               ; preds = %1
  %14 = sub i64 %11, %9
  br label %20

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %11, %9
  %19 = add i64 %18, %17
  br label %20

20:                                               ; preds = %13, %15
  %21 = phi i64 [ %14, %13 ], [ %19, %15 ]
  %22 = trunc i64 %21 to i32
  %23 = icmp eq i32 %6, %22
  br i1 %23, label %24, label %27

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 8
  tail call void @_ZNK3net16NetLogWithSource10BeginEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %25, i32 17) #18
  %26 = load i64, i64* %8, align 8
  br label %27

27:                                               ; preds = %24, %20
  %28 = phi i64 [ %26, %24 ], [ %9, %20 ]
  %29 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %7, i64 0, i32 0, i32 0
  %30 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %29, i64 %28) #18
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %7, i64 0, i32 0
  %33 = load i64, i64* %8, align 8
  %34 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %29, i64 %33) #18
  %35 = load i64, i64* %8, align 8
  %36 = add i64 %35, 1
  %37 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %29, i64 %36) #18
  %38 = load i64, i64* %8, align 8
  %39 = add i64 %38, 1
  %40 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %39, %41
  %43 = select i1 %42, i64 0, i64 %39
  store i64 %43, i64* %8, align 8
  tail call void @_ZN4base14circular_dequeIN3net12DnsQueryTypeEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %32) #18
  %44 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #18
  %45 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 -6148914691236517206, i64* %45, align 8
  %46 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 14
  %47 = load %"class.base::TickClock"*, %"class.base::TickClock"** %46, align 8
  %48 = bitcast %"class.base::TickClock"* %47 to i64 (%"class.base::TickClock"*)***
  %49 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %48, align 8
  %50 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %49, i64 2
  %51 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %50, align 8
  %52 = tail call i64 %51(%"class.base::TickClock"* %47) #18
  %53 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 15, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = sub nsw i64 %52, %54
  store i64 %55, i64* %45, align 8
  %56 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager7DnsTask20StartNextTransactionEvE24atomic_histogram_pointer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %57 = inttoptr i64 %56 to %"class.base::HistogramBase"*
  %58 = icmp eq i64 %56, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %27
  %60 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.44, i64 0, i64 0), i64 1000, i64 3600000000, i32 100, i32 1) #18
  %61 = ptrtoint %"class.base::HistogramBase"* %60 to i64
  store atomic i64 %61, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager7DnsTask20StartNextTransactionEvE24atomic_histogram_pointer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 8
  br label %62

62:                                               ; preds = %27, %59
  %63 = phi %"class.base::HistogramBase"* [ %57, %27 ], [ %60, %59 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %63, %"class.base::TimeDelta"* nonnull dereferenceable(8) %3) #18
  %64 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 7
  %65 = load %"class.net::HostResolverManager::DnsTask::Delegate"*, %"class.net::HostResolverManager::DnsTask::Delegate"** %64, align 8
  %66 = load i64, i64* %45, align 8
  %67 = bitcast %"class.net::HostResolverManager::DnsTask::Delegate"* %65 to void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64)***
  %68 = load void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64)**, void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64)*, void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64)** %68, i64 3
  %70 = load void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64)*, void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64)** %69, align 8
  call void %70(%"class.net::HostResolverManager::DnsTask::Delegate"* %65, i64 %66) #18
  %71 = bitcast %"class.std::__1::unique_ptr.286"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #18
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.net::DnsTransaction"* inttoptr (i64 -6148914691236517206 to %"class.net::DnsTransaction"*), %"class.net::DnsTransaction"** %72, align 8
  %73 = bitcast %"class.base::OnceCallback.621"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73)
  %74 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 1
  %75 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %74, align 8
  %76 = bitcast %"class.net::DnsClient"* %75 to %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)***
  %77 = load %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)**, %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)*** %76, align 8
  %78 = getelementptr inbounds %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)*, %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)** %77, i64 14
  %79 = load %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)*, %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)** %78, align 8
  %80 = call %"class.net::DnsTransactionFactory"* %79(%"class.net::DnsClient"* %75) #18
  %81 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 2
  %82 = call zeroext i16 @_ZN3net19DnsQueryTypeToQtypeENS_12DnsQueryTypeE(i32 %31) #18
  %83 = ptrtoint %"class.net::HostResolverManager::DnsTask"* %0 to i64
  %84 = load %"class.base::TickClock"*, %"class.base::TickClock"** %46, align 8
  %85 = bitcast %"class.base::TickClock"* %84 to i64 (%"class.base::TickClock"*)***
  %86 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %85, align 8
  %87 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %86, i64 2
  %88 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %87, align 8
  %89 = call i64 %88(%"class.base::TickClock"* %84) #18
  %90 = call i8* @_Znwm(i64 72) #19, !noalias !169
  %91 = bitcast i8* %90 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %91, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.net::DnsTransaction"*, i32, %"class.net::DnsResponse"*, %"class.absl::optional.313"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager7DnsTaskEFvRKNS_9TimeTicksENS3_12DnsQueryTypeEPNS3_14DnsTransactionEiPKNS3_11DnsResponseEN4absl8optionalINSt3__112basic_stringIcNSH_11char_traitsIcEENSH_9allocatorIcEEEEEEEJNS0_17UnretainedWrapperIS5_EES6_S9_EEEFvSB_iSE_SO_EE7RunOnceEPNS0_13BindStateBaseESB_iSE_OSO_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net19HostResolverManager7DnsTaskEFvRKNS_9TimeTicksENS2_12DnsQueryTypeEPNS2_14DnsTransactionEiPKNS2_11DnsResponseEN4absl8optionalINSt3__112basic_stringIcNSG_11char_traitsIcEENSG_9allocatorIcEEEEEEEJNS0_17UnretainedWrapperIS4_EES5_S8_EE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !169
  %92 = getelementptr inbounds i8, i8* %90, i64 32
  %93 = bitcast i8* %92 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::HostResolverManager::DnsTask"*, %"class.base::TimeTicks"*, i32, %"class.net::DnsTransaction"*, i32, %"class.net::DnsResponse"*, %"class.absl::optional.313"*)* @_ZN3net19HostResolverManager7DnsTask21OnTransactionCompleteERKN4base9TimeTicksENS_12DnsQueryTypeEPNS_14DnsTransactionEiPKNS_11DnsResponseEN4absl8optionalINSt3__112basic_stringIcNSE_11char_traitsIcEENSE_9allocatorIcEEEEEE to i64), i64 0>, <2 x i64>* %93, align 8, !noalias !169
  %94 = getelementptr inbounds i8, i8* %90, i64 48
  %95 = bitcast i8* %94 to i64*
  store i64 %83, i64* %95, align 8, !noalias !169
  %96 = getelementptr inbounds i8, i8* %90, i64 56
  %97 = bitcast i8* %96 to i64*
  store i64 %89, i64* %97, align 8, !noalias !169
  %98 = getelementptr inbounds i8, i8* %90, i64 64
  %99 = bitcast i8* %98 to i32*
  store i32 %31, i32* %99, align 4, !noalias !169
  %100 = bitcast %"class.base::OnceCallback.621"* %2 to i8**
  store i8* %90, i8** %100, align 8, !alias.scope !169
  %101 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 8
  %102 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 4
  %103 = load i8, i8* %102, align 8, !range !2
  %104 = icmp ne i8 %103, 0
  %105 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 6
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 3
  %108 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %107, align 8
  %109 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 19
  %110 = load i8, i8* %109, align 8, !range !2
  %111 = icmp ne i8 %110, 0
  %112 = bitcast %"class.net::DnsTransactionFactory"* %80 to %"class.net::DnsTransaction"* (%"class.net::DnsTransactionFactory"*, %"class.std::__1::basic_string"*, i16, %"class.base::OnceCallback.621"*, %"class.net::NetLogWithSource"*, i1, i32, %"class.net::ResolveContext"*, i1)***
  %113 = load %"class.net::DnsTransaction"* (%"class.net::DnsTransactionFactory"*, %"class.std::__1::basic_string"*, i16, %"class.base::OnceCallback.621"*, %"class.net::NetLogWithSource"*, i1, i32, %"class.net::ResolveContext"*, i1)**, %"class.net::DnsTransaction"* (%"class.net::DnsTransactionFactory"*, %"class.std::__1::basic_string"*, i16, %"class.base::OnceCallback.621"*, %"class.net::NetLogWithSource"*, i1, i32, %"class.net::ResolveContext"*, i1)*** %112, align 8
  %114 = getelementptr inbounds %"class.net::DnsTransaction"* (%"class.net::DnsTransactionFactory"*, %"class.std::__1::basic_string"*, i16, %"class.base::OnceCallback.621"*, %"class.net::NetLogWithSource"*, i1, i32, %"class.net::ResolveContext"*, i1)*, %"class.net::DnsTransaction"* (%"class.net::DnsTransactionFactory"*, %"class.std::__1::basic_string"*, i16, %"class.base::OnceCallback.621"*, %"class.net::NetLogWithSource"*, i1, i32, %"class.net::ResolveContext"*, i1)** %113, i64 2
  %115 = load %"class.net::DnsTransaction"* (%"class.net::DnsTransactionFactory"*, %"class.std::__1::basic_string"*, i16, %"class.base::OnceCallback.621"*, %"class.net::NetLogWithSource"*, i1, i32, %"class.net::ResolveContext"*, i1)*, %"class.net::DnsTransaction"* (%"class.net::DnsTransactionFactory"*, %"class.std::__1::basic_string"*, i16, %"class.base::OnceCallback.621"*, %"class.net::NetLogWithSource"*, i1, i32, %"class.net::ResolveContext"*, i1)** %114, align 8
  %116 = call %"class.net::DnsTransaction"* %115(%"class.net::DnsTransactionFactory"* %80, %"class.std::__1::basic_string"* dereferenceable(24) %81, i16 zeroext %82, %"class.base::OnceCallback.621"* nonnull %2, %"class.net::NetLogWithSource"* dereferenceable(24) %101, i1 zeroext %104, i32 %106, %"class.net::ResolveContext"* %108, i1 zeroext %111) #18
  %117 = getelementptr inbounds %"class.base::OnceCallback.621", %"class.base::OnceCallback.621"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %117) #18
  %118 = load %"class.net::HostResolverManager::DnsTask::Delegate"*, %"class.net::HostResolverManager::DnsTask::Delegate"** %64, align 8
  %119 = bitcast %"class.net::HostResolverManager::DnsTask::Delegate"* %118 to i32 (%"class.net::HostResolverManager::DnsTask::Delegate"*)***
  %120 = load i32 (%"class.net::HostResolverManager::DnsTask::Delegate"*)**, i32 (%"class.net::HostResolverManager::DnsTask::Delegate"*)*** %119, align 8
  %121 = getelementptr inbounds i32 (%"class.net::HostResolverManager::DnsTask::Delegate"*)*, i32 (%"class.net::HostResolverManager::DnsTask::Delegate"*)** %120, i64 2
  %122 = load i32 (%"class.net::HostResolverManager::DnsTask::Delegate"*)*, i32 (%"class.net::HostResolverManager::DnsTask::Delegate"*)** %121, align 8
  %123 = call i32 %122(%"class.net::HostResolverManager::DnsTask::Delegate"* %118) #18
  %124 = bitcast %"class.net::DnsTransaction"* %116 to void (%"class.net::DnsTransaction"*, i32)***
  %125 = load void (%"class.net::DnsTransaction"*, i32)**, void (%"class.net::DnsTransaction"*, i32)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.net::DnsTransaction"*, i32)*, void (%"class.net::DnsTransaction"*, i32)** %125, i64 5
  %127 = load void (%"class.net::DnsTransaction"*, i32)*, void (%"class.net::DnsTransaction"*, i32)** %126, align 8
  call void %127(%"class.net::DnsTransaction"* %116, i32 %123) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73)
  store %"class.net::DnsTransaction"* %116, %"class.net::DnsTransaction"** %72, align 8
  %128 = bitcast %"class.net::DnsTransaction"* %116 to void (%"class.net::DnsTransaction"*)***
  %129 = load void (%"class.net::DnsTransaction"*)**, void (%"class.net::DnsTransaction"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %129, i64 4
  %131 = load void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %130, align 8
  call void %131(%"class.net::DnsTransaction"* %116) #18
  %132 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 10
  %133 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %132, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %133, align 8
  %135 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %136 = bitcast %"class.std::__1::unique_ptr.286"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = ptrtoint %"class.std::__1::unique_ptr.286"* %134 to i64
  %139 = sub i64 %137, %138
  %140 = icmp eq i64 %139, 0
  %141 = inttoptr i64 %137 to %"class.std::__1::unique_ptr.286"*
  br i1 %140, label %158, label %142

142:                                              ; preds = %62
  %143 = ashr exact i64 %139, 3
  br label %144

144:                                              ; preds = %144, %142
  %145 = phi %"class.std::__1::unique_ptr.286"* [ %134, %142 ], [ %156, %144 ]
  %146 = phi i64 [ %143, %142 ], [ %155, %144 ]
  %147 = lshr i64 %146, 1
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %145, i64 %147
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %148, i64 0, i32 0, i32 0, i32 0
  %150 = load %"class.net::DnsTransaction"*, %"class.net::DnsTransaction"** %149, align 8
  %151 = icmp ult %"class.net::DnsTransaction"* %150, %116
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %148, i64 1
  %153 = xor i64 %147, -1
  %154 = add i64 %146, %153
  %155 = select i1 %151, i64 %154, i64 %147
  %156 = select i1 %151, %"class.std::__1::unique_ptr.286"* %152, %"class.std::__1::unique_ptr.286"* %145
  %157 = icmp eq i64 %155, 0
  br i1 %157, label %158, label %144

158:                                              ; preds = %144, %62
  %159 = phi %"class.std::__1::unique_ptr.286"* [ %134, %62 ], [ %156, %144 ]
  %160 = icmp eq %"class.std::__1::unique_ptr.286"* %159, %141
  br i1 %160, label %165, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %159, i64 0, i32 0, i32 0, i32 0
  %163 = load %"class.net::DnsTransaction"*, %"class.net::DnsTransaction"** %162, align 8
  %164 = icmp ult %"class.net::DnsTransaction"* %116, %163
  br i1 %164, label %165, label %169

165:                                              ; preds = %161, %158
  %166 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %132, i64 0, i32 0
  %167 = call %"class.std::__1::unique_ptr.286"* @_ZNSt3__16vectorINS_10unique_ptrIN3net14DnsTransactionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE7emplaceIJS6_EEENS_11__wrap_iterIPS6_EENSB_IPKS6_EEDpOT_(%"class.std::__1::vector.284"* %166, %"class.std::__1::unique_ptr.286"* %159, %"class.std::__1::unique_ptr.286"* nonnull dereferenceable(8) %4) #18
  %168 = load %"class.net::DnsTransaction"*, %"class.net::DnsTransaction"** %72, align 8
  br label %169

169:                                              ; preds = %161, %165
  %170 = phi %"class.net::DnsTransaction"* [ %116, %161 ], [ %168, %165 ]
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %72, align 8
  %171 = icmp eq %"class.net::DnsTransaction"* %170, null
  br i1 %171, label %177, label %172

172:                                              ; preds = %169
  %173 = bitcast %"class.net::DnsTransaction"* %170 to void (%"class.net::DnsTransaction"*)***
  %174 = load void (%"class.net::DnsTransaction"*)**, void (%"class.net::DnsTransaction"*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %174, i64 1
  %176 = load void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %175, align 8
  call void %176(%"class.net::DnsTransaction"* nonnull %170) #18
  br label %177

177:                                              ; preds = %169, %172
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager7DnsTaskC2EPNS_9DnsClientEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_12DnsQueryTypeEPNS_14ResolveContextEbNS_13SecureDnsModeEPNS1_8DelegateERKNS_16NetLogWithSourceEPKNS4_9TickClockEb(%"class.net::HostResolverManager::DnsTask"*, %"class.net::DnsClient"*, i8*, i64, i32, %"class.net::ResolveContext"*, i1 zeroext, i32, %"class.net::HostResolverManager::DnsTask::Delegate"*, %"class.net::NetLogWithSource"* dereferenceable(24), %"class.base::TickClock"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %13 = zext i1 %6 to i8
  %14 = zext i1 %11 to i8
  %15 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"* %15) #18
  %16 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 1
  store %"class.net::DnsClient"* %1, %"class.net::DnsClient"** %16, align 8
  %17 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 2
  %18 = icmp ugt i64 %3, -17
  br i1 %18, label %19, label %21

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::basic_string"* %17 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %20) #20
  unreachable

21:                                               ; preds = %12
  %22 = icmp ult i64 %3, 23
  br i1 %22, label %31, label %23

23:                                               ; preds = %21
  %24 = add nuw i64 %3, 16
  %25 = and i64 %24, -16
  %26 = tail call i8* @_Znwm(i64 %25) #19
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %26, i8** %27, align 8, !alias.scope !174
  %28 = or i64 %25, -9223372036854775808
  %29 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %28, i64* %29, align 8, !alias.scope !174
  %30 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %30, align 8, !alias.scope !174
  br label %37

31:                                               ; preds = %21
  %32 = trunc i64 %3 to i8
  %33 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 %32, i8* %34, align 1, !alias.scope !174
  %35 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %36 = icmp eq i64 %3, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %31, %23
  %38 = phi i8* [ %26, %23 ], [ %35, %31 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %2, i64 %3, i1 false) #18
  br label %39

39:                                               ; preds = %31, %37
  %40 = phi i8* [ %35, %31 ], [ %38, %37 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 %3
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 3
  store %"class.net::ResolveContext"* %5, %"class.net::ResolveContext"** %42, align 8
  %43 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 4
  store i8 %13, i8* %43, align 8
  %44 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 6
  store i32 %7, i32* %44, align 4
  %45 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 7
  store %"class.net::HostResolverManager::DnsTask::Delegate"* %8, %"class.net::HostResolverManager::DnsTask::Delegate"** %45, align 8
  %46 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 8
  %47 = bitcast %"class.net::NetLogWithSource"* %46 to i8*
  %48 = bitcast %"class.net::NetLogWithSource"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false)
  %49 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 9
  %50 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 12
  store i32 0, i32* %50, align 4
  %51 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %51, align 8
  %52 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 2
  %53 = bitcast %union.anon.301* %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 200, i1 false) #18
  %54 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 14
  %55 = bitcast %"class.std::__1::queue"* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 56, i1 false)
  store %"class.base::TickClock"* %10, %"class.base::TickClock"** %54, align 8
  %56 = bitcast %"class.base::TickClock"* %10 to i64 (%"class.base::TickClock"*)***
  %57 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %57, i64 2
  %59 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %58, align 8
  %60 = tail call i64 %59(%"class.base::TickClock"* %10) #18
  %61 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 15, i32 0, i32 0
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 16
  tail call void @_ZN3net29HttpssvcExperimentDomainCacheC1Ev(%"class.net::HttpssvcExperimentDomainCache"* %62) #18
  %63 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %63, align 8
  %64 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 136, i1 false) #18
  %65 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 18
  tail call void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"* %65) #18
  %66 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 19
  store i8 %14, i8* %66, align 8
  %67 = icmp eq i32 %4, 0
  %68 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %49, i64 0, i32 0
  tail call void @_ZN4base14circular_dequeIN3net12DnsQueryTypeEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %68, i64 1) #18
  %69 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %49, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 9, i32 0, i32 2
  %71 = load i64, i64* %70, align 8
  %72 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %69, i64 %71) #18
  br i1 %67, label %87, label %73

73:                                               ; preds = %39
  store i32 %4, i32* %72, align 4
  %74 = load i64, i64* %70, align 8
  %75 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, -1
  %78 = icmp eq i64 %74, %77
  br i1 %78, label %79, label %80

79:                                               ; preds = %73
  store i64 0, i64* %70, align 8
  br label %83

80:                                               ; preds = %73
  %81 = add i64 %74, 1
  store i64 %81, i64* %70, align 8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80, %79
  br label %84

84:                                               ; preds = %80, %83
  %85 = phi i64 [ %77, %83 ], [ %74, %80 ]
  %86 = tail call dereferenceable(4) i32* @_ZNK4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %69, i64 %85) #18
  br label %177

87:                                               ; preds = %39
  store i32 1, i32* %72, align 4
  %88 = load i64, i64* %70, align 8
  %89 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, -1
  %92 = icmp eq i64 %88, %91
  br i1 %92, label %93, label %94

93:                                               ; preds = %87
  store i64 0, i64* %70, align 8
  br label %97

94:                                               ; preds = %87
  %95 = add i64 %88, 1
  store i64 %95, i64* %70, align 8
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94, %93
  br label %98

98:                                               ; preds = %94, %97
  %99 = phi i64 [ %91, %97 ], [ %88, %94 ]
  %100 = tail call dereferenceable(4) i32* @_ZNK4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %69, i64 %99) #18
  tail call void @_ZN4base14circular_dequeIN3net12DnsQueryTypeEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %68, i64 1) #18
  %101 = load i64, i64* %70, align 8
  %102 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %69, i64 %101) #18
  store i32 2, i32* %102, align 4
  %103 = load i64, i64* %70, align 8
  %104 = load i64, i64* %89, align 8
  %105 = add i64 %104, -1
  %106 = icmp eq i64 %103, %105
  br i1 %106, label %107, label %108

107:                                              ; preds = %98
  store i64 0, i64* %70, align 8
  br label %111

108:                                              ; preds = %98
  %109 = add i64 %103, 1
  store i64 %109, i64* %70, align 8
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108, %107
  br label %112

112:                                              ; preds = %108, %111
  %113 = phi i64 [ %105, %111 ], [ %103, %108 ]
  %114 = tail call dereferenceable(4) i32* @_ZNK4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %69, i64 %113) #18
  %115 = tail call zeroext i1 @_ZN3net29HttpssvcExperimentDomainCache14IsExperimentalEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HttpssvcExperimentDomainCache"* %62, i8* %2, i64 %3) #18
  %116 = tail call zeroext i1 @_ZN3net29HttpssvcExperimentDomainCache9IsControlEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HttpssvcExperimentDomainCache"* %62, i8* %2, i64 %3) #18
  %117 = load i8, i8* %43, align 8, !range !2
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %119, label %128

119:                                              ; preds = %112
  %120 = tail call zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam.614"* nonnull @_ZN3net8features35kDnsHttpssvcEnableQueryOverInsecureE) #18
  br i1 %120, label %121, label %128

121:                                              ; preds = %119
  %122 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %16, align 8
  %123 = bitcast %"class.net::DnsClient"* %122 to i1 (%"class.net::DnsClient"*)***
  %124 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %123, align 8
  %125 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %124, i64 4
  %126 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %125, align 8
  %127 = tail call zeroext i1 %126(%"class.net::DnsClient"* %122) #18
  br label %128

128:                                              ; preds = %112, %121, %119
  %129 = phi i1 [ false, %119 ], [ false, %112 ], [ %127, %121 ]
  %130 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features12kDnsHttpssvcE) #18
  br i1 %130, label %131, label %177

131:                                              ; preds = %128
  %132 = load i8, i8* %43, align 8, !range !2
  %133 = icmp ne i8 %132, 0
  %134 = or i1 %129, %133
  %135 = or i1 %115, %116
  %136 = and i1 %135, %134
  br i1 %136, label %137, label %177

137:                                              ; preds = %131
  %138 = load i8, i8* %63, align 8, !range !2
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %142, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net15HttpssvcMetricsD1Ev(%"class.net::HttpssvcMetrics"* %141) #18
  store i8 0, i8* %63, align 8
  br label %142

142:                                              ; preds = %137, %140
  %143 = bitcast i8* %64 to %"class.net::HttpssvcMetrics"*
  tail call void @_ZN3net15HttpssvcMetricsC1Eb(%"class.net::HttpssvcMetrics"* %143, i1 zeroext %115) #18
  store i8 1, i8* %63, align 8
  %144 = tail call zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam.614"* nonnull @_ZN3net8features24kDnsHttpssvcUseIntegrityE) #18
  br i1 %144, label %145, label %160

145:                                              ; preds = %142
  tail call void @_ZN4base14circular_dequeIN3net12DnsQueryTypeEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %68, i64 1) #18
  %146 = load i64, i64* %70, align 8
  %147 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %69, i64 %146) #18
  store i32 6, i32* %147, align 4
  %148 = load i64, i64* %70, align 8
  %149 = load i64, i64* %89, align 8
  %150 = add i64 %149, -1
  %151 = icmp eq i64 %148, %150
  br i1 %151, label %152, label %153

152:                                              ; preds = %145
  store i64 0, i64* %70, align 8
  br label %156

153:                                              ; preds = %145
  %154 = add i64 %148, 1
  store i64 %154, i64* %70, align 8
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153, %152
  br label %157

157:                                              ; preds = %153, %156
  %158 = phi i64 [ %150, %156 ], [ %148, %153 ]
  %159 = tail call dereferenceable(4) i32* @_ZNK4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %69, i64 %158) #18
  br label %160

160:                                              ; preds = %157, %142
  %161 = tail call zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam.614"* nonnull @_ZN3net8features23kDnsHttpssvcUseHttpssvcE) #18
  br i1 %161, label %162, label %177

162:                                              ; preds = %160
  tail call void @_ZN4base14circular_dequeIN3net12DnsQueryTypeEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %68, i64 1) #18
  %163 = load i64, i64* %70, align 8
  %164 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %69, i64 %163) #18
  store i32 7, i32* %164, align 4
  %165 = load i64, i64* %70, align 8
  %166 = load i64, i64* %89, align 8
  %167 = add i64 %166, -1
  %168 = icmp eq i64 %165, %167
  br i1 %168, label %169, label %170

169:                                              ; preds = %162
  store i64 0, i64* %70, align 8
  br label %173

170:                                              ; preds = %162
  %171 = add i64 %165, 1
  store i64 %171, i64* %70, align 8
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170, %169
  br label %174

174:                                              ; preds = %170, %173
  %175 = phi i64 [ %167, %173 ], [ %165, %170 ]
  %176 = tail call dereferenceable(4) i32* @_ZNK4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %69, i64 %175) #18
  br label %177

177:                                              ; preds = %128, %174, %160, %131, %84
  %178 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 9, i32 0, i32 1
  %179 = load i64, i64* %178, align 8
  %180 = load i64, i64* %70, align 8
  %181 = icmp ult i64 %180, %179
  br i1 %181, label %184, label %182

182:                                              ; preds = %177
  %183 = sub i64 %180, %179
  br label %189

184:                                              ; preds = %177
  %185 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %186 = load i64, i64* %185, align 8
  %187 = sub i64 %180, %179
  %188 = add i64 %187, %186
  br label %189

189:                                              ; preds = %182, %184
  %190 = phi i64 [ %183, %182 ], [ %188, %184 ]
  %191 = trunc i64 %190 to i32
  %192 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 11
  store i32 %191, i32* %192, align 8
  ret void
}

declare void @_ZN3net29HttpssvcExperimentDomainCacheC1Ev(%"class.net::HttpssvcExperimentDomainCache"*) unnamed_addr #1

declare void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"*) unnamed_addr #1

declare zeroext i1 @_ZN3net29HttpssvcExperimentDomainCache14IsExperimentalEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HttpssvcExperimentDomainCache"*, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN3net29HttpssvcExperimentDomainCache9IsControlEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HttpssvcExperimentDomainCache"*, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam.614"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3net12DnsQueryTypeEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #18
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 4) #18
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #18
  br i1 %37, label %38, label %39, !prof !177

38:                                               ; preds = %27
  tail call void @llvm.trap() #18
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #18
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN3net12DnsQueryTypeEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #18
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #18
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #18
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3net12DnsQueryTypeEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEE9MoveRangeIS3_Li0EEEvPS3_S6_S6_(i32* %11, i32* %12, i32* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load i32*, i32** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEE9MoveRangeIS3_Li0EEEvPS3_S6_S6_(i32* %19, i32* %20, i32* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEE9MoveRangeIS3_Li0EEEvPS3_S6_S6_(i32* %24, i32* %25, i32* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIN3net12DnsQueryTypeEE9MoveRangeIS3_Li0EEEvPS3_S6_S6_(i32*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint i32* %0 to i64
  %6 = icmp ult i32* %2, %1
  br i1 %6, label %7, label %41

7:                                                ; preds = %3
  %8 = ptrtoint i32* %2 to i64
  %9 = ptrtoint i32* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #18
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #18
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !177

16:                                               ; preds = %7
  tail call void @llvm.trap() #18
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %46

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i64 0, i64 0), i32 132, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.40, i64 0, i64 0)) #18
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  %23 = bitcast %"class.std::__1::basic_ostream"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_ostream"* %22 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, -75
  %34 = or i32 %33, 8
  store i32 %34, i32* %31, align 8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i64 0, i64 0), i64 14) #18
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %35, i64 %5) #18
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i64 0, i64 0), i64 14) #18
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %37, i64 %9) #18
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i64 0, i64 0), i64 8) #18
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %39, i64 %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #18
  br label %46

41:                                               ; preds = %3
  %42 = ptrtoint i32* %1 to i64
  %43 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %42, i64 %5) #18
  %44 = extractvalue { i64, i1 } %43, 1
  br i1 %44, label %45, label %46, !prof !177

45:                                               ; preds = %41
  call void @llvm.trap() #18
  unreachable

46:                                               ; preds = %20, %17, %41
  %47 = phi { i64, i1 } [ %43, %41 ], [ %10, %17 ], [ %10, %20 ]
  %48 = extractvalue { i64, i1 } %47, 0
  %49 = bitcast i32* %0 to i8*
  %50 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %49, i64 %48, i1 false)
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #18
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #18
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #18
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #18
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #18
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #18
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #18
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #18
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #18
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #18
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #19
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #18
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #18
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #19
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #18
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #18
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK4base8internal12VectorBufferIN3net12DnsQueryTypeEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 %1
  ret i32* %25
}

declare void @_ZN3net15HttpssvcMetricsC1Eb(%"class.net::HttpssvcMetrics"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3net12DnsQueryTypeEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #18
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 4) #18
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #18
  br i1 %31, label %32, label %33, !prof !177

32:                                               ; preds = %27
  tail call void @llvm.trap() #18
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #18
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN3net12DnsQueryTypeEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #18
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #18
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #18
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager7DnsTask21OnTransactionCompleteERKN4base9TimeTicksENS_12DnsQueryTypeEPNS_14DnsTransactionEiPKNS_11DnsResponseEN4absl8optionalINSt3__112basic_stringIcNSE_11char_traitsIcEENSE_9allocatorIcEEEEEE(%"class.net::HostResolverManager::DnsTask"*, %"class.base::TimeTicks"* dereferenceable(8), i32, %"class.net::DnsTransaction"*, i32, %"class.net::DnsResponse"*, %"class.absl::optional.313"*) #0 comdat align 2 {
  %8 = alloca %"class.net::HostCache::Entry", align 8
  %9 = alloca %"class.net::DnsResponseResultExtractor", align 8
  %10 = alloca %"class.net::HostCache::Entry", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.absl::optional.313", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = alloca %"class.absl::optional.313", align 8
  %15 = alloca %"class.absl::optional.313", align 8
  %16 = alloca %"class.net::HostCache::Entry", align 8
  %17 = alloca %"class.net::HostCache::Entry", align 8
  %18 = alloca %"class.net::HostCache::Entry", align 8
  %19 = alloca %"class.net::HostCache::Entry", align 8
  %20 = alloca %"class.net::HostCache::Entry", align 8
  %21 = alloca %"class.net::HostCache::Entry", align 8
  %22 = alloca %"class.net::HostCache::Entry", align 8
  %23 = alloca %"class.net::HostCache::Entry", align 8
  %24 = alloca %"class.net::HostCache::Entry", align 8
  %25 = alloca %"class.absl::optional.313", align 8
  %26 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 10
  %27 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %27, align 8
  %29 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %30 = bitcast %"class.std::__1::unique_ptr.286"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = ptrtoint %"class.std::__1::unique_ptr.286"* %28 to i64
  %33 = sub i64 %31, %32
  %34 = icmp eq i64 %33, 0
  %35 = inttoptr i64 %31 to %"class.std::__1::unique_ptr.286"*
  br i1 %34, label %54, label %36

36:                                               ; preds = %7
  %37 = ashr exact i64 %33, 3
  br label %38

38:                                               ; preds = %38, %36
  %39 = phi %"class.std::__1::unique_ptr.286"* [ %28, %36 ], [ %50, %38 ]
  %40 = phi i64 [ %37, %36 ], [ %49, %38 ]
  %41 = lshr i64 %40, 1
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %39, i64 %41
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.net::DnsTransaction"*, %"class.net::DnsTransaction"** %43, align 8
  %45 = icmp ult %"class.net::DnsTransaction"* %44, %3
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %42, i64 1
  %47 = xor i64 %41, -1
  %48 = add i64 %40, %47
  %49 = select i1 %45, i64 %48, i64 %41
  %50 = select i1 %45, %"class.std::__1::unique_ptr.286"* %46, %"class.std::__1::unique_ptr.286"* %39
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %52, label %38

52:                                               ; preds = %38
  %53 = ptrtoint %"class.std::__1::unique_ptr.286"* %50 to i64
  br label %54

54:                                               ; preds = %52, %7
  %55 = phi i64 [ %53, %52 ], [ %32, %7 ]
  %56 = phi %"class.std::__1::unique_ptr.286"* [ %50, %52 ], [ %28, %7 ]
  %57 = icmp eq %"class.std::__1::unique_ptr.286"* %56, %35
  br i1 %57, label %65, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %56, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.net::DnsTransaction"*, %"class.net::DnsTransaction"** %59, align 8
  %61 = icmp ugt %"class.net::DnsTransaction"* %60, %3
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %56, i64 1
  %64 = ptrtoint %"class.std::__1::unique_ptr.286"* %63 to i64
  br label %65

65:                                               ; preds = %62, %58, %54
  %66 = phi i64 [ %64, %62 ], [ %55, %54 ], [ %55, %58 ]
  %67 = inttoptr i64 %66 to %"class.std::__1::unique_ptr.286"*
  %68 = icmp eq %"class.std::__1::unique_ptr.286"* %56, %67
  %69 = select i1 %68, %"class.std::__1::unique_ptr.286"* %35, %"class.std::__1::unique_ptr.286"* %56
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.net::DnsTransaction"*, %"class.net::DnsTransaction"** %70, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %70, align 8
  %72 = tail call %"class.std::__1::unique_ptr.286"* @_ZN4base8internal9flat_treeINSt3__110unique_ptrIN3net14DnsTransactionENS2_14default_deleteIS5_EEEENS_8identityENS_19UniquePtrComparatorENS2_6vectorIS8_NS2_9allocatorIS8_EEEEE5eraseENS2_11__wrap_iterIPS8_EE(%"class.base::internal::flat_tree"* %26, %"class.std::__1::unique_ptr.286"* %69)
  %73 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 14
  %74 = load %"class.base::TickClock"*, %"class.base::TickClock"** %73, align 8
  %75 = bitcast %"class.base::TickClock"* %74 to i64 (%"class.base::TickClock"*)***
  %76 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %75, align 8
  %77 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %76, i64 2
  %78 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %77, align 8
  %79 = tail call i64 %78(%"class.base::TickClock"* %74) #18
  %80 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 15, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = sub nsw i64 %79, %81
  %83 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %84 = load i8, i8* %83, align 8, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %93, label %86

86:                                               ; preds = %65
  switch i32 %4, label %88 [
    i32 -803, label %93
    i32 -105, label %87
  ]

87:                                               ; preds = %86
  br label %93

88:                                               ; preds = %86
  %89 = icmp eq %"class.net::DnsResponse"* %5, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %88
  %91 = tail call zeroext i8 @_ZNK3net11DnsResponse5rcodeEv(%"class.net::DnsResponse"* nonnull %5) #18
  %92 = tail call i32 @_ZN3net38TranslateDnsRcodeForHttpssvcExperimentEh(i8 zeroext %91) #18
  br label %93

93:                                               ; preds = %65, %88, %86, %90, %87
  %94 = phi i32 [ 3, %87 ], [ %92, %90 ], [ 3, %65 ], [ 0, %86 ], [ 2, %88 ]
  %95 = bitcast %"class.net::HostCache::Entry"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %95) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 200, i1 false)
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* nonnull %8, i32 -2, i32 0, i8 0, i64 undef) #18
  %96 = icmp eq i32 %4, 0
  br i1 %96, label %103, label %97

97:                                               ; preds = %93
  %98 = icmp eq i32 %4, -105
  %99 = icmp ne %"class.net::DnsResponse"* %5, null
  %100 = and i1 %98, %99
  br i1 %100, label %101, label %114

101:                                              ; preds = %97
  %102 = call zeroext i1 @_ZNK3net11DnsResponse7IsValidEv(%"class.net::DnsResponse"* nonnull %5) #18
  br i1 %102, label %103, label %114

103:                                              ; preds = %101, %93
  %104 = bitcast %"class.net::DnsResponseResultExtractor"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #18
  %105 = getelementptr inbounds %"class.net::DnsResponseResultExtractor", %"class.net::DnsResponseResultExtractor"* %9, i64 0, i32 0
  store %"class.net::DnsResponse"* inttoptr (i64 -6148914691236517206 to %"class.net::DnsResponse"*), %"class.net::DnsResponse"** %105, align 8
  call void @_ZN3net26DnsResponseResultExtractorC1EPKNS_11DnsResponseE(%"class.net::DnsResponseResultExtractor"* nonnull %9, %"class.net::DnsResponse"* %5) #18
  %106 = call i32 @_ZNK3net26DnsResponseResultExtractor17ExtractDnsResultsENS_12DnsQueryTypeEPNS_9HostCache5EntryE(%"class.net::DnsResponseResultExtractor"* nonnull %9, i32 %2, %"class.net::HostCache::Entry"* nonnull %8) #18
  %107 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 0
  %108 = load i32, i32* %107, align 8
  switch i32 %108, label %109 [
    i32 0, label %113
    i32 -105, label %113
  ]

109:                                              ; preds = %103
  %110 = call { i8, i64 } @_ZNK3net9HostCache5Entry14GetOptionalTtlEv(%"class.net::HostCache::Entry"* nonnull %8) #18
  %111 = extractvalue { i8, i64 } %110, 0
  %112 = extractvalue { i8, i64 } %110, 1
  call void @_ZN3net19HostResolverManager7DnsTask9OnFailureEiNS_26DnsResponseResultExtractor15ExtractionErrorEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostResolverManager::DnsTask"* %0, i32 %108, i32 %106, i8 %111, i64 %112)
  call void @_ZN3net26DnsResponseResultExtractorD1Ev(%"class.net::DnsResponseResultExtractor"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #18
  br label %349

113:                                              ; preds = %103, %103
  call void @_ZN3net26DnsResponseResultExtractorD1Ev(%"class.net::DnsResponseResultExtractor"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #18
  br label %121

114:                                              ; preds = %101, %97
  %115 = or i32 %2, 1
  %116 = icmp eq i32 %115, 7
  br i1 %116, label %117, label %120

117:                                              ; preds = %114
  %118 = bitcast %"class.net::HostCache::Entry"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %118) #18
  call void @_ZN3net26DnsResponseResultExtractor17CreateEmptyResultENS_12DnsQueryTypeE(%"class.net::HostCache::Entry"* nonnull sret %10, i32 %2) #18
  %119 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* nonnull %8, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %10) #18
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %10) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %118) #18
  br label %121

120:                                              ; preds = %114
  call void @_ZN3net19HostResolverManager7DnsTask9OnFailureEiNS_26DnsResponseResultExtractor15ExtractionErrorEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostResolverManager::DnsTask"* %0, i32 %4, i32 0, i8 0, i64 undef)
  br label %349

121:                                              ; preds = %113, %117
  %122 = load i8, i8* %83, align 8, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %260, label %124

124:                                              ; preds = %121
  switch i32 %2, label %225 [
    i32 6, label %125
    i32 7, label %175
  ]

125:                                              ; preds = %124
  %126 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %127 = load i8, i8* %126, align 8, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %129, label %135

129:                                              ; preds = %125
  %130 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 1323, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.45, i64 0, i64 0)) #18
  %131 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #18
  %132 = load i8, i8* %83, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %135, !prof !177

134:                                              ; preds = %129
  call void @llvm.trap() #18
  unreachable

135:                                              ; preds = %125, %129
  %136 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  %137 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %138 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 0, i64 32, i1 false) #18
  %139 = load i8, i8* %138, align 8, !range !2
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %157, label %141

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %143 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %144 = bitcast %"class.std::__1::basic_string"* %142 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %144, i64 0, i32 1, i32 0
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %141
  %149 = bitcast %"class.std::__1::basic_string"* %143 to i8*
  %150 = bitcast %"class.std::__1::basic_string"* %142 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %150, i64 24, i1 false) #18
  br label %156

151:                                              ; preds = %141
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %155 = load i64, i64* %154, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %143, i8* %153, i64 %155) #18
  br label %156

156:                                              ; preds = %151, %148
  store i8 1, i8* %137, align 8
  br label %157

157:                                              ; preds = %135, %156
  %158 = load i8, i8* %126, align 8, !range !2
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %160, label %161, !prof !177

160:                                              ; preds = %157
  call void @llvm.trap() #18
  unreachable

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net15HttpssvcMetrics16SaveForIntegrityEN4absl8optionalINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_16HttpssvcDnsRcodeERKNS3_6vectorIbNS7_IbEEEEN4base9TimeDeltaE(%"class.net::HttpssvcMetrics"* %136, %"class.absl::optional.313"* nonnull %12, i32 %94, %"class.std::__1::vector.255"* dereferenceable(24) %162, i64 %82) #18
  %163 = load i8, i8* %137, align 8, !range !2
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %260, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %167 = bitcast %"class.std::__1::basic_string"* %166 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %168 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %167, i64 0, i32 1, i32 0
  %169 = load i8, i8* %168, align 1
  %170 = icmp slt i8 %169, 0
  br i1 %170, label %171, label %174

171:                                              ; preds = %165
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %166, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load i8*, i8** %172, align 8
  call void @_ZdlPv(i8* %173) #19
  br label %174

174:                                              ; preds = %171, %165
  store i8 0, i8* %137, align 8
  br label %260

175:                                              ; preds = %124
  %176 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %177 = load i8, i8* %176, align 8, !range !2
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %179, label %185

179:                                              ; preds = %175
  %180 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %180) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 1331, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.45, i64 0, i64 0)) #18
  %181 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %180) #18
  %182 = load i8, i8* %83, align 8, !range !2
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %184, label %185, !prof !177

184:                                              ; preds = %179
  call void @llvm.trap() #18
  unreachable

185:                                              ; preds = %175, %179
  %186 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %187, i8 0, i64 32, i1 false) #18
  %189 = load i8, i8* %188, align 8, !range !2
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %207, label %191

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %193 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %194 = bitcast %"class.std::__1::basic_string"* %192 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %194, i64 0, i32 1, i32 0
  %196 = load i8, i8* %195, align 1
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %201, label %198

198:                                              ; preds = %191
  %199 = bitcast %"class.std::__1::basic_string"* %193 to i8*
  %200 = bitcast %"class.std::__1::basic_string"* %192 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %199, i8* align 8 %200, i64 24, i1 false) #18
  br label %206

201:                                              ; preds = %191
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %192, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  %204 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %205 = load i64, i64* %204, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %193, i8* %203, i64 %205) #18
  br label %206

206:                                              ; preds = %201, %198
  store i8 1, i8* %187, align 8
  br label %207

207:                                              ; preds = %185, %206
  %208 = load i8, i8* %176, align 8, !range !2
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %210, label %211, !prof !177

210:                                              ; preds = %207
  call void @llvm.trap() #18
  unreachable

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net15HttpssvcMetrics12SaveForHttpsEN4absl8optionalINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_16HttpssvcDnsRcodeERKNS3_6vectorIbNS7_IbEEEEN4base9TimeDeltaE(%"class.net::HttpssvcMetrics"* %186, %"class.absl::optional.313"* nonnull %14, i32 %94, %"class.std::__1::vector.255"* dereferenceable(24) %212, i64 %82) #18
  %213 = load i8, i8* %187, align 8, !range !2
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %260, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %217 = bitcast %"class.std::__1::basic_string"* %216 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %218 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %217, i64 0, i32 1, i32 0
  %219 = load i8, i8* %218, align 1
  %220 = icmp slt i8 %219, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %216, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load i8*, i8** %222, align 8
  call void @_ZdlPv(i8* %223) #19
  br label %224

224:                                              ; preds = %221, %215
  store i8 0, i8* %187, align 8
  br label %260

225:                                              ; preds = %124
  %226 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  %227 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %228 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %227, i8 0, i64 32, i1 false) #18
  %229 = load i8, i8* %228, align 8, !range !2
  %230 = icmp eq i8 %229, 0
  br i1 %230, label %247, label %231

231:                                              ; preds = %225
  %232 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %233 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %234 = bitcast %"class.std::__1::basic_string"* %232 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %234, i64 0, i32 1, i32 0
  %236 = load i8, i8* %235, align 1
  %237 = icmp slt i8 %236, 0
  br i1 %237, label %241, label %238

238:                                              ; preds = %231
  %239 = bitcast %"class.std::__1::basic_string"* %233 to i8*
  %240 = bitcast %"class.std::__1::basic_string"* %232 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %239, i8* align 8 %240, i64 24, i1 false) #18
  br label %246

241:                                              ; preds = %231
  %242 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %232, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load i8*, i8** %242, align 8
  %244 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %245 = load i64, i64* %244, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %233, i8* %243, i64 %245) #18
  br label %246

246:                                              ; preds = %241, %238
  store i8 1, i8* %227, align 8
  br label %247

247:                                              ; preds = %225, %246
  call void @_ZN3net15HttpssvcMetrics19SaveForAddressQueryEN4absl8optionalINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEN4base9TimeDeltaENS_16HttpssvcDnsRcodeE(%"class.net::HttpssvcMetrics"* %226, %"class.absl::optional.313"* nonnull %15, i64 %82, i32 %94) #18
  %248 = load i8, i8* %227, align 8, !range !2
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %260, label %250

250:                                              ; preds = %247
  %251 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %252 = bitcast %"class.std::__1::basic_string"* %251 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %253 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %252, i64 0, i32 1, i32 0
  %254 = load i8, i8* %253, align 1
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %256, label %259

256:                                              ; preds = %250
  %257 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %251, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = load i8*, i8** %257, align 8
  call void @_ZdlPv(i8* %258) #19
  br label %259

259:                                              ; preds = %256, %250
  store i8 0, i8* %227, align 8
  br label %260

260:                                              ; preds = %121, %259, %247, %224, %211, %174, %161
  %261 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %262 = load i8, i8* %261, align 8, !range !2
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %264, label %266

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %298

266:                                              ; preds = %260
  switch i32 %2, label %267 [
    i32 1, label %269
    i32 2, label %272
    i32 6, label %279
    i32 7, label %279
  ]

267:                                              ; preds = %266
  %268 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %295

269:                                              ; preds = %266
  %270 = bitcast %"class.net::HostCache::Entry"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %270) #18
  %271 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* nonnull %17, %"class.net::HostCache::Entry"* dereferenceable(200) %271) #18
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* nonnull %18, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %8) #18
  call void @_ZN3net9HostCache5Entry12MergeEntriesES1_S1_(%"class.net::HostCache::Entry"* nonnull sret %16, %"class.net::HostCache::Entry"* nonnull %17, %"class.net::HostCache::Entry"* nonnull %18) #18
  br label %286

272:                                              ; preds = %266
  %273 = bitcast %"class.net::HostCache::Entry"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %273) #18
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* nonnull %20, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %8) #18
  %274 = load i8, i8* %261, align 8, !range !2
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %272
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #20
  unreachable

277:                                              ; preds = %272
  %278 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* nonnull %21, %"class.net::HostCache::Entry"* dereferenceable(200) %278) #18
  call void @_ZN3net9HostCache5Entry12MergeEntriesES1_S1_(%"class.net::HostCache::Entry"* nonnull sret %19, %"class.net::HostCache::Entry"* nonnull %20, %"class.net::HostCache::Entry"* nonnull %21) #18
  br label %286

279:                                              ; preds = %266, %266
  %280 = bitcast %"class.net::HostCache::Entry"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %280) #18
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* nonnull %23, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %8) #18
  %281 = load i8, i8* %261, align 8, !range !2
  %282 = icmp eq i8 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %279
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #20
  unreachable

284:                                              ; preds = %279
  %285 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* nonnull %24, %"class.net::HostCache::Entry"* dereferenceable(200) %285) #18
  call void @_ZN3net9HostCache5Entry12MergeEntriesES1_S1_(%"class.net::HostCache::Entry"* nonnull sret %22, %"class.net::HostCache::Entry"* nonnull %23, %"class.net::HostCache::Entry"* nonnull %24) #18
  br label %286

286:                                              ; preds = %269, %277, %284
  %287 = phi %"class.net::HostCache::Entry"* [ %16, %269 ], [ %19, %277 ], [ %22, %284 ]
  %288 = phi %"class.net::HostCache::Entry"* [ %18, %269 ], [ %21, %277 ], [ %24, %284 ]
  %289 = phi %"class.net::HostCache::Entry"* [ %17, %269 ], [ %20, %277 ], [ %23, %284 ]
  %290 = phi i8* [ %270, %269 ], [ %273, %277 ], [ %280, %284 ]
  %291 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* nonnull %8, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %287) #18
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %287) #18
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %288) #18
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %289) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %290) #18
  %292 = load i8, i8* %261, align 8
  %293 = icmp eq i8 %292, 0
  %294 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 2, i32 0
  br i1 %293, label %298, label %295

295:                                              ; preds = %267, %286
  %296 = phi %"class.net::HostCache::Entry"* [ %268, %267 ], [ %294, %286 ]
  %297 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %296, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %8) #18
  br label %300

298:                                              ; preds = %264, %286
  %299 = phi %"class.net::HostCache::Entry"* [ %265, %264 ], [ %294, %286 ]
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* %299, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %8) #18
  store i8 1, i8* %261, align 8
  br label %300

300:                                              ; preds = %295, %298
  %301 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 12
  %302 = load i32, i32* %301, align 4
  %303 = add nsw i32 %302, 1
  store i32 %303, i32* %301, align 4
  %304 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 11
  %305 = load i32, i32* %304, align 8
  %306 = icmp slt i32 %303, %305
  br i1 %306, label %307, label %347

307:                                              ; preds = %300
  %308 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 7
  %309 = load %"class.net::HostResolverManager::DnsTask::Delegate"*, %"class.net::HostResolverManager::DnsTask::Delegate"** %308, align 8
  %310 = bitcast %"class.net::HostResolverManager::DnsTask::Delegate"* %309 to void (%"class.net::HostResolverManager::DnsTask::Delegate"*)***
  %311 = load void (%"class.net::HostResolverManager::DnsTask::Delegate"*)**, void (%"class.net::HostResolverManager::DnsTask::Delegate"*)*** %310, align 8
  %312 = getelementptr inbounds void (%"class.net::HostResolverManager::DnsTask::Delegate"*)*, void (%"class.net::HostResolverManager::DnsTask::Delegate"*)** %311, i64 1
  %313 = load void (%"class.net::HostResolverManager::DnsTask::Delegate"*)*, void (%"class.net::HostResolverManager::DnsTask::Delegate"*)** %312, align 8
  call void %313(%"class.net::HostResolverManager::DnsTask::Delegate"* %309) #18
  %314 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %315 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %314, i8 0, i64 32, i1 false) #18
  %316 = load i8, i8* %315, align 8, !range !2
  %317 = icmp eq i8 %316, 0
  br i1 %317, label %334, label %318

318:                                              ; preds = %307
  %319 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %320 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %25, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %321 = bitcast %"class.std::__1::basic_string"* %319 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %322 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %321, i64 0, i32 1, i32 0
  %323 = load i8, i8* %322, align 1
  %324 = icmp slt i8 %323, 0
  br i1 %324, label %328, label %325

325:                                              ; preds = %318
  %326 = bitcast %"class.std::__1::basic_string"* %320 to i8*
  %327 = bitcast %"class.std::__1::basic_string"* %319 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %326, i8* align 8 %327, i64 24, i1 false) #18
  br label %333

328:                                              ; preds = %318
  %329 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %319, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %330 = load i8*, i8** %329, align 8
  %331 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %332 = load i64, i64* %331, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %320, i8* %330, i64 %332) #18
  br label %333

333:                                              ; preds = %328, %325
  store i8 1, i8* %314, align 8
  br label %334

334:                                              ; preds = %307, %333
  call void @_ZN3net19HostResolverManager7DnsTask32MaybeStartExperimentalQueryTimerEN4absl8optionalINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE(%"class.net::HostResolverManager::DnsTask"* %0, %"class.absl::optional.313"* nonnull %25)
  %335 = load i8, i8* %314, align 8, !range !2
  %336 = icmp eq i8 %335, 0
  br i1 %336, label %349, label %337

337:                                              ; preds = %334
  %338 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %25, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %339 = bitcast %"class.std::__1::basic_string"* %338 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %340 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %339, i64 0, i32 1, i32 0
  %341 = load i8, i8* %340, align 1
  %342 = icmp slt i8 %341, 0
  br i1 %342, label %343, label %346

343:                                              ; preds = %337
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %338, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load i8*, i8** %344, align 8
  call void @_ZdlPv(i8* %345) #19
  br label %346

346:                                              ; preds = %343, %337
  store i8 0, i8* %314, align 8
  br label %349

347:                                              ; preds = %300
  %348 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 18, i32 0
  call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %348) #18
  call void @_ZN3net19HostResolverManager7DnsTask26ProcessResultsOnCompletionEv(%"class.net::HostResolverManager::DnsTask"* %0)
  br label %349

349:                                              ; preds = %346, %334, %109, %347, %120
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %95) #18
  %350 = icmp eq %"class.net::DnsTransaction"* %71, null
  br i1 %350, label %356, label %351

351:                                              ; preds = %349
  %352 = bitcast %"class.net::DnsTransaction"* %71 to void (%"class.net::DnsTransaction"*)***
  %353 = load void (%"class.net::DnsTransaction"*)**, void (%"class.net::DnsTransaction"*)*** %352, align 8
  %354 = getelementptr inbounds void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %353, i64 1
  %355 = load void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %354, align 8
  call void %355(%"class.net::DnsTransaction"* nonnull %71) #18
  br label %356

356:                                              ; preds = %349, %351
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager7DnsTaskEFvRKNS_9TimeTicksENS3_12DnsQueryTypeEPNS3_14DnsTransactionEiPKNS3_11DnsResponseEN4absl8optionalINSt3__112basic_stringIcNSH_11char_traitsIcEENSH_9allocatorIcEEEEEEEJNS0_17UnretainedWrapperIS5_EES6_S9_EEEFvSB_iSE_SO_EE7RunOnceEPNS0_13BindStateBaseESB_iSE_OSO_(%"class.base::internal::BindStateBase"*, %"class.net::DnsTransaction"*, i32, %"class.net::DnsResponse"*, %"class.absl::optional.313"* dereferenceable(32)) #0 comdat align 2 {
  %6 = alloca %"class.absl::optional.313", align 8
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %8, i64 1
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to %"class.base::TimeTicks"*
  %13 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %8, i64 2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to i32*
  %15 = bitcast %"class.base::internal::BindStateBase"* %7 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #18
  %21 = getelementptr inbounds i8, i8* %10, i64 %19
  %22 = bitcast i8* %21 to %"class.net::HostResolverManager::DnsTask"*
  %23 = and i64 %16, 1
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %5
  %26 = bitcast i8* %21 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = add i64 %16, -1
  %29 = getelementptr i8, i8* %27, i64 %28
  %30 = bitcast i8* %29 to void (%"class.net::HostResolverManager::DnsTask"*, %"class.base::TimeTicks"*, i32, %"class.net::DnsTransaction"*, i32, %"class.net::DnsResponse"*, %"class.absl::optional.313"*)**
  %31 = load void (%"class.net::HostResolverManager::DnsTask"*, %"class.base::TimeTicks"*, i32, %"class.net::DnsTransaction"*, i32, %"class.net::DnsResponse"*, %"class.absl::optional.313"*)*, void (%"class.net::HostResolverManager::DnsTask"*, %"class.base::TimeTicks"*, i32, %"class.net::DnsTransaction"*, i32, %"class.net::DnsResponse"*, %"class.absl::optional.313"*)** %30, align 8
  br label %34

32:                                               ; preds = %5
  %33 = inttoptr i64 %16 to void (%"class.net::HostResolverManager::DnsTask"*, %"class.base::TimeTicks"*, i32, %"class.net::DnsTransaction"*, i32, %"class.net::DnsResponse"*, %"class.absl::optional.313"*)*
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi void (%"class.net::HostResolverManager::DnsTask"*, %"class.base::TimeTicks"*, i32, %"class.net::DnsTransaction"*, i32, %"class.net::DnsResponse"*, %"class.absl::optional.313"*)* [ %31, %25 ], [ %33, %32 ]
  %36 = load i32, i32* %14, align 4
  %37 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 32, i1 false) #18
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %43 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %44 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #18
  store i8 1, i8* %20, align 8
  br label %45

45:                                               ; preds = %40, %34
  call void %35(%"class.net::HostResolverManager::DnsTask"* %22, %"class.base::TimeTicks"* dereferenceable(8) %12, i32 %36, %"class.net::DnsTransaction"* %1, i32 %2, %"class.net::DnsResponse"* %3, %"class.absl::optional.313"* nonnull %6) #18
  %46 = load i8, i8* %20, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %58, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %50 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %56) #19
  br label %57

57:                                               ; preds = %54, %48
  store i8 0, i8* %20, align 8
  br label %58

58:                                               ; preds = %45, %57
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net19HostResolverManager7DnsTaskEFvRKNS_9TimeTicksENS2_12DnsQueryTypeEPNS2_14DnsTransactionEiPKNS2_11DnsResponseEN4absl8optionalINSt3__112basic_stringIcNSG_11char_traitsIcEENSG_9allocatorIcEEEEEEEJNS0_17UnretainedWrapperIS4_EES5_S8_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #19
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr.286"* @_ZN4base8internal9flat_treeINSt3__110unique_ptrIN3net14DnsTransactionENS2_14default_deleteIS5_EEEENS_8identityENS_19UniquePtrComparatorENS2_6vectorIS8_NS2_9allocatorIS8_EEEEE5eraseENS2_11__wrap_iterIPS8_EE(%"class.base::internal::flat_tree"*, %"class.std::__1::unique_ptr.286"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.286"* %5, %1
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.46, i64 0, i64 0), i32 879, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.47, i64 0, i64 0)) #18
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #18
  %10 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %4, align 8
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi %"class.std::__1::unique_ptr.286"* [ %5, %2 ], [ %10, %7 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %1, i64 1
  %14 = icmp eq %"class.std::__1::unique_ptr.286"* %13, %12
  br i1 %14, label %37, label %15

15:                                               ; preds = %11, %30
  %16 = phi %"class.std::__1::unique_ptr.286"* [ %32, %30 ], [ %1, %11 ]
  %17 = phi %"class.std::__1::unique_ptr.286"* [ %31, %30 ], [ %13, %11 ]
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::unique_ptr.286"* %17 to i64*
  %20 = load i64, i64* %19, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %18, align 8
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %16, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.net::DnsTransaction"*, %"class.net::DnsTransaction"** %21, align 8
  %23 = bitcast %"class.std::__1::unique_ptr.286"* %16 to i64*
  store i64 %20, i64* %23, align 8
  %24 = icmp eq %"class.net::DnsTransaction"* %22, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %15
  %26 = bitcast %"class.net::DnsTransaction"* %22 to void (%"class.net::DnsTransaction"*)***
  %27 = load void (%"class.net::DnsTransaction"*)**, void (%"class.net::DnsTransaction"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %27, i64 1
  %29 = load void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %28, align 8
  call void %29(%"class.net::DnsTransaction"* nonnull %22) #18
  br label %30

30:                                               ; preds = %25, %15
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %17, i64 1
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %16, i64 1
  %33 = icmp eq %"class.std::__1::unique_ptr.286"* %31, %12
  br i1 %33, label %34, label %15

34:                                               ; preds = %30
  %35 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %4, align 8
  %36 = icmp eq %"class.std::__1::unique_ptr.286"* %35, %32
  br i1 %36, label %53, label %37

37:                                               ; preds = %34, %11
  %38 = phi %"class.std::__1::unique_ptr.286"* [ %32, %34 ], [ %1, %11 ]
  %39 = phi %"class.std::__1::unique_ptr.286"* [ %35, %34 ], [ %12, %11 ]
  br label %40

40:                                               ; preds = %51, %37
  %41 = phi %"class.std::__1::unique_ptr.286"* [ %42, %51 ], [ %39, %37 ]
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %41, i64 -1
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.net::DnsTransaction"*, %"class.net::DnsTransaction"** %43, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %43, align 8
  %45 = icmp eq %"class.net::DnsTransaction"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.net::DnsTransaction"* %44 to void (%"class.net::DnsTransaction"*)***
  %48 = load void (%"class.net::DnsTransaction"*)**, void (%"class.net::DnsTransaction"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %48, i64 1
  %50 = load void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %49, align 8
  call void %50(%"class.net::DnsTransaction"* nonnull %44) #18
  br label %51

51:                                               ; preds = %46, %40
  %52 = icmp eq %"class.std::__1::unique_ptr.286"* %42, %38
  br i1 %52, label %53, label %40

53:                                               ; preds = %51, %34
  %54 = phi %"class.std::__1::unique_ptr.286"* [ %32, %34 ], [ %38, %51 ]
  store %"class.std::__1::unique_ptr.286"* %54, %"class.std::__1::unique_ptr.286"** %4, align 8
  ret %"class.std::__1::unique_ptr.286"* %1
}

declare i32 @_ZN3net38TranslateDnsRcodeForHttpssvcExperimentEh(i8 zeroext) local_unnamed_addr #1

declare zeroext i8 @_ZNK3net11DnsResponse5rcodeEv(%"class.net::DnsResponse"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net11DnsResponse7IsValidEv(%"class.net::DnsResponse"*) local_unnamed_addr #1

declare void @_ZN3net26DnsResponseResultExtractorC1EPKNS_11DnsResponseE(%"class.net::DnsResponseResultExtractor"*, %"class.net::DnsResponse"*) unnamed_addr #1

declare i32 @_ZNK3net26DnsResponseResultExtractor17ExtractDnsResultsENS_12DnsQueryTypeEPNS_9HostCache5EntryE(%"class.net::DnsResponseResultExtractor"*, i32, %"class.net::HostCache::Entry"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager7DnsTask9OnFailureEiNS_26DnsResponseResultExtractor15ExtractionErrorEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostResolverManager::DnsTask"*, i32, i32, i8, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.base::Value", align 8
  %7 = alloca %"class.base::Value", align 8
  %8 = alloca %"class.net::HostCache::Entry", align 8
  %9 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net15HttpssvcMetrics23SaveAddressQueryFailureEv(%"class.net::HttpssvcMetrics"* %13) #18
  br label %14

14:                                               ; preds = %5, %12
  %15 = bitcast %"class.net::HostCache::Entry"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %15) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 200, i1 false)
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* nonnull %8, i32 %1, i32 0, i8 %3, i64 %4) #18
  %16 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 8, i32 1
  %17 = load %"class.net::NetLog"*, %"class.net::NetLog"** %16, align 8
  %18 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %17, i64 0, i32 3
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %33, label %21, !prof !41

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 8, i32 0
  %23 = bitcast %"class.base::Value"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 32, i1 false) #18, !alias.scope !178
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %7, i8 zeroext 6) #18
  %24 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %8, i64 0, i32 0
  %25 = load i32, i32* %24, align 8, !noalias !183
  %26 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i64 0, i64 0), i64 9, i32 %25) #18
  %27 = icmp eq i32 %2, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %21
  %29 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i64 0, i64 0), i64 9, i32 %2) #18
  br label %30

30:                                               ; preds = %21, %28
  %31 = bitcast %"class.base::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #18, !noalias !178
  call void @_ZNK3net9HostCache5Entry12NetLogParamsEv(%"class.base::Value"* nonnull sret %6, %"class.net::HostCache::Entry"* nonnull %8) #18
  %32 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.49, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %6) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #18, !noalias !178
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %17, i32 17, %"struct.net::NetLogSource"* dereferenceable(16) %22, i32 2, %"class.base::Value"* nonnull dereferenceable(32) %7) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #18
  br label %33

33:                                               ; preds = %14, %30
  %34 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 7
  %35 = load %"class.net::HostResolverManager::DnsTask::Delegate"*, %"class.net::HostResolverManager::DnsTask::Delegate"** %34, align 8
  %36 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 15, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 4
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp ne i8 %39, 0
  %41 = bitcast %"class.net::HostResolverManager::DnsTask::Delegate"* %35 to void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64, %"class.net::HostCache::Entry"*, i1)***
  %42 = load void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64, %"class.net::HostCache::Entry"*, i1)**, void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64, %"class.net::HostCache::Entry"*, i1)*** %41, align 8
  %43 = load void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64, %"class.net::HostCache::Entry"*, i1)*, void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64, %"class.net::HostCache::Entry"*, i1)** %42, align 8
  call void %43(%"class.net::HostResolverManager::DnsTask::Delegate"* %35, i64 %37, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %8, i1 zeroext %40) #18
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %15) #18
  ret void
}

declare { i8, i64 } @_ZNK3net9HostCache5Entry14GetOptionalTtlEv(%"class.net::HostCache::Entry"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net26DnsResponseResultExtractorD1Ev(%"class.net::DnsResponseResultExtractor"*) unnamed_addr #3

declare void @_ZN3net26DnsResponseResultExtractor17CreateEmptyResultENS_12DnsQueryTypeE(%"class.net::HostCache::Entry"* sret, i32) local_unnamed_addr #1

declare void @_ZN3net15HttpssvcMetrics16SaveForIntegrityEN4absl8optionalINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_16HttpssvcDnsRcodeERKNS3_6vectorIbNS7_IbEEEEN4base9TimeDeltaE(%"class.net::HttpssvcMetrics"*, %"class.absl::optional.313"*, i32, %"class.std::__1::vector.255"* dereferenceable(24), i64) local_unnamed_addr #1

declare void @_ZN3net15HttpssvcMetrics12SaveForHttpsEN4absl8optionalINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_16HttpssvcDnsRcodeERKNS3_6vectorIbNS7_IbEEEEN4base9TimeDeltaE(%"class.net::HttpssvcMetrics"*, %"class.absl::optional.313"*, i32, %"class.std::__1::vector.255"* dereferenceable(24), i64) local_unnamed_addr #1

declare void @_ZN3net15HttpssvcMetrics19SaveForAddressQueryEN4absl8optionalINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEN4base9TimeDeltaENS_16HttpssvcDnsRcodeE(%"class.net::HttpssvcMetrics"*, %"class.absl::optional.313"*, i64, i32) local_unnamed_addr #1

declare void @_ZN3net9HostCache5Entry12MergeEntriesES1_S1_(%"class.net::HostCache::Entry"* sret, %"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager7DnsTask32MaybeStartExperimentalQueryTimerEN4absl8optionalINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE(%"class.net::HostResolverManager::DnsTask"*, %"class.absl::optional.313"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.base::OnceCallback.335", align 8
  %8 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features12kDnsHttpssvcE) #18
  br i1 %8, label %9, label %115

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam.614"* nonnull @_ZN3net8features24kDnsHttpssvcUseIntegrityE) #18
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  %12 = tail call zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam.614"* nonnull @_ZN3net8features23kDnsHttpssvcUseHttpssvcE) #18
  br i1 %12, label %13, label %115

13:                                               ; preds = %11, %9
  %14 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 18
  %15 = getelementptr inbounds %"class.base::OneShotTimer", %"class.base::OneShotTimer"* %14, i64 0, i32 0
  %16 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %15) #18
  br i1 %16, label %115, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %18, align 8
  %20 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %21 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %20, align 8
  %22 = icmp eq %"class.std::__1::unique_ptr.286"* %19, %21
  br i1 %22, label %44, label %23

23:                                               ; preds = %17, %41
  %24 = phi %"class.std::__1::unique_ptr.286"* [ %42, %41 ], [ %19, %17 ]
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.net::DnsTransaction"*, %"class.net::DnsTransaction"** %25, align 8
  %27 = bitcast %"class.net::DnsTransaction"* %26 to i16 (%"class.net::DnsTransaction"*)***
  %28 = load i16 (%"class.net::DnsTransaction"*)**, i16 (%"class.net::DnsTransaction"*)*** %27, align 8
  %29 = getelementptr inbounds i16 (%"class.net::DnsTransaction"*)*, i16 (%"class.net::DnsTransaction"*)** %28, i64 3
  %30 = load i16 (%"class.net::DnsTransaction"*)*, i16 (%"class.net::DnsTransaction"*)** %29, align 8
  %31 = tail call zeroext i16 %30(%"class.net::DnsTransaction"* %26) #18
  %32 = icmp eq i16 %31, -15
  br i1 %32, label %41, label %33

33:                                               ; preds = %23
  %34 = load %"class.net::DnsTransaction"*, %"class.net::DnsTransaction"** %25, align 8
  %35 = bitcast %"class.net::DnsTransaction"* %34 to i16 (%"class.net::DnsTransaction"*)***
  %36 = load i16 (%"class.net::DnsTransaction"*)**, i16 (%"class.net::DnsTransaction"*)*** %35, align 8
  %37 = getelementptr inbounds i16 (%"class.net::DnsTransaction"*)*, i16 (%"class.net::DnsTransaction"*)** %36, i64 3
  %38 = load i16 (%"class.net::DnsTransaction"*)*, i16 (%"class.net::DnsTransaction"*)** %37, align 8
  %39 = tail call zeroext i16 %38(%"class.net::DnsTransaction"* %34) #18
  %40 = icmp eq i16 %39, 65
  br i1 %40, label %41, label %115

41:                                               ; preds = %33, %23
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %24, i64 1
  %43 = icmp eq %"class.std::__1::unique_ptr.286"* %42, %21
  br i1 %43, label %44, label %23

44:                                               ; preds = %41, %17
  %45 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  %46 = tail call i64 @_ZN3net8features23dns_httpssvc_experiment20GetExtraTimeAbsoluteEv() #18
  store i64 %46, i64* %3, align 8
  %47 = tail call i32 @_ZNK4base12FeatureParamIiLb0EE3GetEv(%"struct.base::FeatureParam.650"* nonnull @_ZN3net8features28kDnsHttpssvcExtraTimePercentE) #18
  %48 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 14
  %49 = load %"class.base::TickClock"*, %"class.base::TickClock"** %48, align 8
  %50 = bitcast %"class.base::TickClock"* %49 to i64 (%"class.base::TickClock"*)***
  %51 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %50, align 8
  %52 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %51, i64 2
  %53 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %52, align 8
  %54 = tail call i64 %53(%"class.base::TickClock"* %49) #18
  %55 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 15, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = sub nsw i64 %54, %56
  %58 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58)
  store i64 -6148914691236517206, i64* %4, align 8
  %59 = sext i32 %47 to i64
  %60 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %57, i64 %59) #18
  %61 = extractvalue { i64, i1 } %60, 1
  %62 = extractvalue { i64, i1 } %60, 0
  br i1 %61, label %63, label %69

63:                                               ; preds = %44
  %64 = lshr i64 %57, 63
  %65 = trunc i64 %64 to i32
  %66 = lshr i32 %47, 31
  %67 = icmp eq i32 %66, %65
  %68 = select i1 %67, i64 9223372036854775807, i64 -9223372036854775808
  br label %69

69:                                               ; preds = %44, %63
  %70 = phi i64 [ %62, %44 ], [ %68, %63 ]
  %71 = sdiv i64 %70, 100
  store i64 %71, i64* %4, align 8
  %72 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72)
  store i64 1000, i64* %5, align 8
  %73 = icmp slt i64 %70, 100000
  %74 = bitcast i64* %5 to %"class.base::TimeDelta"*
  %75 = bitcast i64* %4 to %"class.base::TimeDelta"*
  %76 = select i1 %73, %"class.base::TimeDelta"* %74, %"class.base::TimeDelta"* %75
  %77 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %76, i64 0, i32 0
  %78 = load i64, i64* %77, align 8
  store i64 %78, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72)
  %79 = icmp slt i64 %78, %46
  %80 = bitcast i64* %3 to %"class.base::TimeDelta"*
  %81 = select i1 %79, %"class.base::TimeDelta"* %75, %"class.base::TimeDelta"* %80
  %82 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %81, i64 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %84) #18
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 1524) #18
  %85 = ptrtoint %"class.net::HostResolverManager::DnsTask"* %0 to i64
  %86 = call i8* @_Znwm(i64 88) #19, !noalias !184
  %87 = bitcast i8* %86 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %87, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager7DnsTaskEFvN4absl8optionalINSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEEEEJNS0_17UnretainedWrapperIS5_EESF_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net19HostResolverManager7DnsTaskEFvN4absl8optionalINSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEEEEJNS0_17UnretainedWrapperIS4_EESE_EE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !184
  %88 = getelementptr inbounds i8, i8* %86, i64 32
  %89 = bitcast i8* %88 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::HostResolverManager::DnsTask"*, %"class.absl::optional.313"*)* @_ZN3net19HostResolverManager7DnsTask26OnExperimentalQueryTimeoutEN4absl8optionalINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE to i64), i64 0>, <2 x i64>* %89, align 8, !noalias !184
  %90 = getelementptr inbounds i8, i8* %86, i64 48
  %91 = bitcast i8* %90 to i64*
  store i64 %85, i64* %91, align 8, !noalias !184
  %92 = getelementptr inbounds i8, i8* %86, i64 56
  %93 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 32, i1 false) #18, !noalias !184
  %94 = load i8, i8* %93, align 8, !range !2, !noalias !184
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %112, label %96

96:                                               ; preds = %69
  %97 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %98 = getelementptr inbounds i8, i8* %86, i64 64
  %99 = bitcast %"class.std::__1::basic_string"* %97 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1, !noalias !184
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %96
  %104 = bitcast %"class.std::__1::basic_string"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %104, i64 24, i1 false) #18, !noalias !184
  br label %111

105:                                              ; preds = %96
  %106 = bitcast i8* %98 to %"class.std::__1::basic_string"*
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8, !noalias !184
  %109 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %110 = load i64, i64* %109, align 8, !noalias !184
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %106, i8* %108, i64 %110) #18, !noalias !184
  br label %111

111:                                              ; preds = %105, %103
  store i8 1, i8* %92, align 8, !noalias !184
  br label %112

112:                                              ; preds = %69, %111
  %113 = bitcast %"class.base::OnceCallback.335"* %7 to i8**
  store i8* %86, i8** %113, align 8, !alias.scope !184
  call void @_ZN4base12OneShotTimer5StartERKNS_8LocationENS_9TimeDeltaENS_12OnceCallbackIFvvEEE(%"class.base::OneShotTimer"* %14, %"class.base::Location"* nonnull dereferenceable(32) %6, i64 %83, %"class.base::OnceCallback.335"* nonnull %7) #18
  %114 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %114) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %84) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  br label %115

115:                                              ; preds = %33, %13, %2, %11, %112
  ret void
}

declare void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager7DnsTask26ProcessResultsOnCompletionEv(%"class.net::HostResolverManager::DnsTask"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::Value", align 8
  %4 = alloca %"class.net::HostCache::Entry", align 8
  %5 = alloca %"class.net::AddressList", align 8
  %6 = alloca %"class.base::OnceCallback.662", align 8
  %7 = alloca %"class.base::WeakPtr.663", align 8
  %8 = bitcast %"class.net::HostCache::Entry"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %8) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 200, i1 false)
  %9 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %13, !prof !177

12:                                               ; preds = %1
  tail call void @llvm.trap() #18
  unreachable

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* nonnull %4, %"class.net::HostCache::Entry"* dereferenceable(200) %14) #18
  %15 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %93, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %20, align 8
  %22 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %23 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %22, align 8
  %24 = icmp eq %"class.net::IPEndPoint"* %21, %23
  br i1 %24, label %93, label %25

25:                                               ; preds = %18
  %26 = call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %21) #18
  %27 = icmp eq i32 %26, 2
  br i1 %27, label %43, label %28

28:                                               ; preds = %25
  %29 = load i8, i8* %15, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #20
  unreachable

32:                                               ; preds = %28
  %33 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %20, align 8
  %34 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %22, align 8
  %35 = icmp eq %"class.net::IPEndPoint"* %33, %34
  br i1 %35, label %93, label %38

36:                                               ; preds = %38
  %37 = icmp eq %"class.net::IPEndPoint"* %42, %34
  br i1 %37, label %93, label %38

38:                                               ; preds = %32, %36
  %39 = phi %"class.net::IPEndPoint"* [ %42, %36 ], [ %33, %32 ]
  %40 = call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %39) #18
  %41 = icmp eq i32 %40, 2
  %42 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %39, i64 1
  br i1 %41, label %43, label %36

43:                                               ; preds = %38, %25
  %44 = bitcast %"class.net::AddressList"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %44) #18
  %45 = bitcast %"class.net::AddressList"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 48, i1 false)
  %46 = load i8, i8* %15, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %43
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #20
  unreachable

49:                                               ; preds = %43
  call void @_ZN3net11AddressListC1ERKS0_(%"class.net::AddressList"* nonnull %5, %"class.net::AddressList"* dereferenceable(48) %19) #18
  %50 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 1
  %51 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %50, align 8
  %52 = bitcast %"class.net::DnsClient"* %51 to %"class.net::AddressSorter"* (%"class.net::DnsClient"*)***
  %53 = load %"class.net::AddressSorter"* (%"class.net::DnsClient"*)**, %"class.net::AddressSorter"* (%"class.net::DnsClient"*)*** %52, align 8
  %54 = getelementptr inbounds %"class.net::AddressSorter"* (%"class.net::DnsClient"*)*, %"class.net::AddressSorter"* (%"class.net::DnsClient"*)** %53, i64 15
  %55 = load %"class.net::AddressSorter"* (%"class.net::DnsClient"*)*, %"class.net::AddressSorter"* (%"class.net::DnsClient"*)** %54, align 8
  %56 = call %"class.net::AddressSorter"* %55(%"class.net::DnsClient"* %51) #18
  %57 = bitcast %"class.base::WeakPtr.663"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #18
  %58 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #18, !noalias !189
  %59 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %59) #18, !noalias !189
  %60 = getelementptr inbounds %"class.base::WeakPtr.663", %"class.base::WeakPtr.663"* %7, i64 0, i32 0
  %61 = ptrtoint %"class.net::HostResolverManager::DnsTask"* %0 to i64
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %60, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %61) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #18, !noalias !189
  %62 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 14
  %63 = load %"class.base::TickClock"*, %"class.base::TickClock"** %62, align 8
  %64 = bitcast %"class.base::TickClock"* %63 to i64 (%"class.base::TickClock"*)***
  %65 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %64, align 8
  %66 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %65, i64 2
  %67 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %66, align 8
  %68 = call i64 %67(%"class.base::TickClock"* %63) #18
  %69 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 4
  %70 = call i8* @_Znwm(i64 280) #19, !noalias !192
  %71 = bitcast i8* %70 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %71, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1, %"class.net::AddressList"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager7DnsTaskEFvNS_9TimeTicksENS3_9HostCache5EntryEbbRKNS3_11AddressListEEJNS_7WeakPtrIS5_EES6_S8_bEEEFvbSB_EE7RunOnceEPNS0_13BindStateBaseEbSB_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net19HostResolverManager7DnsTaskEFvNS_9TimeTicksENS2_9HostCache5EntryEbbRKNS2_11AddressListEEJNS_7WeakPtrIS4_EES5_S7_bEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManager7DnsTaskEFvNS_9TimeTicksENS3_9HostCache5EntryEbbRKNS3_11AddressListEEJNS_7WeakPtrIS5_EES6_S8_bEEEEEbPKNS0_13BindStateBaseENSH_21CancellationQueryModeE) #18, !noalias !192
  %72 = getelementptr inbounds i8, i8* %70, i64 32
  %73 = bitcast i8* %72 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::HostResolverManager::DnsTask"*, i64, %"class.net::HostCache::Entry"*, i1, i1, %"class.net::AddressList"*)* @_ZN3net19HostResolverManager7DnsTask14OnSortCompleteEN4base9TimeTicksENS_9HostCache5EntryEbbRKNS_11AddressListE to i64), i64 0>, <2 x i64>* %73, align 8, !noalias !192
  %74 = getelementptr inbounds i8, i8* %70, i64 48
  %75 = bitcast i8* %74 to %"class.base::internal::WeakReference"*
  %76 = getelementptr inbounds %"class.base::WeakPtr.663", %"class.base::WeakPtr.663"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %75, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %76) #18, !noalias !192
  %77 = getelementptr inbounds i8, i8* %70, i64 56
  %78 = bitcast i8* %77 to i64*
  %79 = getelementptr inbounds %"class.base::WeakPtr.663", %"class.base::WeakPtr.663"* %7, i64 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8, !noalias !192
  store i64 %80, i64* %78, align 8, !noalias !192
  %81 = getelementptr inbounds i8, i8* %70, i64 64
  %82 = bitcast i8* %81 to i64*
  store i64 %68, i64* %82, align 8, !noalias !192
  %83 = getelementptr inbounds i8, i8* %70, i64 72
  %84 = bitcast i8* %83 to %"class.net::HostCache::Entry"*
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* %84, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %4) #18, !noalias !192
  %85 = getelementptr inbounds i8, i8* %70, i64 272
  %86 = load i8, i8* %69, align 1, !range !2, !noalias !192
  store i8 %86, i8* %85, align 1, !noalias !192
  %87 = bitcast %"class.base::OnceCallback.662"* %6 to i8**
  store i8* %70, i8** %87, align 8, !alias.scope !192
  %88 = bitcast %"class.net::AddressSorter"* %56 to void (%"class.net::AddressSorter"*, %"class.net::AddressList"*, %"class.base::OnceCallback.662"*)***
  %89 = load void (%"class.net::AddressSorter"*, %"class.net::AddressList"*, %"class.base::OnceCallback.662"*)**, void (%"class.net::AddressSorter"*, %"class.net::AddressList"*, %"class.base::OnceCallback.662"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.net::AddressSorter"*, %"class.net::AddressList"*, %"class.base::OnceCallback.662"*)*, void (%"class.net::AddressSorter"*, %"class.net::AddressList"*, %"class.base::OnceCallback.662"*)** %89, i64 2
  %91 = load void (%"class.net::AddressSorter"*, %"class.net::AddressList"*, %"class.base::OnceCallback.662"*)*, void (%"class.net::AddressSorter"*, %"class.net::AddressList"*, %"class.base::OnceCallback.662"*)** %90, align 8
  call void %91(%"class.net::AddressSorter"* %56, %"class.net::AddressList"* nonnull dereferenceable(48) %5, %"class.base::OnceCallback.662"* nonnull %6) #18
  %92 = getelementptr inbounds %"class.base::OnceCallback.662", %"class.base::OnceCallback.662"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %92) #18
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %60) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #18
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %44) #18
  br label %113

93:                                               ; preds = %36, %13, %32, %18
  %94 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 8, i32 1
  %95 = load %"class.net::NetLog"*, %"class.net::NetLog"** %94, align 8
  %96 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %95, i64 0, i32 3
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99, !prof !41

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 8, i32 0
  %101 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %101) #18
  call void @_ZNK3net9HostCache5Entry12NetLogParamsEv(%"class.base::Value"* nonnull sret %3, %"class.net::HostCache::Entry"* nonnull %4) #18
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %95, i32 17, %"struct.net::NetLogSource"* dereferenceable(16) %100, i32 2, %"class.base::Value"* nonnull dereferenceable(32) %3) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %101) #18
  br label %102

102:                                              ; preds = %93, %99
  %103 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 7
  %104 = load %"class.net::HostResolverManager::DnsTask::Delegate"*, %"class.net::HostResolverManager::DnsTask::Delegate"** %103, align 8
  %105 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 15, i32 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 4
  %108 = load i8, i8* %107, align 8, !range !2
  %109 = icmp ne i8 %108, 0
  %110 = bitcast %"class.net::HostResolverManager::DnsTask::Delegate"* %104 to void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64, %"class.net::HostCache::Entry"*, i1)***
  %111 = load void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64, %"class.net::HostCache::Entry"*, i1)**, void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64, %"class.net::HostCache::Entry"*, i1)*** %110, align 8
  %112 = load void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64, %"class.net::HostCache::Entry"*, i1)*, void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64, %"class.net::HostCache::Entry"*, i1)** %111, align 8
  call void %112(%"class.net::HostResolverManager::DnsTask::Delegate"* %104, i64 %106, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %4, i1 zeroext %109) #18
  br label %113

113:                                              ; preds = %102, %49
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %8) #18
  ret void
}

declare void @_ZN3net15HttpssvcMetrics23SaveAddressQueryFailureEv(%"class.net::HttpssvcMetrics"*) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"*) local_unnamed_addr #1

declare i64 @_ZN3net8features23dns_httpssvc_experiment20GetExtraTimeAbsoluteEv() local_unnamed_addr #1

declare i32 @_ZNK4base12FeatureParamIiLb0EE3GetEv(%"struct.base::FeatureParam.650"*) local_unnamed_addr #1

declare void @_ZN4base12OneShotTimer5StartERKNS_8LocationENS_9TimeDeltaENS_12OnceCallbackIFvvEEE(%"class.base::OneShotTimer"*, %"class.base::Location"* dereferenceable(32), i64, %"class.base::OnceCallback.335"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager7DnsTask26OnExperimentalQueryTimeoutEN4absl8optionalINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE(%"class.net::HostResolverManager::DnsTask"*, %"class.absl::optional.313"*) #0 comdat align 2 {
  %3 = alloca %"class.absl::optional.313", align 8
  %4 = alloca %"class.std::__1::vector.255", align 8
  %5 = alloca %"class.absl::optional.313", align 8
  %6 = alloca %"class.std::__1::vector.255", align 8
  %7 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 10
  %8 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %8, align 8
  %10 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr.286"* %9, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = ptrtoint %"class.std::__1::unique_ptr.286"* %9 to i64
  %15 = ptrtoint %"class.std::__1::unique_ptr.286"* %11 to i64
  br label %51

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 14
  %18 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 15, i32 0, i32 0
  %19 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %25 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %28 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast %"class.std::__1::vector.255"* %6 to i8*
  %32 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %6, i64 0, i32 0
  %33 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  %39 = bitcast %"class.std::__1::vector.255"* %4 to i8*
  %40 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %4, i64 0, i32 0
  %41 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %77

44:                                               ; preds = %152
  %45 = bitcast %"class.std::__1::unique_ptr.286"** %10 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.base::internal::flat_tree"* %7 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = inttoptr i64 %48 to %"class.std::__1::unique_ptr.286"*
  %50 = inttoptr i64 %46 to %"class.std::__1::unique_ptr.286"*
  br label %51

51:                                               ; preds = %13, %44
  %52 = phi %"class.std::__1::unique_ptr.286"* [ %50, %44 ], [ %9, %13 ]
  %53 = phi %"class.std::__1::unique_ptr.286"* [ %49, %44 ], [ %9, %13 ]
  %54 = phi i64 [ %48, %44 ], [ %14, %13 ]
  %55 = phi i64 [ %46, %44 ], [ %15, %13 ]
  %56 = sub i64 %55, %54
  %57 = lshr exact i64 %56, 3
  %58 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 12
  %59 = load i32, i32* %58, align 4
  %60 = trunc i64 %57 to i32
  %61 = add i32 %59, %60
  store i32 %61, i32* %58, align 4
  %62 = icmp eq %"class.std::__1::unique_ptr.286"* %52, %53
  br i1 %62, label %76, label %63

63:                                               ; preds = %51, %74
  %64 = phi %"class.std::__1::unique_ptr.286"* [ %65, %74 ], [ %52, %51 ]
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %64, i64 -1
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.net::DnsTransaction"*, %"class.net::DnsTransaction"** %66, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %66, align 8
  %68 = icmp eq %"class.net::DnsTransaction"* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %63
  %70 = bitcast %"class.net::DnsTransaction"* %67 to void (%"class.net::DnsTransaction"*)***
  %71 = load void (%"class.net::DnsTransaction"*)**, void (%"class.net::DnsTransaction"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %71, i64 1
  %73 = load void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %72, align 8
  call void %73(%"class.net::DnsTransaction"* nonnull %67) #18
  br label %74

74:                                               ; preds = %69, %63
  %75 = icmp eq %"class.std::__1::unique_ptr.286"* %65, %53
  br i1 %75, label %76, label %63

76:                                               ; preds = %74, %51
  store %"class.std::__1::unique_ptr.286"* %53, %"class.std::__1::unique_ptr.286"** %10, align 8
  call void @_ZN3net19HostResolverManager7DnsTask26ProcessResultsOnCompletionEv(%"class.net::HostResolverManager::DnsTask"* %0)
  ret void

77:                                               ; preds = %16, %152
  %78 = phi %"class.std::__1::unique_ptr.286"* [ %9, %16 ], [ %153, %152 ]
  %79 = load %"class.base::TickClock"*, %"class.base::TickClock"** %17, align 8
  %80 = bitcast %"class.base::TickClock"* %79 to i64 (%"class.base::TickClock"*)***
  %81 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %80, align 8
  %82 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %81, i64 2
  %83 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %82, align 8
  %84 = call i64 %83(%"class.base::TickClock"* %79) #18
  %85 = load i64, i64* %18, align 8
  %86 = sub nsw i64 %84, %85
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %78, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.net::DnsTransaction"*, %"class.net::DnsTransaction"** %87, align 8
  %89 = bitcast %"class.net::DnsTransaction"* %88 to i16 (%"class.net::DnsTransaction"*)***
  %90 = load i16 (%"class.net::DnsTransaction"*)**, i16 (%"class.net::DnsTransaction"*)*** %89, align 8
  %91 = getelementptr inbounds i16 (%"class.net::DnsTransaction"*)*, i16 (%"class.net::DnsTransaction"*)** %90, i64 3
  %92 = load i16 (%"class.net::DnsTransaction"*)*, i16 (%"class.net::DnsTransaction"*)** %91, align 8
  %93 = call zeroext i16 %92(%"class.net::DnsTransaction"* %88) #18
  switch i16 %93, label %152 [
    i16 -15, label %94
    i16 65, label %123
  ]

94:                                               ; preds = %77
  %95 = load i8, i8* %19, align 8, !range !2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %98, !prof !177

97:                                               ; preds = %94
  call void @llvm.trap() #18
  unreachable

98:                                               ; preds = %94
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 32, i1 false) #18
  %99 = load i8, i8* %22, align 8, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %109, label %101

101:                                              ; preds = %98
  %102 = load i8, i8* %26, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %105, label %104

104:                                              ; preds = %101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %28, i64 24, i1 false) #18
  br label %108

105:                                              ; preds = %101
  %106 = load i8*, i8** %29, align 8
  %107 = load i64, i64* %30, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %37, i8* %106, i64 %107) #18
  br label %108

108:                                              ; preds = %105, %104
  store i8 1, i8* %36, align 8
  br label %109

109:                                              ; preds = %98, %108
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 24, i1 false) #18
  call void @_ZN3net15HttpssvcMetrics16SaveForIntegrityEN4absl8optionalINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_16HttpssvcDnsRcodeERKNS3_6vectorIbNS7_IbEEEEN4base9TimeDeltaE(%"class.net::HttpssvcMetrics"* %20, %"class.absl::optional.313"* nonnull %3, i32 0, %"class.std::__1::vector.255"* nonnull dereferenceable(24) %4, i64 %86) #18
  %110 = load i64*, i64** %40, align 8
  %111 = icmp eq i64* %110, null
  br i1 %111, label %114, label %112

112:                                              ; preds = %109
  %113 = bitcast i64* %110 to i8*
  call void @_ZdlPv(i8* %113) #19
  br label %114

114:                                              ; preds = %109, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #18
  %115 = load i8, i8* %36, align 8, !range !2
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %152, label %117

117:                                              ; preds = %114
  %118 = load i8, i8* %42, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %122

120:                                              ; preds = %117
  %121 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %121) #19
  br label %122

122:                                              ; preds = %120, %117
  store i8 0, i8* %36, align 8
  br label %152

123:                                              ; preds = %77
  %124 = load i8, i8* %19, align 8, !range !2
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %126, label %127, !prof !177

126:                                              ; preds = %123
  call void @llvm.trap() #18
  unreachable

127:                                              ; preds = %123
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 32, i1 false) #18
  %128 = load i8, i8* %22, align 8, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %138, label %130

130:                                              ; preds = %127
  %131 = load i8, i8* %26, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %134, label %133

133:                                              ; preds = %130
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #18
  br label %137

134:                                              ; preds = %130
  %135 = load i8*, i8** %29, align 8
  %136 = load i64, i64* %30, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %24, i8* %135, i64 %136) #18
  br label %137

137:                                              ; preds = %134, %133
  store i8 1, i8* %21, align 8
  br label %138

138:                                              ; preds = %127, %137
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #18
  call void @_ZN3net15HttpssvcMetrics12SaveForHttpsEN4absl8optionalINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_16HttpssvcDnsRcodeERKNS3_6vectorIbNS7_IbEEEEN4base9TimeDeltaE(%"class.net::HttpssvcMetrics"* %20, %"class.absl::optional.313"* nonnull %5, i32 0, %"class.std::__1::vector.255"* nonnull dereferenceable(24) %6, i64 %86) #18
  %139 = load i64*, i64** %32, align 8
  %140 = icmp eq i64* %139, null
  br i1 %140, label %143, label %141

141:                                              ; preds = %138
  %142 = bitcast i64* %139 to i8*
  call void @_ZdlPv(i8* %142) #19
  br label %143

143:                                              ; preds = %138, %141
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #18
  %144 = load i8, i8* %21, align 8, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %152, label %146

146:                                              ; preds = %143
  %147 = load i8, i8* %34, align 1
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %146
  %150 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %150) #19
  br label %151

151:                                              ; preds = %149, %146
  store i8 0, i8* %21, align 8
  br label %152

152:                                              ; preds = %151, %143, %122, %114, %77
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %78, i64 1
  %154 = icmp eq %"class.std::__1::unique_ptr.286"* %153, %11
  br i1 %154, label %44, label %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager7DnsTaskEFvN4absl8optionalINSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEEEEJNS0_17UnretainedWrapperIS5_EESF_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.absl::optional.313", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to i8*
  %9 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #18
  %15 = getelementptr inbounds i8, i8* %6, i64 %13
  %16 = bitcast i8* %15 to %"class.net::HostResolverManager::DnsTask"*
  %17 = and i64 %10, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %1
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %10, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.net::HostResolverManager::DnsTask"*, %"class.absl::optional.313"*)**
  %25 = load void (%"class.net::HostResolverManager::DnsTask"*, %"class.absl::optional.313"*)*, void (%"class.net::HostResolverManager::DnsTask"*, %"class.absl::optional.313"*)** %24, align 8
  br label %28

26:                                               ; preds = %1
  %27 = inttoptr i64 %10 to void (%"class.net::HostResolverManager::DnsTask"*, %"class.absl::optional.313"*)*
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi void (%"class.net::HostResolverManager::DnsTask"*, %"class.absl::optional.313"*)* [ %25, %19 ], [ %27, %26 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false) #18
  %30 = load i8, i8* %8, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %34 = bitcast void (%"class.base::internal::BindStateBase"*)** %33 to i8*
  %35 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %36 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %34, i64 24, i1 false) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #18
  store i8 1, i8* %14, align 8
  br label %37

37:                                               ; preds = %32, %28
  call void %29(%"class.net::HostResolverManager::DnsTask"* %16, %"class.absl::optional.313"* nonnull %2) #18
  %38 = load i8, i8* %14, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %50, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.absl::optional.313", %"class.absl::optional.313"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %42 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %48) #19
  br label %49

49:                                               ; preds = %46, %40
  store i8 0, i8* %14, align 8
  br label %50

50:                                               ; preds = %37, %49
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net19HostResolverManager7DnsTaskEFvN4absl8optionalINSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEEEEJNS0_17UnretainedWrapperIS4_EESE_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %18, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to i8*
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds i8, i8* %5, i64 31
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = getelementptr inbounds i1 (%"class.base::internal::BindStateBase"*, i32)*, i1 (%"class.base::internal::BindStateBase"*, i32)** %4, i64 1
  %14 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #19
  br label %16

16:                                               ; preds = %8, %12, %3
  %17 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #19
  br label %18

18:                                               ; preds = %16, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager7DnsTask14OnSortCompleteEN4base9TimeTicksENS_9HostCache5EntryEbbRKNS_11AddressListE(%"class.net::HostResolverManager::DnsTask"*, i64, %"class.net::HostCache::Entry"*, i1 zeroext, i1 zeroext, %"class.net::AddressList"* dereferenceable(48)) #0 comdat align 2 {
  %7 = alloca %"class.base::Value", align 8
  %8 = alloca %"class.absl::optional.233", align 8
  %9 = alloca %"class.std::__1::vector.1", align 8
  %10 = alloca %"class.std::__1::vector.243", align 8
  %11 = alloca %"class.logging::LogMessage", align 8
  %12 = getelementptr inbounds %"class.absl::optional.233", %"class.absl::optional.233"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %12) #18
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds %"class.absl::optional.233", %"class.absl::optional.233"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net11AddressListC1ERKS0_(%"class.net::AddressList"* %13, %"class.net::AddressList"* dereferenceable(48) %5) #18
  %14 = load i8, i8* %12, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %15, label %24, label %19

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %18, label %23, label %21

21:                                               ; preds = %19
  %22 = call dereferenceable(48) %"class.net::AddressList"* @_ZN3net11AddressListaSERKS0_(%"class.net::AddressList"* %20, %"class.net::AddressList"* dereferenceable(48) %13) #18
  br label %27

23:                                               ; preds = %19
  call void @_ZN3net11AddressListC1ERKS0_(%"class.net::AddressList"* %20, %"class.net::AddressList"* dereferenceable(48) %13) #18
  store i8 1, i8* %16, align 8
  br label %27

24:                                               ; preds = %6
  br i1 %18, label %27, label %25

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* %26) #18
  store i8 0, i8* %16, align 8
  br label %27

27:                                               ; preds = %21, %23, %24, %25
  %28 = load i8, i8* %12, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* %13) #18
  store i8 0, i8* %12, align 8
  br label %31

31:                                               ; preds = %27, %30
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %12) #18
  br i1 %4, label %36, label %32

32:                                               ; preds = %31
  %33 = call { i8, i64 } @_ZNK3net9HostCache5Entry14GetOptionalTtlEv(%"class.net::HostCache::Entry"* %2) #18
  %34 = extractvalue { i8, i64 } %33, 0
  %35 = extractvalue { i8, i64 } %33, 1
  call void @_ZN3net19HostResolverManager7DnsTask9OnFailureEiNS_26DnsResponseResultExtractor15ExtractionErrorEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostResolverManager::DnsTask"* %0, i32 -806, i32 0, i8 %34, i64 %35)
  br label %270

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %5, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %37, align 8
  %39 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %5, i64 0, i32 0, i32 0, i32 1
  %40 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %39, align 8
  %41 = icmp eq %"class.net::IPEndPoint"* %38, %40
  br i1 %41, label %42, label %250

42:                                               ; preds = %36
  %43 = bitcast %"class.std::__1::vector.1"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #18
  %44 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 8, !range !2, !noalias !197
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %98, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 24, i1 false) #18
  %49 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::basic_string"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector.1"* %48 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %51, %53
  %55 = sdiv exact i64 %54, 24
  %56 = icmp eq i64 %54, 0
  %57 = inttoptr i64 %53 to %"class.std::__1::basic_string"*
  %58 = inttoptr i64 %51 to %"class.std::__1::basic_string"*
  br i1 %56, label %100, label %59

59:                                               ; preds = %47
  %60 = icmp ugt i64 %55, 768614336404564650
  br i1 %60, label %61, label %63

61:                                               ; preds = %59
  %62 = bitcast %"class.std::__1::vector.1"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %62) #20
  unreachable

63:                                               ; preds = %59
  %64 = call i8* @_Znwm(i64 %54) #19
  %65 = bitcast i8* %64 to %"class.std::__1::basic_string"*
  %66 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %9, i64 0, i32 0, i32 1
  %67 = bitcast %"class.std::__1::basic_string"** %66 to i8**
  store i8* %64, i8** %67, align 8
  %68 = bitcast %"class.std::__1::vector.1"* %9 to i8**
  store i8* %64, i8** %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 %55
  %70 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %69, %"class.std::__1::basic_string"** %70, align 8
  %71 = bitcast %"class.std::__1::basic_string"** %66 to i64*
  %72 = ptrtoint i8* %64 to i64
  %73 = icmp eq %"class.std::__1::basic_string"* %57, %58
  br i1 %73, label %103, label %74

74:                                               ; preds = %63, %89
  %75 = phi %"class.std::__1::basic_string"* [ %91, %89 ], [ %65, %63 ]
  %76 = phi %"class.std::__1::basic_string"* [ %90, %89 ], [ %57, %63 ]
  %77 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %74
  %82 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  %83 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 24, i1 false) #18
  br label %89

84:                                               ; preds = %74
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %75, i8* %86, i64 %88) #18
  br label %89

89:                                               ; preds = %84, %81
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 1
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 1
  %92 = icmp eq %"class.std::__1::basic_string"* %90, %58
  br i1 %92, label %93, label %74

93:                                               ; preds = %89
  %94 = ptrtoint %"class.std::__1::basic_string"* %91 to i64
  %95 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %9, i64 0, i32 0, i32 0
  %96 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %95, align 8
  %97 = bitcast %"class.std::__1::basic_string"* %96 to i8*
  br label %103

98:                                               ; preds = %42
  %99 = bitcast %"class.std::__1::vector.1"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 0, i64 24, i1 false)
  br label %100

100:                                              ; preds = %47, %98
  %101 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %9, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %9, i64 0, i32 0, i32 1
  br label %111

103:                                              ; preds = %63, %93
  %104 = phi i8* [ %64, %63 ], [ %97, %93 ]
  %105 = phi %"class.std::__1::basic_string"* [ %65, %63 ], [ %96, %93 ]
  %106 = phi i64 [ %72, %63 ], [ %94, %93 ]
  store i64 %106, i64* %71, align 8
  %107 = inttoptr i64 %106 to %"class.std::__1::basic_string"*
  %108 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %9, i64 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %9, i64 0, i32 0, i32 1
  %110 = icmp eq %"class.std::__1::basic_string"* %105, %107
  br i1 %110, label %111, label %211

111:                                              ; preds = %100, %103
  %112 = phi %"class.std::__1::basic_string"** [ %102, %100 ], [ %109, %103 ]
  %113 = phi %"class.std::__1::basic_string"** [ %101, %100 ], [ %108, %103 ]
  %114 = bitcast %"class.std::__1::vector.243"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #18
  %115 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %116 = load i8, i8* %115, align 8, !range !2, !noalias !200
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %171, label %118

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 0, i64 24, i1 false) #18
  %120 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %121 = bitcast %"class.net::HostPortPair"** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.std::__1::vector.243"* %119 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = sub i64 %122, %124
  %126 = ashr exact i64 %125, 5
  %127 = icmp eq i64 %125, 0
  %128 = inttoptr i64 %124 to %"class.net::HostPortPair"*
  %129 = inttoptr i64 %122 to %"class.net::HostPortPair"*
  br i1 %127, label %207, label %130

130:                                              ; preds = %118
  %131 = icmp ugt i64 %126, 576460752303423487
  br i1 %131, label %132, label %134

132:                                              ; preds = %130
  %133 = bitcast %"class.std::__1::vector.243"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %133) #20
  unreachable

134:                                              ; preds = %130
  %135 = call i8* @_Znwm(i64 %125) #19
  %136 = bitcast i8* %135 to %"class.net::HostPortPair"*
  %137 = getelementptr inbounds %"class.std::__1::vector.243", %"class.std::__1::vector.243"* %10, i64 0, i32 0, i32 1
  %138 = bitcast %"class.net::HostPortPair"** %137 to i8**
  store i8* %135, i8** %138, align 8
  %139 = bitcast %"class.std::__1::vector.243"* %10 to i8**
  store i8* %135, i8** %139, align 8
  %140 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %136, i64 %126
  %141 = getelementptr inbounds %"class.std::__1::vector.243", %"class.std::__1::vector.243"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.net::HostPortPair"* %140, %"class.net::HostPortPair"** %141, align 8
  %142 = bitcast %"class.net::HostPortPair"** %137 to i64*
  %143 = icmp eq %"class.net::HostPortPair"* %128, %129
  br i1 %143, label %144, label %148

144:                                              ; preds = %134
  %145 = ptrtoint i8* %135 to i64
  store i64 %145, i64* %142, align 8
  %146 = bitcast i8* %135 to %"class.net::HostPortPair"*
  %147 = getelementptr inbounds %"class.std::__1::vector.243", %"class.std::__1::vector.243"* %10, i64 0, i32 0, i32 1
  br label %181

148:                                              ; preds = %134, %164
  %149 = phi %"class.net::HostPortPair"* [ %169, %164 ], [ %136, %134 ]
  %150 = phi %"class.net::HostPortPair"* [ %168, %164 ], [ %128, %134 ]
  %151 = bitcast %"class.net::HostPortPair"* %150 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %152 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %151, i64 0, i32 1, i32 0
  %153 = load i8, i8* %152, align 1
  %154 = icmp slt i8 %153, 0
  br i1 %154, label %158, label %155

155:                                              ; preds = %148
  %156 = bitcast %"class.net::HostPortPair"* %149 to i8*
  %157 = bitcast %"class.net::HostPortPair"* %150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 8 %157, i64 24, i1 false) #18
  br label %164

158:                                              ; preds = %148
  %159 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %149, i64 0, i32 0
  %160 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load i8*, i8** %160, align 8
  %162 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %163 = load i64, i64* %162, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %159, i8* %161, i64 %163) #18
  br label %164

164:                                              ; preds = %158, %155
  %165 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %149, i64 0, i32 1
  %166 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %150, i64 0, i32 1
  %167 = load i16, i16* %166, align 8
  store i16 %167, i16* %165, align 8
  %168 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %150, i64 1
  %169 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %149, i64 1
  %170 = icmp eq %"class.net::HostPortPair"* %168, %129
  br i1 %170, label %173, label %148

171:                                              ; preds = %111
  %172 = bitcast %"class.std::__1::vector.243"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 0, i64 24, i1 false)
  br label %207

173:                                              ; preds = %164
  %174 = ptrtoint %"class.net::HostPortPair"* %169 to i64
  %175 = getelementptr inbounds %"class.std::__1::vector.243", %"class.std::__1::vector.243"* %10, i64 0, i32 0, i32 0
  %176 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %175, align 8
  %177 = bitcast %"class.net::HostPortPair"* %176 to i8*
  store i64 %174, i64* %142, align 8
  %178 = getelementptr inbounds %"class.std::__1::vector.243", %"class.std::__1::vector.243"* %10, i64 0, i32 0, i32 1
  %179 = icmp eq %"class.net::HostPortPair"* %176, %169
  %180 = icmp eq %"class.net::HostPortPair"* %176, null
  br i1 %180, label %207, label %181

181:                                              ; preds = %144, %173
  %182 = phi i1 [ true, %144 ], [ %179, %173 ]
  %183 = phi %"class.net::HostPortPair"** [ %147, %144 ], [ %178, %173 ]
  %184 = phi %"class.net::HostPortPair"* [ %146, %144 ], [ %169, %173 ]
  %185 = phi %"class.net::HostPortPair"* [ %136, %144 ], [ %176, %173 ]
  %186 = phi i8* [ %135, %144 ], [ %177, %173 ]
  %187 = bitcast %"class.net::HostPortPair"* %185 to i8*
  %188 = icmp eq %"class.net::HostPortPair"* %184, %185
  br i1 %188, label %204, label %189

189:                                              ; preds = %181, %199
  %190 = phi %"class.net::HostPortPair"* [ %191, %199 ], [ %184, %181 ]
  %191 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %190, i64 -1
  %192 = bitcast %"class.net::HostPortPair"* %191 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %192, i64 0, i32 1, i32 0
  %194 = load i8, i8* %193, align 1
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %196, label %199

196:                                              ; preds = %189
  %197 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %191, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load i8*, i8** %197, align 8
  call void @_ZdlPv(i8* %198) #19
  br label %199

199:                                              ; preds = %196, %189
  %200 = icmp eq %"class.net::HostPortPair"* %191, %185
  br i1 %200, label %201, label %189

201:                                              ; preds = %199
  %202 = bitcast %"class.std::__1::vector.243"* %10 to i8**
  %203 = load i8*, i8** %202, align 8
  br label %204

204:                                              ; preds = %201, %181
  %205 = phi i8* [ %203, %201 ], [ %187, %181 ]
  %206 = bitcast %"class.net::HostPortPair"** %183 to i8**
  store i8* %186, i8** %206, align 8
  call void @_ZdlPv(i8* %205) #19
  br label %207

207:                                              ; preds = %171, %118, %173, %204
  %208 = phi i1 [ %179, %173 ], [ %182, %204 ], [ true, %118 ], [ true, %171 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #18
  %209 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %113, align 8
  %210 = bitcast %"class.std::__1::basic_string"* %209 to i8*
  br label %211

211:                                              ; preds = %103, %207
  %212 = phi %"class.std::__1::basic_string"** [ %112, %207 ], [ %109, %103 ]
  %213 = phi i8* [ %210, %207 ], [ %104, %103 ]
  %214 = phi %"class.std::__1::basic_string"* [ %209, %207 ], [ %105, %103 ]
  %215 = phi i1 [ %208, %207 ], [ false, %103 ]
  %216 = icmp eq %"class.std::__1::basic_string"* %214, null
  br i1 %216, label %238, label %217

217:                                              ; preds = %211
  %218 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %212, align 8
  %219 = icmp eq %"class.std::__1::basic_string"* %218, %214
  br i1 %219, label %235, label %220

220:                                              ; preds = %217, %230
  %221 = phi %"class.std::__1::basic_string"* [ %222, %230 ], [ %218, %217 ]
  %222 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %221, i64 -1
  %223 = bitcast %"class.std::__1::basic_string"* %222 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %223, i64 0, i32 1, i32 0
  %225 = load i8, i8* %224, align 1
  %226 = icmp slt i8 %225, 0
  br i1 %226, label %227, label %230

227:                                              ; preds = %220
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %222, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load i8*, i8** %228, align 8
  call void @_ZdlPv(i8* %229) #19
  br label %230

230:                                              ; preds = %227, %220
  %231 = icmp eq %"class.std::__1::basic_string"* %222, %214
  br i1 %231, label %232, label %220

232:                                              ; preds = %230
  %233 = bitcast %"class.std::__1::vector.1"* %9 to i8**
  %234 = load i8*, i8** %233, align 8
  br label %235

235:                                              ; preds = %232, %217
  %236 = phi i8* [ %234, %232 ], [ %213, %217 ]
  %237 = bitcast %"class.std::__1::basic_string"** %212 to i8**
  store i8* %213, i8** %237, align 8
  call void @_ZdlPv(i8* %236) #19
  br label %238

238:                                              ; preds = %211, %235
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #18
  br i1 %215, label %239, label %250

239:                                              ; preds = %238
  %240 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #18
  br i1 %240, label %241, label %246

241:                                              ; preds = %239
  %242 = bitcast %"class.logging::LogMessage"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %242) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %11, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 1438, i32 1) #18
  %243 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %11, i64 0, i32 2
  %244 = bitcast %"class.std::__1::basic_ostringstream"* %243 to %"class.std::__1::basic_ostream"*
  %245 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %244, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.52, i64 0, i64 0), i64 37) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %11) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %242) #18
  br label %246

246:                                              ; preds = %239, %241
  %247 = call { i8, i64 } @_ZNK3net9HostCache5Entry14GetOptionalTtlEv(%"class.net::HostCache::Entry"* %2) #18
  %248 = extractvalue { i8, i64 } %247, 0
  %249 = extractvalue { i8, i64 } %247, 1
  call void @_ZN3net19HostResolverManager7DnsTask9OnFailureEiNS_26DnsResponseResultExtractor15ExtractionErrorEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostResolverManager::DnsTask"* %0, i32 -105, i32 0, i8 %248, i64 %249)
  br label %270

250:                                              ; preds = %36, %238
  %251 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 8, i32 1
  %252 = load %"class.net::NetLog"*, %"class.net::NetLog"** %251, align 8
  %253 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %252, i64 0, i32 3
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %259, label %256, !prof !41

256:                                              ; preds = %250
  %257 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 8, i32 0
  %258 = bitcast %"class.base::Value"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %258) #18
  call void @_ZNK3net9HostCache5Entry12NetLogParamsEv(%"class.base::Value"* nonnull sret %7, %"class.net::HostCache::Entry"* %2) #18
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %252, i32 17, %"struct.net::NetLogSource"* dereferenceable(16) %257, i32 2, %"class.base::Value"* nonnull dereferenceable(32) %7) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %258) #18
  br label %259

259:                                              ; preds = %250, %256
  %260 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 7
  %261 = load %"class.net::HostResolverManager::DnsTask::Delegate"*, %"class.net::HostResolverManager::DnsTask::Delegate"** %260, align 8
  %262 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 15, i32 0, i32 0
  %263 = load i64, i64* %262, align 8
  %264 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %0, i64 0, i32 4
  %265 = load i8, i8* %264, align 8, !range !2
  %266 = icmp ne i8 %265, 0
  %267 = bitcast %"class.net::HostResolverManager::DnsTask::Delegate"* %261 to void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64, %"class.net::HostCache::Entry"*, i1)***
  %268 = load void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64, %"class.net::HostCache::Entry"*, i1)**, void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64, %"class.net::HostCache::Entry"*, i1)*** %267, align 8
  %269 = load void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64, %"class.net::HostCache::Entry"*, i1)*, void (%"class.net::HostResolverManager::DnsTask::Delegate"*, i64, %"class.net::HostCache::Entry"*, i1)** %268, align 8
  call void %269(%"class.net::HostResolverManager::DnsTask::Delegate"* %261, i64 %263, %"class.net::HostCache::Entry"* dereferenceable(200) %2, i1 zeroext %266) #18
  br label %270

270:                                              ; preds = %259, %246, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager7DnsTaskEFvNS_9TimeTicksENS3_9HostCache5EntryEbbRKNS3_11AddressListEEJNS_7WeakPtrIS5_EES6_S8_bEEEFvbSB_EE7RunOnceEPNS0_13BindStateBaseEbSB_(%"class.base::internal::BindStateBase"*, i1 zeroext, %"class.net::AddressList"* dereferenceable(48)) #0 comdat align 2 {
  %4 = alloca i8, align 1
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.base::WeakPtr.663"*
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %7, i64 2
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.base::TimeTicks"*
  %11 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %7, i64 3
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to %"class.net::HostCache::Entry"*
  %13 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %7, i64 28
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to i8*
  %15 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.base::internal::WeakReference"*
  %16 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %15) #18
  br i1 %16, label %17, label %28

17:                                               ; preds = %3
  %18 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %7, i64 1
  %19 = bitcast void (%"class.base::internal::BindStateBase"*)** %18 to %"class.net::HostResolverManager::DnsTask"**
  %20 = load %"class.net::HostResolverManager::DnsTask"*, %"class.net::HostResolverManager::DnsTask"** %19, align 8
  %21 = icmp eq %"class.net::HostResolverManager::DnsTask"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.base::internal::BindStateBase"* %6 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %26 = bitcast void ()** %25 to i64*
  %27 = load i64, i64* %26, align 8
  call void @_ZN4base8internal13FunctorTraitsIMN3net19HostResolverManager7DnsTaskEFvNS_9TimeTicksENS2_9HostCache5EntryEbbRKNS2_11AddressListEEvE6InvokeISC_NS_7WeakPtrIS4_EEJS5_S7_bbSA_EEEvT_OT0_DpOT1_(i64 %24, i64 %27, %"class.base::WeakPtr.663"* dereferenceable(16) %8, %"class.base::TimeTicks"* dereferenceable(8) %10, %"class.net::HostCache::Entry"* dereferenceable(200) %12, i8* dereferenceable(1) %14, i8* nonnull dereferenceable(1) %4, %"class.net::AddressList"* dereferenceable(48) %2) #18
  br label %28

28:                                               ; preds = %3, %17, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal13FunctorTraitsIMN3net19HostResolverManager7DnsTaskEFvNS_9TimeTicksENS2_9HostCache5EntryEbbRKNS2_11AddressListEEvE6InvokeISC_NS_7WeakPtrIS4_EEJS5_S7_bbSA_EEEvT_OT0_DpOT1_(i64, i64, %"class.base::WeakPtr.663"* dereferenceable(16), %"class.base::TimeTicks"* dereferenceable(8), %"class.net::HostCache::Entry"* dereferenceable(200), i8* dereferenceable(1), i8* dereferenceable(1), %"class.net::AddressList"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.net::HostCache::Entry", align 8
  %11 = getelementptr inbounds %"class.base::WeakPtr.663", %"class.base::WeakPtr.663"* %2, i64 0, i32 0, i32 0
  %12 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %11) #18
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #18
  br label %16

16:                                               ; preds = %13, %8
  %17 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %11) #18
  %18 = getelementptr inbounds %"class.base::WeakPtr.663", %"class.base::WeakPtr.663"* %2, i64 0, i32 0, i32 1
  %19 = bitcast i64* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = select i1 %17, i8* %20, i8* null
  %22 = getelementptr inbounds i8, i8* %21, i64 %1
  %23 = bitcast i8* %22 to %"class.net::HostResolverManager::DnsTask"*
  %24 = and i64 %0, 1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %16
  %27 = bitcast i8* %22 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = add i64 %0, -1
  %30 = getelementptr i8, i8* %28, i64 %29
  %31 = bitcast i8* %30 to void (%"class.net::HostResolverManager::DnsTask"*, i64, %"class.net::HostCache::Entry"*, i1, i1, %"class.net::AddressList"*)**
  %32 = load void (%"class.net::HostResolverManager::DnsTask"*, i64, %"class.net::HostCache::Entry"*, i1, i1, %"class.net::AddressList"*)*, void (%"class.net::HostResolverManager::DnsTask"*, i64, %"class.net::HostCache::Entry"*, i1, i1, %"class.net::AddressList"*)** %31, align 8
  br label %35

33:                                               ; preds = %16
  %34 = inttoptr i64 %0 to void (%"class.net::HostResolverManager::DnsTask"*, i64, %"class.net::HostCache::Entry"*, i1, i1, %"class.net::AddressList"*)*
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi void (%"class.net::HostResolverManager::DnsTask"*, i64, %"class.net::HostCache::Entry"*, i1, i1, %"class.net::AddressList"*)* [ %32, %26 ], [ %34, %33 ]
  %37 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* nonnull %10, %"class.net::HostCache::Entry"* dereferenceable(200) %4) #18
  %39 = load i8, i8* %5, align 1, !range !2
  %40 = icmp ne i8 %39, 0
  %41 = load i8, i8* %6, align 1, !range !2
  %42 = icmp ne i8 %41, 0
  call void %36(%"class.net::HostResolverManager::DnsTask"* %23, i64 %38, %"class.net::HostCache::Entry"* nonnull %10, i1 zeroext %40, i1 zeroext %42, %"class.net::AddressList"* dereferenceable(48) %7) #18
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %10) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net19HostResolverManager7DnsTaskEFvNS_9TimeTicksENS2_9HostCache5EntryEbbRKNS2_11AddressListEEJNS_7WeakPtrIS4_EES5_S7_bEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 1
  %5 = bitcast void ()** %4 to %"class.net::HostCache::Entry"*
  tail call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* %5) #18
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %7) #18
  %8 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #19
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManager7DnsTaskEFvNS_9TimeTicksENS3_9HostCache5EntryEbbRKNS3_11AddressListEEJNS_7WeakPtrIS5_EES6_S8_bEEEEEbPKNS0_13BindStateBaseENSH_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::HostResolverManager::DnsTask"**
  %9 = load %"class.net::HostResolverManager::DnsTask"*, %"class.net::HostResolverManager::DnsTask"** %8, align 8
  %10 = icmp ne %"class.net::HostResolverManager::DnsTask"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #18
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

declare dereferenceable(48) %"class.net::AddressList"* @_ZN3net11AddressListaSERKS0_(%"class.net::AddressList"*, %"class.net::AddressList"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr.286"* @_ZNSt3__16vectorINS_10unique_ptrIN3net14DnsTransactionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE7emplaceIJS6_EEENS_11__wrap_iterIPS6_EENSB_IPKS6_EEDpOT_(%"class.std::__1::vector.284"*, %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::unique_ptr.286"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.680", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %9, align 8
  %11 = icmp ult %"class.std::__1::unique_ptr.286"* %8, %10
  %12 = ptrtoint %"class.std::__1::unique_ptr.286"* %10 to i64
  br i1 %11, label %13, label %148

13:                                               ; preds = %3
  %14 = icmp eq %"class.std::__1::unique_ptr.286"* %8, %1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.286"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %15, align 8
  br i1 %14, label %18, label %23

18:                                               ; preds = %13
  %19 = bitcast %"class.std::__1::unique_ptr.286"* %1 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %1, i64 1
  %21 = ptrtoint %"class.std::__1::unique_ptr.286"* %20 to i64
  %22 = bitcast %"class.std::__1::unique_ptr.286"** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %381

23:                                               ; preds = %13
  %24 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %7, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %1, i64 1
  %26 = ptrtoint %"class.std::__1::unique_ptr.286"* %24 to i64
  %27 = ptrtoint %"class.std::__1::unique_ptr.286"* %25 to i64
  %28 = sub i64 %26, %27
  %29 = ashr exact i64 %28, 3
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %1, i64 %29
  %31 = bitcast %"class.std::__1::unique_ptr.286"** %7 to i64*
  %32 = icmp ult %"class.std::__1::unique_ptr.286"* %30, %24
  br i1 %32, label %33, label %64

33:                                               ; preds = %23
  %34 = sub nsw i64 0, %29
  %35 = getelementptr %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %24, i64 %34, i32 0, i32 0, i32 0
  %36 = bitcast %"class.net::DnsTransaction"** %35 to i8*
  %37 = xor i64 %4, -1
  %38 = getelementptr i8, i8* %36, i64 %37
  %39 = ptrtoint i8* %38 to i64
  %40 = lshr i64 %39, 3
  %41 = add nuw nsw i64 %40, 1
  %42 = and i64 %41, 7
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %56, label %44

44:                                               ; preds = %33, %44
  %45 = phi %"class.std::__1::unique_ptr.286"* [ %53, %44 ], [ %24, %33 ]
  %46 = phi %"class.std::__1::unique_ptr.286"* [ %52, %44 ], [ %30, %33 ]
  %47 = phi i64 [ %54, %44 ], [ %42, %33 ]
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %46, i64 0, i32 0, i32 0, i32 0
  %49 = bitcast %"class.std::__1::unique_ptr.286"* %46 to i64*
  %50 = load i64, i64* %49, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %48, align 8
  %51 = bitcast %"class.std::__1::unique_ptr.286"* %45 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %46, i64 1
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %45, i64 1
  %54 = add i64 %47, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %44, !llvm.loop !203

56:                                               ; preds = %44, %33
  %57 = phi %"class.std::__1::unique_ptr.286"* [ %24, %33 ], [ %53, %44 ]
  %58 = phi %"class.std::__1::unique_ptr.286"* [ %30, %33 ], [ %52, %44 ]
  %59 = phi %"class.std::__1::unique_ptr.286"* [ undef, %33 ], [ %53, %44 ]
  %60 = icmp ult i8* %38, inttoptr (i64 56 to i8*)
  br i1 %60, label %61, label %86

61:                                               ; preds = %86, %56
  %62 = phi %"class.std::__1::unique_ptr.286"* [ %59, %56 ], [ %136, %86 ]
  %63 = ptrtoint %"class.std::__1::unique_ptr.286"* %62 to i64
  br label %64

64:                                               ; preds = %61, %23
  %65 = phi i64 [ %63, %61 ], [ %26, %23 ]
  store i64 %65, i64* %31, align 8
  %66 = icmp eq i64 %28, 0
  br i1 %66, label %138, label %67

67:                                               ; preds = %64, %84
  %68 = phi %"class.std::__1::unique_ptr.286"* [ %71, %84 ], [ %24, %64 ]
  %69 = phi %"class.std::__1::unique_ptr.286"* [ %70, %84 ], [ %30, %64 ]
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %69, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %68, i64 -1
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %70, i64 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.std::__1::unique_ptr.286"* %70 to i64*
  %74 = load i64, i64* %73, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %72, align 8
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %71, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.net::DnsTransaction"*, %"class.net::DnsTransaction"** %75, align 8
  %77 = bitcast %"class.std::__1::unique_ptr.286"* %71 to i64*
  store i64 %74, i64* %77, align 8
  %78 = icmp eq %"class.net::DnsTransaction"* %76, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %67
  %80 = bitcast %"class.net::DnsTransaction"* %76 to void (%"class.net::DnsTransaction"*)***
  %81 = load void (%"class.net::DnsTransaction"*)**, void (%"class.net::DnsTransaction"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %81, i64 1
  %83 = load void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %82, align 8
  tail call void %83(%"class.net::DnsTransaction"* nonnull %76) #18
  br label %84

84:                                               ; preds = %79, %67
  %85 = icmp eq %"class.std::__1::unique_ptr.286"* %70, %1
  br i1 %85, label %138, label %67

86:                                               ; preds = %56, %86
  %87 = phi %"class.std::__1::unique_ptr.286"* [ %136, %86 ], [ %57, %56 ]
  %88 = phi %"class.std::__1::unique_ptr.286"* [ %135, %86 ], [ %58, %56 ]
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = bitcast %"class.std::__1::unique_ptr.286"* %88 to i64*
  %91 = load i64, i64* %90, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %89, align 8
  %92 = bitcast %"class.std::__1::unique_ptr.286"* %87 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %88, i64 1
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %87, i64 1
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %93, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"class.std::__1::unique_ptr.286"* %93 to i64*
  %97 = load i64, i64* %96, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %95, align 8
  %98 = bitcast %"class.std::__1::unique_ptr.286"* %94 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %88, i64 2
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %87, i64 2
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %99, i64 0, i32 0, i32 0, i32 0
  %102 = bitcast %"class.std::__1::unique_ptr.286"* %99 to i64*
  %103 = load i64, i64* %102, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %101, align 8
  %104 = bitcast %"class.std::__1::unique_ptr.286"* %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %88, i64 3
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %87, i64 3
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %105, i64 0, i32 0, i32 0, i32 0
  %108 = bitcast %"class.std::__1::unique_ptr.286"* %105 to i64*
  %109 = load i64, i64* %108, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %107, align 8
  %110 = bitcast %"class.std::__1::unique_ptr.286"* %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %88, i64 4
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %87, i64 4
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %111, i64 0, i32 0, i32 0, i32 0
  %114 = bitcast %"class.std::__1::unique_ptr.286"* %111 to i64*
  %115 = load i64, i64* %114, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %113, align 8
  %116 = bitcast %"class.std::__1::unique_ptr.286"* %112 to i64*
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %88, i64 5
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %87, i64 5
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %117, i64 0, i32 0, i32 0, i32 0
  %120 = bitcast %"class.std::__1::unique_ptr.286"* %117 to i64*
  %121 = load i64, i64* %120, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %119, align 8
  %122 = bitcast %"class.std::__1::unique_ptr.286"* %118 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %88, i64 6
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %87, i64 6
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %123, i64 0, i32 0, i32 0, i32 0
  %126 = bitcast %"class.std::__1::unique_ptr.286"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %125, align 8
  %128 = bitcast %"class.std::__1::unique_ptr.286"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %88, i64 7
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %87, i64 7
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %129, i64 0, i32 0, i32 0, i32 0
  %132 = bitcast %"class.std::__1::unique_ptr.286"* %129 to i64*
  %133 = load i64, i64* %132, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %131, align 8
  %134 = bitcast %"class.std::__1::unique_ptr.286"* %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %88, i64 8
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %87, i64 8
  %137 = icmp ult %"class.std::__1::unique_ptr.286"* %135, %24
  br i1 %137, label %86, label %61

138:                                              ; preds = %84, %64
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %1, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.net::DnsTransaction"*, %"class.net::DnsTransaction"** %139, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.286"* %1 to i64*
  store i64 %17, i64* %141, align 8
  %142 = icmp eq %"class.net::DnsTransaction"* %140, null
  br i1 %142, label %381, label %143

143:                                              ; preds = %138
  %144 = bitcast %"class.net::DnsTransaction"* %140 to void (%"class.net::DnsTransaction"*)***
  %145 = load void (%"class.net::DnsTransaction"*)**, void (%"class.net::DnsTransaction"*)*** %144, align 8
  %146 = getelementptr inbounds void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %145, i64 1
  %147 = load void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %146, align 8
  tail call void %147(%"class.net::DnsTransaction"* nonnull %140) #18
  br label %381

148:                                              ; preds = %3
  %149 = ptrtoint %"class.std::__1::unique_ptr.286"* %8 to i64
  %150 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %0, i64 0, i32 0, i32 2
  %151 = bitcast %"struct.std::__1::__split_buffer.680"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %151) #18
  %152 = getelementptr inbounds %"struct.std::__1::__split_buffer.680", %"struct.std::__1::__split_buffer.680"* %5, i64 0, i32 0
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.680", %"struct.std::__1::__split_buffer.680"* %5, i64 0, i32 1
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.680", %"struct.std::__1::__split_buffer.680"* %5, i64 0, i32 2
  %155 = getelementptr inbounds %"struct.std::__1::__split_buffer.680", %"struct.std::__1::__split_buffer.680"* %5, i64 0, i32 3, i32 0, i32 0
  %156 = getelementptr inbounds %"struct.std::__1::__split_buffer.680", %"struct.std::__1::__split_buffer.680"* %5, i64 0, i32 3, i32 1, i32 0
  %157 = bitcast %"class.std::__1::unique_ptr.286"** %7 to i64*
  %158 = bitcast %"class.std::__1::vector.284"* %0 to i64*
  %159 = bitcast %"struct.std::__1::__split_buffer.680"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 -86, i64 40, i1 false)
  %160 = load i64, i64* %158, align 8
  %161 = sub i64 %149, %160
  %162 = ashr exact i64 %161, 3
  %163 = add nsw i64 %162, 1
  %164 = icmp ugt i64 %163, 2305843009213693951
  br i1 %164, label %165, label %167

165:                                              ; preds = %148
  %166 = bitcast %"class.std::__1::vector.284"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %166) #20
  unreachable

167:                                              ; preds = %148
  %168 = bitcast %"class.std::__1::unique_ptr.286"** %9 to i64*
  %169 = sub i64 %12, %160
  %170 = ashr exact i64 %169, 3
  %171 = icmp ult i64 %170, 1152921504606846975
  br i1 %171, label %176, label %172

172:                                              ; preds = %167
  %173 = sub i64 %4, %160
  %174 = ashr exact i64 %173, 3
  store %"class.std::__1::unique_ptr.286"* null, %"class.std::__1::unique_ptr.286"** %155, align 8
  %175 = bitcast %"class.std::__1::allocator.295"** %156 to %"class.std::__1::__compressed_pair.292"**
  store %"class.std::__1::__compressed_pair.292"* %150, %"class.std::__1::__compressed_pair.292"** %175, align 8
  br label %187

176:                                              ; preds = %167
  %177 = ashr exact i64 %169, 2
  %178 = icmp ult i64 %177, %163
  %179 = select i1 %178, i64 %163, i64 %177
  %180 = sub i64 %4, %160
  %181 = ashr exact i64 %180, 3
  store %"class.std::__1::unique_ptr.286"* null, %"class.std::__1::unique_ptr.286"** %155, align 8
  %182 = bitcast %"class.std::__1::allocator.295"** %156 to %"class.std::__1::__compressed_pair.292"**
  store %"class.std::__1::__compressed_pair.292"* %150, %"class.std::__1::__compressed_pair.292"** %182, align 8
  %183 = icmp eq i64 %179, 0
  br i1 %183, label %193, label %184

184:                                              ; preds = %176
  %185 = icmp ugt i64 %179, 2305843009213693951
  br i1 %185, label %186, label %187

186:                                              ; preds = %184
  tail call void @abort() #20
  unreachable

187:                                              ; preds = %172, %184
  %188 = phi i64 [ 2305843009213693951, %172 ], [ %179, %184 ]
  %189 = phi i64 [ %174, %172 ], [ %181, %184 ]
  %190 = shl i64 %188, 3
  %191 = tail call i8* @_Znwm(i64 %190) #19
  %192 = bitcast i8* %191 to %"class.std::__1::unique_ptr.286"*
  br label %193

193:                                              ; preds = %176, %187
  %194 = phi i64 [ %189, %187 ], [ %181, %176 ]
  %195 = phi i64 [ %188, %187 ], [ 0, %176 ]
  %196 = phi %"class.std::__1::unique_ptr.286"* [ %192, %187 ], [ null, %176 ]
  store %"class.std::__1::unique_ptr.286"* %196, %"class.std::__1::unique_ptr.286"** %152, align 8
  %197 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %196, i64 %194
  store %"class.std::__1::unique_ptr.286"* %197, %"class.std::__1::unique_ptr.286"** %154, align 8
  store %"class.std::__1::unique_ptr.286"* %197, %"class.std::__1::unique_ptr.286"** %153, align 8
  %198 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %196, i64 %195
  store %"class.std::__1::unique_ptr.286"* %198, %"class.std::__1::unique_ptr.286"** %155, align 8
  call void @_ZNSt3__114__split_bufferINS_10unique_ptrIN3net14DnsTransactionENS_14default_deleteIS3_EEEERNS_9allocatorIS6_EEE12emplace_backIJS6_EEEvDpOT_(%"struct.std::__1::__split_buffer.680"* nonnull %5, %"class.std::__1::unique_ptr.286"* dereferenceable(8) %2)
  %199 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %153, align 8
  %200 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %6, align 8
  %201 = icmp eq %"class.std::__1::unique_ptr.286"* %200, %1
  br i1 %201, label %266, label %202

202:                                              ; preds = %193
  %203 = ptrtoint %"class.std::__1::unique_ptr.286"* %200 to i64
  %204 = getelementptr %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %1, i64 -1, i32 0, i32 0, i32 0
  %205 = ptrtoint %"class.net::DnsTransaction"** %204 to i64
  %206 = sub i64 %205, %203
  %207 = lshr i64 %206, 3
  %208 = add nuw nsw i64 %207, 1
  %209 = and i64 %208, 3
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %225, label %211

211:                                              ; preds = %202, %211
  %212 = phi %"class.std::__1::unique_ptr.286"* [ %222, %211 ], [ %199, %202 ]
  %213 = phi %"class.std::__1::unique_ptr.286"* [ %216, %211 ], [ %1, %202 ]
  %214 = phi i64 [ %223, %211 ], [ %209, %202 ]
  %215 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %212, i64 -1
  %216 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %213, i64 -1
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %216, i64 0, i32 0, i32 0, i32 0
  %218 = bitcast %"class.std::__1::unique_ptr.286"* %216 to i64*
  %219 = load i64, i64* %218, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %217, align 8
  %220 = bitcast %"class.std::__1::unique_ptr.286"* %215 to i64*
  store i64 %219, i64* %220, align 8
  %221 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %153, align 8
  %222 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %221, i64 -1
  store %"class.std::__1::unique_ptr.286"* %222, %"class.std::__1::unique_ptr.286"** %153, align 8
  %223 = add i64 %214, -1
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %211, !llvm.loop !204

225:                                              ; preds = %211, %202
  %226 = phi %"class.std::__1::unique_ptr.286"* [ undef, %202 ], [ %222, %211 ]
  %227 = phi %"class.std::__1::unique_ptr.286"* [ %199, %202 ], [ %222, %211 ]
  %228 = phi %"class.std::__1::unique_ptr.286"* [ %1, %202 ], [ %216, %211 ]
  %229 = icmp ult i64 %206, 24
  br i1 %229, label %266, label %230

230:                                              ; preds = %225, %230
  %231 = phi %"class.std::__1::unique_ptr.286"* [ %264, %230 ], [ %227, %225 ]
  %232 = phi %"class.std::__1::unique_ptr.286"* [ %258, %230 ], [ %228, %225 ]
  %233 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %231, i64 -1
  %234 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %232, i64 -1
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %234, i64 0, i32 0, i32 0, i32 0
  %236 = bitcast %"class.std::__1::unique_ptr.286"* %234 to i64*
  %237 = load i64, i64* %236, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %235, align 8
  %238 = bitcast %"class.std::__1::unique_ptr.286"* %233 to i64*
  store i64 %237, i64* %238, align 8
  %239 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %153, align 8
  %240 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %239, i64 -1
  store %"class.std::__1::unique_ptr.286"* %240, %"class.std::__1::unique_ptr.286"** %153, align 8
  %241 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %239, i64 -2
  %242 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %232, i64 -2
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %242, i64 0, i32 0, i32 0, i32 0
  %244 = bitcast %"class.std::__1::unique_ptr.286"* %242 to i64*
  %245 = load i64, i64* %244, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %243, align 8
  %246 = bitcast %"class.std::__1::unique_ptr.286"* %241 to i64*
  store i64 %245, i64* %246, align 8
  %247 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %153, align 8
  %248 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %247, i64 -1
  store %"class.std::__1::unique_ptr.286"* %248, %"class.std::__1::unique_ptr.286"** %153, align 8
  %249 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %247, i64 -2
  %250 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %232, i64 -3
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %250, i64 0, i32 0, i32 0, i32 0
  %252 = bitcast %"class.std::__1::unique_ptr.286"* %250 to i64*
  %253 = load i64, i64* %252, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %251, align 8
  %254 = bitcast %"class.std::__1::unique_ptr.286"* %249 to i64*
  store i64 %253, i64* %254, align 8
  %255 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %153, align 8
  %256 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %255, i64 -1
  store %"class.std::__1::unique_ptr.286"* %256, %"class.std::__1::unique_ptr.286"** %153, align 8
  %257 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %255, i64 -2
  %258 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %232, i64 -4
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %258, i64 0, i32 0, i32 0, i32 0
  %260 = bitcast %"class.std::__1::unique_ptr.286"* %258 to i64*
  %261 = load i64, i64* %260, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %259, align 8
  %262 = bitcast %"class.std::__1::unique_ptr.286"* %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %153, align 8
  %264 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %263, i64 -1
  store %"class.std::__1::unique_ptr.286"* %264, %"class.std::__1::unique_ptr.286"** %153, align 8
  %265 = icmp eq %"class.std::__1::unique_ptr.286"* %258, %200
  br i1 %265, label %266, label %230

266:                                              ; preds = %225, %230, %193
  %267 = phi %"class.std::__1::unique_ptr.286"* [ %199, %193 ], [ %226, %225 ], [ %264, %230 ]
  %268 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %7, align 8
  %269 = icmp eq %"class.std::__1::unique_ptr.286"* %268, %1
  br i1 %269, label %270, label %276

270:                                              ; preds = %266
  %271 = ptrtoint %"class.std::__1::unique_ptr.286"* %268 to i64
  %272 = ptrtoint %"class.std::__1::unique_ptr.286"* %267 to i64
  %273 = bitcast %"class.std::__1::unique_ptr.286"** %153 to i64*
  %274 = bitcast %"class.std::__1::unique_ptr.286"** %154 to i64*
  %275 = load i64, i64* %274, align 8
  br label %345

276:                                              ; preds = %266
  %277 = bitcast %"class.std::__1::unique_ptr.286"** %154 to i64**
  %278 = load i64*, i64** %277, align 8
  %279 = getelementptr %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %268, i64 -1, i32 0, i32 0, i32 0
  %280 = ptrtoint %"class.net::DnsTransaction"** %279 to i64
  %281 = sub i64 %280, %4
  %282 = lshr i64 %281, 3
  %283 = add nuw nsw i64 %282, 1
  %284 = and i64 %283, 3
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %301, label %286

286:                                              ; preds = %276, %286
  %287 = phi i64* [ %296, %286 ], [ %278, %276 ]
  %288 = phi %"class.std::__1::unique_ptr.286"* [ %293, %286 ], [ %1, %276 ]
  %289 = phi i64 [ %297, %286 ], [ %284, %276 ]
  %290 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %288, i64 0, i32 0, i32 0, i32 0
  %291 = bitcast %"class.std::__1::unique_ptr.286"* %288 to i64*
  %292 = load i64, i64* %291, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %290, align 8
  store i64 %292, i64* %287, align 8
  %293 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %288, i64 1
  %294 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %154, align 8
  %295 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %294, i64 1
  store %"class.std::__1::unique_ptr.286"* %295, %"class.std::__1::unique_ptr.286"** %154, align 8
  %296 = bitcast %"class.std::__1::unique_ptr.286"* %295 to i64*
  %297 = add i64 %289, -1
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %299, label %286, !llvm.loop !205

299:                                              ; preds = %286
  %300 = bitcast %"class.std::__1::unique_ptr.286"* %295 to i64*
  br label %301

301:                                              ; preds = %276, %299
  %302 = phi %"class.std::__1::unique_ptr.286"* [ undef, %276 ], [ %295, %299 ]
  %303 = phi i64* [ %278, %276 ], [ %300, %299 ]
  %304 = phi %"class.std::__1::unique_ptr.286"* [ %1, %276 ], [ %293, %299 ]
  %305 = icmp ult i64 %281, 24
  br i1 %305, label %338, label %306

306:                                              ; preds = %301, %306
  %307 = phi i64* [ %337, %306 ], [ %303, %301 ]
  %308 = phi %"class.std::__1::unique_ptr.286"* [ %333, %306 ], [ %304, %301 ]
  %309 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %308, i64 0, i32 0, i32 0, i32 0
  %310 = bitcast %"class.std::__1::unique_ptr.286"* %308 to i64*
  %311 = load i64, i64* %310, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %309, align 8
  store i64 %311, i64* %307, align 8
  %312 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %308, i64 1
  %313 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %154, align 8
  %314 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %313, i64 1
  store %"class.std::__1::unique_ptr.286"* %314, %"class.std::__1::unique_ptr.286"** %154, align 8
  %315 = bitcast %"class.std::__1::unique_ptr.286"* %314 to i64*
  %316 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %312, i64 0, i32 0, i32 0, i32 0
  %317 = bitcast %"class.std::__1::unique_ptr.286"* %312 to i64*
  %318 = load i64, i64* %317, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %316, align 8
  store i64 %318, i64* %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %308, i64 2
  %320 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %154, align 8
  %321 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %320, i64 1
  store %"class.std::__1::unique_ptr.286"* %321, %"class.std::__1::unique_ptr.286"** %154, align 8
  %322 = bitcast %"class.std::__1::unique_ptr.286"* %321 to i64*
  %323 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %319, i64 0, i32 0, i32 0, i32 0
  %324 = bitcast %"class.std::__1::unique_ptr.286"* %319 to i64*
  %325 = load i64, i64* %324, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %323, align 8
  store i64 %325, i64* %322, align 8
  %326 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %308, i64 3
  %327 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %154, align 8
  %328 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %327, i64 1
  store %"class.std::__1::unique_ptr.286"* %328, %"class.std::__1::unique_ptr.286"** %154, align 8
  %329 = bitcast %"class.std::__1::unique_ptr.286"* %328 to i64*
  %330 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %326, i64 0, i32 0, i32 0, i32 0
  %331 = bitcast %"class.std::__1::unique_ptr.286"* %326 to i64*
  %332 = load i64, i64* %331, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %330, align 8
  store i64 %332, i64* %329, align 8
  %333 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %308, i64 4
  %334 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %154, align 8
  %335 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %334, i64 1
  store %"class.std::__1::unique_ptr.286"* %335, %"class.std::__1::unique_ptr.286"** %154, align 8
  %336 = icmp eq %"class.std::__1::unique_ptr.286"* %333, %268
  %337 = bitcast %"class.std::__1::unique_ptr.286"* %335 to i64*
  br i1 %336, label %338, label %306

338:                                              ; preds = %306, %301
  %339 = phi %"class.std::__1::unique_ptr.286"* [ %302, %301 ], [ %335, %306 ]
  %340 = ptrtoint %"class.std::__1::unique_ptr.286"* %339 to i64
  %341 = bitcast %"class.std::__1::unique_ptr.286"** %153 to i64*
  %342 = load i64, i64* %341, align 8
  %343 = load i64, i64* %157, align 8
  %344 = bitcast %"class.std::__1::unique_ptr.286"** %154 to i64*
  br label %345

345:                                              ; preds = %270, %338
  %346 = phi i64* [ %274, %270 ], [ %344, %338 ]
  %347 = phi i64 [ %275, %270 ], [ %340, %338 ]
  %348 = phi i64 [ %271, %270 ], [ %343, %338 ]
  %349 = phi i64* [ %273, %270 ], [ %341, %338 ]
  %350 = phi i64 [ %272, %270 ], [ %342, %338 ]
  %351 = load i64, i64* %158, align 8
  store i64 %350, i64* %158, align 8
  store i64 %351, i64* %349, align 8
  store i64 %347, i64* %157, align 8
  store i64 %348, i64* %346, align 8
  %352 = load i64, i64* %168, align 8
  %353 = bitcast %"class.std::__1::unique_ptr.286"** %155 to i64*
  %354 = load i64, i64* %353, align 8
  store i64 %354, i64* %168, align 8
  store i64 %352, i64* %353, align 8
  %355 = bitcast %"struct.std::__1::__split_buffer.680"* %5 to i64*
  store i64 %351, i64* %355, align 8
  %356 = inttoptr i64 %351 to %"class.std::__1::unique_ptr.286"*
  %357 = inttoptr i64 %348 to %"class.std::__1::unique_ptr.286"*
  %358 = icmp eq %"class.std::__1::unique_ptr.286"* %357, %356
  br i1 %358, label %375, label %359

359:                                              ; preds = %345, %370
  %360 = phi %"class.std::__1::unique_ptr.286"* [ %371, %370 ], [ %357, %345 ]
  %361 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %360, i64 -1
  store %"class.std::__1::unique_ptr.286"* %361, %"class.std::__1::unique_ptr.286"** %154, align 8
  %362 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %361, i64 0, i32 0, i32 0, i32 0
  %363 = load %"class.net::DnsTransaction"*, %"class.net::DnsTransaction"** %362, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %362, align 8
  %364 = icmp eq %"class.net::DnsTransaction"* %363, null
  br i1 %364, label %370, label %365

365:                                              ; preds = %359
  %366 = bitcast %"class.net::DnsTransaction"* %363 to void (%"class.net::DnsTransaction"*)***
  %367 = load void (%"class.net::DnsTransaction"*)**, void (%"class.net::DnsTransaction"*)*** %366, align 8
  %368 = getelementptr inbounds void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %367, i64 1
  %369 = load void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %368, align 8
  call void %369(%"class.net::DnsTransaction"* nonnull %363) #18
  br label %370

370:                                              ; preds = %365, %359
  %371 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %154, align 8
  %372 = icmp eq %"class.std::__1::unique_ptr.286"* %371, %356
  br i1 %372, label %373, label %359

373:                                              ; preds = %370
  %374 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %152, align 8
  br label %375

375:                                              ; preds = %373, %345
  %376 = phi %"class.std::__1::unique_ptr.286"* [ %374, %373 ], [ %356, %345 ]
  %377 = icmp eq %"class.std::__1::unique_ptr.286"* %376, null
  br i1 %377, label %380, label %378

378:                                              ; preds = %375
  %379 = bitcast %"class.std::__1::unique_ptr.286"* %376 to i8*
  call void @_ZdlPv(i8* %379) #19
  br label %380

380:                                              ; preds = %375, %378
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %151) #18
  br label %381

381:                                              ; preds = %138, %143, %18, %380
  %382 = phi %"class.std::__1::unique_ptr.286"* [ %1, %18 ], [ %199, %380 ], [ %1, %143 ], [ %1, %138 ]
  ret %"class.std::__1::unique_ptr.286"* %382
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_10unique_ptrIN3net14DnsTransactionENS_14default_deleteIS3_EEEERNS_9allocatorIS6_EEE12emplace_backIJS6_EEEvDpOT_(%"struct.std::__1::__split_buffer.680"*, %"class.std::__1::unique_ptr.286"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.680", %"struct.std::__1::__split_buffer.680"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.680", %"struct.std::__1::__split_buffer.680"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.286"* %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.286"* %6 to i64
  br i1 %7, label %9, label %185

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.680", %"struct.std::__1::__split_buffer.680"* %0, i64 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.680", %"struct.std::__1::__split_buffer.680"* %0, i64 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %12, align 8
  %14 = icmp ugt %"class.std::__1::unique_ptr.286"* %11, %13
  %15 = ptrtoint %"class.std::__1::unique_ptr.286"* %13 to i64
  br i1 %14, label %16, label %49

16:                                               ; preds = %9
  %17 = ptrtoint %"class.std::__1::unique_ptr.286"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %11, i64 %21
  %23 = icmp eq %"class.std::__1::unique_ptr.286"* %11, %4
  br i1 %23, label %45, label %24

24:                                               ; preds = %16, %39
  %25 = phi %"class.std::__1::unique_ptr.286"* [ %41, %39 ], [ %22, %16 ]
  %26 = phi %"class.std::__1::unique_ptr.286"* [ %40, %39 ], [ %11, %16 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr.286"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %27, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %25, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.net::DnsTransaction"*, %"class.net::DnsTransaction"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.286"* %25 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.net::DnsTransaction"* %31, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %24
  %35 = bitcast %"class.net::DnsTransaction"* %31 to void (%"class.net::DnsTransaction"*)***
  %36 = load void (%"class.net::DnsTransaction"*)**, void (%"class.net::DnsTransaction"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %36, i64 1
  %38 = load void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %37, align 8
  tail call void %38(%"class.net::DnsTransaction"* nonnull %31) #18
  br label %39

39:                                               ; preds = %34, %24
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %26, i64 1
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %25, i64 1
  %42 = icmp eq %"class.std::__1::unique_ptr.286"* %40, %4
  br i1 %42, label %43, label %24

43:                                               ; preds = %39
  %44 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %10, align 8
  br label %45

45:                                               ; preds = %43, %16
  %46 = phi %"class.std::__1::unique_ptr.286"* [ %4, %16 ], [ %44, %43 ]
  %47 = phi %"class.std::__1::unique_ptr.286"* [ %22, %16 ], [ %41, %43 ]
  store %"class.std::__1::unique_ptr.286"* %47, %"class.std::__1::unique_ptr.286"** %3, align 8
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %46, i64 %21
  store %"class.std::__1::unique_ptr.286"* %48, %"class.std::__1::unique_ptr.286"** %10, align 8
  br label %185

49:                                               ; preds = %9
  %50 = bitcast %"class.std::__1::unique_ptr.286"** %5 to i64*
  %51 = bitcast %"struct.std::__1::__split_buffer.680"* %0 to i64*
  %52 = sub i64 %8, %15
  %53 = ashr exact i64 %52, 2
  %54 = icmp eq i64 %52, 0
  %55 = select i1 %54, i64 1, i64 %53
  %56 = icmp ugt i64 %55, 2305843009213693951
  br i1 %56, label %57, label %58

57:                                               ; preds = %49
  tail call void @abort() #20
  unreachable

58:                                               ; preds = %49
  %59 = lshr i64 %55, 2
  %60 = shl i64 %55, 3
  %61 = tail call i8* @_Znwm(i64 %60) #19
  %62 = bitcast i8* %61 to %"class.std::__1::unique_ptr.286"*
  %63 = ptrtoint i8* %61 to i64
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %62, i64 %59
  %65 = ptrtoint %"class.std::__1::unique_ptr.286"* %64 to i64
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %62, i64 %55
  %67 = ptrtoint %"class.std::__1::unique_ptr.286"* %66 to i64
  %68 = ptrtoint %"class.std::__1::unique_ptr.286"* %11 to i64
  %69 = ptrtoint %"class.std::__1::unique_ptr.286"* %4 to i64
  %70 = sub i64 %69, %68
  %71 = ashr exact i64 %70, 3
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %64, i64 %71
  %73 = icmp eq i64 %70, 0
  br i1 %73, label %160, label %74

74:                                               ; preds = %58
  %75 = add i64 %70, -8
  %76 = lshr i64 %75, 3
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 7
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %96, label %80

80:                                               ; preds = %74, %80
  %81 = phi %"class.std::__1::unique_ptr.286"* [ %89, %80 ], [ %64, %74 ]
  %82 = phi i64 [ %90, %80 ], [ %65, %74 ]
  %83 = phi %"class.std::__1::unique_ptr.286"* [ %91, %80 ], [ %11, %74 ]
  %84 = phi i64 [ %92, %80 ], [ %78, %74 ]
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %83, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::unique_ptr.286"* %83 to i64*
  %87 = load i64, i64* %86, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %85, align 8
  %88 = inttoptr i64 %82 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %81, i64 1
  %90 = ptrtoint %"class.std::__1::unique_ptr.286"* %89 to i64
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %83, i64 1
  %92 = add i64 %84, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %80, !llvm.loop !206

94:                                               ; preds = %80
  %95 = ptrtoint %"class.std::__1::unique_ptr.286"* %89 to i64
  br label %96

96:                                               ; preds = %74, %94
  %97 = phi %"class.std::__1::unique_ptr.286"* [ %64, %74 ], [ %89, %94 ]
  %98 = phi i64 [ %65, %74 ], [ %95, %94 ]
  %99 = phi %"class.std::__1::unique_ptr.286"* [ %11, %74 ], [ %91, %94 ]
  %100 = icmp ult i64 %75, 56
  br i1 %100, label %155, label %101

101:                                              ; preds = %96, %101
  %102 = phi %"class.std::__1::unique_ptr.286"* [ %151, %101 ], [ %97, %96 ]
  %103 = phi i64 [ %152, %101 ], [ %98, %96 ]
  %104 = phi %"class.std::__1::unique_ptr.286"* [ %153, %101 ], [ %99, %96 ]
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.286"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %105, align 8
  %108 = inttoptr i64 %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %102, i64 1
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %104, i64 1
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.286"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.286"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %102, i64 2
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %104, i64 2
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.286"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.286"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %102, i64 3
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %104, i64 3
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.286"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.286"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %102, i64 4
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %104, i64 4
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = bitcast %"class.std::__1::unique_ptr.286"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %129, align 8
  %132 = bitcast %"class.std::__1::unique_ptr.286"* %127 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %102, i64 5
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %104, i64 5
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %134, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr.286"* %134 to i64*
  %137 = load i64, i64* %136, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %135, align 8
  %138 = bitcast %"class.std::__1::unique_ptr.286"* %133 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %102, i64 6
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %104, i64 6
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %140, i64 0, i32 0, i32 0, i32 0
  %142 = bitcast %"class.std::__1::unique_ptr.286"* %140 to i64*
  %143 = load i64, i64* %142, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %141, align 8
  %144 = bitcast %"class.std::__1::unique_ptr.286"* %139 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %102, i64 7
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %104, i64 7
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %146, i64 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.std::__1::unique_ptr.286"* %146 to i64*
  %149 = load i64, i64* %148, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %147, align 8
  %150 = bitcast %"class.std::__1::unique_ptr.286"* %145 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %102, i64 8
  %152 = ptrtoint %"class.std::__1::unique_ptr.286"* %151 to i64
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %104, i64 8
  %154 = icmp eq %"class.std::__1::unique_ptr.286"* %72, %151
  br i1 %154, label %155, label %101

155:                                              ; preds = %101, %96
  %156 = ptrtoint %"class.std::__1::unique_ptr.286"* %72 to i64
  %157 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %12, align 8
  %158 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %10, align 8
  %159 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %3, align 8
  br label %160

160:                                              ; preds = %58, %155
  %161 = phi %"class.std::__1::unique_ptr.286"* [ %159, %155 ], [ %4, %58 ]
  %162 = phi %"class.std::__1::unique_ptr.286"* [ %158, %155 ], [ %11, %58 ]
  %163 = phi %"class.std::__1::unique_ptr.286"* [ %157, %155 ], [ %13, %58 ]
  %164 = phi i64 [ %156, %155 ], [ %65, %58 ]
  store i64 %63, i64* %51, align 8
  %165 = bitcast %"class.std::__1::unique_ptr.286"** %10 to i64*
  store i64 %65, i64* %165, align 8
  %166 = bitcast %"class.std::__1::unique_ptr.286"** %3 to i64*
  store i64 %164, i64* %166, align 8
  store i64 %67, i64* %50, align 8
  %167 = icmp eq %"class.std::__1::unique_ptr.286"* %161, %162
  br i1 %167, label %181, label %168

168:                                              ; preds = %160, %179
  %169 = phi %"class.std::__1::unique_ptr.286"* [ %170, %179 ], [ %161, %160 ]
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %169, i64 -1
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %170, i64 0, i32 0, i32 0, i32 0
  %172 = load %"class.net::DnsTransaction"*, %"class.net::DnsTransaction"** %171, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %171, align 8
  %173 = icmp eq %"class.net::DnsTransaction"* %172, null
  br i1 %173, label %179, label %174

174:                                              ; preds = %168
  %175 = bitcast %"class.net::DnsTransaction"* %172 to void (%"class.net::DnsTransaction"*)***
  %176 = load void (%"class.net::DnsTransaction"*)**, void (%"class.net::DnsTransaction"*)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %176, i64 1
  %178 = load void (%"class.net::DnsTransaction"*)*, void (%"class.net::DnsTransaction"*)** %177, align 8
  tail call void %178(%"class.net::DnsTransaction"* nonnull %172) #18
  br label %179

179:                                              ; preds = %174, %168
  %180 = icmp eq %"class.std::__1::unique_ptr.286"* %170, %162
  br i1 %180, label %181, label %168

181:                                              ; preds = %179, %160
  %182 = icmp eq %"class.std::__1::unique_ptr.286"* %163, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %181
  %184 = bitcast %"class.std::__1::unique_ptr.286"* %163 to i8*
  tail call void @_ZdlPv(i8* %184) #19
  br label %185

185:                                              ; preds = %183, %181, %45, %2
  %186 = bitcast %"class.std::__1::unique_ptr.286"** %3 to i64**
  %187 = load i64*, i64** %186, align 8
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %1, i64 0, i32 0, i32 0, i32 0
  %189 = bitcast %"class.std::__1::unique_ptr.286"* %1 to i64*
  %190 = load i64, i64* %189, align 8
  store %"class.net::DnsTransaction"* null, %"class.net::DnsTransaction"** %188, align 8
  store i64 %190, i64* %187, align 8
  %191 = load %"class.std::__1::unique_ptr.286"*, %"class.std::__1::unique_ptr.286"** %3, align 8
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %191, i64 1
  store %"class.std::__1::unique_ptr.286"* %192, %"class.std::__1::unique_ptr.286"** %3, align 8
  ret void
}

declare void @_ZN3net20HostResolverMdnsTask5StartEN4base12OnceCallbackIFvvEEE(%"class.net::HostResolverMdnsTask"*, %"class.base::OnceCallback.335"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job18OnMdnsTaskCompleteEv(%"class.net::HostResolverManager::Job"*) #0 comdat align 2 {
  %2 = alloca %"class.net::HostCache::Entry", align 8
  %3 = alloca %"class.net::HostCache::Entry", align 8
  %4 = bitcast %"class.net::HostCache::Entry"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %4) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 200, i1 false)
  %5 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %6 = load %"class.net::HostResolverMdnsTask"*, %"class.net::HostResolverMdnsTask"** %5, align 8
  call void @_ZNK3net20HostResolverMdnsTask10GetResultsEv(%"class.net::HostCache::Entry"* nonnull sret %3, %"class.net::HostResolverMdnsTask"* %6) #18
  %7 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %45, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %11, align 8
  %13 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %14 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %13, align 8
  %15 = icmp eq %"class.net::IPEndPoint"* %12, %14
  br i1 %15, label %45, label %16

16:                                               ; preds = %10, %40
  %17 = phi %"class.net::IPEndPoint"* [ %41, %40 ], [ %12, %10 ]
  %18 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %17, i64 0, i32 0
  %19 = call zeroext i1 @_ZNK3net9IPAddress6IsIPv4Ev(%"class.net::IPAddress"* %18) #18
  br i1 %19, label %20, label %40

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %17, i64 0, i32 0, i32 0, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp ult i8 %22, 4
  br i1 %23, label %40, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 127
  br i1 %27, label %28, label %40

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %40

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 53
  br i1 %35, label %36, label %40

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %38, 53
  br i1 %39, label %43, label %40

40:                                               ; preds = %36, %32, %28, %24, %20, %16
  %41 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %17, i64 1
  %42 = icmp eq %"class.net::IPEndPoint"* %41, %14
  br i1 %42, label %45, label %16

43:                                               ; preds = %36
  %44 = bitcast %"class.net::HostCache::Entry"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %44) #18
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* nonnull %2, i32 -166, i32 0, i8 0, i64 undef) #18
  call void @_ZN3net19HostResolverManager3Job16CompleteRequestsERKNS_9HostCache5EntryEN4base9TimeDeltaEbb(%"class.net::HostResolverManager::Job"* %0, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %2, i64 0, i1 zeroext true, i1 zeroext false) #18
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %44) #18
  br label %46

45:                                               ; preds = %40, %1, %10
  call void @_ZN3net19HostResolverManager3Job16CompleteRequestsERKNS_9HostCache5EntryEN4base9TimeDeltaEbb(%"class.net::HostResolverManager::Job"* %0, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %3, i64 0, i1 zeroext false, i1 zeroext false) #18
  br label %46

46:                                               ; preds = %45, %43
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job22OnMdnsImmediateFailureEi(%"class.net::HostResolverManager::Job"*, i32) #0 comdat align 2 {
  %3 = alloca %"class.net::HostCache::Entry", align 8
  %4 = bitcast %"class.net::HostCache::Entry"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %4) #18
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* nonnull %3, i32 %1, i32 0, i8 0, i64 undef) #18
  call void @_ZN3net19HostResolverManager3Job16CompleteRequestsERKNS_9HostCache5EntryEN4base9TimeDeltaEbb(%"class.net::HostResolverManager::Job"* %0, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %3, i64 0, i1 zeroext true, i1 zeroext false) #18
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %4) #18
  ret void
}

declare void @_ZN3net20HostResolverMdnsTaskC1EPNS_10MDnsClientERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS3_6vectorINS_12DnsQueryTypeENS7_ISD_EEEE(%"class.net::HostResolverMdnsTask"*, %"class.net::MDnsClient"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.683"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager3JobEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.net::HostResolverManager::Job"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.net::HostResolverManager::Job"*)**
  %21 = load void (%"class.net::HostResolverManager::Job"*)*, void (%"class.net::HostResolverManager::Job"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.net::HostResolverManager::Job"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.net::HostResolverManager::Job"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.net::HostResolverManager::Job"* %12) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net19HostResolverManager3JobEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #19
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZNK3net20HostResolverMdnsTask10GetResultsEv(%"class.net::HostCache::Entry"* sret, %"class.net::HostResolverMdnsTask"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS5_EEiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i32*
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #18
  br i1 %8, label %9, label %45

9:                                                ; preds = %1
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.net::HostResolverManager::Job"**
  %12 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %11, align 8
  %13 = icmp eq %"class.net::HostResolverManager::Job"* %12, null
  br i1 %13, label %45, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #18
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #18
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #18
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.net::HostResolverManager::Job"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.net::HostResolverManager::Job"*, i32)**
  %39 = load void (%"class.net::HostResolverManager::Job"*, i32)*, void (%"class.net::HostResolverManager::Job"*, i32)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.net::HostResolverManager::Job"*, i32)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.net::HostResolverManager::Job"*, i32)* [ %39, %33 ], [ %41, %40 ]
  %44 = load i32, i32* %6, align 4
  call void %43(%"class.net::HostResolverManager::Job"* %30, i32 %44) #18
  br label %45

45:                                               ; preds = %1, %9, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS4_EEiEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #18
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #19
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS5_EEiEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::HostResolverManager::Job"**
  %9 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %8, align 8
  %10 = icmp ne %"class.net::HostResolverManager::Job"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #18
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKc(%"class.std::__1::basic_string"*, i64, i64, i8*) local_unnamed_addr #1

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"*, %"class.base::Location"* dereferenceable(32), i32) unnamed_addr #1

; Function Attrs: nounwind
declare i32 @getifaddrs(%struct.ifaddrs**) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @freeifaddrs(%struct.ifaddrs*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job20AbortInsecureDnsTaskEib(%"class.net::HostResolverManager::Job"*, i32, i1 zeroext) #0 comdat align 2 {
  %4 = alloca %"class.net::HostCache::Entry", align 8
  %5 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 13
  %6 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %7 = load i32**, i32*** %6, align 8
  %8 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 13, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = lshr i64 %9, 10
  %11 = getelementptr inbounds i32*, i32** %7, i64 %10
  %12 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp eq i32** %13, %7
  br i1 %14, label %111, label %15

15:                                               ; preds = %3
  %16 = load i32*, i32** %11, align 8
  %17 = and i64 %9, 1023
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %9
  %22 = lshr i64 %21, 10
  %23 = getelementptr inbounds i32*, i32** %7, i64 %22
  %24 = load i32*, i32** %23, align 8
  %25 = and i64 %21, 1023
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  %27 = icmp eq i32* %18, %26
  br i1 %27, label %51, label %28

28:                                               ; preds = %15, %44
  %29 = phi i32* [ %47, %44 ], [ %18, %15 ]
  %30 = phi i32** [ %45, %44 ], [ %11, %15 ]
  %31 = load i32, i32* %29, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %49, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds i32, i32* %29, i64 1
  %35 = ptrtoint i32* %34 to i64
  %36 = bitcast i32** %30 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = icmp eq i64 %38, 4096
  br i1 %39, label %40, label %44

40:                                               ; preds = %33
  %41 = getelementptr inbounds i32*, i32** %30, i64 1
  %42 = bitcast i32** %41 to i64*
  %43 = load i64, i64* %42, align 8
  br label %44

44:                                               ; preds = %40, %33
  %45 = phi i32** [ %41, %40 ], [ %30, %33 ]
  %46 = phi i64 [ %43, %40 ], [ %35, %33 ]
  %47 = inttoptr i64 %46 to i32*
  %48 = icmp eq i32* %26, %47
  br i1 %48, label %49, label %28

49:                                               ; preds = %28, %44
  %50 = phi i32* [ %29, %28 ], [ %26, %44 ]
  br i1 %14, label %56, label %51

51:                                               ; preds = %15, %49
  %52 = phi i32* [ %50, %49 ], [ %18, %15 ]
  %53 = load i32*, i32** %23, align 8
  %54 = and i64 %21, 1023
  %55 = getelementptr inbounds i32, i32* %53, i64 %54
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i32* [ %52, %51 ], [ %50, %49 ]
  %58 = phi i32* [ %55, %51 ], [ null, %49 ]
  %59 = icmp ne i32* %57, %58
  br i1 %59, label %60, label %111

60:                                               ; preds = %56
  br i1 %14, label %65, label %61

61:                                               ; preds = %60
  %62 = load i32*, i32** %11, align 8
  %63 = and i64 %9, 1023
  %64 = getelementptr inbounds i32, i32* %62, i64 %63
  br label %65

65:                                               ; preds = %60, %61
  %66 = phi i32* [ %64, %61 ], [ null, %60 ]
  br label %67

67:                                               ; preds = %94, %65
  %68 = phi i32** [ %101, %94 ], [ %13, %65 ]
  %69 = phi i32** [ %100, %94 ], [ %7, %65 ]
  %70 = phi i64 [ %99, %94 ], [ %9, %65 ]
  %71 = phi i64 [ %98, %94 ], [ %20, %65 ]
  %72 = phi i32** [ %96, %94 ], [ %11, %65 ]
  %73 = phi i32* [ %97, %94 ], [ %66, %65 ]
  %74 = add i64 %70, %71
  %75 = icmp eq i32** %68, %69
  %76 = lshr i64 %74, 10
  %77 = getelementptr inbounds i32*, i32** %69, i64 %76
  %78 = and i64 %74, 1023
  br label %79

79:                                               ; preds = %67, %108
  %80 = phi i32** [ %72, %67 ], [ %109, %108 ]
  %81 = phi i32* [ %73, %67 ], [ %110, %108 ]
  %82 = bitcast i32** %80 to i64*
  br label %83

83:                                               ; preds = %79, %102
  %84 = phi i32* [ %103, %102 ], [ %81, %79 ]
  br i1 %75, label %88, label %85

85:                                               ; preds = %83
  %86 = load i32*, i32** %77, align 8
  %87 = getelementptr inbounds i32, i32* %86, i64 %78
  br label %88

88:                                               ; preds = %83, %85
  %89 = phi i32* [ %87, %85 ], [ null, %83 ]
  %90 = icmp eq i32* %89, %84
  br i1 %90, label %111, label %91

91:                                               ; preds = %88
  %92 = load i32, i32* %84, align 4
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %102

94:                                               ; preds = %91
  %95 = tail call { i32**, i32* } @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE5eraseENS_16__deque_iteratorIS3_PKS3_RS8_PKS9_lLl0EEE(%"class.std::__1::deque"* %5, i32** %80, i32* %84)
  %96 = extractvalue { i32**, i32* } %95, 0
  %97 = extractvalue { i32**, i32* } %95, 1
  %98 = load i64, i64* %19, align 8
  %99 = load i64, i64* %8, align 8
  %100 = load i32**, i32*** %6, align 8
  %101 = load i32**, i32*** %12, align 8
  br label %67

102:                                              ; preds = %91
  %103 = getelementptr inbounds i32, i32* %84, i64 1
  %104 = ptrtoint i32* %103 to i64
  %105 = load i64, i64* %82, align 8
  %106 = sub i64 %104, %105
  %107 = icmp eq i64 %106, 4096
  br i1 %107, label %108, label %83

108:                                              ; preds = %102
  %109 = getelementptr inbounds i32*, i32** %80, i64 1
  %110 = load i32*, i32** %109, align 8
  br label %79

111:                                              ; preds = %88, %3, %56
  %112 = phi i1 [ false, %56 ], [ false, %3 ], [ %59, %88 ]
  %113 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %114 = load %"class.net::HostResolverManager::DnsTask"*, %"class.net::HostResolverManager::DnsTask"** %113, align 8
  %115 = icmp eq %"class.net::HostResolverManager::DnsTask"* %114, null
  br i1 %115, label %126, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %114, i64 0, i32 4
  %118 = load i8, i8* %117, align 8, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %126

120:                                              ; preds = %116
  br i1 %112, label %121, label %123

121:                                              ; preds = %120
  tail call void @_ZN3net19HostResolverManager3Job11KillDnsTaskEv(%"class.net::HostResolverManager::Job"* %0)
  %122 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 20
  store i32 0, i32* %122, align 8
  tail call void @_ZN3net19HostResolverManager3Job11RunNextTaskEv(%"class.net::HostResolverManager::Job"* %0)
  br label %126

123:                                              ; preds = %120
  br i1 %2, label %126, label %124

124:                                              ; preds = %123
  %125 = bitcast %"class.net::HostCache::Entry"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %125) #18
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* nonnull %4, i32 %1, i32 0, i8 0, i64 undef) #18
  call void @_ZN3net19HostResolverManager3Job16CompleteRequestsERKNS_9HostCache5EntryEN4base9TimeDeltaEbb(%"class.net::HostResolverManager::Job"* %0, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %4, i64 0, i1 zeroext true, i1 zeroext false) #18
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %125) #18
  br label %126

126:                                              ; preds = %116, %111, %121, %124, %123
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager3JobEFvibEJNS_7WeakPtrIS5_EEibEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.std::__1::tuple.736"*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i32*
  %8 = getelementptr inbounds %"class.std::__1::tuple.736", %"class.std::__1::tuple.736"* %5, i64 0, i32 0, i32 2, i32 0
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %10 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #18
  br i1 %10, label %11, label %49

11:                                               ; preds = %1
  %12 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %12 to %"class.net::HostResolverManager::Job"**
  %14 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %13, align 8
  %15 = icmp eq %"class.net::HostResolverManager::Job"* %14, null
  br i1 %15, label %49, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %20 = bitcast void ()** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #18
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #18
  br label %26

26:                                               ; preds = %23, %16
  %27 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #18
  %28 = bitcast void (%"class.base::internal::BindStateBase"*)** %12 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = select i1 %27, i8* %29, i8* null
  %31 = getelementptr inbounds i8, i8* %30, i64 %21
  %32 = bitcast i8* %31 to %"class.net::HostResolverManager::Job"*
  %33 = and i64 %18, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %26
  %36 = bitcast i8* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = add i64 %18, -1
  %39 = getelementptr i8, i8* %37, i64 %38
  %40 = bitcast i8* %39 to void (%"class.net::HostResolverManager::Job"*, i32, i1)**
  %41 = load void (%"class.net::HostResolverManager::Job"*, i32, i1)*, void (%"class.net::HostResolverManager::Job"*, i32, i1)** %40, align 8
  br label %44

42:                                               ; preds = %26
  %43 = inttoptr i64 %18 to void (%"class.net::HostResolverManager::Job"*, i32, i1)*
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi void (%"class.net::HostResolverManager::Job"*, i32, i1)* [ %41, %35 ], [ %43, %42 ]
  %46 = load i32, i32* %7, align 4
  %47 = load i8, i8* %8, align 1, !range !2
  %48 = icmp ne i8 %47, 0
  call void %45(%"class.net::HostResolverManager::Job"* %32, i32 %46, i1 zeroext %48) #18
  br label %49

49:                                               ; preds = %1, %11, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net19HostResolverManager3JobEFvibEJNS_7WeakPtrIS4_EEibEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #18
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #19
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManager3JobEFvibEJNS_7WeakPtrIS5_EEibEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::HostResolverManager::Job"**
  %9 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %8, align 8
  %10 = icmp ne %"class.net::HostResolverManager::Job"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #18
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32**, i32* } @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE5eraseENS_16__deque_iteratorIS3_PKS3_RS8_PKS9_lLl0EEE(%"class.std::__1::deque"*, i32**, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32**, i32*** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 10
  %9 = getelementptr inbounds i32*, i32** %5, i64 %8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = icmp eq i32** %11, %5
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = load i32*, i32** %9, align 8
  %15 = and i64 %7, 1023
  %16 = getelementptr inbounds i32, i32* %14, i64 %15
  br label %17

17:                                               ; preds = %3, %13
  %18 = phi i32* [ %16, %13 ], [ null, %3 ]
  %19 = ptrtoint i32* %18 to i64
  %20 = icmp eq i32* %18, %2
  br i1 %20, label %56, label %21

21:                                               ; preds = %17
  %22 = ptrtoint i32** %9 to i64
  %23 = ptrtoint i32* %2 to i64
  %24 = ptrtoint i32** %1 to i64
  %25 = sub i64 %24, %22
  %26 = shl i64 %25, 7
  %27 = bitcast i32** %1 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %23, %28
  %30 = ashr exact i64 %29, 2
  %31 = add nsw i64 %30, %26
  %32 = bitcast i32** %9 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %19, %33
  %35 = ashr exact i64 %34, 2
  %36 = sub i64 %31, %35
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %21
  %39 = icmp sgt i64 %31, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %38
  %41 = lshr i64 %31, 10
  %42 = getelementptr inbounds i32*, i32** %9, i64 %41
  %43 = load i32*, i32** %42, align 8
  %44 = and i64 %31, 1023
  %45 = getelementptr inbounds i32, i32* %43, i64 %44
  %46 = ptrtoint i32* %45 to i64
  br label %56

47:                                               ; preds = %38
  %48 = sub nsw i64 1023, %31
  %49 = sdiv i64 %48, -1024
  %50 = getelementptr inbounds i32*, i32** %9, i64 %49
  %51 = load i32*, i32** %50, align 8
  %52 = srem i64 %48, 1024
  %53 = sub nsw i64 1023, %52
  %54 = getelementptr inbounds i32, i32* %51, i64 %53
  %55 = ptrtoint i32* %54 to i64
  br label %56

56:                                               ; preds = %17, %21, %40, %47
  %57 = phi i1 [ true, %21 ], [ false, %40 ], [ false, %47 ], [ true, %17 ]
  %58 = phi i64 [ 0, %21 ], [ %36, %40 ], [ %36, %47 ], [ 0, %17 ]
  %59 = phi i64 [ %19, %21 ], [ %46, %40 ], [ %55, %47 ], [ %19, %17 ]
  %60 = phi i32** [ %9, %21 ], [ %42, %40 ], [ %50, %47 ], [ %9, %17 ]
  %61 = inttoptr i64 %59 to i32*
  %62 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, -1
  %65 = lshr i64 %64, 1
  %66 = icmp ugt i64 %58, %65
  %67 = bitcast i32** %60 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %59, %68
  %70 = ashr exact i64 %69, 2
  %71 = add nsw i64 %70, 1
  %72 = icmp sgt i64 %69, -4
  br i1 %66, label %106, label %73

73:                                               ; preds = %56
  br i1 %72, label %74, label %80

74:                                               ; preds = %73
  %75 = lshr i64 %71, 10
  %76 = getelementptr inbounds i32*, i32** %60, i64 %75
  %77 = load i32*, i32** %76, align 8
  %78 = and i64 %71, 1023
  %79 = getelementptr inbounds i32, i32* %77, i64 %78
  br label %88

80:                                               ; preds = %73
  %81 = sub nsw i64 1022, %70
  %82 = sdiv i64 %81, -1024
  %83 = getelementptr inbounds i32*, i32** %60, i64 %82
  %84 = load i32*, i32** %83, align 8
  %85 = srem i64 %81, 1024
  %86 = sub nuw nsw i64 1023, %85
  %87 = getelementptr inbounds i32, i32* %84, i64 %86
  br label %88

88:                                               ; preds = %74, %80
  %89 = phi i32* [ %79, %74 ], [ %87, %80 ]
  %90 = phi i32** [ %76, %74 ], [ %83, %80 ]
  %91 = tail call { i32**, i32* } @_ZNSt3__113move_backwardIN3net19HostResolverManager8TaskTypeEPS3_RS3_PS4_lLl0ES3_S4_S5_S6_lLl0EEENS_16__deque_iteratorIT5_T6_T7_T8_T9_XT10_EEENS7_IT_T0_T1_T2_T3_XT4_EEESJ_SD_(i32** %9, i32* %18, i32** %60, i32* %61, i32** %90, i32* %89)
  %92 = bitcast i64* %6 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8
  %94 = add <2 x i64> %93, <i64 1, i64 -1>
  %95 = bitcast i64* %6 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %95, align 8
  %96 = extractelement <2 x i64> %94, i32 0
  %97 = icmp ult i64 %96, 2048
  br i1 %97, label %157, label %98

98:                                               ; preds = %88
  %99 = bitcast i32*** %4 to i8***
  %100 = load i8**, i8*** %99, align 8
  %101 = load i8*, i8** %100, align 8
  tail call void @_ZdlPv(i8* %101) #19
  %102 = load i32**, i32*** %4, align 8
  %103 = getelementptr inbounds i32*, i32** %102, i64 1
  store i32** %103, i32*** %4, align 8
  %104 = load i64, i64* %6, align 8
  %105 = add i64 %104, -1024
  store i64 %105, i64* %6, align 8
  br label %157

106:                                              ; preds = %56
  br i1 %72, label %107, label %113

107:                                              ; preds = %106
  %108 = lshr i64 %71, 10
  %109 = getelementptr inbounds i32*, i32** %60, i64 %108
  %110 = load i32*, i32** %109, align 8
  %111 = and i64 %71, 1023
  %112 = getelementptr inbounds i32, i32* %110, i64 %111
  br label %121

113:                                              ; preds = %106
  %114 = sub nsw i64 1022, %70
  %115 = sdiv i64 %114, -1024
  %116 = getelementptr inbounds i32*, i32** %60, i64 %115
  %117 = load i32*, i32** %116, align 8
  %118 = srem i64 %114, 1024
  %119 = sub nuw nsw i64 1023, %118
  %120 = getelementptr inbounds i32, i32* %117, i64 %119
  br label %121

121:                                              ; preds = %107, %113
  %122 = phi i32* [ %112, %107 ], [ %120, %113 ]
  %123 = phi i32** [ %109, %107 ], [ %116, %113 ]
  %124 = add i64 %63, %7
  %125 = lshr i64 %124, 10
  %126 = getelementptr inbounds i32*, i32** %5, i64 %125
  br i1 %12, label %131, label %127

127:                                              ; preds = %121
  %128 = load i32*, i32** %126, align 8
  %129 = and i64 %124, 1023
  %130 = getelementptr inbounds i32, i32* %128, i64 %129
  br label %131

131:                                              ; preds = %121, %127
  %132 = phi i32* [ %130, %127 ], [ null, %121 ]
  %133 = tail call { i32**, i32* } @_ZNSt3__14moveIN3net19HostResolverManager8TaskTypeEPS3_RS3_PS4_lLl0ES3_S4_S5_S6_lLl0EEENS_16__deque_iteratorIT5_T6_T7_T8_T9_XT10_EEENS7_IT_T0_T1_T2_T3_XT4_EEESJ_SD_(i32** %123, i32* %122, i32** %126, i32* %132, i32** %60, i32* %61)
  %134 = load i64, i64* %62, align 8
  %135 = add i64 %134, -1
  store i64 %135, i64* %62, align 8
  %136 = bitcast i32*** %10 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i32*** %4 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %137, %139
  %141 = icmp eq i64 %140, 0
  %142 = shl i64 %140, 7
  %143 = add i64 %142, -1
  %144 = select i1 %141, i64 0, i64 %143
  %145 = load i64, i64* %6, align 8
  %146 = add i64 %135, %145
  %147 = sub i64 %144, %146
  %148 = icmp ult i64 %147, 2048
  br i1 %148, label %157, label %149

149:                                              ; preds = %131
  %150 = inttoptr i64 %137 to i32**
  %151 = getelementptr inbounds i32*, i32** %150, i64 -1
  %152 = bitcast i32** %151 to i8**
  %153 = load i8*, i8** %152, align 8
  tail call void @_ZdlPv(i8* %153) #19
  %154 = load i32**, i32*** %10, align 8
  %155 = getelementptr i32*, i32** %154, i64 -1
  store i32** %155, i32*** %10, align 8
  %156 = load i64, i64* %6, align 8
  br label %157

157:                                              ; preds = %149, %131, %98, %88
  %158 = phi i64 [ %156, %149 ], [ %145, %131 ], [ %105, %98 ], [ %96, %88 ]
  %159 = load i32**, i32*** %4, align 8
  %160 = lshr i64 %158, 10
  %161 = getelementptr inbounds i32*, i32** %159, i64 %160
  %162 = load i32**, i32*** %10, align 8
  %163 = icmp eq i32** %162, %159
  br i1 %163, label %169, label %164

164:                                              ; preds = %157
  %165 = load i32*, i32** %161, align 8
  %166 = and i64 %158, 1023
  %167 = getelementptr inbounds i32, i32* %165, i64 %166
  %168 = ptrtoint i32* %167 to i64
  br label %169

169:                                              ; preds = %157, %164
  %170 = phi i64 [ %168, %164 ], [ 0, %157 ]
  br i1 %57, label %194, label %171

171:                                              ; preds = %169
  %172 = bitcast i32** %161 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 %170, %173
  %175 = ashr exact i64 %174, 2
  %176 = add nsw i64 %175, %58
  %177 = icmp sgt i64 %176, 0
  br i1 %177, label %178, label %185

178:                                              ; preds = %171
  %179 = lshr i64 %176, 10
  %180 = getelementptr inbounds i32*, i32** %161, i64 %179
  %181 = load i32*, i32** %180, align 8
  %182 = and i64 %176, 1023
  %183 = getelementptr inbounds i32, i32* %181, i64 %182
  %184 = ptrtoint i32* %183 to i64
  br label %194

185:                                              ; preds = %171
  %186 = sub nsw i64 1023, %176
  %187 = sdiv i64 %186, -1024
  %188 = getelementptr inbounds i32*, i32** %161, i64 %187
  %189 = load i32*, i32** %188, align 8
  %190 = srem i64 %186, 1024
  %191 = sub nsw i64 1023, %190
  %192 = getelementptr inbounds i32, i32* %189, i64 %191
  %193 = ptrtoint i32* %192 to i64
  br label %194

194:                                              ; preds = %169, %178, %185
  %195 = phi i64 [ %170, %169 ], [ %184, %178 ], [ %193, %185 ]
  %196 = phi i32** [ %161, %169 ], [ %180, %178 ], [ %188, %185 ]
  %197 = insertvalue { i32**, i32* } undef, i32** %196, 0
  %198 = inttoptr i64 %195 to i32*
  %199 = insertvalue { i32**, i32* } %197, i32* %198, 1
  ret { i32**, i32* } %199
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32**, i32* } @_ZNSt3__113move_backwardIN3net19HostResolverManager8TaskTypeEPS3_RS3_PS4_lLl0ES3_S4_S5_S6_lLl0EEENS_16__deque_iteratorIT5_T6_T7_T8_T9_XT10_EEENS7_IT_T0_T1_T2_T3_XT4_EEESJ_SD_(i32**, i32*, i32**, i32*, i32**, i32*) local_unnamed_addr #0 comdat {
  %7 = ptrtoint i32* %3 to i64
  %8 = icmp eq i32* %3, %1
  br i1 %8, label %172, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i32* %1 to i64
  %11 = ptrtoint i32** %2 to i64
  %12 = ptrtoint i32** %0 to i64
  %13 = sub i64 %11, %12
  %14 = shl i64 %13, 7
  %15 = bitcast i32** %2 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %7, %16
  %18 = ashr exact i64 %17, 2
  %19 = add nsw i64 %18, %14
  %20 = bitcast i32** %0 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %10, %21
  %23 = ashr exact i64 %22, 2
  %24 = sub i64 %19, %23
  %25 = icmp sgt i64 %24, 0
  br i1 %25, label %26, label %172

26:                                               ; preds = %9, %166
  %27 = phi i32* [ %139, %166 ], [ %5, %9 ]
  %28 = phi i32** [ %138, %166 ], [ %4, %9 ]
  %29 = phi i64 [ %140, %166 ], [ %24, %9 ]
  %30 = phi i32** [ %168, %166 ], [ %2, %9 ]
  %31 = phi i64 [ %167, %166 ], [ %7, %9 ]
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32*, i32** %30, align 8
  %34 = icmp eq i32* %33, %32
  br i1 %34, label %35, label %39

35:                                               ; preds = %26
  %36 = getelementptr inbounds i32*, i32** %30, i64 -1
  %37 = load i32*, i32** %36, align 8
  %38 = getelementptr inbounds i32, i32* %37, i64 1024
  br label %39

39:                                               ; preds = %26, %35
  %40 = phi i32* [ %37, %35 ], [ %33, %26 ]
  %41 = phi i32** [ %36, %35 ], [ %30, %26 ]
  %42 = phi i32* [ %38, %35 ], [ %32, %26 ]
  %43 = getelementptr inbounds i32, i32* %42, i64 -1
  %44 = ptrtoint i32* %43 to i64
  %45 = ptrtoint i32* %42 to i64
  %46 = ptrtoint i32* %40 to i64
  %47 = sub i64 %45, %46
  %48 = ashr exact i64 %47, 2
  %49 = icmp sgt i64 %48, %29
  %50 = sub nsw i64 0, %29
  %51 = getelementptr inbounds i32, i32* %42, i64 %50
  %52 = select i1 %49, i64 %29, i64 %48
  %53 = select i1 %49, i32* %51, i32* %40
  %54 = ptrtoint i32* %27 to i64
  %55 = icmp eq i32* %42, %53
  br i1 %55, label %136, label %56

56:                                               ; preds = %39
  %57 = ptrtoint i32* %53 to i64
  br label %58

58:                                               ; preds = %132, %56
  %59 = phi i32* [ %42, %56 ], [ %98, %132 ]
  %60 = phi i32** [ %28, %56 ], [ %134, %132 ]
  %61 = phi i64 [ %54, %56 ], [ %133, %132 ]
  %62 = bitcast i32** %60 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %61, %63
  %65 = ashr exact i64 %64, 2
  %66 = add nsw i64 %65, -1
  %67 = icmp sgt i64 %66, 0
  br i1 %67, label %68, label %74

68:                                               ; preds = %58
  %69 = lshr i64 %66, 10
  %70 = getelementptr inbounds i32*, i32** %60, i64 %69
  %71 = load i32*, i32** %70, align 8
  %72 = and i64 %66, 1023
  %73 = getelementptr inbounds i32, i32* %71, i64 %72
  br label %82

74:                                               ; preds = %58
  %75 = sub nsw i64 1024, %65
  %76 = sdiv i64 %75, -1024
  %77 = getelementptr inbounds i32*, i32** %60, i64 %76
  %78 = load i32*, i32** %77, align 8
  %79 = srem i64 %75, 1024
  %80 = sub nuw nsw i64 1023, %79
  %81 = getelementptr inbounds i32, i32* %78, i64 %80
  br label %82

82:                                               ; preds = %74, %68
  %83 = phi i32* [ %73, %68 ], [ %81, %74 ]
  %84 = phi i32** [ %70, %68 ], [ %77, %74 ]
  %85 = bitcast i32** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds i32, i32* %83, i64 1
  %88 = ptrtoint i32* %87 to i64
  %89 = sub i64 %88, %86
  %90 = ashr exact i64 %89, 2
  %91 = ptrtoint i32* %59 to i64
  %92 = sub i64 %91, %57
  %93 = ashr exact i64 %92, 2
  %94 = icmp sgt i64 %93, %90
  %95 = sub nsw i64 0, %90
  %96 = getelementptr inbounds i32, i32* %59, i64 %95
  %97 = select i1 %94, i64 %90, i64 %93
  %98 = select i1 %94, i32* %96, i32* %53
  %99 = ptrtoint i32* %98 to i64
  %100 = sub i64 %91, %99
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %108, label %102

102:                                              ; preds = %82
  %103 = ashr exact i64 %100, 2
  %104 = sub nsw i64 0, %103
  %105 = getelementptr inbounds i32, i32* %87, i64 %104
  %106 = bitcast i32* %105 to i8*
  %107 = bitcast i32* %98 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %107, i64 %100, i1 false) #18
  br label %108

108:                                              ; preds = %102, %82
  %109 = icmp eq i64 %97, 0
  br i1 %109, label %132, label %110

110:                                              ; preds = %108
  %111 = load i64, i64* %62, align 8
  %112 = sub i64 %61, %111
  %113 = ashr exact i64 %112, 2
  %114 = sub nsw i64 %113, %97
  %115 = icmp sgt i64 %114, 0
  br i1 %115, label %116, label %123

116:                                              ; preds = %110
  %117 = lshr i64 %114, 10
  %118 = getelementptr inbounds i32*, i32** %60, i64 %117
  %119 = load i32*, i32** %118, align 8
  %120 = and i64 %114, 1023
  %121 = getelementptr inbounds i32, i32* %119, i64 %120
  %122 = ptrtoint i32* %121 to i64
  br label %132

123:                                              ; preds = %110
  %124 = sub nsw i64 1023, %114
  %125 = sdiv i64 %124, -1024
  %126 = getelementptr inbounds i32*, i32** %60, i64 %125
  %127 = load i32*, i32** %126, align 8
  %128 = srem i64 %124, 1024
  %129 = sub nuw nsw i64 1023, %128
  %130 = getelementptr inbounds i32, i32* %127, i64 %129
  %131 = ptrtoint i32* %130 to i64
  br label %132

132:                                              ; preds = %123, %116, %108
  %133 = phi i64 [ %61, %108 ], [ %122, %116 ], [ %131, %123 ]
  %134 = phi i32** [ %60, %108 ], [ %118, %116 ], [ %126, %123 ]
  %135 = icmp eq i32* %98, %53
  br i1 %135, label %136, label %58

136:                                              ; preds = %132, %39
  %137 = phi i64 [ %54, %39 ], [ %133, %132 ]
  %138 = phi i32** [ %28, %39 ], [ %134, %132 ]
  %139 = inttoptr i64 %137 to i32*
  %140 = sub nsw i64 %29, %52
  %141 = add nsw i64 %52, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %166, label %143

143:                                              ; preds = %136
  %144 = bitcast i32** %41 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = sub i64 %44, %145
  %147 = ashr exact i64 %146, 2
  %148 = sub i64 %147, %141
  %149 = icmp sgt i64 %148, 0
  br i1 %149, label %150, label %157

150:                                              ; preds = %143
  %151 = lshr i64 %148, 10
  %152 = getelementptr inbounds i32*, i32** %41, i64 %151
  %153 = load i32*, i32** %152, align 8
  %154 = and i64 %148, 1023
  %155 = getelementptr inbounds i32, i32* %153, i64 %154
  %156 = ptrtoint i32* %155 to i64
  br label %166

157:                                              ; preds = %143
  %158 = sub nsw i64 1023, %148
  %159 = sdiv i64 %158, -1024
  %160 = getelementptr inbounds i32*, i32** %41, i64 %159
  %161 = load i32*, i32** %160, align 8
  %162 = srem i64 %158, 1024
  %163 = sub nsw i64 1023, %162
  %164 = getelementptr inbounds i32, i32* %161, i64 %163
  %165 = ptrtoint i32* %164 to i64
  br label %166

166:                                              ; preds = %136, %150, %157
  %167 = phi i64 [ %44, %136 ], [ %156, %150 ], [ %165, %157 ]
  %168 = phi i32** [ %41, %136 ], [ %152, %150 ], [ %160, %157 ]
  %169 = icmp sgt i64 %140, 0
  br i1 %169, label %26, label %170

170:                                              ; preds = %166
  %171 = inttoptr i64 %137 to i32*
  br label %172

172:                                              ; preds = %170, %6, %9
  %173 = phi i32** [ %4, %9 ], [ %4, %6 ], [ %138, %170 ]
  %174 = phi i32* [ %5, %9 ], [ %5, %6 ], [ %171, %170 ]
  %175 = insertvalue { i32**, i32* } undef, i32** %173, 0
  %176 = insertvalue { i32**, i32* } %175, i32* %174, 1
  ret { i32**, i32* } %176
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32**, i32* } @_ZNSt3__14moveIN3net19HostResolverManager8TaskTypeEPS3_RS3_PS4_lLl0ES3_S4_S5_S6_lLl0EEENS_16__deque_iteratorIT5_T6_T7_T8_T9_XT10_EEENS7_IT_T0_T1_T2_T3_XT4_EEESJ_SD_(i32**, i32*, i32**, i32*, i32**, i32*) local_unnamed_addr #0 comdat {
  %7 = ptrtoint i32* %1 to i64
  %8 = icmp eq i32* %3, %1
  br i1 %8, label %132, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i32* %3 to i64
  %11 = ptrtoint i32** %2 to i64
  %12 = ptrtoint i32** %0 to i64
  %13 = sub i64 %11, %12
  %14 = shl i64 %13, 7
  %15 = bitcast i32** %2 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %10, %16
  %18 = ashr exact i64 %17, 2
  %19 = add nsw i64 %18, %14
  %20 = bitcast i32** %0 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %7, %21
  %23 = ashr exact i64 %22, 2
  %24 = sub i64 %19, %23
  %25 = icmp sgt i64 %24, 0
  br i1 %25, label %26, label %132

26:                                               ; preds = %9, %126
  %27 = phi i32* [ %100, %126 ], [ %5, %9 ]
  %28 = phi i32** [ %99, %126 ], [ %4, %9 ]
  %29 = phi i64 [ %101, %126 ], [ %24, %9 ]
  %30 = phi i64 [ %128, %126 ], [ %7, %9 ]
  %31 = phi i32** [ %127, %126 ], [ %0, %9 ]
  %32 = inttoptr i64 %30 to i32*
  %33 = load i32*, i32** %31, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 1024
  %35 = ptrtoint i32* %34 to i64
  %36 = sub i64 %35, %30
  %37 = ashr exact i64 %36, 2
  %38 = icmp sgt i64 %37, %29
  %39 = getelementptr inbounds i32, i32* %32, i64 %29
  %40 = select i1 %38, i32* %39, i32* %34
  %41 = select i1 %38, i64 %29, i64 %37
  %42 = ptrtoint i32* %27 to i64
  %43 = icmp eq i32* %40, %32
  br i1 %43, label %97, label %44

44:                                               ; preds = %26
  %45 = ptrtoint i32* %40 to i64
  br label %46

46:                                               ; preds = %93, %44
  %47 = phi i32* [ %32, %44 ], [ %61, %93 ]
  %48 = phi i32** [ %28, %44 ], [ %95, %93 ]
  %49 = phi i64 [ %42, %44 ], [ %94, %93 ]
  %50 = load i32*, i32** %48, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 1024
  %52 = ptrtoint i32* %51 to i64
  %53 = sub i64 %52, %49
  %54 = ashr exact i64 %53, 2
  %55 = ptrtoint i32* %47 to i64
  %56 = sub i64 %45, %55
  %57 = ashr exact i64 %56, 2
  %58 = icmp sgt i64 %57, %54
  %59 = getelementptr inbounds i32, i32* %47, i64 %54
  %60 = select i1 %58, i64 %54, i64 %57
  %61 = select i1 %58, i32* %59, i32* %40
  %62 = ptrtoint i32* %61 to i64
  %63 = sub i64 %62, %55
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %46
  %66 = inttoptr i64 %49 to i8*
  %67 = bitcast i32* %47 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %67, i64 %63, i1 false) #18
  br label %68

68:                                               ; preds = %65, %46
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %93, label %70

70:                                               ; preds = %68
  %71 = bitcast i32** %48 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %49, %72
  %74 = ashr exact i64 %73, 2
  %75 = add nsw i64 %74, %60
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %77, label %84

77:                                               ; preds = %70
  %78 = lshr i64 %75, 10
  %79 = getelementptr inbounds i32*, i32** %48, i64 %78
  %80 = load i32*, i32** %79, align 8
  %81 = and i64 %75, 1023
  %82 = getelementptr inbounds i32, i32* %80, i64 %81
  %83 = ptrtoint i32* %82 to i64
  br label %93

84:                                               ; preds = %70
  %85 = sub nsw i64 1023, %75
  %86 = sdiv i64 %85, -1024
  %87 = getelementptr inbounds i32*, i32** %48, i64 %86
  %88 = load i32*, i32** %87, align 8
  %89 = srem i64 %85, 1024
  %90 = sub nuw nsw i64 1023, %89
  %91 = getelementptr inbounds i32, i32* %88, i64 %90
  %92 = ptrtoint i32* %91 to i64
  br label %93

93:                                               ; preds = %84, %77, %68
  %94 = phi i64 [ %49, %68 ], [ %83, %77 ], [ %92, %84 ]
  %95 = phi i32** [ %48, %68 ], [ %79, %77 ], [ %87, %84 ]
  %96 = icmp eq i32* %61, %40
  br i1 %96, label %97, label %46

97:                                               ; preds = %93, %26
  %98 = phi i64 [ %42, %26 ], [ %94, %93 ]
  %99 = phi i32** [ %28, %26 ], [ %95, %93 ]
  %100 = inttoptr i64 %98 to i32*
  %101 = sub nsw i64 %29, %41
  %102 = icmp eq i64 %41, 0
  br i1 %102, label %126, label %103

103:                                              ; preds = %97
  %104 = bitcast i32** %31 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = sub i64 %30, %105
  %107 = ashr exact i64 %106, 2
  %108 = add nsw i64 %107, %41
  %109 = icmp sgt i64 %108, 0
  br i1 %109, label %110, label %117

110:                                              ; preds = %103
  %111 = lshr i64 %108, 10
  %112 = getelementptr inbounds i32*, i32** %31, i64 %111
  %113 = load i32*, i32** %112, align 8
  %114 = and i64 %108, 1023
  %115 = getelementptr inbounds i32, i32* %113, i64 %114
  %116 = ptrtoint i32* %115 to i64
  br label %126

117:                                              ; preds = %103
  %118 = sub nsw i64 1023, %108
  %119 = sdiv i64 %118, -1024
  %120 = getelementptr inbounds i32*, i32** %31, i64 %119
  %121 = load i32*, i32** %120, align 8
  %122 = srem i64 %118, 1024
  %123 = sub nsw i64 1023, %122
  %124 = getelementptr inbounds i32, i32* %121, i64 %123
  %125 = ptrtoint i32* %124 to i64
  br label %126

126:                                              ; preds = %97, %110, %117
  %127 = phi i32** [ %31, %97 ], [ %112, %110 ], [ %120, %117 ]
  %128 = phi i64 [ %30, %97 ], [ %116, %110 ], [ %125, %117 ]
  %129 = icmp sgt i64 %101, 0
  br i1 %129, label %26, label %130

130:                                              ; preds = %126
  %131 = inttoptr i64 %98 to i32*
  br label %132

132:                                              ; preds = %130, %6, %9
  %133 = phi i32** [ %4, %9 ], [ %4, %6 ], [ %99, %130 ]
  %134 = phi i32* [ %5, %9 ], [ %5, %6 ], [ %131, %130 ]
  %135 = insertvalue { i32**, i32* } undef, i32** %133, 0
  %136 = insertvalue { i32**, i32* } %135, i32* %134, 1
  ret { i32**, i32* } %136
}

declare void @_ZN3net9DnsConfigC1EOS0_(%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"* dereferenceable(208)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3net16NetLogWithSource8AddEntryIZNS_19HostResolverManager3Job13CancelRequestEPNS2_11RequestImplEEUlvE_EEvNS_15NetLogEventTypeENS_16NetLogEventPhaseERKT_(%"class.net::NetLogWithSource"*, i32, i32, %class.anon.742* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.base::Value", align 8
  %6 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 1
  %7 = load %"class.net::NetLog"*, %"class.net::NetLog"** %6, align 8
  %8 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %7, i64 0, i32 3
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %27, label %11, !prof !41

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 0
  %13 = bitcast %"class.base::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #18
  %14 = getelementptr inbounds %class.anon.742, %class.anon.742* %3, i64 0, i32 1
  %15 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %14, align 8, !noalias !207
  %16 = getelementptr inbounds %class.anon.742, %class.anon.742* %3, i64 0, i32 0
  %17 = load %"class.net::HostResolverManager::RequestImpl"**, %"class.net::HostResolverManager::RequestImpl"*** %16, align 8, !noalias !207
  %18 = load %"class.net::HostResolverManager::RequestImpl"*, %"class.net::HostResolverManager::RequestImpl"** %17, align 8, !noalias !207
  %19 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %18, i64 0, i32 2, i32 0
  %20 = bitcast %"class.net::HostResolverManager::Job"* %15 to i32 (%"class.net::HostResolverManager::Job"*)***
  %21 = load i32 (%"class.net::HostResolverManager::Job"*)**, i32 (%"class.net::HostResolverManager::Job"*)*** %20, align 8, !noalias !207
  %22 = getelementptr inbounds i32 (%"class.net::HostResolverManager::Job"*)*, i32 (%"class.net::HostResolverManager::Job"*)** %21, i64 6
  %23 = load i32 (%"class.net::HostResolverManager::Job"*)*, i32 (%"class.net::HostResolverManager::Job"*)** %22, align 8, !noalias !207
  %24 = tail call i32 %23(%"class.net::HostResolverManager::Job"* %15) #18, !noalias !207
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false) #18, !alias.scope !210
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %5, i8 zeroext 6) #18
  call void @_ZNK3net12NetLogSource20AddToEventParametersEPN4base5ValueE(%"struct.net::NetLogSource"* %19, %"class.base::Value"* nonnull %5) #18
  %25 = call i8* @_ZN3net23RequestPriorityToStringENS_15RequestPriorityE(i32 %24) #18
  %26 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKc(%"class.base::Value"* nonnull %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0), i64 8, i8* %25) #18
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %7, i32 %1, %"struct.net::NetLogSource"* dereferenceable(16) %12, i32 %2, %"class.base::Value"* nonnull dereferenceable(32) %5) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #18
  br label %27

27:                                               ; preds = %4, %11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN3net19HostResolverManager11RequestImpl15LogStartRequestEvENKUlvE_clEv(%"class.base::Value"* noalias sret, %class.anon.743*) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %class.anon.743, %class.anon.743* %1, i64 0, i32 0
  %6 = load %"class.net::HostResolverManager::RequestImpl"*, %"class.net::HostResolverManager::RequestImpl"** %5, align 8
  %7 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #18
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #18
  %9 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %6, i64 0, i32 3
  call void @_ZNK3net12HostPortPair8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.net::HostPortPair"* %9) #18
  %10 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i64 0, i64 0), i64 4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #18
  %11 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %17) #19
  br label %18

18:                                               ; preds = %2, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #18
  %19 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %6, i64 0, i32 5, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.56, i64 0, i64 0), i64 14, i32 %20) #18
  %22 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %6, i64 0, i32 5, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = icmp ne i32 %23, 2
  %25 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.57, i64 0, i64 0), i64 21, i1 zeroext %24) #18
  %26 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %6, i64 0, i32 5, i32 6
  %27 = load i8, i8* %26, align 2, !range !2
  %28 = icmp ne i8 %27, 0
  %29 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i64 0, i64 0), i64 14, i1 zeroext %28) #18
  %30 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #18
  %31 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %6, i64 0, i32 4
  call void @_ZNK3net19NetworkIsolationKey13ToDebugStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.net::NetworkIsolationKey"* %31) #18
  %32 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.59, i64 0, i64 0), i64 21, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #18
  %33 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %18
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #19
  br label %40

40:                                               ; preds = %18, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #18
  ret void
}

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"*, i8*, i64, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK3net12HostPortPair8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.net::HostPortPair"*) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"*, i8*, i64, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK3net19NetworkIsolationKey13ToDebugStringEv(%"class.std::__1::basic_string"* sret, %"class.net::NetworkIsolationKey"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #15

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #15

declare void @_ZN3net16ResolveErrorInfoC1ERKS0_(%"struct.net::ResolveErrorInfo"*, %"struct.net::ResolveErrorInfo"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"*, %"class.net::AddressList"* dereferenceable(48)) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN3net19HostResolverManager6JobKeyENS_10unique_ptrINS3_3JobENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %30, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net19HostResolverManager6JobKeyENS_10unique_ptrINS3_3JobENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #18
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net19HostResolverManager6JobKeyENS_10unique_ptrINS3_3JobENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #18
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %11, align 8
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %11, align 8
  %13 = icmp eq %"class.net::HostResolverManager::Job"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.net::HostResolverManager::Job"* %12 to void (%"class.net::HostResolverManager::Job"*)***
  %16 = load void (%"class.net::HostResolverManager::Job"*)**, void (%"class.net::HostResolverManager::Job"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.net::HostResolverManager::Job"*)*, void (%"class.net::HostResolverManager::Job"*)** %16, i64 1
  %18 = load void (%"class.net::HostResolverManager::Job"*)*, void (%"class.net::HostResolverManager::Job"*)** %17, align 8
  tail call void %18(%"class.net::HostResolverManager::Job"* nonnull %12) #18
  br label %19

19:                                               ; preds = %14, %4
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %20) #18
  %21 = bitcast %"struct.std::__1::pair.467"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"struct.std::__1::pair.467", %"struct.std::__1::pair.467"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #19
  br label %28

28:                                               ; preds = %19, %25
  %29 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %29) #19
  br label %30

30:                                               ; preds = %2, %28
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net21PrioritizedDispatcherD1Ev(%"class.net::PrioritizedDispatcher"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN3net14ResolveContextELb1ELb0ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %0, %1
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %8

8:                                                ; preds = %26, %6
  %9 = phi %"class.base::internal::CheckedObserverAdapter"* [ %0, %6 ], [ %27, %26 ]
  %10 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 0
  %15 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %14) #18
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.60, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.61, i64 0, i64 0)) #18
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #18
  br label %18

18:                                               ; preds = %16, %13, %8
  %19 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 0
  %20 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %19) #18
  %21 = bitcast i64* %10 to %"class.base::CheckedObserver"**
  %22 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %21, align 8
  %23 = icmp eq %"class.base::CheckedObserver"* %22, null
  %24 = xor i1 %20, true
  %25 = or i1 %23, %24
  br i1 %25, label %31, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 1
  %28 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %27, %1
  br i1 %28, label %29, label %8

29:                                               ; preds = %26
  %30 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %1 to i64
  br label %69

31:                                               ; preds = %18, %2
  %32 = phi %"class.base::internal::CheckedObserverAdapter"* [ %0, %2 ], [ %9, %18 ]
  %33 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %32 to i64
  %34 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %32, %1
  br i1 %34, label %69, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %32, i64 1
  %37 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %36, %1
  br i1 %37, label %69, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %40

40:                                               ; preds = %38, %65
  %41 = phi %"class.base::internal::CheckedObserverAdapter"* [ %36, %38 ], [ %67, %65 ]
  %42 = phi %"class.base::internal::CheckedObserverAdapter"* [ %32, %38 ], [ %41, %65 ]
  %43 = phi i64 [ %33, %38 ], [ %66, %65 ]
  %44 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %42, i64 1, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %48) #18
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.60, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.61, i64 0, i64 0)) #18
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #18
  br label %52

52:                                               ; preds = %40, %47, %50
  %53 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 0, i32 0, i32 0, i32 0
  %54 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %53) #18
  %55 = bitcast i64* %44 to %"class.base::CheckedObserver"**
  %56 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %55, align 8
  %57 = icmp eq %"class.base::CheckedObserver"* %56, null
  %58 = xor i1 %54, true
  %59 = or i1 %57, %58
  br i1 %59, label %65, label %60

60:                                               ; preds = %52
  %61 = inttoptr i64 %43 to %"class.base::internal::CheckedObserverAdapter"*
  %62 = call dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"* %61, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %41) #18
  %63 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %61, i64 1
  %64 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %63 to i64
  br label %65

65:                                               ; preds = %60, %52
  %66 = phi i64 [ %43, %52 ], [ %64, %60 ]
  %67 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 1
  %68 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %67, %1
  br i1 %68, label %69, label %40

69:                                               ; preds = %65, %35, %31, %29
  %70 = phi i64 [ %33, %31 ], [ %30, %29 ], [ %33, %35 ], [ %66, %65 ]
  %71 = inttoptr i64 %70 to %"class.base::internal::CheckedObserverAdapter"*
  ret %"class.base::internal::CheckedObserverAdapter"* %71
}

; Function Attrs: nounwind
declare void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"*) unnamed_addr #3

declare dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3net21PrioritizedDispatcherC1ERKNS0_6LimitsE(%"class.net::PrioritizedDispatcher"*, %"struct.net::PrioritizedDispatcher::Limits"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base19LogInvalidEnumValueERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_i(%"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager11RequestImplC2ERKNS_16NetLogWithSourceERKNS_12HostPortPairERKNS_19NetworkIsolationKeyERKN4absl8optionalINS_12HostResolver21ResolveHostParametersEEEPNS_14ResolveContextEPNS_9HostCacheEN4base7WeakPtrIS0_EEPKNSM_9TickClockE(%"class.net::HostResolverManager::RequestImpl"*, %"class.net::NetLogWithSource"* dereferenceable(24), %"class.net::HostPortPair"* dereferenceable(32), %"class.net::NetworkIsolationKey"* dereferenceable(184), %"class.absl::optional.155"* dereferenceable(28), %"class.net::ResolveContext"*, %"class.net::HostCache"*, %"class.base::WeakPtr.230"*, %"class.base::TickClock"*) unnamed_addr #0 comdat align 2 {
  %10 = bitcast %"class.net::HostResolverManager::RequestImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [13 x i8*] }, { [5 x i8*], [13 x i8*] }* @_ZTVN3net19HostResolverManager29CancellableResolveHostRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [13 x i8*] }, { [5 x i8*], [13 x i8*] }* @_ZTVN3net19HostResolverManager29CancellableResolveHostRequestE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %10, align 8
  %11 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* %11) #18
  %12 = bitcast %"class.net::HostResolverManager::RequestImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [13 x i8*] }, { [14 x i8*], [13 x i8*] }* @_ZTVN3net19HostResolverManager11RequestImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [13 x i8*] }, { [14 x i8*], [13 x i8*] }* @_ZTVN3net19HostResolverManager11RequestImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %12, align 8
  %13 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 2
  %14 = bitcast %"class.net::NetLogWithSource"* %13 to i8*
  %15 = bitcast %"class.net::NetLogWithSource"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false)
  %16 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 3
  %17 = bitcast %"class.net::HostPortPair"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %9
  %22 = bitcast %"class.net::HostPortPair"* %16 to i8*
  %23 = bitcast %"class.net::HostPortPair"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false) #18
  br label %30

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %16, i64 0, i32 0
  %26 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %25, i8* %27, i64 %29) #18
  br label %30

30:                                               ; preds = %21, %24
  %31 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 3, i32 1
  %32 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %2, i64 0, i32 1
  %33 = load i16, i16* %32, align 8
  store i16 %33, i16* %31, align 8
  %34 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 4
  %35 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features36kSplitHostCacheByNetworkIsolationKeyE) #18
  br i1 %35, label %36, label %37

36:                                               ; preds = %30
  tail call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %34, %"class.net::NetworkIsolationKey"* dereferenceable(184) %3) #18
  br label %38

37:                                               ; preds = %30
  tail call void @_ZN3net19NetworkIsolationKeyC1Ev(%"class.net::NetworkIsolationKey"* %34) #18
  br label %38

38:                                               ; preds = %37, %36
  %39 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 5
  %40 = getelementptr inbounds %"class.absl::optional.155", %"class.absl::optional.155"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8, i8* %40, align 4, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.absl::optional.155", %"class.absl::optional.155"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net12HostResolver21ResolveHostParametersC1ERKS1_(%"struct.net::HostResolver::ResolveHostParameters"* %39, %"struct.net::HostResolver::ResolveHostParameters"* dereferenceable(24) %44) #18
  br label %46

45:                                               ; preds = %38
  tail call void @_ZN3net12HostResolver21ResolveHostParametersC1Ev(%"struct.net::HostResolver::ResolveHostParameters"* %39) #18
  br label %46

46:                                               ; preds = %45, %43
  %47 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 6
  store %"class.net::ResolveContext"* %5, %"class.net::ResolveContext"** %47, align 8
  %48 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 7
  store %"class.net::HostCache"* %6, %"class.net::HostCache"** %48, align 8
  %49 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 8
  %50 = tail call i32 @_ZN3net12HostResolver29ParametersToHostResolverFlagsERKNS0_21ResolveHostParametersE(%"struct.net::HostResolver::ResolveHostParameters"* dereferenceable(24) %39) #18
  store i32 %50, i32* %49, align 8
  %51 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 9
  %52 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 5, i32 1
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %51, align 4
  %54 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 10
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %54, align 8
  %55 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 11, i32 0, i32 0
  %56 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %7, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %55, %"class.base::internal::WeakReference"* dereferenceable(8) %56) #18
  %57 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 11, i32 0, i32 1
  %58 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %7, i64 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  %60 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %60, align 8
  %61 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 13
  store i8 0, i8* %61, align 8
  %62 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %62, align 8
  %63 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 2
  %64 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %64, align 8
  %65 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1
  %66 = bitcast %union.anon.105* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #18
  %67 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 18
  %68 = bitcast %union.anon.301* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 201, i1 false)
  tail call void @_ZN3net16ResolveErrorInfoC1Ev(%"struct.net::ResolveErrorInfo"* %67) #18
  %69 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 19
  store %"class.base::TickClock"* %8, %"class.base::TickClock"** %69, align 8
  %70 = getelementptr inbounds %"class.net::HostResolverManager::RequestImpl", %"class.net::HostResolverManager::RequestImpl"* %0, i64 0, i32 20, i32 0, i32 0
  store i64 0, i64* %70, align 8
  ret void
}

declare void @_ZN3net19NetworkIsolationKeyC1Ev(%"class.net::NetworkIsolationKey"*) unnamed_addr #1

declare void @_ZN3net12HostResolver21ResolveHostParametersC1ERKS1_(%"struct.net::HostResolver::ResolveHostParameters"*, %"struct.net::HostResolver::ResolveHostParameters"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN3net12HostResolver21ResolveHostParametersC1Ev(%"struct.net::HostResolver::ResolveHostParameters"*) unnamed_addr #1

declare i32 @_ZN3net12HostResolver29ParametersToHostResolverFlagsERKNS0_21ResolveHostParametersE(%"struct.net::HostResolver::ResolveHostParameters"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN3net16ResolveErrorInfoC1Ev(%"struct.net::ResolveErrorInfo"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager29CancellableResolveHostRequestD2Ev(%"class.net::HostResolverManager::CancellableResolveHostRequest"*) unnamed_addr #7 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager29CancellableResolveHostRequestD0Ev(%"class.net::HostResolverManager::CancellableResolveHostRequest"*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #20
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N3net19HostResolverManager29CancellableResolveHostRequestD1Ev(%"class.net::HostResolverManager::CancellableResolveHostRequest"*) unnamed_addr #7 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N3net19HostResolverManager29CancellableResolveHostRequestD0Ev(%"class.net::HostResolverManager::CancellableResolveHostRequest"*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #20
  unreachable
}

declare dereferenceable(32) %"class.absl::optional.250"* @_ZNK3net12HostResolver18ResolveHostRequest32GetExperimentalResultsForTestingEv(%"class.net::HostResolver::ResolveHostRequest"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net12HostResolver18ResolveHostRequest21ChangeRequestPriorityENS_15RequestPriorityE(%"class.net::HostResolver::ResolveHostRequest"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager16ProbeRequestImplD2Ev(%"class.net::HostResolverManager::ProbeRequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.net::HostResolverManager::ProbeRequestImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*], [6 x i8*] }, { [8 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN3net19HostResolverManager16ProbeRequestImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*], [6 x i8*] }, { [8 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN3net19HostResolverManager16ProbeRequestImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.net::ResolveContext::DohStatusObserver", %"class.net::ResolveContext::DohStatusObserver"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*], [6 x i8*] }, { [8 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN3net19HostResolverManager16ProbeRequestImplE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.net::DnsProbeRunner"*, %"class.net::DnsProbeRunner"** %5, align 8
  store %"class.net::DnsProbeRunner"* null, %"class.net::DnsProbeRunner"** %5, align 8
  %7 = icmp eq %"class.net::DnsProbeRunner"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.net::DnsProbeRunner"* %6 to void (%"class.net::DnsProbeRunner"*)***
  %10 = load void (%"class.net::DnsProbeRunner"*)**, void (%"class.net::DnsProbeRunner"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.net::DnsProbeRunner"*)*, void (%"class.net::DnsProbeRunner"*)** %10, i64 1
  %12 = load void (%"class.net::DnsProbeRunner"*)*, void (%"class.net::DnsProbeRunner"*)** %11, align 8
  tail call void %12(%"class.net::DnsProbeRunner"* nonnull %6) #18
  br label %13

13:                                               ; preds = %1, %8
  %14 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 0, i32 2
  %15 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %14, align 8
  %16 = icmp eq %"class.net::ResolveContext"* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @_ZN3net14ResolveContext27UnregisterDohStatusObserverEPKNS0_17DohStatusObserverE(%"class.net::ResolveContext"* nonnull %15, %"class.net::ResolveContext::DohStatusObserver"* %3) #18
  br label %18

18:                                               ; preds = %13, %17
  store %"class.net::ResolveContext"* null, %"class.net::ResolveContext"** %14, align 8
  %19 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %19) #18
  %20 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %20) #18
  %21 = load %"class.net::DnsProbeRunner"*, %"class.net::DnsProbeRunner"** %5, align 8
  store %"class.net::DnsProbeRunner"* null, %"class.net::DnsProbeRunner"** %5, align 8
  %22 = icmp eq %"class.net::DnsProbeRunner"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.net::DnsProbeRunner"* %21 to void (%"class.net::DnsProbeRunner"*)***
  %25 = load void (%"class.net::DnsProbeRunner"*)**, void (%"class.net::DnsProbeRunner"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.net::DnsProbeRunner"*)*, void (%"class.net::DnsProbeRunner"*)** %25, i64 1
  %27 = load void (%"class.net::DnsProbeRunner"*)*, void (%"class.net::DnsProbeRunner"*)** %26, align 8
  tail call void %27(%"class.net::DnsProbeRunner"* nonnull %21) #18
  br label %28

28:                                               ; preds = %18, %23
  %29 = getelementptr inbounds %"class.net::ResolveContext::DohStatusObserver", %"class.net::ResolveContext::DohStatusObserver"* %3, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %29) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager16ProbeRequestImplD0Ev(%"class.net::HostResolverManager::ProbeRequestImpl"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN3net19HostResolverManager16ProbeRequestImplD2Ev(%"class.net::HostResolverManager::ProbeRequestImpl"* %0) #18
  %2 = bitcast %"class.net::HostResolverManager::ProbeRequestImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager16ProbeRequestImpl6CancelEv(%"class.net::HostResolverManager::ProbeRequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.net::DnsProbeRunner"*, %"class.net::DnsProbeRunner"** %2, align 8
  store %"class.net::DnsProbeRunner"* null, %"class.net::DnsProbeRunner"** %2, align 8
  %4 = icmp eq %"class.net::DnsProbeRunner"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.net::DnsProbeRunner"* %3 to void (%"class.net::DnsProbeRunner"*)***
  %7 = load void (%"class.net::DnsProbeRunner"*)**, void (%"class.net::DnsProbeRunner"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.net::DnsProbeRunner"*)*, void (%"class.net::DnsProbeRunner"*)** %7, i64 1
  %9 = load void (%"class.net::DnsProbeRunner"*)*, void (%"class.net::DnsProbeRunner"*)** %8, align 8
  tail call void %9(%"class.net::DnsProbeRunner"* nonnull %3) #18
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 0, i32 2
  %12 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %11, align 8
  %13 = icmp eq %"class.net::ResolveContext"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 0, i32 1
  tail call void @_ZN3net14ResolveContext27UnregisterDohStatusObserverEPKNS0_17DohStatusObserverE(%"class.net::ResolveContext"* nonnull %12, %"class.net::ResolveContext::DohStatusObserver"* %15) #18
  br label %16

16:                                               ; preds = %10, %14
  store %"class.net::ResolveContext"* null, %"class.net::ResolveContext"** %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3net19HostResolverManager16ProbeRequestImpl5StartEv(%"class.net::HostResolverManager::ProbeRequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 0, i32 2
  %3 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %2, align 8
  %4 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 0, i32 1
  tail call void @_ZN3net14ResolveContext25RegisterDohStatusObserverEPNS0_17DohStatusObserverE(%"class.net::ResolveContext"* %3, %"class.net::ResolveContext::DohStatusObserver"* %4) #18
  tail call void @_ZN3net19HostResolverManager16ProbeRequestImpl11StartRunnerEb(%"class.net::HostResolverManager::ProbeRequestImpl"* %0, i1 zeroext false)
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager16ProbeRequestImpl16OnSessionChangedEv(%"class.net::HostResolverManager::ProbeRequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.net::DnsProbeRunner"*, %"class.net::DnsProbeRunner"** %2, align 8
  store %"class.net::DnsProbeRunner"* null, %"class.net::DnsProbeRunner"** %2, align 8
  %4 = icmp eq %"class.net::DnsProbeRunner"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.net::DnsProbeRunner"* %3 to void (%"class.net::DnsProbeRunner"*)***
  %7 = load void (%"class.net::DnsProbeRunner"*)**, void (%"class.net::DnsProbeRunner"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.net::DnsProbeRunner"*)*, void (%"class.net::DnsProbeRunner"*)** %7, i64 1
  %9 = load void (%"class.net::DnsProbeRunner"*)*, void (%"class.net::DnsProbeRunner"*)** %8, align 8
  tail call void %9(%"class.net::DnsProbeRunner"* nonnull %3) #18
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %11) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager16ProbeRequestImpl22OnDohServerUnavailableEb(%"class.net::HostResolverManager::ProbeRequestImpl"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback.335", align 8
  %6 = alloca %"class.base::WeakPtr.751", align 8
  %7 = zext i1 %1 to i8
  %8 = tail call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #18
  %9 = bitcast %class.scoped_refptr.81* %8 to %"class.base::TaskRunner"**
  %10 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %9, align 8
  %11 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #18
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.62, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 832) #18
  %12 = bitcast %"class.base::WeakPtr.751"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #18
  %13 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #18, !noalias !213
  %14 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 0, i32 5, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %14) #18, !noalias !213
  %15 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 0, i32 5, i32 0, i32 1
  %16 = load i64, i64* %15, align 8, !noalias !213
  %17 = getelementptr inbounds %"class.base::WeakPtr.751", %"class.base::WeakPtr.751"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %17, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %16) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #18, !noalias !213
  %18 = call i8* @_Znwm(i64 72) #19, !noalias !216
  %19 = bitcast i8* %18 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %19, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager16ProbeRequestImplEFvbEJNS_7WeakPtrIS5_EEbEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net19HostResolverManager16ProbeRequestImplEFvbEJNS_7WeakPtrIS4_EEbEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManager16ProbeRequestImplEFvbEJNS_7WeakPtrIS5_EEbEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE) #18, !noalias !216
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::HostResolverManager::ProbeRequestImpl"*, i1)* @_ZN3net19HostResolverManager16ProbeRequestImpl11StartRunnerEb to i64), i64 0>, <2 x i64>* %21, align 8, !noalias !216
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = bitcast i8* %22 to %"class.base::internal::WeakReference"*
  %24 = getelementptr inbounds %"class.base::WeakPtr.751", %"class.base::WeakPtr.751"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %23, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %24) #18, !noalias !216
  %25 = getelementptr inbounds i8, i8* %18, i64 56
  %26 = bitcast i8* %25 to i64*
  %27 = getelementptr inbounds %"class.base::WeakPtr.751", %"class.base::WeakPtr.751"* %6, i64 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8, !noalias !216
  store i64 %28, i64* %26, align 8, !noalias !216
  %29 = getelementptr inbounds i8, i8* %18, i64 64
  store i8 %7, i8* %29, align 1, !noalias !216
  %30 = bitcast %"class.base::OnceCallback.335"* %5 to i8**
  store i8* %18, i8** %30, align 8, !alias.scope !216
  %31 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %10, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback.335"* nonnull %5) #18
  %32 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #18
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %17) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N3net19HostResolverManager16ProbeRequestImplD1Ev(%"class.net::HostResolverManager::ProbeRequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 -1, i32 5, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.net::HostResolverManager::ProbeRequestImpl"*
  tail call void @_ZN3net19HostResolverManager16ProbeRequestImplD2Ev(%"class.net::HostResolverManager::ProbeRequestImpl"* %3) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N3net19HostResolverManager16ProbeRequestImplD0Ev(%"class.net::HostResolverManager::ProbeRequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 -1, i32 5, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.net::HostResolverManager::ProbeRequestImpl"*
  tail call void @_ZN3net19HostResolverManager16ProbeRequestImplD2Ev(%"class.net::HostResolverManager::ProbeRequestImpl"* %3) #18
  %4 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn8_N3net19HostResolverManager16ProbeRequestImpl5StartEv(%"class.net::HostResolverManager::ProbeRequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 -1, i32 5, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.net::HostResolverManager::ProbeRequestImpl"*
  %4 = getelementptr inbounds i64, i64* %2, i64 5
  %5 = bitcast i64* %4 to %"class.net::ResolveContext"**
  %6 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %5, align 8
  %7 = getelementptr inbounds i64, i64* %2, i64 2
  %8 = bitcast i64* %7 to %"class.net::ResolveContext::DohStatusObserver"*
  tail call void @_ZN3net14ResolveContext25RegisterDohStatusObserverEPNS0_17DohStatusObserverE(%"class.net::ResolveContext"* %6, %"class.net::ResolveContext::DohStatusObserver"* %8) #18
  tail call void @_ZN3net19HostResolverManager16ProbeRequestImpl11StartRunnerEb(%"class.net::HostResolverManager::ProbeRequestImpl"* %3, i1 zeroext false) #18
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N3net19HostResolverManager16ProbeRequestImplD1Ev(%"class.net::HostResolverManager::ProbeRequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 -1, i32 5
  %3 = bitcast %"class.base::WeakPtrFactory.384"* %2 to %"class.net::HostResolverManager::ProbeRequestImpl"*
  tail call void @_ZN3net19HostResolverManager16ProbeRequestImplD2Ev(%"class.net::HostResolverManager::ProbeRequestImpl"* %3) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N3net19HostResolverManager16ProbeRequestImplD0Ev(%"class.net::HostResolverManager::ProbeRequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 -1, i32 5
  %3 = bitcast %"class.base::WeakPtrFactory.384"* %2 to %"class.net::HostResolverManager::ProbeRequestImpl"*
  tail call void @_ZN3net19HostResolverManager16ProbeRequestImplD2Ev(%"class.net::HostResolverManager::ProbeRequestImpl"* %3) #18
  %4 = bitcast %"class.base::WeakPtrFactory.384"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N3net19HostResolverManager16ProbeRequestImpl16OnSessionChangedEv(%"class.net::HostResolverManager::ProbeRequestImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 -1, i32 5
  %3 = getelementptr inbounds %"class.base::WeakPtrFactory.384", %"class.base::WeakPtrFactory.384"* %2, i64 3
  %4 = bitcast %"class.base::WeakPtrFactory.384"* %3 to %"class.net::DnsProbeRunner"**
  %5 = load %"class.net::DnsProbeRunner"*, %"class.net::DnsProbeRunner"** %4, align 8
  store %"class.net::DnsProbeRunner"* null, %"class.net::DnsProbeRunner"** %4, align 8
  %6 = icmp eq %"class.net::DnsProbeRunner"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.net::DnsProbeRunner"* %5 to void (%"class.net::DnsProbeRunner"*)***
  %9 = load void (%"class.net::DnsProbeRunner"*)**, void (%"class.net::DnsProbeRunner"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.net::DnsProbeRunner"*)*, void (%"class.net::DnsProbeRunner"*)** %9, i64 1
  %11 = load void (%"class.net::DnsProbeRunner"*)*, void (%"class.net::DnsProbeRunner"*)** %10, align 8
  tail call void %11(%"class.net::DnsProbeRunner"* nonnull %5) #18
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.base::WeakPtrFactory.384", %"class.base::WeakPtrFactory.384"* %2, i64 4, i32 0, i32 1
  %14 = bitcast i64* %13 to %"class.base::internal::WeakReferenceOwner"*
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %14) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N3net19HostResolverManager16ProbeRequestImpl22OnDohServerUnavailableEb(%"class.net::HostResolverManager::ProbeRequestImpl"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 -1, i32 5
  %4 = bitcast %"class.base::WeakPtrFactory.384"* %3 to %"class.net::HostResolverManager::ProbeRequestImpl"*
  tail call void @_ZN3net19HostResolverManager16ProbeRequestImpl22OnDohServerUnavailableEb(%"class.net::HostResolverManager::ProbeRequestImpl"* %4, i1 zeroext %1)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager23CancellableProbeRequestD2Ev(%"class.net::HostResolverManager::CancellableProbeRequest"*) unnamed_addr #7 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager23CancellableProbeRequestD0Ev(%"class.net::HostResolverManager::CancellableProbeRequest"*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #20
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N3net19HostResolverManager23CancellableProbeRequestD1Ev(%"class.net::HostResolverManager::CancellableProbeRequest"*) unnamed_addr #7 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N3net19HostResolverManager23CancellableProbeRequestD0Ev(%"class.net::HostResolverManager::CancellableProbeRequest"*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #20
  unreachable
}

declare void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"*) unnamed_addr #3

declare void @_ZN3net14ResolveContext27UnregisterDohStatusObserverEPKNS0_17DohStatusObserverE(%"class.net::ResolveContext"*, %"class.net::ResolveContext::DohStatusObserver"*) local_unnamed_addr #1

declare void @_ZN3net14ResolveContext25RegisterDohStatusObserverEPNS0_17DohStatusObserverE(%"class.net::ResolveContext"*, %"class.net::ResolveContext::DohStatusObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager16ProbeRequestImpl11StartRunnerEb(%"class.net::HostResolverManager::ProbeRequestImpl"*, i1 zeroext) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.net::DnsProbeRunner"*, %"class.net::DnsProbeRunner"** %5, align 8
  %7 = icmp eq %"class.net::DnsProbeRunner"* %6, null
  br i1 %7, label %8, label %59

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 0, i32 4, i32 0, i32 0
  %10 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #18
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #18
  br label %14

14:                                               ; preds = %11, %8
  %15 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #18
  br i1 %15, label %16, label %20

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 0, i32 4, i32 0, i32 1
  %18 = bitcast i64* %17 to %"class.net::HostResolverManager"**
  %19 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %18, align 8
  br label %20

20:                                               ; preds = %14, %16
  %21 = phi %"class.net::HostResolverManager"* [ %19, %16 ], [ null, %14 ]
  %22 = getelementptr inbounds %"class.net::HostResolverManager::ProbeRequestImpl", %"class.net::HostResolverManager::ProbeRequestImpl"* %0, i64 0, i32 2
  %23 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %22, align 8
  %24 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %21, i64 0, i32 10, i32 0, i32 0, i32 0
  %25 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %24, align 8
  %26 = bitcast %"class.net::DnsClient"* %25 to i1 (%"class.net::DnsClient"*)***
  %27 = load i1 (%"class.net::DnsClient"*)**, i1 (%"class.net::DnsClient"*)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %27, i64 2
  %29 = load i1 (%"class.net::DnsClient"*)*, i1 (%"class.net::DnsClient"*)** %28, align 8
  %30 = call zeroext i1 %29(%"class.net::DnsClient"* %25) #18
  br i1 %30, label %31, label %44

31:                                               ; preds = %20
  %32 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %24, align 8
  %33 = bitcast %"class.net::DnsClient"* %32 to %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)***
  %34 = load %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)**, %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)*** %33, align 8
  %35 = getelementptr inbounds %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)*, %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)** %34, i64 14
  %36 = load %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)*, %"class.net::DnsTransactionFactory"* (%"class.net::DnsClient"*)** %35, align 8
  %37 = call %"class.net::DnsTransactionFactory"* %36(%"class.net::DnsClient"* %32) #18
  %38 = bitcast %"class.net::DnsTransactionFactory"* %37 to %"class.net::DnsProbeRunner"* (%"class.net::DnsTransactionFactory"*, %"class.net::ResolveContext"*)***
  %39 = load %"class.net::DnsProbeRunner"* (%"class.net::DnsTransactionFactory"*, %"class.net::ResolveContext"*)**, %"class.net::DnsProbeRunner"* (%"class.net::DnsTransactionFactory"*, %"class.net::ResolveContext"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.net::DnsProbeRunner"* (%"class.net::DnsTransactionFactory"*, %"class.net::ResolveContext"*)*, %"class.net::DnsProbeRunner"* (%"class.net::DnsTransactionFactory"*, %"class.net::ResolveContext"*)** %39, i64 3
  %41 = load %"class.net::DnsProbeRunner"* (%"class.net::DnsTransactionFactory"*, %"class.net::ResolveContext"*)*, %"class.net::DnsProbeRunner"* (%"class.net::DnsTransactionFactory"*, %"class.net::ResolveContext"*)** %40, align 8
  %42 = call %"class.net::DnsProbeRunner"* %41(%"class.net::DnsTransactionFactory"* %37, %"class.net::ResolveContext"* %23) #18
  %43 = ptrtoint %"class.net::DnsProbeRunner"* %42 to i64
  br label %44

44:                                               ; preds = %20, %31
  %45 = phi i64 [ %43, %31 ], [ 0, %20 ]
  %46 = load %"class.net::DnsProbeRunner"*, %"class.net::DnsProbeRunner"** %5, align 8
  %47 = bitcast %"class.std::__1::unique_ptr.378"* %4 to i64*
  store i64 %45, i64* %47, align 8
  %48 = icmp eq %"class.net::DnsProbeRunner"* %46, null
  %49 = inttoptr i64 %45 to %"class.net::DnsProbeRunner"*
  br i1 %48, label %56, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.net::DnsProbeRunner"* %46 to void (%"class.net::DnsProbeRunner"*)***
  %52 = load void (%"class.net::DnsProbeRunner"*)**, void (%"class.net::DnsProbeRunner"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.net::DnsProbeRunner"*)*, void (%"class.net::DnsProbeRunner"*)** %52, i64 1
  %54 = load void (%"class.net::DnsProbeRunner"*)*, void (%"class.net::DnsProbeRunner"*)** %53, align 8
  call void %54(%"class.net::DnsProbeRunner"* nonnull %46) #18
  %55 = load %"class.net::DnsProbeRunner"*, %"class.net::DnsProbeRunner"** %5, align 8
  br label %56

56:                                               ; preds = %44, %50
  %57 = phi %"class.net::DnsProbeRunner"* [ %49, %44 ], [ %55, %50 ]
  %58 = icmp eq %"class.net::DnsProbeRunner"* %57, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %56, %2
  %60 = phi %"class.net::DnsProbeRunner"* [ %57, %56 ], [ %6, %2 ]
  %61 = bitcast %"class.net::DnsProbeRunner"* %60 to void (%"class.net::DnsProbeRunner"*, i1)***
  %62 = load void (%"class.net::DnsProbeRunner"*, i1)**, void (%"class.net::DnsProbeRunner"*, i1)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.net::DnsProbeRunner"*, i1)*, void (%"class.net::DnsProbeRunner"*, i1)** %62, i64 2
  %64 = load void (%"class.net::DnsProbeRunner"*, i1)*, void (%"class.net::DnsProbeRunner"*, i1)** %63, align 8
  call void %64(%"class.net::DnsProbeRunner"* nonnull %60, i1 zeroext %1) #18
  br label %65

65:                                               ; preds = %56, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManager16ProbeRequestImplEFvbEJNS_7WeakPtrIS5_EEbEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8*
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #18
  br i1 %8, label %9, label %46

9:                                                ; preds = %1
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.net::HostResolverManager::ProbeRequestImpl"**
  %12 = load %"class.net::HostResolverManager::ProbeRequestImpl"*, %"class.net::HostResolverManager::ProbeRequestImpl"** %11, align 8
  %13 = icmp eq %"class.net::HostResolverManager::ProbeRequestImpl"* %12, null
  br i1 %13, label %46, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #18
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #18
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #18
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.net::HostResolverManager::ProbeRequestImpl"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.net::HostResolverManager::ProbeRequestImpl"*, i1)**
  %39 = load void (%"class.net::HostResolverManager::ProbeRequestImpl"*, i1)*, void (%"class.net::HostResolverManager::ProbeRequestImpl"*, i1)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.net::HostResolverManager::ProbeRequestImpl"*, i1)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.net::HostResolverManager::ProbeRequestImpl"*, i1)* [ %39, %33 ], [ %41, %40 ]
  %44 = load i8, i8* %6, align 1, !range !2
  %45 = icmp ne i8 %44, 0
  call void %43(%"class.net::HostResolverManager::ProbeRequestImpl"* %30, i1 zeroext %45) #18
  br label %46

46:                                               ; preds = %1, %9, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net19HostResolverManager16ProbeRequestImplEFvbEJNS_7WeakPtrIS4_EEbEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #18
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #19
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManager16ProbeRequestImplEFvbEJNS_7WeakPtrIS5_EEbEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::HostResolverManager::ProbeRequestImpl"**
  %9 = load %"class.net::HostResolverManager::ProbeRequestImpl"*, %"class.net::HostResolverManager::ProbeRequestImpl"** %8, align 8
  %10 = icmp ne %"class.net::HostResolverManager::ProbeRequestImpl"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #18
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN3net28HostResolverMdnsListenerImplC1ERKNS_12HostPortPairENS_12DnsQueryTypeE(%"class.net::HostResolverMdnsListenerImpl"*, %"class.net::HostPortPair"* dereferenceable(32), i32) unnamed_addr #1

declare void @_ZN4base8internal22CheckedObserverAdapterC1EPKNS_15CheckedObserverE(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::CheckedObserver"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.84"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::CheckedObserverAdapter"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.84"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.84"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::internal::CheckedObserverAdapter"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.base::internal::CheckedObserverAdapter"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::internal::CheckedObserverAdapter"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %36, i64 %35
  %39 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %38 to i64
  tail call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %37, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %1) #18
  %40 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %37, i64 1
  %41 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %42, align 8
  %44 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %3, align 8
  %45 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.base::internal::CheckedObserverAdapter"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.base::internal::CheckedObserverAdapter"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %49, i64 -1
  %52 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %50, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %51, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %52) #18
  %53 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.base::internal::CheckedObserverAdapter"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.base::internal::CheckedObserverAdapter"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.base::internal::CheckedObserverAdapter"*
  %63 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.base::internal::CheckedObserverAdapter"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %65, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %66) #18
  %67 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #19
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3net19HostResolverManager6JobKeyltERKS1_(%"struct.net::HostResolverManager::JobKey"*, %"struct.net::HostResolverManager::JobKey"* dereferenceable(232)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__tuple_less.779", align 1
  %4 = alloca %"class.std::__1::tuple.766", align 8
  %5 = alloca %"class.std::__1::tuple.766", align 8
  %6 = bitcast %"class.std::__1::tuple.766"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %0, i64 0, i32 5
  %11 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %7, i32** %14, align 8, !alias.scope !221
  %15 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %4, i64 0, i32 0, i32 1, i32 0
  store i32* %8, i32** %15, align 8, !alias.scope !221
  %16 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %4, i64 0, i32 0, i32 2, i32 0
  store i32* %9, i32** %16, align 8, !alias.scope !221
  %17 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %4, i64 0, i32 0, i32 3, i32 0
  store i32* %10, i32** %17, align 8, !alias.scope !221
  %18 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %4, i64 0, i32 0, i32 4, i32 0
  store %"class.net::ResolveContext"** %11, %"class.net::ResolveContext"*** %18, align 8, !alias.scope !221
  %19 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %4, i64 0, i32 0, i32 5, i32 0
  store %"class.std::__1::basic_string"* %12, %"class.std::__1::basic_string"** %19, align 8, !alias.scope !221
  %20 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %4, i64 0, i32 0, i32 6, i32 0
  store %"class.net::NetworkIsolationKey"* %13, %"class.net::NetworkIsolationKey"** %20, align 8, !alias.scope !221
  %21 = bitcast %"class.std::__1::tuple.766"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %21) #18
  %22 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %1, i64 0, i32 2
  %23 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %1, i64 0, i32 3
  %24 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %1, i64 0, i32 4
  %25 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %1, i64 0, i32 5
  %26 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %1, i64 0, i32 6
  %27 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %1, i64 0, i32 0
  %28 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %1, i64 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %22, i32** %29, align 8, !alias.scope !224
  %30 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %5, i64 0, i32 0, i32 1, i32 0
  store i32* %23, i32** %30, align 8, !alias.scope !224
  %31 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %5, i64 0, i32 0, i32 2, i32 0
  store i32* %24, i32** %31, align 8, !alias.scope !224
  %32 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %5, i64 0, i32 0, i32 3, i32 0
  store i32* %25, i32** %32, align 8, !alias.scope !224
  %33 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %5, i64 0, i32 0, i32 4, i32 0
  store %"class.net::ResolveContext"** %26, %"class.net::ResolveContext"*** %33, align 8, !alias.scope !224
  %34 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %5, i64 0, i32 0, i32 5, i32 0
  store %"class.std::__1::basic_string"* %27, %"class.std::__1::basic_string"** %34, align 8, !alias.scope !224
  %35 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %5, i64 0, i32 0, i32 6, i32 0
  store %"class.net::NetworkIsolationKey"* %28, %"class.net::NetworkIsolationKey"** %35, align 8, !alias.scope !224
  %36 = load i32, i32* %7, align 4
  %37 = load i32, i32* %22, align 4
  %38 = icmp slt i32 %36, %37
  br i1 %38, label %68, label %39

39:                                               ; preds = %2
  %40 = icmp slt i32 %37, %36
  br i1 %40, label %68, label %41

41:                                               ; preds = %39
  %42 = load i32, i32* %8, align 4
  %43 = load i32, i32* %23, align 4
  %44 = icmp slt i32 %42, %43
  br i1 %44, label %68, label %45

45:                                               ; preds = %41
  %46 = icmp slt i32 %43, %42
  br i1 %46, label %68, label %47

47:                                               ; preds = %45
  %48 = load i32, i32* %9, align 4
  %49 = load i32, i32* %24, align 4
  %50 = icmp slt i32 %48, %49
  br i1 %50, label %68, label %51

51:                                               ; preds = %47
  %52 = icmp slt i32 %49, %48
  br i1 %52, label %68, label %53

53:                                               ; preds = %51
  %54 = load i32, i32* %10, align 4
  %55 = load i32, i32* %25, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %53
  %58 = icmp slt i32 %55, %54
  br i1 %58, label %68, label %59

59:                                               ; preds = %57
  %60 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %11, align 8
  %61 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %26, align 8
  %62 = icmp ult %"class.net::ResolveContext"* %60, %61
  br i1 %62, label %68, label %63

63:                                               ; preds = %59
  %64 = icmp ult %"class.net::ResolveContext"* %61, %60
  br i1 %64, label %68, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"struct.std::__1::__tuple_less.779", %"struct.std::__1::__tuple_less.779"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %66) #18
  %67 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKN3net12DnsQueryTypeERKiRKNS4_18HostResolverSourceERKNS4_13SecureDnsModeERKPNS4_14ResolveContextERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_19NetworkIsolationKeyEEEESV_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.779"* nonnull %3, %"class.std::__1::tuple.766"* nonnull dereferenceable(56) %4, %"class.std::__1::tuple.766"* nonnull dereferenceable(56) %5) #18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %66) #18
  br label %68

68:                                               ; preds = %2, %39, %41, %45, %47, %51, %53, %57, %59, %63, %65
  %69 = phi i1 [ true, %2 ], [ false, %39 ], [ true, %41 ], [ false, %45 ], [ true, %47 ], [ false, %51 ], [ true, %53 ], [ false, %57 ], [ %67, %65 ], [ true, %59 ], [ false, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %21) #18
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #18
  ret i1 %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKN3net12DnsQueryTypeERKiRKNS4_18HostResolverSourceERKNS4_13SecureDnsModeERKPNS4_14ResolveContextERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_19NetworkIsolationKeyEEEESV_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.779"*, %"class.std::__1::tuple.766"* dereferenceable(56), %"class.std::__1::tuple.766"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__tuple_less.778", align 1
  %5 = alloca %"class.std::__1::tuple.782", align 8
  %6 = alloca %"class.std::__1::tuple.782", align 8
  %7 = alloca %"struct.std::__1::__tuple_less.778", align 1
  %8 = alloca %"class.std::__1::tuple.782", align 8
  %9 = alloca %"class.std::__1::tuple.782", align 8
  %10 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %1, i64 0, i32 0, i32 5, i32 0
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %2, i64 0, i32 0, i32 5, i32 0
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i64 %27, i64 %28
  %30 = icmp ult i64 %21, %29
  %31 = select i1 %30, i64 %21, i64 %29
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %44, label %33

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %37 = select i1 %25, i8* %35, i8* %36
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %41 = select i1 %17, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %37, i8* %41, i64 %31) #18
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %33, %3
  %45 = icmp ult i64 %29, %21
  br i1 %45, label %106, label %48

46:                                               ; preds = %33
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %106, label %58

48:                                               ; preds = %44
  br i1 %32, label %63, label %49

49:                                               ; preds = %48
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %55 = select i1 %17, i8* %51, i8* %54
  %56 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %57 = select i1 %25, i8* %53, i8* %56
  br label %58

58:                                               ; preds = %49, %46
  %59 = phi i8* [ %57, %49 ], [ %37, %46 ]
  %60 = phi i8* [ %55, %49 ], [ %41, %46 ]
  %61 = tail call i32 @memcmp(i8* %60, i8* %59, i64 %31) #18
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %58, %48
  br i1 %30, label %106, label %66

64:                                               ; preds = %58
  %65 = icmp slt i32 %61, 0
  br i1 %65, label %106, label %66

66:                                               ; preds = %63, %64
  %67 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %1, i64 0, i32 0, i32 6, i32 0
  %68 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::tuple.766", %"class.std::__1::tuple.766"* %2, i64 0, i32 0, i32 6, i32 0
  %70 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %69, align 8
  %71 = bitcast %"class.std::__1::tuple.782"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #18
  %72 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %68, i64 0, i32 1
  %73 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %68, i64 0, i32 2
  %74 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %68, i64 0, i32 0
  %75 = getelementptr inbounds %"class.std::__1::tuple.782", %"class.std::__1::tuple.782"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional.145"* %72, %"class.absl::optional.145"** %75, align 8, !alias.scope !227
  %76 = getelementptr inbounds %"class.std::__1::tuple.782", %"class.std::__1::tuple.782"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional.145"* %73, %"class.absl::optional.145"** %76, align 8, !alias.scope !227
  %77 = getelementptr inbounds %"class.std::__1::tuple.782", %"class.std::__1::tuple.782"* %5, i64 0, i32 0, i32 2, i32 0
  store i8* %74, i8** %77, align 8, !alias.scope !227
  %78 = bitcast %"class.std::__1::tuple.782"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #18
  %79 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %70, i64 0, i32 1
  %80 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %70, i64 0, i32 2
  %81 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %70, i64 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::tuple.782", %"class.std::__1::tuple.782"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional.145"* %79, %"class.absl::optional.145"** %82, align 8, !alias.scope !230
  %83 = getelementptr inbounds %"class.std::__1::tuple.782", %"class.std::__1::tuple.782"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional.145"* %80, %"class.absl::optional.145"** %83, align 8, !alias.scope !230
  %84 = getelementptr inbounds %"class.std::__1::tuple.782", %"class.std::__1::tuple.782"* %6, i64 0, i32 0, i32 2, i32 0
  store i8* %81, i8** %84, align 8, !alias.scope !230
  %85 = getelementptr inbounds %"struct.std::__1::__tuple_less.778", %"struct.std::__1::__tuple_less.778"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %85) #18
  %86 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.778"* nonnull %4, %"class.std::__1::tuple.782"* nonnull dereferenceable(24) %5, %"class.std::__1::tuple.782"* nonnull dereferenceable(24) %6) #18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %85) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #18
  br i1 %86, label %106, label %87

87:                                               ; preds = %66
  %88 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %69, align 8
  %89 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %67, align 8
  %90 = bitcast %"class.std::__1::tuple.782"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #18
  %91 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %88, i64 0, i32 1
  %92 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %88, i64 0, i32 2
  %93 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %88, i64 0, i32 0
  %94 = getelementptr inbounds %"class.std::__1::tuple.782", %"class.std::__1::tuple.782"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional.145"* %91, %"class.absl::optional.145"** %94, align 8, !alias.scope !233
  %95 = getelementptr inbounds %"class.std::__1::tuple.782", %"class.std::__1::tuple.782"* %8, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional.145"* %92, %"class.absl::optional.145"** %95, align 8, !alias.scope !233
  %96 = getelementptr inbounds %"class.std::__1::tuple.782", %"class.std::__1::tuple.782"* %8, i64 0, i32 0, i32 2, i32 0
  store i8* %93, i8** %96, align 8, !alias.scope !233
  %97 = bitcast %"class.std::__1::tuple.782"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #18
  %98 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %89, i64 0, i32 1
  %99 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %89, i64 0, i32 2
  %100 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %89, i64 0, i32 0
  %101 = getelementptr inbounds %"class.std::__1::tuple.782", %"class.std::__1::tuple.782"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional.145"* %98, %"class.absl::optional.145"** %101, align 8, !alias.scope !236
  %102 = getelementptr inbounds %"class.std::__1::tuple.782", %"class.std::__1::tuple.782"* %9, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional.145"* %99, %"class.absl::optional.145"** %102, align 8, !alias.scope !236
  %103 = getelementptr inbounds %"class.std::__1::tuple.782", %"class.std::__1::tuple.782"* %9, i64 0, i32 0, i32 2, i32 0
  store i8* %100, i8** %103, align 8, !alias.scope !236
  %104 = getelementptr inbounds %"struct.std::__1::__tuple_less.778", %"struct.std::__1::__tuple_less.778"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %104) #18
  %105 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.778"* nonnull %7, %"class.std::__1::tuple.782"* nonnull dereferenceable(24) %8, %"class.std::__1::tuple.782"* nonnull dereferenceable(24) %9) #18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %104) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #18
  br label %106

106:                                              ; preds = %63, %44, %87, %66, %64, %46
  %107 = phi i1 [ true, %46 ], [ false, %64 ], [ true, %66 ], [ false, %87 ], [ true, %44 ], [ false, %63 ]
  ret i1 %107
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.778"*, %"class.std::__1::tuple.782"* dereferenceable(24), %"class.std::__1::tuple.782"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::tuple.782", %"class.std::__1::tuple.782"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.absl::optional.145"*, %"class.absl::optional.145"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::tuple.782", %"class.std::__1::tuple.782"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.absl::optional.145"*, %"class.absl::optional.145"** %6, align 8
  %8 = getelementptr inbounds %"class.absl::optional.145", %"class.absl::optional.145"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.absl::optional.145", %"class.absl::optional.145"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %77, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.absl::optional.145", %"class.absl::optional.145"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.absl::optional.145", %"class.absl::optional.145"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %16, %"class.net::SchemefulSite"* dereferenceable(80) %17) #18
  br i1 %18, label %77, label %19

19:                                               ; preds = %15
  %20 = load %"class.absl::optional.145"*, %"class.absl::optional.145"** %6, align 8
  %21 = load %"class.absl::optional.145"*, %"class.absl::optional.145"** %4, align 8
  br label %22

22:                                               ; preds = %19, %3
  %23 = phi %"class.absl::optional.145"* [ %21, %19 ], [ %5, %3 ]
  %24 = phi %"class.absl::optional.145"* [ %20, %19 ], [ %7, %3 ]
  %25 = getelementptr inbounds %"class.absl::optional.145", %"class.absl::optional.145"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.absl::optional.145", %"class.absl::optional.145"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %77, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.absl::optional.145", %"class.absl::optional.145"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.absl::optional.145", %"class.absl::optional.145"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %33, %"class.net::SchemefulSite"* dereferenceable(80) %34) #18
  br i1 %35, label %77, label %36

36:                                               ; preds = %22, %32
  %37 = getelementptr inbounds %"class.std::__1::tuple.782", %"class.std::__1::tuple.782"* %1, i64 0, i32 0, i32 1, i32 0
  %38 = load %"class.absl::optional.145"*, %"class.absl::optional.145"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::tuple.782", %"class.std::__1::tuple.782"* %2, i64 0, i32 0, i32 1, i32 0
  %40 = load %"class.absl::optional.145"*, %"class.absl::optional.145"** %39, align 8
  %41 = getelementptr inbounds %"class.absl::optional.145", %"class.absl::optional.145"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.absl::optional.145", %"class.absl::optional.145"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %77, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.absl::optional.145", %"class.absl::optional.145"* %38, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.absl::optional.145", %"class.absl::optional.145"* %40, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %49, %"class.net::SchemefulSite"* dereferenceable(80) %50) #18
  br i1 %51, label %77, label %52

52:                                               ; preds = %48
  %53 = load %"class.absl::optional.145"*, %"class.absl::optional.145"** %39, align 8
  %54 = load %"class.absl::optional.145"*, %"class.absl::optional.145"** %37, align 8
  br label %55

55:                                               ; preds = %52, %36
  %56 = phi %"class.absl::optional.145"* [ %54, %52 ], [ %38, %36 ]
  %57 = phi %"class.absl::optional.145"* [ %53, %52 ], [ %40, %36 ]
  %58 = getelementptr inbounds %"class.absl::optional.145", %"class.absl::optional.145"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.absl::optional.145", %"class.absl::optional.145"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %77, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.absl::optional.145", %"class.absl::optional.145"* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %67 = getelementptr inbounds %"class.absl::optional.145", %"class.absl::optional.145"* %56, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %68 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %66, %"class.net::SchemefulSite"* dereferenceable(80) %67) #18
  br i1 %68, label %77, label %69

69:                                               ; preds = %65, %55
  %70 = getelementptr inbounds %"class.std::__1::tuple.782", %"class.std::__1::tuple.782"* %1, i64 0, i32 0, i32 2, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = load i8, i8* %71, align 1, !range !2
  %73 = getelementptr inbounds %"class.std::__1::tuple.782", %"class.std::__1::tuple.782"* %2, i64 0, i32 0, i32 2, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = load i8, i8* %74, align 1, !range !2
  %76 = icmp ult i8 %72, %75
  br label %77

77:                                               ; preds = %28, %11, %69, %65, %61, %48, %44, %32, %15
  %78 = phi i1 [ true, %15 ], [ false, %32 ], [ %76, %69 ], [ true, %48 ], [ false, %65 ], [ true, %44 ], [ false, %61 ], [ true, %11 ], [ false, %28 ]
  ret i1 %78
}

declare zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3JobC2ERKN4base7WeakPtrIS0_EENS2_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_19NetworkIsolationKeyENS_12DnsQueryTypeEiNS_18HostResolverSourceENS_12HostResolver21ResolveHostParameters10CacheUsageENS_13SecureDnsModeEPNS_14ResolveContextEPNS_9HostCacheENS8_5dequeINS0_8TaskTypeENS8_9allocatorISQ_EEEENS_15RequestPriorityE13scoped_refptrINS2_10TaskRunnerEERKNS_16NetLogWithSourceEPKNS2_9TickClockE(%"class.net::HostResolverManager::Job"*, %"class.base::WeakPtr.230"* dereferenceable(16), i8*, i64, %"class.net::NetworkIsolationKey"* dereferenceable(184), i32, i32, i32, i32, i32, %"class.net::ResolveContext"*, %"class.net::HostCache"*, %"class.std::__1::deque"*, i32, i64, %"class.net::NetLogWithSource"* dereferenceable(24), %"class.base::TickClock"*) unnamed_addr #0 comdat align 2 {
  %18 = alloca %class.anon.792, align 8
  %19 = bitcast %"class.net::HostResolverManager::Job"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [8 x i8*] }, { [9 x i8*], [8 x i8*] }* @_ZTVN3net19HostResolverManager3JobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [8 x i8*] }, { [9 x i8*], [8 x i8*] }* @_ZTVN3net19HostResolverManager3JobE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %19, align 8
  %20 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %20, %"class.base::internal::WeakReference"* dereferenceable(8) %21) #18
  %22 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 1
  %23 = getelementptr inbounds %"class.base::WeakPtr.230", %"class.base::WeakPtr.230"* %1, i64 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %22, align 8
  %25 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 3
  %26 = icmp ugt i64 %3, -17
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string"* %25 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #20
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %3, 23
  br i1 %30, label %39, label %31

31:                                               ; preds = %29
  %32 = add nuw i64 %3, 16
  %33 = and i64 %32, -16
  %34 = tail call i8* @_Znwm(i64 %33) #19
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %34, i8** %35, align 8, !alias.scope !239
  %36 = or i64 %33, -9223372036854775808
  %37 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8, !alias.scope !239
  %38 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %38, align 8, !alias.scope !239
  br label %45

39:                                               ; preds = %29
  %40 = trunc i64 %3 to i8
  %41 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  store i8 %40, i8* %42, align 1, !alias.scope !239
  %43 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %44 = icmp eq i64 %3, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %39, %31
  %46 = phi i8* [ %34, %31 ], [ %43, %39 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %46, i8* align 1 %2, i64 %3, i1 false) #18
  br label %47

47:                                               ; preds = %39, %45
  %48 = phi i8* [ %43, %39 ], [ %46, %45 ]
  %49 = getelementptr inbounds i8, i8* %48, i64 %3
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 4
  tail call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %50, %"class.net::NetworkIsolationKey"* dereferenceable(184) %4) #18
  %51 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 5
  store i32 %5, i32* %51, align 8
  %52 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 6
  store i32 %6, i32* %52, align 4
  %53 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 7
  store i32 %7, i32* %53, align 8
  %54 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 8
  store i32 %8, i32* %54, align 4
  %55 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 9
  store i32 %9, i32* %55, align 8
  %56 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 10
  store %"class.net::ResolveContext"* %10, %"class.net::ResolveContext"** %56, align 8
  %57 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 11
  store %"class.net::HostCache"* %11, %"class.net::HostCache"** %57, align 8
  %58 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 12
  %59 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 13
  %60 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %12, i64 0, i32 0, i32 0, i32 1
  %61 = bitcast %"class.std::__1::vector.231"* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 72, i1 false)
  %62 = load i32**, i32*** %60, align 8
  %63 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %12, i64 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = lshr i64 %64, 10
  %66 = getelementptr inbounds i32*, i32** %62, i64 %65
  %67 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %12, i64 0, i32 0, i32 0, i32 2
  %68 = load i32**, i32*** %67, align 8
  %69 = icmp eq i32** %68, %62
  br i1 %69, label %70, label %76

70:                                               ; preds = %47
  %71 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, %64
  %74 = lshr i64 %73, 10
  %75 = getelementptr inbounds i32*, i32** %62, i64 %74
  br label %88

76:                                               ; preds = %47
  %77 = load i32*, i32** %66, align 8
  %78 = and i64 %64, 1023
  %79 = getelementptr inbounds i32, i32* %77, i64 %78
  %80 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, %64
  %83 = lshr i64 %82, 10
  %84 = getelementptr inbounds i32*, i32** %62, i64 %83
  %85 = load i32*, i32** %84, align 8
  %86 = and i64 %82, 1023
  %87 = getelementptr inbounds i32, i32* %85, i64 %86
  br label %88

88:                                               ; preds = %76, %70
  %89 = phi i32** [ %84, %76 ], [ %75, %70 ]
  %90 = phi i32* [ %79, %76 ], [ null, %70 ]
  %91 = phi i32* [ %87, %76 ], [ null, %70 ]
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE8__appendINS_16__deque_iteratorIS3_PKS3_RS9_PKSA_lLl0EEEEEvT_SF_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISF_EE5valueEvE4typeE(%"class.std::__1::deque"* %59, i32** %66, i32* %90, i32** %89, i32* %91, i8* null) #18
  %92 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 14
  store i8 0, i8* %92, align 8
  %93 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 15, i32 0
  store i32 %13, i32* %93, align 8
  %94 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 15, i32 1
  %95 = bitcast i64* %94 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 56, i1 false) #18
  %96 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 16
  %97 = bitcast %class.scoped_refptr.83* %96 to i64*
  store i64 %14, i64* %97, align 8
  %98 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 17
  store i8 0, i8* %98, align 8
  %99 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 18
  %100 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 21
  %101 = bitcast i32* %99 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %101, i8 0, i64 16, i1 false)
  store %"class.base::TickClock"* %16, %"class.base::TickClock"** %100, align 8
  %102 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 22, i32 0, i32 0
  store i64 0, i64* %102, align 8
  %103 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 23
  %104 = tail call %"class.net::NetLog"* @_ZNK3net16NetLogWithSource7net_logEv(%"class.net::NetLogWithSource"* %15) #18
  tail call void @_ZN3net16NetLogWithSource4MakeEPNS_6NetLogENS_16NetLogSourceTypeE(%"class.net::NetLogWithSource"* sret %103, %"class.net::NetLog"* %104, i32 12) #18
  %105 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 24
  %106 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 27, i32 0, i32 0
  %107 = bitcast %"class.std::__1::unique_ptr.271"* %105 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false)
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %106, %"class.base::internal::LinkNodeBase"* %106, %"class.base::internal::LinkNodeBase"* %106) #18
  %108 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 0
  store i32 -1, i32* %108, align 8
  %109 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 1, i32 0
  %110 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 2
  %111 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %110, i64 0, i32 0, i32 0
  %112 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %110, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %111, %"struct.std::__1::__list_node_base"** %112, align 8
  %113 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 2, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %111, %"struct.std::__1::__list_node_base"** %113, align 8
  %114 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 2, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %114, align 8
  store %"struct.std::__1::__list_node_base"* %111, %"struct.std::__1::__list_node_base"** %109, align 8
  %115 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %115, align 8
  %116 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 30, i32 0
  store i64 0, i64* %116, align 8
  %117 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 31, i32 0
  %118 = ptrtoint %"class.net::HostResolverManager::Job"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %117, i64 %118) #18
  tail call void @_ZNK3net16NetLogWithSource8AddEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %15, i32 7) #18
  %119 = bitcast %class.anon.792* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #18
  %120 = getelementptr inbounds %class.anon.792, %class.anon.792* %18, i64 0, i32 0
  store %"class.net::NetLogWithSource"* %15, %"class.net::NetLogWithSource"** %120, align 8
  %121 = getelementptr inbounds %class.anon.792, %class.anon.792* %18, i64 0, i32 1
  store %"class.net::HostResolverManager::Job"* %0, %"class.net::HostResolverManager::Job"** %121, align 8
  call void @_ZNK3net16NetLogWithSource8AddEntryIZNS_19HostResolverManager3JobC1ERKN4base7WeakPtrIS2_EENS4_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_19NetworkIsolationKeyENS_12DnsQueryTypeEiNS_18HostResolverSourceENS_12HostResolver21ResolveHostParameters10CacheUsageENS_13SecureDnsModeEPNS_14ResolveContextEPNS_9HostCacheENSA_5dequeINS2_8TaskTypeENSA_9allocatorISS_EEEENS_15RequestPriorityE13scoped_refptrINS4_10TaskRunnerEERKS0_PKNS4_9TickClockEEUlvE_EEvNS_15NetLogEventTypeENS_16NetLogEventPhaseERKT_(%"class.net::NetLogWithSource"* %103, i32 8, i32 1, %class.anon.792* nonnull dereferenceable(16) %18) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #18
  ret void
}

declare void @_ZN3net16NetLogWithSource4MakeEPNS_6NetLogENS_16NetLogSourceTypeE(%"class.net::NetLogWithSource"* sret, %"class.net::NetLog"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3JobD2Ev(%"class.net::HostResolverManager::Job"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.net::HostResolverManager::Job"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [8 x i8*] }, { [9 x i8*], [8 x i8*] }* @_ZTVN3net19HostResolverManager3JobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [8 x i8*] }, { [9 x i8*], [8 x i8*] }* @_ZTVN3net19HostResolverManager3JobE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 14
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %8 = load %"class.net::HostResolverManager::ProcTask"*, %"class.net::HostResolverManager::ProcTask"** %7, align 8
  store %"class.net::HostResolverManager::ProcTask"* null, %"class.net::HostResolverManager::ProcTask"** %7, align 8
  %9 = icmp eq %"class.net::HostResolverManager::ProcTask"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  tail call void @_ZN3net19HostResolverManager8ProcTaskD2Ev(%"class.net::HostResolverManager::ProcTask"* nonnull %8) #18
  %11 = bitcast %"class.net::HostResolverManager::ProcTask"* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #19
  br label %12

12:                                               ; preds = %6, %10
  tail call void @_ZN3net19HostResolverManager3Job11KillDnsTaskEv(%"class.net::HostResolverManager::Job"* %0)
  %13 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 23
  tail call void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %13, i32 8, i32 -3) #18
  br label %20

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 23
  tail call void @_ZNK3net16NetLogWithSource8AddEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %19, i32 0) #18
  tail call void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %19, i32 8) #18
  br label %20

20:                                               ; preds = %14, %18, %12
  %21 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 27, i32 0, i32 0, i32 1
  %22 = bitcast %"class.base::internal::LinkNodeBase"** %21 to %"class.base::LinkNode.229"**
  %23 = load %"class.base::LinkNode.229"*, %"class.base::LinkNode.229"** %22, align 8
  %24 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 27, i32 0
  %25 = icmp eq %"class.base::LinkNode.229"* %23, %24
  br i1 %25, label %37, label %26

26:                                               ; preds = %20, %26
  %27 = phi %"class.base::LinkNode.229"* [ %35, %26 ], [ %23, %20 ]
  %28 = getelementptr inbounds %"class.base::LinkNode.229", %"class.base::LinkNode.229"* %27, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %28) #18
  %29 = getelementptr inbounds %"class.base::LinkNode.229", %"class.base::LinkNode.229"* %27, i64 19
  %30 = bitcast %"class.base::LinkNode.229"* %29 to %"class.net::HostResolverManager::Job"**
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %30, align 8
  %31 = getelementptr inbounds %"class.base::LinkNode.229", %"class.base::LinkNode.229"* %27, i64 20, i32 0, i32 1
  %32 = bitcast %"class.base::internal::LinkNodeBase"** %31 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %32) #18
  %33 = getelementptr inbounds %"class.base::LinkNode.229", %"class.base::LinkNode.229"* %27, i64 1
  %34 = bitcast %"class.base::LinkNode.229"* %33 to %"class.net::NetLogWithSource"*
  tail call void @_ZNK3net16NetLogWithSource8AddEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %34, i32 0) #18
  tail call void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %34, i32 3) #18
  %35 = load %"class.base::LinkNode.229"*, %"class.base::LinkNode.229"** %22, align 8
  %36 = icmp eq %"class.base::LinkNode.229"* %35, %24
  br i1 %36, label %37, label %26

37:                                               ; preds = %26, %20
  %38 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 31, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %38) #18
  %39 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 2, i32 0
  %40 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 2, i32 0, i32 1, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %67, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 2, i32 0, i32 0, i32 1
  %45 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %39, i64 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %39, i64 0, i32 0, i32 0
  %48 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %47, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %48, i64 0, i32 1
  %50 = bitcast %"struct.std::__1::__list_node_base"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %45, i64 0, i32 0
  %53 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %53, i64 0, i32 1
  %55 = bitcast %"struct.std::__1::__list_node_base"** %54 to i64*
  store i64 %51, i64* %55, align 8
  %56 = bitcast %"struct.std::__1::__list_node_base"* %45 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.std::__1::__list_node_base"** %49 to i64**
  %59 = load i64*, i64** %58, align 8
  store i64 %57, i64* %59, align 8
  store i64 0, i64* %40, align 8
  %60 = icmp eq %"struct.std::__1::__list_node_base"* %45, %46
  br i1 %60, label %67, label %61

61:                                               ; preds = %43, %61
  %62 = phi %"struct.std::__1::__list_node_base"* [ %64, %61 ], [ %45, %43 ]
  %63 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %62, i64 0, i32 1
  %64 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %63, align 8
  %65 = bitcast %"struct.std::__1::__list_node_base"* %62 to i8*
  tail call void @_ZdlPv(i8* %65) #19
  %66 = icmp eq %"struct.std::__1::__list_node_base"* %64, %46
  br i1 %66, label %67, label %61

67:                                               ; preds = %61, %37, %43
  %68 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %69 = load %"class.net::HostResolverMdnsTask"*, %"class.net::HostResolverMdnsTask"** %68, align 8
  store %"class.net::HostResolverMdnsTask"* null, %"class.net::HostResolverMdnsTask"** %68, align 8
  %70 = icmp eq %"class.net::HostResolverMdnsTask"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  tail call void @_ZN3net20HostResolverMdnsTaskD1Ev(%"class.net::HostResolverMdnsTask"* nonnull %69) #18
  %72 = bitcast %"class.net::HostResolverMdnsTask"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #19
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %75 = load %"class.net::HostResolverManager::DnsTask"*, %"class.net::HostResolverManager::DnsTask"** %74, align 8
  store %"class.net::HostResolverManager::DnsTask"* null, %"class.net::HostResolverManager::DnsTask"** %74, align 8
  %76 = icmp eq %"class.net::HostResolverManager::DnsTask"* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %73
  tail call void @_ZN3net19HostResolverManager7DnsTaskD2Ev(%"class.net::HostResolverManager::DnsTask"* nonnull %75) #18
  %78 = bitcast %"class.net::HostResolverManager::DnsTask"* %75 to i8*
  tail call void @_ZdlPv(i8* %78) #19
  br label %79

79:                                               ; preds = %73, %77
  %80 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %81 = load %"class.net::HostResolverManager::ProcTask"*, %"class.net::HostResolverManager::ProcTask"** %80, align 8
  store %"class.net::HostResolverManager::ProcTask"* null, %"class.net::HostResolverManager::ProcTask"** %80, align 8
  %82 = icmp eq %"class.net::HostResolverManager::ProcTask"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %79
  tail call void @_ZN3net19HostResolverManager8ProcTaskD2Ev(%"class.net::HostResolverManager::ProcTask"* nonnull %81) #18
  %84 = bitcast %"class.net::HostResolverManager::ProcTask"* %81 to i8*
  tail call void @_ZdlPv(i8* %84) #19
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 23
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %86) #18
  %87 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 16, i32 0
  %88 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %87, align 8
  %89 = icmp eq %"class.base::TaskRunner"* %88, null
  br i1 %89, label %98, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.base::TaskRunner", %"class.base::TaskRunner"* %88, i64 0, i32 1
  %92 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw sub i32* %92, i32 1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %98

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %91, i64 -2
  %97 = bitcast %"class.base::RefCountedThreadSafe"* %96 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %97) #18
  br label %98

98:                                               ; preds = %85, %90, %95
  %99 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 13, i32 0
  tail call void @_ZNSt3__112__deque_baseIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEED2Ev(%"class.std::__1::__deque_base"* %99) #18
  %100 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 12
  %101 = getelementptr inbounds %"class.std::__1::vector.231", %"class.std::__1::vector.231"* %100, i64 0, i32 0, i32 0
  %102 = load %"struct.net::HostResolverManager::Job::CompletionResult"*, %"struct.net::HostResolverManager::Job::CompletionResult"** %101, align 8
  %103 = icmp eq %"struct.net::HostResolverManager::Job::CompletionResult"* %102, null
  br i1 %103, label %119, label %104

104:                                              ; preds = %98
  %105 = bitcast %"struct.net::HostResolverManager::Job::CompletionResult"* %102 to i8*
  %106 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 12, i32 0, i32 1
  %107 = load %"struct.net::HostResolverManager::Job::CompletionResult"*, %"struct.net::HostResolverManager::Job::CompletionResult"** %106, align 8
  %108 = icmp eq %"struct.net::HostResolverManager::Job::CompletionResult"* %107, %102
  br i1 %108, label %117, label %109

109:                                              ; preds = %104, %109
  %110 = phi %"struct.net::HostResolverManager::Job::CompletionResult"* [ %111, %109 ], [ %107, %104 ]
  %111 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %110, i64 -1
  %112 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %111, i64 0, i32 0
  tail call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* %112) #18
  %113 = icmp eq %"struct.net::HostResolverManager::Job::CompletionResult"* %111, %102
  br i1 %113, label %114, label %109

114:                                              ; preds = %109
  %115 = bitcast %"class.std::__1::vector.231"* %100 to i8**
  %116 = load i8*, i8** %115, align 8
  br label %117

117:                                              ; preds = %114, %104
  %118 = phi i8* [ %116, %114 ], [ %105, %104 ]
  store %"struct.net::HostResolverManager::Job::CompletionResult"* %102, %"struct.net::HostResolverManager::Job::CompletionResult"** %106, align 8
  tail call void @_ZdlPv(i8* %118) #19
  br label %119

119:                                              ; preds = %98, %117
  %120 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 4
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %120) #18
  %121 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 3
  %122 = bitcast %"class.std::__1::basic_string"* %121 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %119
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  tail call void @_ZdlPv(i8* %128) #19
  br label %129

129:                                              ; preds = %119, %126
  %130 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %130) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3JobD0Ev(%"class.net::HostResolverManager::Job"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN3net19HostResolverManager3JobD2Ev(%"class.net::HostResolverManager::Job"* %0) #18
  %2 = bitcast %"class.net::HostResolverManager::Job"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job5StartEv(%"class.net::HostResolverManager::Job"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", align 8
  %3 = bitcast %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #18
  %4 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %2, i64 0, i32 2
  %5 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 0
  store i32 -1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 1
  %7 = bitcast %"class.std::__1::__list_iterator"* %6 to i64*
  %8 = ptrtoint %"class.std::__1::list"* %4 to i64
  store i64 %8, i64* %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #18
  %9 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 18
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 4
  %12 = icmp sgt i32 %10, 0
  br i1 %12, label %13, label %28

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %15 = load %"class.net::HostResolverManager::DnsTask"*, %"class.net::HostResolverManager::DnsTask"** %14, align 8
  %16 = icmp eq %"class.net::HostResolverManager::DnsTask"* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 19
  %19 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %18, align 8
  call void @_ZN3net21PrioritizedDispatcher13OnJobFinishedEv(%"class.net::PrioritizedDispatcher"* %19) #18
  br label %29

20:                                               ; preds = %13
  call void @_ZN3net19HostResolverManager7DnsTask20StartNextTransactionEv(%"class.net::HostResolverManager::DnsTask"* nonnull %15) #18
  %21 = load %"class.net::HostResolverManager::DnsTask"*, %"class.net::HostResolverManager::DnsTask"** %14, align 8
  %22 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %21, i64 0, i32 9, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %21, i64 0, i32 9, i32 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %20
  call void @_ZN3net19HostResolverManager3Job8ScheduleEb(%"class.net::HostResolverManager::Job"* %0, i1 zeroext true)
  br label %29

28:                                               ; preds = %1
  call void @_ZN3net19HostResolverManager3Job11RunNextTaskEv(%"class.net::HostResolverManager::Job"* %0)
  br label %29

29:                                               ; preds = %20, %27, %28, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job17OnDnsTaskCompleteEN4base9TimeTicksERKNS_9HostCache5EntryEb(%"class.net::HostResolverManager::Job"*, i64, %"class.net::HostCache::Entry"* dereferenceable(200), i1 zeroext) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.base::internal::WeakReference", align 8
  %7 = alloca %"class.net::HostCache::Entry", align 8
  %8 = alloca %"class.base::TimeDelta", align 8
  %9 = alloca %"class.base::WeakPtr.663", align 8
  %10 = bitcast %"class.base::TimeDelta"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #18
  %11 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %8, i64 0, i32 0
  store i64 -6148914691236517206, i64* %11, align 8
  %12 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 21
  %13 = load %"class.base::TickClock"*, %"class.base::TickClock"** %12, align 8
  %14 = bitcast %"class.base::TickClock"* %13 to i64 (%"class.base::TickClock"*)***
  %15 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %14, align 8
  %16 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %15, i64 2
  %17 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %16, align 8
  %18 = tail call i64 %17(%"class.base::TickClock"* %13) #18
  %19 = sub nsw i64 %18, %1
  store i64 %19, i64* %11, align 8
  %20 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %32, label %23

23:                                               ; preds = %4
  %24 = bitcast %"class.base::WeakPtr.663"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #18
  %25 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %26 = load %"class.net::HostResolverManager::DnsTask"*, %"class.net::HostResolverManager::DnsTask"** %25, align 8
  %27 = bitcast %"class.base::internal::WeakReference"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #18, !noalias !242
  %28 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %26, i64 0, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %6, %"class.base::internal::WeakReferenceOwner"* %28) #18, !noalias !242
  %29 = getelementptr inbounds %"class.base::WeakPtr.663", %"class.base::WeakPtr.663"* %9, i64 0, i32 0
  %30 = ptrtoint %"class.net::HostResolverManager::DnsTask"* %26 to i64
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %29, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %6, i64 %30) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #18, !noalias !242
  %31 = load i64, i64* %11, align 8
  call void @_ZN3net19HostResolverManager3Job16OnDnsTaskFailureERKN4base7WeakPtrINS0_7DnsTaskEEENS2_9TimeDeltaERKNS_9HostCache5EntryEb(%"class.net::HostResolverManager::Job"* %0, %"class.base::WeakPtr.663"* nonnull dereferenceable(16) %9, i64 %31, %"class.net::HostCache::Entry"* dereferenceable(200) %2, i1 zeroext %3)
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %29) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #18
  br label %114

32:                                               ; preds = %4
  %33 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager3Job17OnDnsTaskCompleteEN4base9TimeTicksERKNS_9HostCache5EntryEbE24atomic_histogram_pointer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %34 = inttoptr i64 %33 to %"class.base::HistogramBase"*
  %35 = icmp eq i64 %33, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %32
  %37 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.63, i64 0, i64 0), i64 1000, i64 3600000000, i32 100, i32 1) #18
  %38 = ptrtoint %"class.base::HistogramBase"* %37 to i64
  store atomic i64 %38, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager3Job17OnDnsTaskCompleteEN4base9TimeTicksERKNS_9HostCache5EntryEbE24atomic_histogram_pointer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 8
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi %"class.base::HistogramBase"* [ %34, %32 ], [ %37, %36 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %40, %"class.base::TimeDelta"* nonnull dereferenceable(8) %8) #18
  %41 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager3Job17OnDnsTaskCompleteEN4base9TimeTicksERKNS_9HostCache5EntryEbE24atomic_histogram_pointer_0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %42 = inttoptr i64 %41 to %"class.base::HistogramBase"*
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.64, i64 0, i64 0), i64 1000, i64 3600000000, i32 100, i32 1) #18
  %46 = ptrtoint %"class.base::HistogramBase"* %45 to i64
  store atomic i64 %46, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager3Job17OnDnsTaskCompleteEN4base9TimeTicksERKNS_9HostCache5EntryEbE24atomic_histogram_pointer_0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 8
  br label %47

47:                                               ; preds = %39, %44
  %48 = phi %"class.base::HistogramBase"* [ %42, %39 ], [ %45, %44 ]
  %49 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 30
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %48, %"class.base::TimeDelta"* dereferenceable(8) %49) #18
  br i1 %3, label %70, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 0
  %52 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %51) #18
  br i1 %52, label %56, label %53

53:                                               ; preds = %50
  %54 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #18
  br label %56

56:                                               ; preds = %53, %50
  %57 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %51) #18
  br i1 %57, label %58, label %62

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 2, i32 0, i32 1
  %60 = bitcast i64* %59 to %"class.net::HostResolverManager"**
  %61 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %60, align 8
  br label %62

62:                                               ; preds = %56, %58
  %63 = phi %"class.net::HostResolverManager"* [ %61, %58 ], [ null, %56 ]
  %64 = getelementptr inbounds %"class.net::HostResolverManager", %"class.net::HostResolverManager"* %63, i64 0, i32 10, i32 0, i32 0, i32 0
  %65 = load %"class.net::DnsClient"*, %"class.net::DnsClient"** %64, align 8
  %66 = bitcast %"class.net::DnsClient"* %65 to void (%"class.net::DnsClient"*)***
  %67 = load void (%"class.net::DnsClient"*)**, void (%"class.net::DnsClient"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.net::DnsClient"*)*, void (%"class.net::DnsClient"*)** %67, i64 17
  %69 = load void (%"class.net::DnsClient"*)*, void (%"class.net::DnsClient"*)** %68, align 8
  call void %69(%"class.net::DnsClient"* %65) #18
  br label %70

70:                                               ; preds = %62, %47
  %71 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 9, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp sgt i64 %72, 60000000
  %74 = select i1 %73, i64 %72, i64 60000000
  %75 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %76 = load i8, i8* %75, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %113, label %78

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %80 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %79, align 8
  %81 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %82 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %81, align 8
  %83 = icmp eq %"class.net::IPEndPoint"* %80, %82
  br i1 %83, label %113, label %84

84:                                               ; preds = %78, %108
  %85 = phi %"class.net::IPEndPoint"* [ %109, %108 ], [ %80, %78 ]
  %86 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %85, i64 0, i32 0
  %87 = call zeroext i1 @_ZNK3net9IPAddress6IsIPv4Ev(%"class.net::IPAddress"* %86) #18
  br i1 %87, label %88, label %108

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %85, i64 0, i32 0, i32 0, i32 1
  %90 = load i8, i8* %89, align 1
  %91 = icmp ult i8 %90, 4
  br i1 %91, label %108, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 127
  br i1 %95, label %96, label %108

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %98 = load i8, i8* %97, align 1
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %108

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 53
  br i1 %103, label %104, label %108

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 53
  br i1 %107, label %111, label %108

108:                                              ; preds = %104, %100, %96, %92, %88, %84
  %109 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %85, i64 1
  %110 = icmp eq %"class.net::IPEndPoint"* %109, %82
  br i1 %110, label %113, label %84

111:                                              ; preds = %104
  %112 = bitcast %"class.net::HostCache::Entry"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %112) #18
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* nonnull %7, i32 -166, i32 0, i8 0, i64 undef) #18
  call void @_ZN3net19HostResolverManager3Job16CompleteRequestsERKNS_9HostCache5EntryEN4base9TimeDeltaEbb(%"class.net::HostResolverManager::Job"* %0, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %7, i64 0, i1 zeroext true, i1 zeroext false) #18
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %112) #18
  br label %114

113:                                              ; preds = %108, %70, %78
  call void @_ZN3net19HostResolverManager3Job16CompleteRequestsERKNS_9HostCache5EntryEN4base9TimeDeltaEbb(%"class.net::HostResolverManager::Job"* %0, %"class.net::HostCache::Entry"* dereferenceable(200) %2, i64 %74, i1 zeroext true, i1 zeroext %3)
  br label %114

114:                                              ; preds = %111, %113, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job33OnIntermediateTransactionCompleteEv(%"class.net::HostResolverManager::Job"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", align 8
  %3 = alloca %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", align 8
  %4 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 19
  %5 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %4, align 8
  %6 = icmp eq %"class.net::PrioritizedDispatcher"* %5, null
  %7 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %8 = load %"class.net::HostResolverManager::DnsTask"*, %"class.net::HostResolverManager::DnsTask"** %7, align 8
  %9 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %8, i64 0, i32 9, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %8, i64 0, i32 9, i32 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = icmp ne i64 %10, %12
  br i1 %6, label %54, label %14

14:                                               ; preds = %1
  br i1 %13, label %34, label %15

15:                                               ; preds = %14
  %16 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %27, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28
  tail call void @_ZN3net21PrioritizedDispatcher6CancelERKNS_13PriorityQueueIPNS0_3JobEE7PointerE(%"class.net::PrioritizedDispatcher"* nonnull %5, %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* dereferenceable(40) %20) #18
  %21 = bitcast %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %21) #18
  %22 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %2, i64 0, i32 2
  %23 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %20, i64 0, i32 0
  store i32 -1, i32* %23, align 8
  %24 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 1
  %25 = bitcast %"class.std::__1::__list_iterator"* %24 to i64*
  %26 = ptrtoint %"class.std::__1::list"* %22 to i64
  store i64 %26, i64* %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21) #18
  br label %56

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 18
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, 1
  br i1 %30, label %31, label %56

31:                                               ; preds = %27
  tail call void @_ZN3net21PrioritizedDispatcher13OnJobFinishedEv(%"class.net::PrioritizedDispatcher"* nonnull %5) #18
  %32 = load i32, i32* %28, align 4
  %33 = add nsw i32 %32, -1
  store i32 %33, i32* %28, align 4
  br label %56

34:                                               ; preds = %14
  tail call void @_ZN3net19HostResolverManager7DnsTask20StartNextTransactionEv(%"class.net::HostResolverManager::DnsTask"* %8)
  %35 = load %"class.net::HostResolverManager::DnsTask"*, %"class.net::HostResolverManager::DnsTask"** %7, align 8
  %36 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %35, i64 0, i32 9, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.net::HostResolverManager::DnsTask", %"class.net::HostResolverManager::DnsTask"* %35, i64 0, i32 9, i32 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %37, %39
  br i1 %40, label %41, label %56

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, -1
  br i1 %44, label %56, label %45

45:                                               ; preds = %41
  %46 = load %"class.net::PrioritizedDispatcher"*, %"class.net::PrioritizedDispatcher"** %4, align 8
  %47 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28
  tail call void @_ZN3net21PrioritizedDispatcher6CancelERKNS_13PriorityQueueIPNS0_3JobEE7PointerE(%"class.net::PrioritizedDispatcher"* %46, %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* dereferenceable(40) %47) #18
  %48 = bitcast %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %48) #18
  %49 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %3, i64 0, i32 2
  %50 = getelementptr inbounds %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer", %"class.net::PriorityQueue<net::PrioritizedDispatcher::Job *>::Pointer"* %47, i64 0, i32 0
  store i32 -1, i32* %50, align 8
  %51 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 28, i32 1
  %52 = bitcast %"class.std::__1::__list_iterator"* %51 to i64*
  %53 = ptrtoint %"class.std::__1::list"* %49 to i64
  store i64 %53, i64* %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %48) #18
  br label %56

54:                                               ; preds = %1
  br i1 %13, label %55, label %56

55:                                               ; preds = %54
  tail call void @_ZN3net19HostResolverManager7DnsTask20StartNextTransactionEv(%"class.net::HostResolverManager::DnsTask"* %8)
  br label %56

56:                                               ; preds = %41, %34, %31, %27, %19, %54, %55, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job24AddTransactionTimeQueuedEN4base9TimeDeltaE(%"class.net::HostResolverManager::Job"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = add i64 %1, -9223372036854775807
  %5 = icmp ult i64 %4, 2
  %6 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 30, i32 0
  %7 = load i64, i64* %6, align 8
  br i1 %5, label %15, label %8

8:                                                ; preds = %2
  %9 = icmp slt i64 %1, 0
  %10 = select i1 %9, i64 -9223372036854775808, i64 9223372036854775807
  %11 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %7, i64 %1) #18
  %12 = extractvalue { i64, i1 } %11, 1
  %13 = extractvalue { i64, i1 } %11, 0
  %14 = select i1 %12, i64 %10, i64 %13, !prof !177
  br label %23

15:                                               ; preds = %2
  %16 = add i64 %7, -9223372036854775807
  %17 = icmp ugt i64 %16, 1
  %18 = icmp eq i64 %7, %1
  %19 = or i1 %18, %17
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.69, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.70, i64 0, i64 0)) #18
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #18
  br label %23

23:                                               ; preds = %8, %15, %20
  %24 = phi i64 [ %14, %8 ], [ %1, %15 ], [ %1, %20 ]
  store i64 %24, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3net19HostResolverManager3Job8priorityEv(%"class.net::HostResolverManager::Job"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 15, i32 0
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N3net19HostResolverManager3Job17OnDnsTaskCompleteEN4base9TimeTicksERKNS_9HostCache5EntryEb(%"class.net::HostResolverManager::Job"*, i64, %"class.net::HostCache::Entry"* dereferenceable(200), i1 zeroext) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 -1, i32 31, i32 0, i32 1
  %6 = bitcast i64* %5 to %"class.net::HostResolverManager::Job"*
  tail call void @_ZN3net19HostResolverManager3Job17OnDnsTaskCompleteEN4base9TimeTicksERKNS_9HostCache5EntryEb(%"class.net::HostResolverManager::Job"* %6, i64 %1, %"class.net::HostCache::Entry"* dereferenceable(200) %2, i1 zeroext %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N3net19HostResolverManager3Job33OnIntermediateTransactionCompleteEv(%"class.net::HostResolverManager::Job"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 -1, i32 31, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.net::HostResolverManager::Job"*
  tail call void @_ZN3net19HostResolverManager3Job33OnIntermediateTransactionCompleteEv(%"class.net::HostResolverManager::Job"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn8_NK3net19HostResolverManager3Job8priorityEv(%"class.net::HostResolverManager::Job"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 -1, i32 31, i32 0, i32 1
  %3 = getelementptr inbounds i64, i64* %2, i64 45
  %4 = bitcast i64* %3 to i32*
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N3net19HostResolverManager3Job24AddTransactionTimeQueuedEN4base9TimeDeltaE(%"class.net::HostResolverManager::Job"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 -1, i32 31, i32 0, i32 1
  %5 = add i64 %1, -9223372036854775807
  %6 = icmp ult i64 %5, 2
  %7 = getelementptr inbounds i64, i64* %4, i64 74
  %8 = load i64, i64* %7, align 8
  br i1 %6, label %16, label %9

9:                                                ; preds = %2
  %10 = icmp slt i64 %1, 0
  %11 = select i1 %10, i64 -9223372036854775808, i64 9223372036854775807
  %12 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %8, i64 %1) #18
  %13 = extractvalue { i64, i1 } %12, 1
  %14 = extractvalue { i64, i1 } %12, 0
  %15 = select i1 %13, i64 %11, i64 %14, !prof !177
  br label %24

16:                                               ; preds = %2
  %17 = add i64 %8, -9223372036854775807
  %18 = icmp ugt i64 %17, 1
  %19 = icmp eq i64 %8, %1
  %20 = or i1 %19, %18
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.69, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.70, i64 0, i64 0)) #18
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #18
  br label %24

24:                                               ; preds = %9, %16, %21
  %25 = phi i64 [ %15, %9 ], [ %1, %16 ], [ %1, %21 ]
  store i64 %25, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N3net19HostResolverManager3JobD1Ev(%"class.net::HostResolverManager::Job"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 -1, i32 31, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.net::HostResolverManager::Job"*
  tail call void @_ZN3net19HostResolverManager3JobD2Ev(%"class.net::HostResolverManager::Job"* %3) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N3net19HostResolverManager3JobD0Ev(%"class.net::HostResolverManager::Job"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 -1, i32 31, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.net::HostResolverManager::Job"*
  tail call void @_ZN3net19HostResolverManager3JobD2Ev(%"class.net::HostResolverManager::Job"* %3) #18
  %4 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE8__appendINS_16__deque_iteratorIS3_PKS3_RS9_PKSA_lLl0EEEEEvT_SF_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISF_EE5valueEvE4typeE(%"class.std::__1::deque"*, i32**, i32*, i32**, i32*, i8*) local_unnamed_addr #0 comdat align 2 {
  %7 = ptrtoint i32* %2 to i64
  %8 = icmp eq i32* %4, %2
  br i1 %8, label %25, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i32* %4 to i64
  %11 = ptrtoint i32** %3 to i64
  %12 = ptrtoint i32** %1 to i64
  %13 = sub i64 %11, %12
  %14 = shl i64 %13, 7
  %15 = bitcast i32** %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %10, %16
  %18 = ashr exact i64 %17, 2
  %19 = add nsw i64 %18, %14
  %20 = bitcast i32** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %7, %21
  %23 = ashr exact i64 %22, 2
  %24 = sub i64 %19, %23
  br label %25

25:                                               ; preds = %6, %9
  %26 = phi i64 [ %24, %9 ], [ 0, %6 ]
  %27 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %28 = bitcast i32*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast i32*** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %29, %32
  %34 = icmp eq i64 %33, 0
  %35 = shl i64 %33, 7
  %36 = add i64 %35, -1
  %37 = select i1 %34, i64 0, i64 %36
  %38 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, %39
  %43 = sub i64 %37, %42
  %44 = icmp ugt i64 %26, %43
  %45 = inttoptr i64 %32 to i32**
  %46 = inttoptr i64 %29 to i32**
  br i1 %44, label %47, label %54

47:                                               ; preds = %25
  %48 = sub i64 %26, %43
  tail call void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEm(%"class.std::__1::deque"* %0, i64 %48)
  %49 = load i64, i64* %40, align 8
  %50 = load i64, i64* %38, align 8
  %51 = load i32**, i32*** %30, align 8
  %52 = load i32**, i32*** %27, align 8
  %53 = add i64 %50, %49
  br label %54

54:                                               ; preds = %47, %25
  %55 = phi i64 [ %53, %47 ], [ %42, %25 ]
  %56 = phi i32** [ %52, %47 ], [ %46, %25 ]
  %57 = phi i32** [ %51, %47 ], [ %45, %25 ]
  %58 = phi i64 [ %49, %47 ], [ %41, %25 ]
  %59 = lshr i64 %55, 10
  %60 = getelementptr inbounds i32*, i32** %57, i64 %59
  %61 = icmp eq i32** %56, %57
  br i1 %61, label %67, label %62

62:                                               ; preds = %54
  %63 = load i32*, i32** %60, align 8
  %64 = and i64 %55, 1023
  %65 = getelementptr inbounds i32, i32* %63, i64 %64
  %66 = ptrtoint i32* %65 to i64
  br label %67

67:                                               ; preds = %54, %62
  %68 = phi i64 [ %66, %62 ], [ 0, %54 ]
  %69 = icmp eq i64 %26, 0
  br i1 %69, label %93, label %70

70:                                               ; preds = %67
  %71 = bitcast i32** %60 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %68, %72
  %74 = ashr exact i64 %73, 2
  %75 = add nsw i64 %74, %26
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %77, label %84

77:                                               ; preds = %70
  %78 = lshr i64 %75, 10
  %79 = getelementptr inbounds i32*, i32** %60, i64 %78
  %80 = load i32*, i32** %79, align 8
  %81 = and i64 %75, 1023
  %82 = getelementptr inbounds i32, i32* %80, i64 %81
  %83 = ptrtoint i32* %82 to i64
  br label %93

84:                                               ; preds = %70
  %85 = sub nsw i64 1023, %75
  %86 = sdiv i64 %85, -1024
  %87 = getelementptr inbounds i32*, i32** %60, i64 %86
  %88 = load i32*, i32** %87, align 8
  %89 = srem i64 %85, 1024
  %90 = sub nsw i64 1023, %89
  %91 = getelementptr inbounds i32, i32* %88, i64 %90
  %92 = ptrtoint i32* %91 to i64
  br label %93

93:                                               ; preds = %67, %77, %84
  %94 = phi i64 [ %68, %67 ], [ %83, %77 ], [ %92, %84 ]
  %95 = phi i32** [ %60, %67 ], [ %79, %77 ], [ %87, %84 ]
  %96 = inttoptr i64 %94 to i32*
  %97 = inttoptr i64 %68 to i32*
  %98 = icmp eq i32* %97, %96
  br i1 %98, label %99, label %100

99:                                               ; preds = %175, %183, %93
  ret void

100:                                              ; preds = %93, %183
  %101 = phi i64 [ %182, %183 ], [ %58, %93 ]
  %102 = phi i64 [ %178, %183 ], [ %7, %93 ]
  %103 = phi i32** [ %177, %183 ], [ %1, %93 ]
  %104 = phi i64 [ %186, %183 ], [ %68, %93 ]
  %105 = phi i32** [ %184, %183 ], [ %60, %93 ]
  %106 = icmp eq i32** %105, %95
  br i1 %106, label %110, label %107

107:                                              ; preds = %100
  %108 = load i32*, i32** %105, align 8
  %109 = getelementptr inbounds i32, i32* %108, i64 1024
  br label %110

110:                                              ; preds = %100, %107
  %111 = phi i32* [ %109, %107 ], [ %96, %100 ]
  %112 = inttoptr i64 %104 to i32*
  %113 = icmp eq i32* %111, %112
  br i1 %113, label %175, label %114

114:                                              ; preds = %110
  %115 = getelementptr i32, i32* %111, i64 -1
  %116 = bitcast i32* %115 to i8*
  %117 = sub i64 0, %104
  %118 = getelementptr i8, i8* %116, i64 %117
  %119 = ptrtoint i8* %118 to i64
  %120 = and i64 %119, 4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %136

122:                                              ; preds = %114
  %123 = inttoptr i64 %102 to i32*
  %124 = load i32, i32* %123, align 4
  store i32 %124, i32* %112, align 4
  %125 = getelementptr inbounds i32, i32* %112, i64 1
  %126 = getelementptr inbounds i32, i32* %123, i64 1
  %127 = ptrtoint i32* %126 to i64
  %128 = bitcast i32** %103 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %127, %129
  %131 = icmp eq i64 %130, 4096
  br i1 %131, label %132, label %136

132:                                              ; preds = %122
  %133 = getelementptr inbounds i32*, i32** %103, i64 1
  %134 = bitcast i32** %133 to i64*
  %135 = load i64, i64* %134, align 8
  br label %136

136:                                              ; preds = %114, %132, %122
  %137 = phi i32** [ undef, %114 ], [ %133, %132 ], [ %103, %122 ]
  %138 = phi i64 [ undef, %114 ], [ %135, %132 ], [ %127, %122 ]
  %139 = phi i32* [ %112, %114 ], [ %125, %132 ], [ %125, %122 ]
  %140 = phi i64 [ %102, %114 ], [ %135, %132 ], [ %127, %122 ]
  %141 = phi i32** [ %103, %114 ], [ %133, %132 ], [ %103, %122 ]
  %142 = icmp ult i8* %118, inttoptr (i64 4 to i8*)
  br i1 %142, label %170, label %143

143:                                              ; preds = %136, %193
  %144 = phi i32* [ %163, %193 ], [ %139, %136 ]
  %145 = phi i64 [ %195, %193 ], [ %140, %136 ]
  %146 = phi i32** [ %194, %193 ], [ %141, %136 ]
  %147 = inttoptr i64 %145 to i32*
  %148 = load i32, i32* %147, align 4
  store i32 %148, i32* %144, align 4
  %149 = getelementptr inbounds i32, i32* %144, i64 1
  %150 = getelementptr inbounds i32, i32* %147, i64 1
  %151 = ptrtoint i32* %150 to i64
  %152 = bitcast i32** %146 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = sub i64 %151, %153
  %155 = icmp eq i64 %154, 4096
  br i1 %155, label %156, label %159

156:                                              ; preds = %143
  %157 = getelementptr inbounds i32*, i32** %146, i64 1
  %158 = load i32*, i32** %157, align 8
  br label %159

159:                                              ; preds = %143, %156
  %160 = phi i32** [ %157, %156 ], [ %146, %143 ]
  %161 = phi i32* [ %158, %156 ], [ %150, %143 ]
  %162 = load i32, i32* %161, align 4
  store i32 %162, i32* %149, align 4
  %163 = getelementptr inbounds i32, i32* %144, i64 2
  %164 = getelementptr inbounds i32, i32* %161, i64 1
  %165 = ptrtoint i32* %164 to i64
  %166 = bitcast i32** %160 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = sub i64 %165, %167
  %169 = icmp eq i64 %168, 4096
  br i1 %169, label %189, label %193

170:                                              ; preds = %193, %136
  %171 = phi i32** [ %137, %136 ], [ %194, %193 ]
  %172 = phi i64 [ %138, %136 ], [ %195, %193 ]
  %173 = ptrtoint i32* %111 to i64
  %174 = load i64, i64* %40, align 8
  br label %175

175:                                              ; preds = %170, %110
  %176 = phi i64 [ %174, %170 ], [ %101, %110 ]
  %177 = phi i32** [ %171, %170 ], [ %103, %110 ]
  %178 = phi i64 [ %172, %170 ], [ %102, %110 ]
  %179 = phi i64 [ %173, %170 ], [ %104, %110 ]
  %180 = sub i64 %179, %104
  %181 = ashr exact i64 %180, 2
  %182 = add i64 %176, %181
  store i64 %182, i64* %40, align 8
  br i1 %106, label %99, label %183

183:                                              ; preds = %175
  %184 = getelementptr inbounds i32*, i32** %105, i64 1
  %185 = bitcast i32** %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = inttoptr i64 %186 to i32*
  %188 = icmp eq i32* %187, %96
  br i1 %188, label %99, label %100

189:                                              ; preds = %159
  %190 = getelementptr inbounds i32*, i32** %160, i64 1
  %191 = bitcast i32** %190 to i64*
  %192 = load i64, i64* %191, align 8
  br label %193

193:                                              ; preds = %189, %159
  %194 = phi i32** [ %190, %189 ], [ %160, %159 ]
  %195 = phi i64 [ %192, %189 ], [ %165, %159 ]
  %196 = icmp eq i32* %111, %163
  br i1 %196, label %170, label %143
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEm(%"class.std::__1::deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca %"struct.std::__1::__split_buffer.793", align 16
  %6 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32**, i32*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load i32**, i32*** %9, align 8
  %11 = icmp eq i32** %8, %10
  %12 = zext i1 %11 to i64
  %13 = add i64 %12, %1
  %14 = lshr i64 %13, 10
  %15 = and i64 %13, 1023
  %16 = icmp ne i64 %15, 0
  %17 = zext i1 %16 to i64
  %18 = add nuw nsw i64 %14, %17
  %19 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %20, 10
  %22 = icmp ult i64 %18, %21
  %23 = select i1 %22, i64 %18, i64 %21
  %24 = sub nsw i64 %18, %23
  %25 = icmp eq i64 %24, 0
  %26 = ptrtoint i32** %8 to i64
  br i1 %25, label %27, label %186

27:                                               ; preds = %2
  %28 = shl nuw i64 %23, 10
  %29 = sub i64 %20, %28
  store i64 %29, i64* %19, align 8
  %30 = icmp eq i64 %23, 0
  br i1 %30, label %768, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast i32*** %32 to i64*
  %35 = bitcast %"class.std::__1::deque"* %0 to i64*
  %36 = bitcast i32*** %9 to i64*
  %37 = bitcast i32*** %7 to i64*
  %38 = bitcast i32*** %7 to i64**
  br label %39

39:                                               ; preds = %184, %31
  %40 = phi i32** [ %8, %31 ], [ %181, %184 ]
  %41 = phi i32** [ %10, %31 ], [ %185, %184 ]
  %42 = phi i64 [ %23, %31 ], [ %182, %184 ]
  %43 = bitcast i32** %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds i32*, i32** %41, i64 1
  store i32** %45, i32*** %9, align 8
  %46 = load i32**, i32*** %32, align 8
  %47 = icmp eq i32** %40, %46
  %48 = ptrtoint i32** %46 to i64
  %49 = bitcast i32** %40 to i64*
  br i1 %47, label %50, label %178

50:                                               ; preds = %39
  %51 = load i32**, i32*** %33, align 8
  %52 = icmp ugt i32** %45, %51
  %53 = ptrtoint i32** %51 to i64
  br i1 %52, label %54, label %73

54:                                               ; preds = %50
  %55 = ptrtoint i32** %45 to i64
  %56 = sub i64 %55, %53
  %57 = ashr exact i64 %56, 3
  %58 = add nsw i64 %57, 1
  %59 = sdiv i64 %58, -2
  %60 = getelementptr inbounds i32*, i32** %45, i64 %59
  %61 = sub i64 %48, %55
  %62 = ashr exact i64 %61, 3
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %54
  %65 = bitcast i32** %60 to i8*
  %66 = bitcast i32** %45 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %61, i1 false) #18
  %67 = load i32**, i32*** %9, align 8
  br label %68

68:                                               ; preds = %64, %54
  %69 = phi i32** [ %45, %54 ], [ %67, %64 ]
  %70 = getelementptr inbounds i32*, i32** %60, i64 %62
  store i32** %70, i32*** %7, align 8
  %71 = getelementptr inbounds i32*, i32** %69, i64 %59
  store i32** %71, i32*** %9, align 8
  %72 = bitcast i32** %70 to i64*
  br label %178

73:                                               ; preds = %50
  %74 = sub i64 %48, %53
  %75 = ashr exact i64 %74, 2
  %76 = icmp eq i64 %74, 0
  %77 = select i1 %76, i64 1, i64 %75
  %78 = icmp ugt i64 %77, 2305843009213693951
  br i1 %78, label %79, label %80

79:                                               ; preds = %73
  tail call void @abort() #20
  unreachable

80:                                               ; preds = %73
  %81 = lshr i64 %77, 2
  %82 = shl i64 %77, 3
  %83 = tail call i8* @_Znwm(i64 %82) #19
  %84 = bitcast i8* %83 to i32**
  %85 = ptrtoint i8* %83 to i64
  %86 = getelementptr inbounds i32*, i32** %84, i64 %81
  %87 = ptrtoint i32** %86 to i64
  %88 = getelementptr inbounds i32*, i32** %84, i64 %77
  %89 = ptrtoint i32** %88 to i64
  %90 = ptrtoint i32** %45 to i64
  %91 = sub i64 %48, %90
  %92 = ashr exact i64 %91, 3
  %93 = getelementptr inbounds i32*, i32** %86, i64 %92
  %94 = icmp eq i64 %91, 0
  br i1 %94, label %170, label %95

95:                                               ; preds = %80
  %96 = add i64 %91, -8
  %97 = lshr i64 %96, 3
  %98 = add nuw nsw i64 %97, 1
  %99 = and i64 %98, 7
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %116, label %101

101:                                              ; preds = %95, %101
  %102 = phi i32** [ %109, %101 ], [ %86, %95 ]
  %103 = phi i64 [ %110, %101 ], [ %87, %95 ]
  %104 = phi i32** [ %111, %101 ], [ %45, %95 ]
  %105 = phi i64 [ %112, %101 ], [ %99, %95 ]
  %106 = bitcast i32** %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = inttoptr i64 %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds i32*, i32** %102, i64 1
  %110 = ptrtoint i32** %109 to i64
  %111 = getelementptr inbounds i32*, i32** %104, i64 1
  %112 = add i64 %105, -1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %101, !llvm.loop !245

114:                                              ; preds = %101
  %115 = ptrtoint i32** %109 to i64
  br label %116

116:                                              ; preds = %95, %114
  %117 = phi i32** [ %86, %95 ], [ %109, %114 ]
  %118 = phi i64 [ %87, %95 ], [ %115, %114 ]
  %119 = phi i32** [ %45, %95 ], [ %111, %114 ]
  %120 = icmp ult i64 %96, 56
  br i1 %120, label %167, label %121

121:                                              ; preds = %116, %121
  %122 = phi i32** [ %163, %121 ], [ %117, %116 ]
  %123 = phi i64 [ %164, %121 ], [ %118, %116 ]
  %124 = phi i32** [ %165, %121 ], [ %119, %116 ]
  %125 = bitcast i32** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = inttoptr i64 %123 to i64*
  store i64 %126, i64* %127, align 8
  %128 = getelementptr inbounds i32*, i32** %122, i64 1
  %129 = getelementptr inbounds i32*, i32** %124, i64 1
  %130 = bitcast i32** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i32** %128 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds i32*, i32** %122, i64 2
  %134 = getelementptr inbounds i32*, i32** %124, i64 2
  %135 = bitcast i32** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i32** %133 to i64*
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds i32*, i32** %122, i64 3
  %139 = getelementptr inbounds i32*, i32** %124, i64 3
  %140 = bitcast i32** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast i32** %138 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds i32*, i32** %122, i64 4
  %144 = getelementptr inbounds i32*, i32** %124, i64 4
  %145 = bitcast i32** %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast i32** %143 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds i32*, i32** %122, i64 5
  %149 = getelementptr inbounds i32*, i32** %124, i64 5
  %150 = bitcast i32** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %148 to i64*
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds i32*, i32** %122, i64 6
  %154 = getelementptr inbounds i32*, i32** %124, i64 6
  %155 = bitcast i32** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast i32** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds i32*, i32** %122, i64 7
  %159 = getelementptr inbounds i32*, i32** %124, i64 7
  %160 = bitcast i32** %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast i32** %158 to i64*
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds i32*, i32** %122, i64 8
  %164 = ptrtoint i32** %163 to i64
  %165 = getelementptr inbounds i32*, i32** %124, i64 8
  %166 = icmp eq i32** %93, %163
  br i1 %166, label %167, label %121

167:                                              ; preds = %121, %116
  %168 = ptrtoint i32** %93 to i64
  %169 = load i32**, i32*** %33, align 8
  br label %170

170:                                              ; preds = %167, %80
  %171 = phi i32** [ %169, %167 ], [ %51, %80 ]
  %172 = phi i64 [ %168, %167 ], [ %87, %80 ]
  store i64 %85, i64* %35, align 8
  store i64 %87, i64* %36, align 8
  store i64 %172, i64* %37, align 8
  store i64 %89, i64* %34, align 8
  %173 = icmp eq i32** %171, null
  %174 = inttoptr i64 %172 to i64*
  br i1 %173, label %178, label %175

175:                                              ; preds = %170
  %176 = bitcast i32** %171 to i8*
  tail call void @_ZdlPv(i8* %176) #19
  %177 = load i64*, i64** %38, align 8
  br label %178

178:                                              ; preds = %39, %68, %170, %175
  %179 = phi i64* [ %177, %175 ], [ %174, %170 ], [ %72, %68 ], [ %49, %39 ]
  store i64 %44, i64* %179, align 8
  %180 = load i32**, i32*** %7, align 8
  %181 = getelementptr inbounds i32*, i32** %180, i64 1
  store i32** %181, i32*** %7, align 8
  %182 = add i64 %42, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %768, label %184

184:                                              ; preds = %178
  %185 = load i32**, i32*** %9, align 8
  br label %39

186:                                              ; preds = %2
  %187 = ptrtoint i32** %10 to i64
  %188 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %189 = bitcast i32*** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.std::__1::deque"* %0 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = sub i64 %190, %192
  %194 = ashr exact i64 %193, 3
  %195 = bitcast i32*** %7 to i64*
  %196 = bitcast i32*** %9 to i64*
  %197 = sub i64 %26, %187
  %198 = ashr exact i64 %197, 3
  %199 = sub nsw i64 %194, %198
  %200 = icmp ugt i64 %24, %199
  br i1 %200, label %391, label %201

201:                                              ; preds = %186
  %202 = bitcast i32** %3 to i8*
  %203 = bitcast i32** %3 to i8**
  %204 = icmp eq i64 %190, %26
  br i1 %204, label %214, label %205

205:                                              ; preds = %201, %210
  %206 = phi i64 [ %208, %210 ], [ %24, %201 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #18
  %207 = call i8* @_Znwm(i64 4096) #19
  store i8* %207, i8** %203, align 8
  call void @_ZNSt3__114__split_bufferIPN3net19HostResolverManager8TaskTypeENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"* %6, i32** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #18
  %208 = add i64 %206, -1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %217, label %210

210:                                              ; preds = %205
  %211 = load i64, i64* %189, align 8
  %212 = load i64, i64* %195, align 8
  %213 = icmp eq i64 %211, %212
  br i1 %213, label %214, label %205

214:                                              ; preds = %210, %201
  %215 = phi i64 [ %24, %201 ], [ %208, %210 ]
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %205, %214
  %218 = load i64, i64* %19, align 8
  br label %236

219:                                              ; preds = %214
  %220 = bitcast i32** %4 to i8*
  %221 = bitcast i32** %4 to i8**
  br label %222

222:                                              ; preds = %219, %222
  %223 = phi i64 [ %215, %219 ], [ %225, %222 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #18
  %224 = call i8* @_Znwm(i64 4096) #19
  store i8* %224, i8** %221, align 8
  call void @_ZNSt3__114__split_bufferIPN3net19HostResolverManager8TaskTypeENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"* %6, i32** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #18
  %225 = add i64 %223, -1
  %226 = load i64, i64* %195, align 8
  %227 = load i64, i64* %196, align 8
  %228 = sub i64 %226, %227
  %229 = icmp eq i64 %228, 8
  %230 = select i1 %229, i64 1023, i64 1024
  %231 = load i64, i64* %19, align 8
  %232 = add i64 %230, %231
  store i64 %232, i64* %19, align 8
  %233 = icmp eq i64 %225, 0
  br i1 %233, label %234, label %222

234:                                              ; preds = %222
  %235 = add i64 %215, %23
  br label %236

236:                                              ; preds = %217, %234
  %237 = phi i64 [ %218, %217 ], [ %232, %234 ]
  %238 = phi i64 [ %23, %217 ], [ %235, %234 ]
  %239 = shl i64 %238, 10
  %240 = sub i64 %237, %239
  store i64 %240, i64* %19, align 8
  %241 = icmp eq i64 %238, 0
  br i1 %241, label %768, label %242

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %244 = bitcast i32*** %7 to i64**
  %245 = load i32**, i32*** %7, align 8
  br label %246

246:                                              ; preds = %242, %385
  %247 = phi i32** [ %245, %242 ], [ %388, %385 ]
  %248 = phi i64 [ %238, %242 ], [ %389, %385 ]
  %249 = load i32**, i32*** %9, align 8
  %250 = bitcast i32** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = getelementptr inbounds i32*, i32** %249, i64 1
  store i32** %252, i32*** %9, align 8
  %253 = load i32**, i32*** %188, align 8
  %254 = icmp eq i32** %247, %253
  %255 = ptrtoint i32** %253 to i64
  %256 = bitcast i32** %247 to i64*
  br i1 %254, label %257, label %385

257:                                              ; preds = %246
  %258 = load i32**, i32*** %243, align 8
  %259 = icmp ugt i32** %252, %258
  %260 = ptrtoint i32** %258 to i64
  br i1 %259, label %261, label %280

261:                                              ; preds = %257
  %262 = ptrtoint i32** %252 to i64
  %263 = sub i64 %262, %260
  %264 = ashr exact i64 %263, 3
  %265 = add nsw i64 %264, 1
  %266 = sdiv i64 %265, -2
  %267 = getelementptr inbounds i32*, i32** %252, i64 %266
  %268 = sub i64 %255, %262
  %269 = ashr exact i64 %268, 3
  %270 = icmp eq i64 %268, 0
  br i1 %270, label %275, label %271

271:                                              ; preds = %261
  %272 = bitcast i32** %267 to i8*
  %273 = bitcast i32** %252 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 %273, i64 %268, i1 false) #18
  %274 = load i32**, i32*** %9, align 8
  br label %275

275:                                              ; preds = %271, %261
  %276 = phi i32** [ %252, %261 ], [ %274, %271 ]
  %277 = getelementptr inbounds i32*, i32** %267, i64 %269
  store i32** %277, i32*** %7, align 8
  %278 = getelementptr inbounds i32*, i32** %276, i64 %266
  store i32** %278, i32*** %9, align 8
  %279 = bitcast i32** %277 to i64*
  br label %385

280:                                              ; preds = %257
  %281 = sub i64 %255, %260
  %282 = ashr exact i64 %281, 2
  %283 = icmp eq i64 %281, 0
  %284 = select i1 %283, i64 1, i64 %282
  %285 = icmp ugt i64 %284, 2305843009213693951
  br i1 %285, label %286, label %287

286:                                              ; preds = %280
  call void @abort() #20
  unreachable

287:                                              ; preds = %280
  %288 = lshr i64 %284, 2
  %289 = shl i64 %284, 3
  %290 = call i8* @_Znwm(i64 %289) #19
  %291 = bitcast i8* %290 to i32**
  %292 = ptrtoint i8* %290 to i64
  %293 = getelementptr inbounds i32*, i32** %291, i64 %288
  %294 = ptrtoint i32** %293 to i64
  %295 = getelementptr inbounds i32*, i32** %291, i64 %284
  %296 = ptrtoint i32** %295 to i64
  %297 = ptrtoint i32** %252 to i64
  %298 = sub i64 %255, %297
  %299 = ashr exact i64 %298, 3
  %300 = getelementptr inbounds i32*, i32** %293, i64 %299
  %301 = icmp eq i64 %298, 0
  br i1 %301, label %377, label %302

302:                                              ; preds = %287
  %303 = add i64 %298, -8
  %304 = lshr i64 %303, 3
  %305 = add nuw nsw i64 %304, 1
  %306 = and i64 %305, 7
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %323, label %308

308:                                              ; preds = %302, %308
  %309 = phi i32** [ %316, %308 ], [ %293, %302 ]
  %310 = phi i64 [ %317, %308 ], [ %294, %302 ]
  %311 = phi i32** [ %318, %308 ], [ %252, %302 ]
  %312 = phi i64 [ %319, %308 ], [ %306, %302 ]
  %313 = bitcast i32** %311 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = inttoptr i64 %310 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds i32*, i32** %309, i64 1
  %317 = ptrtoint i32** %316 to i64
  %318 = getelementptr inbounds i32*, i32** %311, i64 1
  %319 = add i64 %312, -1
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %308, !llvm.loop !246

321:                                              ; preds = %308
  %322 = ptrtoint i32** %316 to i64
  br label %323

323:                                              ; preds = %302, %321
  %324 = phi i32** [ %293, %302 ], [ %316, %321 ]
  %325 = phi i64 [ %294, %302 ], [ %322, %321 ]
  %326 = phi i32** [ %252, %302 ], [ %318, %321 ]
  %327 = icmp ult i64 %303, 56
  br i1 %327, label %374, label %328

328:                                              ; preds = %323, %328
  %329 = phi i32** [ %370, %328 ], [ %324, %323 ]
  %330 = phi i64 [ %371, %328 ], [ %325, %323 ]
  %331 = phi i32** [ %372, %328 ], [ %326, %323 ]
  %332 = bitcast i32** %331 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = inttoptr i64 %330 to i64*
  store i64 %333, i64* %334, align 8
  %335 = getelementptr inbounds i32*, i32** %329, i64 1
  %336 = getelementptr inbounds i32*, i32** %331, i64 1
  %337 = bitcast i32** %336 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = bitcast i32** %335 to i64*
  store i64 %338, i64* %339, align 8
  %340 = getelementptr inbounds i32*, i32** %329, i64 2
  %341 = getelementptr inbounds i32*, i32** %331, i64 2
  %342 = bitcast i32** %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = bitcast i32** %340 to i64*
  store i64 %343, i64* %344, align 8
  %345 = getelementptr inbounds i32*, i32** %329, i64 3
  %346 = getelementptr inbounds i32*, i32** %331, i64 3
  %347 = bitcast i32** %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast i32** %345 to i64*
  store i64 %348, i64* %349, align 8
  %350 = getelementptr inbounds i32*, i32** %329, i64 4
  %351 = getelementptr inbounds i32*, i32** %331, i64 4
  %352 = bitcast i32** %351 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = bitcast i32** %350 to i64*
  store i64 %353, i64* %354, align 8
  %355 = getelementptr inbounds i32*, i32** %329, i64 5
  %356 = getelementptr inbounds i32*, i32** %331, i64 5
  %357 = bitcast i32** %356 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = bitcast i32** %355 to i64*
  store i64 %358, i64* %359, align 8
  %360 = getelementptr inbounds i32*, i32** %329, i64 6
  %361 = getelementptr inbounds i32*, i32** %331, i64 6
  %362 = bitcast i32** %361 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast i32** %360 to i64*
  store i64 %363, i64* %364, align 8
  %365 = getelementptr inbounds i32*, i32** %329, i64 7
  %366 = getelementptr inbounds i32*, i32** %331, i64 7
  %367 = bitcast i32** %366 to i64*
  %368 = load i64, i64* %367, align 8
  %369 = bitcast i32** %365 to i64*
  store i64 %368, i64* %369, align 8
  %370 = getelementptr inbounds i32*, i32** %329, i64 8
  %371 = ptrtoint i32** %370 to i64
  %372 = getelementptr inbounds i32*, i32** %331, i64 8
  %373 = icmp eq i32** %300, %370
  br i1 %373, label %374, label %328

374:                                              ; preds = %328, %323
  %375 = ptrtoint i32** %300 to i64
  %376 = load i32**, i32*** %243, align 8
  br label %377

377:                                              ; preds = %374, %287
  %378 = phi i32** [ %376, %374 ], [ %258, %287 ]
  %379 = phi i64 [ %375, %374 ], [ %294, %287 ]
  store i64 %292, i64* %191, align 8
  store i64 %294, i64* %196, align 8
  store i64 %379, i64* %195, align 8
  store i64 %296, i64* %189, align 8
  %380 = icmp eq i32** %378, null
  %381 = inttoptr i64 %379 to i64*
  br i1 %380, label %385, label %382

382:                                              ; preds = %377
  %383 = bitcast i32** %378 to i8*
  call void @_ZdlPv(i8* %383) #19
  %384 = load i64*, i64** %244, align 8
  br label %385

385:                                              ; preds = %246, %275, %377, %382
  %386 = phi i64* [ %384, %382 ], [ %381, %377 ], [ %279, %275 ], [ %256, %246 ]
  store i64 %251, i64* %386, align 8
  %387 = load i32**, i32*** %7, align 8
  %388 = getelementptr inbounds i32*, i32** %387, i64 1
  store i32** %388, i32*** %7, align 8
  %389 = add i64 %248, -1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %768, label %246

391:                                              ; preds = %186
  %392 = shl nuw i64 %23, 10
  %393 = bitcast %"struct.std::__1::__split_buffer.793"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %393) #18
  %394 = getelementptr inbounds %"struct.std::__1::__split_buffer.793", %"struct.std::__1::__split_buffer.793"* %5, i64 0, i32 0
  %395 = getelementptr inbounds %"struct.std::__1::__split_buffer.793", %"struct.std::__1::__split_buffer.793"* %5, i64 0, i32 1
  %396 = getelementptr inbounds %"struct.std::__1::__split_buffer.793", %"struct.std::__1::__split_buffer.793"* %5, i64 0, i32 2
  %397 = getelementptr inbounds %"struct.std::__1::__split_buffer.793", %"struct.std::__1::__split_buffer.793"* %5, i64 0, i32 3, i32 0, i32 0
  %398 = getelementptr inbounds %"struct.std::__1::__split_buffer.793", %"struct.std::__1::__split_buffer.793"* %5, i64 0, i32 3, i32 1, i32 0
  %399 = ashr exact i64 %193, 2
  %400 = add nsw i64 %198, %24
  %401 = icmp ult i64 %399, %400
  %402 = select i1 %401, i64 %400, i64 %399
  %403 = sub nsw i64 %198, %23
  %404 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %405 = bitcast %"struct.std::__1::__split_buffer.793"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %405, i8 -86, i64 24, i1 false)
  store i32** null, i32*** %397, align 8
  %406 = bitcast %"class.std::__1::allocator.265"** %398 to %"class.std::__1::__compressed_pair.262"**
  store %"class.std::__1::__compressed_pair.262"* %404, %"class.std::__1::__compressed_pair.262"** %406, align 8
  %407 = icmp eq i64 %402, 0
  br i1 %407, label %415, label %408

408:                                              ; preds = %391
  %409 = icmp ugt i64 %402, 2305843009213693951
  br i1 %409, label %410, label %411

410:                                              ; preds = %408
  tail call void @abort() #20
  unreachable

411:                                              ; preds = %408
  %412 = shl i64 %402, 3
  %413 = tail call i8* @_Znwm(i64 %412) #19
  %414 = bitcast i8* %413 to i32**
  br label %415

415:                                              ; preds = %411, %391
  %416 = phi i32** [ %414, %411 ], [ null, %391 ]
  store i32** %416, i32*** %394, align 16
  %417 = getelementptr inbounds i32*, i32** %416, i64 %403
  store i32** %417, i32*** %396, align 16
  store i32** %417, i32*** %395, align 8
  %418 = getelementptr inbounds i32*, i32** %416, i64 %402
  store i32** %418, i32*** %397, align 8
  %419 = bitcast i32*** %397 to i64*
  %420 = bitcast %"struct.std::__1::__split_buffer.793"* %5 to i64*
  %421 = bitcast i32*** %395 to i64*
  %422 = bitcast i32*** %396 to i64*
  br label %434

423:                                              ; preds = %568
  %424 = icmp eq i64 %23, 0
  br i1 %424, label %425, label %427

425:                                              ; preds = %423
  %426 = load i32**, i32*** %9, align 8
  br label %719

427:                                              ; preds = %423
  %428 = bitcast i32*** %9 to i64**
  %429 = bitcast i32*** %397 to i64*
  %430 = bitcast %"struct.std::__1::__split_buffer.793"* %5 to i64*
  %431 = bitcast i32*** %395 to i64*
  %432 = bitcast i32*** %396 to i64*
  %433 = load i64*, i64** %428, align 8
  br label %576

434:                                              ; preds = %574, %415
  %435 = phi i32** [ %418, %415 ], [ %575, %574 ]
  %436 = phi i32** [ %417, %415 ], [ %571, %574 ]
  %437 = phi i64 [ %24, %415 ], [ %572, %574 ]
  %438 = tail call i8* @_Znwm(i64 4096) #19
  %439 = ptrtoint i8* %438 to i64
  %440 = icmp eq i32** %436, %435
  %441 = ptrtoint i32** %435 to i64
  %442 = bitcast i32** %436 to i64*
  br i1 %440, label %443, label %568

443:                                              ; preds = %434
  %444 = load i32**, i32*** %395, align 8
  %445 = load i32**, i32*** %394, align 16
  %446 = icmp ugt i32** %444, %445
  %447 = ptrtoint i32** %445 to i64
  br i1 %446, label %448, label %464

448:                                              ; preds = %443
  %449 = ptrtoint i32** %444 to i64
  %450 = sub i64 %449, %447
  %451 = ashr exact i64 %450, 3
  %452 = add nsw i64 %451, 1
  %453 = sdiv i64 %452, -2
  %454 = getelementptr inbounds i32*, i32** %444, i64 %453
  %455 = sub i64 %441, %449
  %456 = ashr exact i64 %455, 3
  %457 = icmp eq i64 %455, 0
  br i1 %457, label %461, label %458

458:                                              ; preds = %448
  %459 = bitcast i32** %454 to i8*
  %460 = bitcast i32** %444 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %459, i8* align 8 %460, i64 %455, i1 false) #18
  br label %461

461:                                              ; preds = %458, %448
  %462 = getelementptr inbounds i32*, i32** %454, i64 %456
  store i32** %462, i32*** %396, align 16
  store i32** %454, i32*** %395, align 8
  %463 = bitcast i32** %462 to i64*
  br label %568

464:                                              ; preds = %443
  %465 = sub i64 %441, %447
  %466 = ashr exact i64 %465, 2
  %467 = icmp eq i64 %465, 0
  %468 = select i1 %467, i64 1, i64 %466
  %469 = icmp ugt i64 %468, 2305843009213693951
  br i1 %469, label %470, label %471

470:                                              ; preds = %464
  tail call void @abort() #20
  unreachable

471:                                              ; preds = %464
  %472 = lshr i64 %468, 2
  %473 = shl i64 %468, 3
  %474 = tail call i8* @_Znwm(i64 %473) #19
  %475 = bitcast i8* %474 to i32**
  %476 = ptrtoint i8* %474 to i64
  %477 = getelementptr inbounds i32*, i32** %475, i64 %472
  %478 = ptrtoint i32** %477 to i64
  %479 = getelementptr inbounds i32*, i32** %475, i64 %468
  %480 = ptrtoint i32** %479 to i64
  %481 = ptrtoint i32** %444 to i64
  %482 = sub i64 %441, %481
  %483 = ashr exact i64 %482, 3
  %484 = getelementptr inbounds i32*, i32** %477, i64 %483
  %485 = icmp eq i64 %482, 0
  br i1 %485, label %561, label %486

486:                                              ; preds = %471
  %487 = add i64 %482, -8
  %488 = lshr i64 %487, 3
  %489 = add nuw nsw i64 %488, 1
  %490 = and i64 %489, 7
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %507, label %492

492:                                              ; preds = %486, %492
  %493 = phi i32** [ %500, %492 ], [ %477, %486 ]
  %494 = phi i64 [ %501, %492 ], [ %478, %486 ]
  %495 = phi i32** [ %502, %492 ], [ %444, %486 ]
  %496 = phi i64 [ %503, %492 ], [ %490, %486 ]
  %497 = bitcast i32** %495 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = inttoptr i64 %494 to i64*
  store i64 %498, i64* %499, align 8
  %500 = getelementptr inbounds i32*, i32** %493, i64 1
  %501 = ptrtoint i32** %500 to i64
  %502 = getelementptr inbounds i32*, i32** %495, i64 1
  %503 = add i64 %496, -1
  %504 = icmp eq i64 %503, 0
  br i1 %504, label %505, label %492, !llvm.loop !247

505:                                              ; preds = %492
  %506 = ptrtoint i32** %500 to i64
  br label %507

507:                                              ; preds = %486, %505
  %508 = phi i32** [ %477, %486 ], [ %500, %505 ]
  %509 = phi i64 [ %478, %486 ], [ %506, %505 ]
  %510 = phi i32** [ %444, %486 ], [ %502, %505 ]
  %511 = icmp ult i64 %487, 56
  br i1 %511, label %558, label %512

512:                                              ; preds = %507, %512
  %513 = phi i32** [ %554, %512 ], [ %508, %507 ]
  %514 = phi i64 [ %555, %512 ], [ %509, %507 ]
  %515 = phi i32** [ %556, %512 ], [ %510, %507 ]
  %516 = bitcast i32** %515 to i64*
  %517 = load i64, i64* %516, align 8
  %518 = inttoptr i64 %514 to i64*
  store i64 %517, i64* %518, align 8
  %519 = getelementptr inbounds i32*, i32** %513, i64 1
  %520 = getelementptr inbounds i32*, i32** %515, i64 1
  %521 = bitcast i32** %520 to i64*
  %522 = load i64, i64* %521, align 8
  %523 = bitcast i32** %519 to i64*
  store i64 %522, i64* %523, align 8
  %524 = getelementptr inbounds i32*, i32** %513, i64 2
  %525 = getelementptr inbounds i32*, i32** %515, i64 2
  %526 = bitcast i32** %525 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = bitcast i32** %524 to i64*
  store i64 %527, i64* %528, align 8
  %529 = getelementptr inbounds i32*, i32** %513, i64 3
  %530 = getelementptr inbounds i32*, i32** %515, i64 3
  %531 = bitcast i32** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast i32** %529 to i64*
  store i64 %532, i64* %533, align 8
  %534 = getelementptr inbounds i32*, i32** %513, i64 4
  %535 = getelementptr inbounds i32*, i32** %515, i64 4
  %536 = bitcast i32** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast i32** %534 to i64*
  store i64 %537, i64* %538, align 8
  %539 = getelementptr inbounds i32*, i32** %513, i64 5
  %540 = getelementptr inbounds i32*, i32** %515, i64 5
  %541 = bitcast i32** %540 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast i32** %539 to i64*
  store i64 %542, i64* %543, align 8
  %544 = getelementptr inbounds i32*, i32** %513, i64 6
  %545 = getelementptr inbounds i32*, i32** %515, i64 6
  %546 = bitcast i32** %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = bitcast i32** %544 to i64*
  store i64 %547, i64* %548, align 8
  %549 = getelementptr inbounds i32*, i32** %513, i64 7
  %550 = getelementptr inbounds i32*, i32** %515, i64 7
  %551 = bitcast i32** %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = bitcast i32** %549 to i64*
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds i32*, i32** %513, i64 8
  %555 = ptrtoint i32** %554 to i64
  %556 = getelementptr inbounds i32*, i32** %515, i64 8
  %557 = icmp eq i32** %484, %554
  br i1 %557, label %558, label %512

558:                                              ; preds = %512, %507
  %559 = ptrtoint i32** %484 to i64
  %560 = load i32**, i32*** %394, align 16
  br label %561

561:                                              ; preds = %558, %471
  %562 = phi i32** [ %560, %558 ], [ %445, %471 ]
  %563 = phi i64 [ %559, %558 ], [ %478, %471 ]
  store i64 %476, i64* %420, align 16
  store i64 %478, i64* %421, align 8
  store i64 %563, i64* %422, align 16
  store i64 %480, i64* %419, align 8
  %564 = icmp eq i32** %562, null
  %565 = inttoptr i64 %563 to i64*
  br i1 %564, label %568, label %566

566:                                              ; preds = %561
  %567 = bitcast i32** %562 to i8*
  tail call void @_ZdlPv(i8* %567) #19
  br label %568

568:                                              ; preds = %434, %461, %561, %566
  %569 = phi i64* [ %565, %566 ], [ %565, %561 ], [ %463, %461 ], [ %442, %434 ]
  store i64 %439, i64* %569, align 8
  %570 = load i32**, i32*** %396, align 16
  %571 = getelementptr inbounds i32*, i32** %570, i64 1
  store i32** %571, i32*** %396, align 16
  %572 = add i64 %437, -1
  %573 = icmp eq i64 %572, 0
  br i1 %573, label %423, label %574

574:                                              ; preds = %568
  %575 = load i32**, i32*** %397, align 8
  br label %434

576:                                              ; preds = %427, %709
  %577 = phi i32** [ %571, %427 ], [ %713, %709 ]
  %578 = phi i64* [ %433, %427 ], [ %718, %709 ]
  %579 = phi i64 [ %23, %427 ], [ %716, %709 ]
  %580 = load i32**, i32*** %397, align 8
  %581 = icmp eq i32** %577, %580
  %582 = ptrtoint i32** %580 to i64
  %583 = bitcast i32** %577 to i64*
  br i1 %581, label %584, label %709

584:                                              ; preds = %576
  %585 = load i32**, i32*** %395, align 8
  %586 = load i32**, i32*** %394, align 16
  %587 = icmp ugt i32** %585, %586
  %588 = ptrtoint i32** %586 to i64
  br i1 %587, label %589, label %605

589:                                              ; preds = %584
  %590 = ptrtoint i32** %585 to i64
  %591 = sub i64 %590, %588
  %592 = ashr exact i64 %591, 3
  %593 = add nsw i64 %592, 1
  %594 = sdiv i64 %593, -2
  %595 = getelementptr inbounds i32*, i32** %585, i64 %594
  %596 = sub i64 %582, %590
  %597 = ashr exact i64 %596, 3
  %598 = icmp eq i64 %596, 0
  br i1 %598, label %602, label %599

599:                                              ; preds = %589
  %600 = bitcast i32** %595 to i8*
  %601 = bitcast i32** %585 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %600, i8* align 8 %601, i64 %596, i1 false) #18
  br label %602

602:                                              ; preds = %599, %589
  %603 = getelementptr inbounds i32*, i32** %595, i64 %597
  store i32** %603, i32*** %396, align 16
  store i32** %595, i32*** %395, align 8
  %604 = bitcast i32** %603 to i64*
  br label %709

605:                                              ; preds = %584
  %606 = sub i64 %582, %588
  %607 = ashr exact i64 %606, 2
  %608 = icmp eq i64 %606, 0
  %609 = select i1 %608, i64 1, i64 %607
  %610 = icmp ugt i64 %609, 2305843009213693951
  br i1 %610, label %611, label %612

611:                                              ; preds = %605
  tail call void @abort() #20
  unreachable

612:                                              ; preds = %605
  %613 = lshr i64 %609, 2
  %614 = shl i64 %609, 3
  %615 = tail call i8* @_Znwm(i64 %614) #19
  %616 = bitcast i8* %615 to i32**
  %617 = ptrtoint i8* %615 to i64
  %618 = getelementptr inbounds i32*, i32** %616, i64 %613
  %619 = ptrtoint i32** %618 to i64
  %620 = getelementptr inbounds i32*, i32** %616, i64 %609
  %621 = ptrtoint i32** %620 to i64
  %622 = ptrtoint i32** %585 to i64
  %623 = sub i64 %582, %622
  %624 = ashr exact i64 %623, 3
  %625 = getelementptr inbounds i32*, i32** %618, i64 %624
  %626 = icmp eq i64 %623, 0
  br i1 %626, label %702, label %627

627:                                              ; preds = %612
  %628 = add i64 %623, -8
  %629 = lshr i64 %628, 3
  %630 = add nuw nsw i64 %629, 1
  %631 = and i64 %630, 7
  %632 = icmp eq i64 %631, 0
  br i1 %632, label %648, label %633

633:                                              ; preds = %627, %633
  %634 = phi i32** [ %641, %633 ], [ %618, %627 ]
  %635 = phi i64 [ %642, %633 ], [ %619, %627 ]
  %636 = phi i32** [ %643, %633 ], [ %585, %627 ]
  %637 = phi i64 [ %644, %633 ], [ %631, %627 ]
  %638 = bitcast i32** %636 to i64*
  %639 = load i64, i64* %638, align 8
  %640 = inttoptr i64 %635 to i64*
  store i64 %639, i64* %640, align 8
  %641 = getelementptr inbounds i32*, i32** %634, i64 1
  %642 = ptrtoint i32** %641 to i64
  %643 = getelementptr inbounds i32*, i32** %636, i64 1
  %644 = add i64 %637, -1
  %645 = icmp eq i64 %644, 0
  br i1 %645, label %646, label %633, !llvm.loop !248

646:                                              ; preds = %633
  %647 = ptrtoint i32** %641 to i64
  br label %648

648:                                              ; preds = %627, %646
  %649 = phi i32** [ %618, %627 ], [ %641, %646 ]
  %650 = phi i64 [ %619, %627 ], [ %647, %646 ]
  %651 = phi i32** [ %585, %627 ], [ %643, %646 ]
  %652 = icmp ult i64 %628, 56
  br i1 %652, label %699, label %653

653:                                              ; preds = %648, %653
  %654 = phi i32** [ %695, %653 ], [ %649, %648 ]
  %655 = phi i64 [ %696, %653 ], [ %650, %648 ]
  %656 = phi i32** [ %697, %653 ], [ %651, %648 ]
  %657 = bitcast i32** %656 to i64*
  %658 = load i64, i64* %657, align 8
  %659 = inttoptr i64 %655 to i64*
  store i64 %658, i64* %659, align 8
  %660 = getelementptr inbounds i32*, i32** %654, i64 1
  %661 = getelementptr inbounds i32*, i32** %656, i64 1
  %662 = bitcast i32** %661 to i64*
  %663 = load i64, i64* %662, align 8
  %664 = bitcast i32** %660 to i64*
  store i64 %663, i64* %664, align 8
  %665 = getelementptr inbounds i32*, i32** %654, i64 2
  %666 = getelementptr inbounds i32*, i32** %656, i64 2
  %667 = bitcast i32** %666 to i64*
  %668 = load i64, i64* %667, align 8
  %669 = bitcast i32** %665 to i64*
  store i64 %668, i64* %669, align 8
  %670 = getelementptr inbounds i32*, i32** %654, i64 3
  %671 = getelementptr inbounds i32*, i32** %656, i64 3
  %672 = bitcast i32** %671 to i64*
  %673 = load i64, i64* %672, align 8
  %674 = bitcast i32** %670 to i64*
  store i64 %673, i64* %674, align 8
  %675 = getelementptr inbounds i32*, i32** %654, i64 4
  %676 = getelementptr inbounds i32*, i32** %656, i64 4
  %677 = bitcast i32** %676 to i64*
  %678 = load i64, i64* %677, align 8
  %679 = bitcast i32** %675 to i64*
  store i64 %678, i64* %679, align 8
  %680 = getelementptr inbounds i32*, i32** %654, i64 5
  %681 = getelementptr inbounds i32*, i32** %656, i64 5
  %682 = bitcast i32** %681 to i64*
  %683 = load i64, i64* %682, align 8
  %684 = bitcast i32** %680 to i64*
  store i64 %683, i64* %684, align 8
  %685 = getelementptr inbounds i32*, i32** %654, i64 6
  %686 = getelementptr inbounds i32*, i32** %656, i64 6
  %687 = bitcast i32** %686 to i64*
  %688 = load i64, i64* %687, align 8
  %689 = bitcast i32** %685 to i64*
  store i64 %688, i64* %689, align 8
  %690 = getelementptr inbounds i32*, i32** %654, i64 7
  %691 = getelementptr inbounds i32*, i32** %656, i64 7
  %692 = bitcast i32** %691 to i64*
  %693 = load i64, i64* %692, align 8
  %694 = bitcast i32** %690 to i64*
  store i64 %693, i64* %694, align 8
  %695 = getelementptr inbounds i32*, i32** %654, i64 8
  %696 = ptrtoint i32** %695 to i64
  %697 = getelementptr inbounds i32*, i32** %656, i64 8
  %698 = icmp eq i32** %625, %695
  br i1 %698, label %699, label %653

699:                                              ; preds = %653, %648
  %700 = ptrtoint i32** %625 to i64
  %701 = load i32**, i32*** %394, align 16
  br label %702

702:                                              ; preds = %699, %612
  %703 = phi i32** [ %701, %699 ], [ %586, %612 ]
  %704 = phi i64 [ %700, %699 ], [ %619, %612 ]
  store i64 %617, i64* %430, align 16
  store i64 %619, i64* %431, align 8
  store i64 %704, i64* %432, align 16
  store i64 %621, i64* %429, align 8
  %705 = icmp eq i32** %703, null
  %706 = inttoptr i64 %704 to i64*
  br i1 %705, label %709, label %707

707:                                              ; preds = %702
  %708 = bitcast i32** %703 to i8*
  tail call void @_ZdlPv(i8* %708) #19
  br label %709

709:                                              ; preds = %576, %602, %702, %707
  %710 = phi i64* [ %706, %707 ], [ %706, %702 ], [ %604, %602 ], [ %583, %576 ]
  %711 = load i64, i64* %578, align 8
  store i64 %711, i64* %710, align 8
  %712 = load i32**, i32*** %396, align 16
  %713 = getelementptr inbounds i32*, i32** %712, i64 1
  store i32** %713, i32*** %396, align 16
  %714 = load i32**, i32*** %9, align 8
  %715 = getelementptr inbounds i32*, i32** %714, i64 1
  store i32** %715, i32*** %9, align 8
  %716 = add i64 %579, -1
  %717 = icmp eq i64 %716, 0
  %718 = bitcast i32** %715 to i64*
  br i1 %717, label %719, label %576

719:                                              ; preds = %709, %425
  %720 = phi i32** [ %571, %425 ], [ %713, %709 ]
  %721 = phi i32** [ %426, %425 ], [ %715, %709 ]
  %722 = load i32**, i32*** %7, align 8
  %723 = icmp eq i32** %722, %721
  br i1 %723, label %724, label %763

724:                                              ; preds = %719
  %725 = ptrtoint i32** %722 to i64
  %726 = ptrtoint i32** %720 to i64
  %727 = bitcast i32*** %396 to i64*
  br label %732

728:                                              ; preds = %763
  %729 = load i64, i64* %195, align 8
  %730 = bitcast i32*** %396 to i64*
  %731 = load i64, i64* %730, align 16
  br label %732

732:                                              ; preds = %724, %728
  %733 = phi i64* [ %727, %724 ], [ %730, %728 ]
  %734 = phi i64 [ %726, %724 ], [ %731, %728 ]
  %735 = phi i64 [ %725, %724 ], [ %729, %728 ]
  %736 = phi i32** [ %721, %724 ], [ %766, %728 ]
  %737 = ptrtoint i32** %736 to i64
  %738 = load i64, i64* %191, align 8
  %739 = bitcast %"struct.std::__1::__split_buffer.793"* %5 to i64*
  %740 = bitcast i32*** %395 to i64*
  %741 = bitcast %"struct.std::__1::__split_buffer.793"* %5 to <2 x i64>*
  %742 = load <2 x i64>, <2 x i64>* %741, align 16
  store i64 %738, i64* %739, align 16
  %743 = bitcast %"class.std::__1::deque"* %0 to <2 x i64>*
  store <2 x i64> %742, <2 x i64>* %743, align 8
  store i64 %737, i64* %740, align 8
  store i64 %734, i64* %195, align 8
  store i64 %735, i64* %733, align 8
  %744 = load i64, i64* %189, align 8
  %745 = bitcast i32*** %397 to i64*
  %746 = load i64, i64* %745, align 8
  store i64 %746, i64* %189, align 8
  store i64 %744, i64* %745, align 8
  %747 = load i64, i64* %19, align 8
  %748 = sub i64 %747, %392
  store i64 %748, i64* %19, align 8
  %749 = inttoptr i64 %735 to i32**
  %750 = icmp eq i32** %736, %749
  br i1 %750, label %758, label %751

751:                                              ; preds = %732
  %752 = getelementptr i32*, i32** %749, i64 -1
  %753 = ptrtoint i32** %752 to i64
  %754 = sub i64 %753, %737
  %755 = lshr i64 %754, 3
  %756 = xor i64 %755, -1
  %757 = getelementptr i32*, i32** %749, i64 %756
  store i32** %757, i32*** %396, align 16
  br label %758

758:                                              ; preds = %751, %732
  %759 = icmp eq i64 %738, 0
  br i1 %759, label %762, label %760

760:                                              ; preds = %758
  %761 = inttoptr i64 %738 to i8*
  call void @_ZdlPv(i8* %761) #19
  br label %762

762:                                              ; preds = %758, %760
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %393) #18
  br label %768

763:                                              ; preds = %719, %763
  %764 = phi i32** [ %765, %763 ], [ %722, %719 ]
  %765 = getelementptr inbounds i32*, i32** %764, i64 -1
  call void @_ZNSt3__114__split_bufferIPN3net19HostResolverManager8TaskTypeERNS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer.793"* nonnull %5, i32** dereferenceable(8) %765)
  %766 = load i32**, i32*** %9, align 8
  %767 = icmp eq i32** %765, %766
  br i1 %767, label %728, label %763

768:                                              ; preds = %385, %178, %236, %27, %762
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3net19HostResolverManager8TaskTypeENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  %9 = bitcast i32** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load i32**, i32*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load i32**, i32*** %13, align 8
  %15 = icmp ugt i32** %12, %14
  %16 = ptrtoint i32** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint i32** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32*, i32** %12, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast i32** %23 to i8*
  %30 = bitcast i32** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #18
  %31 = load i32**, i32*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi i32** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds i32*, i32** %23, i64 %26
  store i32** %34, i32*** %3, align 8
  %35 = getelementptr inbounds i32*, i32** %33, i64 %22
  store i32** %35, i32*** %11, align 8
  %36 = bitcast i32** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast i32*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #20
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #19
  %50 = bitcast i8* %49 to i32**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds i32*, i32** %50, i64 %47
  %53 = ptrtoint i32** %52 to i64
  %54 = getelementptr inbounds i32*, i32** %50, i64 %43
  %55 = ptrtoint i32** %54 to i64
  %56 = ptrtoint i32** %12 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds i32*, i32** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi i32** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi i32** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast i32** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds i32*, i32** %69, i64 1
  %77 = ptrtoint i32** %76 to i64
  %78 = getelementptr inbounds i32*, i32** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !249

81:                                               ; preds = %68
  %82 = ptrtoint i32** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi i32** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi i32** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi i32** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi i32** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast i32** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds i32*, i32** %89, i64 1
  %96 = getelementptr inbounds i32*, i32** %91, i64 1
  %97 = bitcast i32** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast i32** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds i32*, i32** %89, i64 2
  %101 = getelementptr inbounds i32*, i32** %91, i64 2
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast i32** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %89, i64 3
  %106 = getelementptr inbounds i32*, i32** %91, i64 3
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %89, i64 4
  %111 = getelementptr inbounds i32*, i32** %91, i64 4
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %89, i64 5
  %116 = getelementptr inbounds i32*, i32** %91, i64 5
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %89, i64 6
  %121 = getelementptr inbounds i32*, i32** %91, i64 6
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %89, i64 7
  %126 = getelementptr inbounds i32*, i32** %91, i64 7
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %89, i64 8
  %131 = ptrtoint i32** %130 to i64
  %132 = getelementptr inbounds i32*, i32** %91, i64 8
  %133 = icmp eq i32** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint i32** %60 to i64
  %136 = load i32**, i32*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi i32** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast i32*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq i32** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast i32** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #19
  %146 = bitcast i32*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load i32**, i32*** %3, align 8
  %153 = getelementptr inbounds i32*, i32** %152, i64 1
  store i32** %153, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3net19HostResolverManager8TaskTypeENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #18
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #20
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #19
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !250

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #19
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3net19HostResolverManager8TaskTypeERNS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer.793"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.793", %"struct.std::__1::__split_buffer.793"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.793", %"struct.std::__1::__split_buffer.793"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.793", %"struct.std::__1::__split_buffer.793"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.793", %"struct.std::__1::__split_buffer.793"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #18
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.793"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #20
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #19
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !251

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #19
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3net16NetLogWithSource8AddEntryIZNS_19HostResolverManager3JobC1ERKN4base7WeakPtrIS2_EENS4_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_19NetworkIsolationKeyENS_12DnsQueryTypeEiNS_18HostResolverSourceENS_12HostResolver21ResolveHostParameters10CacheUsageENS_13SecureDnsModeEPNS_14ResolveContextEPNS_9HostCacheENSA_5dequeINS2_8TaskTypeENSA_9allocatorISS_EEEENS_15RequestPriorityE13scoped_refptrINS4_10TaskRunnerEERKS0_PKNS4_9TickClockEEUlvE_EEvNS_15NetLogEventTypeENS_16NetLogEventPhaseERKT_(%"class.net::NetLogWithSource"*, i32, i32, %class.anon.792* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.base::Value", align 8
  %6 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 1
  %7 = load %"class.net::NetLog"*, %"class.net::NetLog"** %6, align 8
  %8 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %7, i64 0, i32 3
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %33, label %11, !prof !41

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 0
  %13 = bitcast %"class.base::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #18
  %14 = getelementptr inbounds %class.anon.792, %class.anon.792* %3, i64 0, i32 1
  %15 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %14, align 8, !noalias !252
  %16 = getelementptr inbounds %class.anon.792, %class.anon.792* %3, i64 0, i32 0
  %17 = load %"class.net::NetLogWithSource"*, %"class.net::NetLogWithSource"** %16, align 8, !noalias !252
  %18 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %17, i64 0, i32 0
  %19 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %15, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false) #18, !alias.scope !255
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %5, i8 zeroext 6) #18
  call void @_ZNK3net12NetLogSource20AddToEventParametersEPN4base5ValueE(%"struct.net::NetLogSource"* %18, %"class.base::Value"* nonnull %5) #18
  %20 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1, !noalias !258
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !noalias !258
  %26 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  %28 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %15, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8, !noalias !258
  %30 = zext i8 %22 to i64
  %31 = select i1 %23, i64 %29, i64 %30
  %32 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i64 0, i64 0), i64 4, i8* %27, i64 %31) #18
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %7, i32 %1, %"struct.net::NetLogSource"* dereferenceable(16) %12, i32 %2, %"class.base::Value"* nonnull dereferenceable(32) %5) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #18
  br label %33

33:                                               ; preds = %4, %11
  ret void
}

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"*, i8*, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19HostResolverManager3Job16OnDnsTaskFailureERKN4base7WeakPtrINS0_7DnsTaskEEENS2_9TimeDeltaERKNS_9HostCache5EntryEb(%"class.net::HostResolverManager::Job"*, %"class.base::WeakPtr.663"* dereferenceable(16), i64, %"class.net::HostCache::Entry"* dereferenceable(200), i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.base::TimeDelta", align 8
  %7 = alloca %"struct.net::HostResolverManager::Job::CompletionResult", align 8
  %8 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %6, i64 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = zext i1 %4 to i8
  %10 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 9
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %27 [
    i32 2, label %12
    i32 1, label %19
  ]

12:                                               ; preds = %5
  %13 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager3Job16OnDnsTaskFailureERKN4base7WeakPtrINS0_7DnsTaskEEENS2_9TimeDeltaERKNS_9HostCache5EntryEbE24atomic_histogram_pointer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %14 = inttoptr i64 %13 to %"class.base::HistogramBase"*
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %16, label %34

16:                                               ; preds = %12
  %17 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.65, i64 0, i64 0), i64 1000, i64 3600000000, i32 100, i32 1) #18
  %18 = ptrtoint %"class.base::HistogramBase"* %17 to i64
  store atomic i64 %18, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager3Job16OnDnsTaskFailureERKN4base7WeakPtrINS0_7DnsTaskEEENS2_9TimeDeltaERKNS_9HostCache5EntryEbE24atomic_histogram_pointer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 8
  br label %34

19:                                               ; preds = %5
  br i1 %4, label %20, label %27

20:                                               ; preds = %19
  %21 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager3Job16OnDnsTaskFailureERKN4base7WeakPtrINS0_7DnsTaskEEENS2_9TimeDeltaERKNS_9HostCache5EntryEbE24atomic_histogram_pointer_0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %22 = inttoptr i64 %21 to %"class.base::HistogramBase"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %20
  %25 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.66, i64 0, i64 0), i64 1000, i64 3600000000, i32 100, i32 1) #18
  %26 = ptrtoint %"class.base::HistogramBase"* %25 to i64
  store atomic i64 %26, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager3Job16OnDnsTaskFailureERKN4base7WeakPtrINS0_7DnsTaskEEENS2_9TimeDeltaERKNS_9HostCache5EntryEbE24atomic_histogram_pointer_0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 8
  br label %34

27:                                               ; preds = %5, %19
  %28 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager3Job16OnDnsTaskFailureERKN4base7WeakPtrINS0_7DnsTaskEEENS2_9TimeDeltaERKNS_9HostCache5EntryEbE24atomic_histogram_pointer_1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %29 = inttoptr i64 %28 to %"class.base::HistogramBase"*
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.67, i64 0, i64 0), i64 1000, i64 3600000000, i32 100, i32 1) #18
  %33 = ptrtoint %"class.base::HistogramBase"* %32 to i64
  store atomic i64 %33, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager3Job16OnDnsTaskFailureERKN4base7WeakPtrINS0_7DnsTaskEEENS2_9TimeDeltaERKNS_9HostCache5EntryEbE24atomic_histogram_pointer_1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 8
  br label %34

34:                                               ; preds = %31, %27, %24, %20, %16, %12
  %35 = phi %"class.base::HistogramBase"* [ %14, %12 ], [ %17, %16 ], [ %22, %20 ], [ %25, %24 ], [ %29, %27 ], [ %32, %31 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %35, %"class.base::TimeDelta"* nonnull dereferenceable(8) %6) #18
  %36 = getelementptr inbounds %"class.base::WeakPtr.663", %"class.base::WeakPtr.663"* %1, i64 0, i32 0, i32 0
  %37 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %36) #18
  br i1 %37, label %38, label %81

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.base::WeakPtr.663", %"class.base::WeakPtr.663"* %1, i64 0, i32 0, i32 1
  %40 = bitcast i64* %39 to %"class.net::HostResolverManager::DnsTask"**
  %41 = load %"class.net::HostResolverManager::DnsTask"*, %"class.net::HostResolverManager::DnsTask"** %40, align 8
  %42 = icmp eq %"class.net::HostResolverManager::DnsTask"* %41, null
  br i1 %42, label %81, label %43

43:                                               ; preds = %38
  %44 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager3Job16OnDnsTaskFailureERKN4base7WeakPtrINS0_7DnsTaskEEENS2_9TimeDeltaERKNS_9HostCache5EntryEbE24atomic_histogram_pointer_2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %45 = inttoptr i64 %44 to %"class.base::HistogramBase"*
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %43
  %48 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.68, i64 0, i64 0), i64 1000, i64 3600000000, i32 100, i32 1) #18
  %49 = ptrtoint %"class.base::HistogramBase"* %48 to i64
  store atomic i64 %49, i64* getelementptr inbounds (%"struct.std::__1::atomic.531", %"struct.std::__1::atomic.531"* @_ZZN3net19HostResolverManager3Job16OnDnsTaskFailureERKN4base7WeakPtrINS0_7DnsTaskEEENS2_9TimeDeltaERKNS_9HostCache5EntryEbE24atomic_histogram_pointer_2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 8
  br label %50

50:                                               ; preds = %43, %47
  %51 = phi %"class.base::HistogramBase"* [ %45, %43 ], [ %48, %47 ]
  %52 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 30
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %51, %"class.base::TimeDelta"* dereferenceable(8) %52) #18
  %53 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %3, i64 0, i32 9, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = icmp sgt i64 %54, 0
  %56 = select i1 %55, i64 %54, i64 0
  %57 = bitcast %"struct.net::HostResolverManager::Job::CompletionResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %57) #18
  %58 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %7, i64 0, i32 0
  call void @_ZN3net9HostCache5EntryC1ERKS1_(%"class.net::HostCache::Entry"* nonnull %58, %"class.net::HostCache::Entry"* dereferenceable(200) %3) #18
  %59 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %7, i64 0, i32 1, i32 0
  store i64 %56, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %7, i64 0, i32 2
  store i8 %9, i8* %60, align 8
  %61 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 12, i32 0, i32 1
  %62 = load %"struct.net::HostResolverManager::Job::CompletionResult"*, %"struct.net::HostResolverManager::Job::CompletionResult"** %61, align 8
  %63 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %64 = load %"struct.net::HostResolverManager::Job::CompletionResult"*, %"struct.net::HostResolverManager::Job::CompletionResult"** %63, align 8
  %65 = icmp ult %"struct.net::HostResolverManager::Job::CompletionResult"* %62, %64
  br i1 %65, label %66, label %75

66:                                               ; preds = %50
  %67 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %62, i64 0, i32 0
  call void @_ZN3net9HostCache5EntryC1ERKS1_(%"class.net::HostCache::Entry"* %67, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %58) #18
  %68 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %62, i64 0, i32 1
  %69 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %7, i64 0, i32 1
  %70 = bitcast %"class.base::TimeDelta"* %68 to i8*
  %71 = bitcast %"class.base::TimeDelta"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 9, i1 false) #18
  %72 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %62, i64 1
  %73 = ptrtoint %"struct.net::HostResolverManager::Job::CompletionResult"* %72 to i64
  %74 = bitcast %"struct.net::HostResolverManager::Job::CompletionResult"** %61 to i64*
  store i64 %73, i64* %74, align 8
  br label %77

75:                                               ; preds = %50
  %76 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 12
  call void @_ZNSt3__16vectorIN3net19HostResolverManager3Job16CompletionResultENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.231"* %76, %"struct.net::HostResolverManager::Job::CompletionResult"* nonnull dereferenceable(216) %7) #18
  br label %77

77:                                               ; preds = %66, %75
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %58) #18
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %57) #18
  %78 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %3, i64 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"class.net::HostResolverManager::Job", %"class.net::HostResolverManager::Job"* %0, i64 0, i32 20
  store i32 %79, i32* %80, align 8
  call void @_ZN3net19HostResolverManager3Job11KillDnsTaskEv(%"class.net::HostResolverManager::Job"* %0)
  call void @_ZN3net19HostResolverManager3Job11RunNextTaskEv(%"class.net::HostResolverManager::Job"* %0)
  br label %81

81:                                               ; preds = %38, %34, %77
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net19HostResolverManager3Job16CompletionResultENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.231"*, %"struct.net::HostResolverManager::Job::CompletionResult"* dereferenceable(216)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.231", %"class.std::__1::vector.231"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.net::HostResolverManager::Job::CompletionResult"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.231"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 216
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 85401592933840516
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.231"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.231", %"class.std::__1::vector.231"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.net::HostResolverManager::Job::CompletionResult"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 216
  %20 = icmp ult i64 %19, 42700796466920258
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 85401592933840516, %14 ]
  %28 = mul i64 %27, 216
  %29 = tail call i8* @_Znwm(i64 %28) #19
  %30 = bitcast i8* %29 to %"struct.net::HostResolverManager::Job::CompletionResult"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.net::HostResolverManager::Job::CompletionResult"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %33, i64 %32
  %36 = ptrtoint %"struct.net::HostResolverManager::Job::CompletionResult"* %35 to i64
  %37 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %1, i64 0, i32 0
  tail call void @_ZN3net9HostCache5EntryC1ERKS1_(%"class.net::HostCache::Entry"* %37, %"class.net::HostCache::Entry"* dereferenceable(200) %38) #18
  %39 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %33, i64 %9, i32 1
  %40 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %1, i64 0, i32 1
  %41 = bitcast %"class.base::TimeDelta"* %39 to i8*
  %42 = bitcast %"class.base::TimeDelta"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 9, i1 false) #18
  %43 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %34, i64 1
  %44 = ptrtoint %"struct.net::HostResolverManager::Job::CompletionResult"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector.231", %"class.std::__1::vector.231"* %0, i64 0, i32 0, i32 0
  %46 = load %"struct.net::HostResolverManager::Job::CompletionResult"*, %"struct.net::HostResolverManager::Job::CompletionResult"** %45, align 8
  %47 = load %"struct.net::HostResolverManager::Job::CompletionResult"*, %"struct.net::HostResolverManager::Job::CompletionResult"** %3, align 8
  %48 = icmp eq %"struct.net::HostResolverManager::Job::CompletionResult"* %47, %46
  br i1 %48, label %49, label %51

49:                                               ; preds = %31
  %50 = ptrtoint %"struct.net::HostResolverManager::Job::CompletionResult"* %46 to i64
  br label %66

51:                                               ; preds = %31, %51
  %52 = phi %"struct.net::HostResolverManager::Job::CompletionResult"* [ %61, %51 ], [ %34, %31 ]
  %53 = phi %"struct.net::HostResolverManager::Job::CompletionResult"* [ %54, %51 ], [ %47, %31 ]
  %54 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %53, i64 -1
  %55 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %52, i64 -1, i32 0
  %56 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %54, i64 0, i32 0
  tail call void @_ZN3net9HostCache5EntryC1ERKS1_(%"class.net::HostCache::Entry"* %55, %"class.net::HostCache::Entry"* dereferenceable(200) %56) #18
  %57 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %52, i64 -1, i32 1
  %58 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %53, i64 -1, i32 1
  %59 = bitcast %"class.base::TimeDelta"* %57 to i8*
  %60 = bitcast %"class.base::TimeDelta"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 9, i1 false) #18
  %61 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %52, i64 -1
  %62 = icmp eq %"struct.net::HostResolverManager::Job::CompletionResult"* %54, %46
  br i1 %62, label %63, label %51

63:                                               ; preds = %51
  %64 = load i64, i64* %6, align 8
  %65 = load %"struct.net::HostResolverManager::Job::CompletionResult"*, %"struct.net::HostResolverManager::Job::CompletionResult"** %3, align 8
  br label %66

66:                                               ; preds = %49, %63
  %67 = phi %"struct.net::HostResolverManager::Job::CompletionResult"* [ %46, %49 ], [ %65, %63 ]
  %68 = phi %"struct.net::HostResolverManager::Job::CompletionResult"* [ %34, %49 ], [ %61, %63 ]
  %69 = phi i64 [ %50, %49 ], [ %64, %63 ]
  %70 = ptrtoint %"struct.net::HostResolverManager::Job::CompletionResult"* %68 to i64
  store i64 %70, i64* %6, align 8
  store i64 %44, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %71 = inttoptr i64 %69 to %"struct.net::HostResolverManager::Job::CompletionResult"*
  %72 = icmp eq %"struct.net::HostResolverManager::Job::CompletionResult"* %67, %71
  br i1 %72, label %78, label %73

73:                                               ; preds = %66, %73
  %74 = phi %"struct.net::HostResolverManager::Job::CompletionResult"* [ %75, %73 ], [ %67, %66 ]
  %75 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %74, i64 -1
  %76 = getelementptr inbounds %"struct.net::HostResolverManager::Job::CompletionResult", %"struct.net::HostResolverManager::Job::CompletionResult"* %75, i64 0, i32 0
  tail call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* %76) #18
  %77 = icmp eq %"struct.net::HostResolverManager::Job::CompletionResult"* %75, %71
  br i1 %77, label %78, label %73

78:                                               ; preds = %73, %66
  %79 = icmp eq i64 %69, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = inttoptr i64 %69 to i8*
  tail call void @_ZdlPv(i8* %81) #19
  br label %82

82:                                               ; preds = %78, %80
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net19HostResolverManager6JobKeyENS_10unique_ptrINS3_3JobENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS4_JS4_S9_EEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"struct.net::HostResolverManager::JobKey"* dereferenceable(232), %"struct.net::HostResolverManager::JobKey"* dereferenceable(232), %"class.std::__1::unique_ptr.460"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %36, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %32, %9
  %12 = phi %"class.std::__1::__tree_node"* [ %35, %32 ], [ %7, %9 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %34, %32 ], [ %10, %9 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0
  %15 = tail call zeroext i1 @_ZNK3net19HostResolverManager6JobKeyltERKS1_(%"struct.net::HostResolverManager::JobKey"* %1, %"struct.net::HostResolverManager::JobKey"* dereferenceable(232) %14) #18
  br i1 %15, label %16, label %22

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %19, label %20, label %32

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %38

22:                                               ; preds = %11
  %23 = tail call zeroext i1 @_ZNK3net19HostResolverManager6JobKeyltERKS1_(%"struct.net::HostResolverManager::JobKey"* %14, %"struct.net::HostResolverManager::JobKey"* dereferenceable(232) %1) #18
  br i1 %23, label %24, label %30

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %38

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %38

32:                                               ; preds = %24, %16
  %33 = phi %"class.std::__1::__tree_node_base"* [ %18, %16 ], [ %26, %24 ]
  %34 = phi %"class.std::__1::__tree_node_base"** [ %17, %16 ], [ %25, %24 ]
  %35 = bitcast %"class.std::__1::__tree_node_base"* %33 to %"class.std::__1::__tree_node"*
  br label %11

36:                                               ; preds = %4
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 0, i32 0
  br label %38

38:                                               ; preds = %20, %28, %30, %36
  %39 = phi %"class.std::__1::__tree_end_node"* [ %5, %36 ], [ %21, %20 ], [ %29, %28 ], [ %31, %30 ]
  %40 = phi %"class.std::__1::__tree_node_base"** [ %37, %36 ], [ %17, %20 ], [ %25, %28 ], [ %13, %30 ]
  %41 = bitcast %"class.std::__1::__tree_node_base"** %40 to %"class.std::__1::__tree_node"**
  %42 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node"* %42, null
  br i1 %43, label %44, label %80

44:                                               ; preds = %38
  %45 = tail call i8* @_Znwm(i64 272) #19, !noalias !259
  %46 = getelementptr inbounds i8, i8* %45, i64 32
  %47 = bitcast %"struct.net::HostResolverManager::JobKey"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false) #18, !noalias !259
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #18, !noalias !259
  %48 = getelementptr inbounds i8, i8* %45, i64 56
  %49 = bitcast i8* %48 to %"class.net::NetworkIsolationKey"*
  %50 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %2, i64 0, i32 1
  tail call void @_ZN3net19NetworkIsolationKeyC1EOS0_(%"class.net::NetworkIsolationKey"* %49, %"class.net::NetworkIsolationKey"* dereferenceable(184) %50) #18, !noalias !259
  %51 = getelementptr inbounds i8, i8* %45, i64 240
  %52 = getelementptr inbounds %"struct.net::HostResolverManager::JobKey", %"struct.net::HostResolverManager::JobKey"* %2, i64 0, i32 2
  %53 = bitcast i32* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %53, i64 24, i1 false) #18, !noalias !259
  %54 = getelementptr inbounds i8, i8* %45, i64 264
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %3, i64 0, i32 0, i32 0, i32 0
  %56 = bitcast %"class.std::__1::unique_ptr.460"* %3 to i64*
  %57 = load i64, i64* %56, align 8, !noalias !259
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %55, align 8, !noalias !259
  %58 = bitcast i8* %54 to i64*
  store i64 %57, i64* %58, align 8, !noalias !259
  %59 = bitcast i8* %45 to %"class.std::__1::__tree_node"*
  %60 = bitcast i8* %45 to %"class.std::__1::__tree_node_base"*
  %61 = getelementptr inbounds i8, i8* %45, i64 16
  %62 = bitcast i8* %61 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 16, i1 false) #18
  store %"class.std::__1::__tree_end_node"* %39, %"class.std::__1::__tree_end_node"** %62, align 8
  %63 = bitcast %"class.std::__1::__tree_node_base"** %40 to i8**
  store i8* %45, i8** %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %65 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %65, i64 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %44
  %70 = ptrtoint %"class.std::__1::__tree_node_base"* %67 to i64
  %71 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %70, i64* %71, align 8
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  br label %73

73:                                               ; preds = %69, %44
  %74 = phi %"class.std::__1::__tree_node_base"* [ %60, %44 ], [ %72, %69 ]
  %75 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"* %74) #18
  %77 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, 1
  store i64 %79, i64* %77, align 8
  br label %80

80:                                               ; preds = %73, %38
  %81 = phi i8 [ 1, %73 ], [ 0, %38 ]
  %82 = phi %"class.std::__1::__tree_node"* [ %59, %73 ], [ %42, %38 ]
  %83 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %82, i64 0, i32 0, i32 0
  %84 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %83, 0
  %85 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %84, i8 %81, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %85
}

declare void @_ZN3net19NetworkIsolationKeyC1EOS0_(%"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE4findISB_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISD_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"struct.std::__1::pair.469"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.std::__1::pair.469"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"struct.std::__1::pair.469", %"struct.std::__1::pair.469"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"struct.std::__1::pair.469"* %1 to i8*
  %10 = select i1 %6, i8* %8, i8* %9
  %11 = getelementptr inbounds %"struct.std::__1::pair.469", %"struct.std::__1::pair.469"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %5 to i64
  %14 = select i1 %6, i64 %12, i64 %13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %84, label %16

16:                                               ; preds = %2
  %17 = add i64 %14, -1
  %18 = and i64 %14, 7
  %19 = icmp ult i64 %17, 7
  br i1 %19, label %68, label %20

20:                                               ; preds = %16
  %21 = sub i64 %14, %18
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i64 [ 0, %20 ], [ %64, %22 ]
  %24 = phi i8* [ %10, %20 ], [ %65, %22 ]
  %25 = phi i64 [ %21, %20 ], [ %66, %22 ]
  %26 = load i8, i8* %24, align 1
  %27 = mul i64 %23, 131
  %28 = sext i8 %26 to i64
  %29 = add i64 %27, %28
  %30 = getelementptr inbounds i8, i8* %24, i64 1
  %31 = load i8, i8* %30, align 1
  %32 = mul i64 %29, 131
  %33 = sext i8 %31 to i64
  %34 = add i64 %32, %33
  %35 = getelementptr inbounds i8, i8* %24, i64 2
  %36 = load i8, i8* %35, align 1
  %37 = mul i64 %34, 131
  %38 = sext i8 %36 to i64
  %39 = add i64 %37, %38
  %40 = getelementptr inbounds i8, i8* %24, i64 3
  %41 = load i8, i8* %40, align 1
  %42 = mul i64 %39, 131
  %43 = sext i8 %41 to i64
  %44 = add i64 %42, %43
  %45 = getelementptr inbounds i8, i8* %24, i64 4
  %46 = load i8, i8* %45, align 1
  %47 = mul i64 %44, 131
  %48 = sext i8 %46 to i64
  %49 = add i64 %47, %48
  %50 = getelementptr inbounds i8, i8* %24, i64 5
  %51 = load i8, i8* %50, align 1
  %52 = mul i64 %49, 131
  %53 = sext i8 %51 to i64
  %54 = add i64 %52, %53
  %55 = getelementptr inbounds i8, i8* %24, i64 6
  %56 = load i8, i8* %55, align 1
  %57 = mul i64 %54, 131
  %58 = sext i8 %56 to i64
  %59 = add i64 %57, %58
  %60 = getelementptr inbounds i8, i8* %24, i64 7
  %61 = load i8, i8* %60, align 1
  %62 = mul i64 %59, 131
  %63 = sext i8 %61 to i64
  %64 = add i64 %62, %63
  %65 = getelementptr inbounds i8, i8* %24, i64 8
  %66 = add i64 %25, -8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %22

68:                                               ; preds = %22, %16
  %69 = phi i64 [ undef, %16 ], [ %64, %22 ]
  %70 = phi i64 [ 0, %16 ], [ %64, %22 ]
  %71 = phi i8* [ %10, %16 ], [ %65, %22 ]
  %72 = icmp eq i64 %18, 0
  br i1 %72, label %84, label %73

73:                                               ; preds = %68, %73
  %74 = phi i64 [ %80, %73 ], [ %70, %68 ]
  %75 = phi i8* [ %81, %73 ], [ %71, %68 ]
  %76 = phi i64 [ %82, %73 ], [ %18, %68 ]
  %77 = load i8, i8* %75, align 1
  %78 = mul i64 %74, 131
  %79 = sext i8 %77 to i64
  %80 = add i64 %78, %79
  %81 = getelementptr inbounds i8, i8* %75, i64 1
  %82 = add i64 %76, -1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %73, !llvm.loop !262

84:                                               ; preds = %68, %73, %2
  %85 = phi i64 [ 0, %2 ], [ %69, %68 ], [ %80, %73 ]
  %86 = getelementptr inbounds %"struct.std::__1::pair.469", %"struct.std::__1::pair.469"* %1, i64 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = zext i32 %87 to i64
  %89 = add i64 %85, %88
  %90 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %180, label %93

93:                                               ; preds = %84
  %94 = tail call i64 @llvm.ctpop.i64(i64 %91) #18, !range !263
  %95 = icmp ugt i64 %94, 1
  br i1 %95, label %99, label %96

96:                                               ; preds = %93
  %97 = add i64 %91, -1
  %98 = and i64 %97, %89
  br label %103

99:                                               ; preds = %93
  %100 = icmp ult i64 %89, %91
  br i1 %100, label %103, label %101

101:                                              ; preds = %99
  %102 = urem i64 %89, %91
  br label %103

103:                                              ; preds = %96, %99, %101
  %104 = phi i64 [ %98, %96 ], [ %102, %101 ], [ %89, %99 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base"* %108, null
  br i1 %109, label %180, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %108, i64 0, i32 0
  %112 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %111, align 8
  %113 = icmp eq %"struct.std::__1::__hash_node_base"* %112, null
  br i1 %113, label %180, label %114

114:                                              ; preds = %110
  %115 = add i64 %91, -1
  br label %116

116:                                              ; preds = %114, %176
  %117 = phi %"struct.std::__1::__hash_node_base"* [ %112, %114 ], [ %178, %176 ]
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = icmp eq i64 %89, %120
  br i1 %121, label %132, label %122

122:                                              ; preds = %116
  br i1 %95, label %125, label %123

123:                                              ; preds = %122
  %124 = and i64 %120, %115
  br label %129

125:                                              ; preds = %122
  %126 = icmp ult i64 %120, %91
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %120, %91
  br label %129

129:                                              ; preds = %123, %125, %127
  %130 = phi i64 [ %124, %123 ], [ %128, %127 ], [ %120, %125 ]
  %131 = icmp eq i64 %130, %104
  br i1 %131, label %176, label %180

132:                                              ; preds = %116
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 2
  %134 = bitcast %"struct.std::__1::__hash_node_base"* %133 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 3
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = zext i8 %136 to i64
  %142 = select i1 %137, i64 %140, i64 %141
  %143 = icmp eq i64 %142, %14
  br i1 %143, label %144, label %176

144:                                              ; preds = %132
  %145 = bitcast %"struct.std::__1::__hash_node_base"* %133 to i8**
  %146 = load i8*, i8** %145, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %133 to i8*
  %148 = select i1 %137, i8* %146, i8* %147
  br i1 %137, label %155, label %149

149:                                              ; preds = %144
  br i1 %15, label %171, label %150

150:                                              ; preds = %149
  %151 = ptrtoint i8* %146 to i64
  %152 = trunc i64 %151 to i8
  %153 = load i8, i8* %10, align 1
  %154 = icmp eq i8 %153, %152
  br i1 %154, label %156, label %176

155:                                              ; preds = %144
  br i1 %15, label %171, label %168

156:                                              ; preds = %150, %163
  %157 = phi i64 [ %160, %163 ], [ %141, %150 ]
  %158 = phi i8* [ %161, %163 ], [ %147, %150 ]
  %159 = phi i8* [ %164, %163 ], [ %10, %150 ]
  %160 = add i64 %157, -1
  %161 = getelementptr inbounds i8, i8* %158, i64 1
  %162 = icmp eq i64 %160, 0
  br i1 %162, label %171, label %163

163:                                              ; preds = %156
  %164 = getelementptr inbounds i8, i8* %159, i64 1
  %165 = load i8, i8* %161, align 1
  %166 = load i8, i8* %164, align 1
  %167 = icmp eq i8 %165, %166
  br i1 %167, label %156, label %176

168:                                              ; preds = %155
  %169 = tail call i32 @bcmp(i8* %148, i8* %10, i64 %14) #18
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %176

171:                                              ; preds = %156, %149, %155, %168
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 5
  %173 = bitcast %"struct.std::__1::__hash_node_base"* %172 to i32*
  %174 = load i32, i32* %173, align 8
  %175 = icmp eq i32 %174, %87
  br i1 %175, label %180, label %176

176:                                              ; preds = %163, %150, %132, %168, %129, %171
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 0, i32 0
  %178 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, align 8
  %179 = icmp eq %"struct.std::__1::__hash_node_base"* %178, null
  br i1 %179, label %180, label %116

180:                                              ; preds = %171, %176, %129, %110, %84, %103
  %181 = phi %"struct.std::__1::__hash_node_base"* [ null, %103 ], [ null, %84 ], [ null, %110 ], [ %117, %171 ], [ null, %176 ], [ null, %129 ]
  ret %"struct.std::__1::__hash_node_base"* %181
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net19HostResolverManager6JobKeyENS_10unique_ptrINS3_3JobENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS_9allocatorISA_EEE5eraseENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #18
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 33
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.net::HostResolverManager::Job"**
  %48 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %47, align 8
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %47, align 8
  %49 = icmp eq %"class.net::HostResolverManager::Job"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %38
  %51 = bitcast %"class.net::HostResolverManager::Job"* %48 to void (%"class.net::HostResolverManager::Job"*)***
  %52 = load void (%"class.net::HostResolverManager::Job"*)**, void (%"class.net::HostResolverManager::Job"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.net::HostResolverManager::Job"*)*, void (%"class.net::HostResolverManager::Job"*)** %52, i64 1
  %54 = load void (%"class.net::HostResolverManager::Job"*)*, void (%"class.net::HostResolverManager::Job"*)** %53, align 8
  tail call void %54(%"class.net::HostResolverManager::Job"* nonnull %48) #18
  br label %55

55:                                               ; preds = %50, %38
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 7
  %57 = bitcast %"class.std::__1::__tree_end_node"* %56 to %"class.net::NetworkIsolationKey"*
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %57) #18
  %58 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %55
  %63 = bitcast %"class.std::__1::__tree_end_node"* %45 to i8**
  %64 = load i8*, i8** %63, align 8
  tail call void @_ZdlPv(i8* %64) #19
  br label %65

65:                                               ; preds = %55, %62
  %66 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %66) #19
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.793", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 1023
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -1024
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32**, i32*** %10, align 8
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i32*, i32** %11, i64 1
  store i32** %14, i32*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load i32**, i32*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load i32**, i32*** %17, align 8
  %19 = icmp eq i32** %16, %18
  %20 = ptrtoint i32** %18 to i64
  %21 = bitcast i32** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32**, i32*** %23, align 8
  %25 = icmp ugt i32** %14, %24
  %26 = ptrtoint i32** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint i32** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds i32*, i32** %14, i64 %32
  %34 = ptrtoint i32** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast i32** %33 to i8*
  %40 = bitcast i32** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #18
  %41 = load i32**, i32*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi i32** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds i32*, i32** %33, i64 %36
  store i32** %44, i32*** %15, align 8
  %45 = getelementptr inbounds i32*, i32** %43, i64 %32
  store i32** %45, i32*** %10, align 8
  %46 = bitcast i32** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast i32*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #20
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #19
  %60 = bitcast i8* %59 to i32**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds i32*, i32** %60, i64 %57
  %63 = ptrtoint i32** %62 to i64
  %64 = getelementptr inbounds i32*, i32** %60, i64 %53
  %65 = ptrtoint i32** %64 to i64
  %66 = ptrtoint i32** %14 to i64
  %67 = ptrtoint i32** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds i32*, i32** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi i32** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi i32** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast i32** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds i32*, i32** %79, i64 1
  %87 = ptrtoint i32** %86 to i64
  %88 = getelementptr inbounds i32*, i32** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !264

91:                                               ; preds = %78
  %92 = ptrtoint i32** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi i32** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi i32** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi i32** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi i32** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %99, i64 1
  %106 = getelementptr inbounds i32*, i32** %101, i64 1
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %99, i64 2
  %111 = getelementptr inbounds i32*, i32** %101, i64 2
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %99, i64 3
  %116 = getelementptr inbounds i32*, i32** %101, i64 3
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %99, i64 4
  %121 = getelementptr inbounds i32*, i32** %101, i64 4
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %99, i64 5
  %126 = getelementptr inbounds i32*, i32** %101, i64 5
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %99, i64 6
  %131 = getelementptr inbounds i32*, i32** %101, i64 6
  %132 = bitcast i32** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast i32** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds i32*, i32** %99, i64 7
  %136 = getelementptr inbounds i32*, i32** %101, i64 7
  %137 = bitcast i32** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i32** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds i32*, i32** %99, i64 8
  %141 = ptrtoint i32** %140 to i64
  %142 = getelementptr inbounds i32*, i32** %101, i64 8
  %143 = icmp eq i32** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint i32** %70 to i64
  %146 = load i32**, i32*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi i32** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast i32*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast i32*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq i32** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast i32** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #19
  %156 = bitcast i32*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load i32**, i32*** %15, align 8
  %161 = getelementptr inbounds i32*, i32** %160, i64 1
  store i32** %161, i32*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast i32*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast i32*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast i32*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to i32**
  %181 = inttoptr i64 %169 to i32**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast i32** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #18
  %186 = tail call i8* @_Znwm(i64 4096) #19
  %187 = bitcast i32** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPN3net19HostResolverManager8TaskTypeENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"* %163, i32** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #18
  br label %460

188:                                              ; preds = %182
  %189 = bitcast i32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #18
  %190 = tail call i8* @_Znwm(i64 4096) #19
  %191 = bitcast i32** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPN3net19HostResolverManager8TaskTypeENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"* %163, i32** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #18
  %192 = load i32**, i32*** %167, align 8
  %193 = bitcast i32** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds i32*, i32** %192, i64 1
  store i32** %195, i32*** %167, align 8
  %196 = load i32**, i32*** %164, align 8
  %197 = load i32**, i32*** %172, align 8
  %198 = icmp eq i32** %196, %197
  %199 = ptrtoint i32** %197 to i64
  %200 = bitcast i32** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load i32**, i32*** %202, align 8
  %204 = icmp ugt i32** %195, %203
  %205 = ptrtoint i32** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint i32** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds i32*, i32** %195, i64 %211
  %213 = ptrtoint i32** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast i32** %212 to i8*
  %219 = bitcast i32** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #18
  %220 = load i32**, i32*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi i32** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds i32*, i32** %212, i64 %215
  store i32** %223, i32*** %164, align 8
  %224 = getelementptr inbounds i32*, i32** %222, i64 %211
  store i32** %224, i32*** %167, align 8
  %225 = bitcast i32** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #20
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #19
  %237 = bitcast i8* %236 to i32**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds i32*, i32** %237, i64 %234
  %240 = ptrtoint i32** %239 to i64
  %241 = getelementptr inbounds i32*, i32** %237, i64 %230
  %242 = ptrtoint i32** %241 to i64
  %243 = ptrtoint i32** %195 to i64
  %244 = ptrtoint i32** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds i32*, i32** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi i32** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi i32** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast i32** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds i32*, i32** %256, i64 1
  %264 = ptrtoint i32** %263 to i64
  %265 = getelementptr inbounds i32*, i32** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !265

268:                                              ; preds = %255
  %269 = ptrtoint i32** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi i32** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi i32** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi i32** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi i32** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast i32** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds i32*, i32** %276, i64 1
  %283 = getelementptr inbounds i32*, i32** %278, i64 1
  %284 = bitcast i32** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast i32** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds i32*, i32** %276, i64 2
  %288 = getelementptr inbounds i32*, i32** %278, i64 2
  %289 = bitcast i32** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast i32** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds i32*, i32** %276, i64 3
  %293 = getelementptr inbounds i32*, i32** %278, i64 3
  %294 = bitcast i32** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast i32** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds i32*, i32** %276, i64 4
  %298 = getelementptr inbounds i32*, i32** %278, i64 4
  %299 = bitcast i32** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast i32** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds i32*, i32** %276, i64 5
  %303 = getelementptr inbounds i32*, i32** %278, i64 5
  %304 = bitcast i32** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast i32** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds i32*, i32** %276, i64 6
  %308 = getelementptr inbounds i32*, i32** %278, i64 6
  %309 = bitcast i32** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast i32** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds i32*, i32** %276, i64 7
  %313 = getelementptr inbounds i32*, i32** %278, i64 7
  %314 = bitcast i32** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast i32** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds i32*, i32** %276, i64 8
  %318 = ptrtoint i32** %317 to i64
  %319 = getelementptr inbounds i32*, i32** %278, i64 8
  %320 = icmp eq i32** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint i32** %247 to i64
  %323 = load i32**, i32*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi i32** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq i32** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast i32** %325 to i8*
  call void @_ZdlPv(i8* %330) #19
  %331 = bitcast i32*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load i32**, i32*** %164, align 8
  %336 = getelementptr inbounds i32*, i32** %335, i64 1
  store i32** %336, i32*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.793"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #18
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.793", %"struct.std::__1::__split_buffer.793"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.793", %"struct.std::__1::__split_buffer.793"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.793", %"struct.std::__1::__split_buffer.793"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.793", %"struct.std::__1::__split_buffer.793"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.793"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store i32** null, i32*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.265"** %342 to %"class.std::__1::__compressed_pair.262"**
  store %"class.std::__1::__compressed_pair.262"* %346, %"class.std::__1::__compressed_pair.262"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #20
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #19
  %354 = bitcast i8* %353 to i32**
  %355 = bitcast %"struct.std::__1::__split_buffer.793"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds i32*, i32** %354, i64 %171
  store i32** %356, i32*** %340, align 8
  store i32** %356, i32*** %339, align 8
  %357 = getelementptr inbounds i32*, i32** %354, i64 %345
  store i32** %357, i32*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #19
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint i32** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint i32** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt i32** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds i32*, i32** %356, i64 %370
  store i32** %371, i32*** %340, align 8
  store i32** %371, i32*** %339, align 8
  %372 = ptrtoint i32** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #20
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.793"* %4 to i64*
  %382 = bitcast i32*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #19
  %386 = bitcast i8* %385 to i32**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds i32*, i32** %386, i64 %383
  %389 = ptrtoint i32** %388 to i64
  %390 = getelementptr inbounds i32*, i32** %386, i64 %377
  %391 = ptrtoint i32** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast i32*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast i32*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #19
  %394 = load i32**, i32*** %164, align 8
  %395 = load i32**, i32*** %167, align 8
  %396 = ptrtoint i32** %395 to i64
  %397 = ptrtoint i32** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi i32** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi i32** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi i32** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast i32** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds i32*, i32** %406, i64 1
  store i32** %408, i32*** %340, align 8
  %409 = icmp eq i32** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint i32** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.793"* %4 to i64*
  %413 = bitcast i32*** %339 to i64*
  %414 = bitcast i32*** %340 to i64*
  %415 = bitcast i32*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint i32** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.793"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast i32*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast i32*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast i32*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to i32**
  %441 = inttoptr i64 %434 to i32**
  %442 = icmp eq i32** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr i32*, i32** %441, i64 -1
  %445 = ptrtoint i32** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr i32*, i32** %441, i64 %448
  store i32** %449, i32*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #19
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #18
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi i32** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds i32*, i32** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPN3net19HostResolverManager8TaskTypeERNS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer.793"* nonnull %4, i32** dereferenceable(8) %457)
  %458 = load i32**, i32*** %167, align 8
  %459 = icmp eq i32** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN3net19HostResolverManager8TaskTypeENS_9allocatorIS3_EEE20__add_front_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast i32*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast i32*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %8, %11
  %13 = icmp eq i64 %12, 0
  %14 = shl i64 %12, 7
  %15 = add i64 %14, -1
  %16 = select i1 %13, i64 0, i64 %15
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %18
  %22 = sub i64 %16, %21
  %23 = icmp ugt i64 %22, 1023
  %24 = inttoptr i64 %11 to i32**
  %25 = inttoptr i64 %8 to i32**
  br i1 %23, label %26, label %34

26:                                               ; preds = %1
  %27 = add i64 %18, 1024
  store i64 %27, i64* %17, align 8
  %28 = bitcast i32** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #18
  store i32* inttoptr (i64 -6148914691236517206 to i32*), i32** %2, align 8
  %29 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %30 = getelementptr i32*, i32** %25, i64 -1
  %31 = bitcast i32** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i32** %2 to i64*
  store i64 %32, i64* %33, align 8
  store i32** %30, i32*** %6, align 8
  call void @_ZNSt3__114__split_bufferIPN3net19HostResolverManager8TaskTypeENS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer"* %29, i32** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #18
  br label %282

34:                                               ; preds = %1
  %35 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %37 = bitcast i32*** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::deque"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp ult i64 %12, %41
  br i1 %42, label %43, label %70

43:                                               ; preds = %34
  %44 = icmp eq i64 %11, %40
  br i1 %44, label %49, label %45

45:                                               ; preds = %43
  %46 = bitcast i32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #18
  %47 = tail call i8* @_Znwm(i64 4096) #19
  %48 = bitcast i32** %3 to i8**
  store i8* %47, i8** %48, align 8
  call void @_ZNSt3__114__split_bufferIPN3net19HostResolverManager8TaskTypeENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"* %35, i32** nonnull dereferenceable(8) %3)
  br label %59

49:                                               ; preds = %43
  %50 = bitcast i32** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #18
  %51 = tail call i8* @_Znwm(i64 4096) #19
  %52 = bitcast i32** %4 to i8**
  store i8* %51, i8** %52, align 8
  call void @_ZNSt3__114__split_bufferIPN3net19HostResolverManager8TaskTypeENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"* %35, i32** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #18
  %53 = bitcast i32** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #18
  store i32* inttoptr (i64 -6148914691236517206 to i32*), i32** %5, align 8
  %54 = load i32**, i32*** %6, align 8
  %55 = getelementptr i32*, i32** %54, i64 -1
  %56 = bitcast i32** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i32** %5 to i64*
  store i64 %57, i64* %58, align 8
  store i32** %55, i32*** %6, align 8
  call void @_ZNSt3__114__split_bufferIPN3net19HostResolverManager8TaskTypeENS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer"* %35, i32** nonnull dereferenceable(8) %5)
  br label %59

59:                                               ; preds = %49, %45
  %60 = phi i8* [ %53, %49 ], [ %46, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #18
  %61 = load i64, i64* %7, align 8
  %62 = load i64, i64* %10, align 8
  %63 = sub i64 %61, %62
  %64 = icmp eq i64 %63, 8
  br i1 %64, label %68, label %65

65:                                               ; preds = %59
  %66 = load i64, i64* %17, align 8
  %67 = add i64 %66, 1024
  br label %68

68:                                               ; preds = %59, %65
  %69 = phi i64 [ %67, %65 ], [ 512, %59 ]
  store i64 %69, i64* %17, align 8
  br label %282

70:                                               ; preds = %34
  %71 = ashr exact i64 %41, 2
  %72 = icmp eq i64 %41, 0
  %73 = select i1 %72, i64 1, i64 %71
  %74 = icmp ugt i64 %73, 2305843009213693951
  br i1 %74, label %75, label %76

75:                                               ; preds = %70
  tail call void @abort() #20
  unreachable

76:                                               ; preds = %70
  %77 = shl i64 %73, 3
  %78 = tail call i8* @_Znwm(i64 %77) #19
  %79 = bitcast i8* %78 to i32**
  %80 = ptrtoint i8* %78 to i64
  %81 = getelementptr inbounds i32*, i32** %79, i64 %73
  %82 = ptrtoint i32** %81 to i64
  %83 = tail call i8* @_Znwm(i64 4096) #19
  %84 = ptrtoint i8* %83 to i64
  %85 = icmp eq i32** %81, %79
  %86 = bitcast i8* %78 to i64*
  br i1 %85, label %87, label %107

87:                                               ; preds = %76
  %88 = sub i64 %82, %80
  %89 = ashr exact i64 %88, 2
  %90 = icmp eq i64 %88, 0
  %91 = select i1 %90, i64 1, i64 %89
  %92 = icmp ugt i64 %91, 2305843009213693951
  br i1 %92, label %93, label %94

93:                                               ; preds = %87
  tail call void @abort() #20
  unreachable

94:                                               ; preds = %87
  %95 = lshr i64 %91, 2
  %96 = shl i64 %91, 3
  %97 = tail call i8* @_Znwm(i64 %96) #19
  %98 = bitcast i8* %97 to i32**
  %99 = ptrtoint i8* %97 to i64
  %100 = getelementptr inbounds i32*, i32** %98, i64 %95
  %101 = ptrtoint i32** %100 to i64
  %102 = getelementptr inbounds i32*, i32** %98, i64 %91
  %103 = ptrtoint i32** %102 to i64
  %104 = bitcast i32** %100 to i64*
  tail call void @_ZdlPv(i8* nonnull %78) #19
  %105 = load i32**, i32*** %9, align 8
  %106 = load i32**, i32*** %6, align 8
  br label %107

107:                                              ; preds = %76, %94
  %108 = phi i32** [ %106, %94 ], [ %25, %76 ]
  %109 = phi i32** [ %105, %94 ], [ %24, %76 ]
  %110 = phi i64 [ %103, %94 ], [ %82, %76 ]
  %111 = phi i64 [ %101, %94 ], [ %80, %76 ]
  %112 = phi i64 [ %99, %94 ], [ %80, %76 ]
  %113 = phi i64* [ %104, %94 ], [ %86, %76 ]
  store i64 %84, i64* %113, align 8
  %114 = inttoptr i64 %111 to i32**
  %115 = getelementptr inbounds i32*, i32** %114, i64 1
  %116 = ptrtoint i32** %115 to i64
  %117 = icmp eq i32** %109, %108
  br i1 %117, label %120, label %129

118:                                              ; preds = %261
  %119 = ptrtoint i32** %270 to i64
  br label %120

120:                                              ; preds = %118, %107
  %121 = phi i64 [ %110, %107 ], [ %262, %118 ]
  %122 = phi i64 [ %111, %107 ], [ %264, %118 ]
  %123 = phi i64 [ %112, %107 ], [ %265, %118 ]
  %124 = phi i64 [ %116, %107 ], [ %119, %118 ]
  %125 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %126 = load i32**, i32*** %125, align 8
  store i64 %123, i64* %39, align 8
  store i64 %122, i64* %10, align 8
  store i64 %124, i64* %7, align 8
  store i64 %121, i64* %37, align 8
  %127 = sub i64 %124, %122
  %128 = icmp eq i64 %127, 8
  br i1 %128, label %277, label %274

129:                                              ; preds = %107, %261
  %130 = phi i64 [ %271, %261 ], [ %116, %107 ]
  %131 = phi i32** [ %270, %261 ], [ %115, %107 ]
  %132 = phi i32** [ %269, %261 ], [ %109, %107 ]
  %133 = phi i64 [ %265, %261 ], [ %112, %107 ]
  %134 = phi i64 [ %264, %261 ], [ %111, %107 ]
  %135 = phi i64 [ %262, %261 ], [ %110, %107 ]
  %136 = inttoptr i64 %135 to i32**
  %137 = icmp eq i32** %131, %136
  %138 = bitcast i32** %131 to i64*
  br i1 %137, label %139, label %261

139:                                              ; preds = %129
  %140 = inttoptr i64 %134 to i32**
  %141 = inttoptr i64 %133 to i32**
  %142 = icmp ugt i32** %140, %141
  br i1 %142, label %143, label %159

143:                                              ; preds = %139
  %144 = sub i64 %134, %133
  %145 = ashr exact i64 %144, 3
  %146 = add nsw i64 %145, 1
  %147 = sdiv i64 %146, -2
  %148 = getelementptr inbounds i32*, i32** %140, i64 %147
  %149 = sub i64 %130, %134
  %150 = ashr exact i64 %149, 3
  %151 = icmp eq i64 %149, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %143
  %153 = bitcast i32** %148 to i8*
  %154 = inttoptr i64 %134 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 %149, i1 false) #18
  br label %155

155:                                              ; preds = %152, %143
  %156 = getelementptr inbounds i32*, i32** %148, i64 %150
  %157 = ptrtoint i32** %148 to i64
  %158 = bitcast i32** %156 to i64*
  br label %261

159:                                              ; preds = %139
  %160 = sub i64 %135, %133
  %161 = ashr exact i64 %160, 2
  %162 = icmp eq i64 %160, 0
  %163 = select i1 %162, i64 1, i64 %161
  %164 = icmp ugt i64 %163, 2305843009213693951
  br i1 %164, label %165, label %166

165:                                              ; preds = %159
  tail call void @abort() #20
  unreachable

166:                                              ; preds = %159
  %167 = lshr i64 %163, 2
  %168 = shl i64 %163, 3
  %169 = tail call i8* @_Znwm(i64 %168) #19
  %170 = bitcast i8* %169 to i32**
  %171 = ptrtoint i8* %169 to i64
  %172 = getelementptr inbounds i32*, i32** %170, i64 %167
  %173 = ptrtoint i32** %172 to i64
  %174 = getelementptr inbounds i32*, i32** %170, i64 %163
  %175 = ptrtoint i32** %174 to i64
  %176 = sub i64 %130, %134
  %177 = ashr exact i64 %176, 3
  %178 = getelementptr inbounds i32*, i32** %172, i64 %177
  %179 = icmp eq i64 %176, 0
  br i1 %179, label %254, label %180

180:                                              ; preds = %166
  %181 = add i64 %176, -8
  %182 = lshr i64 %181, 3
  %183 = add nuw nsw i64 %182, 1
  %184 = and i64 %183, 7
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %201, label %186

186:                                              ; preds = %180, %186
  %187 = phi i32** [ %194, %186 ], [ %172, %180 ]
  %188 = phi i64 [ %195, %186 ], [ %173, %180 ]
  %189 = phi i32** [ %196, %186 ], [ %140, %180 ]
  %190 = phi i64 [ %197, %186 ], [ %184, %180 ]
  %191 = bitcast i32** %189 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = inttoptr i64 %188 to i64*
  store i64 %192, i64* %193, align 8
  %194 = getelementptr inbounds i32*, i32** %187, i64 1
  %195 = ptrtoint i32** %194 to i64
  %196 = getelementptr inbounds i32*, i32** %189, i64 1
  %197 = add i64 %190, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %186, !llvm.loop !266

199:                                              ; preds = %186
  %200 = ptrtoint i32** %194 to i64
  br label %201

201:                                              ; preds = %180, %199
  %202 = phi i32** [ %172, %180 ], [ %194, %199 ]
  %203 = phi i64 [ %173, %180 ], [ %200, %199 ]
  %204 = phi i32** [ %140, %180 ], [ %196, %199 ]
  %205 = icmp ult i64 %181, 56
  br i1 %205, label %252, label %206

206:                                              ; preds = %201, %206
  %207 = phi i32** [ %248, %206 ], [ %202, %201 ]
  %208 = phi i64 [ %249, %206 ], [ %203, %201 ]
  %209 = phi i32** [ %250, %206 ], [ %204, %201 ]
  %210 = bitcast i32** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = inttoptr i64 %208 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds i32*, i32** %207, i64 1
  %214 = getelementptr inbounds i32*, i32** %209, i64 1
  %215 = bitcast i32** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast i32** %213 to i64*
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds i32*, i32** %207, i64 2
  %219 = getelementptr inbounds i32*, i32** %209, i64 2
  %220 = bitcast i32** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast i32** %218 to i64*
  store i64 %221, i64* %222, align 8
  %223 = getelementptr inbounds i32*, i32** %207, i64 3
  %224 = getelementptr inbounds i32*, i32** %209, i64 3
  %225 = bitcast i32** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast i32** %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds i32*, i32** %207, i64 4
  %229 = getelementptr inbounds i32*, i32** %209, i64 4
  %230 = bitcast i32** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast i32** %228 to i64*
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds i32*, i32** %207, i64 5
  %234 = getelementptr inbounds i32*, i32** %209, i64 5
  %235 = bitcast i32** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast i32** %233 to i64*
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds i32*, i32** %207, i64 6
  %239 = getelementptr inbounds i32*, i32** %209, i64 6
  %240 = bitcast i32** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast i32** %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds i32*, i32** %207, i64 7
  %244 = getelementptr inbounds i32*, i32** %209, i64 7
  %245 = bitcast i32** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast i32** %243 to i64*
  store i64 %246, i64* %247, align 8
  %248 = getelementptr inbounds i32*, i32** %207, i64 8
  %249 = ptrtoint i32** %248 to i64
  %250 = getelementptr inbounds i32*, i32** %209, i64 8
  %251 = icmp eq i32** %178, %248
  br i1 %251, label %252, label %206

252:                                              ; preds = %206, %201
  %253 = ptrtoint i32** %178 to i64
  br label %254

254:                                              ; preds = %252, %166
  %255 = phi i64 [ %253, %252 ], [ %173, %166 ]
  %256 = inttoptr i64 %255 to i32**
  %257 = icmp eq i64 %133, 0
  %258 = inttoptr i64 %255 to i64*
  br i1 %257, label %261, label %259

259:                                              ; preds = %254
  %260 = inttoptr i64 %133 to i8*
  tail call void @_ZdlPv(i8* %260) #19
  br label %261

261:                                              ; preds = %129, %155, %254, %259
  %262 = phi i64 [ %135, %155 ], [ %175, %254 ], [ %175, %259 ], [ %135, %129 ]
  %263 = phi i32** [ %156, %155 ], [ %256, %254 ], [ %256, %259 ], [ %131, %129 ]
  %264 = phi i64 [ %157, %155 ], [ %173, %254 ], [ %173, %259 ], [ %134, %129 ]
  %265 = phi i64 [ %133, %155 ], [ %171, %254 ], [ %171, %259 ], [ %133, %129 ]
  %266 = phi i64* [ %158, %155 ], [ %258, %254 ], [ %258, %259 ], [ %138, %129 ]
  %267 = bitcast i32** %132 to i64*
  %268 = load i64, i64* %267, align 8
  store i64 %268, i64* %266, align 8
  %269 = getelementptr inbounds i32*, i32** %132, i64 1
  %270 = getelementptr inbounds i32*, i32** %263, i64 1
  %271 = ptrtoint i32** %270 to i64
  %272 = load i32**, i32*** %6, align 8
  %273 = icmp eq i32** %269, %272
  br i1 %273, label %118, label %129

274:                                              ; preds = %120
  %275 = load i64, i64* %17, align 8
  %276 = add i64 %275, 1024
  br label %277

277:                                              ; preds = %274, %120
  %278 = phi i64 [ %276, %274 ], [ 512, %120 ]
  store i64 %278, i64* %17, align 8
  %279 = icmp eq i32** %126, null
  br i1 %279, label %282, label %280

280:                                              ; preds = %277
  %281 = bitcast i32** %126 to i8*
  tail call void @_ZdlPv(i8* %281) #19
  br label %282

282:                                              ; preds = %280, %277, %68, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3net19HostResolverManager8TaskTypeENS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #18
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #20
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #19
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !267

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #19
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

declare void @_ZN3net9IPAddressC2EPKhm(%"class.net::IPAddress"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbvEJEEES3_E7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to i1 ()**
  %4 = load i1 ()*, i1 ()** %3, align 8
  %5 = tail call zeroext i1 %4() #18
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbvEJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #19
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19HostResolverManagerEFvbEJNS_7WeakPtrIS4_EEEEEFvbEE7RunOnceEPNS0_13BindStateBaseEb(%"class.base::internal::BindStateBase"*, i1 zeroext) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #18
  br i1 %7, label %8, label %43

8:                                                ; preds = %2
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.net::HostResolverManager"**
  %11 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %10, align 8
  %12 = icmp eq %"class.net::HostResolverManager"* %11, null
  br i1 %12, label %43, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #18
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #18
  br label %23

23:                                               ; preds = %20, %13
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #18
  %25 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* null
  %28 = getelementptr inbounds i8, i8* %27, i64 %18
  %29 = bitcast i8* %28 to %"class.net::HostResolverManager"*
  %30 = and i64 %15, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %23
  %33 = bitcast i8* %28 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = add i64 %15, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to void (%"class.net::HostResolverManager"*, i1)**
  %38 = load void (%"class.net::HostResolverManager"*, i1)*, void (%"class.net::HostResolverManager"*, i1)** %37, align 8
  br label %41

39:                                               ; preds = %23
  %40 = inttoptr i64 %15 to void (%"class.net::HostResolverManager"*, i1)*
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi void (%"class.net::HostResolverManager"*, i1)* [ %38, %32 ], [ %40, %39 ]
  call void %42(%"class.net::HostResolverManager"* %29, i1 zeroext %1) #18
  br label %43

43:                                               ; preds = %2, %8, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net19HostResolverManagerEFvbEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #18
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #19
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19HostResolverManagerEFvbEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::HostResolverManager"**
  %9 = load %"class.net::HostResolverManager"*, %"class.net::HostResolverManager"** %8, align 8
  %10 = icmp ne %"class.net::HostResolverManager"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #18
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare zeroext i1 @_ZN4base10ThreadPool16PostTaskAndReplyERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEES9_(%"class.base::Location"* dereferenceable(32), %"class.base::TaskTraits"* dereferenceable(15), %"class.base::OnceCallback.335"*, %"class.base::OnceCallback.335"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal20ReturnAsParamAdapterIbEEvNS_12OnceCallbackIFT_vEEEPNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEE(%"class.base::OnceCallback.479"*, %"class.std::__1::unique_ptr.818"*) #0 comdat {
  %3 = alloca %"class.base::OnceCallback.479", align 8
  %4 = tail call i8* @_Znwm(i64 1) #19
  %5 = bitcast %"class.base::OnceCallback.479"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback.479"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback.479"* %3 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %3, i64 0, i32 0
  %11 = inttoptr i64 %8 to %"class.base::internal::BindStateBase"*
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %11, i64 0, i32 1
  %13 = bitcast void ()** %12 to i1 (%"class.base::internal::BindStateBase"*)**
  %14 = load i1 (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.base::internal::BindStateBase"* %11) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %10) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %4, align 1
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.818", %"class.std::__1::unique_ptr.818"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  store i8* %4, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %2
  call void @_ZdlPv(i8* nonnull %18) #19
  br label %21

21:                                               ; preds = %2, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12ReplyAdapterIbbEEvNS_12OnceCallbackIFvT0_EEEPNSt3__110unique_ptrIT_NS6_14default_deleteIS8_EEEE(%"class.base::OnceCallback.480"*, %"class.std::__1::unique_ptr.818"*) #0 comdat {
  %3 = alloca %"class.base::OnceCallback.480", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.818", %"class.std::__1::unique_ptr.818"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = bitcast %"class.base::OnceCallback.480"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #18
  %9 = getelementptr inbounds %"class.base::OnceCallback.480", %"class.base::OnceCallback.480"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.480"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.480"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds %"class.base::OnceCallback.480", %"class.base::OnceCallback.480"* %3, i64 0, i32 0
  %14 = inttoptr i64 %11 to %"class.base::internal::BindStateBase"*
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %14, i64 0, i32 1
  %16 = bitcast void ()** %15 to void (%"class.base::internal::BindStateBase"*, i1)**
  %17 = load void (%"class.base::internal::BindStateBase"*, i1)*, void (%"class.base::internal::BindStateBase"*, i1)** %16, align 8
  tail call void %17(%"class.base::internal::BindStateBase"* %14, i1 zeroext %7) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFbvEEEPNSt3__110unique_ptrIbNS6_14default_deleteIbEEEEEJS5_SB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.479", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::OnceCallback.479"*, %"class.std::__1::unique_ptr.818"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %7 = bitcast void ()** %6 to %"class.std::__1::unique_ptr.818"**
  %8 = bitcast %"class.base::OnceCallback.479"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #18
  %9 = load void (%"class.base::OnceCallback.479"*, %"class.std::__1::unique_ptr.818"*)*, void (%"class.base::OnceCallback.479"*, %"class.std::__1::unique_ptr.818"*)** %4, align 8
  %10 = bitcast void ()** %5 to %"class.base::internal::BindStateBase"**
  %11 = bitcast void ()** %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.479"* %2 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = load %"class.std::__1::unique_ptr.818"*, %"class.std::__1::unique_ptr.818"** %7, align 8
  call void %9(%"class.base::OnceCallback.479"* nonnull %2, %"class.std::__1::unique_ptr.818"* %14) #18
  %15 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFbvEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_SA_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #18
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #19
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvbEEEPNSt3__110unique_ptrIbNS6_14default_deleteIbEEEEEJS5_NS0_12OwnedWrapperISA_NS8_ISA_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.480", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::OnceCallback.480"*, %"class.std::__1::unique_ptr.818"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %7 = bitcast void ()** %6 to %"class.std::__1::unique_ptr.818"**
  %8 = load %"class.std::__1::unique_ptr.818"*, %"class.std::__1::unique_ptr.818"** %7, align 8
  %9 = bitcast %"class.base::OnceCallback.480"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #18
  %10 = load void (%"class.base::OnceCallback.480"*, %"class.std::__1::unique_ptr.818"*)*, void (%"class.base::OnceCallback.480"*, %"class.std::__1::unique_ptr.818"*)** %4, align 8
  %11 = bitcast void ()** %5 to %"class.base::internal::BindStateBase"**
  %12 = bitcast void ()** %5 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.480"* %2 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  call void %10(%"class.base::OnceCallback.480"* nonnull %2, %"class.std::__1::unique_ptr.818"* %8) #18
  %15 = getelementptr inbounds %"class.base::OnceCallback.480", %"class.base::OnceCallback.480"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvbEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_NS0_12OwnedWrapperIS9_NS7_IS9_EEEEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %19, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.std::__1::unique_ptr.818"**
  %6 = load %"class.std::__1::unique_ptr.818"*, %"class.std::__1::unique_ptr.818"** %5, align 8
  store %"class.std::__1::unique_ptr.818"* null, %"class.std::__1::unique_ptr.818"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.818"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.818", %"class.std::__1::unique_ptr.818"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8* null, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @_ZdlPv(i8* nonnull %10) #19
  br label %13

13:                                               ; preds = %12, %8
  %14 = bitcast %"class.std::__1::unique_ptr.818"* %6 to i8*
  tail call void @_ZdlPv(i8* %14) #19
  br label %15

15:                                               ; preds = %3, %13
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %17) #18
  %18 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #19
  br label %19

19:                                               ; preds = %15, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN3net19HostResolverManager3JobENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.481"*, %"class.std::__1::unique_ptr.460"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.481", %"class.std::__1::vector.481"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.460"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.481"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.481"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.481", %"class.std::__1::vector.481"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.460"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.460"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.460"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.460"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.460"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.460"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.460"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.481", %"class.std::__1::vector.481"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.460"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.460"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.net::HostResolverManager::Job"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.460"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.460"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.460"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.460"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !268

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.460"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.460"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.460"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.460"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.460"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.460"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.460"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.460"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.460"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.460"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.460"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.460"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.460"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.460"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.460"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.460"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.460"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.460"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.460"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.460"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.460"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.460"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.460"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.460"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.460"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.460"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.460"*
  %138 = icmp eq %"class.std::__1::unique_ptr.460"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.460"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.net::HostResolverManager::Job"*, %"class.net::HostResolverManager::Job"** %142, align 8
  store %"class.net::HostResolverManager::Job"* null, %"class.net::HostResolverManager::Job"** %142, align 8
  %144 = icmp eq %"class.net::HostResolverManager::Job"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.net::HostResolverManager::Job"* %143 to void (%"class.net::HostResolverManager::Job"*)***
  %147 = load void (%"class.net::HostResolverManager::Job"*)**, void (%"class.net::HostResolverManager::Job"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.net::HostResolverManager::Job"*)*, void (%"class.net::HostResolverManager::Job"*)** %147, i64 1
  %149 = load void (%"class.net::HostResolverManager::Job"*)*, void (%"class.net::HostResolverManager::Job"*)** %148, align 8
  tail call void %149(%"class.net::HostResolverManager::Job"* nonnull %143) #18
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.460"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #19
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base12OnceCallbackIFvvEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.488"*, %"class.base::OnceCallback.335"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.488", %"class.std::__1::vector.488"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::OnceCallback.335"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.488"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.488"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.488", %"class.std::__1::vector.488"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback.335"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.base::OnceCallback.335"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::OnceCallback.335"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %36, i64 %35
  %39 = ptrtoint %"class.base::OnceCallback.335"* %38 to i64
  %40 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.base::OnceCallback.335"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.base::OnceCallback.335"* %37 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %40, align 8
  %44 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %37, i64 1
  %45 = ptrtoint %"class.base::OnceCallback.335"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.488", %"class.std::__1::vector.488"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.base::OnceCallback.335"*, %"class.base::OnceCallback.335"** %46, align 8
  %48 = ptrtoint %"class.base::OnceCallback.335"* %47 to i64
  %49 = load %"class.base::OnceCallback.335"*, %"class.base::OnceCallback.335"** %3, align 8
  %50 = icmp eq %"class.base::OnceCallback.335"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.base::internal::BindStateBase"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.base::OnceCallback.335"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.base::OnceCallback.335"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %60, i64 -1
  %64 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %61, i64 -1
  %65 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.base::OnceCallback.335"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.base::OnceCallback.335"* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %65, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !269

71:                                               ; preds = %59, %51
  %72 = phi %"class.base::OnceCallback.335"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.base::OnceCallback.335"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.base::OnceCallback.335"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.base::OnceCallback.335"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.base::OnceCallback.335"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %77, i64 -1
  %80 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %78, i64 -1
  %81 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::OnceCallback.335"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.base::OnceCallback.335"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %81, align 8
  %85 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %77, i64 -2
  %86 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %78, i64 -2
  %87 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.base::OnceCallback.335"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.base::OnceCallback.335"* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %87, align 8
  %91 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %77, i64 -3
  %92 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %78, i64 -3
  %93 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.base::OnceCallback.335"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.base::OnceCallback.335"* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %93, align 8
  %97 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %77, i64 -4
  %98 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %78, i64 -4
  %99 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.base::OnceCallback.335"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.base::OnceCallback.335"* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %99, align 8
  %103 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %77, i64 -5
  %104 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %78, i64 -5
  %105 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.base::OnceCallback.335"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.base::OnceCallback.335"* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %105, align 8
  %109 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %77, i64 -6
  %110 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %78, i64 -6
  %111 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.base::OnceCallback.335"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.base::OnceCallback.335"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %111, align 8
  %115 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %77, i64 -7
  %116 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %78, i64 -7
  %117 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.base::OnceCallback.335"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.base::OnceCallback.335"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %117, align 8
  %121 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %77, i64 -8
  %122 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %78, i64 -8
  %123 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.base::OnceCallback.335"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.base::OnceCallback.335"* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %123, align 8
  %127 = icmp eq %"class.base::OnceCallback.335"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.base::OnceCallback.335"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.base::OnceCallback.335"*, %"class.base::OnceCallback.335"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.base::OnceCallback.335"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.base::OnceCallback.335"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.base::OnceCallback.335"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.base::OnceCallback.335"*
  %138 = icmp eq %"class.base::OnceCallback.335"* %133, %137
  br i1 %138, label %144, label %139

139:                                              ; preds = %132, %139
  %140 = phi %"class.base::OnceCallback.335"* [ %141, %139 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %140, i64 -1
  %142 = getelementptr inbounds %"class.base::OnceCallback.335", %"class.base::OnceCallback.335"* %141, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %142) #18
  %143 = icmp eq %"class.base::OnceCallback.335"* %141, %137
  br i1 %143, label %144, label %139

144:                                              ; preds = %139, %132
  %145 = icmp eq i64 %135, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %147) #19
  br label %148

148:                                              ; preds = %144, %146
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN3net14ResolveContextELb1ELb0ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %4, align 8
  %6 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.base::internal::CheckedObserverAdapter"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::ObserverList"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 4
  %13 = load i64, i64* %3, align 8
  %14 = icmp ult i64 %12, %13
  %15 = select i1 %14, i64 %12, i64 %13
  %16 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext, true, false, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, %15
  br i1 %18, label %19, label %49

19:                                               ; preds = %1
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  br label %21

21:                                               ; preds = %47, %19
  %22 = phi %"class.base::ObserverList"* [ %5, %19 ], [ %48, %47 ]
  %23 = phi i64 [ %17, %19 ], [ %45, %47 ]
  %24 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %24, align 8
  %26 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %25, i64 %23
  %27 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %25, i64 %23, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %26, i64 0, i32 0, i32 0, i32 0
  %32 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %31) #18
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.60, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.61, i64 0, i64 0)) #18
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %35

35:                                               ; preds = %21, %30, %33
  %36 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %26, i64 0, i32 0, i32 0, i32 0
  %37 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %36) #18
  %38 = bitcast i64* %27 to %"class.base::CheckedObserver"**
  %39 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %38, align 8
  %40 = icmp eq %"class.base::CheckedObserver"* %39, null
  %41 = xor i1 %37, true
  %42 = or i1 %40, %41
  br i1 %42, label %43, label %49

43:                                               ; preds = %35
  %44 = load i64, i64* %16, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %16, align 8
  %46 = icmp ult i64 %45, %15
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %4, align 8
  br label %21

49:                                               ; preds = %35, %43, %1
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #13

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #17

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind }
attributes #16 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nofree nounwind readonly }
attributes #18 = { nounwind }
attributes #19 = { builtin nounwind }
attributes #20 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3net12_GLOBAL__N_119GetDispatcherLimitsERKNS_12HostResolver14ManagerOptionsE: argument 0"}
!5 = distinct !{!5, !"_ZN3net12_GLOBAL__N_119GetDispatcherLimitsERKNS_12HostResolver14ManagerOptionsE"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.isvectorized", i32 1}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !11, !7}
!11 = !{!"llvm.loop.unroll.runtime.disable"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJNS_8MayBlockENS_12TaskPriorityENS_20TaskShutdownBehaviorEEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_: argument 0"}
!14 = distinct !{!14, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJNS_8MayBlockENS_12TaskPriorityENS_20TaskShutdownBehaviorEEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManagerEE10GetWeakPtrEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManagerEE10GetWeakPtrEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManagerEE10GetWeakPtrEv: argument 0"}
!20 = distinct !{!20, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManagerEE10GetWeakPtrEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN3net19HostResolverManager3Job30GetAbortInsecureDnsTaskClosureEib: argument 0"}
!23 = distinct !{!23, !"_ZN3net19HostResolverManager3Job30GetAbortInsecureDnsTaskClosureEib"}
!24 = !{!25, !22}
!25 = distinct !{!25, !26, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManager3JobEE10GetWeakPtrEv: argument 0"}
!26 = distinct !{!26, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManager3JobEE10GetWeakPtrEv"}
!27 = !{!28, !30, !22}
!28 = distinct !{!28, !29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager3JobEFvibEJNS_7WeakPtrIS5_EERiRbEEEDcOT0_DpOT1_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager3JobEFvibEJNS_7WeakPtrIS5_EERiRbEEEDcOT0_DpOT1_"}
!30 = distinct !{!30, !31, !"_ZN4base8BindOnceIMN3net19HostResolverManager3JobEFvibEJNS_7WeakPtrIS3_EERiRbEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8BindOnceIMN3net19HostResolverManager3JobEFvibEJNS_7WeakPtrIS3_EERiRbEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK4base12ObserverListIN3net14ResolveContextELb1ELb0ENS_8internal22CheckedObserverAdapterEE5beginEv: argument 0"}
!34 = distinct !{!34, !"_ZNK4base12ObserverListIN3net14ResolveContextELb1ELb0ENS_8internal22CheckedObserverAdapterEE5beginEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK4base12ObserverListIN3net14ResolveContextELb1ELb0ENS_8internal22CheckedObserverAdapterEE3endEv: argument 0"}
!37 = distinct !{!37, !"_ZNK4base12ObserverListIN3net14ResolveContextELb1ELb0ENS_8internal22CheckedObserverAdapterEE3endEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManagerEE10GetWeakPtrEv: argument 0"}
!40 = distinct !{!40, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManagerEE10GetWeakPtrEv"}
!41 = !{!"branch_weights", i32 2000, i32 1}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNSt3__116forward_as_tupleIJRKN3net12DnsQueryTypeERKiRKNS1_18HostResolverSourceERKNS1_13SecureDnsModeERKPNS1_14ResolveContextERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS1_19NetworkIsolationKeyEEEENS_5tupleIJDpOT_EEESV_: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__116forward_as_tupleIJRKN3net12DnsQueryTypeERKiRKNS1_18HostResolverSourceERKNS1_13SecureDnsModeERKPNS1_14ResolveContextERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS1_19NetworkIsolationKeyEEEENS_5tupleIJDpOT_EEESV_"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNSt3__116forward_as_tupleIJRKN3net12DnsQueryTypeERKiRKNS1_18HostResolverSourceERKNS1_13SecureDnsModeERKPNS1_14ResolveContextERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS1_19NetworkIsolationKeyEEEENS_5tupleIJDpOT_EEESV_: argument 0"}
!47 = distinct !{!47, !"_ZNSt3__116forward_as_tupleIJRKN3net12DnsQueryTypeERKiRKNS1_18HostResolverSourceERKNS1_13SecureDnsModeERKPNS1_14ResolveContextERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS1_19NetworkIsolationKeyEEEENS_5tupleIJDpOT_EEESV_"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNSt3__116forward_as_tupleIJRKN3net12DnsQueryTypeERKiRKNS1_18HostResolverSourceERKNS1_13SecureDnsModeERKPNS1_14ResolveContextERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS1_19NetworkIsolationKeyEEEENS_5tupleIJDpOT_EEESV_: argument 0"}
!50 = distinct !{!50, !"_ZNSt3__116forward_as_tupleIJRKN3net12DnsQueryTypeERKiRKNS1_18HostResolverSourceERKNS1_13SecureDnsModeERKPNS1_14ResolveContextERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS1_19NetworkIsolationKeyEEEENS_5tupleIJDpOT_EEESV_"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNSt3__116forward_as_tupleIJRKN3net12DnsQueryTypeERKiRKNS1_18HostResolverSourceERKNS1_13SecureDnsModeERKPNS1_14ResolveContextERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS1_19NetworkIsolationKeyEEEENS_5tupleIJDpOT_EEESV_: argument 0"}
!53 = distinct !{!53, !"_ZNSt3__116forward_as_tupleIJRKN3net12DnsQueryTypeERKiRKNS1_18HostResolverSourceERKNS1_13SecureDnsModeERKPNS1_14ResolveContextERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS1_19NetworkIsolationKeyEEEENS_5tupleIJDpOT_EEESV_"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManagerEE10GetWeakPtrEv: argument 0"}
!56 = distinct !{!56, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManagerEE10GetWeakPtrEv"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZZN3net19HostResolverManager15IsIPv6ReachableERKNS_16NetLogWithSourceEENK3$_0clEv: argument 0"}
!59 = distinct !{!59, !"_ZZN3net19HostResolverManager15IsIPv6ReachableERKNS_16NetLogWithSourceEENK3$_0clEv"}
!60 = !{!61, !58}
!61 = distinct !{!61, !62, !"_ZN3net12_GLOBAL__N_125NetLogIPv6AvailableParamsEbb: argument 0"}
!62 = distinct !{!62, !"_ZN3net12_GLOBAL__N_125NetLogIPv6AvailableParamsEbb"}
!63 = !{!64, !66}
!64 = distinct !{!64, !65, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFbvEJEEEDcOT0_DpOT1_: argument 0"}
!65 = distinct !{!65, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFbvEJEEEDcOT0_DpOT1_"}
!66 = distinct !{!66, !67, !"_ZN4base8BindOnceIPFbvEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS6_DpOS7_: argument 0"}
!67 = distinct !{!67, !"_ZN4base8BindOnceIPFbvEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS6_DpOS7_"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManagerEE10GetWeakPtrEv: argument 0"}
!70 = distinct !{!70, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManagerEE10GetWeakPtrEv"}
!71 = !{!72, !74}
!72 = distinct !{!72, !73, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManagerEFvbEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!73 = distinct !{!73, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManagerEFvbEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!74 = distinct !{!74, !75, !"_ZN4base8BindOnceIMN3net19HostResolverManagerEFvbEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!75 = distinct !{!75, !"_ZN4base8BindOnceIMN3net19HostResolverManagerEFvbEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!76 = !{!77, !79}
!77 = distinct !{!77, !78, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFbvEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_RSA_EEEDcOT0_DpOT1_: argument 0"}
!78 = distinct !{!78, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFbvEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_RSA_EEEDcOT0_DpOT1_"}
!79 = distinct !{!79, !80, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFbvEEEPNSt3__110unique_ptrIbNS4_14default_deleteIbEEEEEJS3_RS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!80 = distinct !{!80, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFbvEEEPNSt3__110unique_ptrIbNS4_14default_deleteIbEEEEEJS3_RS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!81 = !{!82, !84}
!82 = distinct !{!82, !83, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvbEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_NS0_12OwnedWrapperIS9_NS7_IS9_EEEEEEEDcOT0_DpOT1_: argument 0"}
!83 = distinct !{!83, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvbEEEPNSt3__110unique_ptrIbNS5_14default_deleteIbEEEEEJS4_NS0_12OwnedWrapperIS9_NS7_IS9_EEEEEEEDcOT0_DpOT1_"}
!84 = distinct !{!84, !85, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvbEEEPNSt3__110unique_ptrIbNS4_14default_deleteIbEEEEEJS3_NS_8internal12OwnedWrapperIS8_NS6_IS8_EEEEEEENS1_INSC_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!85 = distinct !{!85, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvbEEEPNSt3__110unique_ptrIbNS4_14default_deleteIbEEEEEJS3_NS_8internal12OwnedWrapperIS8_NS6_IS8_EEEEEEENS1_INSC_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManagerEE10GetWeakPtrEv: argument 0"}
!88 = distinct !{!88, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManagerEE10GetWeakPtrEv"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManagerEE10GetWeakPtrEv: argument 0"}
!91 = distinct !{!91, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManagerEE10GetWeakPtrEv"}
!92 = !{!"branch_weights", i32 1, i32 1048575}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZZN3net19HostResolverManager3Job10AddRequestEPNS0_11RequestImplEENKUlvE_clEv: argument 0"}
!95 = distinct !{!95, !"_ZZN3net19HostResolverManager3Job10AddRequestEPNS0_11RequestImplEENKUlvE_clEv"}
!96 = !{!97, !94}
!97 = distinct !{!97, !98, !"_ZN3net12_GLOBAL__N_121NetLogJobAttachParamsERKNS_12NetLogSourceENS_15RequestPriorityE: argument 0"}
!98 = distinct !{!98, !"_ZN3net12_GLOBAL__N_121NetLogJobAttachParamsERKNS_12NetLogSourceENS_15RequestPriorityE"}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZNK3net19HostResolverManager3Job16GenerateCacheKeyEb: argument 0"}
!101 = distinct !{!101, !"_ZNK3net19HostResolverManager3Job16GenerateCacheKeyEb"}
!102 = !{!103}
!103 = distinct !{!103, !104, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManager3JobEE10GetWeakPtrEv: argument 0"}
!104 = distinct !{!104, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManager3JobEE10GetWeakPtrEv"}
!105 = !{!106, !108}
!106 = distinct !{!106, !107, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS5_EENS3_5ErrorEEEEDcOT0_DpOT1_: argument 0"}
!107 = distinct !{!107, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS5_EENS3_5ErrorEEEEDcOT0_DpOT1_"}
!108 = distinct !{!108, !109, !"_ZN4base8BindOnceIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS3_EENS1_5ErrorEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!109 = distinct !{!109, !"_ZN4base8BindOnceIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS3_EENS1_5ErrorEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!110 = !{!111, !113}
!111 = distinct !{!111, !112, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager3JobEFvNS_9TimeTicksEiRKNS3_11AddressListEEJNS0_17UnretainedWrapperIS5_EES6_EEEDcOT0_DpOT1_: argument 0"}
!112 = distinct !{!112, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager3JobEFvNS_9TimeTicksEiRKNS3_11AddressListEEJNS0_17UnretainedWrapperIS5_EES6_EEEDcOT0_DpOT1_"}
!113 = distinct !{!113, !114, !"_ZN4base8BindOnceIMN3net19HostResolverManager3JobEFvNS_9TimeTicksEiRKNS1_11AddressListEEJNS_8internal17UnretainedWrapperIS3_EES4_EEENS_12OnceCallbackINSA_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!114 = distinct !{!114, !"_ZN4base8BindOnceIMN3net19HostResolverManager3JobEFvNS_9TimeTicksEiRKNS1_11AddressListEEJNS_8internal17UnretainedWrapperIS3_EES4_EEENS_12OnceCallbackINSA_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!115 = !{!116, !118}
!116 = distinct !{!116, !117, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager3JobEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!117 = distinct !{!117, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager3JobEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!118 = distinct !{!118, !119, !"_ZN4base8BindOnceIMN3net19HostResolverManager3JobEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!119 = distinct !{!119, !"_ZN4base8BindOnceIMN3net19HostResolverManager3JobEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!120 = !{!121}
!121 = distinct !{!121, !122, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManager3JobEE10GetWeakPtrEv: argument 0"}
!122 = distinct !{!122, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManager3JobEE10GetWeakPtrEv"}
!123 = !{!124, !126}
!124 = distinct !{!124, !125, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS5_EERiEEEDcOT0_DpOT1_: argument 0"}
!125 = distinct !{!125, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS5_EERiEEEDcOT0_DpOT1_"}
!126 = distinct !{!126, !127, !"_ZN4base8BindOnceIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS3_EERiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!127 = distinct !{!127, !"_ZN4base8BindOnceIMN3net19HostResolverManager3JobEFviEJNS_7WeakPtrIS3_EERiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!128 = !{!129}
!129 = distinct !{!129, !130, !"_ZNK3net19HostResolverManager3Job16GenerateCacheKeyEb: argument 0"}
!130 = distinct !{!130, !"_ZNK3net19HostResolverManager3Job16GenerateCacheKeyEb"}
!131 = !{!132}
!132 = distinct !{!132, !133, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManager8ProcTaskEE10GetWeakPtrEv: argument 0"}
!133 = distinct !{!133, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManager8ProcTaskEE10GetWeakPtrEv"}
!134 = !{!135, !137}
!135 = distinct !{!135, !136, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_7WeakPtrIN3net19HostResolverManager8ProcTaskEEERKNS_9TimeTicksEjPKNS_9TickClockERKNS4_11AddressListEiiEJS7_RS8_RjRSD_EEEDcOT0_DpOT1_: argument 0"}
!136 = distinct !{!136, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_7WeakPtrIN3net19HostResolverManager8ProcTaskEEERKNS_9TimeTicksEjPKNS_9TickClockERKNS4_11AddressListEiiEJS7_RS8_RjRSD_EEEDcOT0_DpOT1_"}
!137 = distinct !{!137, !138, !"_ZN4base8BindOnceIPFvNS_7WeakPtrIN3net19HostResolverManager8ProcTaskEEERKNS_9TimeTicksEjPKNS_9TickClockERKNS2_11AddressListEiiEJS5_RS6_RjRSB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_: argument 0"}
!138 = distinct !{!138, !"_ZN4base8BindOnceIPFvNS_7WeakPtrIN3net19HostResolverManager8ProcTaskEEERKNS_9TimeTicksEjPKNS_9TickClockERKNS2_11AddressListEiiEJS5_RS6_RjRSB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_"}
!139 = !{!140, !142}
!140 = distinct !{!140, !141, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN3net13AddressFamilyEi13scoped_refptrINSA_16HostResolverProcEESC_INS_22SingleThreadTaskRunnerEENS2_IFvRKNSA_11AddressListEiiEEEEJRKS9_RKSB_RKiRSE_RSG_SL_EEEDcOT0_DpOT1_: argument 0"}
!141 = distinct !{!141, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN3net13AddressFamilyEi13scoped_refptrINSA_16HostResolverProcEESC_INS_22SingleThreadTaskRunnerEENS2_IFvRKNSA_11AddressListEiiEEEEJRKS9_RKSB_RKiRSE_RSG_SL_EEEDcOT0_DpOT1_"}
!142 = distinct !{!142, !143, !"_ZN4base8BindOnceIPFvNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN3net13AddressFamilyEi13scoped_refptrINS8_16HostResolverProcEESA_INS_22SingleThreadTaskRunnerEENS_12OnceCallbackIFvRKNS8_11AddressListEiiEEEEJRKS7_RKS9_RKiRSC_RSE_SK_EEENSF_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSX_DpOSY_: argument 0"}
!143 = distinct !{!143, !"_ZN4base8BindOnceIPFvNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN3net13AddressFamilyEi13scoped_refptrINS8_16HostResolverProcEESA_INS_22SingleThreadTaskRunnerEENS_12OnceCallbackIFvRKNS8_11AddressListEiiEEEEJRKS7_RKS9_RKiRSC_RSE_SK_EEENSF_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSX_DpOSY_"}
!144 = !{!145}
!145 = distinct !{!145, !146, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManager8ProcTaskEE10GetWeakPtrEv: argument 0"}
!146 = distinct !{!146, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManager8ProcTaskEE10GetWeakPtrEv"}
!147 = !{!148, !150}
!148 = distinct !{!148, !149, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager8ProcTaskEFvvEJNS_7WeakPtrIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!149 = distinct !{!149, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager8ProcTaskEFvvEJNS_7WeakPtrIS5_EEEEEDcOT0_DpOT1_"}
!150 = distinct !{!150, !151, !"_ZN4base8BindOnceIMN3net19HostResolverManager8ProcTaskEFvvEJNS_7WeakPtrIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!151 = distinct !{!151, !"_ZN4base8BindOnceIMN3net19HostResolverManager8ProcTaskEFvvEJNS_7WeakPtrIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!152 = !{!153, !155}
!153 = distinct !{!153, !154, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvRKN3net11AddressListEiiEEEJRS4_RiSA_EEEDcOT0_DpOT1_: argument 0"}
!154 = distinct !{!154, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvRKN3net11AddressListEiiEEEJRS4_RiSA_EEEDcOT0_DpOT1_"}
!155 = distinct !{!155, !156, !"_ZN4base8BindOnceINS_12OnceCallbackIFvRKN3net11AddressListEiiEEEJRS3_RiS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!156 = distinct !{!156, !"_ZN4base8BindOnceINS_12OnceCallbackIFvRKN3net11AddressListEiiEEEJRS3_RiS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!157 = !{!158}
!158 = distinct !{!158, !159, !"_ZZN3net19HostResolverManager8ProcTask16OnLookupCompleteERKNS_11AddressListERKN4base9TimeTicksEjiiENKUlvE0_clEv: argument 0"}
!159 = distinct !{!159, !"_ZZN3net19HostResolverManager8ProcTask16OnLookupCompleteERKNS_11AddressListERKN4base9TimeTicksEjiiENKUlvE0_clEv"}
!160 = !{!161, !158}
!161 = distinct !{!161, !162, !"_ZN3net12_GLOBAL__N_126NetLogProcTaskFailedParamsEjii: argument 0"}
!162 = distinct !{!162, !"_ZN3net12_GLOBAL__N_126NetLogProcTaskFailedParamsEjii"}
!163 = !{!164}
!164 = distinct !{!164, !165, !"_ZZN3net19HostResolverManager8ProcTask16OnLookupCompleteERKNS_11AddressListERKN4base9TimeTicksEjiiENKUlvE_clEv: argument 0"}
!165 = distinct !{!165, !"_ZZN3net19HostResolverManager8ProcTask16OnLookupCompleteERKNS_11AddressListERKN4base9TimeTicksEjiiENKUlvE_clEv"}
!166 = !{!167, !164}
!167 = distinct !{!167, !168, !"_ZN3net12_GLOBAL__N_126NetLogProcTaskFailedParamsEjii: argument 0"}
!168 = distinct !{!168, !"_ZN3net12_GLOBAL__N_126NetLogProcTaskFailedParamsEjii"}
!169 = !{!170, !172}
!170 = distinct !{!170, !171, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager7DnsTaskEFvRKNS_9TimeTicksENS3_12DnsQueryTypeEPNS3_14DnsTransactionEiPKNS3_11DnsResponseEN4absl8optionalINSt3__112basic_stringIcNSH_11char_traitsIcEENSH_9allocatorIcEEEEEEEJNS0_17UnretainedWrapperIS5_EES6_RS9_EEEDcOT0_DpOT1_: argument 0"}
!171 = distinct !{!171, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager7DnsTaskEFvRKNS_9TimeTicksENS3_12DnsQueryTypeEPNS3_14DnsTransactionEiPKNS3_11DnsResponseEN4absl8optionalINSt3__112basic_stringIcNSH_11char_traitsIcEENSH_9allocatorIcEEEEEEEJNS0_17UnretainedWrapperIS5_EES6_RS9_EEEDcOT0_DpOT1_"}
!172 = distinct !{!172, !173, !"_ZN4base8BindOnceIMN3net19HostResolverManager7DnsTaskEFvRKNS_9TimeTicksENS1_12DnsQueryTypeEPNS1_14DnsTransactionEiPKNS1_11DnsResponseEN4absl8optionalINSt3__112basic_stringIcNSF_11char_traitsIcEENSF_9allocatorIcEEEEEEEJNS_8internal17UnretainedWrapperIS3_EES4_RS7_EEENS_12OnceCallbackINSP_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSV_DpOSW_: argument 0"}
!173 = distinct !{!173, !"_ZN4base8BindOnceIMN3net19HostResolverManager7DnsTaskEFvRKNS_9TimeTicksENS1_12DnsQueryTypeEPNS1_14DnsTransactionEiPKNS1_11DnsResponseEN4absl8optionalINSt3__112basic_stringIcNSF_11char_traitsIcEENSF_9allocatorIcEEEEEEEJNS_8internal17UnretainedWrapperIS3_EES4_RS7_EEENS_12OnceCallbackINSP_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSV_DpOSW_"}
!174 = !{!175}
!175 = distinct !{!175, !176, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!176 = distinct !{!176, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!177 = !{!"branch_weights", i32 1, i32 2000}
!178 = !{!179, !181}
!179 = distinct !{!179, !180, !"_ZN3net12_GLOBAL__N_125NetLogDnsTaskFailedParamsERKNS_9HostCache5EntryEi: argument 0"}
!180 = distinct !{!180, !"_ZN3net12_GLOBAL__N_125NetLogDnsTaskFailedParamsERKNS_9HostCache5EntryEi"}
!181 = distinct !{!181, !182, !"_ZZN3net19HostResolverManager7DnsTask9OnFailureEiNS_26DnsResponseResultExtractor15ExtractionErrorEN4absl8optionalIN4base9TimeDeltaEEEENKUlvE_clEv: argument 0"}
!182 = distinct !{!182, !"_ZZN3net19HostResolverManager7DnsTask9OnFailureEiNS_26DnsResponseResultExtractor15ExtractionErrorEN4absl8optionalIN4base9TimeDeltaEEEENKUlvE_clEv"}
!183 = !{!179}
!184 = !{!185, !187}
!185 = distinct !{!185, !186, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager7DnsTaskEFvN4absl8optionalINSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEEEEJNS0_17UnretainedWrapperIS5_EERSF_EEEDcOT0_DpOT1_: argument 0"}
!186 = distinct !{!186, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager7DnsTaskEFvN4absl8optionalINSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEEEEJNS0_17UnretainedWrapperIS5_EERSF_EEEDcOT0_DpOT1_"}
!187 = distinct !{!187, !188, !"_ZN4base8BindOnceIMN3net19HostResolverManager7DnsTaskEFvN4absl8optionalINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEEEJNS_8internal17UnretainedWrapperIS3_EERSD_EEENS_12OnceCallbackINSG_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_: argument 0"}
!188 = distinct !{!188, !"_ZN4base8BindOnceIMN3net19HostResolverManager7DnsTaskEFvN4absl8optionalINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEEEJNS_8internal17UnretainedWrapperIS3_EERSD_EEENS_12OnceCallbackINSG_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_"}
!189 = !{!190}
!190 = distinct !{!190, !191, !"_ZN4base15SupportsWeakPtrIN3net19HostResolverManager7DnsTaskEE9AsWeakPtrEv: argument 0"}
!191 = distinct !{!191, !"_ZN4base15SupportsWeakPtrIN3net19HostResolverManager7DnsTaskEE9AsWeakPtrEv"}
!192 = !{!193, !195}
!193 = distinct !{!193, !194, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager7DnsTaskEFvNS_9TimeTicksENS3_9HostCache5EntryEbbRKNS3_11AddressListEEJNS_7WeakPtrIS5_EES6_S8_RKbEEEDcOT0_DpOT1_: argument 0"}
!194 = distinct !{!194, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager7DnsTaskEFvNS_9TimeTicksENS3_9HostCache5EntryEbbRKNS3_11AddressListEEJNS_7WeakPtrIS5_EES6_S8_RKbEEEDcOT0_DpOT1_"}
!195 = distinct !{!195, !196, !"_ZN4base8BindOnceIMN3net19HostResolverManager7DnsTaskEFvNS_9TimeTicksENS1_9HostCache5EntryEbbRKNS1_11AddressListEEJNS_7WeakPtrIS3_EES4_S6_RKbEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!196 = distinct !{!196, !"_ZN4base8BindOnceIMN3net19HostResolverManager7DnsTaskEFvNS_9TimeTicksENS1_9HostCache5EntryEbbRKNS1_11AddressListEEJNS_7WeakPtrIS3_EES4_S6_RKbEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!197 = !{!198}
!198 = distinct !{!198, !199, !"_ZNKR4absl8optionalINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEE8value_orISA_EESA_OT_: argument 0"}
!199 = distinct !{!199, !"_ZNKR4absl8optionalINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEE8value_orISA_EESA_OT_"}
!200 = !{!201}
!201 = distinct !{!201, !202, !"_ZNKR4absl8optionalINSt3__16vectorIN3net12HostPortPairENS1_9allocatorIS4_EEEEE8value_orIS7_EES7_OT_: argument 0"}
!202 = distinct !{!202, !"_ZNKR4absl8optionalINSt3__16vectorIN3net12HostPortPairENS1_9allocatorIS4_EEEEE8value_orIS7_EES7_OT_"}
!203 = distinct !{!203, !9}
!204 = distinct !{!204, !9}
!205 = distinct !{!205, !9}
!206 = distinct !{!206, !9}
!207 = !{!208}
!208 = distinct !{!208, !209, !"_ZZN3net19HostResolverManager3Job13CancelRequestEPNS0_11RequestImplEENKUlvE_clEv: argument 0"}
!209 = distinct !{!209, !"_ZZN3net19HostResolverManager3Job13CancelRequestEPNS0_11RequestImplEENKUlvE_clEv"}
!210 = !{!211, !208}
!211 = distinct !{!211, !212, !"_ZN3net12_GLOBAL__N_121NetLogJobAttachParamsERKNS_12NetLogSourceENS_15RequestPriorityE: argument 0"}
!212 = distinct !{!212, !"_ZN3net12_GLOBAL__N_121NetLogJobAttachParamsERKNS_12NetLogSourceENS_15RequestPriorityE"}
!213 = !{!214}
!214 = distinct !{!214, !215, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManager16ProbeRequestImplEE10GetWeakPtrEv: argument 0"}
!215 = distinct !{!215, !"_ZNK4base14WeakPtrFactoryIN3net19HostResolverManager16ProbeRequestImplEE10GetWeakPtrEv"}
!216 = !{!217, !219}
!217 = distinct !{!217, !218, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager16ProbeRequestImplEFvbEJNS_7WeakPtrIS5_EERbEEEDcOT0_DpOT1_: argument 0"}
!218 = distinct !{!218, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19HostResolverManager16ProbeRequestImplEFvbEJNS_7WeakPtrIS5_EERbEEEDcOT0_DpOT1_"}
!219 = distinct !{!219, !220, !"_ZN4base8BindOnceIMN3net19HostResolverManager16ProbeRequestImplEFvbEJNS_7WeakPtrIS3_EERbEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!220 = distinct !{!220, !"_ZN4base8BindOnceIMN3net19HostResolverManager16ProbeRequestImplEFvbEJNS_7WeakPtrIS3_EERbEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!221 = !{!222}
!222 = distinct !{!222, !223, !"_ZNSt3__116forward_as_tupleIJRKN3net12DnsQueryTypeERKiRKNS1_18HostResolverSourceERKNS1_13SecureDnsModeERKPNS1_14ResolveContextERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS1_19NetworkIsolationKeyEEEENS_5tupleIJDpOT_EEESV_: argument 0"}
!223 = distinct !{!223, !"_ZNSt3__116forward_as_tupleIJRKN3net12DnsQueryTypeERKiRKNS1_18HostResolverSourceERKNS1_13SecureDnsModeERKPNS1_14ResolveContextERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS1_19NetworkIsolationKeyEEEENS_5tupleIJDpOT_EEESV_"}
!224 = !{!225}
!225 = distinct !{!225, !226, !"_ZNSt3__116forward_as_tupleIJRKN3net12DnsQueryTypeERKiRKNS1_18HostResolverSourceERKNS1_13SecureDnsModeERKPNS1_14ResolveContextERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS1_19NetworkIsolationKeyEEEENS_5tupleIJDpOT_EEESV_: argument 0"}
!226 = distinct !{!226, !"_ZNSt3__116forward_as_tupleIJRKN3net12DnsQueryTypeERKiRKNS1_18HostResolverSourceERKNS1_13SecureDnsModeERKPNS1_14ResolveContextERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS1_19NetworkIsolationKeyEEEENS_5tupleIJDpOT_EEESV_"}
!227 = !{!228}
!228 = distinct !{!228, !229, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!229 = distinct !{!229, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!230 = !{!231}
!231 = distinct !{!231, !232, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!232 = distinct !{!232, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!233 = !{!234}
!234 = distinct !{!234, !235, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!235 = distinct !{!235, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!236 = !{!237}
!237 = distinct !{!237, !238, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!238 = distinct !{!238, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!239 = !{!240}
!240 = distinct !{!240, !241, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!241 = distinct !{!241, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!242 = !{!243}
!243 = distinct !{!243, !244, !"_ZN4base15SupportsWeakPtrIN3net19HostResolverManager7DnsTaskEE9AsWeakPtrEv: argument 0"}
!244 = distinct !{!244, !"_ZN4base15SupportsWeakPtrIN3net19HostResolverManager7DnsTaskEE9AsWeakPtrEv"}
!245 = distinct !{!245, !9}
!246 = distinct !{!246, !9}
!247 = distinct !{!247, !9}
!248 = distinct !{!248, !9}
!249 = distinct !{!249, !9}
!250 = distinct !{!250, !9}
!251 = distinct !{!251, !9}
!252 = !{!253}
!253 = distinct !{!253, !254, !"_ZZN3net19HostResolverManager3JobC1ERKN4base7WeakPtrIS0_EENS2_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_19NetworkIsolationKeyENS_12DnsQueryTypeEiNS_18HostResolverSourceENS_12HostResolver21ResolveHostParameters10CacheUsageENS_13SecureDnsModeEPNS_14ResolveContextEPNS_9HostCacheENS8_5dequeINS0_8TaskTypeENS8_9allocatorISQ_EEEENS_15RequestPriorityE13scoped_refptrINS2_10TaskRunnerEERKNS_16NetLogWithSourceEPKNS2_9TickClockEENKUlvE_clEv: argument 0"}
!254 = distinct !{!254, !"_ZZN3net19HostResolverManager3JobC1ERKN4base7WeakPtrIS0_EENS2_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_19NetworkIsolationKeyENS_12DnsQueryTypeEiNS_18HostResolverSourceENS_12HostResolver21ResolveHostParameters10CacheUsageENS_13SecureDnsModeEPNS_14ResolveContextEPNS_9HostCacheENS8_5dequeINS0_8TaskTypeENS8_9allocatorISQ_EEEENS_15RequestPriorityE13scoped_refptrINS2_10TaskRunnerEERKNS_16NetLogWithSourceEPKNS2_9TickClockEENKUlvE_clEv"}
!255 = !{!256, !253}
!256 = distinct !{!256, !257, !"_ZN3net12_GLOBAL__N_123NetLogJobCreationParamsERKNS_12NetLogSourceERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE: argument 0"}
!257 = distinct !{!257, !"_ZN3net12_GLOBAL__N_123NetLogJobCreationParamsERKNS_12NetLogSourceERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE"}
!258 = !{!256}
!259 = !{!260}
!260 = distinct !{!260, !261, !"_ZNSt3__16__treeINS_12__value_typeIN3net19HostResolverManager6JobKeyENS_10unique_ptrINS3_3JobENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS_9allocatorISA_EEE16__construct_nodeIJS4_S9_EEENS5_INS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_ISL_EEEEEEDpOT_: argument 0"}
!261 = distinct !{!261, !"_ZNSt3__16__treeINS_12__value_typeIN3net19HostResolverManager6JobKeyENS_10unique_ptrINS3_3JobENS_14default_deleteIS6_EEEEEENS_19__map_value_compareIS4_SA_NS_4lessIS4_EELb1EEENS_9allocatorISA_EEE16__construct_nodeIJS4_S9_EEENS5_INS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_ISL_EEEEEEDpOT_"}
!262 = distinct !{!262, !9}
!263 = !{i64 0, i64 65}
!264 = distinct !{!264, !9}
!265 = distinct !{!265, !9}
!266 = distinct !{!266, !9}
!267 = distinct !{!267, !9}
!268 = distinct !{!268, !9}
!269 = distinct !{!269, !9}
