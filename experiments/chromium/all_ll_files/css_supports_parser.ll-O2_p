; ModuleID = '../../third_party/blink/renderer/core/css/parser/css_supports_parser.cc'
source_filename = "../../third_party/blink/renderer/core/css/parser/css_supports_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon }
%union.anon = type { double }
%"class.blink::CSSParserTokenStream" = type <{ %"class.WTF::Vector", %"class.blink::CSSTokenizer"*, %"class.blink::CSSParserToken", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [768 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSTokenizer" = type { %"class.blink::CSSTokenizerInputStream", %"class.WTF::Vector.1", %"class.WTF::Vector.6", i32, i32 }
%"class.blink::CSSTokenizerInputStream" = type { i32, i32, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::Vector.1" = type { %"class.WTF::VectorBuffer.2" }
%"class.WTF::VectorBuffer.2" = type { %"class.WTF::VectorBufferBase.3", [32 x i8] }
%"class.WTF::VectorBufferBase.3" = type { i32*, i32, i32 }
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8" }
%"class.WTF::VectorBufferBase.8" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%"class.blink::CSSParserImpl" = type { %"class.blink::HeapVector", %"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*, %"class.blink::CSSParserObserver"*, %"class.blink::CSSLazyParsingState"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.11" }
%"class.WTF::Vector.11" = type { %"class.WTF::VectorBuffer.12" }
%"class.WTF::VectorBuffer.12" = type { %"class.WTF::VectorBufferBase.13", [6144 x i8] }
%"class.WTF::VectorBufferBase.13" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::CSSParserContext" = type opaque
%"class.blink::StyleSheetContents" = type opaque
%"class.blink::CSSParserObserver" = type opaque
%"class.blink::CSSLazyParsingState" = type opaque
%"class.blink::CSSSupportsParser" = type { %"class.blink::CSSParserImpl"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.18 }
%union.anon.18 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE24EEEENS_19CSSParserTokenRangeEv = comdat any

$_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

@.str = private unnamed_addr constant [4 x i8] c"not\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF10StringImpl12empty16_bit_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink18g_static_eof_tokenE = external local_unnamed_addr constant %"class.blink::CSSParserToken"*, align 8
@.str.3 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserToken]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17CSSSupportsParser24ConsumeSupportsConditionERNS_20CSSParserTokenStreamERNS_13CSSParserImplE(%"class.blink::CSSParserTokenStream"* dereferenceable(832), %"class.blink::CSSParserImpl"* dereferenceable(6192)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSSupportsParser", align 8
  tail call void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"* %0) #8
  %4 = bitcast %"class.blink::CSSSupportsParser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.blink::CSSSupportsParser", %"class.blink::CSSSupportsParser"* %3, i64 0, i32 0
  store %"class.blink::CSSParserImpl"* %1, %"class.blink::CSSParserImpl"** %5, align 8
  %6 = call i32 @_ZN5blink17CSSSupportsParser24ConsumeSupportsConditionERNS_20CSSParserTokenStreamE(%"class.blink::CSSSupportsParser"* nonnull %3, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %0)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  ret i32 %6
}

declare void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17CSSSupportsParser24ConsumeSupportsConditionERNS_20CSSParserTokenStreamE(%"class.blink::CSSSupportsParser"* nocapture readonly, %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSParserToken", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.blink::CSSParserToken", align 8
  tail call void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"* %1) #8
  %9 = tail call zeroext i1 @_ZN5blink17CSSSupportsParser14ConsumeIfIdentERNS_20CSSParserTokenStreamEPKc(%"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0))
  %10 = tail call i32 @_ZN5blink17CSSSupportsParser23ConsumeSupportsInParensERNS_20CSSParserTokenStreamE(%"class.blink::CSSSupportsParser"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  br i1 %9, label %11, label %14

11:                                               ; preds = %2
  switch i32 %10, label %13 [
    i32 0, label %140
    i32 1, label %12
  ]

12:                                               ; preds = %11
  br label %140

13:                                               ; preds = %11
  br label %140

14:                                               ; preds = %2
  tail call void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"* %1) #8
  %15 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %14
  store i8 1, i8* %15, align 4
  %19 = bitcast %"class.blink::CSSParserToken"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %21 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %20, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %8, %"class.blink::CSSTokenizer"* %21) #8
  %22 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %23 = bitcast %"class.blink::CSSParserToken"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* nonnull align 8 %19, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #8
  br label %24

24:                                               ; preds = %14, %18
  %25 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %26 = bitcast %"class.blink::CSSParserToken"* %25 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 63
  %29 = icmp eq i32 %28, 0
  %30 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #8
  %31 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  br i1 %29, label %33, label %32

32:                                               ; preds = %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #8
  br label %79

33:                                               ; preds = %24
  %34 = and i32 %27, 262144
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2, i32 2
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8, !noalias !3
  %39 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2, i32 1
  %40 = load i32, i32* %39, align 4, !noalias !3
  br i1 %35, label %46, label %41

41:                                               ; preds = %33
  %42 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !3
  %43 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %42, i64* %43, align 8, !alias.scope !3
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %38, i64* %45, align 8, !alias.scope !3
  br label %52

46:                                               ; preds = %33
  %47 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8, !noalias !3
  %48 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %47, i64* %48, align 8, !alias.scope !3
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %50 = bitcast i8** %49 to i64*
  store i64 %38, i64* %50, align 8, !alias.scope !3
  %51 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %52

52:                                               ; preds = %46, %41
  %53 = phi i64 [ %51, %46 ], [ %42, %41 ]
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %40, i32* %54, align 8, !alias.scope !3
  %55 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %53, i64* %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8** %56, align 8
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 3, i32* %57, align 8
  %58 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #8
  br i1 %58, label %59, label %79

59:                                               ; preds = %52
  call void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"* %1) #8
  %60 = call zeroext i1 @_ZN5blink17CSSSupportsParser14ConsumeIfIdentERNS_20CSSParserTokenStreamEPKc(%"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  br i1 %60, label %61, label %140

61:                                               ; preds = %59, %76
  %62 = phi i32 [ %77, %76 ], [ %10, %59 ]
  %63 = call i32 @_ZN5blink17CSSSupportsParser23ConsumeSupportsInParensERNS_20CSSParserTokenStreamE(%"class.blink::CSSSupportsParser"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  %64 = icmp eq i32 %62, 3
  %65 = icmp eq i32 %63, 3
  %66 = or i1 %64, %65
  br i1 %66, label %76, label %67

67:                                               ; preds = %61
  %68 = icmp eq i32 %62, 2
  %69 = icmp eq i32 %63, 2
  %70 = and i1 %68, %69
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = icmp eq i32 %62, 1
  %73 = icmp eq i32 %63, 1
  %74 = and i1 %72, %73
  %75 = zext i1 %74 to i32
  br label %76

76:                                               ; preds = %61, %67, %71
  %77 = phi i32 [ 3, %61 ], [ 2, %67 ], [ %75, %71 ]
  call void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"* %1) #8
  %78 = call zeroext i1 @_ZN5blink17CSSSupportsParser14ConsumeIfIdentERNS_20CSSParserTokenStreamEPKc(%"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  br i1 %78, label %61, label %140

79:                                               ; preds = %32, %52
  %80 = load i8, i8* %15, align 4, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %87

82:                                               ; preds = %79
  store i8 1, i8* %15, align 4
  %83 = bitcast %"class.blink::CSSParserToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #8
  %84 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %85 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %84, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %3, %"class.blink::CSSTokenizer"* %85) #8
  %86 = bitcast %"class.blink::CSSParserToken"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* nonnull align 8 %83, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #8
  br label %87

87:                                               ; preds = %79, %82
  %88 = load i32, i32* %26, align 8
  %89 = and i32 %88, 63
  %90 = icmp eq i32 %89, 0
  %91 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #8
  %92 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #8
  br i1 %90, label %94, label %93

93:                                               ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #8
  br label %140

94:                                               ; preds = %87
  %95 = and i32 %88, 262144
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2, i32 2
  %98 = bitcast i8** %97 to i64*
  %99 = load i64, i64* %98, align 8, !noalias !6
  %100 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2, i32 1
  %101 = load i32, i32* %100, align 4, !noalias !6
  br i1 %96, label %107, label %102

102:                                              ; preds = %94
  %103 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !6
  %104 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %103, i64* %104, align 8, !alias.scope !6
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %106 = bitcast i8** %105 to i64*
  store i64 %99, i64* %106, align 8, !alias.scope !6
  br label %113

107:                                              ; preds = %94
  %108 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8, !noalias !6
  %109 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %108, i64* %109, align 8, !alias.scope !6
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %111 = bitcast i8** %110 to i64*
  store i64 %99, i64* %111, align 8, !alias.scope !6
  %112 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %113

113:                                              ; preds = %107, %102
  %114 = phi i64 [ %112, %107 ], [ %103, %102 ]
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %101, i32* %115, align 8, !alias.scope !6
  %116 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %114, i64* %116, align 8
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8** %117, align 8
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 2, i32* %118, align 8
  %119 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #8
  br i1 %119, label %120, label %140

120:                                              ; preds = %113
  call void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"* %1) #8
  %121 = call zeroext i1 @_ZN5blink17CSSSupportsParser14ConsumeIfIdentERNS_20CSSParserTokenStreamEPKc(%"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0))
  br i1 %121, label %122, label %140

122:                                              ; preds = %120, %137
  %123 = phi i32 [ %138, %137 ], [ %10, %120 ]
  %124 = call i32 @_ZN5blink17CSSSupportsParser23ConsumeSupportsInParensERNS_20CSSParserTokenStreamE(%"class.blink::CSSSupportsParser"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  %125 = icmp eq i32 %123, 3
  %126 = icmp eq i32 %124, 3
  %127 = or i1 %125, %126
  br i1 %127, label %137, label %128

128:                                              ; preds = %122
  %129 = icmp eq i32 %123, 1
  %130 = icmp eq i32 %124, 1
  %131 = or i1 %129, %130
  br i1 %131, label %137, label %132

132:                                              ; preds = %128
  %133 = icmp eq i32 %123, 2
  %134 = icmp eq i32 %124, 2
  %135 = or i1 %133, %134
  %136 = select i1 %135, i32 2, i32 0
  br label %137

137:                                              ; preds = %122, %128, %132
  %138 = phi i32 [ 3, %122 ], [ 1, %128 ], [ %136, %132 ]
  call void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"* %1) #8
  %139 = call zeroext i1 @_ZN5blink17CSSSupportsParser14ConsumeIfIdentERNS_20CSSParserTokenStreamEPKc(%"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0))
  br i1 %139, label %122, label %140

140:                                              ; preds = %137, %76, %120, %59, %93, %13, %12, %11, %113
  %141 = phi i32 [ %10, %113 ], [ 0, %12 ], [ %10, %13 ], [ 1, %11 ], [ %10, %93 ], [ %10, %59 ], [ %10, %120 ], [ %77, %76 ], [ %138, %137 ]
  ret i32 %141
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17CSSSupportsParser7AtIdentERKNS_14CSSParserTokenEPKc(%"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24), i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 63
  %8 = icmp eq i32 %7, 0
  %9 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8
  %10 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  br i1 %8, label %11, label %40

11:                                               ; preds = %2
  %12 = and i32 %6, 262144
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 2
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8, !noalias !9
  %17 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 4, !noalias !9
  %19 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %20 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %21 = select i1 %13, i64 %19, i64 %20
  %22 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %21, i64* %22, align 8, !alias.scope !9
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %24 = bitcast i8** %23 to i64*
  store i64 %16, i64* %24, align 8, !alias.scope !9
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %18, i32* %25, align 8, !alias.scope !9
  %26 = icmp eq i8* %1, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %11
  %28 = tail call i64 @strlen(i8* nonnull %1) #9
  %29 = icmp ult i64 %28, 4294967296
  br i1 %29, label %31, label %30, !prof !12

30:                                               ; preds = %27
  tail call void @llvm.trap() #8
  unreachable

31:                                               ; preds = %27
  %32 = trunc i64 %28 to i32
  br label %33

33:                                               ; preds = %11, %31
  %34 = phi i32 [ %32, %31 ], [ 0, %11 ]
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %36 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* %1, i8** %37, align 8
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %34, i32* %38, align 8
  %39 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #8
  br label %40

40:                                               ; preds = %33, %2
  %41 = phi i1 [ false, %2 ], [ %39, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8
  ret i1 %41
}

declare zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17CSSSupportsParser14ConsumeIfIdentERNS_20CSSParserTokenStreamEPKc(%"class.blink::CSSParserTokenStream"* dereferenceable(832), i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = alloca %"class.blink::CSSParserToken", align 8
  %7 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 4
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  store i8 1, i8* %7, align 4
  %11 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %13 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %12, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %13) #8
  %14 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::CSSParserToken"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* nonnull align 8 %11, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8
  br label %16

16:                                               ; preds = %2, %10
  %17 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %18 = bitcast %"class.blink::CSSParserToken"* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 63
  %21 = icmp eq i32 %20, 0
  %22 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #8
  %23 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #8
  br i1 %21, label %25, label %24

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #8
  br label %56

25:                                               ; preds = %16
  %26 = and i32 %19, 262144
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2, i32 2
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8, !noalias !13
  %31 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2, i32 1
  %32 = load i32, i32* %31, align 4, !noalias !13
  %33 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %35 = select i1 %27, i64 %33, i64 %34
  %36 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %35, i64* %36, align 8, !alias.scope !13
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %38 = bitcast i8** %37 to i64*
  store i64 %30, i64* %38, align 8, !alias.scope !13
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %32, i32* %39, align 8, !alias.scope !13
  %40 = icmp eq i8* %1, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %25
  %42 = call i64 @strlen(i8* nonnull %1) #9
  %43 = icmp ult i64 %42, 4294967296
  br i1 %43, label %45, label %44, !prof !12

44:                                               ; preds = %41
  call void @llvm.trap() #8
  unreachable

45:                                               ; preds = %41
  %46 = trunc i64 %42 to i32
  br label %47

47:                                               ; preds = %25, %45
  %48 = phi i32 [ %46, %45 ], [ 0, %25 ]
  %49 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %50 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* %1, i8** %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %48, i32* %52, align 8
  %53 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #8
  br i1 %53, label %54, label %59

54:                                               ; preds = %47
  %55 = bitcast %"class.blink::CSSParserToken"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #8
  call void @_ZN5blink20CSSParserTokenStream26ConsumeIncludingWhitespaceEv(%"class.blink::CSSParserToken"* nonnull sret %6, %"class.blink::CSSParserTokenStream"* %0) #8
  br label %56

56:                                               ; preds = %54, %24
  %57 = phi i8* [ %22, %24 ], [ %55, %54 ]
  %58 = phi i1 [ false, %24 ], [ true, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #8
  br label %59

59:                                               ; preds = %56, %47
  %60 = phi i1 [ false, %47 ], [ %58, %56 ]
  ret i1 %60
}

declare void @_ZN5blink20CSSParserTokenStream26ConsumeIncludingWhitespaceEv(%"class.blink::CSSParserToken"* sret, %"class.blink::CSSParserTokenStream"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17CSSSupportsParser23ConsumeSupportsInParensERNS_20CSSParserTokenStreamE(%"class.blink::CSSSupportsParser"* nocapture readonly, %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSParserToken", align 8
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = alloca %"class.blink::CSSParserToken", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.blink::CSSParserToken", align 8
  %10 = alloca %"class.blink::CSSParserToken", align 8
  %11 = alloca %"class.blink::CSSParserToken", align 8
  %12 = alloca %"class.blink::CSSParserToken", align 8
  %13 = bitcast %"class.blink::CSSParserToken"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %12, i64 0, i32 0
  store i24 -5592406, i24* %14, align 8
  %15 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %12, i64 0, i32 1
  store i32 -1431655766, i32* %15, align 4
  %16 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %12, i64 0, i32 2
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %16, align 8
  %17 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %12, i64 0, i32 3, i32 0
  store double 0xFFFFFFFFFFFFFFFF, double* %17, align 8
  %18 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %2
  store i8 1, i8* %18, align 4
  %22 = bitcast %"class.blink::CSSParserToken"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #8
  %23 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %24 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %23, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %11, %"class.blink::CSSTokenizer"* %24) #8
  %25 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %26 = bitcast %"class.blink::CSSParserToken"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %22, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #8
  br label %27

27:                                               ; preds = %2, %21
  %28 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %29 = bitcast %"class.blink::CSSParserToken"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %29, i64 24, i1 false)
  %30 = bitcast %"class.blink::CSSParserToken"* %12 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 63
  switch i32 %32, label %193 [
    i32 23, label %33
    i32 1, label %33
  ]

33:                                               ; preds = %27, %27
  %34 = load i8, i8* %18, align 4, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %33
  store i8 1, i8* %18, align 4
  %37 = bitcast %"class.blink::CSSParserToken"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #8
  %38 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %39 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %38, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %10, %"class.blink::CSSTokenizer"* %39) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %37, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #8
  br label %40

40:                                               ; preds = %33, %36
  store i8 0, i8* %18, align 4
  %41 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %42 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %42, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %42, i64 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = load i32, i32* %43, align 4
  %47 = icmp ult i32 %45, %46
  %48 = select i1 %47, i32 %45, i32 %46
  %49 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %48, i32* %49, align 8
  %50 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* %1) #8
  call void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"* %1) #8
  %51 = load i8, i8* %18, align 4, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %40
  store i8 1, i8* %18, align 4
  %54 = bitcast %"class.blink::CSSParserToken"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #8
  %55 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %41, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %9, %"class.blink::CSSTokenizer"* %55) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %54, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #8
  br label %56

56:                                               ; preds = %40, %53
  %57 = load i32, i32* %30, align 8
  %58 = and i32 %57, 63
  %59 = icmp eq i32 %58, 23
  br i1 %59, label %60, label %118

60:                                               ; preds = %56
  %61 = bitcast %"class.blink::CSSParserToken"* %28 to i32*
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, 63
  %64 = icmp eq i32 %63, 0
  %65 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #8
  %66 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #8
  br i1 %64, label %68, label %67

67:                                               ; preds = %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #8
  br label %97

68:                                               ; preds = %60
  %69 = and i32 %62, 262144
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2, i32 2
  %72 = bitcast i8** %71 to i64*
  %73 = load i64, i64* %72, align 8, !noalias !16
  %74 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2, i32 1
  %75 = load i32, i32* %74, align 4, !noalias !16
  br i1 %70, label %81, label %76

76:                                               ; preds = %68
  %77 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !16
  %78 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %77, i64* %78, align 8, !alias.scope !16
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %80 = bitcast i8** %79 to i64*
  store i64 %73, i64* %80, align 8, !alias.scope !16
  br label %87

81:                                               ; preds = %68
  %82 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8, !noalias !16
  %83 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %82, i64* %83, align 8, !alias.scope !16
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %85 = bitcast i8** %84 to i64*
  store i64 %73, i64* %85, align 8, !alias.scope !16
  %86 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %87

87:                                               ; preds = %81, %76
  %88 = phi i64 [ %86, %81 ], [ %77, %76 ]
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %75, i32* %89, align 8, !alias.scope !16
  %90 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8** %91, align 8
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 3, i32* %92, align 8
  %93 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #8
  br i1 %93, label %99, label %94

94:                                               ; preds = %87
  %95 = load i32, i32* %61, align 8
  %96 = and i32 %95, 63
  br label %97

97:                                               ; preds = %67, %94
  %98 = phi i32 [ %96, %94 ], [ %63, %67 ]
  switch i32 %98, label %118 [
    i32 23, label %99
    i32 1, label %99
  ]

99:                                               ; preds = %97, %97, %87
  %100 = call i32 @_ZN5blink17CSSSupportsParser24ConsumeSupportsConditionERNS_20CSSParserTokenStreamE(%"class.blink::CSSSupportsParser"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  %101 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* %1) #8
  %102 = add i32 %50, -1
  %103 = icmp eq i32 %101, %102
  br i1 %103, label %117, label %104

104:                                              ; preds = %99
  %105 = load i8, i8* %18, align 4, !range !2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %104
  store i8 1, i8* %18, align 4
  %108 = bitcast %"class.blink::CSSParserToken"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #8
  %109 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %41, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %6, %"class.blink::CSSTokenizer"* %109) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %108, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #8
  br label %110

110:                                              ; preds = %104, %107
  %111 = load i32, i32* %61, align 8
  %112 = and i32 %111, 63
  %113 = icmp eq i32 %112, 31
  %114 = and i32 %111, 192
  %115 = icmp eq i32 %114, 128
  %116 = or i1 %113, %115
  br i1 %116, label %117, label %185

117:                                              ; preds = %99, %110
  br label %185

118:                                              ; preds = %97, %56
  %119 = load i8, i8* %18, align 4, !range !2
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %118
  store i8 1, i8* %18, align 4
  %122 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #8
  %123 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %41, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %123) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %122, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #8
  br label %124

124:                                              ; preds = %118, %121
  %125 = load i32, i32* %30, align 8
  %126 = and i32 %125, 63
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %128, label %133

128:                                              ; preds = %124
  %129 = call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* nonnull %12) #8
  %130 = icmp eq i32 %129, 856
  br i1 %130, label %141, label %131

131:                                              ; preds = %128
  %132 = load i32, i32* %30, align 8
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %125, %124 ]
  %135 = and i32 %134, 63
  switch i32 %135, label %185 [
    i32 23, label %136
    i32 1, label %161
  ]

136:                                              ; preds = %133
  %137 = bitcast %"class.blink::CSSParserToken"* %28 to i32*
  %138 = load i32, i32* %137, align 8
  %139 = and i32 %138, 63
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %161

141:                                              ; preds = %128, %136
  %142 = call i32 @_ZN5blink17CSSSupportsParser22ConsumeSupportsFeatureERKNS_14CSSParserTokenERNS_20CSSParserTokenStreamE(%"class.blink::CSSSupportsParser"* %0, %"class.blink::CSSParserToken"* nonnull dereferenceable(24) %12, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  %143 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* %1) #8
  %144 = add i32 %50, -1
  %145 = icmp eq i32 %143, %144
  br i1 %145, label %160, label %146

146:                                              ; preds = %141
  %147 = load i8, i8* %18, align 4, !range !2
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %149, label %152

149:                                              ; preds = %146
  store i8 1, i8* %18, align 4
  %150 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #8
  %151 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %41, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %151) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %150, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #8
  br label %152

152:                                              ; preds = %146, %149
  %153 = bitcast %"class.blink::CSSParserToken"* %28 to i32*
  %154 = load i32, i32* %153, align 8
  %155 = and i32 %154, 63
  %156 = icmp eq i32 %155, 31
  %157 = and i32 %154, 192
  %158 = icmp eq i32 %157, 128
  %159 = or i1 %156, %158
  br i1 %159, label %160, label %185

160:                                              ; preds = %141, %152
  br label %185

161:                                              ; preds = %133, %136
  %162 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE24EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %1) #8
  %163 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %162, 0
  %164 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %162, 1
  %165 = icmp eq %"class.blink::CSSParserToken"* %163, %164
  br i1 %165, label %185, label %166

166:                                              ; preds = %161
  %167 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  br label %168

168:                                              ; preds = %178, %166
  %169 = phi %"class.blink::CSSParserToken"* [ %181, %178 ], [ %163, %166 ]
  %170 = icmp ult %"class.blink::CSSParserToken"* %169, %164
  %171 = select i1 %170, %"class.blink::CSSParserToken"* %169, %"class.blink::CSSParserToken"* %167
  %172 = bitcast %"class.blink::CSSParserToken"* %171 to i32*
  %173 = load i32, i32* %172, align 8
  %174 = and i32 %173, 63
  switch i32 %174, label %178 [
    i32 30, label %182
    i32 31, label %182
    i32 5, label %182
    i32 24, label %175
    i32 26, label %175
    i32 28, label %175
  ]

175:                                              ; preds = %168, %168, %168
  %176 = and i32 %173, 192
  %177 = icmp eq i32 %176, 128
  br i1 %177, label %178, label %182

178:                                              ; preds = %175, %168
  %179 = icmp eq %"class.blink::CSSParserToken"* %169, %164
  %180 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %169, i64 1
  %181 = select i1 %179, %"class.blink::CSSParserToken"* %164, %"class.blink::CSSParserToken"* %180
  br label %168

182:                                              ; preds = %175, %168, %168, %168
  %183 = icmp eq %"class.blink::CSSParserToken"* %169, %164
  br i1 %183, label %184, label %185

184:                                              ; preds = %182
  call void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"* %1) #8
  br label %185

185:                                              ; preds = %133, %161, %182, %184, %160, %152, %117, %110
  %186 = phi i32 [ %100, %117 ], [ 3, %110 ], [ %142, %160 ], [ 3, %152 ], [ 0, %184 ], [ 3, %182 ], [ 3, %161 ], [ 3, %133 ]
  %187 = load i8, i8* %18, align 4, !range !2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %189, label %192

189:                                              ; preds = %185
  store i8 1, i8* %18, align 4
  %190 = bitcast %"class.blink::CSSParserToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %190) #8
  %191 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %41, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %3, %"class.blink::CSSTokenizer"* %191) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %190, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %190) #8
  br label %192

192:                                              ; preds = %185, %189
  call void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"* %1) #8
  br label %193

193:                                              ; preds = %27, %192
  %194 = phi i32 [ %186, %192 ], [ 3, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8
  ret i32 %194
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink17CSSSupportsParser18IsSupportsInParensERKNS_14CSSParserTokenE(%"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 63
  %5 = icmp eq i32 %4, 23
  %6 = icmp eq i32 %4, 1
  %7 = or i1 %5, %6
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17CSSSupportsParser27IsEnclosedSupportsConditionERKNS_14CSSParserTokenES3_(%"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24), %"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 63
  %8 = icmp eq i32 %7, 23
  br i1 %8, label %9, label %51

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::CSSParserToken"* %1 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 63
  %13 = icmp eq i32 %12, 0
  %14 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8
  %15 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  br i1 %13, label %17, label %16

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8
  br label %46

17:                                               ; preds = %9
  %18 = and i32 %11, 262144
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %1, i64 0, i32 2
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8, !noalias !19
  %23 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %1, i64 0, i32 1
  %24 = load i32, i32* %23, align 4, !noalias !19
  br i1 %19, label %30, label %25

25:                                               ; preds = %17
  %26 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !19
  %27 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %26, i64* %27, align 8, !alias.scope !19
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %29 = bitcast i8** %28 to i64*
  store i64 %22, i64* %29, align 8, !alias.scope !19
  br label %36

30:                                               ; preds = %17
  %31 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8, !noalias !19
  %32 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %31, i64* %32, align 8, !alias.scope !19
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %34 = bitcast i8** %33 to i64*
  store i64 %22, i64* %34, align 8, !alias.scope !19
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %36

36:                                               ; preds = %30, %25
  %37 = phi i64 [ %35, %30 ], [ %26, %25 ]
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %24, i32* %38, align 8, !alias.scope !19
  %39 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %37, i64* %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8** %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 3, i32* %41, align 8
  %42 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8
  br i1 %42, label %51, label %43

43:                                               ; preds = %36
  %44 = load i32, i32* %10, align 8
  %45 = and i32 %44, 63
  br label %46

46:                                               ; preds = %43, %16
  %47 = phi i32 [ %45, %43 ], [ %12, %16 ]
  %48 = icmp eq i32 %47, 23
  %49 = icmp eq i32 %47, 1
  %50 = or i1 %48, %49
  ret i1 %50

51:                                               ; preds = %36, %2
  %52 = phi i1 [ false, %2 ], [ true, %36 ]
  ret i1 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17CSSSupportsParser20IsSupportsSelectorFnERKNS_14CSSParserTokenES3_(%"class.blink::CSSParserToken"* dereferenceable(24), %"class.blink::CSSParserToken"* nocapture readnone dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 63
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = tail call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* %0) #8
  %9 = icmp eq i32 %8, 856
  br label %10

10:                                               ; preds = %7, %2
  %11 = phi i1 [ false, %2 ], [ %9, %7 ]
  ret i1 %11
}

declare i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink17CSSSupportsParser14IsSupportsDeclERKNS_14CSSParserTokenES3_(%"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24), %"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %3 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 63
  %6 = icmp eq i32 %5, 23
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::CSSParserToken"* %1 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 63
  %11 = icmp eq i32 %10, 0
  br label %12

12:                                               ; preds = %7, %2
  %13 = phi i1 [ false, %2 ], [ %11, %7 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17CSSSupportsParser17IsSupportsFeatureERKNS_14CSSParserTokenES3_(%"class.blink::CSSParserToken"* dereferenceable(24), %"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 63
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = tail call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* %0) #8
  %9 = icmp eq i32 %8, 856
  br i1 %9, label %21, label %10

10:                                               ; preds = %7
  %11 = load i32, i32* %3, align 8
  br label %12

12:                                               ; preds = %10, %2
  %13 = phi i32 [ %11, %10 ], [ %4, %2 ]
  %14 = and i32 %13, 63
  %15 = icmp eq i32 %14, 23
  br i1 %15, label %16, label %21

16:                                               ; preds = %12
  %17 = bitcast %"class.blink::CSSParserToken"* %1 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 63
  %20 = icmp eq i32 %19, 0
  br label %21

21:                                               ; preds = %16, %12, %7
  %22 = phi i1 [ true, %7 ], [ false, %12 ], [ %20, %16 ]
  ret i1 %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink17CSSSupportsParser17IsGeneralEnclosedERKNS_14CSSParserTokenE(%"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 63
  %5 = icmp eq i32 %4, 23
  %6 = icmp eq i32 %4, 1
  %7 = or i1 %5, %6
  ret i1 %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17CSSSupportsParser22ConsumeSupportsFeatureERKNS_14CSSParserTokenERNS_20CSSParserTokenStreamE(%"class.blink::CSSSupportsParser"* nocapture readonly, %"class.blink::CSSParserToken"* dereferenceable(24), %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 4
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %3
  store i8 1, i8* %6, align 4
  %10 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 1
  %12 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %11, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %12) #8
  %13 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 2
  %14 = bitcast %"class.blink::CSSParserToken"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* nonnull align 8 %10, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  br label %15

15:                                               ; preds = %3, %9
  %16 = bitcast %"class.blink::CSSParserToken"* %1 to i32*
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 63
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %33

20:                                               ; preds = %15
  %21 = call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* %1) #8
  %22 = icmp eq i32 %21, 856
  br i1 %22, label %23, label %33

23:                                               ; preds = %20
  %24 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE24EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %2) #8
  %25 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %24, 0
  %26 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %24, 1
  %27 = getelementptr inbounds %"class.blink::CSSSupportsParser", %"class.blink::CSSSupportsParser"* %0, i64 0, i32 0
  %28 = load %"class.blink::CSSParserImpl"*, %"class.blink::CSSParserImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %28, i64 0, i32 1
  %30 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %29, align 8
  %31 = call zeroext i1 @_ZN5blink17CSSSelectorParser23SupportsComplexSelectorENS_19CSSParserTokenRangeEPKNS_16CSSParserContextE(%"class.blink::CSSParserToken"* %25, %"class.blink::CSSParserToken"* %26, %"class.blink::CSSParserContext"* %30) #8
  %32 = zext i1 %31 to i32
  br label %57

33:                                               ; preds = %15, %20
  %34 = load i8, i8* %6, align 4, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %33
  store i8 1, i8* %6, align 4
  %37 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #8
  %38 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 1
  %39 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %38, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %39) #8
  %40 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 2
  %41 = bitcast %"class.blink::CSSParserToken"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 8 %37, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #8
  br label %42

42:                                               ; preds = %36, %33
  %43 = load i32, i32* %16, align 8
  %44 = and i32 %43, 63
  %45 = icmp eq i32 %44, 23
  br i1 %45, label %46, label %57

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 2
  %48 = bitcast %"class.blink::CSSParserToken"* %47 to i32*
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, 63
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %57

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::CSSSupportsParser", %"class.blink::CSSSupportsParser"* %0, i64 0, i32 0
  %54 = load %"class.blink::CSSParserImpl"*, %"class.blink::CSSParserImpl"** %53, align 8
  %55 = call zeroext i1 @_ZN5blink13CSSParserImpl26ConsumeSupportsDeclarationERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"* %54, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %2) #8
  %56 = zext i1 %55 to i32
  br label %57

57:                                               ; preds = %52, %46, %42, %23
  %58 = phi i32 [ %32, %23 ], [ 3, %46 ], [ %56, %52 ], [ 3, %42 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17CSSSupportsParser22ConsumeGeneralEnclosedERKNS_14CSSParserTokenERNS_20CSSParserTokenStreamE(%"class.blink::CSSSupportsParser"* nocapture readnone, %"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24), %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::CSSParserToken"* %1 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 63
  switch i32 %6, label %31 [
    i32 23, label %7
    i32 1, label %7
  ]

7:                                                ; preds = %3, %3
  %8 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE24EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %2)
  %9 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %8, 0
  %10 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %8, 1
  %11 = icmp eq %"class.blink::CSSParserToken"* %9, %10
  br i1 %11, label %31, label %12

12:                                               ; preds = %7
  %13 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  br label %14

14:                                               ; preds = %24, %12
  %15 = phi %"class.blink::CSSParserToken"* [ %27, %24 ], [ %9, %12 ]
  %16 = icmp ult %"class.blink::CSSParserToken"* %15, %10
  %17 = select i1 %16, %"class.blink::CSSParserToken"* %15, %"class.blink::CSSParserToken"* %13
  %18 = bitcast %"class.blink::CSSParserToken"* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 63
  switch i32 %20, label %24 [
    i32 30, label %28
    i32 31, label %28
    i32 5, label %28
    i32 24, label %21
    i32 26, label %21
    i32 28, label %21
  ]

21:                                               ; preds = %14, %14, %14
  %22 = and i32 %19, 192
  %23 = icmp eq i32 %22, 128
  br i1 %23, label %24, label %28

24:                                               ; preds = %21, %14
  %25 = icmp eq %"class.blink::CSSParserToken"* %15, %10
  %26 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %15, i64 1
  %27 = select i1 %25, %"class.blink::CSSParserToken"* %10, %"class.blink::CSSParserToken"* %26
  br label %14

28:                                               ; preds = %14, %14, %14, %21
  %29 = icmp eq %"class.blink::CSSParserToken"* %15, %10
  br i1 %29, label %30, label %31

30:                                               ; preds = %28
  tail call void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"* %2) #8
  br label %31

31:                                               ; preds = %3, %30, %28, %7
  %32 = phi i32 [ 3, %3 ], [ 2, %30 ], [ 3, %28 ], [ 3, %7 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17CSSSupportsParser25ConsumeSupportsSelectorFnERKNS_14CSSParserTokenERNS_20CSSParserTokenStreamE(%"class.blink::CSSSupportsParser"* nocapture readonly, %"class.blink::CSSParserToken"* nocapture readnone dereferenceable(24), %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %4 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE24EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %2)
  %5 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %4, 0
  %6 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %4, 1
  %7 = getelementptr inbounds %"class.blink::CSSSupportsParser", %"class.blink::CSSSupportsParser"* %0, i64 0, i32 0
  %8 = load %"class.blink::CSSParserImpl"*, %"class.blink::CSSParserImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %8, i64 0, i32 1
  %10 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %9, align 8
  %11 = tail call zeroext i1 @_ZN5blink17CSSSelectorParser23SupportsComplexSelectorENS_19CSSParserTokenRangeEPKNS_16CSSParserContextE(%"class.blink::CSSParserToken"* %5, %"class.blink::CSSParserToken"* %6, %"class.blink::CSSParserContext"* %10) #8
  %12 = zext i1 %11 to i32
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17CSSSupportsParser19ConsumeSupportsDeclERKNS_14CSSParserTokenERNS_20CSSParserTokenStreamE(%"class.blink::CSSSupportsParser"* nocapture readonly, %"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24), %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 4
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  store i8 1, i8* %5, align 4
  %9 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 1
  %11 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %11) #8
  %12 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 2
  %13 = bitcast %"class.blink::CSSParserToken"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* nonnull align 8 %9, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8
  br label %14

14:                                               ; preds = %3, %8
  %15 = bitcast %"class.blink::CSSParserToken"* %1 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 63
  %18 = icmp eq i32 %17, 23
  br i1 %18, label %19, label %30

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 2
  %21 = bitcast %"class.blink::CSSParserToken"* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 63
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::CSSSupportsParser", %"class.blink::CSSSupportsParser"* %0, i64 0, i32 0
  %27 = load %"class.blink::CSSParserImpl"*, %"class.blink::CSSParserImpl"** %26, align 8
  %28 = call zeroext i1 @_ZN5blink13CSSParserImpl26ConsumeSupportsDeclarationERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"* %27, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %2) #8
  %29 = zext i1 %28 to i32
  br label %30

30:                                               ; preds = %14, %25, %19
  %31 = phi i32 [ 3, %19 ], [ %29, %25 ], [ 3, %14 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE24EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::CSSParserToken", align 8
  %3 = alloca %"class.blink::CSSParserToken", align 8
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 4
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  store i8 1, i8* %4, align 4
  %8 = bitcast %"class.blink::CSSParserToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %10 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %9, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %3, %"class.blink::CSSTokenizer"* %10) #8
  %11 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %12 = bitcast %"class.blink::CSSParserToken"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* nonnull align 8 %8, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8
  br label %13

13:                                               ; preds = %1, %7
  %14 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %17 = bitcast %"class.blink::CSSParserToken"* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 192
  %20 = icmp eq i32 %19, 128
  br i1 %20, label %86, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 3
  %24 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.blink::CSSParserToken"* %16 to i8*
  %27 = bitcast %"class.blink::CSSParserToken"* %2 to i8*
  br label %31

28:                                               ; preds = %76
  %29 = and i32 %77, 192
  %30 = icmp eq i32 %29, 128
  br i1 %30, label %83, label %31

31:                                               ; preds = %21, %28
  %32 = phi i32 [ %18, %21 ], [ %77, %28 ]
  %33 = and i32 %32, 63
  switch i32 %33, label %34 [
    i32 31, label %83
    i32 24, label %83
  ]

34:                                               ; preds = %31, %76
  %35 = phi i32 [ %77, %76 ], [ %32, %31 ]
  %36 = phi i32 [ %78, %76 ], [ %32, %31 ]
  %37 = phi i32 [ %70, %76 ], [ 0, %31 ]
  store i8 0, i8* %4, align 4
  %38 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %22, align 8
  %39 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %38, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %38, i64 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = load i32, i32* %39, align 4
  %43 = icmp ult i32 %41, %42
  %44 = select i1 %43, i32 %41, i32 %42
  store i32 %44, i32* %23, align 8
  %45 = load i32, i32* %15, align 4
  %46 = load i32, i32* %24, align 8
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %55, label %48, !prof !22

48:                                               ; preds = %34
  %49 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %25, align 8
  %50 = zext i32 %45 to i64
  %51 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %49, i64 %50
  %52 = bitcast %"class.blink::CSSParserToken"* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %26, i64 24, i1 false) #8
  %53 = load i32, i32* %15, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %15, align 4
  br label %57

55:                                               ; preds = %34
  call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector"* %14, %"class.blink::CSSParserToken"* dereferenceable(24) %16) #8
  %56 = load i32, i32* %17, align 8
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %35, %48 ]
  %59 = phi i32 [ %56, %55 ], [ %36, %48 ]
  %60 = lshr i32 %59, 6
  %61 = and i32 %60, 3
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  %64 = add i32 %37, 1
  br label %69

65:                                               ; preds = %57
  %66 = icmp eq i32 %61, 2
  %67 = zext i1 %66 to i32
  %68 = sub i32 %37, %67
  br label %69

69:                                               ; preds = %65, %63
  %70 = phi i32 [ %64, %63 ], [ %68, %65 ]
  %71 = load i8, i8* %4, align 4, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %69
  store i8 1, i8* %4, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #8
  %74 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %22, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %2, %"class.blink::CSSTokenizer"* %74) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %27, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #8
  %75 = load i32, i32* %17, align 8
  br label %76

76:                                               ; preds = %73, %69
  %77 = phi i32 [ %58, %69 ], [ %75, %73 ]
  %78 = phi i32 [ %59, %69 ], [ %75, %73 ]
  %79 = and i32 %78, 63
  %80 = icmp ne i32 %79, 31
  %81 = icmp ne i32 %70, 0
  %82 = and i1 %81, %80
  br i1 %82, label %34, label %28

83:                                               ; preds = %31, %31, %28
  %84 = load i32, i32* %15, align 4
  %85 = zext i32 %84 to i64
  br label %86

86:                                               ; preds = %83, %13
  %87 = phi i64 [ %85, %83 ], [ 0, %13 ]
  %88 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %89, i64 %87
  %91 = insertvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } undef, %"class.blink::CSSParserToken"* %89, 0
  %92 = insertvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %91, %"class.blink::CSSParserToken"* %90, 1
  ret { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %92
}

declare zeroext i1 @_ZN5blink17CSSSelectorParser23SupportsComplexSelectorENS_19CSSParserTokenRangeEPKNS_16CSSParserContextE(%"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserContext"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink13CSSParserImpl26ConsumeSupportsDeclarationERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* sret, %"class.blink::CSSTokenizer"*) local_unnamed_addr #1

declare i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"*) local_unnamed_addr #1

declare void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector"*, %"class.blink::CSSParserToken"* dereferenceable(24)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %8 = icmp ugt %"class.blink::CSSParserToken"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %7, i64 %10
  %12 = icmp ugt %"class.blink::CSSParserToken"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #8
  %14 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::CSSParserToken"* %1 to i64
  %17 = ptrtoint %"class.blink::CSSParserToken"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 24
  tail call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #8
  %20 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::CSSParserToken"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::CSSParserToken"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %23, i64 %26
  %28 = bitcast %"class.blink::CSSParserToken"* %27 to i8*
  %29 = bitcast %"class.blink::CSSParserToken"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #8
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !12

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %31, align 8
  %33 = icmp eq %"class.blink::CSSParserToken"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 32
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64 %37) #8
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #8
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = udiv i64 %38, 24
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 32, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %27) #8
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 33
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %5, align 8
  %7 = icmp eq %"class.blink::CSSParserToken"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::CSSParserToken"*
  %10 = icmp eq %"class.blink::CSSParserToken"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !22

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::CSSParserToken"* %6 to i8*
  %27 = mul nuw nsw i64 %25, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #8
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %19, %"class.blink::CSSParserToken"* nonnull %6) #8
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64 %30) #8
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #8
  %33 = udiv i64 %31, 24
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::CSSParserToken"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !12

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::CSSParserToken"* %36 to i8*
  %45 = mul nuw nsw i64 %43, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #8
  %46 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::CSSParserToken"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::CSSParserToken"*
  %51 = icmp eq %"class.blink::CSSParserToken"* %48, %50
  br i1 %51, label %54, label %52, !prof !12

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %53, %"class.blink::CSSParserToken"* %48) #8
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast %"class.blink::CSSParserToken"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink14CSSParserToken5ValueEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink14CSSParserToken5ValueEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5blink14CSSParserToken5ValueEv"}
!12 = !{!"branch_weights", i32 2000, i32 1}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!15 = distinct !{!15, !"_ZNK5blink14CSSParserToken5ValueEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!18 = distinct !{!18, !"_ZNK5blink14CSSParserToken5ValueEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!21 = distinct !{!21, !"_ZNK5blink14CSSParserToken5ValueEv"}
!22 = !{!"branch_weights", i32 1, i32 2000}
