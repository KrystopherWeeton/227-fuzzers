; ModuleID = '../../chrome/browser/extensions/api/declarative_content/content_condition.cc'
source_filename = "../../chrome/browser/extensions/api/declarative_content/content_condition.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.extensions::ContentCondition" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.extensions::ContentPredicate"* }
%"class.extensions::ContentPredicate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::unique_ptr"* }
%"class.extensions::Extension" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i64 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.18" }
%"union.absl::variant_internal::DestructibleUnionImpl.18" = type { %"union.absl::variant_internal::DestructibleUnionImpl.19" }
%"union.absl::variant_internal::DestructibleUnionImpl.19" = type { %"union.absl::variant_internal::DestructibleUnionImpl.20" }
%"union.absl::variant_internal::DestructibleUnionImpl.20" = type { %"union.absl::variant_internal::DestructibleUnionImpl.21" }
%"union.absl::variant_internal::DestructibleUnionImpl.21" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::detail::const_dict_iterator::pointer" = type { %"struct.std::__1::pair.53" }
%"struct.std::__1::pair.53" = type { %"class.std::__1::basic_string"*, %"class.base::Value"* }
%"class.base::detail::const_dict_iterator" = type { %"class.std::__1::__wrap_iter" }
%"class.std::__1::__wrap_iter" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::pair" = type opaque
%"class.base::detail::const_dict_iterator_proxy" = type { %"class.base::flat_map"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.36" }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::pair"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::DictionaryValue::Iterator" = type { %"class.base::DictionaryValue"*, %"class.base::detail::const_dict_iterator" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.extensions::ContentPredicateFactory" = type { i32 (...)** }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.52" }
%"struct.std::__1::pair.52" = type { %"class.std::__1::basic_string", %"class.extensions::ContentPredicateFactory"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN10extensions23ContentPredicateFactoryEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_21__tree_const_iteratorISB_PNS_11__tree_nodeISB_PvEElEERKT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIKN10extensions16ContentPredicateENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

@_ZN10extensions12_GLOBAL__N_119kExpectedDictionaryE = internal constant [36 x i8] c"A condition has to be a dictionary.\00", align 16
@_ZN10extensions29declarative_content_constants13kInstanceTypeE = external constant [0 x i8], align 1
@_ZN10extensions12_GLOBAL__N_129kConditionWithoutInstanceTypeE = internal constant [32 x i8] c"A condition had no instanceType\00", align 16
@_ZN10extensions29declarative_content_constants21kPageStateMatcherTypeE = external constant [0 x i8], align 1
@_ZN10extensions12_GLOBAL__N_127kExpectedOtherConditionTypeE = internal constant [65 x i8] c"Expected a condition of type declarativeContent.PageStateMatcher\00", align 16
@_ZN10extensions12_GLOBAL__N_126kUnknownConditionAttributeE = internal constant [33 x i8] c"Unknown condition attribute '%s'\00", align 16

@_ZN10extensions16ContentConditionC1ENSt3__16vectorINS1_10unique_ptrIKNS_16ContentPredicateENS1_14default_deleteIS5_EEEENS1_9allocatorIS8_EEEE = hidden unnamed_addr alias void (%"struct.extensions::ContentCondition"*, %"class.std::__1::vector"*), void (%"struct.extensions::ContentCondition"*, %"class.std::__1::vector"*)* @_ZN10extensions16ContentConditionC2ENSt3__16vectorINS1_10unique_ptrIKNS_16ContentPredicateENS1_14default_deleteIS5_EEEENS1_9allocatorIS8_EEEE
@_ZN10extensions16ContentConditionD1Ev = hidden unnamed_addr alias void (%"struct.extensions::ContentCondition"*), void (%"struct.extensions::ContentCondition"*)* @_ZN10extensions16ContentConditionD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16ContentConditionC2ENSt3__16vectorINS1_10unique_ptrIKNS_16ContentPredicateENS1_14default_deleteIS5_EEEENS1_9allocatorIS8_EEEE(%"struct.extensions::ContentCondition"* nocapture, %"class.std::__1::vector"* nocapture) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.extensions::ContentCondition"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #11
  %4 = bitcast %"class.std::__1::vector"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.extensions::ContentCondition"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.extensions::ContentCondition", %"struct.extensions::ContentCondition"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.extensions::ContentCondition", %"struct.extensions::ContentCondition"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16ContentConditionD2Ev(%"struct.extensions::ContentCondition"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::ContentCondition", %"struct.extensions::ContentCondition"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %2, align 8
  %4 = icmp eq %"class.std::__1::unique_ptr"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  %7 = getelementptr inbounds %"struct.extensions::ContentCondition", %"struct.extensions::ContentCondition"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr"* %8, %3
  br i1 %9, label %26, label %10

10:                                               ; preds = %5, %21
  %11 = phi %"class.std::__1::unique_ptr"* [ %12, %21 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 -1
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.extensions::ContentPredicate"*, %"class.extensions::ContentPredicate"** %13, align 8
  store %"class.extensions::ContentPredicate"* null, %"class.extensions::ContentPredicate"** %13, align 8
  %15 = icmp eq %"class.extensions::ContentPredicate"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.extensions::ContentPredicate"* %14 to void (%"class.extensions::ContentPredicate"*)***
  %18 = load void (%"class.extensions::ContentPredicate"*)**, void (%"class.extensions::ContentPredicate"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.extensions::ContentPredicate"*)*, void (%"class.extensions::ContentPredicate"*)** %18, i64 1
  %20 = load void (%"class.extensions::ContentPredicate"*)*, void (%"class.extensions::ContentPredicate"*)** %19, align 8
  tail call void %20(%"class.extensions::ContentPredicate"* nonnull %14) #11
  br label %21

21:                                               ; preds = %16, %10
  %22 = icmp eq %"class.std::__1::unique_ptr"* %12, %3
  br i1 %22, label %23, label %10

23:                                               ; preds = %21
  %24 = bitcast %"struct.extensions::ContentCondition"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %5
  %27 = phi i8* [ %25, %23 ], [ %6, %5 ]
  store %"class.std::__1::unique_ptr"* %3, %"class.std::__1::unique_ptr"** %7, align 8
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %1, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.extensions::ContentCondition"* @_ZN10extensions22CreateContentConditionEPKNS_9ExtensionERKNSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPNS_23ContentPredicateFactoryENS3_4lessISA_EENS8_INS3_4pairIKSA_SC_EEEEEERKN4base5ValueEPSA_(%"class.extensions::Extension"*, %"class.std::__1::map"* dereferenceable(24), %"class.base::Value"* dereferenceable(32), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %5 = alloca %"class.base::detail::const_dict_iterator::pointer", align 8
  %6 = alloca %"class.base::detail::const_dict_iterator::pointer", align 8
  %7 = alloca %"class.base::detail::const_dict_iterator", align 8
  %8 = alloca %"class.base::detail::const_dict_iterator_proxy", align 8
  %9 = alloca %"class.base::DictionaryValue"*, align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::vector", align 8
  %12 = alloca %"class.base::DictionaryValue::Iterator", align 8
  %13 = alloca %"class.std::__1::unique_ptr", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = bitcast %"class.base::DictionaryValue"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %9, align 8
  %16 = call zeroext i1 @_ZNK4base5Value15GetAsDictionaryEPPKNS_15DictionaryValueE(%"class.base::Value"* %2, %"class.base::DictionaryValue"** nonnull %9) #11
  br i1 %16, label %19, label %17

17:                                               ; preds = %4
  %18 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @_ZN10extensions12_GLOBAL__N_119kExpectedDictionaryE, i64 0, i64 0), i64 35) #11
  br label %204

19:                                               ; preds = %4
  %20 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #11
  %22 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %9, align 8
  %23 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions29declarative_content_constants13kInstanceTypeE, i64 0, i64 0)) #11
  %24 = call zeroext i1 @_ZNK4base15DictionaryValue9GetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::DictionaryValue"* %22, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions29declarative_content_constants13kInstanceTypeE, i64 0, i64 0), i64 %23, %"class.std::__1::basic_string"* nonnull %10) #11
  br i1 %24, label %28, label %25

25:                                               ; preds = %19
  %26 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN10extensions12_GLOBAL__N_129kConditionWithoutInstanceTypeE, i64 0, i64 0), i64 31) #11
  %27 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %195

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions29declarative_content_constants21kPageStateMatcherTypeE, i64 0, i64 0)) #11
  %31 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = load i64, i64* %29, align 8
  %36 = zext i8 %33 to i64
  %37 = select i1 %34, i64 %35, i64 %36
  %38 = icmp eq i64 %30, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %28
  %40 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %10, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions29declarative_content_constants21kPageStateMatcherTypeE, i64 0, i64 0), i64 %30) #11
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %28, %39
  %43 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %3, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZN10extensions12_GLOBAL__N_127kExpectedOtherConditionTypeE, i64 0, i64 0), i64 64) #11
  br label %195

44:                                               ; preds = %39
  %45 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #11
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 24, i1 false) #11
  %49 = bitcast %"class.base::DictionaryValue::Iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #11
  %50 = bitcast %"class.base::DictionaryValue::Iterator"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 16, i1 false)
  %51 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %9, align 8
  call void @_ZN4base15DictionaryValue8IteratorC1ERKS0_(%"class.base::DictionaryValue::Iterator"* nonnull %12, %"class.base::DictionaryValue"* dereferenceable(32) %51) #11
  %52 = getelementptr inbounds %"class.base::DictionaryValue::Iterator", %"class.base::DictionaryValue::Iterator"* %12, i64 0, i32 1
  %53 = bitcast %"class.base::detail::const_dict_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #11
  %54 = bitcast %"class.base::detail::const_dict_iterator_proxy"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  %55 = bitcast %"class.base::DictionaryValue::Iterator"* %12 to %"class.base::Value"**
  %56 = load %"class.base::Value"*, %"class.base::Value"** %55, align 8
  %57 = call %"class.base::flat_map"* @_ZNK4base5Value9DictItemsEv(%"class.base::Value"* %56) #11
  %58 = getelementptr inbounds %"class.base::detail::const_dict_iterator_proxy", %"class.base::detail::const_dict_iterator_proxy"* %8, i64 0, i32 0
  store %"class.base::flat_map"* %57, %"class.base::flat_map"** %58, align 8
  call void @_ZNK4base6detail25const_dict_iterator_proxy3endEv(%"class.base::detail::const_dict_iterator"* nonnull sret %7, %"class.base::detail::const_dict_iterator_proxy"* nonnull %8) #11
  %59 = call zeroext i1 @_ZN4base6detaileqERKNS0_19const_dict_iteratorES3_(%"class.base::detail::const_dict_iterator"* dereferenceable(8) %52, %"class.base::detail::const_dict_iterator"* nonnull dereferenceable(8) %7) #11
  call void @_ZN4base6detail19const_dict_iteratorD1Ev(%"class.base::detail::const_dict_iterator"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #11
  br i1 %59, label %60, label %62

60:                                               ; preds = %44
  %61 = bitcast %"class.std::__1::unique_ptr"** %47 to i64*
  br label %154

62:                                               ; preds = %44
  %63 = bitcast %"class.base::detail::const_dict_iterator::pointer"* %6 to i8*
  %64 = getelementptr inbounds %"class.base::detail::const_dict_iterator::pointer", %"class.base::detail::const_dict_iterator::pointer"* %6, i64 0, i32 0, i32 0
  %65 = bitcast %"class.base::detail::const_dict_iterator::pointer"* %5 to i8*
  %66 = getelementptr inbounds %"class.base::detail::const_dict_iterator::pointer", %"class.base::detail::const_dict_iterator::pointer"* %5, i64 0, i32 0, i32 1
  %67 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0
  %68 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %69 = bitcast %"class.std::__1::unique_ptr"* %13 to i8*
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %71 = bitcast %"class.std::__1::unique_ptr"** %47 to i64*
  %72 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %73 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %78

78:                                               ; preds = %62, %149
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #11
  call void @_ZNK4base6detail19const_dict_iteratorptEv(%"class.base::detail::const_dict_iterator::pointer"* nonnull sret %6, %"class.base::detail::const_dict_iterator"* %52) #11
  %79 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %64, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #11
  call void @_ZNK4base6detail19const_dict_iteratorptEv(%"class.base::detail::const_dict_iterator::pointer"* nonnull sret %5, %"class.base::detail::const_dict_iterator"* %52) #11
  %80 = load %"class.base::Value"*, %"class.base::Value"** %66, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #11
  %81 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions29declarative_content_constants13kInstanceTypeE, i64 0, i64 0)) #11
  %82 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = zext i8 %84 to i64
  %89 = select i1 %85, i64 %87, i64 %88
  %90 = icmp eq i64 %81, %89
  br i1 %90, label %91, label %94

91:                                               ; preds = %78
  %92 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %79, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions29declarative_content_constants13kInstanceTypeE, i64 0, i64 0), i64 %81) #11
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %149, label %94

94:                                               ; preds = %78, %91
  %95 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN10extensions23ContentPredicateFactoryEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_21__tree_const_iteratorISB_PNS_11__tree_nodeISB_PvEElEERKT_(%"class.std::__1::__tree"* %67, %"class.std::__1::basic_string"* dereferenceable(24) %79) #11
  %96 = icmp eq %"class.std::__1::__tree_end_node"* %95, %68
  br i1 %96, label %124, label %97

97:                                               ; preds = %94
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #11
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %95, i64 7
  %99 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.extensions::ContentPredicateFactory"**
  %100 = load %"class.extensions::ContentPredicateFactory"*, %"class.extensions::ContentPredicateFactory"** %99, align 8
  %101 = bitcast %"class.extensions::ContentPredicateFactory"* %100 to %"class.extensions::ContentPredicate"* (%"class.extensions::ContentPredicateFactory"*, %"class.extensions::Extension"*, %"class.base::Value"*, %"class.std::__1::basic_string"*)***
  %102 = load %"class.extensions::ContentPredicate"* (%"class.extensions::ContentPredicateFactory"*, %"class.extensions::Extension"*, %"class.base::Value"*, %"class.std::__1::basic_string"*)**, %"class.extensions::ContentPredicate"* (%"class.extensions::ContentPredicateFactory"*, %"class.extensions::Extension"*, %"class.base::Value"*, %"class.std::__1::basic_string"*)*** %101, align 8
  %103 = getelementptr inbounds %"class.extensions::ContentPredicate"* (%"class.extensions::ContentPredicateFactory"*, %"class.extensions::Extension"*, %"class.base::Value"*, %"class.std::__1::basic_string"*)*, %"class.extensions::ContentPredicate"* (%"class.extensions::ContentPredicateFactory"*, %"class.extensions::Extension"*, %"class.base::Value"*, %"class.std::__1::basic_string"*)** %102, i64 2
  %104 = load %"class.extensions::ContentPredicate"* (%"class.extensions::ContentPredicateFactory"*, %"class.extensions::Extension"*, %"class.base::Value"*, %"class.std::__1::basic_string"*)*, %"class.extensions::ContentPredicate"* (%"class.extensions::ContentPredicateFactory"*, %"class.extensions::Extension"*, %"class.base::Value"*, %"class.std::__1::basic_string"*)** %103, align 8
  %105 = call %"class.extensions::ContentPredicate"* %104(%"class.extensions::ContentPredicateFactory"* %100, %"class.extensions::Extension"* %0, %"class.base::Value"* dereferenceable(32) %80, %"class.std::__1::basic_string"* %3) #11
  store %"class.extensions::ContentPredicate"* %105, %"class.extensions::ContentPredicate"** %70, align 8
  %106 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %47, align 8
  %107 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %48, align 8
  %108 = icmp ult %"class.std::__1::unique_ptr"* %106, %107
  br i1 %108, label %109, label %114

109:                                              ; preds = %97
  %110 = ptrtoint %"class.extensions::ContentPredicate"* %105 to i64
  store %"class.extensions::ContentPredicate"* null, %"class.extensions::ContentPredicate"** %70, align 8
  %111 = bitcast %"class.std::__1::unique_ptr"* %106 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %106, i64 1
  %113 = ptrtoint %"class.std::__1::unique_ptr"* %112 to i64
  store i64 %113, i64* %71, align 8
  br label %115

114:                                              ; preds = %97
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN10extensions16ContentPredicateENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector"* nonnull %11, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %13) #11
  br label %115

115:                                              ; preds = %109, %114
  %116 = load %"class.extensions::ContentPredicate"*, %"class.extensions::ContentPredicate"** %70, align 8
  store %"class.extensions::ContentPredicate"* null, %"class.extensions::ContentPredicate"** %70, align 8
  %117 = icmp eq %"class.extensions::ContentPredicate"* %116, null
  br i1 %117, label %123, label %118

118:                                              ; preds = %115
  %119 = bitcast %"class.extensions::ContentPredicate"* %116 to void (%"class.extensions::ContentPredicate"*)***
  %120 = load void (%"class.extensions::ContentPredicate"*)**, void (%"class.extensions::ContentPredicate"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.extensions::ContentPredicate"*)*, void (%"class.extensions::ContentPredicate"*)** %120, i64 1
  %122 = load void (%"class.extensions::ContentPredicate"*)*, void (%"class.extensions::ContentPredicate"*)** %121, align 8
  call void %122(%"class.extensions::ContentPredicate"* nonnull %116) #11
  br label %123

123:                                              ; preds = %115, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #11
  br label %139

124:                                              ; preds = %94
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #11
  %125 = load i8, i8* %83, align 1
  %126 = icmp slt i8 %125, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8
  br label %132

130:                                              ; preds = %124
  %131 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  br label %132

132:                                              ; preds = %127, %130
  %133 = phi i8* [ %129, %127 ], [ %131, %130 ]
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %14, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @_ZN10extensions12_GLOBAL__N_126kUnknownConditionAttributeE, i64 0, i64 0), i8* %133) #11
  %134 = load i8, i8* %74, align 1
  %135 = icmp slt i8 %134, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %132
  %137 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %137) #12
  br label %138

138:                                              ; preds = %136, %132
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* nonnull align 8 %72, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #11
  br label %139

139:                                              ; preds = %138, %123
  %140 = load i8, i8* %74, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %139
  %143 = load i64, i64* %77, align 8
  br label %146

144:                                              ; preds = %139
  %145 = zext i8 %140 to i64
  br label %146

146:                                              ; preds = %142, %144
  %147 = phi i64 [ %143, %142 ], [ %145, %144 ]
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %168

149:                                              ; preds = %91, %146
  %150 = call dereferenceable(8) %"class.base::detail::const_dict_iterator"* @_ZN4base6detail19const_dict_iteratorppEv(%"class.base::detail::const_dict_iterator"* %52) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  %151 = load %"class.base::Value"*, %"class.base::Value"** %55, align 8
  %152 = call %"class.base::flat_map"* @_ZNK4base5Value9DictItemsEv(%"class.base::Value"* %151) #11
  store %"class.base::flat_map"* %152, %"class.base::flat_map"** %58, align 8
  call void @_ZNK4base6detail25const_dict_iterator_proxy3endEv(%"class.base::detail::const_dict_iterator"* nonnull sret %7, %"class.base::detail::const_dict_iterator_proxy"* nonnull %8) #11
  %153 = call zeroext i1 @_ZN4base6detaileqERKNS0_19const_dict_iteratorES3_(%"class.base::detail::const_dict_iterator"* dereferenceable(8) %52, %"class.base::detail::const_dict_iterator"* nonnull dereferenceable(8) %7) #11
  call void @_ZN4base6detail19const_dict_iteratorD1Ev(%"class.base::detail::const_dict_iterator"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #11
  br i1 %153, label %154, label %78

154:                                              ; preds = %149, %60
  %155 = phi i64* [ %61, %60 ], [ %71, %149 ]
  call void @_ZN4base15DictionaryValue8IteratorD1Ev(%"class.base::DictionaryValue::Iterator"* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #11
  %156 = call i8* @_Znwm(i64 24) #12
  %157 = bitcast %"class.std::__1::vector"* %11 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = load i64, i64* %155, align 8
  %160 = bitcast %"class.std::__1::unique_ptr"** %48 to i64*
  %161 = load i64, i64* %160, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 24, i1 false) #11
  %162 = bitcast i8* %156 to i64*
  store i64 %158, i64* %162, align 8
  %163 = getelementptr inbounds i8, i8* %156, i64 8
  %164 = bitcast i8* %163 to i64*
  store i64 %159, i64* %164, align 8
  %165 = getelementptr inbounds i8, i8* %156, i64 16
  %166 = bitcast i8* %165 to i64*
  store i64 %161, i64* %166, align 8
  %167 = ptrtoint i8* %156 to i64
  br label %193

168:                                              ; preds = %146
  call void @_ZN4base15DictionaryValue8IteratorD1Ev(%"class.base::DictionaryValue::Iterator"* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #11
  %169 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %170 = icmp eq %"class.std::__1::unique_ptr"* %169, null
  br i1 %170, label %193, label %171

171:                                              ; preds = %168
  %172 = bitcast %"class.std::__1::unique_ptr"* %169 to i8*
  %173 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %47, align 8
  %174 = icmp eq %"class.std::__1::unique_ptr"* %173, %169
  br i1 %174, label %191, label %175

175:                                              ; preds = %171, %186
  %176 = phi %"class.std::__1::unique_ptr"* [ %177, %186 ], [ %173, %171 ]
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %176, i64 -1
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %177, i64 0, i32 0, i32 0, i32 0
  %179 = load %"class.extensions::ContentPredicate"*, %"class.extensions::ContentPredicate"** %178, align 8
  store %"class.extensions::ContentPredicate"* null, %"class.extensions::ContentPredicate"** %178, align 8
  %180 = icmp eq %"class.extensions::ContentPredicate"* %179, null
  br i1 %180, label %186, label %181

181:                                              ; preds = %175
  %182 = bitcast %"class.extensions::ContentPredicate"* %179 to void (%"class.extensions::ContentPredicate"*)***
  %183 = load void (%"class.extensions::ContentPredicate"*)**, void (%"class.extensions::ContentPredicate"*)*** %182, align 8
  %184 = getelementptr inbounds void (%"class.extensions::ContentPredicate"*)*, void (%"class.extensions::ContentPredicate"*)** %183, i64 1
  %185 = load void (%"class.extensions::ContentPredicate"*)*, void (%"class.extensions::ContentPredicate"*)** %184, align 8
  call void %185(%"class.extensions::ContentPredicate"* nonnull %179) #11
  br label %186

186:                                              ; preds = %181, %175
  %187 = icmp eq %"class.std::__1::unique_ptr"* %177, %169
  br i1 %187, label %188, label %175

188:                                              ; preds = %186
  %189 = bitcast %"class.std::__1::vector"* %11 to i8**
  %190 = load i8*, i8** %189, align 8
  br label %191

191:                                              ; preds = %188, %171
  %192 = phi i8* [ %190, %188 ], [ %172, %171 ]
  store %"class.std::__1::unique_ptr"* %169, %"class.std::__1::unique_ptr"** %47, align 8
  call void @_ZdlPv(i8* %192) #12
  br label %193

193:                                              ; preds = %154, %168, %191
  %194 = phi i64 [ %167, %154 ], [ 0, %168 ], [ 0, %191 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #11
  br label %195

195:                                              ; preds = %42, %25, %193
  %196 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %42 ], [ %27, %25 ], [ %31, %193 ]
  %197 = phi i64 [ 0, %42 ], [ 0, %25 ], [ %194, %193 ]
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %196, i64 0, i32 1, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, 0
  br i1 %200, label %201, label %203

201:                                              ; preds = %195
  %202 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %202) #12
  br label %203

203:                                              ; preds = %195, %201
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  br label %204

204:                                              ; preds = %17, %203
  %205 = phi i64 [ %197, %203 ], [ 0, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %206 = inttoptr i64 %205 to %"struct.extensions::ContentCondition"*
  ret %"struct.extensions::ContentCondition"* %206
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK4base5Value15GetAsDictionaryEPPKNS_15DictionaryValueE(%"class.base::Value"*, %"class.base::DictionaryValue"**) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base15DictionaryValue9GetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare void @_ZN4base15DictionaryValue8IteratorC1ERKS0_(%"class.base::DictionaryValue::Iterator"*, %"class.base::DictionaryValue"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base15DictionaryValue8IteratorD1Ev(%"class.base::DictionaryValue::Iterator"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare zeroext i1 @_ZN4base6detaileqERKNS0_19const_dict_iteratorES3_(%"class.base::detail::const_dict_iterator"* dereferenceable(8), %"class.base::detail::const_dict_iterator"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.base::flat_map"* @_ZNK4base5Value9DictItemsEv(%"class.base::Value"*) local_unnamed_addr #2

declare void @_ZNK4base6detail25const_dict_iterator_proxy3endEv(%"class.base::detail::const_dict_iterator"* sret, %"class.base::detail::const_dict_iterator_proxy"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base6detail19const_dict_iteratorD1Ev(%"class.base::detail::const_dict_iterator"*) unnamed_addr #3

declare void @_ZNK4base6detail19const_dict_iteratorptEv(%"class.base::detail::const_dict_iterator::pointer"* sret, %"class.base::detail::const_dict_iterator"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.base::detail::const_dict_iterator"* @_ZN4base6detail19const_dict_iteratorppEv(%"class.base::detail::const_dict_iterator"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN10extensions23ContentPredicateFactoryEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_21__tree_const_iteratorISB_PNS_11__tree_nodeISB_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #11
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #11
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIKN10extensions16ContentPredicateENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.extensions::ContentPredicate"* null, %"class.extensions::ContentPredicate"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.extensions::ContentPredicate"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.extensions::ContentPredicate"* null, %"class.extensions::ContentPredicate"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !2

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.extensions::ContentPredicate"* null, %"class.extensions::ContentPredicate"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.extensions::ContentPredicate"* null, %"class.extensions::ContentPredicate"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.extensions::ContentPredicate"* null, %"class.extensions::ContentPredicate"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.extensions::ContentPredicate"* null, %"class.extensions::ContentPredicate"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.extensions::ContentPredicate"* null, %"class.extensions::ContentPredicate"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.extensions::ContentPredicate"* null, %"class.extensions::ContentPredicate"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.extensions::ContentPredicate"* null, %"class.extensions::ContentPredicate"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.extensions::ContentPredicate"* null, %"class.extensions::ContentPredicate"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.extensions::ContentPredicate"*, %"class.extensions::ContentPredicate"** %142, align 8
  store %"class.extensions::ContentPredicate"* null, %"class.extensions::ContentPredicate"** %142, align 8
  %144 = icmp eq %"class.extensions::ContentPredicate"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.extensions::ContentPredicate"* %143 to void (%"class.extensions::ContentPredicate"*)***
  %147 = load void (%"class.extensions::ContentPredicate"*)**, void (%"class.extensions::ContentPredicate"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.extensions::ContentPredicate"*)*, void (%"class.extensions::ContentPredicate"*)** %147, i64 1
  %149 = load void (%"class.extensions::ContentPredicate"*)*, void (%"class.extensions::ContentPredicate"*)** %148, align 8
  tail call void %149(%"class.extensions::ContentPredicate"* nonnull %143) #11
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
