; ModuleID = '../../third_party/swiftshader/src/OpenGL/libGLESv2/VertexArray.cpp'
source_filename = "../../third_party/swiftshader/src/OpenGL/libGLESv2/VertexArray.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.es2::VertexArray" = type { %"class.gl::NamedObject", [32 x %"class.es2::VertexAttribute"], %"class.gl::BindingPointer" }
%"class.gl::NamedObject" = type { %"class.gl::Object.base", i32 }
%"class.gl::Object.base" = type <{ i32 (...)**, i32 }>
%"class.es2::VertexAttribute" = type { i32, i32, i8, i8, i32, i32, %union.anon, %"class.gl::BindingPointer", i8, [4 x %"union.es2::VertexAttribute::ValueUnion"], i32 }
%union.anon = type { i8* }
%"union.es2::VertexAttribute::ValueUnion" = type { float }
%"class.gl::BindingPointer" = type { %"class.es2::Buffer"* }
%"class.es2::Buffer" = type <{ %"class.gl::NamedObject", %"class.sw::Resource"*, i64, i32, i8, [3 x i8], i64, i64, i32, [4 x i8] }>
%"class.sw::Resource" = type { i64, %"class.sw::MutexLock", %"class.sw::Event", i32, i32, i32, i8, i8* }
%"class.sw::MutexLock" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.sw::Event" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.0, %union.anon.1, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.0 = type { i64 }
%union.anon.1 = type { i64 }
%"class.gl::Object" = type <{ i32 (...)**, i32, [4 x i8] }>

@_ZTVN3es211VertexArrayE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object6addRefEv to i8*), i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object7releaseEv to i8*), i8* bitcast (void (%"class.es2::VertexArray"*)* @_ZN3es211VertexArrayD2Ev to i8*), i8* bitcast (void (%"class.es2::VertexArray"*)* @_ZN3es211VertexArrayD0Ev to i8*)] }, align 8

@_ZN3es211VertexArrayC1Ej = hidden unnamed_addr alias void (%"class.es2::VertexArray"*, i32), void (%"class.es2::VertexArray"*, i32)* @_ZN3es211VertexArrayC2Ej
@_ZN3es211VertexArrayD1Ev = hidden unnamed_addr alias void (%"class.es2::VertexArray"*), void (%"class.es2::VertexArray"*)* @_ZN3es211VertexArrayD2Ev

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es211VertexArrayC2Ej(%"class.es2::VertexArray"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 0
  tail call void @_ZN2gl11NamedObjectC2Ej(%"class.gl::NamedObject"* %3, i32 %1) #7
  %4 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3es211VertexArrayE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 1, i64 0
  %6 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 1, i64 32
  br label %7

7:                                                ; preds = %7, %2
  %8 = phi %"class.es2::VertexAttribute"* [ %5, %2 ], [ %22, %7 ]
  %9 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %8, i64 0, i32 0
  store i32 5126, i32* %9, align 8
  %10 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %8, i64 0, i32 1
  store i32 4, i32* %10, align 4
  %11 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %8, i64 0, i32 2
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %8, i64 0, i32 3
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %8, i64 0, i32 4
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %8, i64 0, i32 5
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %8, i64 0, i32 6, i32 0
  %16 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %8, i64 0, i32 9, i64 0, i32 0
  store float 0.000000e+00, float* %16, align 4
  %17 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %8, i64 0, i32 9, i64 1, i32 0
  store float 0.000000e+00, float* %17, align 4
  %18 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %8, i64 0, i32 9, i64 2, i32 0
  store float 0.000000e+00, float* %18, align 4
  %19 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %8, i64 0, i32 9, i64 3, i32 0
  %20 = bitcast i8** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 17, i1 false) #8
  store float 1.000000e+00, float* %19, align 4
  %21 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %8, i64 0, i32 10
  store i32 5126, i32* %21, align 4
  %22 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %8, i64 1
  %23 = icmp eq %"class.es2::VertexAttribute"* %22, %6
  br i1 %23, label %24, label %7

24:                                               ; preds = %7
  %25 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 2, i32 0
  store %"class.es2::Buffer"* null, %"class.es2::Buffer"** %25, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN2gl11NamedObjectC2Ej(%"class.gl::NamedObject"*, i32) unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es211VertexArrayD2Ev(%"class.es2::VertexArray"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3es211VertexArrayE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  br label %15

3:                                                ; preds = %26
  %4 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 2, i32 0
  %5 = load %"class.es2::Buffer"*, %"class.es2::Buffer"** %4, align 8
  %6 = icmp eq %"class.es2::Buffer"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.es2::Buffer"* %5 to %"class.gl::Object"*
  %9 = bitcast %"class.es2::Buffer"* %5 to void (%"class.gl::Object"*)***
  %10 = load void (%"class.gl::Object"*)**, void (%"class.gl::Object"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %10, i64 1
  %12 = load void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %11, align 8
  tail call void %12(%"class.gl::Object"* nonnull %8) #7
  br label %13

13:                                               ; preds = %3, %7
  store %"class.es2::Buffer"* null, %"class.es2::Buffer"** %4, align 8
  %14 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 0
  tail call void @_ZN2gl11NamedObjectD2Ev(%"class.gl::NamedObject"* %14) #7
  ret void

15:                                               ; preds = %26, %1
  %16 = phi i64 [ 0, %1 ], [ %27, %26 ]
  %17 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 1, i64 %16, i32 7, i32 0
  %18 = load %"class.es2::Buffer"*, %"class.es2::Buffer"** %17, align 8
  %19 = icmp eq %"class.es2::Buffer"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.es2::Buffer"* %18 to %"class.gl::Object"*
  %22 = bitcast %"class.es2::Buffer"* %18 to void (%"class.gl::Object"*)***
  %23 = load void (%"class.gl::Object"*)**, void (%"class.gl::Object"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %23, i64 1
  %25 = load void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %24, align 8
  tail call void %25(%"class.gl::Object"* nonnull %21) #7
  br label %26

26:                                               ; preds = %15, %20
  store %"class.es2::Buffer"* null, %"class.es2::Buffer"** %17, align 8
  %27 = add nuw nsw i64 %16, 1
  %28 = icmp eq i64 %27, 32
  br i1 %28, label %3, label %15
}

; Function Attrs: nounwind optsize
declare void @_ZN2gl11NamedObjectD2Ev(%"class.gl::NamedObject"*) unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es211VertexArrayD0Ev(%"class.es2::VertexArray"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3es211VertexArrayD2Ev(%"class.es2::VertexArray"* %0) #7
  %2 = bitcast %"class.es2::VertexArray"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es211VertexArray12detachBufferEj(%"class.es2::VertexArray"* nocapture, i32) local_unnamed_addr #0 align 2 {
  br label %13

3:                                                ; preds = %32
  %4 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 2, i32 0
  %5 = load %"class.es2::Buffer"*, %"class.es2::Buffer"** %4, align 8
  %6 = icmp eq %"class.es2::Buffer"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %5, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32 [ %9, %7 ], [ 0, %3 ]
  %12 = icmp eq i32 %11, %1
  br i1 %12, label %35, label %43

13:                                               ; preds = %32, %2
  %14 = phi i64 [ 0, %2 ], [ %33, %32 ]
  %15 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 1, i64 %14, i32 7, i32 0
  %16 = load %"class.es2::Buffer"*, %"class.es2::Buffer"** %15, align 8
  %17 = icmp eq %"class.es2::Buffer"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %16, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  br label %21

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ]
  %23 = icmp eq i32 %22, %1
  br i1 %23, label %24, label %32

24:                                               ; preds = %21
  br i1 %17, label %31, label %25

25:                                               ; preds = %24
  %26 = bitcast %"class.es2::Buffer"* %16 to %"class.gl::Object"*
  %27 = bitcast %"class.es2::Buffer"* %16 to void (%"class.gl::Object"*)***
  %28 = load void (%"class.gl::Object"*)**, void (%"class.gl::Object"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %28, i64 1
  %30 = load void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %29, align 8
  tail call void %30(%"class.gl::Object"* nonnull %26) #7
  br label %31

31:                                               ; preds = %24, %25
  store %"class.es2::Buffer"* null, %"class.es2::Buffer"** %15, align 8
  br label %32

32:                                               ; preds = %21, %31
  %33 = add nuw nsw i64 %14, 1
  %34 = icmp eq i64 %33, 32
  br i1 %34, label %3, label %13

35:                                               ; preds = %10
  br i1 %6, label %42, label %36

36:                                               ; preds = %35
  %37 = bitcast %"class.es2::Buffer"* %5 to %"class.gl::Object"*
  %38 = bitcast %"class.es2::Buffer"* %5 to void (%"class.gl::Object"*)***
  %39 = load void (%"class.gl::Object"*)**, void (%"class.gl::Object"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %39, i64 1
  %41 = load void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %40, align 8
  tail call void %41(%"class.gl::Object"* nonnull %37) #7
  br label %42

42:                                               ; preds = %35, %36
  store %"class.es2::Buffer"* null, %"class.es2::Buffer"** %4, align 8
  br label %43

43:                                               ; preds = %42, %10
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden dereferenceable(64) %"class.es2::VertexAttribute"* @_ZNK3es211VertexArray18getVertexAttributeEm(%"class.es2::VertexArray"* readnone, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 1, i64 %1
  ret %"class.es2::VertexAttribute"* %3
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN3es211VertexArray22setVertexAttribDivisorEjj(%"class.es2::VertexArray"* nocapture, i32, i32) local_unnamed_addr #5 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 1, i64 %4, i32 5
  store i32 %2, i32* %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN3es211VertexArray15enableAttributeEjb(%"class.es2::VertexArray"* nocapture, i32, i1 zeroext) local_unnamed_addr #5 align 2 {
  %4 = zext i1 %2 to i8
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 1, i64 %5, i32 8
  store i8 %4, i8* %6, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es211VertexArray17setAttributeStateEjPNS_6BufferEijbbiPKv(%"class.es2::VertexArray"* nocapture, i32, %"class.es2::Buffer"*, i32, i32, i1 zeroext, i1 zeroext, i32, i8*) local_unnamed_addr #0 align 2 {
  %10 = zext i1 %5 to i8
  %11 = zext i1 %6 to i8
  %12 = zext i32 %1 to i64
  %13 = icmp eq %"class.es2::Buffer"* %2, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.es2::Buffer"* %2 to %"class.gl::Object"*
  %16 = bitcast %"class.es2::Buffer"* %2 to void (%"class.gl::Object"*)***
  %17 = load void (%"class.gl::Object"*)**, void (%"class.gl::Object"*)*** %16, align 8
  %18 = load void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %17, align 8
  tail call void %18(%"class.gl::Object"* nonnull %15) #7
  br label %19

19:                                               ; preds = %14, %9
  %20 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 1, i64 %12, i32 7, i32 0
  %21 = load %"class.es2::Buffer"*, %"class.es2::Buffer"** %20, align 8
  %22 = icmp eq %"class.es2::Buffer"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.es2::Buffer"* %21 to %"class.gl::Object"*
  %25 = bitcast %"class.es2::Buffer"* %21 to void (%"class.gl::Object"*)***
  %26 = load void (%"class.gl::Object"*)**, void (%"class.gl::Object"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %26, i64 1
  %28 = load void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %27, align 8
  tail call void %28(%"class.gl::Object"* nonnull %24) #7
  br label %29

29:                                               ; preds = %19, %23
  store %"class.es2::Buffer"* %2, %"class.es2::Buffer"** %20, align 8
  %30 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 1, i64 %12, i32 1
  store i32 %3, i32* %30, align 4
  %31 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 1, i64 %12, i32 0
  store i32 %4, i32* %31, align 8
  %32 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 1, i64 %12, i32 2
  store i8 %10, i8* %32, align 8
  %33 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 1, i64 %12, i32 3
  store i8 %11, i8* %33, align 1
  %34 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 1, i64 %12, i32 4
  store i32 %7, i32* %34, align 4
  %35 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 1, i64 %12, i32 6, i32 0
  store i8* %8, i8** %35, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es211VertexArray21setElementArrayBufferEPNS_6BufferE(%"class.es2::VertexArray"* nocapture, %"class.es2::Buffer"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.es2::Buffer"* %1, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.es2::Buffer"* %1 to %"class.gl::Object"*
  %6 = bitcast %"class.es2::Buffer"* %1 to void (%"class.gl::Object"*)***
  %7 = load void (%"class.gl::Object"*)**, void (%"class.gl::Object"*)*** %6, align 8
  %8 = load void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %7, align 8
  tail call void %8(%"class.gl::Object"* nonnull %5) #7
  br label %9

9:                                                ; preds = %4, %2
  %10 = getelementptr inbounds %"class.es2::VertexArray", %"class.es2::VertexArray"* %0, i64 0, i32 2, i32 0
  %11 = load %"class.es2::Buffer"*, %"class.es2::Buffer"** %10, align 8
  %12 = icmp eq %"class.es2::Buffer"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.es2::Buffer"* %11 to %"class.gl::Object"*
  %15 = bitcast %"class.es2::Buffer"* %11 to void (%"class.gl::Object"*)***
  %16 = load void (%"class.gl::Object"*)**, void (%"class.gl::Object"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %16, i64 1
  %18 = load void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %17, align 8
  tail call void %18(%"class.gl::Object"* nonnull %14) #7
  br label %19

19:                                               ; preds = %9, %13
  store %"class.es2::Buffer"* %1, %"class.es2::Buffer"** %10, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN2gl6Object6addRefEv(%"class.gl::Object"*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2gl6Object7releaseEv(%"class.gl::Object"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind optsize }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
