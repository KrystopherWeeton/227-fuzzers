; ModuleID = '../../third_party/blink/renderer/modules/csspaint/paint_worklet_global_scope_proxy.cc'
source_filename = "../../third_party/blink/renderer/modules/csspaint/paint_worklet_global_scope_proxy.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.128" }
%"struct.std::__1::atomic.128" = type { %"struct.std::__1::__atomic_base.129" }
%"struct.std::__1::__atomic_base.129" = type { %"struct.std::__1::__atomic_base.130" }
%"struct.std::__1::__atomic_base.130" = type { %"struct.std::__1::__cxx_atomic_impl.131" }
%"struct.std::__1::__cxx_atomic_impl.131" = type { %"struct.std::__1::__cxx_atomic_base_impl.132" }
%"struct.std::__1::__cxx_atomic_base_impl.132" = type { i32 }
%"class.blink::PaintWorkletGlobalScopeProxy" = type { %"class.blink::WorkletGlobalScopeProxy", %"class.std::__1::unique_ptr", %"class.blink::Member.438" }
%"class.blink::WorkletGlobalScopeProxy" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::MainThreadWorkletReportingProxy"* }
%"class.blink::MainThreadWorkletReportingProxy" = type { %"class.blink::WorkerReportingProxy", %"class.blink::Persistent" }
%"class.blink::WorkerReportingProxy" = type { i32 (...)** }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ExecutionContext"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.57", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.63", %"class.blink::Member.65", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.74", %"class.blink::Member.215", %"class.blink::Member.239", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.6" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.4" }
%"class.WTF::HashTable.4" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.6" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.7" }
%"class.blink::HeapHashMap.7" = type { %"class.WTF::HashMap.10" }
%"class.WTF::HashMap.10" = type { %"class.WTF::HashTable.11" }
%"class.WTF::HashTable.11" = type <{ %"struct.WTF::KeyValuePair.13"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.13" = type { i8*, %"class.blink::Member.2247" }
%"class.blink::Member.2247" = type { %"class.blink::MemberBase.2248" }
%"class.blink::MemberBase.2248" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2249" }
%"class.blink::Member.2249" = type { %"class.blink::MemberBase.2250" }
%"class.blink::MemberBase.2250" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr, %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.43", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.54", i32, i32 }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.14 }
%class.scoped_refptr.14 = type { %"class.WTF::StringImpl"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.16 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.32", %"class.std::__1::map.41"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.22 }
%union.anon.22 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { i64 }
%"class.std::__1::map.32" = type { %"class.std::__1::__tree.33" }
%"class.std::__1::__tree.33" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::map.41" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.46" }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.std::__1::pair"* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.54" = type { %"class.WTF::HashTable.55" }
%"class.WTF::HashTable.55" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.61"*, i32, i32 }
%"class.blink::Member.61" = type opaque
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.67", i32, i32 }
%"class.blink::HeapHashMap.67" = type { %"class.WTF::HashMap.70" }
%"class.WTF::HashMap.70" = type { %"class.WTF::HashTable.71" }
%"class.WTF::HashTable.71" = type <{ %"struct.WTF::KeyValuePair.73"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.73" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.77" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.80" }
%"class.WTF::Vector.80" = type { %"class.WTF::VectorBuffer.81" }
%"class.WTF::VectorBuffer.81" = type { %"class.WTF::VectorBufferBase.82" }
%"class.WTF::VectorBufferBase.82" = type { %"class.mojo::StructPtr.83"*, i32, i32 }
%"class.mojo::StructPtr.83" = type { %"class.std::__1::unique_ptr.84" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.87", %"class.WTF::HashMap.94", %"class.WTF::HashMap.99", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.104", i32, %"class.mojo::StructPtr.109", %"class.WTF::Vector.104" }
%"class.mojo::StructPtr.87" = type { %"class.std::__1::unique_ptr.88" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.94" = type { %"class.WTF::HashTable.95" }
%"class.WTF::HashTable.95" = type <{ %"struct.WTF::KeyValuePair.98"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.98" = type { i32, %"class.WTF::String" }
%"class.WTF::HashMap.99" = type { %"class.WTF::HashTable.100" }
%"class.WTF::HashTable.100" = type <{ %"struct.WTF::KeyValuePair.103"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.103" = type { i32, %"class.mojo::StructPtr.2382" }
%"class.mojo::StructPtr.2382" = type { %"class.std::__1::unique_ptr.2383" }
%"class.std::__1::unique_ptr.2383" = type { %"class.std::__1::__compressed_pair.2384" }
%"class.std::__1::__compressed_pair.2384" = type { %"struct.std::__1::__compressed_pair_elem.2385" }
%"struct.std::__1::__compressed_pair_elem.2385" = type { %"class.network::mojom::blink::CSPSourceList"* }
%"class.network::mojom::blink::CSPSourceList" = type <{ %"class.WTF::Vector.2386", %"class.WTF::Vector.104", %"class.WTF::Vector.2391", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.WTF::Vector.2386" = type { %"class.WTF::VectorBuffer.2387" }
%"class.WTF::VectorBuffer.2387" = type { %"class.WTF::VectorBufferBase.2388" }
%"class.WTF::VectorBufferBase.2388" = type { %"class.mojo::StructPtr.87"*, i32, i32 }
%"class.WTF::Vector.2391" = type { %"class.WTF::VectorBuffer.2392" }
%"class.WTF::VectorBuffer.2392" = type { %"class.WTF::VectorBufferBase.2393" }
%"class.WTF::VectorBufferBase.2393" = type { %"class.mojo::StructPtr.2394"*, i32, i32 }
%"class.mojo::StructPtr.2394" = type { %"class.std::__1::unique_ptr.2395" }
%"class.std::__1::unique_ptr.2395" = type { %"class.std::__1::__compressed_pair.2396" }
%"class.std::__1::__compressed_pair.2396" = type { %"struct.std::__1::__compressed_pair_elem.2397" }
%"struct.std::__1::__compressed_pair_elem.2397" = type { %"class.network::mojom::blink::CSPHashSource"* }
%"class.network::mojom::blink::CSPHashSource" = type { i32, %"class.WTF::Vector.2349" }
%"class.WTF::Vector.2349" = type { %"class.WTF::VectorBuffer.2350" }
%"class.WTF::VectorBuffer.2350" = type { %"class.WTF::VectorBufferBase.2343" }
%"class.WTF::VectorBufferBase.2343" = type { i8*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.109" = type { %"class.std::__1::unique_ptr.110" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.104", i8, i8, [6 x i8] }>
%"class.WTF::Vector.104" = type { %"class.WTF::VectorBuffer.105" }
%"class.WTF::VectorBuffer.105" = type { %"class.WTF::VectorBufferBase.106" }
%"class.WTF::VectorBufferBase.106" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.206" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.124", i32 }>
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.133", %"class.absl::optional.138", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.159", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.181", %"class.std::__1::map.192", i64, %"class.base::OnceCallback.152", %"class.base::OnceCallback.201", i8, %class.scoped_refptr.143, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.202" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.127 }
%class.scoped_refptr.127 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.128" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.133" = type { %"class.absl::optional_internal::optional_data.134" }
%"class.absl::optional_internal::optional_data.134" = type { %"class.absl::optional_internal::optional_data_base.135" }
%"class.absl::optional_internal::optional_data_base.135" = type { %"class.absl::optional_internal::optional_data_dtor_base.136" }
%"class.absl::optional_internal::optional_data_dtor_base.136" = type { i8, %union.anon.137 }
%union.anon.137 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.138" = type { %"class.absl::optional_internal::optional_data.139" }
%"class.absl::optional_internal::optional_data.139" = type { %"class.absl::optional_internal::optional_data_base.140" }
%"class.absl::optional_internal::optional_data_base.140" = type { %"class.absl::optional_internal::optional_data_dtor_base.141" }
%"class.absl::optional_internal::optional_data_dtor_base.141" = type { i8, %union.anon.142 }
%union.anon.142 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.152" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.143, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.145 }
%class.scoped_refptr.145 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.146", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.146" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.147" }
%"struct.std::__1::atomic.147" = type { %"struct.std::__1::__atomic_base.148" }
%"struct.std::__1::__atomic_base.148" = type { %"struct.std::__1::__atomic_base.149" }
%"struct.std::__1::__atomic_base.149" = type { %"struct.std::__1::__cxx_atomic_impl.150" }
%"struct.std::__1::__cxx_atomic_impl.150" = type { %"struct.std::__1::__cxx_atomic_base_impl.151" }
%"struct.std::__1::__cxx_atomic_base_impl.151" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.157 }
%class.scoped_refptr.157 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2190", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.143, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2190" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.158 }
%class.scoped_refptr.158 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.162", %class.scoped_refptr.163 }
%"class.base::RepeatingCallback.162" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.163 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.164", [4 x i8] }>
%"class.base::RefCountedThreadSafe.164" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.174", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.180" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.180" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.181" = type { %"class.std::__1::__tree.182" }
%"class.std::__1::__tree.182" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.183", %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::map.192" = type { %"class.std::__1::__tree.193" }
%"class.std::__1::__tree.193" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.194", %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.base::OnceCallback.152" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.201" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.143 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.144" }>
%"class.base::RefCountedThreadSafe.144" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.152" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.202" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.215" = type { %"class.blink::MemberBase.216" }
%"class.blink::MemberBase.216" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type { %"class.WTF::HashSet.219", %"class.WTF::HashSet.219", %"class.WTF::HashSet.219", %"class.WTF::HashMap.223", %"class.std::__1::unique_ptr.228", %"class.blink::Member", %"class.WTF::HashMap.234" }
%"class.WTF::HashSet.219" = type { %"class.WTF::HashTable.220" }
%"class.WTF::HashTable.220" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.223" = type { %"class.WTF::HashTable.224" }
%"class.WTF::HashTable.224" = type <{ %"struct.WTF::KeyValuePair.227"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.227" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::TrialTokenValidator"* }
%"class.blink::TrialTokenValidator" = type { i32 (...)** }
%"class.WTF::HashMap.234" = type { %"class.WTF::HashTable.235" }
%"class.WTF::HashTable.235" = type <{ %"struct.WTF::KeyValuePair.238"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.238" = type { %"class.WTF::String", %"struct.blink::OriginTrialResult" }
%"struct.blink::OriginTrialResult" = type { %"class.WTF::String", i32, %"class.WTF::Vector.2372" }
%"class.WTF::Vector.2372" = type { %"class.WTF::VectorBuffer.2373" }
%"class.WTF::VectorBuffer.2373" = type { %"class.WTF::VectorBufferBase.2374" }
%"class.WTF::VectorBufferBase.2374" = type { %"struct.blink::OriginTrialTokenResult"*, i32, i32 }
%"struct.blink::OriginTrialTokenResult" = type { %"class.WTF::String", i32, %"class.absl::optional.2375" }
%"class.absl::optional.2375" = type { %"class.absl::optional_internal::optional_data.2376" }
%"class.absl::optional_internal::optional_data.2376" = type { %"class.absl::optional_internal::optional_data_base.2377" }
%"class.absl::optional_internal::optional_data_base.2377" = type { %"class.absl::optional_internal::optional_data_dtor_base.2378" }
%"class.absl::optional_internal::optional_data_dtor_base.2378" = type { i8, %union.anon.2379 }
%union.anon.2379 = type { %"class.blink::TrialToken" }
%"class.blink::TrialToken" = type { %"class.url::Origin", i8, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", i8, i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1615" }
%"class.base::time_internal::TimeBase.1615" = type { i64 }
%"class.blink::Member.239" = type { %"class.blink::MemberBase.240" }
%"class.blink::MemberBase.240" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.65", i8, [7 x i8], %"class.WTF::Vector.80", %"class.blink::HeapVector.243", i8, [7 x i8], %"class.WTF::HashSet.54", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.243" = type { %"class.WTF::Vector.246" }
%"class.WTF::Vector.246" = type { %"class.WTF::VectorBuffer.247" }
%"class.WTF::VectorBuffer.247" = type { %"class.WTF::VectorBufferBase.248" }
%"class.WTF::VectorBufferBase.248" = type { %"class.blink::Member.249"*, i32, i32 }
%"class.blink::Member.249" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.251", i32, [4 x i8], %"class.std::__1::unique_ptr.389", %"class.std::__1::unique_ptr.389", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.406", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.418", %"class.std::__1::unique_ptr.424", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.431", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.266", %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.278", %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.295", %"class.std::__1::unique_ptr.302", %"class.std::__1::unique_ptr.302", %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.330", %"class.std::__1::unique_ptr.337", %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.369", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.287" = type { %"struct.std::__1::__atomic_base.288" }
%"struct.std::__1::__atomic_base.288" = type { %"struct.std::__1::__atomic_base.289" }
%"struct.std::__1::__atomic_base.289" = type { %"struct.std::__1::__cxx_atomic_impl.290" }
%"struct.std::__1::__cxx_atomic_impl.290" = type { %"struct.std::__1::__cxx_atomic_base_impl.291" }
%"struct.std::__1::__cxx_atomic_base_impl.291" = type { i64 }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.blink::Worklist.298"* }
%"class.blink::Worklist.298" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::Worklist.305"* }
%"class.blink::Worklist.305" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::Worklist.312"* }
%"class.blink::Worklist.312" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::Worklist.319"* }
%"class.blink::Worklist.319" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.blink::Worklist.326"* }
%"class.blink::Worklist.326" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::Worklist.333"* }
%"class.blink::Worklist.333" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.blink::Worklist.340"* }
%"class.blink::Worklist.340" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.347", %"class.std::__1::__compressed_pair.355", %"class.std::__1::__compressed_pair.360", %"class.std::__1::__compressed_pair.362", [4 x i8] }>
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349", %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { float }
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.372", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.381" }
%"class.WTF::Vector.381" = type { %"class.WTF::VectorBuffer.382" }
%"class.WTF::VectorBuffer.382" = type { %"class.WTF::VectorBufferBase.383" }
%"class.WTF::VectorBufferBase.383" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"struct.std::__1::pair.399"*, i32, i32 }
%"struct.std::__1::pair.399" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.412" }
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.298"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.305"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.312"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.319"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.326"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.2183", i64 }
%"class.std::__1::vector.2183" = type { %"class.std::__1::__vector_base.2184" }
%"class.std::__1::__vector_base.2184" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.2185" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.2185" = type { %"struct.std::__1::__compressed_pair_elem.2186" }
%"struct.std::__1::__compressed_pair_elem.2186" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.430 }
%class.scoped_refptr.430 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.431" = type { %"struct.std::__1::__atomic_base.432" }
%"struct.std::__1::__atomic_base.432" = type { %"struct.std::__1::__cxx_atomic_impl.433" }
%"struct.std::__1::__cxx_atomic_impl.433" = type { %"struct.std::__1::__cxx_atomic_base_impl.434" }
%"struct.std::__1::__cxx_atomic_base_impl.434" = type { i8 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::PaintWorkletGlobalScope"* }
%"class.blink::PaintWorkletGlobalScope" = type { %"class.blink::WorkletGlobalScope.base", [6 x i8], %"class.blink::HeapHashMap.528", i8, %"class.util::TokenType.535" }
%"class.blink::WorkletGlobalScope.base" = type <{ %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable", %"class.blink::KURL", %"class.WTF::String", %class.scoped_refptr.16, i8, [7 x i8], %"class.blink::CrossThreadPersistent.511", i32, i32, %"class.blink::Member.520", %"class.blink::WorkerThread"*, %"class.util::TokenType", %"class.std::__1::unique_ptr.522", i8, i8 }>
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.478", %"class.blink::Member.484", %"class.blink::HeapHashSet.486", %class.scoped_refptr.493, %"class.blink::Member.495", %"class.blink::Member.497", i32, %"class.WTF::Vector.80", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.501" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.456" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.444" }
%"class.blink::HeapVector.444" = type { %"class.WTF::Vector.447" }
%"class.WTF::Vector.447" = type { %"class.WTF::VectorBuffer.448" }
%"class.WTF::VectorBuffer.448" = type { %"class.WTF::VectorBufferBase.449", [32 x i8] }
%"class.WTF::VectorBufferBase.449" = type { %"struct.std::__1::pair.450"*, i32, i32 }
%"struct.std::__1::pair.450" = type { %"class.WTF::AtomicString", %"class.blink::Member.451" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::HeapVector.453"* }
%"class.blink::HeapVector.453" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.WTF::Vector.459"* }
%"class.WTF::Vector.459" = type opaque
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.57", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.63", %"class.blink::Member.65", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.74", %"class.blink::Member.215", %"class.blink::Member.239", i8 }>
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.463" }
%"class.blink::PersistentBase.463" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.466" }
%"class.blink::Supplementable.466" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.467" }
%"class.blink::HeapHashMap.467" = type { %"class.WTF::HashMap.470" }
%"class.WTF::HashMap.470" = type { %"class.WTF::HashTable.471" }
%"class.WTF::HashTable.471" = type <{ %"struct.WTF::KeyValuePair.473"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.473" = type { i8*, %"class.blink::Member.2265" }
%"class.blink::Member.2265" = type { %"class.blink::MemberBase.2266" }
%"class.blink::MemberBase.2266" = type { %"class.blink::Supplement.2267"* }
%"class.blink::Supplement.2267" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2268" }
%"class.blink::Member.2268" = type { %"class.blink::MemberBase.2269" }
%"class.blink::MemberBase.2269" = type { %"class.blink::WorkerClients"* }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.474" }
%"struct.std::__1::atomic.474" = type { %"struct.std::__1::__atomic_base.475" }
%"struct.std::__1::__atomic_base.475" = type { %"struct.std::__1::__cxx_atomic_impl.476" }
%"struct.std::__1::__cxx_atomic_impl.476" = type { %"struct.std::__1::__cxx_atomic_base_impl.477" }
%"struct.std::__1::__cxx_atomic_base_impl.477" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.1946", %"class.blink::Member.1947", %"class.blink::Member.1949", %"class.blink::Member.1951", %class.scoped_refptr.1160, %class.scoped_refptr.1160, %"class.blink::Member.1955", %"class.blink::Member.1957", %"class.blink::Member.1963", %"class.blink::Member.1967", %"class.blink::Member.2018", %"class.blink::HeapHashMap.2020", %"class.blink::HeapHashSet.2027", %"class.blink::HeapHashSet.2027", %"class.blink::HeapHashMap.2137", %"class.blink::HeapVector.2144", %"class.blink::Member.1673", %"class.blink::HeapTaskRunnerTimer.2152", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.2153", %"class.WTF::Vector.2160", %"class.blink::HeapHashSet.2165", %"class.blink::HeapHashSet.2165", %"class.std::__1::unique_ptr.2171", %"class.base::WeakPtr.2012", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote.2177", %"class.blink::Member.2180", i8, i8, %"class.base::WeakPtrFactory.2182" }
%"class.blink::ThreadState::PrefinalizerRegistration.1946" = type { i8 }
%"class.blink::Member.1947" = type { %"class.blink::MemberBase.1948" }
%"class.blink::MemberBase.1948" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1949" = type { %"class.blink::MemberBase.1950" }
%"class.blink::MemberBase.1950" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.1951" = type { %"class.blink::MemberBase.1952" }
%"class.blink::MemberBase.1952" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type { i32 (...)** }
%class.scoped_refptr.1160 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::Member.1955" = type { %"class.blink::MemberBase.1956" }
%"class.blink::MemberBase.1956" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1957" = type { %"class.blink::MemberBase.1958" }
%"class.blink::MemberBase.1958" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1961" }
%"class.blink::Member.1961" = type { %"class.blink::MemberBase.1962" }
%"class.blink::MemberBase.1962" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1963" = type { %"class.blink::MemberBase.1964" }
%"class.blink::MemberBase.1964" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1967" = type { %"class.blink::MemberBase.1968" }
%"class.blink::MemberBase.1968" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1971", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1973", %"class.WTF::HashSet.1978", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1982", %"class.std::__1::map.1989", %"class.std::__1::map.2000", %"class.std::__1::unique_ptr.2009", %"class.blink::Member.1957", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.2016", %"class.mojo::InlinedStructPtr.854", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1971" = type { %"class.blink::MemberBase.1972" }
%"class.blink::MemberBase.1972" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1973" = type { %"class.WTF::HashTable.1974" }
%"class.WTF::HashTable.1974" = type <{ %"struct.WTF::KeyValuePair.1977"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1977" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1978" = type { %"class.WTF::HashTable.1979" }
%"class.WTF::HashTable.1979" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1982" = type { %"class.WTF::HashMap.1985" }
%"class.WTF::HashMap.1985" = type { %"class.WTF::HashTable.1986" }
%"class.WTF::HashTable.1986" = type <{ %"struct.WTF::KeyValuePair.1988"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1988" = type opaque
%"class.std::__1::map.1989" = type { %"class.std::__1::__tree.1990" }
%"class.std::__1::__tree.1990" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1991", %"class.std::__1::__compressed_pair.1995" }
%"class.std::__1::__compressed_pair.1991" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.1995" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::map.2000" = type { %"class.std::__1::__tree.2001" }
%"class.std::__1::__tree.2001" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2002", %"class.std::__1::__compressed_pair.2006" }
%"class.std::__1::__compressed_pair.2002" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.2006" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::unique_ptr.2009" = type { %"class.std::__1::__compressed_pair.2010" }
%"class.std::__1::__compressed_pair.2010" = type { %"struct.std::__1::__compressed_pair_elem.2011" }
%"struct.std::__1::__compressed_pair_elem.2011" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.2012", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.2016" = type { %"class.blink::MemberBase.2017" }
%"class.blink::MemberBase.2017" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.854" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2018" = type { %"class.blink::MemberBase.2019" }
%"class.blink::MemberBase.2019" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.2020" = type { %"class.WTF::HashMap.2023" }
%"class.WTF::HashMap.2023" = type { %"class.WTF::HashTable.2024" }
%"class.WTF::HashTable.2024" = type <{ %"struct.WTF::KeyValuePair.2026"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2026" = type opaque
%"class.blink::HeapHashSet.2027" = type { %"class.WTF::HashSet.2030" }
%"class.WTF::HashSet.2030" = type { %"class.WTF::HashTable.2031" }
%"class.WTF::HashTable.2031" = type <{ %"class.blink::WeakMember.2033"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2033" = type { %"class.blink::MemberBase.2034" }
%"class.blink::MemberBase.2034" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.2037", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.2057", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.2109", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.2126", %"class.blink::ResourceResponse", %class.scoped_refptr.1888, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.2037" = type { %"class.absl::optional_internal::optional_data.2038" }
%"class.absl::optional_internal::optional_data.2038" = type { %"class.absl::optional_internal::optional_data_base.2039" }
%"class.absl::optional_internal::optional_data_base.2039" = type { %"class.absl::optional_internal::optional_data_dtor_base.2040" }
%"class.absl::optional_internal::optional_data_dtor_base.2040" = type { i8, %union.anon.2041 }
%union.anon.2041 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.2042", i8, %"class.absl::optional.2047", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.2042" = type { %"class.absl::optional_internal::optional_data.2043" }
%"class.absl::optional_internal::optional_data.2043" = type { %"class.absl::optional_internal::optional_data_base.2044" }
%"class.absl::optional_internal::optional_data_base.2044" = type { %"class.absl::optional_internal::optional_data_dtor_base.2045" }
%"class.absl::optional_internal::optional_data_dtor_base.2045" = type { i8, [7 x i8], %union.anon.2046 }
%union.anon.2046 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.2047" = type { %"class.absl::optional_internal::optional_data.2048" }
%"class.absl::optional_internal::optional_data.2048" = type { %"class.absl::optional_internal::optional_data_base.2049" }
%"class.absl::optional_internal::optional_data_base.2049" = type { %"class.absl::optional_internal::optional_data_dtor_base.2050" }
%"class.absl::optional_internal::optional_data_dtor_base.2050" = type { i8, %union.anon.2051 }
%union.anon.2051 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.2052", %"class.WTF::Vector.104" }
%"class.WTF::Vector.2052" = type { %"class.WTF::VectorBuffer.2053" }
%"class.WTF::VectorBuffer.2053" = type { %"class.WTF::VectorBufferBase.2054" }
%"class.WTF::VectorBufferBase.2054" = type { i32*, i32, i32 }
%"class.WTF::Vector.2057" = type { %"class.WTF::VectorBuffer.2058" }
%"class.WTF::VectorBuffer.2058" = type { %"class.WTF::VectorBufferBase.2059" }
%"class.WTF::VectorBufferBase.2059" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.2105" }
%"class.WTF::HashMap.2105" = type { %"class.WTF::HashTable.2106" }
%"class.WTF::HashTable.2106" = type <{ %"struct.WTF::KeyValuePair.2108"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2108" = type <{ %"class.blink::WeakMember.2270", i32, [4 x i8] }>
%"class.blink::WeakMember.2270" = type { %"class.blink::MemberBase.2271" }
%"class.blink::MemberBase.2271" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2272", [7 x i8], %"class.blink::Member.2150", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.2272" = type { i8 }
%"class.blink::Member.2150" = type { %"class.blink::MemberBase.2034" }
%"class.blink::HeapHashSet.2109" = type { %"class.WTF::HashSet.2112" }
%"class.WTF::HashSet.2112" = type { %"class.WTF::HashTable.2113" }
%"class.WTF::HashTable.2113" = type <{ %"class.blink::WeakMember.2115"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2115" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.2116", %"class.WTF::String", %"class.WTF::HashSet.2117", i8, i8, %class.scoped_refptr.1142, %class.scoped_refptr.2122, %class.scoped_refptr.2124 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias.2116" = type { i8 }
%"class.WTF::HashSet.2117" = type { %"class.WTF::HashTable.2118" }
%"class.WTF::HashTable.2118" = type <{ %"struct.std::__1::pair.2121"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.2121" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1142 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1143", i32, i32, %"class.blink::Persistent.1145" }
%"class.WTF::RefCounted.1143" = type { %"class.base::RefCounted.1144" }
%"class.base::RefCounted.1144" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1145" = type { %"class.blink::PersistentBase.1146" }
%"class.blink::PersistentBase.1146" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1149" }
%"class.blink::HeapHashMap.1149" = type { %"class.WTF::HashMap.1152" }
%"class.WTF::HashMap.1152" = type { %"class.WTF::HashTable.1153" }
%"class.WTF::HashTable.1153" = type <{ %"struct.WTF::KeyValuePair.1155"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1155" = type { %"class.blink::WeakMember.1156", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1156" = type { %"class.blink::MemberBase.1157" }
%"class.blink::MemberBase.1157" = type { %"class.blink::ScriptWrappable"* }
%class.scoped_refptr.2122 = type { %"class.base::RefCountedData.2123"* }
%"class.base::RefCountedData.2123" = type opaque
%class.scoped_refptr.2124 = type { %"class.base::RefCountedData.2125"* }
%"class.base::RefCountedData.2125" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.16, %class.scoped_refptr.16, %class.scoped_refptr.16, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.2060, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.2073", %"class.absl::optional.2078", %"class.absl::optional.2088", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.677", %"class.absl::optional.2088", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.2088", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.677", %"class.absl::optional.2093", i8, %class.scoped_refptr.2099 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1685" }
%"class.WTF::HashMap.1685" = type { %"class.WTF::HashTable.1686" }
%"class.WTF::HashTable.1686" = type <{ %"struct.WTF::KeyValuePair.1689"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1689" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.2060 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.2061", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector.2062", %class.scoped_refptr.2071, i8, %"class.url::Origin" }
%"class.base::RefCounted.2061" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr.14 }
%"class.blink::WebVector.2062" = type { %"class.std::__1::vector.2063" }
%"class.std::__1::vector.2063" = type { %"class.std::__1::__vector_base.2064" }
%"class.std::__1::__vector_base.2064" = type { %"class.std::__1::unique_ptr.2065"*, %"class.std::__1::unique_ptr.2065"*, %"class.std::__1::__compressed_pair.2066" }
%"class.std::__1::unique_ptr.2065" = type { %"class.std::__1::__compressed_pair.2251" }
%"class.std::__1::__compressed_pair.2251" = type { %"struct.std::__1::__compressed_pair_elem.2252" }
%"struct.std::__1::__compressed_pair_elem.2252" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.2066" = type { %"struct.std::__1::__compressed_pair_elem.2067" }
%"struct.std::__1::__compressed_pair_elem.2067" = type { %"class.std::__1::unique_ptr.2065"* }
%class.scoped_refptr.2071 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2072", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2072" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.2073" = type { %"class.absl::optional_internal::optional_data.2074" }
%"class.absl::optional_internal::optional_data.2074" = type { %"class.absl::optional_internal::optional_data_base.2075" }
%"class.absl::optional_internal::optional_data_base.2075" = type { %"class.absl::optional_internal::optional_data_dtor_base.2076" }
%"class.absl::optional_internal::optional_data_dtor_base.2076" = type { i8, %union.anon.2077 }
%union.anon.2077 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.2078" = type { %"class.absl::optional_internal::optional_data.2079" }
%"class.absl::optional_internal::optional_data.2079" = type { %"class.absl::optional_internal::optional_data_base.2080" }
%"class.absl::optional_internal::optional_data_base.2080" = type { %"class.absl::optional_internal::optional_data_dtor_base.2081" }
%"class.absl::optional_internal::optional_data_dtor_base.2081" = type { i8, %union.anon.2082 }
%union.anon.2082 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.2083", %"class.WTF::Vector.104", %"class.WTF::String" }
%"class.WTF::Vector.2083" = type { %"class.WTF::VectorBuffer.2084" }
%"class.WTF::VectorBuffer.2084" = type { %"class.WTF::VectorBufferBase.2085" }
%"class.WTF::VectorBufferBase.2085" = type { %class.scoped_refptr.16*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.133", %"class.absl::optional.133" }
%"class.absl::optional.2088" = type { %"class.absl::optional_internal::optional_data.2089" }
%"class.absl::optional_internal::optional_data.2089" = type { %"class.absl::optional_internal::optional_data_base.2090" }
%"class.absl::optional_internal::optional_data_base.2090" = type { %"class.absl::optional_internal::optional_data_dtor_base.2091" }
%"class.absl::optional_internal::optional_data_dtor_base.2091" = type { i8, %union.anon.2092 }
%union.anon.2092 = type { %"class.WTF::String" }
%"class.absl::optional.677" = type { %"class.absl::optional_internal::optional_data.678" }
%"class.absl::optional_internal::optional_data.678" = type { %"class.absl::optional_internal::optional_data_base.679" }
%"class.absl::optional_internal::optional_data_base.679" = type { %"class.absl::optional_internal::optional_data_dtor_base.680" }
%"class.absl::optional_internal::optional_data_dtor_base.680" = type { i8, %union.anon.681 }
%union.anon.681 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.2093" = type { %"class.absl::optional_internal::optional_data.2094" }
%"class.absl::optional_internal::optional_data.2094" = type { %"class.absl::optional_internal::optional_data_base.2095" }
%"class.absl::optional_internal::optional_data_base.2095" = type { %"class.absl::optional_internal::optional_data_dtor_base.2096" }
%"class.absl::optional_internal::optional_data_dtor_base.2096" = type { i8, %union.anon.2097 }
%union.anon.2097 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.2098" }
%"class.mojo::PendingRemote.2098" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.2099 = type { %"class.base::RefCountedData.2100"* }
%"class.base::RefCountedData.2100" = type { %"class.base::RefCountedThreadSafe.2256", %"class.base::internal::flat_tree.2257" }
%"class.base::RefCountedThreadSafe.2256" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2257" = type { %"class.std::__1::vector.2258" }
%"class.std::__1::vector.2258" = type { %"class.std::__1::__vector_base.2259" }
%"class.std::__1::__vector_base.2259" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2260" }
%"class.std::__1::__compressed_pair.2260" = type { %"struct.std::__1::__compressed_pair_elem.2261" }
%"struct.std::__1::__compressed_pair_elem.2261" = type { i32* }
%"class.blink::Member.2126" = type { %"class.blink::MemberBase.2127" }
%"class.blink::MemberBase.2127" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1691", %class.scoped_refptr.1705, %class.scoped_refptr.1706, %"struct.blink::CacheControlHeader", %"class.absl::optional.133", %"class.absl::optional.1622", %"class.absl::optional.1622", %"class.absl::optional.1622", i64, %"class.blink::KURL", %"class.WTF::Vector.1668", %"class.WTF::String", %"class.WTF::Vector.104", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.677", %"class.WTF::Vector.104", %"class.blink::KURL", %"class.absl::optional.1707" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.1690", i8 }
%"struct.std::__1::array.1690" = type { [16 x i8] }
%"class.absl::optional.1691" = type { %"class.absl::optional_internal::optional_data.1692" }
%"class.absl::optional_internal::optional_data.1692" = type { %"class.absl::optional_internal::optional_data_base.1693" }
%"class.absl::optional_internal::optional_data_base.1693" = type { %"class.absl::optional_internal::optional_data_dtor_base.1694" }
%"class.absl::optional_internal::optional_data_dtor_base.1694" = type { i8, %union.anon.1695 }
%union.anon.1695 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.104", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1696", %"class.WTF::Vector.1700" }
%"class.WTF::Vector.1696" = type { %"class.WTF::VectorBuffer.1697" }
%"class.WTF::VectorBuffer.1697" = type { %"class.WTF::VectorBufferBase.761" }
%"class.WTF::VectorBufferBase.761" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1700" = type { %"class.WTF::VectorBuffer.1701" }
%"class.WTF::VectorBuffer.1701" = type { %"class.WTF::VectorBufferBase.1702" }
%"class.WTF::VectorBufferBase.1702" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1705 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1706 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.1622" = type { %"class.absl::optional_internal::optional_data.1623" }
%"class.absl::optional_internal::optional_data.1623" = type { %"class.absl::optional_internal::optional_data_base.1624" }
%"class.absl::optional_internal::optional_data_base.1624" = type { %"class.absl::optional_internal::optional_data_dtor_base.1625" }
%"class.absl::optional_internal::optional_data_dtor_base.1625" = type { i8, %union.anon.1626 }
%union.anon.1626 = type { %"class.base::Time" }
%"class.WTF::Vector.1668" = type { %"class.WTF::VectorBuffer.1669" }
%"class.WTF::VectorBuffer.1669" = type { %"class.WTF::VectorBufferBase.1670" }
%"class.WTF::VectorBufferBase.1670" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.1707" = type { %"class.absl::optional_internal::optional_data.1708" }
%"class.absl::optional_internal::optional_data.1708" = type { %"class.absl::optional_internal::optional_data_base.1709" }
%"class.absl::optional_internal::optional_data_base.1709" = type { %"class.absl::optional_internal::optional_data_dtor_base.1710" }
%"class.absl::optional_internal::optional_data_dtor_base.1710" = type { i8, %union.anon.1711 }
%union.anon.1711 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1888 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1889", i64, %"class.WTF::Vector.1891", %"class.WTF::Vector.1896" }
%"class.WTF::RefCounted.1889" = type { %"class.base::RefCounted.1890" }
%"class.base::RefCounted.1890" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1891" = type { %"class.WTF::VectorBuffer.1892" }
%"class.WTF::VectorBuffer.1892" = type { %"class.WTF::VectorBufferBase.1893" }
%"class.WTF::VectorBufferBase.1893" = type { i8*, i32, i32 }
%"class.WTF::Vector.1896" = type { %"class.WTF::VectorBuffer.1897" }
%"class.WTF::VectorBuffer.1897" = type { %"class.WTF::VectorBufferBase.1898" }
%"class.WTF::VectorBufferBase.1898" = type { %"class.std::__1::unique_ptr.1899"*, i32, i32 }
%"class.std::__1::unique_ptr.1899" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.2128" }
%"class.std::__1::__tree.2128" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2129", %"class.std::__1::__compressed_pair.2133" }
%"class.std::__1::__compressed_pair.2129" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.2133" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.blink::HeapHashMap.2137" = type { %"class.WTF::HashMap.2140" }
%"class.WTF::HashMap.2140" = type { %"class.WTF::HashTable.2141" }
%"class.WTF::HashTable.2141" = type <{ %"struct.WTF::KeyValuePair.2143"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2143" = type opaque
%"class.blink::HeapVector.2144" = type { %"class.WTF::Vector.2147" }
%"class.WTF::Vector.2147" = type { %"class.WTF::VectorBuffer.2148" }
%"class.WTF::VectorBuffer.2148" = type { %"class.WTF::VectorBufferBase.2149" }
%"class.WTF::VectorBufferBase.2149" = type { %"class.blink::Member.2150"*, i32, i32 }
%"class.blink::Member.1673" = type { %"class.blink::MemberBase.1674" }
%"class.blink::MemberBase.1674" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.2152" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.492", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1160, %"class.base::WeakPtrFactory.1161" }
%"class.base::WeakPtrFactory.1161" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.492" = type { %"class.blink::MemberBase.485" }
%"class.blink::HeapHashMap.2153" = type { %"class.WTF::HashMap.2156" }
%"class.WTF::HashMap.2156" = type { %"class.WTF::HashTable.2157" }
%"class.WTF::HashTable.2157" = type <{ %"struct.WTF::KeyValuePair.2159"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2159" = type opaque
%"class.WTF::Vector.2160" = type { %"class.WTF::VectorBuffer.2161" }
%"class.WTF::VectorBuffer.2161" = type { %"class.WTF::VectorBufferBase.2162" }
%"class.WTF::VectorBufferBase.2162" = type { %class.scoped_refptr.1902*, i32, i32 }
%class.scoped_refptr.1902 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.2165" = type { %"class.WTF::HashSet.2168" }
%"class.WTF::HashSet.2168" = type { %"class.WTF::HashTable.2169" }
%"class.WTF::HashTable.2169" = type <{ %"class.blink::Member.2126"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2171" = type { %"class.std::__1::__compressed_pair.2172" }
%"class.std::__1::__compressed_pair.2172" = type { %"struct.std::__1::__compressed_pair_elem.2173" }
%"struct.std::__1::__compressed_pair_elem.2173" = type { %"class.WTF::HashSet.729"* }
%"class.WTF::HashSet.729" = type { %"class.WTF::HashTable.730" }
%"class.WTF::HashTable.730" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtr.2012" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.612 }
%class.scoped_refptr.612 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.682 }
%class.scoped_refptr.682 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::HeapMojoRemote.2177" = type { %"class.blink::Member.2178" }
%"class.blink::Member.2178" = type { %"class.blink::MemberBase.2179" }
%"class.blink::MemberBase.2179" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.2180" = type { %"class.blink::MemberBase.2181" }
%"class.blink::MemberBase.2181" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.2182" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.486" = type { %"class.WTF::HashSet.489" }
%"class.WTF::HashSet.489" = type { %"class.WTF::HashTable.490" }
%"class.WTF::HashTable.490" = type <{ %"class.blink::WeakMember.492"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.493 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.494", [4 x i8] }>
%"class.base::RefCounted.494" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.499", i32, [4 x i8] }>
%"class.std::__1::bitset.499" = type { %"class.std::__1::__bitset.500" }
%"class.std::__1::__bitset.500" = type { [25 x i64] }
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.505" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.blink::KURL"* }
%"class.blink::CrossThreadPersistent.511" = type { %"class.blink::PersistentBase.512" }
%"class.blink::PersistentBase.512" = type { %"class.blink::WorkletModuleResponsesMap"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::Member.520" = type { %"class.blink::MemberBase.521" }
%"class.blink::MemberBase.521" = type { %"class.blink::LocalFrame"* }
%"class.blink::WorkerThread" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.blink::HeapHashMap.528" = type { %"class.WTF::HashMap.531" }
%"class.WTF::HashMap.531" = type { %"class.WTF::HashTable.532" }
%"class.WTF::HashTable.532" = type <{ %"struct.WTF::KeyValuePair.534"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.534" = type opaque
%"class.util::TokenType.535" = type { %"class.base::StrongAlias.536" }
%"class.base::StrongAlias.536" = type { %"class.base::UnguessableToken" }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.690", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.698", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.712", %"class.blink::FrameLoader", %"class.blink::Member.733", %"class.blink::Member.735", %"class.blink::Member.764", %"class.blink::Member.766", %"class.blink::Member.768", %"class.blink::Member.770", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.772", %class.scoped_refptr.774, %"class.blink::Member.775", %"class.blink::Member.777", %"class.blink::Member.779", %"class.blink::Member.781", %"class.blink::Member.783", %"class.blink::Member.785", %"class.blink::Member.787", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.791", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.812", %"class.std::__1::unique_ptr.813", %"class.absl::optional.677", i32, [4 x i8], %"class.std::__1::unique_ptr.819", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.827", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.832", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.837", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.840", %"class.blink::Member.842", %"class.blink::Member.844", %"class.blink::Member.846", %"class.mojo::StructPtr.849", %"class.blink::Member.858", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.860", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.541", %"class.blink::Member.543", %"class.blink::Member.545", i8, i32, i8, i32, %"class.blink::Member.656", %"class.blink::Member.547", %"class.blink::FrameLifecycle", %"class.blink::Member.539", %"class.blink::Member.539", %"class.blink::Member.539", %"class.blink::Member.539", %"class.blink::Member.539", %"class.blink::Member.539", %"class.blink::Member.520", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map.660", %"class.blink::Member.670", i8, %"class.base::UnguessableToken", %"class.absl::optional.672", %"class.absl::optional.677", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.539", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.539", %"class.blink::Member.547", %"class.blink::Member.549", %"class.blink::Member.551", i8, %"class.WTF::Vector.553" }
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.553" = type { %"class.WTF::VectorBuffer.554" }
%"class.WTF::VectorBuffer.554" = type { %"class.WTF::VectorBufferBase.555" }
%"class.WTF::VectorBufferBase.555" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.648" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.556, %"class.std::__1::unique_ptr.124", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.143, i32 }>
%class.scoped_refptr.556 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.143, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.614", %"class.absl::optional.619", %"class.absl::optional.573", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.639", i8, [7 x i8], %class.scoped_refptr.143, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.164" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.152", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.143, %"class.std::__1::unique_ptr.557", %"class.absl::optional.567", %"struct.std::__1::atomic.431", i8, i8, i8, i8, i32, i32, %"class.absl::optional.573", %"class.std::__1::unique_ptr.578", i8, i64, %class.scoped_refptr.611, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.613" }
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.143, i8, %"class.mojo::ScopedHandleBase.560", %class.scoped_refptr.561, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.562", i8*, %"class.base::WeakPtrFactory.563" }
%"class.mojo::ScopedHandleBase.560" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.561 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.562" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.563" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.567" = type { %"class.absl::optional_internal::optional_data.568" }
%"class.absl::optional_internal::optional_data.568" = type { %"class.absl::optional_internal::optional_data_base.569" }
%"class.absl::optional_internal::optional_data_base.569" = type { %"class.absl::optional_internal::optional_data_dtor_base.570" }
%"class.absl::optional_internal::optional_data_dtor_base.570" = type { i8, %union.anon.571 }
%union.anon.571 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.572", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.572" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.578" = type { %"class.std::__1::__compressed_pair.579" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.581", i8, i64, %class.scoped_refptr.582, %class.scoped_refptr.607 }
%"class.base::RepeatingCallback.581" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.582 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.583", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.585", %"class.std::__1::map.596", i8, [7 x i8] }>
%"class.base::RefCounted.583" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.584 }
%class.scoped_refptr.584 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.585" = type { %"class.std::__1::__tree.586" }
%"class.std::__1::__tree.586" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.587", %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::map.596" = type { %"class.std::__1::__tree.597" }
%"class.std::__1::__tree.597" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.598", %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%class.scoped_refptr.607 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.611 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.613" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.614" = type { %"class.absl::optional_internal::optional_data.615" }
%"class.absl::optional_internal::optional_data.615" = type { %"class.absl::optional_internal::optional_data_base.616" }
%"class.absl::optional_internal::optional_data_base.616" = type { %"class.absl::optional_internal::optional_data_dtor_base.617" }
%"class.absl::optional_internal::optional_data_dtor_base.617" = type { i8, %union.anon.618 }
%union.anon.618 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.619" = type { %"class.absl::optional_internal::optional_data.620" }
%"class.absl::optional_internal::optional_data.620" = type { %"class.absl::optional_internal::optional_data_base.621" }
%"class.absl::optional_internal::optional_data_base.621" = type { %"class.absl::optional_internal::optional_data_dtor_base.622" }
%"class.absl::optional_internal::optional_data_dtor_base.622" = type { i8, [7 x i8], %union.anon.623 }
%union.anon.623 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.573" = type { %"class.absl::optional_internal::optional_data.574" }
%"class.absl::optional_internal::optional_data.574" = type { %"class.absl::optional_internal::optional_data_base.575" }
%"class.absl::optional_internal::optional_data_base.575" = type { %"class.absl::optional_internal::optional_data_dtor_base.576" }
%"class.absl::optional_internal::optional_data_dtor_base.576" = type { i8, %union.anon.577 }
%union.anon.577 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.624 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.624 = type { %"class.std::__1::map.627" }
%"class.std::__1::map.627" = type { %"class.std::__1::__tree.628" }
%"class.std::__1::__tree.628" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.629", %"class.std::__1::__compressed_pair.633" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.638"*, i64 }
%"class.std::__1::unique_ptr.638" = type opaque
%"class.std::__1::map.639" = type { %"class.std::__1::__tree.640" }
%"class.std::__1::__tree.640" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.641", %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type { i32 (...)** }
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.539" = type { %"class.blink::MemberBase.540" }
%"class.blink::MemberBase.540" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.539", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map.660" = type { %"class.base::internal::flat_tree.661" }
%"class.base::internal::flat_tree.661" = type { %"class.std::__1::vector.662" }
%"class.std::__1::vector.662" = type { %"class.std::__1::__vector_base.663" }
%"class.std::__1::__vector_base.663" = type { %"struct.std::__1::pair.664"*, %"struct.std::__1::pair.664"*, %"class.std::__1::__compressed_pair.665" }
%"struct.std::__1::pair.664" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"struct.std::__1::pair.664"* }
%"class.blink::Member.670" = type { %"class.blink::MemberBase.671" }
%"class.blink::MemberBase.671" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.672" = type { %"class.absl::optional_internal::optional_data.673" }
%"class.absl::optional_internal::optional_data.673" = type { %"class.absl::optional_internal::optional_data_base.674" }
%"class.absl::optional_internal::optional_data_base.674" = type { %"class.absl::optional_internal::optional_data_dtor_base.675" }
%"class.absl::optional_internal::optional_data_dtor_base.675" = type { i8, %union.anon.676 }
%union.anon.676 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.683" }
%"class.blink::HeapHashSet.683" = type { %"class.WTF::HashSet.686" }
%"class.WTF::HashSet.686" = type { %"class.WTF::HashTable.687" }
%"class.WTF::HashTable.687" = type <{ %"class.blink::WeakMember.689"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.689" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.690" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.691" }
%"class.blink::HeapHashMap.691" = type { %"class.WTF::HashMap.694" }
%"class.WTF::HashMap.694" = type { %"class.WTF::HashTable.695" }
%"class.WTF::HashTable.695" = type <{ %"struct.WTF::KeyValuePair.697"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.697" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.701", %"class.base::WeakPtrFactory.706" }
%"class.WTF::HashMap.701" = type { %"class.WTF::HashTable.702" }
%"class.WTF::HashTable.702" = type <{ %"struct.WTF::KeyValuePair.705"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.705" = type opaque
%"class.base::WeakPtrFactory.706" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.710" }
%"class.blink::Member.710" = type { %"class.blink::MemberBase.711" }
%"class.blink::MemberBase.711" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1087" }
%"class.blink::WeakMember.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2282", i64, %"class.std::__1::map.2283", i8*, i64, %"class.base::WeakPtrFactory.2292" }
%"class.base::RepeatingCallback.2282" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2283" = type { %"class.std::__1::__tree.2284" }
%"class.std::__1::__tree.2284" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2285", %"class.std::__1::__compressed_pair.2289" }
%"class.std::__1::__compressed_pair.2285" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.2289" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.base::WeakPtrFactory.2292" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.712" = type { %"class.WTF::HashSet.715" }
%"class.WTF::HashSet.715" = type { %"class.WTF::HashTable.716" }
%"class.WTF::HashTable.716" = type <{ %"class.blink::WeakMember.718"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.718" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.520", %"class.blink::Member.719", %"class.blink::Member.721", %"class.std::__1::unique_ptr.723", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.729" }
%"class.blink::Member.719" = type { %"class.blink::MemberBase.720" }
%"class.blink::MemberBase.720" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.1668", %"class.blink::Member.1673", %"class.std::__1::unique_ptr.1675", %"class.std::__1::unique_ptr.74", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.1856, %"class.WTF::AtomicString", i32, %"class.absl::optional.1755", %class.scoped_refptr.16, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1720", i8, %"class.absl::optional.1727", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.520", %"class.blink::Member.1857", %"class.blink::Member.1123", %"class.blink::Member.495", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.1868", %class.scoped_refptr, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.1881", %"class.std::__1::unique_ptr.1732", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.1883", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.1888, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.1902, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.1903", %"class.blink::Member.1918", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.1931", %"class.WTF::Vector.104", i8, i8, i8, %"class.blink::WebVector.1845", %"class.blink::WebVector.1845", %"class.mojo::Remote.1936" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1675" = type { %"class.std::__1::__compressed_pair.1676" }
%"class.std::__1::__compressed_pair.1676" = type { %"struct.std::__1::__compressed_pair_elem.1677" }
%"struct.std::__1::__compressed_pair_elem.1677" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.1679", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.1720", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.1727", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.1732", %"class.base::UnguessableToken", %"class.blink::WebVector.1738", %"class.base::TickClock"*, %"class.blink::WebVector.1747", %"class.absl::optional.1755", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.1760", %"class.blink::WebVector", i8, %"class.blink::WebVector.1779", i8, %"class.std::__1::unique_ptr.1787", %"class.blink::WebVector.1845", %"class.blink::WebVector.1845" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebVector.1679" = type { %"class.std::__1::vector.1680" }
%"class.std::__1::vector.1680" = type { %"class.std::__1::__vector_base.1681" }
%"class.std::__1::__vector_base.1681" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.1715" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.1715" = type { %"struct.std::__1::__compressed_pair_elem.1716" }
%"struct.std::__1::__compressed_pair_elem.1716" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.1682", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.1682" = type { %"class.std::__1::__compressed_pair.1683" }
%"class.std::__1::__compressed_pair.1683" = type { %"struct.std::__1::__compressed_pair_elem.1684" }
%"struct.std::__1::__compressed_pair_elem.1684" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.1726", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.1726" = type { i8* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.1678" }
%"class.blink::WebPrivatePtr.1678" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.1738" = type { %"class.std::__1::vector.1739" }
%"class.std::__1::vector.1739" = type { %"class.std::__1::__vector_base.1740" }
%"class.std::__1::__vector_base.1740" = type { %"class.std::__1::unique_ptr.1741"*, %"class.std::__1::unique_ptr.1741"*, %"class.std::__1::__compressed_pair.1742" }
%"class.std::__1::unique_ptr.1741" = type opaque
%"class.std::__1::__compressed_pair.1742" = type { %"struct.std::__1::__compressed_pair_elem.1743" }
%"struct.std::__1::__compressed_pair_elem.1743" = type { %"class.std::__1::unique_ptr.1741"* }
%"class.blink::WebVector.1747" = type { %"class.std::__1::vector.1748" }
%"class.std::__1::vector.1748" = type { %"class.std::__1::__vector_base.1749" }
%"class.std::__1::__vector_base.1749" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1750" }
%"class.std::__1::__compressed_pair.1750" = type { %"struct.std::__1::__compressed_pair_elem.1751" }
%"struct.std::__1::__compressed_pair_elem.1751" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.absl::optional.1760" = type { %"class.absl::optional_internal::optional_data.1761" }
%"class.absl::optional_internal::optional_data.1761" = type { %"class.absl::optional_internal::optional_data_base.1762" }
%"class.absl::optional_internal::optional_data_base.1762" = type { %"class.absl::optional_internal::optional_data_dtor_base.1763" }
%"class.absl::optional_internal::optional_data_dtor_base.1763" = type { i8, [7 x i8], %union.anon.1764 }
%union.anon.1764 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.796" }
%"class.std::__1::vector.796" = type { %"class.std::__1::__vector_base.797" }
%"class.std::__1::__vector_base.797" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.798" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.1779" = type { %"class.std::__1::vector.1780" }
%"class.std::__1::vector.1780" = type { %"class.std::__1::__vector_base.1781" }
%"class.std::__1::__vector_base.1781" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1782" }
%"class.std::__1::__compressed_pair.1782" = type { %"struct.std::__1::__compressed_pair_elem.1783" }
%"struct.std::__1::__compressed_pair_elem.1783" = type { i32* }
%"class.std::__1::unique_ptr.1787" = type { %"class.std::__1::__compressed_pair.1788" }
%"class.std::__1::__compressed_pair.1788" = type { %"struct.std::__1::__compressed_pair_elem.1789" }
%"struct.std::__1::__compressed_pair_elem.1789" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.1790" }
%"class.blink::WebVector.1790" = type { %"class.std::__1::vector.1791" }
%"class.std::__1::vector.1791" = type { %"class.std::__1::__vector_base.1792" }
%"class.std::__1::__vector_base.1792" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.1837" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.1793", %"class.blink::WebVector.1801", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector", i32, [4 x i8], %"class.absl::optional.1832", %"class.blink::WebVector" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.1793" = type { %"class.std::__1::vector.1794" }
%"class.std::__1::vector.1794" = type { %"class.std::__1::__vector_base.1795" }
%"class.std::__1::__vector_base.1795" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.1796" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.1796" = type { %"struct.std::__1::__compressed_pair_elem.1797" }
%"struct.std::__1::__compressed_pair_elem.1797" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.1801" = type { %"class.std::__1::vector.1802" }
%"class.std::__1::vector.1802" = type { %"class.std::__1::__vector_base.1803" }
%"class.std::__1::__vector_base.1803" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.1827" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.1804", %"class.blink::WebVector", %"class.blink::WebVector.1812", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.1804" = type { %"class.std::__1::vector.1805" }
%"class.std::__1::vector.1805" = type { %"class.std::__1::__vector_base.1806" }
%"class.std::__1::__vector_base.1806" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.1807" }
%"class.std::__1::__compressed_pair.1807" = type { %"struct.std::__1::__compressed_pair_elem.1808" }
%"struct.std::__1::__compressed_pair_elem.1808" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.1812" = type { %"class.std::__1::vector.1813" }
%"class.std::__1::vector.1813" = type { %"class.std::__1::__vector_base.1814" }
%"class.std::__1::__vector_base.1814" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.1822" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.1815" }
%"class.blink::WebVector.1815" = type { %"class.std::__1::vector.1816" }
%"class.std::__1::vector.1816" = type { %"class.std::__1::__vector_base.1817" }
%"class.std::__1::__vector_base.1817" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1818" }
%"class.std::__1::__compressed_pair.1818" = type { %"struct.std::__1::__compressed_pair_elem.992" }
%"struct.std::__1::__compressed_pair_elem.992" = type { i8* }
%"class.std::__1::__compressed_pair.1822" = type { %"struct.std::__1::__compressed_pair_elem.1823" }
%"struct.std::__1::__compressed_pair_elem.1823" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.1827" = type { %"struct.std::__1::__compressed_pair_elem.1828" }
%"struct.std::__1::__compressed_pair_elem.1828" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.1832" = type { %"class.absl::optional_internal::optional_data.1833" }
%"class.absl::optional_internal::optional_data.1833" = type { %"class.absl::optional_internal::optional_data_base.1834" }
%"class.absl::optional_internal::optional_data_base.1834" = type { %"class.absl::optional_internal::optional_data_dtor_base.1835" }
%"class.absl::optional_internal::optional_data_dtor_base.1835" = type { i8, [7 x i8], %union.anon.1836 }
%union.anon.1836 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.1837" = type { %"struct.std::__1::__compressed_pair_elem.1838" }
%"struct.std::__1::__compressed_pair_elem.1838" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%class.scoped_refptr.1856 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.1755" = type { %"class.absl::optional_internal::optional_data.1756" }
%"class.absl::optional_internal::optional_data.1756" = type { %"class.absl::optional_internal::optional_data_base.1757" }
%"class.absl::optional_internal::optional_data_base.1757" = type { %"class.absl::optional_internal::optional_data_dtor_base.1758" }
%"class.absl::optional_internal::optional_data_dtor_base.1758" = type { i8, %union.anon.1759 }
%union.anon.1759 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector", %"class.blink::WebString", %"class.blink::WebVector", %"class.blink::WebVector" }
%"class.std::__1::unique_ptr.1720" = type { %"class.std::__1::__compressed_pair.1721" }
%"class.std::__1::__compressed_pair.1721" = type { %"struct.std::__1::__compressed_pair_elem.1722" }
%"struct.std::__1::__compressed_pair_elem.1722" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.1727" = type { %"class.absl::optional_internal::optional_data.1728" }
%"class.absl::optional_internal::optional_data.1728" = type { %"class.absl::optional_internal::optional_data_base.1729" }
%"class.absl::optional_internal::optional_data_base.1729" = type { %"class.absl::optional_internal::optional_data_dtor_base.1730" }
%"class.absl::optional_internal::optional_data_dtor_base.1730" = type { i8, %union.anon.1731 }
%union.anon.1731 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.1765", %"class.base::flat_map.660", i8, [7 x i8] }>
%"class.std::__1::vector.1765" = type { %"class.std::__1::__vector_base.1766" }
%"class.std::__1::__vector_base.1766" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.1774" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.1767", i8, i8, [6 x i8] }>
%"class.std::__1::vector.1767" = type { %"class.std::__1::__vector_base.1768" }
%"class.std::__1::__vector_base.1768" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.1769" }
%"class.std::__1::__compressed_pair.1769" = type { %"struct.std::__1::__compressed_pair_elem.1770" }
%"struct.std::__1::__compressed_pair_elem.1770" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.1774" = type { %"struct.std::__1::__compressed_pair_elem.1775" }
%"struct.std::__1::__compressed_pair_elem.1775" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.1857" = type { %"class.blink::MemberBase.1858" }
%"class.blink::MemberBase.1858" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.104", %"class.blink::Member.1861", %"class.absl::optional.1863", i64, i64, i32, %class.scoped_refptr.988, %class.scoped_refptr.1856, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.988 }
%"class.blink::Member.1861" = type { %"class.blink::MemberBase.1862" }
%"class.blink::MemberBase.1862" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.1863" = type { %"class.absl::optional_internal::optional_data.1864" }
%"class.absl::optional_internal::optional_data.1864" = type { %"class.absl::optional_internal::optional_data_base.1865" }
%"class.absl::optional_internal::optional_data_base.1865" = type { %"class.absl::optional_internal::optional_data_dtor_base.1866" }
%"class.absl::optional_internal::optional_data_dtor_base.1866" = type { i8, %union.anon.1867 }
%union.anon.1867 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%class.scoped_refptr.988 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.990", i64, %"class.WTF::Vector.994", %"class.WTF::Vector.999", %"class.WTF::Vector.1005", %"class.WTF::Vector.1023", %class.scoped_refptr, %"class.WTF::HashMap.1029", %"class.WTF::Vector.1034", %"class.WTF::Vector.994", %"class.WTF::Vector.1040", %"class.WTF::HashMap.1045", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.989" }
%"class.base::RefCountedThreadSafe.989" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.990" = type { %"class.std::__1::__compressed_pair.991" }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.992" }
%"class.WTF::Vector.999" = type { %"class.WTF::VectorBuffer.1000" }
%"class.WTF::VectorBuffer.1000" = type { %"class.WTF::VectorBufferBase.1001", [8 x i8] }
%"class.WTF::VectorBufferBase.1001" = type { %class.scoped_refptr.1002*, i32, i32 }
%class.scoped_refptr.1002 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1009", %"class.std::__1::unique_ptr.1015" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1008 }
%class.scoped_refptr.1008 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1009" = type { %"class.std::__1::__compressed_pair.1010" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.1011" }
%"struct.std::__1::__compressed_pair_elem.1011" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1015" = type { %"class.std::__1::__compressed_pair.1016" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.1017" }
%"struct.std::__1::__compressed_pair_elem.1017" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1023" = type { %"class.WTF::VectorBuffer.1024" }
%"class.WTF::VectorBuffer.1024" = type { %"class.WTF::VectorBufferBase.1025" }
%"class.WTF::VectorBufferBase.1025" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1026", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1026" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1029" = type { %"class.WTF::HashTable.1030" }
%"class.WTF::HashTable.1030" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.WTF::Vector.1034" = type { %"class.WTF::VectorBuffer.1035" }
%"class.WTF::VectorBuffer.1035" = type { %"class.WTF::VectorBufferBase.1036" }
%"class.WTF::VectorBufferBase.1036" = type { %"class.mojo::ScopedHandleBase.1037"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1037" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.994" = type { %"class.WTF::VectorBuffer.995" }
%"class.WTF::VectorBuffer.995" = type { %"class.WTF::VectorBufferBase.996", [16 x i8] }
%"class.WTF::VectorBufferBase.996" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1040" = type { %"class.WTF::VectorBuffer.1041" }
%"class.WTF::VectorBuffer.1041" = type { %"class.WTF::VectorBufferBase.1042" }
%"class.WTF::VectorBufferBase.1042" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.1045" = type { %"class.WTF::HashTable.1046" }
%"class.WTF::HashTable.1046" = type <{ %"struct.WTF::KeyValuePair.1049"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1049" = type { i8**, %"class.std::__1::unique_ptr.2274" }
%"class.std::__1::unique_ptr.2274" = type { %"class.std::__1::__compressed_pair.2275" }
%"class.std::__1::__compressed_pair.2275" = type { %"struct.std::__1::__compressed_pair_elem.2276" }
%"struct.std::__1::__compressed_pair_elem.2276" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.1123" = type { %"class.blink::MemberBase.1124" }
%"class.blink::MemberBase.1124" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.mojo::Remote.1868" = type { %"class.mojo::internal::InterfacePtrState.1869" }
%"class.mojo::internal::InterfacePtrState.1869" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1870" }
%"class.std::__1::unique_ptr.1870" = type { %"class.std::__1::__compressed_pair.1871" }
%"class.std::__1::__compressed_pair.1871" = type { %"struct.std::__1::__compressed_pair_elem.1872" }
%"struct.std::__1::__compressed_pair_elem.1872" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.133", %"class.absl::optional.133", %"class.absl::optional.133", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.1876", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.721" }
%"class.WTF::Vector.1876" = type { %"class.WTF::VectorBuffer.1877" }
%"class.WTF::VectorBuffer.1877" = type { %"class.WTF::VectorBufferBase.1878" }
%"class.WTF::VectorBufferBase.1878" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.blink::Member.1881" = type { %"class.blink::MemberBase.1882" }
%"class.blink::MemberBase.1882" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.1732" = type { %"class.std::__1::__compressed_pair.1733" }
%"class.std::__1::__compressed_pair.1733" = type { %"struct.std::__1::__compressed_pair_elem.1734" }
%"struct.std::__1::__compressed_pair_elem.1734" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map.660", %"class.base::flat_map" }
%"class.WTF::Vector.1883" = type { %"class.WTF::VectorBuffer.1884" }
%"class.WTF::VectorBuffer.1884" = type { %"class.WTF::VectorBufferBase.1885" }
%"class.WTF::VectorBufferBase.1885" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%"class.blink::Member.1903" = type { %"class.blink::MemberBase.1904" }
%"class.blink::MemberBase.1904" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.1907", %"class.std::__1::unique_ptr.1912", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.1907" = type { %"class.WTF::HashTable.1908" }
%"class.WTF::HashTable.1908" = type <{ %"struct.WTF::KeyValuePair.1911"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1911" = type { %"class.WTF::Vector.2341", %class.scoped_refptr.2346 }
%"class.WTF::Vector.2341" = type { %"class.WTF::VectorBuffer.2342" }
%"class.WTF::VectorBuffer.2342" = type { %"class.WTF::VectorBufferBase.2343", [32 x i8] }
%class.scoped_refptr.2346 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.2347", %"class.WTF::Vector.2349", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.2347" = type { %"class.base::RefCounted.2348" }
%"class.base::RefCounted.2348" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2353", i64, %"class.absl::optional.2358" }
%"class.std::__1::unique_ptr.2353" = type { %"class.std::__1::__compressed_pair.2354" }
%"class.std::__1::__compressed_pair.2354" = type { %"struct.std::__1::__compressed_pair_elem.992" }
%"class.absl::optional.2358" = type { %"class.absl::optional_internal::optional_data.2359" }
%"class.absl::optional_internal::optional_data.2359" = type { %"class.absl::optional_internal::optional_data_base.2360" }
%"class.absl::optional_internal::optional_data_base.2360" = type { %"class.absl::optional_internal::optional_data_dtor_base.2361" }
%"class.absl::optional_internal::optional_data_dtor_base.2361" = type { i8, %union.anon.2362 }
%union.anon.2362 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.2363", %"class.std::__1::unique_ptr.2364" }
%"class.mojo::ScopedHandleBase.2363" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2364" = type { %"class.std::__1::__compressed_pair.2365" }
%"class.std::__1::__compressed_pair.2365" = type { %"struct.std::__1::__compressed_pair_elem.2366" }
%"struct.std::__1::__compressed_pair_elem.2366" = type { i8* }
%"class.std::__1::unique_ptr.1912" = type { %"class.std::__1::__compressed_pair.1913" }
%"class.std::__1::__compressed_pair.1913" = type { %"struct.std::__1::__compressed_pair_elem.1914" }
%"struct.std::__1::__compressed_pair_elem.1914" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Member.1918" = type { %"class.blink::MemberBase.1919" }
%"class.blink::MemberBase.1919" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.1924" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.1920", %"class.std::__1::bitset.1920", %"class.std::__1::bitset.1922" }
%"class.std::__1::bitset.1920" = type { %"class.std::__1::__bitset.1921" }
%"class.std::__1::__bitset.1921" = type { [11 x i64] }
%"class.std::__1::bitset.1922" = type { %"class.std::__1::__bitset.1923" }
%"class.std::__1::__bitset.1923" = type { [2 x i64] }
%"class.blink::HeapHashSet.1924" = type { %"class.WTF::HashSet.1927" }
%"class.WTF::HashSet.1927" = type { %"class.WTF::HashTable.1928" }
%"class.WTF::HashTable.1928" = type <{ %"class.blink::Member.1930"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1930" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.1931" = type { %"class.WTF::VectorBuffer.1932" }
%"class.WTF::VectorBuffer.1932" = type { %"class.WTF::VectorBufferBase.1933" }
%"class.WTF::VectorBufferBase.1933" = type { i32*, i32, i32 }
%"class.blink::WebVector.1845" = type { %"class.std::__1::vector.1846" }
%"class.std::__1::vector.1846" = type { %"class.std::__1::__vector_base.1847" }
%"class.std::__1::__vector_base.1847" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.1848" }
%"class.std::__1::__compressed_pair.1848" = type { %"struct.std::__1::__compressed_pair_elem.1849" }
%"struct.std::__1::__compressed_pair_elem.1849" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.1936" = type { %"class.mojo::internal::InterfacePtrState.1937" }
%"class.mojo::internal::InterfacePtrState.1937" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1938" }
%"class.std::__1::unique_ptr.1938" = type { %"class.std::__1::__compressed_pair.1939" }
%"class.std::__1::__compressed_pair.1939" = type { %"struct.std::__1::__compressed_pair_elem.1940" }
%"struct.std::__1::__compressed_pair_elem.1940" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::Member.733" = type { %"class.blink::MemberBase.734" }
%"class.blink::MemberBase.734" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1381", %"class.blink::Member.520", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1386", i8, i32, %"class.blink::Color", %"class.absl::optional.1388", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1393", %"class.blink::Member.1395", %"class.blink::Member.1395", %"class.std::__1::unique_ptr.1398", i32, [4 x i8], %"class.WTF::HashSet.1401", %"class.blink::Member.1408", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1410", %"class.blink::HeapHashSet.1417", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1425", i8, %"class.blink::Member.1431", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1443", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1457", i8, %"class.std::__1::unique_ptr.1463", %"class.std::__1::unique_ptr.1580", %"class.WTF::Vector.1586", i32, %class.scoped_refptr.1591, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1592", %"class.blink::Member.1594", %"class.blink::Member.1596", %"class.blink::HeapHashSet.1598", %"class.blink::HeapHashSet.1605", %"class.std::__1::unique_ptr.1612", %"class.std::__1::unique_ptr.1619", %"class.WTF::Vector.953" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1381" = type { %"class.WTF::HashTable.1382" }
%"class.WTF::HashTable.1382" = type <{ %class.scoped_refptr.1385*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1385 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1386" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1387", { i64, i64 } }
%"class.blink::WeakMember.1387" = type { %"class.blink::MemberBase.734" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1388" = type { %"class.absl::optional_internal::optional_data.1389" }
%"class.absl::optional_internal::optional_data.1389" = type { %"class.absl::optional_internal::optional_data_base.1390" }
%"class.absl::optional_internal::optional_data_base.1390" = type { %"class.absl::optional_internal::optional_data_dtor_base.1391" }
%"class.absl::optional_internal::optional_data_dtor_base.1391" = type { i8, %union.anon.1392 }
%union.anon.1392 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1393" = type { %"class.blink::MemberBase.1394" }
%"class.blink::MemberBase.1394" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1395" = type { %"class.blink::MemberBase.1396" }
%"class.blink::MemberBase.1396" = type { %"class.blink::HeapHashSet.1397"* }
%"class.blink::HeapHashSet.1397" = type opaque
%"class.std::__1::unique_ptr.1398" = type { %"class.std::__1::__compressed_pair.1399" }
%"class.std::__1::__compressed_pair.1399" = type { %"struct.std::__1::__compressed_pair_elem.1400" }
%"struct.std::__1::__compressed_pair_elem.1400" = type { %"class.WTF::HashSet.1401"* }
%"class.WTF::HashSet.1401" = type { %"class.WTF::HashTable.1402" }
%"class.WTF::HashTable.1402" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1408" = type { %"class.blink::MemberBase.1409" }
%"class.blink::MemberBase.1409" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1410" = type { %"class.WTF::HashSet.1413" }
%"class.WTF::HashSet.1413" = type { %"class.WTF::HashTable.1414" }
%"class.WTF::HashTable.1414" = type <{ %"class.blink::Member.1416"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1416" = type opaque
%"class.blink::HeapHashSet.1417" = type { %"class.WTF::HashSet.1420" }
%"class.WTF::HashSet.1420" = type { %"class.WTF::HashTable.1421" }
%"class.WTF::HashTable.1421" = type <{ %"class.blink::Member.1423"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1423" = type { %"class.blink::MemberBase.1424" }
%"class.blink::MemberBase.1424" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1653", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1664", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.735" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1653" = type { %"class.blink::MemberBase.1654" }
%"class.blink::MemberBase.1654" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1655", %"class.blink::Member.1656", %"class.blink::Member.1658", %"class.blink::Member.1660", %"class.blink::Member.1662", %"class.WTF::Vector.953", i16, %class.scoped_refptr.1160 }
%"class.blink::ThreadState::PrefinalizerRegistration.1655" = type { i8 }
%"class.blink::Member.1656" = type { %"class.blink::MemberBase.1657" }
%"class.blink::MemberBase.1657" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1658" = type { %"class.blink::MemberBase.1659" }
%"class.blink::MemberBase.1659" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1660" = type { %"class.blink::MemberBase.1661" }
%"class.blink::MemberBase.1661" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1662" = type { %"class.blink::MemberBase.1663" }
%"class.blink::MemberBase.1663" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1664" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1665", { i64, i64 } }
%"class.blink::WeakMember.1665" = type { %"class.blink::MemberBase.1424" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1425" = type { %"class.std::__1::__compressed_pair.1426" }
%"class.std::__1::__compressed_pair.1426" = type { %"struct.std::__1::__compressed_pair_elem.1427" }
%"struct.std::__1::__compressed_pair_elem.1427" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1431" = type { %"class.blink::MemberBase.1432" }
%"class.blink::MemberBase.1432" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1435", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1435" = type { %"class.WTF::HashTable.1436" }
%"class.WTF::HashTable.1436" = type <{ %"struct.WTF::KeyValuePair.1438"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1438" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1439", i32, i32 }
%"class.WTF::Vector.1439" = type { %"class.WTF::VectorBuffer.1440" }
%"class.WTF::VectorBuffer.1440" = type { %"class.WTF::VectorBufferBase.1441" }
%"class.WTF::VectorBufferBase.1441" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1443" = type { %"class.WTF::LinkedHashSet.1446" }
%"class.WTF::LinkedHashSet.1446" = type { %"class.WTF::HashMap.1447", %"class.WTF::VectorBackedLinkedList.1451" }
%"class.WTF::HashMap.1447" = type { %"class.WTF::HashTable.1448" }
%"class.WTF::HashTable.1448" = type <{ %"struct.WTF::KeyValuePair.1450"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1450" = type opaque
%"class.WTF::VectorBackedLinkedList.1451" = type { %"class.WTF::Vector.1452", i32, i32 }
%"class.WTF::Vector.1452" = type { %"class.WTF::VectorBuffer.1453" }
%"class.WTF::VectorBuffer.1453" = type { %"class.WTF::VectorBufferBase.1454" }
%"class.WTF::VectorBufferBase.1454" = type { %"class.WTF::VectorBackedLinkedListNode.1455"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1455" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1457" = type { %"class.std::__1::__compressed_pair.1458" }
%"class.std::__1::__compressed_pair.1458" = type { %"struct.std::__1::__compressed_pair_elem.1459" }
%"struct.std::__1::__compressed_pair_elem.1459" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1463" = type { %"class.std::__1::__compressed_pair.1464" }
%"class.std::__1::__compressed_pair.1464" = type { %"struct.std::__1::__compressed_pair_elem.1465" }
%"struct.std::__1::__compressed_pair_elem.1465" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1466, %class.scoped_refptr.1466, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1557", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1562", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1466 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1467", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1474" }
%"class.WTF::RefCounted.1467" = type { %"class.base::RefCounted.1468" }
%"class.base::RefCounted.1468" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1469", i32, [4 x i8] }>
%"class.WTF::Vector.1469" = type { %"class.WTF::VectorBuffer.1470" }
%"class.WTF::VectorBuffer.1470" = type { %"class.WTF::VectorBufferBase.1471" }
%"class.WTF::VectorBufferBase.1471" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1474" = type { %"class.WTF::VectorBuffer.1475" }
%"class.WTF::VectorBuffer.1475" = type { %"class.WTF::VectorBufferBase.1476" }
%"class.WTF::VectorBufferBase.1476" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1480", %"class.std::__1::unique_ptr.1529", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1477, %class.scoped_refptr.1478, %class.scoped_refptr.1479 }
%class.scoped_refptr.1477 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1493", i8, i8, %class.scoped_refptr.1477, i32, i32 }
%"class.WTF::RefCounted.1493" = type { %"class.base::RefCounted.1494" }
%"class.base::RefCounted.1494" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1478 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1648" }
%"class.blink::PaintPropertyNode.1648" = type { %"class.WTF::RefCounted.1649", i8, i8, %class.scoped_refptr.1478, i32, i32 }
%"class.WTF::RefCounted.1649" = type { %"class.base::RefCounted.1650" }
%"class.base::RefCounted.1650" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1479 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1645" }
%"class.blink::PaintPropertyNode.1645" = type { %"class.WTF::RefCounted.1646", i8, i8, %class.scoped_refptr.1479, i32, i32 }
%"class.WTF::RefCounted.1646" = type { %"class.base::RefCounted.1647" }
%"class.base::RefCounted.1647" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1480" = type { %"class.std::__1::__compressed_pair.1481" }
%"class.std::__1::__compressed_pair.1481" = type { %"struct.std::__1::__compressed_pair_elem.1482" }
%"struct.std::__1::__compressed_pair_elem.1482" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1483", %"class.WTF::Vector.1488", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1483" = type { %"class.WTF::VectorBuffer.1484" }
%"class.WTF::VectorBuffer.1484" = type { %"class.WTF::VectorBufferBase.1485" }
%"class.WTF::VectorBufferBase.1485" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1488" = type { %"class.WTF::VectorBuffer.1489" }
%"class.WTF::VectorBuffer.1489" = type { %"class.WTF::VectorBufferBase.1490" }
%"class.WTF::VectorBufferBase.1490" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1508" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1501, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1502", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1495" }
%"class.std::__1::unique_ptr.1495" = type { %"class.std::__1::__compressed_pair.1496" }
%"class.std::__1::__compressed_pair.1496" = type { %"struct.std::__1::__compressed_pair_elem.1497" }
%"struct.std::__1::__compressed_pair_elem.1497" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1501 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1630", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1630" = type { %"class.WTF::RefCounted.1631", i8, i8, %class.scoped_refptr.1501, i32, i32 }
%"class.WTF::RefCounted.1631" = type { %"class.base::RefCounted.1632" }
%"class.base::RefCounted.1632" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1633" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1633" = type { %"class.absl::optional_internal::optional_data.1634" }
%"class.absl::optional_internal::optional_data.1634" = type { %"class.absl::optional_internal::optional_data_base.1635" }
%"class.absl::optional_internal::optional_data_base.1635" = type { %"class.absl::optional_internal::optional_data_dtor_base.1636" }
%"class.absl::optional_internal::optional_data_dtor_base.1636" = type { i8, %union.anon.1637 }
%union.anon.1637 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1638", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1638" = type { %"class.std::__1::__vector_base.1639" }
%"class.std::__1::__vector_base.1639" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1640" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1640" = type { %"struct.std::__1::__compressed_pair_elem.1641" }
%"struct.std::__1::__compressed_pair_elem.1641" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1502" = type { %"class.std::__1::__compressed_pair.1503" }
%"class.std::__1::__compressed_pair.1503" = type { %"struct.std::__1::__compressed_pair_elem.1504" }
%"struct.std::__1::__compressed_pair_elem.1504" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1508" = type { %"class.std::__1::__compressed_pair.1509" }
%"class.std::__1::__compressed_pair.1509" = type { %"struct.std::__1::__compressed_pair_elem.1510" }
%"struct.std::__1::__compressed_pair_elem.1510" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1517", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1511" = type { %"class.std::__1::__compressed_pair.1512" }
%"class.std::__1::__compressed_pair.1512" = type { %"struct.std::__1::__compressed_pair_elem.1513" }
%"struct.std::__1::__compressed_pair_elem.1513" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1517" = type { %"class.std::__1::__compressed_pair.1518" }
%"class.std::__1::__compressed_pair.1518" = type { %"struct.std::__1::__compressed_pair_elem.1519" }
%"struct.std::__1::__compressed_pair_elem.1519" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1529" = type { %"class.std::__1::__compressed_pair.1530" }
%"class.std::__1::__compressed_pair.1530" = type { %"struct.std::__1::__compressed_pair_elem.1531" }
%"struct.std::__1::__compressed_pair_elem.1531" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1532", %"class.absl::optional.1532" }
%"class.absl::optional.1532" = type { %"class.absl::optional_internal::optional_data.1533" }
%"class.absl::optional_internal::optional_data.1533" = type { %"class.absl::optional_internal::optional_data_base.1534" }
%"class.absl::optional_internal::optional_data_base.1534" = type { %"class.absl::optional_internal::optional_data_dtor_base.1535" }
%"class.absl::optional_internal::optional_data_dtor_base.1535" = type { i8, [3 x i8], %union.anon.1536 }
%union.anon.1536 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1474"*, %"class.absl::optional.1542", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1542" = type { %"class.absl::optional_internal::optional_data.1543" }
%"class.absl::optional_internal::optional_data.1543" = type { %"class.absl::optional_internal::optional_data_base.1544" }
%"class.absl::optional_internal::optional_data_base.1544" = type { %"class.absl::optional_internal::optional_data_dtor_base.1545" }
%"class.absl::optional_internal::optional_data_dtor_base.1545" = type { i8, %union.anon.1546 }
%union.anon.1546 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1547", %"class.WTF::Vector.1552" }
%"class.WTF::Vector.1547" = type { %"class.WTF::VectorBuffer.1548" }
%"class.WTF::VectorBuffer.1548" = type { %"class.WTF::VectorBufferBase.1549", [128 x i8] }
%"class.WTF::VectorBufferBase.1549" = type { i32*, i32, i32 }
%"class.WTF::Vector.1552" = type { %"class.WTF::VectorBuffer.1553" }
%"class.WTF::VectorBuffer.1553" = type { %"class.WTF::VectorBufferBase.1554", [128 x i8] }
%"class.WTF::VectorBufferBase.1554" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1557" = type { %"class.WTF::VectorBuffer.1558" }
%"class.WTF::VectorBuffer.1558" = type { %"class.WTF::VectorBufferBase.1559" }
%"class.WTF::VectorBufferBase.1559" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1562" = type { %"class.WTF::HashTable.1563" }
%"class.WTF::HashTable.1563" = type <{ %"struct.WTF::KeyValuePair.1566"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1566" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1567", %"class.WTF::Vector.1572" }
%"class.WTF::HashMap.1567" = type { %"class.WTF::HashTable.1568" }
%"class.WTF::HashTable.1568" = type <{ %"struct.WTF::KeyValuePair.1571"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1571" = type opaque
%"class.WTF::Vector.1572" = type { %"class.WTF::VectorBuffer.1573" }
%"class.WTF::VectorBuffer.1573" = type { %"class.WTF::VectorBufferBase.1574" }
%"class.WTF::VectorBufferBase.1574" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1580" = type { %"class.std::__1::__compressed_pair.1581" }
%"class.std::__1::__compressed_pair.1581" = type { %"struct.std::__1::__compressed_pair_elem.1582" }
%"struct.std::__1::__compressed_pair_elem.1582" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1586" = type { %"class.WTF::VectorBuffer.1587" }
%"class.WTF::VectorBuffer.1587" = type { %"class.WTF::VectorBufferBase.1588" }
%"class.WTF::VectorBufferBase.1588" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1591 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1594" = type { %"class.blink::MemberBase.1595" }
%"class.blink::MemberBase.1595" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1596" = type { %"class.blink::MemberBase.1597" }
%"class.blink::MemberBase.1597" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1598" = type { %"class.WTF::HashSet.1601" }
%"class.WTF::HashSet.1601" = type { %"class.WTF::HashTable.1602" }
%"class.WTF::HashTable.1602" = type <{ %"class.blink::WeakMember.1604"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1604" = type opaque
%"class.blink::HeapHashSet.1605" = type { %"class.WTF::HashSet.1608" }
%"class.WTF::HashSet.1608" = type { %"class.WTF::HashTable.1609" }
%"class.WTF::HashTable.1609" = type <{ %"class.blink::WeakMember.1611"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1611" = type opaque
%"class.std::__1::unique_ptr.1612" = type { %"class.std::__1::__compressed_pair.1613" }
%"class.std::__1::__compressed_pair.1613" = type { %"struct.std::__1::__compressed_pair_elem.1614" }
%"struct.std::__1::__compressed_pair_elem.1614" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1619" = type { %"class.std::__1::__compressed_pair.1620" }
%"class.std::__1::__compressed_pair.1620" = type { %"struct.std::__1::__compressed_pair_elem.1621" }
%"struct.std::__1::__compressed_pair_elem.1621" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1622", i32, i32, i32, i8, [3 x i8] }>
%"class.WTF::Vector.953" = type { %"class.WTF::VectorBuffer.954" }
%"class.WTF::VectorBuffer.954" = type { %"class.WTF::VectorBufferBase.955" }
%"class.WTF::VectorBufferBase.955" = type { %"class.base::OnceCallback.152"*, i32, i32 }
%"class.blink::Member.735" = type { %"class.blink::MemberBase.736" }
%"class.blink::MemberBase.736" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.748" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.737", %"class.blink::Member.737" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.737", %"class.blink::Member.739", %"class.blink::Member.737", %"class.blink::Member.737", %"class.blink::Member.741" }
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.865", %"class.blink::Member.867", %"class.blink::Member.739", %"class.blink::Member.869", %"class.blink::Member.869", %"class.blink::Member.891", %"class.blink::Member.893", %"class.blink::Member.895", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.900", %"class.blink::HeapVector.902" }
%"class.blink::Member.865" = type { %"class.blink::MemberBase.866" }
%"class.blink::MemberBase.866" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.867" = type { %"class.blink::MemberBase.868" }
%"class.blink::MemberBase.868" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.945", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.953", %"class.WTF::Vector.953", i8, i32, %"class.blink::Member.958", %"class.blink::Member", %"class.blink::Member.484", %"class.blink::Member.1123", %"class.blink::Member.1125", %"class.blink::Member.1127", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1129", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1135", %"class.blink::Member.1137", %"class.blink::Member.908", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1139", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.884", %"class.blink::Member.735", %"class.blink::Member.1098", %"class.blink::Member.735", %"class.blink::Member.735", %"class.blink::Member.735", %"class.blink::UserActionElementSet", %"class.blink::Member.1170", double, double, i64, i64, %"class.blink::HeapHashSet.1172", %"class.blink::HeapHashSet.1179", i16, i8, %"class.blink::Member.1186", %"class.blink::Member.1188", %"class.blink::Member.1190", %"class.blink::Member.1192", %"class.blink::TextLinkColors", %"class.blink::Member.1194", i8, [7 x i8], %"class.blink::HeapHashMap.1196", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.735", %"class.WTF::Vector.1203", %"class.blink::Member.1208", %"class.blink::Member.1210", i8, %"class.blink::Member.735", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1212", %"class.blink::HeapVector.1214", %"class.std::__1::unique_ptr.1222", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1228", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1241", %"class.WTF::Vector.1243", i8, i8, %"class.std::__1::unique_ptr.1248", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.884", %"class.blink::HeapVector.1254", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1262", i8, i32, %"class.blink::Member.1264", %"class.blink::Member.1266", %"class.blink::Member.1268", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1270", %"class.WTF::HashMap.1272", %"class.blink::Member.1277", %"class.blink::Member.1279", %"class.blink::Member.1281", %"class.blink::Member.1283", %"class.blink::Member.867", %"class.blink::Member.867", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1285", i8, i32, %"class.blink::Member.1292", %"class.blink::Member.1294", i32, %"class.blink::Member.1296", %"class.blink::Member.1298", %"class.blink::Member.1300", %"class.std::__1::unique_ptr.522", i64, %"class.std::__1::unique_ptr.1302", i32, i32, %"class.blink::Member.1308", %"class.blink::Member.1310", %"class.blink::Member.1312", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1314", %"class.WTF::Vector.1109", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1316", %"class.blink::Member.1323", %"class.std::__1::unique_ptr.1325", %"class.blink::Member.1331", i8, i8, %"class.WTF::String", %"class.blink::Member.1333", i8, [7 x i8], %"class.blink::HeapHashMap.1335", %"class.blink::HeapObserverSet.1342", %"class.blink::Member.1350", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1352", i32, i8, i8, %"class.blink::WeakMember.1354", %"class.blink::Member.1355" }
%"class.blink::Supplementable.945" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.946" }
%"class.blink::HeapHashMap.946" = type { %"class.WTF::HashMap.949" }
%"class.WTF::HashMap.949" = type { %"class.WTF::HashTable.950" }
%"class.WTF::HashTable.950" = type <{ %"struct.WTF::KeyValuePair.952"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.952" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.958" = type { %"class.blink::MemberBase.959" }
%"class.blink::MemberBase.959" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.960", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.968", %"class.blink::Member.867", %"class.blink::Member.970", i8, %"class.blink::Member.972", %"class.blink::Member.974", %"class.blink::Member.976", %"class.blink::Member.976", %"class.blink::Member.976", %"class.blink::Member.976", %"class.blink::Member.976", %"class.blink::Member.976", %"class.blink::Member.978", %"class.blink::Member.980", %"class.blink::Member.982", %"class.blink::Member.501", %"class.blink::Member.984", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.104", %"class.blink::Member.986", %class.scoped_refptr.988, %"class.blink::HeapHashSet.1050", %"class.blink::Member.1057", %"class.blink::HeapHashMap.1070", %"class.std::__1::unique_ptr.1077", %"class.blink::Member.1083", %"class.blink::Member.1102", %"class.blink::Member.1104", %"class.blink::Member.1106", %"class.WTF::Vector.1109", %"class.util::TokenType", %"class.WTF::HashSet.1114", %"class.WTF::Deque.1118" }
%"class.blink::Supplementable.960" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.961" }
%"class.blink::HeapHashMap.961" = type { %"class.WTF::HashMap.964" }
%"class.WTF::HashMap.964" = type { %"class.WTF::HashTable.965" }
%"class.WTF::HashTable.965" = type <{ %"struct.WTF::KeyValuePair.967"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.967" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.968" = type { %"class.blink::MemberBase.969" }
%"class.blink::MemberBase.969" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.970" = type { %"class.blink::MemberBase.971" }
%"class.blink::MemberBase.971" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.972" = type { %"class.blink::MemberBase.973" }
%"class.blink::MemberBase.973" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.974" = type { %"class.blink::MemberBase.975" }
%"class.blink::MemberBase.975" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.978" = type { %"class.blink::MemberBase.979" }
%"class.blink::MemberBase.979" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.980" = type { %"class.blink::MemberBase.981" }
%"class.blink::MemberBase.981" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.984" = type { %"class.blink::MemberBase.985" }
%"class.blink::MemberBase.985" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.986" = type { %"class.blink::MemberBase.987" }
%"class.blink::MemberBase.987" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%"class.blink::HeapHashSet.1050" = type { %"class.WTF::HashSet.1053" }
%"class.WTF::HashSet.1053" = type { %"class.WTF::HashTable.1054" }
%"class.WTF::HashTable.1054" = type <{ %"class.blink::WeakMember.1056"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1056" = type opaque
%"class.blink::Member.1057" = type { %"class.blink::MemberBase.1058" }
%"class.blink::MemberBase.1058" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1064", %"class.blink::Member.1064", %"class.blink::Member.1066", %"class.blink::Member.1068", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1059" }
%"class.absl::optional.1059" = type { %"class.absl::optional_internal::optional_data.1060" }
%"class.absl::optional_internal::optional_data.1060" = type { %"class.absl::optional_internal::optional_data_base.1061" }
%"class.absl::optional_internal::optional_data_base.1061" = type { %"class.absl::optional_internal::optional_data_dtor_base.1062" }
%"class.absl::optional_internal::optional_data_dtor_base.1062" = type { i8, %union.anon.1063 }
%union.anon.1063 = type { i64 }
%"class.blink::Member.1064" = type { %"class.blink::MemberBase.1065" }
%"class.blink::MemberBase.1065" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1066" = type { %"class.blink::MemberBase.1067" }
%"class.blink::MemberBase.1067" = type { %"class.blink::Event"* }
%"class.blink::Member.1068" = type { %"class.blink::MemberBase.1069" }
%"class.blink::MemberBase.1069" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.1070" = type { %"class.WTF::HashMap.1073" }
%"class.WTF::HashMap.1073" = type { %"class.WTF::HashTable.1074" }
%"class.WTF::HashTable.1074" = type <{ %"struct.WTF::KeyValuePair.1076"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1076" = type opaque
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.520", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1098", %"class.blink::Member.1100", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1089", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1091", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1091" = type { %"class.WTF::HashMap.1094" }
%"class.WTF::HashMap.1094" = type { %"class.WTF::HashTable.1095" }
%"class.WTF::HashTable.1095" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.737", i32, i32 }
%"class.blink::Member.1100" = type { %"class.blink::MemberBase.1101" }
%"class.blink::MemberBase.1101" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1102" = type { %"class.blink::MemberBase.1103" }
%"class.blink::MemberBase.1103" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.958", %"class.blink::Member.1375", %"class.blink::Member.1377" }
%"class.blink::Member.1375" = type { %"class.blink::MemberBase.1376" }
%"class.blink::MemberBase.1376" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1377" = type { %"class.blink::MemberBase.1378" }
%"class.blink::MemberBase.1378" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1104" = type { %"class.blink::MemberBase.1105" }
%"class.blink::MemberBase.1105" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.958", %"class.blink::HeapMojoRemote.1370" }
%"class.blink::HeapMojoRemote.1370" = type { %"class.blink::Member.1371" }
%"class.blink::Member.1371" = type { %"class.blink::MemberBase.1372" }
%"class.blink::MemberBase.1372" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1106" = type { %"class.blink::MemberBase.1107" }
%"class.blink::MemberBase.1107" = type { %"class.blink::HeapHashMap.1108"* }
%"class.blink::HeapHashMap.1108" = type opaque
%"class.WTF::HashSet.1114" = type { %"class.WTF::HashTable.1115" }
%"class.WTF::HashTable.1115" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1118" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1121" }
%"class.WTF::VectorBuffer.1121" = type { %"class.WTF::VectorBufferBase.1122" }
%"class.WTF::VectorBufferBase.1122" = type { i64*, i32, i32 }
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1127" = type { %"class.blink::MemberBase.1128" }
%"class.blink::MemberBase.1128" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1129" = type { %"class.std::__1::__compressed_pair.1130" }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1135" = type { %"class.blink::MemberBase.1136" }
%"class.blink::MemberBase.1136" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.908" = type { %"class.blink::MemberBase.909" }
%"class.blink::MemberBase.909" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.910", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.912, %"class.WTF::Vector.913", %"class.WTF::Vector.913", %"class.blink::Member.737", %"class.blink::Member.918", %"class.blink::HeapHashSet.922", %"class.blink::Member.867", %"class.WTF::HashSet.929", %"class.WTF::TextPosition", %"class.blink::Member.933", %"class.blink::HeapVector.935", %"class.blink::Member.942" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.910" = type { %"class.blink::MemberBase.911" }
%"class.blink::MemberBase.911" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.912 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.913" = type { %"class.WTF::VectorBuffer.914" }
%"class.WTF::VectorBuffer.914" = type { %"class.WTF::VectorBufferBase.915" }
%"class.WTF::VectorBufferBase.915" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.918" = type { %"class.blink::MemberBase.919" }
%"class.blink::MemberBase.919" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.920" }
%"class.blink::Member.920" = type { %"class.blink::MemberBase.921" }
%"class.blink::MemberBase.921" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.922" = type { %"class.WTF::HashSet.925" }
%"class.WTF::HashSet.925" = type { %"class.WTF::HashTable.926" }
%"class.WTF::HashTable.926" = type <{ %"class.blink::WeakMember.928"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.928" = type { %"class.blink::MemberBase.740" }
%"class.WTF::HashSet.929" = type { %"class.WTF::HashTable.930" }
%"class.WTF::HashTable.930" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.933" = type { %"class.blink::MemberBase.934" }
%"class.blink::MemberBase.934" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.935" = type { %"class.WTF::Vector.938" }
%"class.WTF::Vector.938" = type { %"class.WTF::VectorBuffer.939" }
%"class.WTF::VectorBuffer.939" = type { %"class.WTF::VectorBufferBase.940" }
%"class.WTF::VectorBufferBase.940" = type { %"class.blink::Member.918"*, i32, i32 }
%"class.blink::Member.942" = type { %"class.blink::MemberBase.943" }
%"class.blink::MemberBase.943" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1139" = type { %"class.WTF::VectorBuffer.1140" }
%"class.WTF::VectorBuffer.1140" = type { %"class.WTF::VectorBufferBase.1141" }
%"class.WTF::VectorBufferBase.1141" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1142 }
%"class.blink::Member.1098" = type { %"class.blink::MemberBase.1099" }
%"class.blink::MemberBase.1099" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.867", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.737", %"class.blink::Member.737", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1163" }
%"class.blink::HeapHashMap.1163" = type { %"class.WTF::HashMap.1166" }
%"class.WTF::HashMap.1166" = type { %"class.WTF::HashTable.1167" }
%"class.WTF::HashTable.1167" = type <{ %"struct.WTF::KeyValuePair.1169"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1169" = type opaque
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1172" = type { %"class.WTF::HashSet.1175" }
%"class.WTF::HashSet.1175" = type { %"class.WTF::HashTable.1176" }
%"class.WTF::HashTable.1176" = type <{ %"class.blink::WeakMember.1178"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1178" = type opaque
%"class.blink::HeapHashSet.1179" = type { %"class.WTF::HashSet.1182" }
%"class.WTF::HashSet.1182" = type { %"class.WTF::HashTable.1183" }
%"class.WTF::HashTable.1183" = type <{ %"class.blink::WeakMember.1185"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1185" = type opaque
%"class.blink::Member.1186" = type { %"class.blink::MemberBase.1187" }
%"class.blink::MemberBase.1187" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1188" = type { %"class.blink::MemberBase.1189" }
%"class.blink::MemberBase.1189" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1190" = type { %"class.blink::MemberBase.1191" }
%"class.blink::MemberBase.1191" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.739", %"class.blink::HeapVector.902" }
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.1193" }
%"class.blink::MemberBase.1193" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1194" = type { %"class.blink::MemberBase.1195" }
%"class.blink::MemberBase.1195" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1196" = type { %"class.WTF::HashMap.1199" }
%"class.WTF::HashMap.1199" = type { %"class.WTF::HashTable.1200" }
%"class.WTF::HashTable.1200" = type <{ %"struct.WTF::KeyValuePair.1202"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1202" = type opaque
%"class.WTF::Vector.1203" = type { %"class.WTF::VectorBuffer.1204" }
%"class.WTF::VectorBuffer.1204" = type { %"class.WTF::VectorBufferBase.1205" }
%"class.WTF::VectorBufferBase.1205" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1208" = type { %"class.blink::MemberBase.1209" }
%"class.blink::MemberBase.1209" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1211" }
%"class.blink::MemberBase.1211" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1214" = type { %"class.WTF::Vector.1217" }
%"class.WTF::Vector.1217" = type { %"class.WTF::VectorBuffer.1218" }
%"class.WTF::VectorBuffer.1218" = type { %"class.WTF::VectorBufferBase.1219" }
%"class.WTF::VectorBufferBase.1219" = type { %"class.blink::Member.1220"*, i32, i32 }
%"class.blink::Member.1220" = type opaque
%"class.std::__1::unique_ptr.1222" = type { %"class.std::__1::__compressed_pair.1223" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.1224" }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1228" = type { %"class.WTF::HashSet.1231" }
%"class.WTF::HashSet.1231" = type { %"class.WTF::HashTable.1232" }
%"class.WTF::HashTable.1232" = type <{ %"class.blink::WeakMember.1234"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1234" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1235", i32, [4 x i8] }>
%"class.WTF::Vector.1235" = type { %"class.WTF::VectorBuffer.1236" }
%"class.WTF::VectorBuffer.1236" = type { %"class.WTF::VectorBufferBase.1237" }
%"class.WTF::VectorBufferBase.1237" = type { %"struct.std::__1::pair.1238"*, i32, i32 }
%"struct.std::__1::pair.1238" = type opaque
%"class.blink::Member.1241" = type { %"class.blink::MemberBase.1242" }
%"class.blink::MemberBase.1242" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1243" = type { %"class.WTF::VectorBuffer.1244" }
%"class.WTF::VectorBuffer.1244" = type { %"class.WTF::VectorBufferBase.1245" }
%"class.WTF::VectorBufferBase.1245" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1248" = type { %"class.std::__1::__compressed_pair.1249" }
%"class.std::__1::__compressed_pair.1249" = type { %"struct.std::__1::__compressed_pair_elem.1250" }
%"struct.std::__1::__compressed_pair_elem.1250" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.884" = type { %"class.WTF::Vector.887" }
%"class.WTF::Vector.887" = type { %"class.WTF::VectorBuffer.888" }
%"class.WTF::VectorBuffer.888" = type { %"class.WTF::VectorBufferBase.889" }
%"class.WTF::VectorBufferBase.889" = type { %"class.blink::Member.735"*, i32, i32 }
%"class.blink::HeapVector.1254" = type { %"class.WTF::Vector.1257" }
%"class.WTF::Vector.1257" = type { %"class.WTF::VectorBuffer.1258" }
%"class.WTF::VectorBuffer.1258" = type { %"class.WTF::VectorBufferBase.1259" }
%"class.WTF::VectorBufferBase.1259" = type { %"class.blink::Member.1260"*, i32, i32 }
%"class.blink::Member.1260" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.867" }
%"class.blink::Member.1262" = type { %"class.blink::MemberBase.1263" }
%"class.blink::MemberBase.1263" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1264" = type { %"class.blink::MemberBase.1265" }
%"class.blink::MemberBase.1265" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1266" = type { %"class.blink::MemberBase.1267" }
%"class.blink::MemberBase.1267" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1268" = type { %"class.blink::MemberBase.1269" }
%"class.blink::MemberBase.1269" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1270" = type { %"class.blink::MemberBase.1271" }
%"class.blink::MemberBase.1271" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1272" = type { %"class.WTF::HashTable.1273" }
%"class.WTF::HashTable.1273" = type <{ %"struct.WTF::KeyValuePair.1276"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1276" = type opaque
%"class.blink::Member.1277" = type { %"class.blink::MemberBase.1278" }
%"class.blink::MemberBase.1278" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1279" = type { %"class.blink::MemberBase.1280" }
%"class.blink::MemberBase.1280" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1281" = type { %"class.blink::MemberBase.1282" }
%"class.blink::MemberBase.1282" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1283" = type { %"class.blink::MemberBase.1284" }
%"class.blink::MemberBase.1284" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1162", { i64, i64 } }
%"class.blink::WeakMember.1162" = type { %"class.blink::MemberBase.868" }
%"class.blink::HeapHashSet.1285" = type { %"class.WTF::HashSet.1288" }
%"class.WTF::HashSet.1288" = type { %"class.WTF::HashTable.1289" }
%"class.WTF::HashTable.1289" = type <{ %"class.blink::Member.1291"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1291" = type opaque
%"class.blink::Member.1292" = type { %"class.blink::MemberBase.1293" }
%"class.blink::MemberBase.1293" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1294" = type { %"class.blink::MemberBase.1295" }
%"class.blink::MemberBase.1295" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1296" = type { %"class.blink::MemberBase.1297" }
%"class.blink::MemberBase.1297" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1298" = type { %"class.blink::MemberBase.1299" }
%"class.blink::MemberBase.1299" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1300" = type { %"class.blink::MemberBase.1301" }
%"class.blink::MemberBase.1301" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1302" = type { %"class.std::__1::__compressed_pair.1303" }
%"class.std::__1::__compressed_pair.1303" = type { %"struct.std::__1::__compressed_pair_elem.1304" }
%"struct.std::__1::__compressed_pair_elem.1304" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1308" = type { %"class.blink::MemberBase.1309" }
%"class.blink::MemberBase.1309" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1310" = type { %"class.blink::MemberBase.1311" }
%"class.blink::MemberBase.1311" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1312" = type { %"class.blink::MemberBase.1313" }
%"class.blink::MemberBase.1313" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1314" = type { %"class.blink::MemberBase.1315" }
%"class.blink::MemberBase.1315" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1109" = type { %"class.WTF::VectorBuffer.1110" }
%"class.WTF::VectorBuffer.1110" = type { %"class.WTF::VectorBufferBase.1111" }
%"class.WTF::VectorBufferBase.1111" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1316" = type { %"class.WTF::HashMap.1319" }
%"class.WTF::HashMap.1319" = type { %"class.WTF::HashTable.1320" }
%"class.WTF::HashTable.1320" = type <{ %"struct.WTF::KeyValuePair.1322"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1322" = type opaque
%"class.blink::Member.1323" = type { %"class.blink::MemberBase.1324" }
%"class.blink::MemberBase.1324" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1325" = type { %"class.std::__1::__compressed_pair.1326" }
%"class.std::__1::__compressed_pair.1326" = type { %"struct.std::__1::__compressed_pair_elem.1327" }
%"struct.std::__1::__compressed_pair_elem.1327" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1331" = type { %"class.blink::MemberBase.1332" }
%"class.blink::MemberBase.1332" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1333" = type { %"class.blink::MemberBase.1334" }
%"class.blink::MemberBase.1334" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1335" = type { %"class.WTF::HashMap.1338" }
%"class.WTF::HashMap.1338" = type { %"class.WTF::HashTable.1339" }
%"class.WTF::HashTable.1339" = type <{ %"struct.WTF::KeyValuePair.1341"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1341" = type opaque
%"class.blink::HeapObserverSet.1342" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1343" }
%"class.blink::HeapHashSet.1343" = type { %"class.WTF::HashSet.1346" }
%"class.WTF::HashSet.1346" = type { %"class.WTF::HashTable.1347" }
%"class.WTF::HashTable.1347" = type <{ %"class.blink::WeakMember.1349"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1349" = type opaque
%"class.blink::Member.1350" = type { %"class.blink::MemberBase.1351" }
%"class.blink::MemberBase.1351" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1352" = type { %"class.blink::MemberBase.1353" }
%"class.blink::MemberBase.1353" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.867", %"class.blink::HeapHashSet.1359", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1366", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1359" = type { %"class.WTF::HashSet.1362" }
%"class.WTF::HashSet.1362" = type { %"class.WTF::HashTable.1363" }
%"class.WTF::HashTable.1363" = type <{ %"class.blink::Member.1365"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1365" = type opaque
%"class.blink::HeapTaskRunnerTimer.1366" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1367", { i64, i64 } }
%"class.blink::WeakMember.1367" = type { %"class.blink::MemberBase.1353" }
%"class.blink::WeakMember.1354" = type { %"class.blink::MemberBase.738" }
%"class.blink::MemberBase.738" = type { %"class.blink::Node"* }
%"class.blink::Member.1355" = type { %"class.blink::MemberBase.1356" }
%"class.blink::MemberBase.1356" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.873" }
%"class.blink::HeapHashMap.873" = type { %"class.WTF::HashMap.876" }
%"class.WTF::HashMap.876" = type { %"class.WTF::HashTable.877" }
%"class.WTF::HashTable.877" = type <{ %"struct.WTF::KeyValuePair.879"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.879" = type { %"class.WTF::AtomicString", %"class.blink::Member.880" }
%"class.blink::Member.880" = type { %"class.blink::MemberBase.881" }
%"class.blink::MemberBase.881" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.735", i32, %"class.blink::HeapVector.884" }
%"class.blink::Member.891" = type { %"class.blink::MemberBase.892" }
%"class.blink::MemberBase.892" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.893" = type { %"class.blink::MemberBase.894" }
%"class.blink::MemberBase.894" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.895" = type { %"class.blink::MemberBase.896" }
%"class.blink::MemberBase.896" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.897" }
%"class.blink::Member.897" = type { %"class.blink::MemberBase.898" }
%"class.blink::MemberBase.898" = type { %"class.blink::HeapHashMap.899"* }
%"class.blink::HeapHashMap.899" = type opaque
%"class.blink::Member.900" = type { %"class.blink::MemberBase.901" }
%"class.blink::MemberBase.901" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.902" = type { %"class.WTF::Vector.905" }
%"class.WTF::Vector.905" = type { %"class.WTF::VectorBuffer.906" }
%"class.WTF::VectorBuffer.906" = type { %"class.WTF::VectorBufferBase.907" }
%"class.WTF::VectorBufferBase.907" = type { %"class.blink::Member.908"*, i32, i32 }
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.737" = type { %"class.blink::MemberBase.738" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.745 }
%class.scoped_refptr.745 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.746", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.746" = type { %"class.base::RefCounted.747" }
%"class.base::RefCounted.747" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.748" = type { %"class.blink::MemberBase.749" }
%"class.blink::MemberBase.749" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.752", %"class.blink::Member.754", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.752" = type { %"class.WTF::SingleThreadedBitField.753" }
%"class.WTF::SingleThreadedBitField.753" = type { i32 }
%"class.blink::Member.754" = type { %"class.blink::MemberBase.755" }
%"class.blink::MemberBase.755" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.756 }
%class.scoped_refptr.756 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.757", %"class.WTF::AtomicString", %"class.WTF::Vector.759" }
%"class.WTF::RefCounted.757" = type { %"class.base::RefCounted.758" }
%"class.base::RefCounted.758" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.759" = type { %"class.WTF::VectorBuffer.760" }
%"class.WTF::VectorBuffer.760" = type { %"class.WTF::VectorBufferBase.761", [32 x i8] }
%"class.blink::Member.764" = type { %"class.blink::MemberBase.765" }
%"class.blink::MemberBase.765" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.766" = type { %"class.blink::MemberBase.767" }
%"class.blink::MemberBase.767" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.768" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.770" = type { %"class.blink::MemberBase.771" }
%"class.blink::MemberBase.771" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.774 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.775" = type { %"class.blink::MemberBase.776" }
%"class.blink::MemberBase.776" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.777" = type { %"class.blink::MemberBase.778" }
%"class.blink::MemberBase.778" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.779" = type { %"class.blink::MemberBase.780" }
%"class.blink::MemberBase.780" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.781" = type { %"class.blink::MemberBase.782" }
%"class.blink::MemberBase.782" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.783" = type { %"class.blink::MemberBase.784" }
%"class.blink::MemberBase.784" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.785" = type { %"class.blink::MemberBase.786" }
%"class.blink::MemberBase.786" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.787" = type { %"class.blink::MemberBase.788" }
%"class.blink::MemberBase.788" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.789" }
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2295" }
%"class.mojo::Remote.2295" = type { %"class.mojo::internal::InterfacePtrState.2296" }
%"class.mojo::internal::InterfacePtrState.2296" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2297" }
%"class.std::__1::unique_ptr.2297" = type { %"class.std::__1::__compressed_pair.2298" }
%"class.std::__1::__compressed_pair.2298" = type { %"struct.std::__1::__compressed_pair_elem.2299" }
%"struct.std::__1::__compressed_pair_elem.2299" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.791" = type { %"class.std::__1::__compressed_pair.792" }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.793" }
%"struct.std::__1::__compressed_pair_elem.793" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.794, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.794 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.795", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.795" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.803, i8, [7 x i8] }>
%class.scoped_refptr.803 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.804", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.804" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.805" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.812" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.813" = type { %"class.std::__1::__compressed_pair.814" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.815" }
%"struct.std::__1::__compressed_pair_elem.815" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.819" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.825" }
%"class.blink::Member.825" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2305" }
%"class.mojo::AssociatedRemote.2305" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2306" }
%"class.mojo::internal::AssociatedInterfacePtrState.2306" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2307" }
%"class.std::__1::unique_ptr.2307" = type { %"class.std::__1::__compressed_pair.2308" }
%"class.std::__1::__compressed_pair.2308" = type { %"struct.std::__1::__compressed_pair_elem.2309" }
%"struct.std::__1::__compressed_pair_elem.2309" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.827" = type { %"class.blink::Member.828" }
%"class.blink::Member.828" = type { %"class.blink::MemberBase.829" }
%"class.blink::MemberBase.829" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2315" }
%"class.mojo::AssociatedRemote.2315" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2316" }
%"class.mojo::internal::AssociatedInterfacePtrState.2316" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2317" }
%"class.std::__1::unique_ptr.2317" = type { %"class.std::__1::__compressed_pair.2318" }
%"class.std::__1::__compressed_pair.2318" = type { %"struct.std::__1::__compressed_pair_elem.2319" }
%"struct.std::__1::__compressed_pair_elem.2319" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.830" }
%"class.blink::Member.830" = type { %"class.blink::MemberBase.831" }
%"class.blink::MemberBase.831" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2325", %"class.blink::Member.520", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2325" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2326" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.124" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2326" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.832" = type { %"class.blink::Member.833" }
%"class.blink::Member.833" = type { %"class.blink::MemberBase.834" }
%"class.blink::MemberBase.834" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2329", %"class.blink::Member.520", %"class.mojo::AssociatedReceiver.2330" }
%"class.blink::ThreadState::PrefinalizerRegistration.2329" = type { i8 }
%"class.mojo::AssociatedReceiver.2330" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2331" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2331" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.835" }
%"class.blink::Member.835" = type { %"class.blink::MemberBase.836" }
%"class.blink::MemberBase.836" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2334", %"class.blink::Member.520", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2334" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.556, %"class.std::__1::unique_ptr.124", %"class.base::WeakPtrFactory.2335" }
%"class.base::WeakPtrFactory.2335" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.837" = type { %"class.blink::Member.838" }
%"class.blink::Member.838" = type { %"class.blink::MemberBase.839" }
%"class.blink::MemberBase.839" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2338", %"class.blink::Member.520", %"class.mojo::AssociatedReceiver.2339" }
%"class.blink::ThreadState::PrefinalizerRegistration.2338" = type { i8 }
%"class.mojo::AssociatedReceiver.2339" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2340" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2340" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.842" = type { %"class.blink::MemberBase.843" }
%"class.blink::MemberBase.843" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.844" = type { %"class.blink::MemberBase.845" }
%"class.blink::MemberBase.845" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.846" = type { %"class.blink::MemberBase.847" }
%"class.blink::MemberBase.847" = type { %"class.blink::HeapHashMap.848"* }
%"class.blink::HeapHashMap.848" = type opaque
%"class.mojo::StructPtr.849" = type { %"class.std::__1::unique_ptr.850" }
%"class.std::__1::unique_ptr.850" = type { %"class.std::__1::__compressed_pair.851" }
%"class.std::__1::__compressed_pair.851" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"struct.std::__1::__compressed_pair_elem.852" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.853", %"class.mojo::InlinedStructPtr.854" }
%"class.mojo::InlinedStructPtr.853" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.blink::Member.858" = type { %"class.blink::MemberBase.859" }
%"class.blink::MemberBase.859" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.860" = type { %"class.absl::optional_internal::optional_data.861" }
%"class.absl::optional_internal::optional_data.861" = type { %"class.absl::optional_internal::optional_data_base.862" }
%"class.absl::optional_internal::optional_data_base.862" = type { %"class.absl::optional_internal::optional_data_dtor_base.863" }
%"class.absl::optional_internal::optional_data_dtor_base.863" = type { i8, %union.anon.864 }
%union.anon.864 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::WorkletModuleResponsesMap" = type { i8, [7 x i8], %"class.WTF::HashMap.515", %"class.WTF::Mutex" }
%"class.WTF::HashMap.515" = type { %"class.WTF::HashTable.516" }
%"class.WTF::HashTable.516" = type <{ %"struct.WTF::KeyValuePair.519"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.519" = type opaque
%"class.WTF::IntegerToStringConverter" = type <{ [24 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringView", %"class.WTF::String" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.absl::optional.2242" = type { %"class.absl::optional_internal::optional_data.2243" }
%"class.absl::optional_internal::optional_data.2243" = type { %"class.absl::optional_internal::optional_data_base.2244" }
%"class.absl::optional_internal::optional_data_base.2244" = type { %"class.absl::optional_internal::optional_data_dtor_base.2245" }
%"class.absl::optional_internal::optional_data_dtor_base.2245" = type { i8, [7 x i8], %union.anon.2246 }
%union.anon.2246 = type { %"struct.blink::UserAgentMetadata" }
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.2194", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.2194" = type { %"class.std::__1::__vector_base.2195" }
%"class.std::__1::__vector_base.2195" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.2196" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2196" = type { %"struct.std::__1::__compressed_pair_elem.2197" }
%"struct.std::__1::__compressed_pair_elem.2197" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.mojo::NullRemote" = type { i8 }
%"struct.blink::BeginFrameProviderParams" = type { %"class.viz::FrameSinkId", %"class.viz::FrameSinkId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.blink::MultiToken.2236" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::LocalFrameClient" = type { %"class.blink::FrameClient" }
%"struct.blink::GlobalScopeCreationParams" = type <{ %"class.blink::KURL", i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", %"struct.blink::UserAgentMetadata", %class.scoped_refptr.493, %"class.WTF::Vector.80", i32, [4 x i8], %"class.std::__1::unique_ptr.2201", %class.scoped_refptr.16, i8, [3 x i8], i32, %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.478", %"class.absl::optional.2207", %"class.base::UnguessableToken", %"class.std::__1::unique_ptr.2212", i32, [4 x i8], %"class.blink::CrossThreadPersistent.511", %"class.mojo::PendingRemote.2230", %"struct.blink::BeginFrameProviderParams", %"class.std::__1::unique_ptr.17", %"class.base::UnguessableToken", i64, %"class.absl::optional.2231", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2201" = type { %"class.std::__1::__compressed_pair.2202" }
%"class.std::__1::__compressed_pair.2202" = type { %"struct.std::__1::__compressed_pair_elem.2203" }
%"struct.std::__1::__compressed_pair_elem.2203" = type { %"class.WTF::Vector.104"* }
%"class.absl::optional.2207" = type { %"class.absl::optional_internal::optional_data.2208" }
%"class.absl::optional_internal::optional_data.2208" = type { %"class.absl::optional_internal::optional_data_base.2209" }
%"class.absl::optional_internal::optional_data_base.2209" = type { %"class.absl::optional_internal::optional_data_dtor_base.2210" }
%"class.absl::optional_internal::optional_data_dtor_base.2210" = type { i8, %union.anon.2211 }
%union.anon.2211 = type { i32 }
%"class.std::__1::unique_ptr.2212" = type { %"class.std::__1::__compressed_pair.2213" }
%"class.std::__1::__compressed_pair.2213" = type { %"struct.std::__1::__compressed_pair_elem.2214" }
%"struct.std::__1::__compressed_pair_elem.2214" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.2215", %"class.WTF::HashMap.2215", %"class.WTF::HashMap.2215", %"class.WTF::HashMap.2215", %"class.WTF::HashMap.2215", %"class.WTF::HashMap.2215", %"class.WTF::HashMap.2215", %"class.std::__1::unique_ptr.2220" }
%"class.WTF::HashMap.2215" = type { %"class.WTF::HashTable.2216" }
%"class.WTF::HashTable.2216" = type <{ %"struct.WTF::KeyValuePair.2219"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2219" = type { i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.2220" = type { %"class.std::__1::__compressed_pair.2221" }
%"class.std::__1::__compressed_pair.2221" = type { %"struct.std::__1::__compressed_pair_elem.2222" }
%"struct.std::__1::__compressed_pair_elem.2222" = type { %"class.WTF::Vector.2223"* }
%"class.WTF::Vector.2223" = type { %"class.WTF::VectorBuffer.2406" }
%"class.WTF::VectorBuffer.2406" = type { %"class.WTF::VectorBufferBase.2407" }
%"class.WTF::VectorBufferBase.2407" = type { %"struct.std::__1::pair.2408"*, i32, i32 }
%"struct.std::__1::pair.2408" = type { i32, %"class.WTF::String" }
%"class.mojo::PendingRemote.2230" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.absl::optional.2231" = type { %"class.absl::optional_internal::optional_data.2232" }
%"class.absl::optional_internal::optional_data.2232" = type { %"class.absl::optional_internal::optional_data_base.2233" }
%"class.absl::optional_internal::optional_data_base.2233" = type { %"class.absl::optional_internal::optional_data_dtor_base.2234" }
%"class.absl::optional_internal::optional_data_dtor_base.2234" = type { i8, [7 x i8], %union.anon.2235 }
%union.anon.2235 = type { %"class.blink::MultiToken.2236" }
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringView" }
%"class.WTF::StringTypeAdapter.2411" = type { %"class.WTF::StringTypeAdapter" }
%"class.blink::FetchClientSettingsObjectSnapshot" = type opaque
%"class.blink::WorkerResourceTimingNotifier" = type opaque
%"class.blink::WorkletPendingTasks" = type opaque
%"class.blink::WorkletGlobalScope" = type <{ %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable", %"class.blink::KURL", %"class.WTF::String", %class.scoped_refptr.16, i8, [7 x i8], %"class.blink::CrossThreadPersistent.511", i32, i32, %"class.blink::Member.520", %"class.blink::WorkerThread"*, %"class.util::TokenType", %"class.std::__1::unique_ptr.522", i8, i8, [6 x i8] }>
%"class.blink::CSSPaintDefinition" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTFplINS_6StringEEENS_12StringAppendINS_10StringViewET_EERKS3_S4_ = comdat any

$_ZNK3WTF12StringAppendINS_10StringViewENS_6StringEEcvS2_Ev = comdat any

$_ZNSt3__111make_uniqueIN5blink25GlobalScopeCreationParamsEJRKNS1_4KURLENS1_5mojom10ScriptTypeERN3WTF6StringES9_N4absl8optionalINS1_17UserAgentMetadataEEE13scoped_refptrINS1_21WebWorkerFetchContextEENS8_6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS8_18PartitionAllocatorEEENSM_14ReferrerPolicyEPKNS1_14SecurityOriginEbNS1_10HttpsStateEDnNS_10unique_ptrINS1_24WebContentSettingsClientENS_14default_deleteISY_EEEENSM_14IPAddressSpaceEPNSI_IS9_Lj0ESQ_EEN4base16UnguessableTokenEDnNS6_14V8CacheOptionsERPNS1_25WorkletModuleResponsesMapENSJ_10NullRemoteENS1_24BeginFrameProviderParamsEDnRKS16_RKlNS1_10MultiTokenIN4util9TokenTypeINS1_25LocalFrameTokenTypeMarkerEEENS1J_INS1_30DedicatedWorkerTokenTypeMarkerEEEJNS1J_INS1_28ServiceWorkerTokenTypeMarkerEEENS1J_INS1_27SharedWorkerTokenTypeMarkerEEENS1J_INS1_31AnimationWorkletTokenTypeMarkerEEENS1J_INS1_27AudioWorkletTokenTypeMarkerEEENS1J_INS1_28LayoutWorkletTokenTypeMarkerEEENS1J_INS1_27PaintWorkletTokenTypeMarkerEEEEEEbbEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZN5blink28PaintWorkletGlobalScopeProxyD2Ev = comdat any

$_ZN5blink28PaintWorkletGlobalScopeProxyD0Ev = comdat any

$_ZN5blink17UserAgentMetadataD2Ev = comdat any

$_ZNK3WTF12StringAppendINS_10StringViewENS_6StringEE6lengthEv = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZNK7network5mojom5blink21ContentSecurityPolicy5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EEbbbNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEEbNS9_6VectorISC_Lj0ESI_EENS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEEST_EEEN4base10in_place_tEDpOT_ = comdat any

$_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_ = comdat any

$_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSD_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES3_S5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS_9StructPtrINS4_5blink13CSPSourceListEEENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENSC_IS9_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSG_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_ = comdat any

$_ZNK7network5mojom5blink13CSPSourceList5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EEbbbbbbbbbEEEN4base10in_place_tEDpOT_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZNK7network5mojom5blink13CSPHashSource5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIhEEvOT_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZNK7network5mojom5blink15CSPTrustedTypes5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEbbEEEN4base10in_place_tEDpOT_ = comdat any

$_ZN5blink10TraceTraitINS_23PaintWorkletGlobalScopeEE5TraceEPNS_7VisitorEPKv = comdat any

@_ZTVN5blink28PaintWorkletGlobalScopeProxyE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::PaintWorkletGlobalScopeProxy"*, %"class.blink::Visitor"*)* @_ZNK5blink28PaintWorkletGlobalScopeProxy5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::PaintWorkletGlobalScopeProxy"*)* @_ZN5blink28PaintWorkletGlobalScopeProxyD2Ev to i8*), i8* bitcast (void (%"class.blink::PaintWorkletGlobalScopeProxy"*)* @_ZN5blink28PaintWorkletGlobalScopeProxyD0Ev to i8*), i8* bitcast (void (%"class.blink::PaintWorkletGlobalScopeProxy"*, %"class.blink::KURL"*, i32, %"class.blink::FetchClientSettingsObjectSnapshot"*, %"class.blink::WorkerResourceTimingNotifier"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*)* @_ZN5blink28PaintWorkletGlobalScopeProxy20FetchAndInvokeScriptERKNS_4KURLEN7network5mojom15CredentialsModeERKNS_33FetchClientSettingsObjectSnapshotERNS_28WorkerResourceTimingNotifierE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_19WorkletPendingTasksE to i8*), i8* bitcast (void (%"class.blink::PaintWorkletGlobalScopeProxy"*)* @_ZN5blink28PaintWorkletGlobalScopeProxy22WorkletObjectDestroyedEv to i8*), i8* bitcast (void (%"class.blink::PaintWorkletGlobalScopeProxy"*)* @_ZN5blink28PaintWorkletGlobalScopeProxy27TerminateWorkletGlobalScopeEv to i8*)] }, align 8
@.str = private unnamed_addr constant [15 x i8] c"PaintWorklet #\00", align 1
@_ZN3ukmL16kInvalidSourceIdE = internal constant i64 0, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.1 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.2 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv = private unnamed_addr constant [109 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::ContentSecurityPolicy>]\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameENS_6StringEEEEEPKcv = private unnamed_addr constant [112 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<network::mojom::CSPDirectiveName, WTF::String>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameEN4mojo9StructPtrINS3_5blink13CSPSourceListEEEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<network::mojom::CSPDirectiveName, mojo::StructPtr<network::mojom::blink::CSPSourceList> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv = private unnamed_addr constant [97 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::CSPSource>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv = private unnamed_addr constant [101 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::CSPHashSource>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

@_ZN5blink28PaintWorkletGlobalScopeProxyC1EPNS_10LocalFrameEPNS_25WorkletModuleResponsesMapEm = hidden unnamed_addr alias void (%"class.blink::PaintWorkletGlobalScopeProxy"*, %"class.blink::LocalFrame"*, %"class.blink::WorkletModuleResponsesMap"*, i64), void (%"class.blink::PaintWorkletGlobalScopeProxy"*, %"class.blink::LocalFrame"*, %"class.blink::WorkletModuleResponsesMap"*, i64)* @_ZN5blink28PaintWorkletGlobalScopeProxyC2EPNS_10LocalFrameEPNS_25WorkletModuleResponsesMapEm

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.blink::PaintWorkletGlobalScopeProxy"* @_ZN5blink28PaintWorkletGlobalScopeProxy4FromEPNS_23WorkletGlobalScopeProxyE(%"class.blink::WorkletGlobalScopeProxy"* readnone) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WorkletGlobalScopeProxy"* %0 to %"class.blink::PaintWorkletGlobalScopeProxy"*
  ret %"class.blink::PaintWorkletGlobalScopeProxy"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28PaintWorkletGlobalScopeProxyC2EPNS_10LocalFrameEPNS_25WorkletModuleResponsesMapEm(%"class.blink::PaintWorkletGlobalScopeProxy"* nocapture, %"class.blink::LocalFrame"*, %"class.blink::WorkletModuleResponsesMap"*, i64) unnamed_addr #1 align 2 {
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = alloca %"class.blink::WorkletModuleResponsesMap"*, align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.absl::optional.2242", align 8
  %13 = alloca %class.scoped_refptr.493, align 8
  %14 = alloca %"class.WTF::Vector.80", align 8
  %15 = alloca i32, align 4
  %16 = alloca %"class.blink::SecurityOrigin"*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca %"class.std::__1::unique_ptr.478", align 8
  %21 = alloca i32, align 4
  %22 = alloca %"class.WTF::Vector.104"*, align 8
  %23 = alloca %"class.base::UnguessableToken", align 8
  %24 = alloca i8*, align 8
  %25 = alloca i32, align 4
  %26 = alloca %"class.mojo::NullRemote", align 1
  %27 = alloca %"struct.blink::BeginFrameProviderParams", align 4
  %28 = alloca i8*, align 8
  %29 = alloca %"class.blink::MultiToken.2236", align 8
  %30 = alloca i8, align 1
  %31 = alloca i8, align 1
  store %"class.blink::WorkletModuleResponsesMap"* %2, %"class.blink::WorkletModuleResponsesMap"** %6, align 8
  %32 = getelementptr inbounds %"class.blink::PaintWorkletGlobalScopeProxy", %"class.blink::PaintWorkletGlobalScopeProxy"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink28PaintWorkletGlobalScopeProxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.blink::PaintWorkletGlobalScopeProxy", %"class.blink::PaintWorkletGlobalScopeProxy"* %0, i64 0, i32 1
  %34 = bitcast %"class.std::__1::unique_ptr"* %33 to i64*
  %35 = getelementptr inbounds %"class.blink::PaintWorkletGlobalScopeProxy", %"class.blink::PaintWorkletGlobalScopeProxy"* %0, i64 0, i32 2
  %36 = bitcast %"class.std::__1::unique_ptr"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false)
  %37 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %1) #12
  %38 = tail call i8* @_Znwm(i64 24) #13
  %39 = bitcast i8* %38 to %"class.blink::MainThreadWorkletReportingProxy"*
  %40 = icmp eq %"class.blink::LocalDOMWindow"* %37, null
  %41 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %37, i64 0, i32 1
  %42 = bitcast %"class.blink::ExecutionContext.base"* %41 to %"class.blink::ExecutionContext"*
  %43 = select i1 %40, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %42
  tail call void @_ZN5blink31MainThreadWorkletReportingProxyC1EPNS_16ExecutionContextE(%"class.blink::MainThreadWorkletReportingProxy"* nonnull %39, %"class.blink::ExecutionContext"* %43) #12
  %44 = ptrtoint i8* %38 to i64
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.blink::MainThreadWorkletReportingProxy"*, %"class.blink::MainThreadWorkletReportingProxy"** %45, align 8
  store i64 %44, i64* %34, align 8
  %47 = icmp eq %"class.blink::MainThreadWorkletReportingProxy"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %4
  %49 = bitcast %"class.blink::MainThreadWorkletReportingProxy"* %46 to void (%"class.blink::MainThreadWorkletReportingProxy"*)***
  %50 = load void (%"class.blink::MainThreadWorkletReportingProxy"*)**, void (%"class.blink::MainThreadWorkletReportingProxy"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.blink::MainThreadWorkletReportingProxy"*)*, void (%"class.blink::MainThreadWorkletReportingProxy"*)** %50, i64 1
  %52 = load void (%"class.blink::MainThreadWorkletReportingProxy"*)*, void (%"class.blink::MainThreadWorkletReportingProxy"*)** %51, align 8
  tail call void %52(%"class.blink::MainThreadWorkletReportingProxy"* nonnull %46) #12
  br label %53

53:                                               ; preds = %48, %4
  %54 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #12
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %55, align 8
  %56 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #12
  %57 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #12
  %58 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %59 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8** %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 14, i32* %61, align 8
  %62 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %62) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 40, i1 false) #12
  %63 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 24
  %64 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 1
  %65 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 23
  store i8* %65, i8** %64, align 8
  %66 = urem i64 %3, 10
  %67 = udiv i64 %3, 10
  %68 = trunc i64 %66 to i8
  %69 = or i8 %68, 48
  store i8 %69, i8* %65, align 1
  %70 = icmp ugt i64 %3, 9
  br i1 %70, label %71, label %86

71:                                               ; preds = %53
  %72 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 22
  store i8* %72, i8** %64, align 8
  %73 = urem i64 %67, 10
  %74 = trunc i64 %73 to i8
  %75 = or i8 %74, 48
  store i8 %75, i8* %72, align 2
  %76 = icmp ugt i64 %3, 99
  br i1 %76, label %77, label %84

77:                                               ; preds = %71
  %78 = udiv i64 %3, 100
  %79 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 21
  store i8* %79, i8** %64, align 8
  %80 = urem i64 %78, 10
  %81 = trunc i64 %80 to i8
  %82 = or i8 %81, 48
  store i8 %82, i8* %79, align 1
  %83 = icmp ugt i64 %3, 999
  br i1 %83, label %88, label %97

84:                                               ; preds = %71
  %85 = ptrtoint i8* %72 to i64
  br label %100

86:                                               ; preds = %53
  %87 = ptrtoint i8* %65 to i64
  br label %100

88:                                               ; preds = %77, %88
  %89 = phi i64 [ %91, %88 ], [ %78, %77 ]
  %90 = load i8*, i8** %64, align 8
  %91 = udiv i64 %89, 10
  %92 = getelementptr inbounds i8, i8* %90, i64 -1
  store i8* %92, i8** %64, align 8
  %93 = urem i64 %91, 10
  %94 = trunc i64 %93 to i8
  %95 = or i8 %94, 48
  store i8 %95, i8* %92, align 1
  %96 = icmp ugt i64 %89, 99
  br i1 %96, label %88, label %97

97:                                               ; preds = %88, %77
  %98 = bitcast i8** %64 to i64*
  %99 = load i64, i64* %98, align 8
  br label %100

100:                                              ; preds = %97, %84, %86
  %101 = phi i64 [ %87, %86 ], [ %99, %97 ], [ %85, %84 ]
  %102 = ptrtoint i8* %63 to i64
  %103 = sub i64 %102, %101
  %104 = trunc i64 %103 to i32
  %105 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  store i32 %104, i32* %105, align 8
  %106 = inttoptr i64 %101 to i8*
  %107 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %106, i32 %104) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %62) #12
  call void @_ZN3WTFplINS_6StringEEENS_12StringAppendINS_10StringViewET_EERKS3_S4_(%"class.WTF::StringAppend"* nonnull sret %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringImpl"* %107)
  %108 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_10StringViewENS_6StringEEcvS2_Ev(%"class.WTF::StringAppend"* nonnull %8)
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %55, align 8
  %109 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %100
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #12
  br label %125

125:                                              ; preds = %100, %121, %124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #12
  %126 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14LocalDOMWindow3UrlEv(%"class.blink::LocalDOMWindow"* %37) #12
  %127 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %127) #12
  store i32 1, i32* %10, align 4
  %128 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #12
  %129 = call %"class.WTF::StringImpl"* @_ZNK5blink14LocalDOMWindow9UserAgentEv(%"class.blink::LocalDOMWindow"* %37) #12
  %130 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %129, %"class.WTF::StringImpl"** %130, align 8
  %131 = getelementptr inbounds %"class.absl::optional.2242", %"class.absl::optional.2242"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %131) #12
  %132 = call %"class.blink::LocalFrameClient"* @_ZNK5blink10LocalFrame6ClientEv(%"class.blink::LocalFrame"* %1) #12
  %133 = bitcast %"class.blink::LocalFrameClient"* %132 to void (%"class.absl::optional.2242"*, %"class.blink::LocalFrameClient"*)***
  %134 = load void (%"class.absl::optional.2242"*, %"class.blink::LocalFrameClient"*)**, void (%"class.absl::optional.2242"*, %"class.blink::LocalFrameClient"*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.absl::optional.2242"*, %"class.blink::LocalFrameClient"*)*, void (%"class.absl::optional.2242"*, %"class.blink::LocalFrameClient"*)** %134, i64 41
  %136 = load void (%"class.absl::optional.2242"*, %"class.blink::LocalFrameClient"*)*, void (%"class.absl::optional.2242"*, %"class.blink::LocalFrameClient"*)** %135, align 8
  call void %136(%"class.absl::optional.2242"* nonnull sret %12, %"class.blink::LocalFrameClient"* %132) #12
  %137 = bitcast %class.scoped_refptr.493* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #12
  %138 = call %"class.blink::LocalFrameClient"* @_ZNK5blink10LocalFrame6ClientEv(%"class.blink::LocalFrame"* %1) #12
  %139 = bitcast %"class.blink::LocalFrameClient"* %138 to %"class.blink::WebWorkerFetchContext"* (%"class.blink::LocalFrameClient"*)***
  %140 = load %"class.blink::WebWorkerFetchContext"* (%"class.blink::LocalFrameClient"*)**, %"class.blink::WebWorkerFetchContext"* (%"class.blink::LocalFrameClient"*)*** %139, align 8
  %141 = getelementptr inbounds %"class.blink::WebWorkerFetchContext"* (%"class.blink::LocalFrameClient"*)*, %"class.blink::WebWorkerFetchContext"* (%"class.blink::LocalFrameClient"*)** %140, i64 88
  %142 = load %"class.blink::WebWorkerFetchContext"* (%"class.blink::LocalFrameClient"*)*, %"class.blink::WebWorkerFetchContext"* (%"class.blink::LocalFrameClient"*)** %141, align 8
  %143 = call %"class.blink::WebWorkerFetchContext"* %142(%"class.blink::LocalFrameClient"* %138) #12
  %144 = getelementptr inbounds %class.scoped_refptr.493, %class.scoped_refptr.493* %13, i64 0, i32 0
  store %"class.blink::WebWorkerFetchContext"* %143, %"class.blink::WebWorkerFetchContext"** %144, align 8
  %145 = bitcast %"class.WTF::Vector.80"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %145) #12
  %146 = call %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"* %42) #12
  %147 = call dereferenceable(16) %"class.WTF::Vector.80"* @_ZNK5blink21ContentSecurityPolicy17GetParsedPoliciesEv(%"class.blink::ContentSecurityPolicy"* %146) #12
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.80"* nonnull sret %14, %"class.WTF::Vector.80"* dereferenceable(16) %147) #12
  %148 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %148) #12
  %149 = call i32 @_ZNK5blink16ExecutionContext17GetReferrerPolicyEv(%"class.blink::ExecutionContext"* %42) #12
  store i32 %149, i32* %15, align 4
  %150 = bitcast %"class.blink::SecurityOrigin"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #12
  %151 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %42) #12
  store %"class.blink::SecurityOrigin"* %151, %"class.blink::SecurityOrigin"** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #12
  %152 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %37, i64 0, i32 1, i32 6, i32 11
  %153 = load i32, i32* %152, align 8
  %154 = icmp eq i32 %153, 1
  %155 = zext i1 %154 to i8
  store i8 %155, i8* %17, align 1
  %156 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %156) #12
  %157 = call i32 @_ZNK5blink14LocalDOMWindow13GetHttpsStateEv(%"class.blink::LocalDOMWindow"* %37) #12
  store i32 %157, i32* %18, align 4
  %158 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #12
  store i8* null, i8** %19, align 8
  %159 = bitcast %"class.std::__1::unique_ptr.478"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #12
  %160 = call %"class.blink::LocalFrameClient"* @_ZNK5blink10LocalFrame6ClientEv(%"class.blink::LocalFrame"* %1) #12
  %161 = bitcast %"class.blink::LocalFrameClient"* %160 to %"class.blink::WebContentSettingsClient"* (%"class.blink::LocalFrameClient"*)***
  %162 = load %"class.blink::WebContentSettingsClient"* (%"class.blink::LocalFrameClient"*)**, %"class.blink::WebContentSettingsClient"* (%"class.blink::LocalFrameClient"*)*** %161, align 8
  %163 = getelementptr inbounds %"class.blink::WebContentSettingsClient"* (%"class.blink::LocalFrameClient"*)*, %"class.blink::WebContentSettingsClient"* (%"class.blink::LocalFrameClient"*)** %162, i64 90
  %164 = load %"class.blink::WebContentSettingsClient"* (%"class.blink::LocalFrameClient"*)*, %"class.blink::WebContentSettingsClient"* (%"class.blink::LocalFrameClient"*)** %163, align 8
  %165 = call %"class.blink::WebContentSettingsClient"* %164(%"class.blink::LocalFrameClient"* %160) #12
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr.478", %"class.std::__1::unique_ptr.478"* %20, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::WebContentSettingsClient"* %165, %"class.blink::WebContentSettingsClient"** %166, align 8
  %167 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %167) #12
  %168 = call i32 @_ZNK5blink16ExecutionContext12AddressSpaceEv(%"class.blink::ExecutionContext"* %42) #12
  store i32 %168, i32* %21, align 4
  %169 = bitcast %"class.WTF::Vector.104"** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169) #12
  %170 = call %"class.WTF::Vector.104"* @_ZN5blink18OriginTrialContext9GetTokensEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %43) #12
  store %"class.WTF::Vector.104"* %170, %"class.WTF::Vector.104"** %22, align 8
  %171 = bitcast %"class.base::UnguessableToken"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %171) #12
  %172 = call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %173 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %23, i64 0, i32 0, i32 0
  %174 = extractvalue { i64, i64 } %172, 0
  store i64 %174, i64* %173, align 8
  %175 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %23, i64 0, i32 0, i32 1
  %176 = extractvalue { i64, i64 } %172, 1
  store i64 %176, i64* %175, align 8
  %177 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #12
  store i8* null, i8** %24, align 8
  %178 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %178) #12
  store i32 0, i32* %25, align 4
  %179 = getelementptr inbounds %"class.mojo::NullRemote", %"class.mojo::NullRemote"* %26, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %179) #12
  %180 = bitcast %"struct.blink::BeginFrameProviderParams"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %180) #12
  %181 = bitcast i8** %28 to i8*
  %182 = bitcast %"struct.blink::BeginFrameProviderParams"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %182, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #12
  store i8* null, i8** %28, align 8
  %183 = call dereferenceable(16) %"class.base::UnguessableToken"* @_ZNK5blink16ExecutionContext17GetAgentClusterIDEv(%"class.blink::ExecutionContext"* %42) #12
  %184 = bitcast %"class.blink::MultiToken.2236"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %184) #12
  %185 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %37, i64 0, i32 35
  %186 = bitcast %"class.util::TokenType"* %185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %184, i8* align 8 %186, i64 16, i1 false) #12
  %187 = getelementptr inbounds %"class.blink::MultiToken.2236", %"class.blink::MultiToken.2236"* %29, i64 0, i32 1
  store i32 0, i32* %187, align 8, !alias.scope !2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #12
  %188 = call zeroext i1 @_ZNK5blink14LocalDOMWindow29CrossOriginIsolatedCapabilityEv(%"class.blink::LocalDOMWindow"* %37) #12
  %189 = zext i1 %188 to i8
  store i8 %189, i8* %30, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #12
  %190 = call zeroext i1 @_ZNK5blink14LocalDOMWindow22DirectSocketCapabilityEv(%"class.blink::LocalDOMWindow"* %37) #12
  %191 = zext i1 %190 to i8
  store i8 %191, i8* %31, align 1
  %192 = call %"struct.blink::GlobalScopeCreationParams"* @_ZNSt3__111make_uniqueIN5blink25GlobalScopeCreationParamsEJRKNS1_4KURLENS1_5mojom10ScriptTypeERN3WTF6StringES9_N4absl8optionalINS1_17UserAgentMetadataEEE13scoped_refptrINS1_21WebWorkerFetchContextEENS8_6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS8_18PartitionAllocatorEEENSM_14ReferrerPolicyEPKNS1_14SecurityOriginEbNS1_10HttpsStateEDnNS_10unique_ptrINS1_24WebContentSettingsClientENS_14default_deleteISY_EEEENSM_14IPAddressSpaceEPNSI_IS9_Lj0ESQ_EEN4base16UnguessableTokenEDnNS6_14V8CacheOptionsERPNS1_25WorkletModuleResponsesMapENSJ_10NullRemoteENS1_24BeginFrameProviderParamsEDnRKS16_RKlNS1_10MultiTokenIN4util9TokenTypeINS1_25LocalFrameTokenTypeMarkerEEENS1J_INS1_30DedicatedWorkerTokenTypeMarkerEEEJNS1J_INS1_28ServiceWorkerTokenTypeMarkerEEENS1J_INS1_27SharedWorkerTokenTypeMarkerEEENS1J_INS1_31AnimationWorkletTokenTypeMarkerEEENS1J_INS1_27AudioWorkletTokenTypeMarkerEEENS1J_INS1_28LayoutWorkletTokenTypeMarkerEEENS1J_INS1_27PaintWorkletTokenTypeMarkerEEEEEEbbEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::KURL"* dereferenceable(112) %126, i32* nonnull dereferenceable(4) %10, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.absl::optional.2242"* nonnull dereferenceable(160) %12, %class.scoped_refptr.493* nonnull dereferenceable(8) %13, %"class.WTF::Vector.80"* nonnull dereferenceable(16) %14, i32* nonnull dereferenceable(4) %15, %"class.blink::SecurityOrigin"** nonnull dereferenceable(8) %16, i8* nonnull dereferenceable(1) %17, i32* nonnull dereferenceable(4) %18, i8** nonnull dereferenceable(8) %19, %"class.std::__1::unique_ptr.478"* nonnull dereferenceable(8) %20, i32* nonnull dereferenceable(4) %21, %"class.WTF::Vector.104"** nonnull dereferenceable(8) %22, %"class.base::UnguessableToken"* nonnull dereferenceable(16) %23, i8** nonnull dereferenceable(8) %24, i32* nonnull dereferenceable(4) %25, %"class.blink::WorkletModuleResponsesMap"** nonnull dereferenceable(8) %6, %"class.mojo::NullRemote"* nonnull dereferenceable(1) %26, %"struct.blink::BeginFrameProviderParams"* nonnull dereferenceable(16) %27, i8** nonnull dereferenceable(8) %28, %"class.base::UnguessableToken"* dereferenceable(16) %183, i64* nonnull dereferenceable(8) @_ZN3ukmL16kInvalidSourceIdE, %"class.blink::MultiToken.2236"* nonnull dereferenceable(24) %29, i8* nonnull dereferenceable(1) %30, i8* nonnull dereferenceable(1) %31)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %184) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %180) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %179) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %178) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %171) #12
  %193 = icmp eq %"class.WTF::Vector.104"* %170, null
  br i1 %193, label %234, label %194

194:                                              ; preds = %125
  %195 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %170, i64 0, i32 0, i32 0, i32 0
  %196 = load %"class.WTF::String"*, %"class.WTF::String"** %195, align 8
  %197 = icmp eq %"class.WTF::String"* %196, null
  br i1 %197, label %232, label %198, !prof !5

198:                                              ; preds = %194
  %199 = bitcast %"class.WTF::String"* %196 to i8*
  %200 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %170, i64 0, i32 0, i32 0, i32 2
  %201 = load i32, i32* %200, align 4
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %230, label %203, !prof !6

203:                                              ; preds = %198
  %204 = zext i32 %201 to i64
  %205 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %196, i64 %204
  br label %206

206:                                              ; preds = %224, %203
  %207 = phi %"class.WTF::String"* [ %225, %224 ], [ %196, %203 ]
  %208 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %207, i64 0, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %224, label %211

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %209) #12
  br label %224

224:                                              ; preds = %223, %220, %206
  %225 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %207, i64 1
  %226 = icmp eq %"class.WTF::String"* %225, %205
  br i1 %226, label %227, label %206

227:                                              ; preds = %224
  store i32 0, i32* %200, align 4
  %228 = bitcast %"class.WTF::Vector.104"* %170 to i8**
  %229 = load i8*, i8** %228, align 8
  br label %230

230:                                              ; preds = %227, %198
  %231 = phi i8* [ %229, %227 ], [ %199, %198 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %231) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %195, align 8
  br label %232

232:                                              ; preds = %230, %194
  %233 = bitcast %"class.WTF::Vector.104"* %170 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %233) #12
  br label %234

234:                                              ; preds = %125, %232
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %167) #12
  %235 = load %"class.blink::WebContentSettingsClient"*, %"class.blink::WebContentSettingsClient"** %166, align 8
  store %"class.blink::WebContentSettingsClient"* null, %"class.blink::WebContentSettingsClient"** %166, align 8
  %236 = icmp eq %"class.blink::WebContentSettingsClient"* %235, null
  br i1 %236, label %242, label %237

237:                                              ; preds = %234
  %238 = bitcast %"class.blink::WebContentSettingsClient"* %235 to void (%"class.blink::WebContentSettingsClient"*)***
  %239 = load void (%"class.blink::WebContentSettingsClient"*)**, void (%"class.blink::WebContentSettingsClient"*)*** %238, align 8
  %240 = getelementptr inbounds void (%"class.blink::WebContentSettingsClient"*)*, void (%"class.blink::WebContentSettingsClient"*)** %239, i64 17
  %241 = load void (%"class.blink::WebContentSettingsClient"*)*, void (%"class.blink::WebContentSettingsClient"*)** %240, align 8
  call void %241(%"class.blink::WebContentSettingsClient"* nonnull %235) #12
  br label %242

242:                                              ; preds = %234, %237
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %156) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %148) #12
  %243 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %14, i64 0, i32 0, i32 0, i32 0
  %244 = load %"class.mojo::StructPtr.83"*, %"class.mojo::StructPtr.83"** %243, align 8
  %245 = icmp eq %"class.mojo::StructPtr.83"* %244, null
  br i1 %245, label %269, label %246, !prof !5

246:                                              ; preds = %242
  %247 = bitcast %"class.mojo::StructPtr.83"* %244 to i8*
  %248 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %14, i64 0, i32 0, i32 0, i32 2
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %267, label %251, !prof !6

251:                                              ; preds = %246
  %252 = zext i32 %249 to i64
  %253 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %244, i64 %252
  br label %254

254:                                              ; preds = %261, %251
  %255 = phi %"class.mojo::StructPtr.83"* [ %262, %261 ], [ %244, %251 ]
  %256 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %255, i64 0, i32 0, i32 0, i32 0, i32 0
  %257 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %256, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %256, align 8
  %258 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %257, null
  br i1 %258, label %261, label %259

259:                                              ; preds = %254
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %257) #12
  %260 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %257 to i8*
  call void @_ZdlPv(i8* %260) #13
  br label %261

261:                                              ; preds = %259, %254
  %262 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %255, i64 1
  %263 = icmp eq %"class.mojo::StructPtr.83"* %262, %253
  br i1 %263, label %264, label %254

264:                                              ; preds = %261
  store i32 0, i32* %248, align 4
  %265 = bitcast %"class.WTF::Vector.80"* %14 to i8**
  %266 = load i8*, i8** %265, align 8
  br label %267

267:                                              ; preds = %264, %246
  %268 = phi i8* [ %266, %264 ], [ %247, %246 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %268) #12
  store %"class.mojo::StructPtr.83"* null, %"class.mojo::StructPtr.83"** %243, align 8
  br label %269

269:                                              ; preds = %242, %267
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %145) #12
  %270 = load %"class.blink::WebWorkerFetchContext"*, %"class.blink::WebWorkerFetchContext"** %144, align 8
  %271 = icmp eq %"class.blink::WebWorkerFetchContext"* %270, null
  br i1 %271, label %285, label %272

272:                                              ; preds = %269
  %273 = getelementptr inbounds %"class.blink::WebWorkerFetchContext", %"class.blink::WebWorkerFetchContext"* %270, i64 0, i32 1
  %274 = getelementptr inbounds %"class.base::RefCounted.494", %"class.base::RefCounted.494"* %273, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %274) #12
  %275 = getelementptr inbounds %"class.base::RefCounted.494", %"class.base::RefCounted.494"* %273, i64 0, i32 0, i32 0
  %276 = load i32, i32* %275, align 4
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %285

278:                                              ; preds = %272
  %279 = getelementptr inbounds %"class.base::RefCounted.494", %"class.base::RefCounted.494"* %273, i64 -2
  %280 = bitcast %"class.base::RefCounted.494"* %279 to %"class.blink::WebWorkerFetchContext"*
  %281 = bitcast %"class.base::RefCounted.494"* %279 to void (%"class.blink::WebWorkerFetchContext"*)***
  %282 = load void (%"class.blink::WebWorkerFetchContext"*)**, void (%"class.blink::WebWorkerFetchContext"*)*** %281, align 8
  %283 = getelementptr inbounds void (%"class.blink::WebWorkerFetchContext"*)*, void (%"class.blink::WebWorkerFetchContext"*)** %282, i64 1
  %284 = load void (%"class.blink::WebWorkerFetchContext"*)*, void (%"class.blink::WebWorkerFetchContext"*)** %283, align 8
  call void %284(%"class.blink::WebWorkerFetchContext"* nonnull %280) #12
  br label %285

285:                                              ; preds = %269, %272, %278
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #12
  %286 = load i8, i8* %131, align 8, !range !7
  %287 = icmp eq i8 %286, 0
  br i1 %287, label %290, label %288

288:                                              ; preds = %285
  %289 = getelementptr inbounds %"class.absl::optional.2242", %"class.absl::optional.2242"* %12, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink17UserAgentMetadataD2Ev(%"struct.blink::UserAgentMetadata"* %289) #12
  store i8 0, i8* %131, align 8
  br label %290

290:                                              ; preds = %285, %288
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %131) #12
  %291 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %292 = icmp eq %"class.WTF::StringImpl"* %291, null
  br i1 %292, label %306, label %293

293:                                              ; preds = %290
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = and i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 0
  %299 = load i32, i32* %298, align 4
  br i1 %297, label %300, label %302

300:                                              ; preds = %293
  %301 = add i32 %299, -1
  store i32 %301, i32* %298, align 4
  br label %302

302:                                              ; preds = %300, %293
  %303 = phi i32 [ %301, %300 ], [ %299, %293 ]
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %306

305:                                              ; preds = %302
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %291) #12
  br label %306

306:                                              ; preds = %290, %302, %305
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %127) #12
  %307 = load %"class.blink::MainThreadWorkletReportingProxy"*, %"class.blink::MainThreadWorkletReportingProxy"** %45, align 8
  %308 = getelementptr inbounds %"class.blink::MainThreadWorkletReportingProxy", %"class.blink::MainThreadWorkletReportingProxy"* %307, i64 0, i32 0
  %309 = call %"class.blink::PaintWorkletGlobalScope"* @_ZN5blink23PaintWorkletGlobalScope6CreateEPNS_10LocalFrameENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS3_14default_deleteIS5_EEEERNS_20WorkerReportingProxyE(%"class.blink::LocalFrame"* %1, %"struct.blink::GlobalScopeCreationParams"* %192, %"class.blink::WorkerReportingProxy"* dereferenceable(8) %308) #12
  %310 = ptrtoint %"class.blink::PaintWorkletGlobalScope"* %309 to i64
  %311 = bitcast %"class.blink::Member.438"* %35 to i64*
  store atomic i64 %310, i64* %311 monotonic, align 8
  %312 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %317, label %314

314:                                              ; preds = %306
  %315 = bitcast %"class.blink::PaintWorkletGlobalScope"* %309 to i8*
  %316 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %315) #12
  br label %317

317:                                              ; preds = %314, %306
  %318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %319 = icmp eq %"class.WTF::StringImpl"* %318, null
  br i1 %319, label %333, label %320

320:                                              ; preds = %317
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = load atomic i32, i32* %321 monotonic, align 4
  %323 = and i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 0
  %326 = load i32, i32* %325, align 4
  br i1 %324, label %327, label %329

327:                                              ; preds = %320
  %328 = add i32 %326, -1
  store i32 %328, i32* %325, align 4
  br label %329

329:                                              ; preds = %327, %320
  %330 = phi i32 [ %328, %327 ], [ %326, %320 ]
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %333

332:                                              ; preds = %329
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %318) #12
  br label %333

333:                                              ; preds = %317, %329, %332
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEEENS_12StringAppendINS_10StringViewET_EERKS3_S4_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #1 comdat {
  %4 = alloca [24 x i8], align 8
  %5 = getelementptr inbounds [24 x i8], [24 x i8]* %4, i64 0, i64 0
  %6 = bitcast %"class.WTF::StringView"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %7, label %55, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #12
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !6

22:                                               ; preds = %13
  tail call void @llvm.trap() #12
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8
  %26 = bitcast %"class.WTF::StringAppend"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %5, i64 24, i1 false)
  %27 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %27, align 8
  %28 = load atomic i32, i32* %9 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %25
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #12
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !6

40:                                               ; preds = %33
  tail call void @llvm.trap() #12
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %41, %25
  %44 = phi i32 [ %42, %41 ], [ %32, %25 ]
  %45 = load atomic i32, i32* %9 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %43
  %49 = add i32 %44, -1
  store i32 %49, i32* %31, align 4
  br label %50

50:                                               ; preds = %48, %43
  %51 = phi i32 [ %49, %48 ], [ %44, %43 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  %54 = load i32, i32* %31, align 4
  br label %58

55:                                               ; preds = %3
  %56 = bitcast %"class.WTF::StringAppend"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %5, i64 24, i1 false)
  %57 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %57, align 8
  br label %69

58:                                               ; preds = %50, %53
  %59 = phi i32 [ %51, %50 ], [ %54, %53 ]
  %60 = load atomic i32, i32* %9 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %58
  %64 = add i32 %59, -1
  store i32 %64, i32* %31, align 4
  br label %65

65:                                               ; preds = %63, %58
  %66 = phi i32 [ %64, %63 ], [ %59, %58 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_10StringViewENS_6StringEEcvS2_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2411", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2411", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %85, label %17

17:                                               ; preds = %1
  %18 = icmp eq %"class.WTF::StringImpl"* %11, null
  %19 = select i1 %18, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %85, label %24

24:                                               ; preds = %17
  %25 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %26 = tail call i32 @_ZNK3WTF12StringAppendINS_10StringViewENS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %27 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %26, i8** nonnull dereferenceable(8) %6) #12
  %28 = load i8*, i8** %6, align 8
  %29 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 2
  %31 = bitcast %"class.WTF::StringAppend"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %31, i64 24, i1 false) #12
  %32 = bitcast %"class.WTF::StringTypeAdapter.2411"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #12
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2411", %"class.WTF::StringTypeAdapter.2411"* %5, i64 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2411", %"class.WTF::StringTypeAdapter.2411"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false) #12
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %24
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %45

39:                                               ; preds = %24
  %40 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %44 = bitcast %"class.WTF::StringImpl"* %43 to i8*
  br label %45

45:                                               ; preds = %37, %39
  %46 = phi i8* [ null, %37 ], [ %44, %39 ]
  %47 = phi i64 [ %38, %37 ], [ %40, %39 ]
  %48 = phi i32 [ 0, %37 ], [ %42, %39 ]
  %49 = bitcast %"class.WTF::StringTypeAdapter.2411"* %5 to i64*
  store i64 %47, i64* %49, align 8
  store i8* %46, i8** %33, align 8
  store i32 %48, i32* %34, align 8
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %28) #12
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2411", %"class.WTF::StringTypeAdapter.2411"* %5, i64 0, i32 0
  %51 = load i32, i32* %30, align 8
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %28, i64 %52
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %50, i8* %53) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  %54 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %54, label %146, label %55

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %72

62:                                               ; preds = %55
  %63 = zext i32 %61 to i33
  %64 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %63, i33 1) #12
  %65 = extractvalue { i33, i1 } %64, 1
  %66 = extractvalue { i33, i1 } %64, 0
  %67 = icmp slt i33 %66, 0
  %68 = or i1 %65, %67
  br i1 %68, label %69, label %70, !prof !6

69:                                               ; preds = %62
  call void @llvm.trap() #12
  unreachable

70:                                               ; preds = %62
  %71 = trunc i33 %66 to i32
  store i32 %71, i32* %60, align 4
  br label %72

72:                                               ; preds = %55, %70
  %73 = phi i32 [ %71, %70 ], [ %61, %55 ]
  %74 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %75 = load atomic i32, i32* %56 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %80 = add i32 %73, -1
  store i32 %80, i32* %79, align 4
  br label %81

81:                                               ; preds = %78, %72
  %82 = phi i32 [ %80, %78 ], [ %73, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %146

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #12
  br label %146

85:                                               ; preds = %17, %1
  %86 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %87 = tail call i32 @_ZNK3WTF12StringAppendINS_10StringViewENS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %88 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %87, i16** nonnull dereferenceable(8) %7) #12
  %89 = load i16*, i16** %7, align 8
  %90 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #12
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 2
  %92 = bitcast %"class.WTF::StringAppend"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* align 8 %92, i64 24, i1 false) #12
  %93 = bitcast %"class.WTF::StringTypeAdapter.2411"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #12
  %94 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2411", %"class.WTF::StringTypeAdapter.2411"* %3, i64 0, i32 0, i32 0, i32 1
  %95 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2411", %"class.WTF::StringTypeAdapter.2411"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 24, i1 false) #12
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %98, label %100

98:                                               ; preds = %85
  %99 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %106

100:                                              ; preds = %85
  %101 = ptrtoint %"class.WTF::StringImpl"* %96 to i64
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 1
  %105 = bitcast %"class.WTF::StringImpl"* %104 to i8*
  br label %106

106:                                              ; preds = %98, %100
  %107 = phi i8* [ null, %98 ], [ %105, %100 ]
  %108 = phi i64 [ %99, %98 ], [ %101, %100 ]
  %109 = phi i32 [ 0, %98 ], [ %103, %100 ]
  %110 = bitcast %"class.WTF::StringTypeAdapter.2411"* %3 to i64*
  store i64 %108, i64* %110, align 8
  store i8* %107, i8** %94, align 8
  store i32 %109, i32* %95, align 8
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %2, i16* %89) #12
  %111 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2411", %"class.WTF::StringTypeAdapter.2411"* %3, i64 0, i32 0
  %112 = load i32, i32* %91, align 8
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds i16, i16* %89, i64 %113
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %111, i16* %114) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #12
  %115 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %115, label %146, label %116

116:                                              ; preds = %106
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %133

123:                                              ; preds = %116
  %124 = zext i32 %122 to i33
  %125 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %124, i33 1) #12
  %126 = extractvalue { i33, i1 } %125, 1
  %127 = extractvalue { i33, i1 } %125, 0
  %128 = icmp slt i33 %127, 0
  %129 = or i1 %126, %128
  br i1 %129, label %130, label %131, !prof !6

130:                                              ; preds = %123
  call void @llvm.trap() #12
  unreachable

131:                                              ; preds = %123
  %132 = trunc i33 %127 to i32
  store i32 %132, i32* %121, align 4
  br label %133

133:                                              ; preds = %116, %131
  %134 = phi i32 [ %132, %131 ], [ %122, %116 ]
  %135 = ptrtoint %"class.WTF::StringImpl"* %88 to i64
  %136 = load atomic i32, i32* %117 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %141 = add i32 %134, -1
  store i32 %141, i32* %140, align 4
  br label %142

142:                                              ; preds = %139, %133
  %143 = phi i32 [ %141, %139 ], [ %134, %133 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #12
  br label %146

146:                                              ; preds = %145, %142, %106, %84, %81, %45
  %147 = phi i8* [ %25, %45 ], [ %25, %81 ], [ %25, %84 ], [ %86, %106 ], [ %86, %142 ], [ %86, %145 ]
  %148 = phi i64 [ 0, %45 ], [ %74, %81 ], [ %74, %84 ], [ 0, %106 ], [ %135, %142 ], [ %135, %145 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #12
  %149 = inttoptr i64 %148 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %149
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::GlobalScopeCreationParams"* @_ZNSt3__111make_uniqueIN5blink25GlobalScopeCreationParamsEJRKNS1_4KURLENS1_5mojom10ScriptTypeERN3WTF6StringES9_N4absl8optionalINS1_17UserAgentMetadataEEE13scoped_refptrINS1_21WebWorkerFetchContextEENS8_6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS8_18PartitionAllocatorEEENSM_14ReferrerPolicyEPKNS1_14SecurityOriginEbNS1_10HttpsStateEDnNS_10unique_ptrINS1_24WebContentSettingsClientENS_14default_deleteISY_EEEENSM_14IPAddressSpaceEPNSI_IS9_Lj0ESQ_EEN4base16UnguessableTokenEDnNS6_14V8CacheOptionsERPNS1_25WorkletModuleResponsesMapENSJ_10NullRemoteENS1_24BeginFrameProviderParamsEDnRKS16_RKlNS1_10MultiTokenIN4util9TokenTypeINS1_25LocalFrameTokenTypeMarkerEEENS1J_INS1_30DedicatedWorkerTokenTypeMarkerEEEJNS1J_INS1_28ServiceWorkerTokenTypeMarkerEEENS1J_INS1_27SharedWorkerTokenTypeMarkerEEENS1J_INS1_31AnimationWorkletTokenTypeMarkerEEENS1J_INS1_27AudioWorkletTokenTypeMarkerEEENS1J_INS1_28LayoutWorkletTokenTypeMarkerEEENS1J_INS1_27PaintWorkletTokenTypeMarkerEEEEEEbbEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::KURL"* dereferenceable(112), i32* dereferenceable(4), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.absl::optional.2242"* dereferenceable(160), %class.scoped_refptr.493* dereferenceable(8), %"class.WTF::Vector.80"* dereferenceable(16), i32* dereferenceable(4), %"class.blink::SecurityOrigin"** dereferenceable(8), i8* dereferenceable(1), i32* dereferenceable(4), i8** dereferenceable(8), %"class.std::__1::unique_ptr.478"* dereferenceable(8), i32* dereferenceable(4), %"class.WTF::Vector.104"** dereferenceable(8), %"class.base::UnguessableToken"* dereferenceable(16), i8** dereferenceable(8), i32* dereferenceable(4), %"class.blink::WorkletModuleResponsesMap"** dereferenceable(8), %"class.mojo::NullRemote"* dereferenceable(1), %"struct.blink::BeginFrameProviderParams"* dereferenceable(16), i8** dereferenceable(8), %"class.base::UnguessableToken"* dereferenceable(16), i64* dereferenceable(8), %"class.blink::MultiToken.2236"* dereferenceable(24), i8* dereferenceable(1), i8* dereferenceable(1)) local_unnamed_addr #4 comdat {
  %28 = alloca %"class.WTF::Vector.80", align 8
  %29 = alloca i64, align 8
  %30 = bitcast i64* %29 to %"class.mojo::PendingRemote.2230"*
  %31 = alloca <4 x i32>, align 16
  %32 = bitcast <4 x i32>* %31 to %"struct.blink::BeginFrameProviderParams"*
  %33 = alloca %"class.base::UnguessableToken", align 8
  %34 = alloca %"class.absl::optional.2231", align 8
  %35 = tail call noalias i8* @malloc(i64 520) #12
  %36 = bitcast i8* %35 to %"struct.blink::GlobalScopeCreationParams"*
  %37 = load i32, i32* %1, align 4
  %38 = getelementptr inbounds %class.scoped_refptr.493, %class.scoped_refptr.493* %5, i64 0, i32 0
  %39 = bitcast %class.scoped_refptr.493* %5 to i64*
  %40 = load i64, i64* %39, align 8
  store %"class.blink::WebWorkerFetchContext"* null, %"class.blink::WebWorkerFetchContext"** %38, align 8
  %41 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %28, i64 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %28, i64 0, i32 0, i32 0, i32 2
  %43 = bitcast %"class.WTF::Vector.80"* %6 to i64*
  %44 = bitcast %"class.WTF::Vector.80"* %28 to i64*
  store i64 0, i64* %44, align 8
  %45 = load i64, i64* %43, align 8
  %46 = bitcast %"class.WTF::Vector.80"* %28 to i64*
  store atomic i64 0, i64* %43 monotonic, align 8
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %6, i64 0, i32 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %41, align 8
  store i32 0, i32* %47, align 4
  %49 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %6, i64 0, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %42, align 4
  store i32 0, i32* %49, align 4
  %51 = load i32, i32* %7, align 4
  %52 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %8, align 8
  %53 = load i8, i8* %9, align 1, !range !7
  %54 = icmp ne i8 %53, 0
  %55 = load i32, i32* %10, align 4
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.478", %"class.std::__1::unique_ptr.478"* %12, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.478"* %12 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.blink::WebContentSettingsClient"* null, %"class.blink::WebContentSettingsClient"** %56, align 8
  %59 = load i32, i32* %13, align 4
  %60 = load %"class.WTF::Vector.104"*, %"class.WTF::Vector.104"** %14, align 8
  %61 = load i32, i32* %17, align 4
  %62 = load %"class.blink::WorkletModuleResponsesMap"*, %"class.blink::WorkletModuleResponsesMap"** %18, align 8
  store i64 0, i64* %29, align 8, !alias.scope !8
  %63 = bitcast i64* %29 to %"struct.mojo::internal::PendingRemoteState"*
  call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %63) #12
  %64 = bitcast %"struct.blink::BeginFrameProviderParams"* %20 to <4 x i32>*
  %65 = load <4 x i32>, <4 x i32>* %64, align 4
  store <4 x i32> %65, <4 x i32>* %31, align 16
  %66 = bitcast %"class.base::UnguessableToken"* %33 to i8*
  %67 = bitcast %"class.base::UnguessableToken"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* align 8 %67, i64 16, i1 false)
  %68 = load i64, i64* %23, align 8
  %69 = getelementptr inbounds %"class.absl::optional.2231", %"class.absl::optional.2231"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #12
  store i8 1, i8* %69, align 8
  %70 = getelementptr inbounds %"class.absl::optional.2231", %"class.absl::optional.2231"* %34, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %71 = bitcast %"class.blink::MultiToken.2236"* %70 to i8*
  %72 = bitcast %"class.blink::MultiToken.2236"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 24, i1 false) #12
  %73 = load i8, i8* %25, align 1, !range !7
  %74 = icmp ne i8 %73, 0
  %75 = load i8, i8* %26, align 1, !range !7
  %76 = icmp ne i8 %75, 0
  %77 = zext i32 %59 to i64
  %78 = shl nuw i64 %77, 32
  %79 = or i64 %78, 1
  call void @_ZN5blink25GlobalScopeCreationParamsC1ERKNS_4KURLENS_5mojom10ScriptTypeERKN3WTF6StringES9_RKN4absl8optionalINS_17UserAgentMetadataEEE13scoped_refptrINS_21WebWorkerFetchContextEENS6_6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS6_18PartitionAllocatorEEENSN_14ReferrerPolicyEPKNS_14SecurityOriginEbNS_10HttpsStateEPNS_13WorkerClientsENSt3__110unique_ptrINS_24WebContentSettingsClientENS10_14default_deleteIS12_EEEENSB_INSN_14IPAddressSpaceEEEPKNSJ_IS7_Lj0ESR_EERKN4base16UnguessableTokenENS11_INS_14WorkerSettingsENS13_IS1F_EEEENS4_14V8CacheOptionsEPNS_25WorkletModuleResponsesMapENSK_13PendingRemoteINS4_5blink22BrowserInterfaceBrokerEEENS_24BeginFrameProviderParamsEPKNS_17PermissionsPolicyES1C_lRKNSB_INS_10MultiTokenIN4util9TokenTypeINS_25LocalFrameTokenTypeMarkerEEENS1V_INS_30DedicatedWorkerTokenTypeMarkerEEEJNS1V_INS_28ServiceWorkerTokenTypeMarkerEEENS1V_INS_27SharedWorkerTokenTypeMarkerEEENS1V_INS_31AnimationWorkletTokenTypeMarkerEEENS1V_INS_27AudioWorkletTokenTypeMarkerEEENS1V_INS_28LayoutWorkletTokenTypeMarkerEEENS1V_INS_27PaintWorkletTokenTypeMarkerEEEEEEEEbb(%"struct.blink::GlobalScopeCreationParams"* %36, %"class.blink::KURL"* dereferenceable(112) %0, i32 %37, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.absl::optional.2242"* dereferenceable(160) %4, i64 %40, %"class.WTF::Vector.80"* nonnull %28, i32 %51, %"class.blink::SecurityOrigin"* %52, i1 zeroext %54, i32 %55, %"class.blink::WorkerClients"* null, i64 %58, i64 %79, %"class.WTF::Vector.104"* %60, %"class.base::UnguessableToken"* dereferenceable(16) %15, i64 0, i32 %61, %"class.blink::WorkletModuleResponsesMap"* %62, %"class.mojo::PendingRemote.2230"* nonnull %30, %"struct.blink::BeginFrameProviderParams"* nonnull %32, %"class.blink::PermissionsPolicy"* null, %"class.base::UnguessableToken"* nonnull byval(%"class.base::UnguessableToken") align 8 %33, i64 %68, %"class.absl::optional.2231"* nonnull dereferenceable(32) %34, i1 zeroext %74, i1 zeroext %76) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #12
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %63) #12
  %80 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %28, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.mojo::StructPtr.83"*, %"class.mojo::StructPtr.83"** %80, align 8
  %82 = icmp eq %"class.mojo::StructPtr.83"* %81, null
  br i1 %82, label %105, label %83, !prof !5

83:                                               ; preds = %27
  %84 = bitcast %"class.mojo::StructPtr.83"* %81 to i8*
  %85 = load i32, i32* %42, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %103, label %87, !prof !6

87:                                               ; preds = %83
  %88 = zext i32 %85 to i64
  %89 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %81, i64 %88
  br label %90

90:                                               ; preds = %97, %87
  %91 = phi %"class.mojo::StructPtr.83"* [ %98, %97 ], [ %81, %87 ]
  %92 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  %93 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %92, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %92, align 8
  %94 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %90
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %93) #12
  %96 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %93 to i8*
  call void @_ZdlPv(i8* %96) #13
  br label %97

97:                                               ; preds = %95, %90
  %98 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %91, i64 1
  %99 = icmp eq %"class.mojo::StructPtr.83"* %98, %89
  br i1 %99, label %100, label %90

100:                                              ; preds = %97
  store i32 0, i32* %42, align 4
  %101 = bitcast %"class.WTF::Vector.80"* %28 to i8**
  %102 = load i8*, i8** %101, align 8
  br label %103

103:                                              ; preds = %100, %83
  %104 = phi i8* [ %102, %100 ], [ %84, %83 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %104) #12
  store %"class.mojo::StructPtr.83"* null, %"class.mojo::StructPtr.83"** %80, align 8
  br label %105

105:                                              ; preds = %27, %103
  ret %"struct.blink::GlobalScopeCreationParams"* %36
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14LocalDOMWindow3UrlEv(%"class.blink::LocalDOMWindow"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink14LocalDOMWindow9UserAgentEv(%"class.blink::LocalDOMWindow"*) unnamed_addr #3

declare %"class.blink::LocalFrameClient"* @_ZNK5blink10LocalFrame6ClientEv(%"class.blink::LocalFrame"*) local_unnamed_addr #3

declare %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare dereferenceable(16) %"class.WTF::Vector.80"* @_ZNK5blink21ContentSecurityPolicy17GetParsedPoliciesEv(%"class.blink::ContentSecurityPolicy"*) local_unnamed_addr #3

declare i32 @_ZNK5blink16ExecutionContext17GetReferrerPolicyEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare i32 @_ZNK5blink14LocalDOMWindow13GetHttpsStateEv(%"class.blink::LocalDOMWindow"*) unnamed_addr #3

declare i32 @_ZNK5blink16ExecutionContext12AddressSpaceEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare %"class.WTF::Vector.104"* @_ZN5blink18OriginTrialContext9GetTokensEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dereferenceable(16) %"class.base::UnguessableToken"* @_ZNK5blink16ExecutionContext17GetAgentClusterIDEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink14LocalDOMWindow29CrossOriginIsolatedCapabilityEv(%"class.blink::LocalDOMWindow"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink14LocalDOMWindow22DirectSocketCapabilityEv(%"class.blink::LocalDOMWindow"*) unnamed_addr #3

declare %"class.blink::PaintWorkletGlobalScope"* @_ZN5blink23PaintWorkletGlobalScope6CreateEPNS_10LocalFrameENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS3_14default_deleteIS5_EEEERNS_20WorkerReportingProxyE(%"class.blink::LocalFrame"*, %"struct.blink::GlobalScopeCreationParams"*, %"class.blink::WorkerReportingProxy"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28PaintWorkletGlobalScopeProxy20FetchAndInvokeScriptERKNS_4KURLEN7network5mojom15CredentialsModeERKNS_33FetchClientSettingsObjectSnapshotERNS_28WorkerResourceTimingNotifierE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_19WorkletPendingTasksE(%"class.blink::PaintWorkletGlobalScopeProxy"* nocapture readonly, %"class.blink::KURL"* dereferenceable(112), i32, %"class.blink::FetchClientSettingsObjectSnapshot"*, %"class.blink::WorkerResourceTimingNotifier"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*) unnamed_addr #1 align 2 {
  %8 = getelementptr inbounds %"class.blink::PaintWorkletGlobalScopeProxy", %"class.blink::PaintWorkletGlobalScopeProxy"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.blink::PaintWorkletGlobalScope"** %8 to %"class.blink::WorkletGlobalScope"**
  %10 = load %"class.blink::WorkletGlobalScope"*, %"class.blink::WorkletGlobalScope"** %9, align 8
  tail call void @_ZN5blink18WorkletGlobalScope20FetchAndInvokeScriptERKNS_4KURLEN7network5mojom15CredentialsModeERKNS_33FetchClientSettingsObjectSnapshotERNS_28WorkerResourceTimingNotifierE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_19WorkletPendingTasksE(%"class.blink::WorkletGlobalScope"* %10, %"class.blink::KURL"* dereferenceable(112) %1, i32 %2, %"class.blink::FetchClientSettingsObjectSnapshot"* %3, %"class.blink::WorkerResourceTimingNotifier"* %4, %"class.base::SingleThreadTaskRunner"* %5, %"class.blink::WorkletPendingTasks"* %6) #12
  ret void
}

declare void @_ZN5blink18WorkletGlobalScope20FetchAndInvokeScriptERKNS_4KURLEN7network5mojom15CredentialsModeERKNS_33FetchClientSettingsObjectSnapshotERNS_28WorkerResourceTimingNotifierE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_19WorkletPendingTasksE(%"class.blink::WorkletGlobalScope"*, %"class.blink::KURL"* dereferenceable(112), i32, %"class.blink::FetchClientSettingsObjectSnapshot"*, %"class.blink::WorkerResourceTimingNotifier"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink28PaintWorkletGlobalScopeProxy22WorkletObjectDestroyedEv(%"class.blink::PaintWorkletGlobalScopeProxy"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28PaintWorkletGlobalScopeProxy27TerminateWorkletGlobalScopeEv(%"class.blink::PaintWorkletGlobalScopeProxy"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaintWorkletGlobalScopeProxy", %"class.blink::PaintWorkletGlobalScopeProxy"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::Member.438", %"class.blink::Member.438"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::PaintWorkletGlobalScope"*, %"class.blink::PaintWorkletGlobalScope"** %3, align 8
  tail call void @_ZN5blink23PaintWorkletGlobalScope7DisposeEv(%"class.blink::PaintWorkletGlobalScope"* %4) #12
  %5 = bitcast %"class.blink::Member.438"* %2 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.blink::PaintWorkletGlobalScopeProxy", %"class.blink::PaintWorkletGlobalScopeProxy"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.blink::MainThreadWorkletReportingProxy"*, %"class.blink::MainThreadWorkletReportingProxy"** %6, align 8
  store %"class.blink::MainThreadWorkletReportingProxy"* null, %"class.blink::MainThreadWorkletReportingProxy"** %6, align 8
  %8 = icmp eq %"class.blink::MainThreadWorkletReportingProxy"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::MainThreadWorkletReportingProxy"* %7 to void (%"class.blink::MainThreadWorkletReportingProxy"*)***
  %11 = load void (%"class.blink::MainThreadWorkletReportingProxy"*)**, void (%"class.blink::MainThreadWorkletReportingProxy"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::MainThreadWorkletReportingProxy"*)*, void (%"class.blink::MainThreadWorkletReportingProxy"*)** %11, i64 1
  %13 = load void (%"class.blink::MainThreadWorkletReportingProxy"*)*, void (%"class.blink::MainThreadWorkletReportingProxy"*)** %12, align 8
  tail call void %13(%"class.blink::MainThreadWorkletReportingProxy"* nonnull %7) #12
  br label %14

14:                                               ; preds = %1, %9
  ret void
}

declare void @_ZN5blink23PaintWorkletGlobalScope7DisposeEv(%"class.blink::PaintWorkletGlobalScope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSPaintDefinition"* @_ZN5blink28PaintWorkletGlobalScopeProxy14FindDefinitionERKN3WTF6StringE(%"class.blink::PaintWorkletGlobalScopeProxy"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::PaintWorkletGlobalScopeProxy", %"class.blink::PaintWorkletGlobalScopeProxy"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::PaintWorkletGlobalScope"*, %"class.blink::PaintWorkletGlobalScope"** %3, align 8
  %5 = tail call %"class.blink::CSSPaintDefinition"* @_ZN5blink23PaintWorkletGlobalScope14FindDefinitionERKN3WTF6StringE(%"class.blink::PaintWorkletGlobalScope"* %4, %"class.WTF::String"* dereferenceable(8) %1) #12
  ret %"class.blink::CSSPaintDefinition"* %5
}

declare %"class.blink::CSSPaintDefinition"* @_ZN5blink23PaintWorkletGlobalScope14FindDefinitionERKN3WTF6StringE(%"class.blink::PaintWorkletGlobalScope"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28PaintWorkletGlobalScopeProxy5TraceEPNS_7VisitorE(%"class.blink::PaintWorkletGlobalScopeProxy"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::PaintWorkletGlobalScopeProxy", %"class.blink::PaintWorkletGlobalScopeProxy"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.438"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23PaintWorkletGlobalScopeEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink28PaintWorkletGlobalScopeProxyD2Ev(%"class.blink::PaintWorkletGlobalScopeProxy"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PaintWorkletGlobalScopeProxy", %"class.blink::PaintWorkletGlobalScopeProxy"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink28PaintWorkletGlobalScopeProxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PaintWorkletGlobalScopeProxy", %"class.blink::PaintWorkletGlobalScopeProxy"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::MainThreadWorkletReportingProxy"*, %"class.blink::MainThreadWorkletReportingProxy"** %3, align 8
  store %"class.blink::MainThreadWorkletReportingProxy"* null, %"class.blink::MainThreadWorkletReportingProxy"** %3, align 8
  %5 = icmp eq %"class.blink::MainThreadWorkletReportingProxy"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::MainThreadWorkletReportingProxy"* %4 to void (%"class.blink::MainThreadWorkletReportingProxy"*)***
  %8 = load void (%"class.blink::MainThreadWorkletReportingProxy"*)**, void (%"class.blink::MainThreadWorkletReportingProxy"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::MainThreadWorkletReportingProxy"*)*, void (%"class.blink::MainThreadWorkletReportingProxy"*)** %8, i64 1
  %10 = load void (%"class.blink::MainThreadWorkletReportingProxy"*)*, void (%"class.blink::MainThreadWorkletReportingProxy"*)** %9, align 8
  tail call void %10(%"class.blink::MainThreadWorkletReportingProxy"* nonnull %4) #12
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink28PaintWorkletGlobalScopeProxyD0Ev(%"class.blink::PaintWorkletGlobalScopeProxy"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PaintWorkletGlobalScopeProxy", %"class.blink::PaintWorkletGlobalScopeProxy"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink28PaintWorkletGlobalScopeProxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PaintWorkletGlobalScopeProxy", %"class.blink::PaintWorkletGlobalScopeProxy"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::MainThreadWorkletReportingProxy"*, %"class.blink::MainThreadWorkletReportingProxy"** %3, align 8
  store %"class.blink::MainThreadWorkletReportingProxy"* null, %"class.blink::MainThreadWorkletReportingProxy"** %3, align 8
  %5 = icmp eq %"class.blink::MainThreadWorkletReportingProxy"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::MainThreadWorkletReportingProxy"* %4 to void (%"class.blink::MainThreadWorkletReportingProxy"*)***
  %8 = load void (%"class.blink::MainThreadWorkletReportingProxy"*)**, void (%"class.blink::MainThreadWorkletReportingProxy"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::MainThreadWorkletReportingProxy"*)*, void (%"class.blink::MainThreadWorkletReportingProxy"*)** %8, i64 1
  %10 = load void (%"class.blink::MainThreadWorkletReportingProxy"*)*, void (%"class.blink::MainThreadWorkletReportingProxy"*)** %9, align 8
  tail call void %10(%"class.blink::MainThreadWorkletReportingProxy"* nonnull %4) #12
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17UserAgentMetadataD2Ev(%"struct.blink::UserAgentMetadata"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 5
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 4
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 3
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #13
  br label %28

28:                                               ; preds = %19, %25
  %29 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 2
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %28, %34
  %38 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #13
  br label %46

46:                                               ; preds = %37, %43
  %47 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %47, align 8
  %49 = icmp eq %"struct.blink::UserAgentBrandVersion"* %48, null
  br i1 %49, label %81, label %50

50:                                               ; preds = %46
  %51 = bitcast %"struct.blink::UserAgentBrandVersion"* %48 to i8*
  %52 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 0, i32 0, i32 1
  %53 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %52, align 8
  %54 = icmp eq %"struct.blink::UserAgentBrandVersion"* %53, %48
  br i1 %54, label %79, label %55

55:                                               ; preds = %50, %74
  %56 = phi %"struct.blink::UserAgentBrandVersion"* [ %57, %74 ], [ %53, %50 ]
  %57 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %56, i64 -1
  %58 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %56, i64 -1, i32 1
  %59 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  tail call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %63, %55
  %67 = bitcast %"struct.blink::UserAgentBrandVersion"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  tail call void @_ZdlPv(i8* %73) #13
  br label %74

74:                                               ; preds = %71, %66
  %75 = icmp eq %"struct.blink::UserAgentBrandVersion"* %57, %48
  br i1 %75, label %76, label %55

76:                                               ; preds = %74
  %77 = bitcast %"struct.blink::UserAgentMetadata"* %0 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %50
  %80 = phi i8* [ %78, %76 ], [ %51, %50 ]
  store %"struct.blink::UserAgentBrandVersion"* %48, %"struct.blink::UserAgentBrandVersion"** %52, align 8
  tail call void @_ZdlPv(i8* %80) #13
  br label %81

81:                                               ; preds = %46, %79
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN5blink31MainThreadWorkletReportingProxyC1EPNS_16ExecutionContextE(%"class.blink::MainThreadWorkletReportingProxy"*, %"class.blink::ExecutionContext"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_10StringViewENS_6StringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  br label %16

16:                                               ; preds = %1, %13
  %17 = phi i32 [ %15, %13 ], [ 0, %1 ]
  %18 = add i32 %17, %9
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %18, %9
  br i1 %22, label %24, label %23

23:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %20, align 8
  br label %33

24:                                               ; preds = %16
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %20, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.2, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = icmp ult i32 %18, %17
  br i1 %37, label %39, label %38

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  store i8* null, i8** %35, align 8
  br label %48

39:                                               ; preds = %33
  %40 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8* %40, i8* %41) #12
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  store i8* %43, i8** %35, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.2, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12
  br label %48

48:                                               ; preds = %38, %39, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  ret i32 %18
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter"*, i16*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.80"* noalias sret, %"class.WTF::Vector.80"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.83", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.80"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #12
  %8 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %57, label %11, !prof !6

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %12) #12
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #12
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.80"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::StructPtr.83"*, %"class.mojo::StructPtr.83"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.mojo::StructPtr.83"* %3 to i8*
  %27 = bitcast %"class.mojo::StructPtr.83"* %3 to i64*
  %28 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %25, %54
  %30 = phi %"class.mojo::StructPtr.83"* [ %21, %25 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  %31 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %31, align 8, !noalias !11
  %33 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i64 0, i64* %27, align 8, !alias.scope !11
  br label %36

35:                                               ; preds = %29
  call void @_ZNK7network5mojom5blink21ContentSecurityPolicy5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.83"* nonnull sret %3, %"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %32) #12
  br label %36

36:                                               ; preds = %34, %35
  %37 = load i32, i32* %6, align 4
  %38 = load i32, i32* %5, align 8
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %49, label %40, !prof !6

40:                                               ; preds = %36
  %41 = load %"class.mojo::StructPtr.83"*, %"class.mojo::StructPtr.83"** %4, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %41, i64 %42
  %44 = bitcast %"class.mojo::StructPtr.83"* %43 to i64*
  %45 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %45, align 8
  %46 = load i64, i64* %27, align 8
  store i64 %46, i64* %44, align 8
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %6, align 4
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %28, align 8
  br label %54

49:                                               ; preds = %36
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.80"* %0, %"class.mojo::StructPtr.83"* nonnull dereferenceable(8) %3) #12
  %50 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %28, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %28, align 8
  %51 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %50 to i8*
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %50) #12
  call void @_ZdlPv(i8* %53) #13
  br label %54

54:                                               ; preds = %40, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  %55 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %30, i64 1
  %56 = icmp eq %"class.mojo::StructPtr.83"* %55, %23
  br i1 %56, label %57, label %29

57:                                               ; preds = %54, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.80"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.83"*, %"class.mojo::StructPtr.83"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.83"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.80"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.83"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.83"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.83"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.83"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !18

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.83"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.83"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.83"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.83"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.83"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.83"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.83"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.83"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.83"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.83"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.83"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.83"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.83"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #12
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %73) #12
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #12
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.83"*, %"class.mojo::StructPtr.83"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.83"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.83"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.83"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.83"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.83"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.83"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !20

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.83"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.83"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.83"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.83"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.83"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.83"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.83"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.83"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.83"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.83"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.83"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.83"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.83"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.80"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #12
  %149 = bitcast %"class.WTF::Vector.80"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.80"*, %"class.mojo::StructPtr.83"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.83"*, %"class.mojo::StructPtr.83"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.83"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.83"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.83"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.80"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.83"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.80"* %0, i32 %22) #12
  %36 = load %"class.mojo::StructPtr.83"*, %"class.mojo::StructPtr.83"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.83"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.83"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !5

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.83"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %55) #12
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #12
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.80"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.83"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.80"* %0, i32 %50) #12
  %64 = load %"class.mojo::StructPtr.83"*, %"class.mojo::StructPtr.83"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.83"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.83"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.83"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.83"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.83", %"class.mojo::StructPtr.83"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.83"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink21ContentSecurityPolicy5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.83"* noalias sret, %"class.network::mojom::blink::ContentSecurityPolicy"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.mojo::StructPtr.87", align 8
  %5 = alloca %"class.WTF::HashMap.94", align 8
  %6 = alloca %"class.WTF::HashMap.99", align 8
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca %"class.mojo::InlinedStructPtr", align 8
  %12 = alloca i8, align 1
  %13 = alloca %"class.WTF::Vector.104", align 8
  %14 = alloca i32, align 4
  %15 = alloca %"class.mojo::StructPtr.109", align 8
  %16 = alloca %"class.WTF::Vector.104", align 8
  %17 = bitcast %"class.mojo::StructPtr.87"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %18, align 8, !noalias !21
  %20 = icmp eq %"class.network::mojom::blink::CSPSource"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"class.mojo::StructPtr.87"* %4 to i64*
  store i64 0, i64* %22, align 8, !alias.scope !21
  br label %24

23:                                               ; preds = %2
  call void @_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.87"* nonnull sret %4, %"class.network::mojom::blink::CSPSource"* nonnull %19) #12
  br label %24

24:                                               ; preds = %21, %23
  %25 = bitcast %"class.WTF::HashMap.94"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 1
  call void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSD_(%"class.WTF::HashMap.94"* nonnull sret %5, %"class.WTF::HashMap.94"* dereferenceable(24) %26) #12
  %27 = bitcast %"class.WTF::HashMap.99"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 2
  call void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS_9StructPtrINS4_5blink13CSPSourceListEEENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENSC_IS9_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSG_(%"class.WTF::HashMap.99"* nonnull sret %6, %"class.WTF::HashMap.99"* dereferenceable(24) %28) #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #12
  %29 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 3
  %30 = load i8, i8* %29, align 1, !range !7
  store i8 %30, i8* %7, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #12
  %31 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 4
  %32 = load i8, i8* %31, align 1, !range !7
  store i8 %32, i8* %8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #12
  %33 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 5
  %34 = load i8, i8* %33, align 1, !range !7
  store i8 %34, i8* %9, align 1
  %35 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 6
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %10, align 4
  %38 = bitcast %"class.mojo::InlinedStructPtr"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #12
  %39 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 1
  %40 = load i32, i32* %39, align 8, !noalias !28
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #12, !alias.scope !28
  %43 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %43) #12
  %44 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 1
  store i32 0, i32* %44, align 8, !alias.scope !28
  br label %91

45:                                               ; preds = %24
  %46 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12, !noalias !35
  %47 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8, !noalias !35
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i33
  %59 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #12
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !6

64:                                               ; preds = %55
  call void @llvm.trap() #12
  unreachable

65:                                               ; preds = %55
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %67

67:                                               ; preds = %65, %50, %45
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %68, align 8, !noalias !35
  %69 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 0, i32 1
  %70 = load i32, i32* %69, align 4, !noalias !35
  %71 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 0, i32 2
  %72 = load i32, i32* %71, align 4, !noalias !35
  %73 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1ERKN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceE(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %73, %"class.WTF::String"* nonnull dereferenceable(8) %3, i32 %70, i32 %72) #12
  %74 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 1
  store i32 1, i32* %74, align 8, !alias.scope !38
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8, !noalias !35
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #12
  br label %90

90:                                               ; preds = %67, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12, !noalias !35
  br label %91

91:                                               ; preds = %42, %90
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #12
  %92 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 8
  %93 = load i8, i8* %92, align 1, !range !7
  store i8 %93, i8* %12, align 1
  %94 = bitcast %"class.WTF::Vector.104"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #12
  %95 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 9
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.104"* nonnull sret %13, %"class.WTF::Vector.104"* dereferenceable(16) %95) #12
  %96 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96) #12
  %97 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 10
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %14, align 4
  %99 = bitcast %"class.mojo::StructPtr.109"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #12
  %100 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %101 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %100, align 8, !noalias !41
  %102 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %91
  %104 = bitcast %"class.mojo::StructPtr.109"* %15 to i64*
  store i64 0, i64* %104, align 8, !alias.scope !41
  br label %106

105:                                              ; preds = %91
  call void @_ZNK7network5mojom5blink15CSPTrustedTypes5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.109"* nonnull sret %15, %"class.network::mojom::blink::CSPTrustedTypes"* nonnull %101) #12
  br label %106

106:                                              ; preds = %103, %105
  %107 = bitcast %"class.WTF::Vector.104"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #12
  %108 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 12
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.104"* nonnull sret %16, %"class.WTF::Vector.104"* dereferenceable(16) %108) #12
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EEbbbNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEEbNS9_6VectorISC_Lj0ESI_EENS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEEST_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.83"* %0, %"class.mojo::StructPtr.87"* nonnull dereferenceable(8) %4, %"class.WTF::HashMap.94"* nonnull dereferenceable(24) %5, %"class.WTF::HashMap.99"* nonnull dereferenceable(24) %6, i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(1) %8, i8* nonnull dereferenceable(1) %9, i32* nonnull dereferenceable(4) %10, %"class.mojo::InlinedStructPtr"* nonnull dereferenceable(24) %11, i8* nonnull dereferenceable(1) %12, %"class.WTF::Vector.104"* nonnull dereferenceable(16) %13, i32* nonnull dereferenceable(4) %14, %"class.mojo::StructPtr.109"* nonnull dereferenceable(8) %15, %"class.WTF::Vector.104"* nonnull dereferenceable(16) %16) #12
  %109 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %16, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::String"*, %"class.WTF::String"** %109, align 8
  %111 = icmp eq %"class.WTF::String"* %110, null
  br i1 %111, label %146, label %112, !prof !5

112:                                              ; preds = %106
  %113 = bitcast %"class.WTF::String"* %110 to i8*
  %114 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %16, i64 0, i32 0, i32 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %144, label %117, !prof !6

117:                                              ; preds = %112
  %118 = zext i32 %115 to i64
  %119 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 %118
  br label %120

120:                                              ; preds = %138, %117
  %121 = phi %"class.WTF::String"* [ %139, %138 ], [ %110, %117 ]
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %121, i64 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #12
  br label %138

138:                                              ; preds = %137, %134, %120
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %121, i64 1
  %140 = icmp eq %"class.WTF::String"* %139, %119
  br i1 %140, label %141, label %120

141:                                              ; preds = %138
  store i32 0, i32* %114, align 4
  %142 = bitcast %"class.WTF::Vector.104"* %16 to i8**
  %143 = load i8*, i8** %142, align 8
  br label %144

144:                                              ; preds = %141, %112
  %145 = phi i8* [ %143, %141 ], [ %113, %112 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %145) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %109, align 8
  br label %146

146:                                              ; preds = %106, %144
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #12
  %147 = getelementptr inbounds %"class.mojo::StructPtr.109", %"class.mojo::StructPtr.109"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %148 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %147, align 8
  store %"class.network::mojom::blink::CSPTrustedTypes"* null, %"class.network::mojom::blink::CSPTrustedTypes"** %147, align 8
  %149 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %146
  call void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %148) #12
  %151 = bitcast %"class.network::mojom::blink::CSPTrustedTypes"* %148 to i8*
  call void @_ZdlPv(i8* %151) #13
  br label %152

152:                                              ; preds = %146, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96) #12
  %153 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %13, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.WTF::String"*, %"class.WTF::String"** %153, align 8
  %155 = icmp eq %"class.WTF::String"* %154, null
  br i1 %155, label %190, label %156, !prof !5

156:                                              ; preds = %152
  %157 = bitcast %"class.WTF::String"* %154 to i8*
  %158 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %13, i64 0, i32 0, i32 0, i32 2
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %188, label %161, !prof !6

161:                                              ; preds = %156
  %162 = zext i32 %159 to i64
  %163 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %154, i64 %162
  br label %164

164:                                              ; preds = %182, %161
  %165 = phi %"class.WTF::String"* [ %183, %182 ], [ %154, %161 ]
  %166 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %165, i64 0, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #12
  br label %182

182:                                              ; preds = %181, %178, %164
  %183 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %165, i64 1
  %184 = icmp eq %"class.WTF::String"* %183, %163
  br i1 %184, label %185, label %164

185:                                              ; preds = %182
  store i32 0, i32* %158, align 4
  %186 = bitcast %"class.WTF::Vector.104"* %13 to i8**
  %187 = load i8*, i8** %186, align 8
  br label %188

188:                                              ; preds = %185, %156
  %189 = phi i8* [ %187, %185 ], [ %157, %156 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %189) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %153, align 8
  br label %190

190:                                              ; preds = %152, %188
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #12
  %191 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %191) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #12
  %192 = getelementptr inbounds %"class.WTF::HashMap.99", %"class.WTF::HashMap.99"* %6, i64 0, i32 0, i32 0
  %193 = load %"struct.WTF::KeyValuePair.103"*, %"struct.WTF::KeyValuePair.103"** %192, align 8
  %194 = icmp eq %"struct.WTF::KeyValuePair.103"* %193, null
  br i1 %194, label %217, label %195, !prof !5

195:                                              ; preds = %190
  %196 = getelementptr inbounds %"class.WTF::HashMap.99", %"class.WTF::HashMap.99"* %6, i64 0, i32 0, i32 1
  %197 = load i32, i32* %196, align 8
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %215, label %199

199:                                              ; preds = %195
  %200 = zext i32 %197 to i64
  br label %201

201:                                              ; preds = %212, %199
  %202 = phi i64 [ 0, %199 ], [ %213, %212 ]
  %203 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %193, i64 %202, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %204, -1000001
  br i1 %205, label %212, label %206

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %193, i64 %202, i32 1, i32 0, i32 0, i32 0, i32 0
  %208 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %207, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %207, align 8
  %209 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %208, null
  br i1 %209, label %212, label %210

210:                                              ; preds = %206
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %208) #12
  %211 = bitcast %"class.network::mojom::blink::CSPSourceList"* %208 to i8*
  call void @_ZdlPv(i8* %211) #13
  br label %212

212:                                              ; preds = %210, %206, %201
  %213 = add nuw nsw i64 %202, 1
  %214 = icmp eq i64 %213, %200
  br i1 %214, label %215, label %201

215:                                              ; preds = %212, %195
  %216 = bitcast %"struct.WTF::KeyValuePair.103"* %193 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %216) #12
  store %"struct.WTF::KeyValuePair.103"* null, %"struct.WTF::KeyValuePair.103"** %192, align 8
  br label %217

217:                                              ; preds = %190, %215
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #12
  %218 = getelementptr inbounds %"class.WTF::HashMap.94", %"class.WTF::HashMap.94"* %5, i64 0, i32 0, i32 0
  %219 = load %"struct.WTF::KeyValuePair.98"*, %"struct.WTF::KeyValuePair.98"** %218, align 8
  %220 = icmp eq %"struct.WTF::KeyValuePair.98"* %219, null
  br i1 %220, label %254, label %221, !prof !5

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.WTF::HashMap.94", %"class.WTF::HashMap.94"* %5, i64 0, i32 0, i32 1
  %223 = load i32, i32* %222, align 8
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %252, label %225

225:                                              ; preds = %221
  %226 = zext i32 %223 to i64
  br label %227

227:                                              ; preds = %249, %225
  %228 = phi i64 [ 0, %225 ], [ %250, %249 ]
  %229 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %219, i64 %228, i32 0
  %230 = load i32, i32* %229, align 4
  %231 = icmp eq i32 %230, -1000001
  br i1 %231, label %249, label %232

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %219, i64 %228, i32 1, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  br i1 %240, label %243, label %245

243:                                              ; preds = %236
  %244 = add i32 %242, -1
  store i32 %244, i32* %241, align 4
  br label %245

245:                                              ; preds = %243, %236
  %246 = phi i32 [ %244, %243 ], [ %242, %236 ]
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %234) #12
  br label %249

249:                                              ; preds = %248, %245, %232, %227
  %250 = add nuw nsw i64 %228, 1
  %251 = icmp eq i64 %250, %226
  br i1 %251, label %252, label %227

252:                                              ; preds = %249, %221
  %253 = bitcast %"struct.WTF::KeyValuePair.98"* %219 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %253) #12
  store %"struct.WTF::KeyValuePair.98"* null, %"struct.WTF::KeyValuePair.98"** %218, align 8
  br label %254

254:                                              ; preds = %217, %252
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  %255 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %256 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %255, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %255, align 8
  %257 = icmp eq %"class.network::mojom::blink::CSPSource"* %256, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %254
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %256) #12
  %259 = bitcast %"class.network::mojom::blink::CSPSource"* %256 to i8*
  call void @_ZdlPv(i8* %259) #13
  br label %260

260:                                              ; preds = %254, %258
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EEbbbNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEEbNS9_6VectorISC_Lj0ESI_EENS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEEST_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.83"*, %"class.mojo::StructPtr.87"* dereferenceable(8), %"class.WTF::HashMap.94"* dereferenceable(24), %"class.WTF::HashMap.99"* dereferenceable(24), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i32* dereferenceable(4), %"class.mojo::InlinedStructPtr"* dereferenceable(24), i8* dereferenceable(1), %"class.WTF::Vector.104"* dereferenceable(16), i32* dereferenceable(4), %"class.mojo::StructPtr.109"* dereferenceable(8), %"class.WTF::Vector.104"* dereferenceable(16)) unnamed_addr #1 comdat align 2 {
  %15 = alloca %"class.mojo::StructPtr.87", align 8
  %16 = alloca %"class.WTF::HashMap.99", align 8
  %17 = alloca %"class.mojo::InlinedStructPtr", align 8
  %18 = alloca %"class.WTF::Vector.104", align 8
  %19 = alloca %"class.mojo::StructPtr.109", align 8
  %20 = alloca %"class.WTF::Vector.104", align 8
  %21 = tail call i8* @_Znwm(i64 144) #13
  %22 = bitcast i8* %21 to %"class.network::mojom::blink::ContentSecurityPolicy"*
  %23 = bitcast %"class.mojo::StructPtr.87"* %15 to i64*
  %24 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.mojo::StructPtr.87"* %1 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %23, align 8
  store i64 0, i64* %25, align 8
  %27 = getelementptr inbounds %"class.WTF::HashMap.99", %"class.WTF::HashMap.99"* %16, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::HashMap.99", %"class.WTF::HashMap.99"* %16, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::HashMap.99", %"class.WTF::HashMap.99"* %16, i64 0, i32 0, i32 3
  %30 = bitcast %"class.WTF::HashMap.99"* %3 to i64*
  %31 = bitcast %"class.WTF::HashMap.99"* %16 to i64*
  store i64 0, i64* %31, align 8
  %32 = load i64, i64* %30, align 8
  %33 = bitcast %"class.WTF::HashMap.99"* %16 to i64*
  store atomic i64 0, i64* %30 monotonic, align 8
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = getelementptr inbounds %"class.WTF::HashMap.99", %"class.WTF::HashMap.99"* %3, i64 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %27, align 8
  store i32 0, i32* %34, align 4
  %36 = getelementptr inbounds %"class.WTF::HashMap.99", %"class.WTF::HashMap.99"* %3, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %28, align 4
  store i32 0, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::HashMap.99", %"class.WTF::HashMap.99"* %3, i64 0, i32 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 2147483647
  store i32 %40, i32* %29, align 8
  %41 = and i32 %39, -2147483648
  store i32 %41, i32* %38, align 8
  %42 = load i8, i8* %4, align 1, !range !7
  %43 = icmp ne i8 %42, 0
  %44 = load i8, i8* %5, align 1, !range !7
  %45 = icmp ne i8 %44, 0
  %46 = load i8, i8* %6, align 1, !range !7
  %47 = icmp ne i8 %46, 0
  %48 = load i32, i32* %7, align 4
  %49 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %17, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #12
  %50 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %17, i64 0, i32 1
  store i32 0, i32* %50, align 8
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #12
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #12
  %51 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 0
  call void @_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull dereferenceable(16) %49, %"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16) %51) #12
  %52 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 1
  %53 = load i32, i32* %50, align 8
  %54 = load i32, i32* %52, align 4
  store i32 %54, i32* %50, align 8
  store i32 %53, i32* %52, align 4
  %55 = load i8, i8* %9, align 1, !range !7
  %56 = icmp ne i8 %55, 0
  %57 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %18, i64 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %18, i64 0, i32 0, i32 0, i32 2
  %59 = bitcast %"class.WTF::Vector.104"* %10 to i64*
  %60 = bitcast %"class.WTF::Vector.104"* %18 to i64*
  store i64 0, i64* %60, align 8
  %61 = load i64, i64* %59, align 8
  %62 = bitcast %"class.WTF::Vector.104"* %18 to i64*
  store atomic i64 0, i64* %59 monotonic, align 8
  store atomic i64 %61, i64* %62 monotonic, align 8
  %63 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %10, i64 0, i32 0, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  store i32 %64, i32* %57, align 8
  store i32 0, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %10, i64 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %58, align 4
  store i32 0, i32* %65, align 4
  %67 = load i32, i32* %11, align 4
  %68 = bitcast %"class.mojo::StructPtr.109"* %19 to i64*
  %69 = getelementptr inbounds %"class.mojo::StructPtr.109", %"class.mojo::StructPtr.109"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.mojo::StructPtr.109"* %12 to i64*
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %68, align 8
  store i64 0, i64* %70, align 8
  %72 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %20, i64 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %20, i64 0, i32 0, i32 0, i32 2
  %74 = bitcast %"class.WTF::Vector.104"* %13 to i64*
  %75 = bitcast %"class.WTF::Vector.104"* %20 to i64*
  store i64 0, i64* %75, align 8
  %76 = load i64, i64* %74, align 8
  %77 = bitcast %"class.WTF::Vector.104"* %20 to i64*
  store atomic i64 0, i64* %74 monotonic, align 8
  store atomic i64 %76, i64* %77 monotonic, align 8
  %78 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %13, i64 0, i32 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %72, align 8
  store i32 0, i32* %78, align 4
  %80 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %13, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  store i32 %81, i32* %73, align 4
  store i32 0, i32* %80, align 4
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyC1EN4mojo9StructPtrINS1_9CSPSourceEEERKN3WTF7HashMapINS0_16CSPDirectiveNameENS7_6StringENS7_7IntHashIS9_EENS7_10HashTraitsIS9_EENSD_ISA_EENS7_18PartitionAllocatorEEENS8_IS9_NS4_INS1_13CSPSourceListEEESC_SE_NSD_ISL_EESG_EEbbbNS0_15WebSandboxFlagsENS3_16InlinedStructPtrINS1_27ContentSecurityPolicyHeaderEEEbNS7_6VectorISA_Lj0ESG_EENS0_25CSPRequireTrustedTypesForENS4_INS1_15CSPTrustedTypesEEEST_(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %22, %"class.mojo::StructPtr.87"* nonnull %15, %"class.WTF::HashMap.94"* dereferenceable(24) %2, %"class.WTF::HashMap.99"* nonnull %16, i1 zeroext %43, i1 zeroext %45, i1 zeroext %47, i32 %48, %"class.mojo::InlinedStructPtr"* nonnull %17, i1 zeroext %56, %"class.WTF::Vector.104"* nonnull %18, i32 %67, %"class.mojo::StructPtr.109"* nonnull %19, %"class.WTF::Vector.104"* nonnull %20) #12
  %82 = ptrtoint i8* %21 to i64
  %83 = bitcast %"class.mojo::StructPtr.83"* %0 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %20, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::String"*, %"class.WTF::String"** %84, align 8
  %86 = icmp eq %"class.WTF::String"* %85, null
  br i1 %86, label %120, label %87, !prof !5

87:                                               ; preds = %14
  %88 = bitcast %"class.WTF::String"* %85 to i8*
  %89 = load i32, i32* %73, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %118, label %91, !prof !6

91:                                               ; preds = %87
  %92 = zext i32 %89 to i64
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 %92
  br label %94

94:                                               ; preds = %112, %91
  %95 = phi %"class.WTF::String"* [ %113, %112 ], [ %85, %91 ]
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #12
  br label %112

112:                                              ; preds = %111, %108, %94
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 1
  %114 = icmp eq %"class.WTF::String"* %113, %93
  br i1 %114, label %115, label %94

115:                                              ; preds = %112
  store i32 0, i32* %73, align 4
  %116 = bitcast %"class.WTF::Vector.104"* %20 to i8**
  %117 = load i8*, i8** %116, align 8
  br label %118

118:                                              ; preds = %115, %87
  %119 = phi i8* [ %117, %115 ], [ %88, %87 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %119) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %84, align 8
  br label %120

120:                                              ; preds = %14, %118
  %121 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %69, align 8
  store %"class.network::mojom::blink::CSPTrustedTypes"* null, %"class.network::mojom::blink::CSPTrustedTypes"** %69, align 8
  %122 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %120
  call void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %121) #12
  %124 = bitcast %"class.network::mojom::blink::CSPTrustedTypes"* %121 to i8*
  call void @_ZdlPv(i8* %124) #13
  br label %125

125:                                              ; preds = %120, %123
  %126 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %18, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::String"*, %"class.WTF::String"** %126, align 8
  %128 = icmp eq %"class.WTF::String"* %127, null
  br i1 %128, label %162, label %129, !prof !5

129:                                              ; preds = %125
  %130 = bitcast %"class.WTF::String"* %127 to i8*
  %131 = load i32, i32* %58, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %160, label %133, !prof !6

133:                                              ; preds = %129
  %134 = zext i32 %131 to i64
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 %134
  br label %136

136:                                              ; preds = %154, %133
  %137 = phi %"class.WTF::String"* [ %155, %154 ], [ %127, %133 ]
  %138 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %137, i64 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #12
  br label %154

154:                                              ; preds = %153, %150, %136
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %137, i64 1
  %156 = icmp eq %"class.WTF::String"* %155, %135
  br i1 %156, label %157, label %136

157:                                              ; preds = %154
  store i32 0, i32* %58, align 4
  %158 = bitcast %"class.WTF::Vector.104"* %18 to i8**
  %159 = load i8*, i8** %158, align 8
  br label %160

160:                                              ; preds = %157, %129
  %161 = phi i8* [ %159, %157 ], [ %130, %129 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %161) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %126, align 8
  br label %162

162:                                              ; preds = %125, %160
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #12
  %163 = getelementptr inbounds %"class.WTF::HashMap.99", %"class.WTF::HashMap.99"* %16, i64 0, i32 0, i32 0
  %164 = load %"struct.WTF::KeyValuePair.103"*, %"struct.WTF::KeyValuePair.103"** %163, align 8
  %165 = icmp eq %"struct.WTF::KeyValuePair.103"* %164, null
  br i1 %165, label %187, label %166, !prof !5

166:                                              ; preds = %162
  %167 = load i32, i32* %27, align 8
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %185, label %169

169:                                              ; preds = %166
  %170 = zext i32 %167 to i64
  br label %171

171:                                              ; preds = %182, %169
  %172 = phi i64 [ 0, %169 ], [ %183, %182 ]
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %164, i64 %172, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, -1000001
  br i1 %175, label %182, label %176

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %164, i64 %172, i32 1, i32 0, i32 0, i32 0, i32 0
  %178 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %177, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %177, align 8
  %179 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %178, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %176
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %178) #12
  %181 = bitcast %"class.network::mojom::blink::CSPSourceList"* %178 to i8*
  call void @_ZdlPv(i8* %181) #13
  br label %182

182:                                              ; preds = %180, %176, %171
  %183 = add nuw nsw i64 %172, 1
  %184 = icmp eq i64 %183, %170
  br i1 %184, label %185, label %171

185:                                              ; preds = %182, %166
  %186 = bitcast %"struct.WTF::KeyValuePair.103"* %164 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %186) #12
  store %"struct.WTF::KeyValuePair.103"* null, %"struct.WTF::KeyValuePair.103"** %163, align 8
  br label %187

187:                                              ; preds = %162, %185
  %188 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %24, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %24, align 8
  %189 = icmp eq %"class.network::mojom::blink::CSPSource"* %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %187
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %188) #12
  %191 = bitcast %"class.network::mojom::blink::CSPSource"* %188 to i8*
  call void @_ZdlPv(i8* %191) #13
  br label %192

192:                                              ; preds = %187, %190
  ret void
}

declare void @_ZN7network5mojom5blink21ContentSecurityPolicyC1EN4mojo9StructPtrINS1_9CSPSourceEEERKN3WTF7HashMapINS0_16CSPDirectiveNameENS7_6StringENS7_7IntHashIS9_EENS7_10HashTraitsIS9_EENSD_ISA_EENS7_18PartitionAllocatorEEENS8_IS9_NS4_INS1_13CSPSourceListEEESC_SE_NSD_ISL_EESG_EEbbbNS0_15WebSandboxFlagsENS3_16InlinedStructPtrINS1_27ContentSecurityPolicyHeaderEEEbNS7_6VectorISA_Lj0ESG_EENS0_25CSPRequireTrustedTypesForENS4_INS1_15CSPTrustedTypesEEEST_(%"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.mojo::StructPtr.87"*, %"class.WTF::HashMap.94"* dereferenceable(24), %"class.WTF::HashMap.99"*, i1 zeroext, i1 zeroext, i1 zeroext, i32, %"class.mojo::InlinedStructPtr"*, i1 zeroext, %"class.WTF::Vector.104"*, i32, %"class.mojo::StructPtr.109"*, %"class.WTF::Vector.104"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"*) unnamed_addr #6

declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16), %"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %3 = alloca %"class.network::mojom::blink::ContentSecurityPolicyHeader", align 8
  %4 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 1
  %9 = bitcast i32* %8 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %5, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #12
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !6

26:                                               ; preds = %17
  tail call void @llvm.trap() #12
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %2, %12, %27
  %30 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0, i64 0, i32 1
  %31 = bitcast i32* %30 to i64*
  %32 = bitcast i32* %6 to i64*
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #12
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !6

51:                                               ; preds = %42
  tail call void @llvm.trap() #12
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %52, %37, %29
  %55 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %56 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0 to i64*
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %55, i64* %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #12
  br label %72

72:                                               ; preds = %54, %68, %71
  %73 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1, i64 0, i32 1
  %74 = bitcast i32* %73 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %31, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #12
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !6

92:                                               ; preds = %83
  tail call void @llvm.trap() #12
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %93, %78, %72
  %96 = ptrtoint %"class.WTF::StringImpl"* %76 to i64
  %97 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1 to i64*
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  store i64 %96, i64* %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #12
  br label %113

113:                                              ; preds = %95, %109, %112
  %114 = load i64, i64* %32, align 8
  store i64 %114, i64* %74, align 8
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.87"* noalias sret, %"class.network::mojom::blink::CSPSource"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #12
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !6

24:                                               ; preds = %15
  tail call void @llvm.trap() #12
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %2, %10, %25
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %28, align 8
  %29 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #12
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !6

47:                                               ; preds = %38
  tail call void @llvm.trap() #12
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %27, %33, %48
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %51, align 8
  %52 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #12
  %55 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 4, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %75, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i33
  %67 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #12
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !6

72:                                               ; preds = %63
  tail call void @llvm.trap() #12
  unreachable

73:                                               ; preds = %63
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %64, align 4
  br label %75

75:                                               ; preds = %50, %58, %73
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %76, align 8
  %77 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 5
  %78 = load i8, i8* %77, align 1, !range !7
  %79 = icmp ne i8 %78, 0
  %80 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 6
  %81 = load i8, i8* %80, align 1, !range !7
  %82 = icmp ne i8 %81, 0
  %83 = tail call i8* @_Znwm(i64 40) #13, !noalias !48
  %84 = bitcast i8* %83 to %"class.network::mojom::blink::CSPSource"*
  call void @_ZN7network5mojom5blink9CSPSourceC1ERKN3WTF6StringES6_iS6_bb(%"class.network::mojom::blink::CSPSource"* nonnull %84, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 %53, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext %79, i1 zeroext %82) #12, !noalias !48
  %85 = ptrtoint i8* %83 to i64
  %86 = bitcast %"class.mojo::StructPtr.87"* %0 to i64*
  store i64 %85, i64* %86, align 8, !alias.scope !48
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %75
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #12
  br label %102

102:                                              ; preds = %75, %98, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #12
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #12
  br label %118

118:                                              ; preds = %102, %114, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #12
  br label %134

134:                                              ; preds = %118, %130, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret void
}

declare void @_ZN7network5mojom5blink9CSPSourceC1ERKN3WTF6StringES6_iS6_bb(%"class.network::mojom::blink::CSPSource"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSD_(%"class.WTF::HashMap.94"* noalias sret, %"class.WTF::HashMap.94"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::HashMap.94"* %0 to i8*
  %6 = bitcast %"class.WTF::HashMap.94"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #12
  %7 = getelementptr inbounds %"class.WTF::HashMap.94", %"class.WTF::HashMap.94"* %1, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap.94", %"class.WTF::HashMap.94"* %1, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.98"*, %"struct.WTF::KeyValuePair.98"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashMap.94", %"class.WTF::HashMap.94"* %1, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %11, i64 %14
  br i1 %9, label %33, label %16

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair.98"* [ %23, %22 ], [ %11, %16 ]
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %25 [
    i32 -1000001, label %22
    i32 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.98"* %23, %15
  br i1 %24, label %33, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair.98"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.98"* %26, %15
  br i1 %27, label %33, label %28

28:                                               ; preds = %25
  %29 = bitcast i32* %3 to i8*
  %30 = bitcast %"class.WTF::String"* %4 to i8*
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::HashMap.94", %"class.WTF::HashMap.94"* %0, i64 0, i32 0
  br label %34

33:                                               ; preds = %22, %75, %85, %82, %2, %25
  ret void

34:                                               ; preds = %28, %85
  %35 = phi %"struct.WTF::KeyValuePair.98"* [ %26, %28 ], [ %79, %85 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #12
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %35, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #12
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !6

55:                                               ; preds = %46
  call void @llvm.trap() #12
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %34, %41, %56
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %31, align 8
  %59 = call { %"struct.WTF::KeyValuePair.98"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES3_S5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.95"* %32, i32* nonnull dereferenceable(4) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #12
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %75

75:                                               ; preds = %58, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #12
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %35, i64 1
  %77 = icmp eq %"struct.WTF::KeyValuePair.98"* %76, %15
  br i1 %77, label %33, label %78

78:                                               ; preds = %75, %82
  %79 = phi %"struct.WTF::KeyValuePair.98"* [ %83, %82 ], [ %76, %75 ]
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %79, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  switch i32 %81, label %85 [
    i32 -1000001, label %82
    i32 0, label %82
  ]

82:                                               ; preds = %78, %78
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %79, i64 1
  %84 = icmp eq %"struct.WTF::KeyValuePair.98"* %83, %15
  br i1 %84, label %33, label %78

85:                                               ; preds = %78
  %86 = icmp eq %"struct.WTF::KeyValuePair.98"* %79, %15
  br i1 %86, label %33, label %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.98"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES3_S5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.95"*, i32* dereferenceable(4), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.95", %"class.WTF::HashTable.95"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.98"*, %"struct.WTF::KeyValuePair.98"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.98"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.98"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.95"* %0, %"struct.WTF::KeyValuePair.98"* null)
  %9 = load %"struct.WTF::KeyValuePair.98"*, %"struct.WTF::KeyValuePair.98"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.98"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.95", %"class.WTF::HashTable.95"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %81, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.98"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.98"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %118, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1000001
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.98"* %52, %"struct.WTF::KeyValuePair.98"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.98"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %59, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %59, i64 0, i32 1
  %73 = bitcast %"class.WTF::String"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable.95", %"class.WTF::HashTable.95"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = load i32, i32* %1, align 4
  br label %81

81:                                               ; preds = %10, %68, %70
  %82 = phi i32 [ %80, %70 ], [ %16, %68 ], [ %16, %10 ]
  %83 = phi %"struct.WTF::KeyValuePair.98"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %83, i64 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %87 = bitcast %"class.WTF::String"* %2 to i64*
  %88 = load i64, i64* %87, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %86, align 8
  %89 = bitcast %"class.WTF::String"* %85 to i64*
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  store i64 %88, i64* %89, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %81
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #12
  br label %106

106:                                              ; preds = %81, %102, %105
  %107 = getelementptr inbounds %"class.WTF::HashTable.95", %"class.WTF::HashTable.95"* %0, i64 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %107, align 4
  %110 = getelementptr inbounds %"class.WTF::HashTable.95", %"class.WTF::HashTable.95"* %0, i64 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, %109
  %113 = shl i32 %112, 1
  %114 = load i32, i32* %12, align 8
  %115 = icmp ult i32 %113, %114
  br i1 %115, label %118, label %116

116:                                              ; preds = %106
  %117 = tail call %"struct.WTF::KeyValuePair.98"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.95"* %0, %"struct.WTF::KeyValuePair.98"* %83)
  br label %118

118:                                              ; preds = %50, %106, %116
  %119 = phi i8 [ 1, %106 ], [ 1, %116 ], [ 0, %50 ]
  %120 = phi %"struct.WTF::KeyValuePair.98"* [ %83, %106 ], [ %117, %116 ], [ %52, %50 ]
  %121 = insertvalue { %"struct.WTF::KeyValuePair.98"*, i8 } undef, %"struct.WTF::KeyValuePair.98"* %120, 0
  %122 = insertvalue { %"struct.WTF::KeyValuePair.98"*, i8 } %121, i8 %119, 1
  ret { %"struct.WTF::KeyValuePair.98"*, i8 } %122
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.98"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.95"*, %"struct.WTF::KeyValuePair.98"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.95", %"class.WTF::HashTable.95"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.95", %"class.WTF::HashTable.95"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameENS_6StringEEEEEPKcv, i64 0, i64 0)) #12
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.98"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %36, i64 %45, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %36, i64 %45, i32 1
  %49 = bitcast %"class.WTF::String"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %36, i64 %50, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %36, i64 %50, i32 1
  %53 = bitcast %"class.WTF::String"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %36, i64 %54, i32 0
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %36, i64 %54, i32 1
  %57 = bitcast %"class.WTF::String"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %36, i64 %58, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %36, i64 %58, i32 1
  %61 = bitcast %"class.WTF::String"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %36, i64 %69, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %36, i64 %69, i32 1
  %73 = bitcast %"class.WTF::String"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !51

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair.98"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.95"* %0, %"struct.WTF::KeyValuePair.98"* %36, i32 %32, %"struct.WTF::KeyValuePair.98"* %1) #12
  ret %"struct.WTF::KeyValuePair.98"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.98"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.95"*, %"struct.WTF::KeyValuePair.98"*, i32, %"struct.WTF::KeyValuePair.98"*) local_unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.98"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.95", %"class.WTF::HashTable.95"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.95", %"class.WTF::HashTable.95"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.95"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.98"*, %"struct.WTF::KeyValuePair.98"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.98"* %16 to i64
  br label %62

18:                                               ; preds = %168
  %19 = bitcast %"class.WTF::HashTable.95"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %169, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.98"* [ null, %10 ], [ %172, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %170, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.98"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %58, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %53, %29
  %32 = phi i64 [ 0, %29 ], [ %54, %53 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1000001
  br i1 %35, label %53, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %25, i64 %32, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #12
  br label %53

53:                                               ; preds = %52, %49, %36, %31
  %54 = add nuw nsw i64 %32, 1
  %55 = icmp eq i64 %54, %30
  br i1 %55, label %56, label %31

56:                                               ; preds = %53, %27
  %57 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #12
  br label %58

58:                                               ; preds = %20, %56
  %59 = getelementptr inbounds %"class.WTF::HashTable.95", %"class.WTF::HashTable.95"* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, -2147483648
  store i32 %61, i32* %59, align 8
  ret %"struct.WTF::KeyValuePair.98"* %23

62:                                               ; preds = %13, %168
  %63 = phi i64 [ %17, %13 ], [ %169, %168 ]
  %64 = phi i32 [ %7, %13 ], [ %170, %168 ]
  %65 = phi %"struct.WTF::KeyValuePair.98"* [ %16, %13 ], [ %171, %168 ]
  %66 = phi %"struct.WTF::KeyValuePair.98"* [ null, %13 ], [ %172, %168 ]
  %67 = phi i32 [ 0, %13 ], [ %173, %168 ]
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %65, i64 %68, i32 0
  %70 = load i32, i32* %69, align 4
  switch i32 %70, label %71 [
    i32 -1000001, label %168
    i32 0, label %168
  ]

71:                                               ; preds = %62
  %72 = shl i32 %70, 15
  %73 = xor i32 %72, -1
  %74 = add i32 %70, %73
  %75 = lshr i32 %74, 10
  %76 = xor i32 %75, %74
  %77 = mul i32 %76, 9
  %78 = lshr i32 %77, 6
  %79 = xor i32 %78, %77
  %80 = shl i32 %79, 11
  %81 = xor i32 %80, -1
  %82 = add i32 %79, %81
  %83 = lshr i32 %82, 16
  %84 = xor i32 %83, %82
  %85 = and i32 %84, %14
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %1, i64 %86
  %88 = ptrtoint %"struct.WTF::KeyValuePair.98"* %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %87, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %109, label %92

92:                                               ; preds = %71
  %93 = xor i32 %84, -1
  %94 = lshr i32 %82, 23
  %95 = add i32 %94, %93
  %96 = shl i32 %95, 12
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 7
  %99 = xor i32 %98, %97
  %100 = shl i32 %99, 2
  %101 = xor i32 %100, %99
  %102 = lshr i32 %101, 20
  %103 = xor i32 %102, %101
  %104 = or i32 %103, 1
  %105 = zext i32 %104 to i64
  br label %115

106:                                              ; preds = %122
  %107 = ptrtoint %"struct.WTF::KeyValuePair.98"* %129 to i64
  %108 = inttoptr i64 %124 to %"struct.WTF::KeyValuePair.98"*
  br label %109

109:                                              ; preds = %106, %71
  %110 = phi i64 [ %107, %106 ], [ %88, %71 ]
  %111 = phi %"struct.WTF::KeyValuePair.98"* [ %108, %106 ], [ null, %71 ]
  %112 = icmp eq %"struct.WTF::KeyValuePair.98"* %111, null
  %113 = ptrtoint %"struct.WTF::KeyValuePair.98"* %111 to i64
  %114 = select i1 %112, i64 %110, i64 %113
  br label %134

115:                                              ; preds = %122, %92
  %116 = phi i64 [ 0, %92 ], [ %124, %122 ]
  %117 = phi i32 [ %90, %92 ], [ %132, %122 ]
  %118 = phi i64 [ %88, %92 ], [ %130, %122 ]
  %119 = phi i64 [ %86, %92 ], [ %128, %122 ]
  %120 = phi i64 [ 0, %92 ], [ %126, %122 ]
  %121 = icmp eq i32 %117, %70
  br i1 %121, label %134, label %122

122:                                              ; preds = %115
  %123 = icmp eq i32 %117, -1000001
  %124 = select i1 %123, i64 %118, i64 %116
  %125 = icmp eq i64 %120, 0
  %126 = select i1 %125, i64 %105, i64 %120
  %127 = add i64 %126, %119
  %128 = and i64 %127, %15
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %1, i64 %128
  %130 = ptrtoint %"struct.WTF::KeyValuePair.98"* %129 to i64
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %129, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %106, label %115

134:                                              ; preds = %115, %109
  %135 = phi i64 [ %114, %109 ], [ %118, %115 ]
  %136 = inttoptr i64 %135 to %"struct.WTF::KeyValuePair.98"*
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %136, i64 0, i32 1, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #12
  br label %153

153:                                              ; preds = %134, %149, %152
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %136, i64 0, i32 0
  %155 = load i32, i32* %69, align 8
  store i32 %155, i32* %154, align 8
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %136, i64 0, i32 1
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %65, i64 %68, i32 1
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %157, i64 0, i32 0, i32 0
  %159 = bitcast %"class.WTF::String"* %157 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.WTF::String"* %156 to i64*
  store i64 %160, i64* %161, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %158, align 8
  %162 = load %"struct.WTF::KeyValuePair.98"*, %"struct.WTF::KeyValuePair.98"** %9, align 8
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.98", %"struct.WTF::KeyValuePair.98"* %162, i64 %68
  %164 = icmp eq %"struct.WTF::KeyValuePair.98"* %163, %3
  %165 = select i1 %164, %"struct.WTF::KeyValuePair.98"* %136, %"struct.WTF::KeyValuePair.98"* %66
  %166 = load i32, i32* %6, align 8
  %167 = ptrtoint %"struct.WTF::KeyValuePair.98"* %162 to i64
  br label %168

168:                                              ; preds = %62, %62, %153
  %169 = phi i64 [ %63, %62 ], [ %167, %153 ], [ %63, %62 ]
  %170 = phi i32 [ %64, %62 ], [ %166, %153 ], [ %64, %62 ]
  %171 = phi %"struct.WTF::KeyValuePair.98"* [ %65, %62 ], [ %162, %153 ], [ %65, %62 ]
  %172 = phi %"struct.WTF::KeyValuePair.98"* [ %66, %62 ], [ %165, %153 ], [ %66, %62 ]
  %173 = add i32 %67, 1
  %174 = icmp eq i32 %173, %170
  br i1 %174, label %18, label %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS_9StructPtrINS4_5blink13CSPSourceListEEENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENSC_IS9_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSG_(%"class.WTF::HashMap.99"* noalias sret, %"class.WTF::HashMap.99"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.mojo::StructPtr.2382", align 8
  %5 = bitcast %"class.WTF::HashMap.99"* %0 to i8*
  %6 = bitcast %"class.WTF::HashMap.99"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #12
  %7 = getelementptr inbounds %"class.WTF::HashMap.99", %"class.WTF::HashMap.99"* %1, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap.99", %"class.WTF::HashMap.99"* %1, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.103"*, %"struct.WTF::KeyValuePair.103"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashMap.99", %"class.WTF::HashMap.99"* %1, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %11, i64 %14
  br i1 %9, label %34, label %16

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair.103"* [ %23, %22 ], [ %11, %16 ]
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %25 [
    i32 -1000001, label %22
    i32 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.103"* %23, %15
  br i1 %24, label %34, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair.103"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.103"* %26, %15
  br i1 %27, label %34, label %28

28:                                               ; preds = %25
  %29 = bitcast i32* %3 to i8*
  %30 = bitcast %"class.mojo::StructPtr.2382"* %4 to i8*
  %31 = bitcast %"class.mojo::StructPtr.2382"* %4 to i64*
  %32 = getelementptr inbounds %"class.WTF::HashMap.99", %"class.WTF::HashMap.99"* %0, i64 0, i32 0
  %33 = getelementptr inbounds %"class.mojo::StructPtr.2382", %"class.mojo::StructPtr.2382"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %35

34:                                               ; preds = %22, %50, %60, %57, %2, %25
  ret void

35:                                               ; preds = %28, %60
  %36 = phi %"struct.WTF::KeyValuePair.103"* [ %26, %28 ], [ %54, %60 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #12
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %36, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %39, align 8, !noalias !52
  %41 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %40, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %35
  store i64 0, i64* %31, align 8, !alias.scope !52
  br label %44

43:                                               ; preds = %35
  call void @_ZNK7network5mojom5blink13CSPSourceList5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.2382"* nonnull sret %4, %"class.network::mojom::blink::CSPSourceList"* nonnull %40) #12
  br label %44

44:                                               ; preds = %42, %43
  %45 = call { %"struct.WTF::KeyValuePair.103"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.100"* %32, i32* nonnull dereferenceable(4) %3, %"class.mojo::StructPtr.2382"* nonnull dereferenceable(8) %4) #12
  %46 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %33, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %33, align 8
  %47 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %46) #12
  %49 = bitcast %"class.network::mojom::blink::CSPSourceList"* %46 to i8*
  call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %44, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #12
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %36, i64 1
  %52 = icmp eq %"struct.WTF::KeyValuePair.103"* %51, %15
  br i1 %52, label %34, label %53

53:                                               ; preds = %50, %57
  %54 = phi %"struct.WTF::KeyValuePair.103"* [ %58, %57 ], [ %51, %50 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  switch i32 %56, label %60 [
    i32 -1000001, label %57
    i32 0, label %57
  ]

57:                                               ; preds = %53, %53
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %54, i64 1
  %59 = icmp eq %"struct.WTF::KeyValuePair.103"* %58, %15
  br i1 %59, label %34, label %53

60:                                               ; preds = %53
  %61 = icmp eq %"struct.WTF::KeyValuePair.103"* %54, %15
  br i1 %61, label %34, label %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.103"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.100"*, i32* dereferenceable(4), %"class.mojo::StructPtr.2382"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.100", %"class.WTF::HashTable.100"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.103"*, %"struct.WTF::KeyValuePair.103"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.103"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.103"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.100"* %0, %"struct.WTF::KeyValuePair.103"* null)
  %9 = load %"struct.WTF::KeyValuePair.103"*, %"struct.WTF::KeyValuePair.103"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.103"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.100", %"class.WTF::HashTable.100"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %81, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.103"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.103"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %111, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1000001
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.103"* %52, %"struct.WTF::KeyValuePair.103"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.103"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %59, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %59, i64 0, i32 1
  %73 = bitcast %"class.mojo::StructPtr.2382"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable.100", %"class.WTF::HashTable.100"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = load i32, i32* %1, align 4
  br label %81

81:                                               ; preds = %10, %68, %70
  %82 = phi i32 [ %80, %70 ], [ %16, %68 ], [ %16, %10 ]
  %83 = phi %"struct.WTF::KeyValuePair.103"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %83, i64 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.mojo::StructPtr.2382", %"class.mojo::StructPtr.2382"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %86, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %86, align 8
  %88 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %87, null
  br i1 %88, label %89, label %91

89:                                               ; preds = %81
  %90 = bitcast %"class.mojo::StructPtr.2382"* %85 to i64*
  br label %95

91:                                               ; preds = %81
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %87) #12
  %92 = bitcast %"class.network::mojom::blink::CSPSourceList"* %87 to i8*
  tail call void @_ZdlPv(i8* %92) #13
  %93 = bitcast %"class.mojo::StructPtr.2382"* %85 to i64*
  %94 = load i64, i64* %93, align 8
  br label %95

95:                                               ; preds = %89, %91
  %96 = phi i64* [ %90, %89 ], [ %93, %91 ]
  %97 = phi i64 [ 0, %89 ], [ %94, %91 ]
  %98 = bitcast %"class.mojo::StructPtr.2382"* %2 to i64*
  %99 = load i64, i64* %98, align 8
  store i64 %99, i64* %96, align 8
  store i64 %97, i64* %98, align 8
  %100 = getelementptr inbounds %"class.WTF::HashTable.100", %"class.WTF::HashTable.100"* %0, i64 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = add i32 %101, 1
  store i32 %102, i32* %100, align 4
  %103 = getelementptr inbounds %"class.WTF::HashTable.100", %"class.WTF::HashTable.100"* %0, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, %102
  %106 = shl i32 %105, 1
  %107 = load i32, i32* %12, align 8
  %108 = icmp ult i32 %106, %107
  br i1 %108, label %111, label %109

109:                                              ; preds = %95
  %110 = tail call %"struct.WTF::KeyValuePair.103"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.100"* %0, %"struct.WTF::KeyValuePair.103"* %83)
  br label %111

111:                                              ; preds = %50, %95, %109
  %112 = phi i8 [ 1, %95 ], [ 1, %109 ], [ 0, %50 ]
  %113 = phi %"struct.WTF::KeyValuePair.103"* [ %83, %95 ], [ %110, %109 ], [ %52, %50 ]
  %114 = insertvalue { %"struct.WTF::KeyValuePair.103"*, i8 } undef, %"struct.WTF::KeyValuePair.103"* %113, 0
  %115 = insertvalue { %"struct.WTF::KeyValuePair.103"*, i8 } %114, i8 %112, 1
  ret { %"struct.WTF::KeyValuePair.103"*, i8 } %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.103"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.100"*, %"struct.WTF::KeyValuePair.103"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.100", %"class.WTF::HashTable.100"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.100", %"class.WTF::HashTable.100"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameEN4mojo9StructPtrINS3_5blink13CSPSourceListEEEEEEEPKcv, i64 0, i64 0)) #12
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.103"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %36, i64 %45, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %36, i64 %45, i32 1
  %49 = bitcast %"class.mojo::StructPtr.2382"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %36, i64 %50, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %36, i64 %50, i32 1
  %53 = bitcast %"class.mojo::StructPtr.2382"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %36, i64 %54, i32 0
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %36, i64 %54, i32 1
  %57 = bitcast %"class.mojo::StructPtr.2382"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %36, i64 %58, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %36, i64 %58, i32 1
  %61 = bitcast %"class.mojo::StructPtr.2382"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %36, i64 %69, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %36, i64 %69, i32 1
  %73 = bitcast %"class.mojo::StructPtr.2382"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !59

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair.103"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.100"* %0, %"struct.WTF::KeyValuePair.103"* %36, i32 %32, %"struct.WTF::KeyValuePair.103"* %1) #12
  ret %"struct.WTF::KeyValuePair.103"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.103"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.100"*, %"struct.WTF::KeyValuePair.103"*, i32, %"struct.WTF::KeyValuePair.103"*) local_unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.103"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.100", %"class.WTF::HashTable.100"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.100", %"class.WTF::HashTable.100"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.100"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.103"*, %"struct.WTF::KeyValuePair.103"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.103"* %16 to i64
  br label %51

18:                                               ; preds = %146
  %19 = bitcast %"class.WTF::HashTable.100"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %147, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.103"* [ null, %10 ], [ %150, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %148, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.103"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %42, %29
  %32 = phi i64 [ 0, %29 ], [ %43, %42 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1000001
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %25, i64 %32, i32 1, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %37, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %37, align 8
  %39 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %38) #12
  %41 = bitcast %"class.network::mojom::blink::CSPSourceList"* %38 to i8*
  tail call void @_ZdlPv(i8* %41) #13
  br label %42

42:                                               ; preds = %40, %36, %31
  %43 = add nuw nsw i64 %32, 1
  %44 = icmp eq i64 %43, %30
  br i1 %44, label %45, label %31

45:                                               ; preds = %42, %27
  %46 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %46) #12
  br label %47

47:                                               ; preds = %20, %45
  %48 = getelementptr inbounds %"class.WTF::HashTable.100", %"class.WTF::HashTable.100"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, -2147483648
  store i32 %50, i32* %48, align 8
  ret %"struct.WTF::KeyValuePair.103"* %23

51:                                               ; preds = %13, %146
  %52 = phi i64 [ %17, %13 ], [ %147, %146 ]
  %53 = phi i32 [ %7, %13 ], [ %148, %146 ]
  %54 = phi %"struct.WTF::KeyValuePair.103"* [ %16, %13 ], [ %149, %146 ]
  %55 = phi %"struct.WTF::KeyValuePair.103"* [ null, %13 ], [ %150, %146 ]
  %56 = phi i32 [ 0, %13 ], [ %151, %146 ]
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %54, i64 %57, i32 0
  %59 = load i32, i32* %58, align 4
  switch i32 %59, label %60 [
    i32 -1000001, label %146
    i32 0, label %146
  ]

60:                                               ; preds = %51
  %61 = shl i32 %59, 15
  %62 = xor i32 %61, -1
  %63 = add i32 %59, %62
  %64 = lshr i32 %63, 10
  %65 = xor i32 %64, %63
  %66 = mul i32 %65, 9
  %67 = lshr i32 %66, 6
  %68 = xor i32 %67, %66
  %69 = shl i32 %68, 11
  %70 = xor i32 %69, -1
  %71 = add i32 %68, %70
  %72 = lshr i32 %71, 16
  %73 = xor i32 %72, %71
  %74 = and i32 %73, %14
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %1, i64 %75
  %77 = ptrtoint %"struct.WTF::KeyValuePair.103"* %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %76, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %98, label %81

81:                                               ; preds = %60
  %82 = xor i32 %73, -1
  %83 = lshr i32 %71, 23
  %84 = add i32 %83, %82
  %85 = shl i32 %84, 12
  %86 = xor i32 %85, %84
  %87 = lshr i32 %86, 7
  %88 = xor i32 %87, %86
  %89 = shl i32 %88, 2
  %90 = xor i32 %89, %88
  %91 = lshr i32 %90, 20
  %92 = xor i32 %91, %90
  %93 = or i32 %92, 1
  %94 = zext i32 %93 to i64
  br label %104

95:                                               ; preds = %111
  %96 = ptrtoint %"struct.WTF::KeyValuePair.103"* %118 to i64
  %97 = inttoptr i64 %113 to %"struct.WTF::KeyValuePair.103"*
  br label %98

98:                                               ; preds = %95, %60
  %99 = phi i64 [ %96, %95 ], [ %77, %60 ]
  %100 = phi %"struct.WTF::KeyValuePair.103"* [ %97, %95 ], [ null, %60 ]
  %101 = icmp eq %"struct.WTF::KeyValuePair.103"* %100, null
  %102 = ptrtoint %"struct.WTF::KeyValuePair.103"* %100 to i64
  %103 = select i1 %101, i64 %99, i64 %102
  br label %123

104:                                              ; preds = %111, %81
  %105 = phi i64 [ 0, %81 ], [ %113, %111 ]
  %106 = phi i32 [ %79, %81 ], [ %121, %111 ]
  %107 = phi i64 [ %77, %81 ], [ %119, %111 ]
  %108 = phi i64 [ %75, %81 ], [ %117, %111 ]
  %109 = phi i64 [ 0, %81 ], [ %115, %111 ]
  %110 = icmp eq i32 %106, %59
  br i1 %110, label %123, label %111

111:                                              ; preds = %104
  %112 = icmp eq i32 %106, -1000001
  %113 = select i1 %112, i64 %107, i64 %105
  %114 = icmp eq i64 %109, 0
  %115 = select i1 %114, i64 %94, i64 %109
  %116 = add i64 %115, %108
  %117 = and i64 %116, %15
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %1, i64 %117
  %119 = ptrtoint %"struct.WTF::KeyValuePair.103"* %118 to i64
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %118, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %95, label %104

123:                                              ; preds = %104, %98
  %124 = phi i64 [ %103, %98 ], [ %107, %104 ]
  %125 = inttoptr i64 %124 to %"struct.WTF::KeyValuePair.103"*
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %125, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %127 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %126, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %126, align 8
  %128 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %123
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %127) #12
  %130 = bitcast %"class.network::mojom::blink::CSPSourceList"* %127 to i8*
  tail call void @_ZdlPv(i8* %130) #13
  br label %131

131:                                              ; preds = %123, %129
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %125, i64 0, i32 0
  %133 = load i32, i32* %58, align 8
  store i32 %133, i32* %132, align 8
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %125, i64 0, i32 1
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %54, i64 %57, i32 1
  %136 = bitcast %"class.mojo::StructPtr.2382"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.2382", %"class.mojo::StructPtr.2382"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.2382"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  store i64 0, i64* %138, align 8
  %140 = load %"struct.WTF::KeyValuePair.103"*, %"struct.WTF::KeyValuePair.103"** %9, align 8
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair.103", %"struct.WTF::KeyValuePair.103"* %140, i64 %57
  %142 = icmp eq %"struct.WTF::KeyValuePair.103"* %141, %3
  %143 = select i1 %142, %"struct.WTF::KeyValuePair.103"* %125, %"struct.WTF::KeyValuePair.103"* %55
  %144 = load i32, i32* %6, align 8
  %145 = ptrtoint %"struct.WTF::KeyValuePair.103"* %140 to i64
  br label %146

146:                                              ; preds = %51, %51, %131
  %147 = phi i64 [ %52, %51 ], [ %145, %131 ], [ %52, %51 ]
  %148 = phi i32 [ %53, %51 ], [ %144, %131 ], [ %53, %51 ]
  %149 = phi %"struct.WTF::KeyValuePair.103"* [ %54, %51 ], [ %140, %131 ], [ %54, %51 ]
  %150 = phi %"struct.WTF::KeyValuePair.103"* [ %55, %51 ], [ %143, %131 ], [ %55, %51 ]
  %151 = add i32 %56, 1
  %152 = icmp eq i32 %151, %148
  br i1 %152, label %18, label %51
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink13CSPSourceList5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.2382"* noalias sret, %"class.network::mojom::blink::CSPSourceList"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.2386", align 8
  %4 = alloca %"class.WTF::Vector.104", align 8
  %5 = alloca %"class.WTF::Vector.2391", align 8
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = bitcast %"class.WTF::Vector.2386"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 0
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.2386"* nonnull sret %3, %"class.WTF::Vector.2386"* dereferenceable(16) %16) #12
  %17 = bitcast %"class.WTF::Vector.104"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 1
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.104"* nonnull sret %4, %"class.WTF::Vector.104"* dereferenceable(16) %18) #12
  %19 = bitcast %"class.WTF::Vector.2391"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 2
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.2391"* nonnull sret %5, %"class.WTF::Vector.2391"* dereferenceable(16) %20) #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #12
  %21 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 3
  %22 = load i8, i8* %21, align 1, !range !7
  store i8 %22, i8* %6, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #12
  %23 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 4
  %24 = load i8, i8* %23, align 1, !range !7
  store i8 %24, i8* %7, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #12
  %25 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 5
  %26 = load i8, i8* %25, align 1, !range !7
  store i8 %26, i8* %8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #12
  %27 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 6
  %28 = load i8, i8* %27, align 1, !range !7
  store i8 %28, i8* %9, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #12
  %29 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 7
  %30 = load i8, i8* %29, align 1, !range !7
  store i8 %30, i8* %10, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #12
  %31 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 8
  %32 = load i8, i8* %31, align 1, !range !7
  store i8 %32, i8* %11, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #12
  %33 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 9
  %34 = load i8, i8* %33, align 1, !range !7
  store i8 %34, i8* %12, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #12
  %35 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 10
  %36 = load i8, i8* %35, align 1, !range !7
  store i8 %36, i8* %13, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #12
  %37 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 11
  %38 = load i8, i8* %37, align 1, !range !7
  store i8 %38, i8* %14, align 1
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EEbbbbbbbbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.2382"* %0, %"class.WTF::Vector.2386"* nonnull dereferenceable(16) %3, %"class.WTF::Vector.104"* nonnull dereferenceable(16) %4, %"class.WTF::Vector.2391"* nonnull dereferenceable(16) %5, i8* nonnull dereferenceable(1) %6, i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(1) %8, i8* nonnull dereferenceable(1) %9, i8* nonnull dereferenceable(1) %10, i8* nonnull dereferenceable(1) %11, i8* nonnull dereferenceable(1) %12, i8* nonnull dereferenceable(1) %13, i8* nonnull dereferenceable(1) %14) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #12
  %39 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %5, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.mojo::StructPtr.2394"*, %"class.mojo::StructPtr.2394"** %39, align 8
  %41 = icmp eq %"class.mojo::StructPtr.2394"* %40, null
  br i1 %41, label %65, label %42, !prof !5

42:                                               ; preds = %2
  %43 = bitcast %"class.mojo::StructPtr.2394"* %40 to i8*
  %44 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %5, i64 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %63, label %47, !prof !6

47:                                               ; preds = %42
  %48 = zext i32 %45 to i64
  %49 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %40, i64 %48
  br label %50

50:                                               ; preds = %57, %47
  %51 = phi %"class.mojo::StructPtr.2394"* [ %58, %57 ], [ %40, %47 ]
  %52 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %52, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %52, align 8
  %54 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %50
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %53) #12
  %56 = bitcast %"class.network::mojom::blink::CSPHashSource"* %53 to i8*
  call void @_ZdlPv(i8* %56) #13
  br label %57

57:                                               ; preds = %55, %50
  %58 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %51, i64 1
  %59 = icmp eq %"class.mojo::StructPtr.2394"* %58, %49
  br i1 %59, label %60, label %50

60:                                               ; preds = %57
  store i32 0, i32* %44, align 4
  %61 = bitcast %"class.WTF::Vector.2391"* %5 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %42
  %64 = phi i8* [ %62, %60 ], [ %43, %42 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #12
  store %"class.mojo::StructPtr.2394"* null, %"class.mojo::StructPtr.2394"** %39, align 8
  br label %65

65:                                               ; preds = %2, %63
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  %66 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %4, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::String"*, %"class.WTF::String"** %66, align 8
  %68 = icmp eq %"class.WTF::String"* %67, null
  br i1 %68, label %103, label %69, !prof !5

69:                                               ; preds = %65
  %70 = bitcast %"class.WTF::String"* %67 to i8*
  %71 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %4, i64 0, i32 0, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %101, label %74, !prof !6

74:                                               ; preds = %69
  %75 = zext i32 %72 to i64
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 %75
  br label %77

77:                                               ; preds = %95, %74
  %78 = phi %"class.WTF::String"* [ %96, %95 ], [ %67, %74 ]
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #12
  br label %95

95:                                               ; preds = %94, %91, %77
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 1
  %97 = icmp eq %"class.WTF::String"* %96, %76
  br i1 %97, label %98, label %77

98:                                               ; preds = %95
  store i32 0, i32* %71, align 4
  %99 = bitcast %"class.WTF::Vector.104"* %4 to i8**
  %100 = load i8*, i8** %99, align 8
  br label %101

101:                                              ; preds = %98, %69
  %102 = phi i8* [ %100, %98 ], [ %70, %69 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %102) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %66, align 8
  br label %103

103:                                              ; preds = %65, %101
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #12
  %104 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %3, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.mojo::StructPtr.87"*, %"class.mojo::StructPtr.87"** %104, align 8
  %106 = icmp eq %"class.mojo::StructPtr.87"* %105, null
  br i1 %106, label %130, label %107, !prof !5

107:                                              ; preds = %103
  %108 = bitcast %"class.mojo::StructPtr.87"* %105 to i8*
  %109 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %3, i64 0, i32 0, i32 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %128, label %112, !prof !6

112:                                              ; preds = %107
  %113 = zext i32 %110 to i64
  %114 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %105, i64 %113
  br label %115

115:                                              ; preds = %122, %112
  %116 = phi %"class.mojo::StructPtr.87"* [ %123, %122 ], [ %105, %112 ]
  %117 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %116, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %117, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %117, align 8
  %119 = icmp eq %"class.network::mojom::blink::CSPSource"* %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %115
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %118) #12
  %121 = bitcast %"class.network::mojom::blink::CSPSource"* %118 to i8*
  call void @_ZdlPv(i8* %121) #13
  br label %122

122:                                              ; preds = %120, %115
  %123 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %116, i64 1
  %124 = icmp eq %"class.mojo::StructPtr.87"* %123, %114
  br i1 %124, label %125, label %115

125:                                              ; preds = %122
  store i32 0, i32* %109, align 4
  %126 = bitcast %"class.WTF::Vector.2386"* %3 to i8**
  %127 = load i8*, i8** %126, align 8
  br label %128

128:                                              ; preds = %125, %107
  %129 = phi i8* [ %127, %125 ], [ %108, %107 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %129) #12
  store %"class.mojo::StructPtr.87"* null, %"class.mojo::StructPtr.87"** %104, align 8
  br label %130

130:                                              ; preds = %103, %128
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EEbbbbbbbbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.2382"*, %"class.WTF::Vector.2386"* dereferenceable(16), %"class.WTF::Vector.104"* dereferenceable(16), %"class.WTF::Vector.2391"* dereferenceable(16), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %14 = alloca %"class.WTF::Vector.2386", align 8
  %15 = alloca %"class.WTF::Vector.104", align 8
  %16 = alloca %"class.WTF::Vector.2391", align 8
  %17 = tail call i8* @_Znwm(i64 64) #13
  %18 = bitcast i8* %17 to %"class.network::mojom::blink::CSPSourceList"*
  %19 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %14, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %14, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast %"class.WTF::Vector.2386"* %1 to i64*
  %22 = bitcast %"class.WTF::Vector.2386"* %14 to i64*
  store i64 0, i64* %22, align 8
  %23 = load i64, i64* %21, align 8
  %24 = bitcast %"class.WTF::Vector.2386"* %14 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %1, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %19, align 8
  store i32 0, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %1, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %20, align 4
  store i32 0, i32* %27, align 4
  %29 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %15, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %15, i64 0, i32 0, i32 0, i32 2
  %31 = bitcast %"class.WTF::Vector.104"* %2 to i64*
  %32 = bitcast %"class.WTF::Vector.104"* %15 to i64*
  store i64 0, i64* %32, align 8
  %33 = load i64, i64* %31, align 8
  %34 = bitcast %"class.WTF::Vector.104"* %15 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %2, i64 0, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %29, align 8
  store i32 0, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %2, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %30, align 4
  store i32 0, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %16, i64 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %16, i64 0, i32 0, i32 0, i32 2
  %41 = bitcast %"class.WTF::Vector.2391"* %3 to i64*
  %42 = bitcast %"class.WTF::Vector.2391"* %16 to i64*
  store i64 0, i64* %42, align 8
  %43 = load i64, i64* %41, align 8
  %44 = bitcast %"class.WTF::Vector.2391"* %16 to i64*
  store atomic i64 0, i64* %41 monotonic, align 8
  store atomic i64 %43, i64* %44 monotonic, align 8
  %45 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %3, i64 0, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %39, align 8
  store i32 0, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %3, i64 0, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %40, align 4
  store i32 0, i32* %47, align 4
  %49 = load i8, i8* %4, align 1, !range !7
  %50 = icmp ne i8 %49, 0
  %51 = load i8, i8* %5, align 1, !range !7
  %52 = icmp ne i8 %51, 0
  %53 = load i8, i8* %6, align 1, !range !7
  %54 = icmp ne i8 %53, 0
  %55 = load i8, i8* %7, align 1, !range !7
  %56 = icmp ne i8 %55, 0
  %57 = load i8, i8* %8, align 1, !range !7
  %58 = icmp ne i8 %57, 0
  %59 = load i8, i8* %9, align 1, !range !7
  %60 = icmp ne i8 %59, 0
  %61 = load i8, i8* %10, align 1, !range !7
  %62 = icmp ne i8 %61, 0
  %63 = load i8, i8* %11, align 1, !range !7
  %64 = icmp ne i8 %63, 0
  %65 = load i8, i8* %12, align 1, !range !7
  %66 = icmp ne i8 %65, 0
  call void @_ZN7network5mojom5blink13CSPSourceListC1EN3WTF6VectorIN4mojo9StructPtrINS1_9CSPSourceEEELj0ENS3_18PartitionAllocatorEEENS4_INS3_6StringELj0ES9_EENS4_INS6_INS1_13CSPHashSourceEEELj0ES9_EEbbbbbbbbb(%"class.network::mojom::blink::CSPSourceList"* nonnull %18, %"class.WTF::Vector.2386"* nonnull %14, %"class.WTF::Vector.104"* nonnull %15, %"class.WTF::Vector.2391"* nonnull %16, i1 zeroext %50, i1 zeroext %52, i1 zeroext %54, i1 zeroext %56, i1 zeroext %58, i1 zeroext %60, i1 zeroext %62, i1 zeroext %64, i1 zeroext %66) #12
  %67 = ptrtoint i8* %17 to i64
  %68 = bitcast %"class.mojo::StructPtr.2382"* %0 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %16, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.mojo::StructPtr.2394"*, %"class.mojo::StructPtr.2394"** %69, align 8
  %71 = icmp eq %"class.mojo::StructPtr.2394"* %70, null
  br i1 %71, label %94, label %72, !prof !5

72:                                               ; preds = %13
  %73 = bitcast %"class.mojo::StructPtr.2394"* %70 to i8*
  %74 = load i32, i32* %40, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %92, label %76, !prof !6

76:                                               ; preds = %72
  %77 = zext i32 %74 to i64
  %78 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %70, i64 %77
  br label %79

79:                                               ; preds = %86, %76
  %80 = phi %"class.mojo::StructPtr.2394"* [ %87, %86 ], [ %70, %76 ]
  %81 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %81, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %81, align 8
  %83 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %79
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %82) #12
  %85 = bitcast %"class.network::mojom::blink::CSPHashSource"* %82 to i8*
  call void @_ZdlPv(i8* %85) #13
  br label %86

86:                                               ; preds = %84, %79
  %87 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %80, i64 1
  %88 = icmp eq %"class.mojo::StructPtr.2394"* %87, %78
  br i1 %88, label %89, label %79

89:                                               ; preds = %86
  store i32 0, i32* %40, align 4
  %90 = bitcast %"class.WTF::Vector.2391"* %16 to i8**
  %91 = load i8*, i8** %90, align 8
  br label %92

92:                                               ; preds = %89, %72
  %93 = phi i8* [ %91, %89 ], [ %73, %72 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %93) #12
  store %"class.mojo::StructPtr.2394"* null, %"class.mojo::StructPtr.2394"** %69, align 8
  br label %94

94:                                               ; preds = %13, %92
  %95 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %15, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.WTF::String"*, %"class.WTF::String"** %95, align 8
  %97 = icmp eq %"class.WTF::String"* %96, null
  br i1 %97, label %131, label %98, !prof !5

98:                                               ; preds = %94
  %99 = bitcast %"class.WTF::String"* %96 to i8*
  %100 = load i32, i32* %30, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %129, label %102, !prof !6

102:                                              ; preds = %98
  %103 = zext i32 %100 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 %103
  br label %105

105:                                              ; preds = %123, %102
  %106 = phi %"class.WTF::String"* [ %124, %123 ], [ %96, %102 ]
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #12
  br label %123

123:                                              ; preds = %122, %119, %105
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 1
  %125 = icmp eq %"class.WTF::String"* %124, %104
  br i1 %125, label %126, label %105

126:                                              ; preds = %123
  store i32 0, i32* %30, align 4
  %127 = bitcast %"class.WTF::Vector.104"* %15 to i8**
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %126, %98
  %130 = phi i8* [ %128, %126 ], [ %99, %98 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %130) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %95, align 8
  br label %131

131:                                              ; preds = %94, %129
  %132 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %14, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.mojo::StructPtr.87"*, %"class.mojo::StructPtr.87"** %132, align 8
  %134 = icmp eq %"class.mojo::StructPtr.87"* %133, null
  br i1 %134, label %157, label %135, !prof !5

135:                                              ; preds = %131
  %136 = bitcast %"class.mojo::StructPtr.87"* %133 to i8*
  %137 = load i32, i32* %20, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %155, label %139, !prof !6

139:                                              ; preds = %135
  %140 = zext i32 %137 to i64
  %141 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %133, i64 %140
  br label %142

142:                                              ; preds = %149, %139
  %143 = phi %"class.mojo::StructPtr.87"* [ %150, %149 ], [ %133, %139 ]
  %144 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %143, i64 0, i32 0, i32 0, i32 0, i32 0
  %145 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %144, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %144, align 8
  %146 = icmp eq %"class.network::mojom::blink::CSPSource"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %142
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %145) #12
  %148 = bitcast %"class.network::mojom::blink::CSPSource"* %145 to i8*
  call void @_ZdlPv(i8* %148) #13
  br label %149

149:                                              ; preds = %147, %142
  %150 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %143, i64 1
  %151 = icmp eq %"class.mojo::StructPtr.87"* %150, %141
  br i1 %151, label %152, label %142

152:                                              ; preds = %149
  store i32 0, i32* %20, align 4
  %153 = bitcast %"class.WTF::Vector.2386"* %14 to i8**
  %154 = load i8*, i8** %153, align 8
  br label %155

155:                                              ; preds = %152, %135
  %156 = phi i8* [ %154, %152 ], [ %136, %135 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %156) #12
  store %"class.mojo::StructPtr.87"* null, %"class.mojo::StructPtr.87"** %132, align 8
  br label %157

157:                                              ; preds = %131, %155
  ret void
}

declare void @_ZN7network5mojom5blink13CSPSourceListC1EN3WTF6VectorIN4mojo9StructPtrINS1_9CSPSourceEEELj0ENS3_18PartitionAllocatorEEENS4_INS3_6StringELj0ES9_EENS4_INS6_INS1_13CSPHashSourceEEELj0ES9_EEbbbbbbbbb(%"class.network::mojom::blink::CSPSourceList"*, %"class.WTF::Vector.2386"*, %"class.WTF::Vector.104"*, %"class.WTF::Vector.2391"*, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.2386"* noalias sret, %"class.WTF::Vector.2386"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.87", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.2386"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #12
  %8 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %57, label %11, !prof !6

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %12) #12
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #12
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.2386"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::StructPtr.87"*, %"class.mojo::StructPtr.87"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.mojo::StructPtr.87"* %3 to i8*
  %27 = bitcast %"class.mojo::StructPtr.87"* %3 to i64*
  %28 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %25, %54
  %30 = phi %"class.mojo::StructPtr.87"* [ %21, %25 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  %31 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %31, align 8, !noalias !60
  %33 = icmp eq %"class.network::mojom::blink::CSPSource"* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i64 0, i64* %27, align 8, !alias.scope !60
  br label %36

35:                                               ; preds = %29
  call void @_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.87"* nonnull sret %3, %"class.network::mojom::blink::CSPSource"* nonnull %32) #12
  br label %36

36:                                               ; preds = %34, %35
  %37 = load i32, i32* %6, align 4
  %38 = load i32, i32* %5, align 8
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %49, label %40, !prof !6

40:                                               ; preds = %36
  %41 = load %"class.mojo::StructPtr.87"*, %"class.mojo::StructPtr.87"** %4, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %41, i64 %42
  %44 = bitcast %"class.mojo::StructPtr.87"* %43 to i64*
  %45 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %45, align 8
  %46 = load i64, i64* %27, align 8
  store i64 %46, i64* %44, align 8
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %6, align 4
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %28, align 8
  br label %54

49:                                               ; preds = %36
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2386"* %0, %"class.mojo::StructPtr.87"* nonnull dereferenceable(8) %3) #12
  %50 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %28, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %28, align 8
  %51 = icmp eq %"class.network::mojom::blink::CSPSource"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.network::mojom::blink::CSPSource"* %50 to i8*
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %50) #12
  call void @_ZdlPv(i8* %53) #13
  br label %54

54:                                               ; preds = %40, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  %55 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %30, i64 1
  %56 = icmp eq %"class.mojo::StructPtr.87"* %55, %23
  br i1 %56, label %57, label %29

57:                                               ; preds = %54, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2386"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.87"*, %"class.mojo::StructPtr.87"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.87"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.2386"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.87"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.87"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.87"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.87"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !67

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.87"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.87"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.87"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.87"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.87"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.87"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.87"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.87"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.87"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.87"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.87"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.87"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.87"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #12
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %73) #12
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #12
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.87"*, %"class.mojo::StructPtr.87"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.87"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.87"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.87"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.87"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.87"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.87"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !68

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.87"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.87"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.87"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.87"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.87"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.87"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.87"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.87"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.87"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.87"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.87"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.87"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.87"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.2386"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #12
  %149 = bitcast %"class.WTF::Vector.2386"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2386"*, %"class.mojo::StructPtr.87"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.87"*, %"class.mojo::StructPtr.87"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.87"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.87"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.87"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.2386"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.87"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2386"* %0, i32 %22) #12
  %36 = load %"class.mojo::StructPtr.87"*, %"class.mojo::StructPtr.87"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.87"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.87"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.2386", %"class.WTF::Vector.2386"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !5

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.87"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %55) #12
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #12
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.2386"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.87"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2386"* %0, i32 %50) #12
  %64 = load %"class.mojo::StructPtr.87"*, %"class.mojo::StructPtr.87"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.87"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.87"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.87"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.87"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.87"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.2391"* noalias sret, %"class.WTF::Vector.2391"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.2394", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.2391"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #12
  %8 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %57, label %11, !prof !6

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %12) #12
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #12
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.2391"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::StructPtr.2394"*, %"class.mojo::StructPtr.2394"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.mojo::StructPtr.2394"* %3 to i8*
  %27 = bitcast %"class.mojo::StructPtr.2394"* %3 to i64*
  %28 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %25, %54
  %30 = phi %"class.mojo::StructPtr.2394"* [ %21, %25 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  %31 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %31, align 8, !noalias !69
  %33 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i64 0, i64* %27, align 8, !alias.scope !69
  br label %36

35:                                               ; preds = %29
  call void @_ZNK7network5mojom5blink13CSPHashSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.2394"* nonnull sret %3, %"class.network::mojom::blink::CSPHashSource"* nonnull %32) #12
  br label %36

36:                                               ; preds = %34, %35
  %37 = load i32, i32* %6, align 4
  %38 = load i32, i32* %5, align 8
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %49, label %40, !prof !6

40:                                               ; preds = %36
  %41 = load %"class.mojo::StructPtr.2394"*, %"class.mojo::StructPtr.2394"** %4, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %41, i64 %42
  %44 = bitcast %"class.mojo::StructPtr.2394"* %43 to i64*
  %45 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %45, align 8
  %46 = load i64, i64* %27, align 8
  store i64 %46, i64* %44, align 8
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %6, align 4
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %28, align 8
  br label %54

49:                                               ; preds = %36
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2391"* %0, %"class.mojo::StructPtr.2394"* nonnull dereferenceable(8) %3) #12
  %50 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %28, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %28, align 8
  %51 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.network::mojom::blink::CSPHashSource"* %50 to i8*
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %50) #12
  call void @_ZdlPv(i8* %53) #13
  br label %54

54:                                               ; preds = %40, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  %55 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %30, i64 1
  %56 = icmp eq %"class.mojo::StructPtr.2394"* %55, %23
  br i1 %56, label %57, label %29

57:                                               ; preds = %54, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2391"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.2394"*, %"class.mojo::StructPtr.2394"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.2394"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.2391"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.2394"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.2394"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.2394"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.2394"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !76

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.2394"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.2394"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.2394"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.2394"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.2394"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.2394"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.2394"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.2394"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.2394"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.2394"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.2394"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.2394"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.2394"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #12
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %73) #12
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #12
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.2394"*, %"class.mojo::StructPtr.2394"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.2394"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.2394"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.2394"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.2394"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.2394"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.2394"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !77

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.2394"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.2394"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.2394"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.2394"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.2394"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.2394"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.2394"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.2394"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.2394"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.2394"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.2394"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.2394"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.2394"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.2391"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #12
  %149 = bitcast %"class.WTF::Vector.2391"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"*) unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2391"*, %"class.mojo::StructPtr.2394"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.2394"*, %"class.mojo::StructPtr.2394"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.2394"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.2394"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.2394"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.2391"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.2394"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2391"* %0, i32 %22) #12
  %36 = load %"class.mojo::StructPtr.2394"*, %"class.mojo::StructPtr.2394"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.2394"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.2394"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.2391", %"class.WTF::Vector.2391"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !5

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.2394"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %55) #12
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #12
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.2391"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.2394"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2391"* %0, i32 %50) #12
  %64 = load %"class.mojo::StructPtr.2394"*, %"class.mojo::StructPtr.2394"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.2394"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.2394"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.2394"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.2394"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.2394", %"class.mojo::StructPtr.2394"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.2394"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink13CSPHashSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.2394"* noalias sret, %"class.network::mojom::blink::CSPHashSource"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.2349", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.WTF::Vector.2349", align 8
  %6 = getelementptr inbounds %"class.network::mojom::blink::CSPHashSource", %"class.network::mojom::blink::CSPHashSource"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = bitcast %"class.WTF::Vector.2349"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.WTF::Vector.2349", %"class.WTF::Vector.2349"* %5, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.WTF::Vector.2349", %"class.WTF::Vector.2349"* %5, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::Vector.2349", %"class.WTF::Vector.2349"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #12, !alias.scope !78
  %12 = getelementptr inbounds %"class.network::mojom::blink::CSPHashSource", %"class.network::mojom::blink::CSPHashSource"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4, !noalias !78
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %28, label %15, !prof !6

15:                                               ; preds = %2
  %16 = zext i32 %13 to i64
  %17 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %16) #12
  %18 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %17, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %19 = ptrtoint i8* %18 to i64
  %20 = bitcast %"class.WTF::Vector.2349"* %5 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = load i32, i32* %12, align 4, !noalias !78
  %22 = trunc i64 %17 to i32
  store i32 %22, i32* %10, align 8
  %23 = getelementptr inbounds %"class.network::mojom::blink::CSPHashSource", %"class.network::mojom::blink::CSPHashSource"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8, !noalias !78
  %25 = zext i32 %21 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = icmp eq i32 %21, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %2, %15
  %29 = phi i32 [ %22, %15 ], [ 0, %2 ]
  %30 = phi i64 [ %19, %15 ], [ 0, %2 ]
  %31 = bitcast %"class.WTF::Vector.2349"* %5 to i64*
  br label %56

32:                                               ; preds = %15, %48
  %33 = phi i32 [ %50, %48 ], [ %22, %15 ]
  %34 = phi i32 [ %49, %48 ], [ 0, %15 ]
  %35 = phi i8* [ %46, %48 ], [ %24, %15 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12, !noalias !78
  %36 = load i8, i8* %35, align 1
  store i8 %36, i8* %4, align 1, !noalias !78
  %37 = icmp eq i32 %34, %33
  br i1 %37, label %44, label %38, !prof !6

38:                                               ; preds = %32
  %39 = load i8*, i8** %9, align 8, !alias.scope !78
  %40 = zext i32 %34 to i64
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  store i8 %36, i8* %41, align 1
  %42 = load i32, i32* %11, align 4, !alias.scope !78
  %43 = add i32 %42, 1
  store i32 %43, i32* %11, align 4, !alias.scope !78
  br label %45

44:                                               ; preds = %32
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIhEEvOT_(%"class.WTF::Vector.2349"* nonnull %5, i8* nonnull dereferenceable(1) %4) #12
  br label %45

45:                                               ; preds = %44, %38
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12, !noalias !78
  %46 = getelementptr inbounds i8, i8* %35, i64 1
  %47 = icmp eq i8* %46, %26
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  %49 = load i32, i32* %11, align 4, !alias.scope !78
  %50 = load i32, i32* %10, align 8, !alias.scope !78
  br label %32

51:                                               ; preds = %45
  %52 = bitcast %"class.WTF::Vector.2349"* %5 to i64*
  %53 = load i64, i64* %52, align 8, !noalias !83
  %54 = load i32, i32* %10, align 8, !noalias !83
  %55 = load i32, i32* %11, align 4, !noalias !83
  br label %56

56:                                               ; preds = %28, %51
  %57 = phi i64* [ %31, %28 ], [ %52, %51 ]
  %58 = phi i32 [ 0, %28 ], [ %55, %51 ]
  %59 = phi i32 [ %29, %28 ], [ %54, %51 ]
  %60 = phi i64 [ %30, %28 ], [ %53, %51 ]
  %61 = bitcast %"class.WTF::Vector.2349"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #12, !noalias !83
  %62 = call i8* @_Znwm(i64 24) #13, !noalias !83
  %63 = bitcast i8* %62 to %"class.network::mojom::blink::CSPHashSource"*
  %64 = getelementptr inbounds %"class.WTF::Vector.2349", %"class.WTF::Vector.2349"* %3, i64 0, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.WTF::Vector.2349", %"class.WTF::Vector.2349"* %3, i64 0, i32 0, i32 0, i32 2
  %66 = bitcast %"class.WTF::Vector.2349"* %3 to i64*
  store i64 0, i64* %66, align 8, !noalias !83
  store atomic i64 0, i64* %57 monotonic, align 8, !noalias !83
  store atomic i64 %60, i64* %66 monotonic, align 8, !noalias !83
  store i32 %59, i32* %64, align 8, !noalias !83
  store i32 0, i32* %10, align 8, !noalias !83
  store i32 %58, i32* %65, align 4, !noalias !83
  store i32 0, i32* %11, align 4, !noalias !83
  call void @_ZN7network5mojom5blink13CSPHashSourceC1ENS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEE(%"class.network::mojom::blink::CSPHashSource"* nonnull %63, i32 %7, %"class.WTF::Vector.2349"* nonnull %3) #12, !noalias !83
  %67 = ptrtoint i8* %62 to i64
  %68 = bitcast %"class.mojo::StructPtr.2394"* %0 to i64*
  store i64 %67, i64* %68, align 8, !alias.scope !83
  %69 = getelementptr inbounds %"class.WTF::Vector.2349", %"class.WTF::Vector.2349"* %3, i64 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8, !noalias !83
  %71 = icmp eq i8* %70, null
  br i1 %71, label %77, label %72, !prof !5

72:                                               ; preds = %56
  %73 = load i32, i32* %65, align 4, !noalias !83
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !6

75:                                               ; preds = %72
  store i32 0, i32* %65, align 4, !noalias !83
  br label %76

76:                                               ; preds = %75, %72
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #12, !noalias !83
  store i8* null, i8** %69, align 8, !noalias !83
  br label %77

77:                                               ; preds = %56, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #12, !noalias !83
  %78 = load i8*, i8** %9, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %85, label %80, !prof !5

80:                                               ; preds = %77
  %81 = load i32, i32* %11, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %84, label %83, !prof !6

83:                                               ; preds = %80
  store i32 0, i32* %11, align 4
  br label %84

84:                                               ; preds = %83, %80
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %78) #12
  store i8* null, i8** %9, align 8
  br label %85

85:                                               ; preds = %77, %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  ret void
}

declare void @_ZN7network5mojom5blink13CSPHashSourceC1ENS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEE(%"class.network::mojom::blink::CSPHashSource"*, i32, %"class.WTF::Vector.2349"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #12
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIhEEvOT_(%"class.WTF::Vector.2349"*, i8* dereferenceable(1)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2349", %"class.WTF::Vector.2349"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2349", %"class.WTF::Vector.2349"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %46, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2349", %"class.WTF::Vector.2349"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %83, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq i8* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %29 = ptrtoint i8* %28 to i64
  br i1 %25, label %30, label %33

30:                                               ; preds = %24
  %31 = bitcast %"class.WTF::Vector.2349"* %0 to i64*
  store atomic i64 %29, i64* %31 monotonic, align 8
  %32 = trunc i64 %27 to i32
  store i32 %32, i32* %14, align 8
  br label %83

33:                                               ; preds = %24
  %34 = load i8*, i8** %6, align 8
  %35 = icmp ne i8* %28, null
  %36 = icmp ne i8* %34, null
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %42, !prof !5

38:                                               ; preds = %33
  %39 = load i32, i32* %3, align 4
  %40 = zext i32 %39 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %34, i64 %40, i1 false) #12
  %41 = load i8*, i8** %6, align 8
  br label %42

42:                                               ; preds = %38, %33
  %43 = phi i8* [ %34, %33 ], [ %41, %38 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #12
  %44 = bitcast %"class.WTF::Vector.2349"* %0 to i64*
  store atomic i64 %29, i64* %44 monotonic, align 8
  %45 = trunc i64 %27 to i32
  store i32 %45, i32* %14, align 8
  br label %83

46:                                               ; preds = %9
  %47 = ptrtoint i8* %1 to i64
  %48 = ptrtoint i8* %7 to i64
  %49 = sub i64 %47, %48
  %50 = getelementptr inbounds %"class.WTF::Vector.2349", %"class.WTF::Vector.2349"* %0, i64 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = lshr i32 %51, 2
  %53 = add i32 %51, 1
  %54 = add i32 %53, %52
  %55 = icmp ugt i32 %54, 4
  %56 = select i1 %55, i32 %54, i32 4
  %57 = icmp ugt i32 %56, %5
  %58 = select i1 %57, i32 %56, i32 %5
  %59 = icmp ult i32 %51, %58
  br i1 %59, label %60, label %80, !prof !5

60:                                               ; preds = %46
  %61 = icmp eq i8* %7, null
  %62 = zext i32 %58 to i64
  %63 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %62) #12
  %64 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %63, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %65 = ptrtoint i8* %64 to i64
  br i1 %61, label %77, label %66

66:                                               ; preds = %60
  %67 = load i8*, i8** %6, align 8
  %68 = icmp ne i8* %64, null
  %69 = icmp ne i8* %67, null
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %75, !prof !5

71:                                               ; preds = %66
  %72 = load i32, i32* %3, align 4
  %73 = zext i32 %72 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %64, i8* nonnull align 1 %67, i64 %73, i1 false) #12
  %74 = load i8*, i8** %6, align 8
  br label %75

75:                                               ; preds = %71, %66
  %76 = phi i8* [ %67, %66 ], [ %74, %71 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #12
  br label %77

77:                                               ; preds = %60, %75
  %78 = bitcast %"class.WTF::Vector.2349"* %0 to i64*
  store atomic i64 %65, i64* %78 monotonic, align 8
  %79 = trunc i64 %63 to i32
  store i32 %79, i32* %50, align 8
  br label %80

80:                                               ; preds = %77, %46
  %81 = phi i8* [ %7, %46 ], [ %64, %77 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 %49
  br label %83

83:                                               ; preds = %42, %30, %13, %80
  %84 = phi i8* [ %81, %80 ], [ %7, %13 ], [ %28, %30 ], [ %28, %42 ]
  %85 = phi i8* [ %82, %80 ], [ %1, %13 ], [ %1, %30 ], [ %1, %42 ]
  %86 = load i32, i32* %3, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %84, i64 %87
  %89 = load i8, i8* %85, align 1
  store i8 %89, i8* %88, align 1
  %90 = load i32, i32* %3, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %3, align 4
  ret void
}

declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1ERKN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceE(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*, %"class.WTF::String"* dereferenceable(8), i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.104"* noalias sret, %"class.WTF::Vector.104"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.104"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #12
  %8 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %81, label %11, !prof !6

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %12) #12
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.104"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::String"*, %"class.WTF::String"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %81, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  br label %28

28:                                               ; preds = %25, %78
  %29 = phi %"class.WTF::String"* [ %21, %25 ], [ %79, %78 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #12
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !6

47:                                               ; preds = %38
  call void @llvm.trap() #12
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %28, %33, %48
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %27, align 8
  %51 = load i32, i32* %6, align 4
  %52 = load i32, i32* %5, align 8
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %62, label %54, !prof !6

54:                                               ; preds = %50
  %55 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %56 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %57 = zext i32 %51 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 %57
  %59 = bitcast %"class.WTF::String"* %58 to i64*
  store i64 %55, i64* %59, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %27, align 8
  %60 = load i32, i32* %6, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %6, align 4
  br label %78

62:                                               ; preds = %50
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.104"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #12
  br label %78

78:                                               ; preds = %54, %62, %74, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 1
  %80 = icmp eq %"class.WTF::String"* %79, %23
  br i1 %80, label %81, label %28

81:                                               ; preds = %78, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.104"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.104"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !5

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.104"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.104"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !5

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.104"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !5

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector.104"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector.104"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink15CSPTrustedTypes5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.109"* noalias sret, %"class.network::mojom::blink::CSPTrustedTypes"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.104", align 8
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = bitcast %"class.WTF::Vector.104"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.network::mojom::blink::CSPTrustedTypes", %"class.network::mojom::blink::CSPTrustedTypes"* %1, i64 0, i32 0
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.104"* nonnull sret %3, %"class.WTF::Vector.104"* dereferenceable(16) %7) #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  %8 = getelementptr inbounds %"class.network::mojom::blink::CSPTrustedTypes", %"class.network::mojom::blink::CSPTrustedTypes"* %1, i64 0, i32 1
  %9 = load i8, i8* %8, align 1, !range !7
  store i8 %9, i8* %4, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #12
  %10 = getelementptr inbounds %"class.network::mojom::blink::CSPTrustedTypes", %"class.network::mojom::blink::CSPTrustedTypes"* %1, i64 0, i32 2
  %11 = load i8, i8* %10, align 1, !range !7
  store i8 %11, i8* %5, align 1
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.109"* %0, %"class.WTF::Vector.104"* nonnull dereferenceable(16) %3, i8* nonnull dereferenceable(1) %4, i8* nonnull dereferenceable(1) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  %12 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::String"*, %"class.WTF::String"** %12, align 8
  %14 = icmp eq %"class.WTF::String"* %13, null
  br i1 %14, label %49, label %15, !prof !5

15:                                               ; preds = %2
  %16 = bitcast %"class.WTF::String"* %13 to i8*
  %17 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %3, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %47, label %20, !prof !6

20:                                               ; preds = %15
  %21 = zext i32 %18 to i64
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %21
  br label %23

23:                                               ; preds = %41, %20
  %24 = phi %"class.WTF::String"* [ %42, %41 ], [ %13, %20 ]
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #12
  br label %41

41:                                               ; preds = %40, %37, %23
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 1
  %43 = icmp eq %"class.WTF::String"* %42, %22
  br i1 %43, label %44, label %23

44:                                               ; preds = %41
  store i32 0, i32* %17, align 4
  %45 = bitcast %"class.WTF::Vector.104"* %3 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %15
  %48 = phi i8* [ %46, %44 ], [ %16, %15 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %48) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %12, align 8
  br label %49

49:                                               ; preds = %2, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.109"*, %"class.WTF::Vector.104"* dereferenceable(16), i8* dereferenceable(1), i8* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.WTF::Vector.104", align 8
  %6 = tail call i8* @_Znwm(i64 24) #13
  %7 = bitcast i8* %6 to %"class.network::mojom::blink::CSPTrustedTypes"*
  %8 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast %"class.WTF::Vector.104"* %1 to i64*
  %11 = bitcast %"class.WTF::Vector.104"* %5 to i64*
  store i64 0, i64* %11, align 8
  %12 = load i64, i64* %10, align 8
  %13 = bitcast %"class.WTF::Vector.104"* %5 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %1, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %8, align 8
  store i32 0, i32* %14, align 4
  %16 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %1, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %9, align 4
  store i32 0, i32* %16, align 4
  %18 = load i8, i8* %2, align 1, !range !7
  %19 = icmp ne i8 %18, 0
  %20 = load i8, i8* %3, align 1, !range !7
  %21 = icmp ne i8 %20, 0
  call void @_ZN7network5mojom5blink15CSPTrustedTypesC1EN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEbb(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %7, %"class.WTF::Vector.104"* nonnull %5, i1 zeroext %19, i1 zeroext %21) #12
  %22 = ptrtoint i8* %6 to i64
  %23 = bitcast %"class.mojo::StructPtr.109"* %0 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.104", %"class.WTF::Vector.104"* %5, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::String"*, %"class.WTF::String"** %24, align 8
  %26 = icmp eq %"class.WTF::String"* %25, null
  br i1 %26, label %60, label %27, !prof !5

27:                                               ; preds = %4
  %28 = bitcast %"class.WTF::String"* %25 to i8*
  %29 = load i32, i32* %9, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %58, label %31, !prof !6

31:                                               ; preds = %27
  %32 = zext i32 %29 to i64
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 %32
  br label %34

34:                                               ; preds = %52, %31
  %35 = phi %"class.WTF::String"* [ %53, %52 ], [ %25, %31 ]
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #12
  br label %52

52:                                               ; preds = %51, %48, %34
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 1
  %54 = icmp eq %"class.WTF::String"* %53, %33
  br i1 %54, label %55, label %34

55:                                               ; preds = %52
  store i32 0, i32* %9, align 4
  %56 = bitcast %"class.WTF::Vector.104"* %5 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %55, %27
  %59 = phi i8* [ %57, %55 ], [ %28, %27 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %59) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %24, align 8
  br label %60

60:                                               ; preds = %4, %58
  ret void
}

declare void @_ZN7network5mojom5blink15CSPTrustedTypesC1EN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEbb(%"class.network::mojom::blink::CSPTrustedTypes"*, %"class.WTF::Vector.104"*, i1 zeroext, i1 zeroext) unnamed_addr #3

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #3

declare void @_ZN5blink25GlobalScopeCreationParamsC1ERKNS_4KURLENS_5mojom10ScriptTypeERKN3WTF6StringES9_RKN4absl8optionalINS_17UserAgentMetadataEEE13scoped_refptrINS_21WebWorkerFetchContextEENS6_6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS6_18PartitionAllocatorEEENSN_14ReferrerPolicyEPKNS_14SecurityOriginEbNS_10HttpsStateEPNS_13WorkerClientsENSt3__110unique_ptrINS_24WebContentSettingsClientENS10_14default_deleteIS12_EEEENSB_INSN_14IPAddressSpaceEEEPKNSJ_IS7_Lj0ESR_EERKN4base16UnguessableTokenENS11_INS_14WorkerSettingsENS13_IS1F_EEEENS4_14V8CacheOptionsEPNS_25WorkletModuleResponsesMapENSK_13PendingRemoteINS4_5blink22BrowserInterfaceBrokerEEENS_24BeginFrameProviderParamsEPKNS_17PermissionsPolicyES1C_lRKNSB_INS_10MultiTokenIN4util9TokenTypeINS_25LocalFrameTokenTypeMarkerEEENS1V_INS_30DedicatedWorkerTokenTypeMarkerEEEJNS1V_INS_28ServiceWorkerTokenTypeMarkerEEENS1V_INS_27SharedWorkerTokenTypeMarkerEEENS1V_INS_31AnimationWorkletTokenTypeMarkerEEENS1V_INS_27AudioWorkletTokenTypeMarkerEEENS1V_INS_28LayoutWorkletTokenTypeMarkerEEENS1V_INS_27PaintWorkletTokenTypeMarkerEEEEEEEEbb(%"struct.blink::GlobalScopeCreationParams"*, %"class.blink::KURL"* dereferenceable(112), i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.absl::optional.2242"* dereferenceable(160), i64, %"class.WTF::Vector.80"*, i32, %"class.blink::SecurityOrigin"*, i1 zeroext, i32, %"class.blink::WorkerClients"*, i64, i64, %"class.WTF::Vector.104"*, %"class.base::UnguessableToken"* dereferenceable(16), i64, i32, %"class.blink::WorkletModuleResponsesMap"*, %"class.mojo::PendingRemote.2230"*, %"struct.blink::BeginFrameProviderParams"*, %"class.blink::PermissionsPolicy"*, %"class.base::UnguessableToken"* byval(%"class.base::UnguessableToken") align 8, i64, %"class.absl::optional.2231"* dereferenceable(32), i1 zeroext, i1 zeroext) unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

declare void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #6

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23PaintWorkletGlobalScopeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PaintWorkletGlobalScope"*
  tail call void @_ZNK5blink23PaintWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::PaintWorkletGlobalScope"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink23PaintWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::PaintWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink14LocalDOMWindow24GetExecutionContextTokenEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink14LocalDOMWindow24GetExecutionContextTokenEv"}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{i8 0, i8 2}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4mojo10NullRemotecvNS_13PendingRemoteIT_EEIN5blink5mojom5blink22BrowserInterfaceBrokerEEEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4mojo10NullRemotecvNS_13PendingRemoteIT_EEIN5blink5mojom5blink22BrowserInterfaceBrokerEEEv"}
!11 = !{!12, !14, !16}
!12 = distinct !{!12, !13, !"_ZNK4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEE5CloneEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEE5CloneEv"}
!14 = distinct !{!14, !15, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELb1EE5CloneERKS6_: argument 0"}
!15 = distinct !{!15, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELb1EE5CloneERKS6_"}
!16 = distinct !{!16, !17, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEET_RKS7_: argument 0"}
!17 = distinct !{!17, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEET_RKS7_"}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = distinct !{!20, !19}
!21 = !{!22, !24, !26}
!22 = distinct !{!22, !23, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv: argument 0"}
!23 = distinct !{!23, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv"}
!24 = distinct !{!24, !25, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_: argument 0"}
!25 = distinct !{!25, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_"}
!26 = distinct !{!26, !27, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_: argument 0"}
!27 = distinct !{!27, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_"}
!28 = !{!29, !31, !33}
!29 = distinct !{!29, !30, !"_ZNK4mojo16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEE5CloneEv: argument 0"}
!30 = distinct !{!30, !"_ZNK4mojo16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEE5CloneEv"}
!31 = distinct !{!31, !32, !"_ZN4mojo11CloneTraitsINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEELb1EE5CloneERKS6_: argument 0"}
!32 = distinct !{!32, !"_ZN4mojo11CloneTraitsINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEELb1EE5CloneERKS6_"}
!33 = distinct !{!33, !34, !"_ZN4mojo5CloneINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEEEET_RKS7_: argument 0"}
!34 = distinct !{!34, !"_ZN4mojo5CloneINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEEEET_RKS7_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK7network5mojom5blink27ContentSecurityPolicyHeader5CloneIN4mojo16InlinedStructPtrIS2_EEEES6_v: argument 0"}
!37 = distinct !{!37, !"_ZNK7network5mojom5blink27ContentSecurityPolicyHeader5CloneIN4mojo16InlinedStructPtrIS2_EEEES6_v"}
!38 = !{!39, !36}
!39 = distinct !{!39, !40, !"_ZN7network5mojom5blink27ContentSecurityPolicyHeader3NewIJN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceEEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!40 = distinct !{!40, !"_ZN7network5mojom5blink27ContentSecurityPolicyHeader3NewIJN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceEEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!41 = !{!42, !44, !46}
!42 = distinct !{!42, !43, !"_ZNK4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEE5CloneEv: argument 0"}
!43 = distinct !{!43, !"_ZNK4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEE5CloneEv"}
!44 = distinct !{!44, !45, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEELb1EE5CloneERKS6_: argument 0"}
!45 = distinct !{!45, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEELb1EE5CloneERKS6_"}
!46 = distinct !{!46, !47, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEEEET_RKS7_: argument 0"}
!47 = distinct !{!47, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEEEET_RKS7_"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN7network5mojom5blink9CSPSource3NewIJN3WTF6StringES5_iS5_bbEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!50 = distinct !{!50, !"_ZN7network5mojom5blink9CSPSource3NewIJN3WTF6StringES5_iS5_bbEEEN4mojo9StructPtrIS2_EEDpOT_"}
!51 = distinct !{!51, !19}
!52 = !{!53, !55, !57}
!53 = distinct !{!53, !54, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEE5CloneEv: argument 0"}
!54 = distinct !{!54, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEE5CloneEv"}
!55 = distinct !{!55, !56, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEELb1EE5CloneERKS6_: argument 0"}
!56 = distinct !{!56, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEELb1EE5CloneERKS6_"}
!57 = distinct !{!57, !58, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEEEET_RKS7_: argument 0"}
!58 = distinct !{!58, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEEEET_RKS7_"}
!59 = distinct !{!59, !19}
!60 = !{!61, !63, !65}
!61 = distinct !{!61, !62, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv: argument 0"}
!62 = distinct !{!62, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv"}
!63 = distinct !{!63, !64, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_: argument 0"}
!64 = distinct !{!64, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_"}
!65 = distinct !{!65, !66, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_: argument 0"}
!66 = distinct !{!66, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_"}
!67 = distinct !{!67, !19}
!68 = distinct !{!68, !19}
!69 = !{!70, !72, !74}
!70 = distinct !{!70, !71, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEE5CloneEv: argument 0"}
!71 = distinct !{!71, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEE5CloneEv"}
!72 = distinct !{!72, !73, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELb1EE5CloneERKS6_: argument 0"}
!73 = distinct !{!73, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELb1EE5CloneERKS6_"}
!74 = distinct !{!74, !75, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEET_RKS7_: argument 0"}
!75 = distinct !{!75, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEET_RKS7_"}
!76 = distinct !{!76, !19}
!77 = distinct !{!77, !19}
!78 = !{!79, !81}
!79 = distinct !{!79, !80, !"_ZN4mojo11CloneTraitsIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS4_: argument 0"}
!80 = distinct !{!80, !"_ZN4mojo11CloneTraitsIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS4_"}
!81 = distinct !{!81, !82, !"_ZN4mojo5CloneIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEEET_RKS5_: argument 0"}
!82 = distinct !{!82, !"_ZN4mojo5CloneIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEEET_RKS5_"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZN7network5mojom5blink13CSPHashSource3NewIJNS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!85 = distinct !{!85, !"_ZN7network5mojom5blink13CSPHashSource3NewIJNS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEEEEN4mojo9StructPtrIS2_EEDpOT_"}
