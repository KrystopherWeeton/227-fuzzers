; ModuleID = '../../third_party/swiftshader/third_party/astc-encoder/Source/astc_color_unquantize.cpp'
source_filename = "../../third_party/swiftshader/third_party/astc-encoder/Source/astc_color_unquantize.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.vtype4 = type { i32, i32, i32, i32 }

@color_unquantization_tables = external local_unnamed_addr constant [21 x [256 x i8]], align 16
@_ZZL16hdr_rgbo_unpack3PKiiP6vtype4IjES3_E6shamts = internal unnamed_addr constant [6 x i32] [i32 1, i32 1, i32 2, i32 3, i32 4, i32 5], align 16
@_ZZL15hdr_rgb_unpack3PKiiP6vtype4IjES3_E9dbits_tab = internal unnamed_addr constant [8 x i32] [i32 7, i32 6, i32 7, i32 6, i32 5, i32 6, i32 5, i32 6], align 16

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_Z22unpack_color_endpoints16astc_decode_modeiiPKiPiS2_S2_P6vtype4IjES5_(i32, i32, i32, i32* readonly, i32*, i32*, i32* nocapture, %class.vtype4*, %class.vtype4*) local_unnamed_addr #0 {
  store i32 0, i32* %6, align 4
  switch i32 %1, label %547 [
    i32 0, label %10
    i32 1, label %31
    i32 3, label %59
    i32 2, label %97
    i32 4, label %131
    i32 5, label %164
    i32 6, label %227
    i32 10, label %228
    i32 7, label %244
    i32 8, label %422
    i32 9, label %424
    i32 11, label %426
    i32 12, label %427
    i32 13, label %447
    i32 14, label %482
    i32 15, label %498
  ]

10:                                               ; preds = %9
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  %11 = sext i32 %2 to i64
  %12 = load i32, i32* %3, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %11, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds i32, i32* %3, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %11, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 0
  store i32 %16, i32* %23, align 4
  %24 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 1
  store i32 %16, i32* %24, align 4
  %25 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 2
  store i32 %16, i32* %25, align 4
  %26 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 3
  store i32 255, i32* %26, align 4
  %27 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 0
  store i32 %22, i32* %27, align 4
  %28 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 1
  store i32 %22, i32* %28, align 4
  %29 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 2
  store i32 %22, i32* %29, align 4
  %30 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 3
  store i32 255, i32* %30, align 4
  br label %547

31:                                               ; preds = %9
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  %32 = sext i32 %2 to i64
  %33 = load i32, i32* %3, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %32, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = getelementptr inbounds i32, i32* %3, i64 1
  %38 = load i32, i32* %37, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %32, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = lshr i8 %36, 2
  %44 = zext i8 %43 to i32
  %45 = and i32 %42, 192
  %46 = or i32 %45, %44
  %47 = and i32 %42, 63
  %48 = add nuw nsw i32 %46, %47
  %49 = icmp ult i32 %48, 255
  %50 = select i1 %49, i32 %48, i32 255
  %51 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 0
  store i32 %46, i32* %51, align 4
  %52 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 1
  store i32 %46, i32* %52, align 4
  %53 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 2
  store i32 %46, i32* %53, align 4
  %54 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 3
  store i32 255, i32* %54, align 4
  %55 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 0
  store i32 %50, i32* %55, align 4
  %56 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 1
  store i32 %50, i32* %56, align 4
  %57 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 2
  store i32 %50, i32* %57, align 4
  %58 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 3
  store i32 255, i32* %58, align 4
  br label %547

59:                                               ; preds = %9
  store i32 1, i32* %4, align 4
  store i32 -1, i32* %5, align 4
  %60 = sext i32 %2 to i64
  %61 = load i32, i32* %3, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %60, i64 %62
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = getelementptr inbounds i32, i32* %3, i64 1
  %67 = load i32, i32* %66, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %60, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = icmp slt i8 %64, 0
  %73 = shl nuw nsw i32 %71, 4
  %74 = select i1 %72, i32 3584, i32 3840
  %75 = select i1 %72, i32 2, i32 1
  %76 = select i1 %72, i32 508, i32 254
  %77 = select i1 %72, i32 124, i32 30
  %78 = and i32 %73, %74
  %79 = shl nuw nsw i32 %65, %75
  %80 = and i32 %79, %76
  %81 = or i32 %78, %80
  %82 = shl nuw nsw i32 %71, %75
  %83 = and i32 %82, %77
  %84 = add nuw nsw i32 %83, %81
  %85 = icmp ult i32 %84, 4095
  %86 = select i1 %85, i32 %84, i32 4095
  %87 = shl nuw nsw i32 %81, 4
  %88 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 0
  store i32 %87, i32* %88, align 4
  %89 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 1
  store i32 %87, i32* %89, align 4
  %90 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 2
  store i32 %87, i32* %90, align 4
  %91 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 3
  store i32 30720, i32* %91, align 4
  %92 = shl nuw nsw i32 %86, 4
  %93 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 0
  store i32 %92, i32* %93, align 4
  %94 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 1
  store i32 %92, i32* %94, align 4
  %95 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 2
  store i32 %92, i32* %95, align 4
  %96 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 3
  store i32 30720, i32* %96, align 4
  br label %547

97:                                               ; preds = %9
  store i32 1, i32* %4, align 4
  store i32 -1, i32* %5, align 4
  %98 = sext i32 %2 to i64
  %99 = load i32, i32* %3, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %98, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = getelementptr inbounds i32, i32* %3, i64 1
  %105 = load i32, i32* %104, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %98, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = icmp ult i8 %108, %102
  br i1 %110, label %114, label %111

111:                                              ; preds = %97
  %112 = shl nuw nsw i32 %103, 8
  %113 = shl nuw nsw i32 %109, 4
  br label %119

114:                                              ; preds = %97
  %115 = shl nuw nsw i32 %109, 8
  %116 = or i32 %115, 128
  %117 = shl nuw nsw i32 %103, 4
  %118 = add nsw i32 %117, -8
  br label %119

119:                                              ; preds = %111, %114
  %120 = phi i32 [ %112, %111 ], [ %116, %114 ]
  %121 = phi i32 [ %113, %111 ], [ %118, %114 ]
  %122 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 0
  store i32 %120, i32* %122, align 4
  %123 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 1
  store i32 %120, i32* %123, align 4
  %124 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 2
  store i32 %120, i32* %124, align 4
  %125 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 3
  store i32 30720, i32* %125, align 4
  %126 = shl nsw i32 %121, 4
  %127 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 0
  store i32 %126, i32* %127, align 4
  %128 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 1
  store i32 %126, i32* %128, align 4
  %129 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 2
  store i32 %126, i32* %129, align 4
  %130 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 3
  store i32 30720, i32* %130, align 4
  br label %547

131:                                              ; preds = %9
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  %132 = sext i32 %2 to i64
  %133 = load i32, i32* %3, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %132, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i32
  %138 = getelementptr inbounds i32, i32* %3, i64 1
  %139 = load i32, i32* %138, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %132, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = getelementptr inbounds i32, i32* %3, i64 2
  %145 = load i32, i32* %144, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %132, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i32
  %150 = getelementptr inbounds i32, i32* %3, i64 3
  %151 = load i32, i32* %150, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %132, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 0
  store i32 %137, i32* %156, align 4
  %157 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 1
  store i32 %137, i32* %157, align 4
  %158 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 2
  store i32 %137, i32* %158, align 4
  %159 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 3
  store i32 %149, i32* %159, align 4
  %160 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 0
  store i32 %143, i32* %160, align 4
  %161 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 1
  store i32 %143, i32* %161, align 4
  %162 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 2
  store i32 %143, i32* %162, align 4
  %163 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 3
  store i32 %155, i32* %163, align 4
  br label %547

164:                                              ; preds = %9
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  %165 = sext i32 %2 to i64
  %166 = load i32, i32* %3, align 4
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %165, i64 %167
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i32
  %171 = getelementptr inbounds i32, i32* %3, i64 1
  %172 = load i32, i32* %171, align 4
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %165, i64 %173
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i32
  %177 = getelementptr inbounds i32, i32* %3, i64 2
  %178 = load i32, i32* %177, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %165, i64 %179
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i32
  %183 = getelementptr inbounds i32, i32* %3, i64 3
  %184 = load i32, i32* %183, align 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %165, i64 %185
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  %189 = shl nuw nsw i32 %176, 1
  %190 = and i32 %189, 256
  %191 = or i32 %190, %170
  %192 = shl nuw nsw i32 %188, 1
  %193 = and i32 %192, 256
  %194 = or i32 %193, %182
  %195 = and i32 %176, 126
  %196 = and i32 %188, 126
  %197 = and i32 %176, 64
  %198 = icmp eq i32 %197, 0
  %199 = or i32 %176, -128
  %200 = select i1 %198, i32 %195, i32 %199
  %201 = and i32 %188, 64
  %202 = icmp eq i32 %201, 0
  %203 = or i32 %188, -128
  %204 = select i1 %202, i32 %196, i32 %203
  %205 = lshr i32 %191, 1
  %206 = ashr i32 %200, 1
  %207 = lshr i32 %194, 1
  %208 = ashr i32 %204, 1
  %209 = add nsw i32 %206, %205
  %210 = add nsw i32 %208, %207
  %211 = icmp slt i32 %209, 255
  %212 = select i1 %211, i32 %209, i32 255
  %213 = icmp sgt i32 %212, 0
  %214 = select i1 %213, i32 %212, i32 0
  %215 = icmp slt i32 %210, 255
  %216 = select i1 %215, i32 %210, i32 255
  %217 = icmp sgt i32 %216, 0
  %218 = select i1 %217, i32 %216, i32 0
  %219 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 0
  store i32 %205, i32* %219, align 4
  %220 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 1
  store i32 %205, i32* %220, align 4
  %221 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 2
  store i32 %205, i32* %221, align 4
  %222 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 3
  store i32 %207, i32* %222, align 4
  %223 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 0
  store i32 %214, i32* %223, align 4
  %224 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 1
  store i32 %214, i32* %224, align 4
  %225 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 2
  store i32 %214, i32* %225, align 4
  %226 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 3
  store i32 %218, i32* %226, align 4
  br label %547

227:                                              ; preds = %9
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  tail call fastcc void @_ZL16rgb_scale_unpackPKiiP6vtype4IjES3_(i32* %3, i32 %2, %class.vtype4* %7, %class.vtype4* %8) #2
  br label %547

228:                                              ; preds = %9
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  tail call fastcc void @_ZL16rgb_scale_unpackPKiiP6vtype4IjES3_(i32* %3, i32 %2, %class.vtype4* %7, %class.vtype4* %8) #3
  %229 = sext i32 %2 to i64
  %230 = getelementptr inbounds i32, i32* %3, i64 4
  %231 = load i32, i32* %230, align 4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %229, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 3
  store i32 %235, i32* %236, align 4
  %237 = getelementptr inbounds i32, i32* %3, i64 5
  %238 = load i32, i32* %237, align 4
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %229, i64 %239
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 3
  store i32 %242, i32* %243, align 4
  br label %547

244:                                              ; preds = %9
  store i32 1, i32* %4, align 4
  store i32 -1, i32* %5, align 4
  %245 = sext i32 %2 to i64
  %246 = load i32, i32* %3, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %245, i64 %247
  %249 = load i8, i8* %248, align 1
  %250 = zext i8 %249 to i32
  %251 = getelementptr inbounds i32, i32* %3, i64 1
  %252 = load i32, i32* %251, align 4
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %245, i64 %253
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i32
  %257 = getelementptr inbounds i32, i32* %3, i64 2
  %258 = load i32, i32* %257, align 4
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %245, i64 %259
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i32
  %263 = getelementptr inbounds i32, i32* %3, i64 3
  %264 = load i32, i32* %263, align 4
  %265 = sext i32 %264 to i64
  %266 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %245, i64 %265
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i32
  %269 = lshr i32 %250, 6
  %270 = lshr i32 %256, 7
  %271 = shl nuw nsw i32 %270, 2
  %272 = or i32 %271, %269
  %273 = lshr i32 %262, 7
  %274 = shl nuw nsw i32 %273, 3
  %275 = or i32 %272, %274
  %276 = and i32 %275, 12
  %277 = icmp eq i32 %276, 12
  br i1 %277, label %280, label %278

278:                                              ; preds = %244
  %279 = lshr i32 %275, 2
  br label %284

280:                                              ; preds = %244
  %281 = icmp eq i32 %275, 15
  %282 = select i1 %281, i32 0, i32 %269
  %283 = select i1 %281, i32 5, i32 4
  br label %284

284:                                              ; preds = %280, %278
  %285 = phi i32 [ %279, %278 ], [ %282, %280 ]
  %286 = phi i32 [ %269, %278 ], [ %283, %280 ]
  %287 = and i32 %250, 63
  %288 = and i32 %256, 31
  %289 = and i32 %262, 31
  %290 = and i32 %268, 31
  %291 = lshr i32 %256, 6
  %292 = and i32 %291, 1
  %293 = lshr i32 %256, 5
  %294 = and i32 %293, 1
  %295 = lshr i32 %262, 6
  %296 = and i32 %295, 1
  %297 = lshr i32 %262, 5
  %298 = and i32 %297, 1
  %299 = lshr i32 %268, 7
  %300 = lshr i32 %268, 6
  %301 = and i32 %300, 1
  %302 = lshr i32 %268, 5
  %303 = and i32 %302, 1
  %304 = shl i32 1, %286
  %305 = and i32 %304, 48
  %306 = icmp ne i32 %305, 0
  %307 = shl nuw nsw i32 %292, 6
  %308 = select i1 %306, i32 %307, i32 0
  %309 = or i32 %308, %288
  %310 = and i32 %304, 58
  %311 = icmp ne i32 %310, 0
  %312 = shl nuw nsw i32 %294, 5
  %313 = select i1 %311, i32 %312, i32 0
  %314 = or i32 %309, %313
  %315 = shl nuw nsw i32 %296, 6
  %316 = select i1 %306, i32 %315, i32 0
  %317 = or i32 %316, %289
  %318 = shl nuw nsw i32 %298, 5
  %319 = select i1 %311, i32 %318, i32 0
  %320 = or i32 %317, %319
  %321 = and i32 %304, 61
  %322 = icmp eq i32 %321, 0
  %323 = shl nuw nsw i32 %303, 5
  %324 = select i1 %322, i32 0, i32 %323
  %325 = and i32 %304, 45
  %326 = icmp eq i32 %325, 0
  %327 = shl nuw nsw i32 %301, 6
  %328 = select i1 %326, i32 0, i32 %327
  %329 = icmp eq i32 %286, 2
  %330 = and i32 %268, 128
  %331 = select i1 %329, i32 %330, i32 0
  %332 = or i32 %331, %290
  %333 = or i32 %332, %324
  %334 = or i32 %333, %328
  %335 = and i32 %304, 59
  %336 = icmp eq i32 %335, 0
  %337 = shl nuw nsw i32 %299, 6
  %338 = select i1 %336, i32 0, i32 %337
  %339 = shl nuw nsw i32 %298, 6
  %340 = select i1 %329, i32 %339, i32 0
  %341 = icmp eq i32 %286, 4
  %342 = shl nuw nsw i32 %301, 7
  %343 = select i1 %341, i32 %342, i32 0
  %344 = icmp ult i32 %286, 4
  %345 = shl nuw nsw i32 %296, 7
  %346 = select i1 %344, i32 %345, i32 0
  %347 = and i32 %304, 5
  %348 = icmp ne i32 %347, 0
  %349 = shl nuw nsw i32 %294, 8
  %350 = select i1 %348, i32 %349, i32 0
  %351 = and i32 %304, 10
  %352 = icmp eq i32 %351, 0
  %353 = shl nuw nsw i32 %292, 8
  %354 = select i1 %352, i32 0, i32 %353
  %355 = shl nuw nsw i32 %292, 9
  %356 = select i1 %348, i32 %355, i32 0
  %357 = icmp eq i32 %286, 1
  %358 = shl nuw nsw i32 %303, 9
  %359 = select i1 %357, i32 %358, i32 0
  %360 = icmp eq i32 %286, 0
  %361 = shl nuw nsw i32 %298, 10
  %362 = select i1 %360, i32 %361, i32 0
  %363 = shl nuw nsw i32 %301, 10
  %364 = select i1 %357, i32 %363, i32 0
  %365 = or i32 %340, %287
  %366 = or i32 %365, %343
  %367 = or i32 %366, %346
  %368 = or i32 %367, %359
  %369 = or i32 %368, %362
  %370 = or i32 %369, %364
  %371 = or i32 %370, %338
  %372 = or i32 %371, %350
  %373 = or i32 %372, %354
  %374 = or i32 %373, %356
  %375 = zext i32 %286 to i64
  %376 = getelementptr inbounds [6 x i32], [6 x i32]* @_ZZL16hdr_rgbo_unpack3PKiiP6vtype4IjES3_E6shamts, i64 0, i64 %375
  %377 = load i32, i32* %376, align 4
  %378 = shl i32 %374, %377
  %379 = shl i32 %314, %377
  %380 = shl i32 %320, %377
  %381 = shl i32 %334, %377
  %382 = icmp eq i32 %286, 5
  %383 = sub nsw i32 %378, %379
  %384 = sub nsw i32 %378, %380
  %385 = select i1 %382, i32 %379, i32 %383
  %386 = select i1 %382, i32 %380, i32 %384
  switch i32 %285, label %389 [
    i32 1, label %387
    i32 2, label %388
  ]

387:                                              ; preds = %284
  br label %389

388:                                              ; preds = %284
  br label %389

389:                                              ; preds = %284, %387, %388
  %390 = phi i32 [ %378, %284 ], [ %386, %388 ], [ %385, %387 ]
  %391 = phi i32 [ %385, %284 ], [ %385, %388 ], [ %378, %387 ]
  %392 = phi i32 [ %386, %284 ], [ %378, %388 ], [ %386, %387 ]
  %393 = sub nsw i32 %390, %381
  %394 = sub nsw i32 %391, %381
  %395 = sub nsw i32 %392, %381
  %396 = icmp sgt i32 %390, 0
  %397 = select i1 %396, i32 %390, i32 0
  %398 = icmp sgt i32 %391, 0
  %399 = select i1 %398, i32 %391, i32 0
  %400 = icmp sgt i32 %392, 0
  %401 = select i1 %400, i32 %392, i32 0
  %402 = icmp sgt i32 %393, 0
  %403 = select i1 %402, i32 %393, i32 0
  %404 = icmp sgt i32 %394, 0
  %405 = select i1 %404, i32 %394, i32 0
  %406 = icmp sgt i32 %395, 0
  %407 = select i1 %406, i32 %395, i32 0
  %408 = shl i32 %403, 4
  %409 = shl i32 %405, 4
  %410 = shl i32 %407, 4
  %411 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 0
  store i32 %408, i32* %411, align 4
  %412 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 1
  store i32 %409, i32* %412, align 4
  %413 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 2
  store i32 %410, i32* %413, align 4
  %414 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 3
  store i32 30720, i32* %414, align 4
  %415 = shl i32 %397, 4
  %416 = shl i32 %399, 4
  %417 = shl i32 %401, 4
  %418 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 0
  store i32 %415, i32* %418, align 4
  %419 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 1
  store i32 %416, i32* %419, align 4
  %420 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 2
  store i32 %417, i32* %420, align 4
  %421 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 3
  store i32 30720, i32* %421, align 4
  br label %547

422:                                              ; preds = %9
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  %423 = tail call fastcc i32 @_ZL10rgb_unpackPKiiP6vtype4IjES3_(i32* %3, i32 %2, %class.vtype4* %7, %class.vtype4* %8) #2
  br label %547

424:                                              ; preds = %9
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  %425 = tail call fastcc i32 @_ZL16rgb_delta_unpackPKiiP6vtype4IjES3_(i32* %3, i32 %2, %class.vtype4* %7, %class.vtype4* %8) #2
  br label %547

426:                                              ; preds = %9
  store i32 1, i32* %4, align 4
  store i32 -1, i32* %5, align 4
  tail call fastcc void @_ZL15hdr_rgb_unpack3PKiiP6vtype4IjES3_(i32* %3, i32 %2, %class.vtype4* %7, %class.vtype4* %8) #2
  br label %547

427:                                              ; preds = %9
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  %428 = tail call fastcc i32 @_ZL10rgb_unpackPKiiP6vtype4IjES3_(i32* %3, i32 %2, %class.vtype4* %7, %class.vtype4* %8) #3
  %429 = icmp eq i32 %428, 0
  %430 = sext i32 %2 to i64
  %431 = select i1 %429, i64 6, i64 7
  %432 = getelementptr inbounds i32, i32* %3, i64 %431
  %433 = select i1 %429, i64 7, i64 6
  %434 = getelementptr inbounds i32, i32* %3, i64 %433
  %435 = load i32, i32* %432, align 4
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %430, i64 %436
  %438 = load i8, i8* %437, align 1
  %439 = zext i8 %438 to i32
  %440 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 3
  store i32 %439, i32* %440, align 4
  %441 = load i32, i32* %434, align 4
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %430, i64 %442
  %444 = load i8, i8* %443, align 1
  %445 = zext i8 %444 to i32
  %446 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 3
  store i32 %445, i32* %446, align 4
  br label %547

447:                                              ; preds = %9
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  %448 = sext i32 %2 to i64
  %449 = getelementptr inbounds i32, i32* %3, i64 6
  %450 = load i32, i32* %449, align 4
  %451 = sext i32 %450 to i64
  %452 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %448, i64 %451
  %453 = load i8, i8* %452, align 1
  %454 = zext i8 %453 to i32
  %455 = getelementptr inbounds i32, i32* %3, i64 7
  %456 = load i32, i32* %455, align 4
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %448, i64 %457
  %459 = load i8, i8* %458, align 1
  %460 = zext i8 %459 to i32
  %461 = shl nuw nsw i32 %460, 1
  %462 = and i32 %461, 256
  %463 = or i32 %462, %454
  %464 = and i32 %460, 126
  %465 = and i32 %460, 64
  %466 = icmp eq i32 %465, 0
  %467 = or i32 %460, -128
  %468 = select i1 %466, i32 %464, i32 %467
  %469 = lshr i32 %463, 1
  %470 = ashr i32 %468, 1
  %471 = add nsw i32 %470, %469
  %472 = icmp slt i32 %471, 255
  %473 = select i1 %472, i32 %471, i32 255
  %474 = icmp sgt i32 %473, 0
  %475 = select i1 %474, i32 %473, i32 0
  %476 = tail call fastcc i32 @_ZL16rgb_delta_unpackPKiiP6vtype4IjES3_(i32* %3, i32 %2, %class.vtype4* %7, %class.vtype4* %8) #3
  %477 = icmp eq i32 %476, 0
  %478 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 3
  %479 = select i1 %477, i32 %469, i32 %475
  %480 = select i1 %477, i32 %475, i32 %469
  store i32 %479, i32* %478, align 4
  %481 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 3
  store i32 %480, i32* %481, align 4
  br label %547

482:                                              ; preds = %9
  store i32 1, i32* %4, align 4
  store i32 0, i32* %5, align 4
  tail call fastcc void @_ZL15hdr_rgb_unpack3PKiiP6vtype4IjES3_(i32* %3, i32 %2, %class.vtype4* %7, %class.vtype4* %8) #3
  %483 = sext i32 %2 to i64
  %484 = getelementptr inbounds i32, i32* %3, i64 6
  %485 = load i32, i32* %484, align 4
  %486 = sext i32 %485 to i64
  %487 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %483, i64 %486
  %488 = load i8, i8* %487, align 1
  %489 = zext i8 %488 to i32
  %490 = getelementptr inbounds i32, i32* %3, i64 7
  %491 = load i32, i32* %490, align 4
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %483, i64 %492
  %494 = load i8, i8* %493, align 1
  %495 = zext i8 %494 to i32
  %496 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 3
  store i32 %489, i32* %496, align 4
  %497 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 3
  store i32 %495, i32* %497, align 4
  br label %547

498:                                              ; preds = %9
  store i32 1, i32* %4, align 4
  store i32 1, i32* %5, align 4
  tail call fastcc void @_ZL15hdr_rgb_unpack3PKiiP6vtype4IjES3_(i32* %3, i32 %2, %class.vtype4* %7, %class.vtype4* %8) #3
  %499 = getelementptr inbounds i32, i32* %3, i64 6
  %500 = sext i32 %2 to i64
  %501 = load i32, i32* %499, align 4
  %502 = sext i32 %501 to i64
  %503 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %500, i64 %502
  %504 = load i8, i8* %503, align 1
  %505 = zext i8 %504 to i32
  %506 = getelementptr inbounds i32, i32* %3, i64 7
  %507 = load i32, i32* %506, align 4
  %508 = sext i32 %507 to i64
  %509 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %500, i64 %508
  %510 = load i8, i8* %509, align 1
  %511 = zext i8 %510 to i32
  %512 = lshr i32 %505, 7
  %513 = lshr i32 %511, 6
  %514 = and i32 %513, 2
  %515 = or i32 %514, %512
  %516 = and i32 %505, 127
  %517 = and i32 %511, 127
  %518 = icmp eq i32 %515, 3
  br i1 %518, label %519, label %522

519:                                              ; preds = %498
  %520 = shl nuw nsw i32 %516, 5
  %521 = shl nuw nsw i32 %517, 5
  br label %540

522:                                              ; preds = %498
  %523 = add nuw nsw i32 %515, 1
  %524 = shl i32 %517, %523
  %525 = and i32 %524, 1920
  %526 = or i32 %525, %516
  %527 = lshr i32 63, %515
  %528 = and i32 %527, %517
  %529 = lshr i32 32, %515
  %530 = xor i32 %528, %529
  %531 = sub nsw i32 %530, %529
  %532 = sub nuw nsw i32 4, %515
  %533 = shl i32 %526, %532
  %534 = shl i32 %531, %532
  %535 = add nsw i32 %534, %533
  %536 = icmp slt i32 %535, 4095
  %537 = select i1 %536, i32 %535, i32 4095
  %538 = icmp sgt i32 %537, 0
  %539 = select i1 %538, i32 %537, i32 0
  br label %540

540:                                              ; preds = %519, %522
  %541 = phi i32 [ %520, %519 ], [ %533, %522 ]
  %542 = phi i32 [ %521, %519 ], [ %539, %522 ]
  %543 = shl nsw i32 %541, 4
  %544 = shl nsw i32 %542, 4
  %545 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 3
  store i32 %543, i32* %545, align 4
  %546 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 3
  store i32 %544, i32* %546, align 4
  br label %547

547:                                              ; preds = %9, %540, %482, %447, %427, %426, %424, %422, %389, %228, %227, %164, %131, %119, %59, %31, %10
  %548 = load i32, i32* %5, align 4
  %549 = icmp eq i32 %548, -1
  br i1 %549, label %550, label %553

550:                                              ; preds = %547
  %551 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 3
  store i32 255, i32* %551, align 4
  %552 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 3
  store i32 255, i32* %552, align 4
  store i32 0, i32* %5, align 4
  br label %553

553:                                              ; preds = %550, %547
  %554 = phi i32 [ 0, %550 ], [ %548, %547 ]
  switch i32 %0, label %618 [
    i32 0, label %555
    i32 1, label %570
    i32 2, label %585
  ]

555:                                              ; preds = %553
  %556 = load i32, i32* %4, align 4
  %557 = icmp eq i32 %556, 1
  %558 = bitcast %class.vtype4* %7 to <4 x i32>*
  br i1 %557, label %559, label %561

559:                                              ; preds = %555
  store <4 x i32> <i32 65280, i32 0, i32 65280, i32 65280>, <4 x i32>* %558, align 4
  %560 = bitcast %class.vtype4* %8 to <4 x i32>*
  store <4 x i32> <i32 65280, i32 0, i32 65280, i32 65280>, <4 x i32>* %560, align 4
  br label %569

561:                                              ; preds = %555
  %562 = load <4 x i32>, <4 x i32>* %558, align 4
  %563 = mul <4 x i32> %562, <i32 257, i32 257, i32 257, i32 257>
  %564 = bitcast %class.vtype4* %7 to <4 x i32>*
  store <4 x i32> %563, <4 x i32>* %564, align 4
  %565 = bitcast %class.vtype4* %8 to <4 x i32>*
  %566 = load <4 x i32>, <4 x i32>* %565, align 4
  %567 = mul <4 x i32> %566, <i32 257, i32 257, i32 257, i32 257>
  %568 = bitcast %class.vtype4* %8 to <4 x i32>*
  store <4 x i32> %567, <4 x i32>* %568, align 4
  br label %569

569:                                              ; preds = %561, %559
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  br label %618

570:                                              ; preds = %553
  %571 = load i32, i32* %4, align 4
  %572 = icmp eq i32 %571, 1
  %573 = bitcast %class.vtype4* %7 to <4 x i32>*
  br i1 %572, label %574, label %576

574:                                              ; preds = %570
  store <4 x i32> <i32 65535, i32 65535, i32 65535, i32 65535>, <4 x i32>* %573, align 4
  %575 = bitcast %class.vtype4* %8 to <4 x i32>*
  store <4 x i32> <i32 65535, i32 65535, i32 65535, i32 65535>, <4 x i32>* %575, align 4
  store i32 1, i32* %6, align 4
  br label %584

576:                                              ; preds = %570
  %577 = load <4 x i32>, <4 x i32>* %573, align 4
  %578 = mul <4 x i32> %577, <i32 257, i32 257, i32 257, i32 257>
  %579 = bitcast %class.vtype4* %7 to <4 x i32>*
  store <4 x i32> %578, <4 x i32>* %579, align 4
  %580 = bitcast %class.vtype4* %8 to <4 x i32>*
  %581 = load <4 x i32>, <4 x i32>* %580, align 4
  %582 = mul <4 x i32> %581, <i32 257, i32 257, i32 257, i32 257>
  %583 = bitcast %class.vtype4* %8 to <4 x i32>*
  store <4 x i32> %582, <4 x i32>* %583, align 4
  br label %584

584:                                              ; preds = %576, %574
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  br label %618

585:                                              ; preds = %553
  %586 = load i32, i32* %4, align 4
  %587 = icmp eq i32 %586, 0
  br i1 %587, label %588, label %608

588:                                              ; preds = %585
  %589 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 0
  %590 = load i32, i32* %589, align 4
  %591 = mul i32 %590, 257
  store i32 %591, i32* %589, align 4
  %592 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 1
  %593 = load i32, i32* %592, align 4
  %594 = mul i32 %593, 257
  store i32 %594, i32* %592, align 4
  %595 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 2
  %596 = load i32, i32* %595, align 4
  %597 = mul i32 %596, 257
  store i32 %597, i32* %595, align 4
  %598 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 0
  %599 = load i32, i32* %598, align 4
  %600 = mul i32 %599, 257
  store i32 %600, i32* %598, align 4
  %601 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 1
  %602 = load i32, i32* %601, align 4
  %603 = mul i32 %602, 257
  store i32 %603, i32* %601, align 4
  %604 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 2
  %605 = load i32, i32* %604, align 4
  %606 = mul i32 %605, 257
  store i32 %606, i32* %604, align 4
  %607 = load i32, i32* %5, align 4
  br label %608

608:                                              ; preds = %588, %585
  %609 = phi i32 [ %607, %588 ], [ %554, %585 ]
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %611, label %618

611:                                              ; preds = %608
  %612 = getelementptr inbounds %class.vtype4, %class.vtype4* %7, i64 0, i32 3
  %613 = load i32, i32* %612, align 4
  %614 = mul i32 %613, 257
  store i32 %614, i32* %612, align 4
  %615 = getelementptr inbounds %class.vtype4, %class.vtype4* %8, i64 0, i32 3
  %616 = load i32, i32* %615, align 4
  %617 = mul i32 %616, 257
  store i32 %617, i32* %615, align 4
  br label %618

618:                                              ; preds = %608, %611, %553, %584, %569
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZL16rgb_scale_unpackPKiiP6vtype4IjES3_(i32* nocapture readonly, i32, %class.vtype4* nocapture, %class.vtype4* nocapture) unnamed_addr #0 {
  %5 = sext i32 %1 to i64
  %6 = load i32, i32* %0, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = getelementptr inbounds i32, i32* %0, i64 1
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds i32, i32* %0, i64 2
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds i32, i32* %0, i64 3
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds %class.vtype4, %class.vtype4* %3, i64 0, i32 0
  store i32 %10, i32* %29, align 4
  %30 = getelementptr inbounds %class.vtype4, %class.vtype4* %3, i64 0, i32 1
  store i32 %16, i32* %30, align 4
  %31 = getelementptr inbounds %class.vtype4, %class.vtype4* %3, i64 0, i32 2
  store i32 %22, i32* %31, align 4
  %32 = getelementptr inbounds %class.vtype4, %class.vtype4* %3, i64 0, i32 3
  store i32 255, i32* %32, align 4
  %33 = mul nuw nsw i32 %28, %10
  %34 = lshr i32 %33, 8
  %35 = mul nuw nsw i32 %28, %16
  %36 = lshr i32 %35, 8
  %37 = mul nuw nsw i32 %28, %22
  %38 = lshr i32 %37, 8
  %39 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 0
  store i32 %34, i32* %39, align 4
  %40 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 1
  store i32 %36, i32* %40, align 4
  %41 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 2
  store i32 %38, i32* %41, align 4
  %42 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 3
  store i32 255, i32* %42, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal fastcc i32 @_ZL10rgb_unpackPKiiP6vtype4IjES3_(i32* nocapture readonly, i32, %class.vtype4* nocapture, %class.vtype4* nocapture) unnamed_addr #1 {
  %5 = sext i32 %1 to i64
  %6 = load i32, i32* %0, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = getelementptr inbounds i32, i32* %0, i64 1
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds i32, i32* %0, i64 2
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds i32, i32* %0, i64 3
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds i32, i32* %0, i64 4
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds i32, i32* %0, i64 5
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = add nuw nsw i32 %34, %22
  %42 = add nuw nsw i32 %41, %10
  %43 = add nuw nsw i32 %40, %28
  %44 = add nuw nsw i32 %43, %16
  %45 = icmp ugt i32 %42, %44
  br i1 %45, label %46, label %53

46:                                               ; preds = %4
  %47 = add nuw nsw i32 %34, %10
  %48 = lshr i32 %47, 1
  %49 = lshr i32 %41, 1
  %50 = add nuw nsw i32 %40, %16
  %51 = lshr i32 %50, 1
  %52 = lshr i32 %43, 1
  br label %53

53:                                               ; preds = %4, %46
  %54 = phi i32 [ %51, %46 ], [ %10, %4 ]
  %55 = phi i32 [ %52, %46 ], [ %22, %4 ]
  %56 = phi i32 [ %40, %46 ], [ %34, %4 ]
  %57 = phi i32 [ %48, %46 ], [ %16, %4 ]
  %58 = phi i32 [ %49, %46 ], [ %28, %4 ]
  %59 = phi i32 [ %34, %46 ], [ %40, %4 ]
  %60 = phi i32 [ 1, %46 ], [ 0, %4 ]
  %61 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 0
  store i32 %54, i32* %61, align 4
  %62 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 1
  store i32 %55, i32* %62, align 4
  %63 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 2
  store i32 %56, i32* %63, align 4
  %64 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 3
  store i32 255, i32* %64, align 4
  %65 = getelementptr inbounds %class.vtype4, %class.vtype4* %3, i64 0, i32 0
  store i32 %57, i32* %65, align 4
  %66 = getelementptr inbounds %class.vtype4, %class.vtype4* %3, i64 0, i32 1
  store i32 %58, i32* %66, align 4
  %67 = getelementptr inbounds %class.vtype4, %class.vtype4* %3, i64 0, i32 2
  store i32 %59, i32* %67, align 4
  %68 = getelementptr inbounds %class.vtype4, %class.vtype4* %3, i64 0, i32 3
  store i32 255, i32* %68, align 4
  ret i32 %60
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal fastcc i32 @_ZL16rgb_delta_unpackPKiiP6vtype4IjES3_(i32* nocapture readonly, i32, %class.vtype4* nocapture, %class.vtype4* nocapture) unnamed_addr #1 {
  %5 = sext i32 %1 to i64
  %6 = load i32, i32* %0, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = getelementptr inbounds i32, i32* %0, i64 2
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds i32, i32* %0, i64 4
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds i32, i32* %0, i64 1
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds i32, i32* %0, i64 3
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds i32, i32* %0, i64 5
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = shl nuw nsw i32 %28, 1
  %42 = and i32 %41, 256
  %43 = or i32 %42, %10
  %44 = shl nuw nsw i32 %34, 1
  %45 = and i32 %44, 256
  %46 = or i32 %45, %16
  %47 = shl nuw nsw i32 %40, 1
  %48 = and i32 %47, 256
  %49 = or i32 %48, %22
  %50 = and i32 %28, 126
  %51 = and i32 %34, 126
  %52 = and i32 %40, 126
  %53 = and i32 %28, 64
  %54 = icmp eq i32 %53, 0
  %55 = or i32 %28, -128
  %56 = select i1 %54, i32 %50, i32 %55
  %57 = and i32 %34, 64
  %58 = icmp eq i32 %57, 0
  %59 = or i32 %34, -128
  %60 = select i1 %58, i32 %51, i32 %59
  %61 = and i32 %40, 64
  %62 = icmp eq i32 %61, 0
  %63 = or i32 %40, -128
  %64 = select i1 %62, i32 %52, i32 %63
  %65 = lshr i32 %43, 1
  %66 = lshr i32 %46, 1
  %67 = lshr i32 %49, 1
  %68 = ashr i32 %56, 1
  %69 = ashr i32 %60, 1
  %70 = ashr i32 %64, 1
  %71 = add nsw i32 %69, %68
  %72 = add nsw i32 %71, %70
  %73 = add nsw i32 %68, %65
  %74 = add nsw i32 %69, %66
  %75 = add nsw i32 %70, %67
  %76 = icmp sgt i32 %72, -1
  br i1 %76, label %86, label %77

77:                                               ; preds = %4
  %78 = add nsw i32 %75, %73
  %79 = ashr i32 %78, 1
  %80 = add nsw i32 %75, %74
  %81 = ashr i32 %80, 1
  %82 = add nuw nsw i32 %67, %65
  %83 = lshr i32 %82, 1
  %84 = add nuw nsw i32 %67, %66
  %85 = lshr i32 %84, 1
  br label %86

86:                                               ; preds = %4, %77
  %87 = phi i32 [ 1, %77 ], [ 0, %4 ]
  %88 = phi i32 [ %79, %77 ], [ %65, %4 ]
  %89 = phi i32 [ %81, %77 ], [ %66, %4 ]
  %90 = phi i32 [ %75, %77 ], [ %67, %4 ]
  %91 = phi i32 [ %83, %77 ], [ %73, %4 ]
  %92 = phi i32 [ %85, %77 ], [ %74, %4 ]
  %93 = phi i32 [ %67, %77 ], [ %75, %4 ]
  %94 = icmp slt i32 %88, 255
  %95 = select i1 %94, i32 %88, i32 255
  %96 = icmp sgt i32 %95, 0
  %97 = select i1 %96, i32 %95, i32 0
  %98 = icmp slt i32 %89, 255
  %99 = select i1 %98, i32 %89, i32 255
  %100 = icmp sgt i32 %99, 0
  %101 = select i1 %100, i32 %99, i32 0
  %102 = icmp slt i32 %90, 255
  %103 = select i1 %102, i32 %90, i32 255
  %104 = icmp sgt i32 %103, 0
  %105 = select i1 %104, i32 %103, i32 0
  %106 = icmp slt i32 %91, 255
  %107 = select i1 %106, i32 %91, i32 255
  %108 = icmp sgt i32 %107, 0
  %109 = select i1 %108, i32 %107, i32 0
  %110 = icmp slt i32 %92, 255
  %111 = select i1 %110, i32 %92, i32 255
  %112 = icmp sgt i32 %111, 0
  %113 = select i1 %112, i32 %111, i32 0
  %114 = icmp slt i32 %93, 255
  %115 = select i1 %114, i32 %93, i32 255
  %116 = icmp sgt i32 %115, 0
  %117 = select i1 %116, i32 %115, i32 0
  %118 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 0
  store i32 %97, i32* %118, align 4
  %119 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 1
  store i32 %101, i32* %119, align 4
  %120 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 2
  store i32 %105, i32* %120, align 4
  %121 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 3
  store i32 255, i32* %121, align 4
  %122 = getelementptr inbounds %class.vtype4, %class.vtype4* %3, i64 0, i32 0
  store i32 %109, i32* %122, align 4
  %123 = getelementptr inbounds %class.vtype4, %class.vtype4* %3, i64 0, i32 1
  store i32 %113, i32* %123, align 4
  %124 = getelementptr inbounds %class.vtype4, %class.vtype4* %3, i64 0, i32 2
  store i32 %117, i32* %124, align 4
  %125 = getelementptr inbounds %class.vtype4, %class.vtype4* %3, i64 0, i32 3
  store i32 255, i32* %125, align 4
  ret i32 %87
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZL15hdr_rgb_unpack3PKiiP6vtype4IjES3_(i32* nocapture readonly, i32, %class.vtype4* nocapture, %class.vtype4* nocapture) unnamed_addr #0 {
  %5 = sext i32 %1 to i64
  %6 = load i32, i32* %0, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = getelementptr inbounds i32, i32* %0, i64 1
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds i32, i32* %0, i64 2
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds i32, i32* %0, i64 3
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds i32, i32* %0, i64 4
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds i32, i32* %0, i64 5
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [21 x [256 x i8]], [21 x [256 x i8]]* @color_unquantization_tables, i64 0, i64 %5, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = lshr i32 %16, 7
  %42 = lshr i32 %22, 7
  %43 = shl nuw nsw i32 %42, 1
  %44 = or i32 %43, %41
  %45 = lshr i32 %28, 7
  %46 = shl nuw nsw i32 %45, 2
  %47 = or i32 %44, %46
  %48 = lshr i32 %34, 7
  %49 = lshr i32 %40, 7
  %50 = shl nuw nsw i32 %49, 1
  %51 = or i32 %50, %48
  %52 = icmp eq i32 %51, 3
  br i1 %52, label %53, label %66

53:                                               ; preds = %4
  %54 = shl nuw nsw i32 %10, 8
  %55 = shl nuw nsw i32 %22, 8
  %56 = shl nuw nsw i32 %34, 9
  %57 = and i32 %56, 65024
  %58 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 0
  store i32 %54, i32* %58, align 4
  %59 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 1
  store i32 %55, i32* %59, align 4
  %60 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 2
  store i32 %57, i32* %60, align 4
  %61 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 3
  store i32 30720, i32* %61, align 4
  %62 = shl nuw nsw i32 %16, 8
  %63 = shl nuw nsw i32 %28, 8
  %64 = shl nuw nsw i32 %40, 9
  %65 = and i32 %64, 65024
  br label %223

66:                                               ; preds = %4
  %67 = shl nuw nsw i32 %16, 2
  %68 = and i32 %67, 256
  %69 = or i32 %68, %10
  %70 = and i32 %22, 63
  %71 = and i32 %28, 63
  %72 = and i32 %16, 63
  %73 = and i32 %34, 127
  %74 = and i32 %40, 127
  %75 = zext i32 %47 to i64
  %76 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZL15hdr_rgb_unpack3PKiiP6vtype4IjES3_E9dbits_tab, i64 0, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = lshr i32 %22, 6
  %79 = and i32 %78, 1
  %80 = lshr i32 %28, 6
  %81 = and i32 %80, 1
  %82 = lshr i32 %34, 6
  %83 = and i32 %82, 1
  %84 = lshr i32 %40, 6
  %85 = and i32 %84, 1
  %86 = lshr i32 %34, 5
  %87 = and i32 %86, 1
  %88 = lshr i32 %40, 5
  %89 = and i32 %88, 1
  %90 = shl i32 1, %47
  %91 = and i32 %90, 164
  %92 = icmp eq i32 %91, 0
  %93 = shl nuw nsw i32 %79, 9
  %94 = select i1 %92, i32 0, i32 %93
  %95 = icmp eq i32 %47, 3
  %96 = shl nuw nsw i32 %83, 9
  %97 = select i1 %95, i32 %96, i32 0
  %98 = and i32 %90, 80
  %99 = icmp ne i32 %98, 0
  %100 = shl nuw nsw i32 %87, 9
  %101 = select i1 %99, i32 %100, i32 0
  %102 = shl nuw nsw i32 %89, 10
  %103 = select i1 %99, i32 %102, i32 0
  %104 = and i32 %90, 160
  %105 = icmp eq i32 %104, 0
  %106 = shl nuw nsw i32 %81, 10
  %107 = select i1 %105, i32 0, i32 %106
  %108 = and i32 %90, 192
  %109 = icmp eq i32 %108, 0
  %110 = shl nuw nsw i32 %83, 11
  %111 = select i1 %109, i32 0, i32 %110
  %112 = or i32 %69, %97
  %113 = or i32 %112, %94
  %114 = or i32 %113, %101
  %115 = or i32 %114, %107
  %116 = or i32 %115, %111
  %117 = or i32 %116, %103
  %118 = icmp eq i32 %47, 2
  %119 = shl nuw nsw i32 %81, 6
  %120 = select i1 %118, i32 %119, i32 0
  %121 = or i32 %120, %72
  %122 = and i32 %90, 232
  %123 = icmp eq i32 %122, 0
  %124 = shl nuw nsw i32 %85, 6
  %125 = select i1 %123, i32 0, i32 %124
  %126 = icmp eq i32 %47, 5
  %127 = shl nuw nsw i32 %83, 7
  %128 = select i1 %126, i32 %127, i32 0
  %129 = or i32 %121, %128
  %130 = or i32 %129, %125
  %131 = and i32 %90, 91
  %132 = icmp ne i32 %131, 0
  %133 = shl nuw nsw i32 %79, 6
  %134 = select i1 %132, i32 %133, i32 0
  %135 = or i32 %134, %70
  %136 = select i1 %132, i32 %119, i32 0
  %137 = or i32 %136, %71
  %138 = and i32 %90, 18
  %139 = icmp ne i32 %138, 0
  %140 = select i1 %139, i32 %127, i32 0
  %141 = or i32 %135, %140
  %142 = shl nuw nsw i32 %85, 7
  %143 = select i1 %139, i32 %142, i32 0
  %144 = or i32 %137, %143
  %145 = and i32 %90, 175
  %146 = icmp ne i32 %145, 0
  %147 = shl nuw nsw i32 %87, 5
  %148 = select i1 %146, i32 %147, i32 0
  %149 = or i32 %148, %73
  %150 = shl nuw nsw i32 %89, 5
  %151 = select i1 %146, i32 %150, i32 0
  %152 = or i32 %151, %74
  %153 = and i32 %90, 5
  %154 = icmp ne i32 %153, 0
  %155 = shl nuw nsw i32 %83, 6
  %156 = select i1 %154, i32 %155, i32 0
  %157 = or i32 %149, %156
  %158 = select i1 %154, i32 %124, i32 0
  %159 = or i32 %152, %158
  %160 = sub nsw i32 32, %77
  %161 = shl i32 %157, %160
  %162 = ashr i32 %161, %160
  %163 = shl i32 %159, %160
  %164 = ashr i32 %163, %160
  %165 = lshr i32 %47, 1
  %166 = xor i32 %165, 3
  %167 = shl i32 %117, %166
  %168 = shl i32 %141, %166
  %169 = shl i32 %144, %166
  %170 = shl i32 %130, %166
  %171 = shl i32 %162, %166
  %172 = shl i32 %164, %166
  %173 = sub nsw i32 %167, %168
  %174 = sub nsw i32 %167, %169
  %175 = sub nsw i32 %167, %170
  %176 = sub nsw i32 %173, %170
  %177 = sub i32 %176, %171
  %178 = sub nsw i32 %174, %170
  %179 = sub i32 %178, %172
  %180 = icmp slt i32 %175, 4095
  %181 = select i1 %180, i32 %175, i32 4095
  %182 = icmp sgt i32 %181, 0
  %183 = select i1 %182, i32 %181, i32 0
  %184 = icmp slt i32 %177, 4095
  %185 = select i1 %184, i32 %177, i32 4095
  %186 = icmp sgt i32 %185, 0
  %187 = select i1 %186, i32 %185, i32 0
  %188 = icmp slt i32 %179, 4095
  %189 = select i1 %188, i32 %179, i32 4095
  %190 = icmp sgt i32 %189, 0
  %191 = select i1 %190, i32 %189, i32 0
  %192 = icmp slt i32 %167, 4095
  %193 = select i1 %192, i32 %167, i32 4095
  %194 = icmp sgt i32 %193, 0
  %195 = select i1 %194, i32 %193, i32 0
  %196 = icmp slt i32 %173, 4095
  %197 = select i1 %196, i32 %173, i32 4095
  %198 = icmp sgt i32 %197, 0
  %199 = select i1 %198, i32 %197, i32 0
  %200 = icmp slt i32 %174, 4095
  %201 = select i1 %200, i32 %174, i32 4095
  %202 = icmp sgt i32 %201, 0
  %203 = select i1 %202, i32 %201, i32 0
  switch i32 %51, label %206 [
    i32 1, label %204
    i32 2, label %205
  ]

204:                                              ; preds = %66
  br label %206

205:                                              ; preds = %66
  br label %206

206:                                              ; preds = %66, %205, %204
  %207 = phi i32 [ %195, %66 ], [ %203, %205 ], [ %199, %204 ]
  %208 = phi i32 [ %199, %66 ], [ %199, %205 ], [ %195, %204 ]
  %209 = phi i32 [ %203, %66 ], [ %195, %205 ], [ %203, %204 ]
  %210 = phi i32 [ %183, %66 ], [ %191, %205 ], [ %187, %204 ]
  %211 = phi i32 [ %187, %66 ], [ %187, %205 ], [ %183, %204 ]
  %212 = phi i32 [ %191, %66 ], [ %183, %205 ], [ %191, %204 ]
  %213 = shl nsw i32 %210, 4
  %214 = shl nsw i32 %211, 4
  %215 = shl nsw i32 %212, 4
  %216 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 0
  store i32 %213, i32* %216, align 4
  %217 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 1
  store i32 %214, i32* %217, align 4
  %218 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 2
  store i32 %215, i32* %218, align 4
  %219 = getelementptr inbounds %class.vtype4, %class.vtype4* %2, i64 0, i32 3
  store i32 30720, i32* %219, align 4
  %220 = shl nsw i32 %207, 4
  %221 = shl nsw i32 %208, 4
  %222 = shl nsw i32 %209, 4
  br label %223

223:                                              ; preds = %206, %53
  %224 = phi i32 [ %220, %206 ], [ %62, %53 ]
  %225 = phi i32 [ %221, %206 ], [ %63, %53 ]
  %226 = phi i32 [ %222, %206 ], [ %65, %53 ]
  %227 = getelementptr inbounds %class.vtype4, %class.vtype4* %3, i64 0, i32 0
  store i32 %224, i32* %227, align 4
  %228 = getelementptr inbounds %class.vtype4, %class.vtype4* %3, i64 0, i32 1
  store i32 %225, i32* %228, align 4
  %229 = getelementptr inbounds %class.vtype4, %class.vtype4* %3, i64 0, i32 2
  store i32 %226, i32* %229, align 4
  %230 = getelementptr inbounds %class.vtype4, %class.vtype4* %3, i64 0, i32 3
  store i32 30720, i32* %230, align 4
  ret void
}

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { optsize }
attributes #3 = { nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
