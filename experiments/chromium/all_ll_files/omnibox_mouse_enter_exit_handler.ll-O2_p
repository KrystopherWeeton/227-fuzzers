; ModuleID = '../../chrome/browser/ui/views/omnibox/omnibox_mouse_enter_exit_handler.cc'
source_filename = "../../chrome/browser/ui/views/omnibox/omnibox_mouse_enter_exit_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.OmniboxMouseEnterExitHandler = type { %"class.ui::EventHandler", %"class.base::RepeatingCallback", %"class.std::__1::vector" }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair" }
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.43", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.61", %"class.absl::optional.67", i8, [7 x i8], %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.89", i8, i8, [3 x i8], %"class.std::__1::vector.94", %"class.std::__1::unique_ptr.101", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.107", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.120", %"class.base::ObserverList.126", i32, [4 x i8] }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.5", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.5" = type { %"class.std::__1::__vector_base.6" }
%"class.std::__1::__vector_base.6" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.7" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.12", %"class.std::__1::vector.19", %"class.ui::EventHandler"* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.14" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.ui::EventHandler"** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.34" }
%"class.std::__1::map.34" = type { %"class.std::__1::__tree.35" }
%"class.std::__1::__tree.35" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.std::__1::vector"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.51", %"struct.std::__1::atomic.51", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.49, %class.SkTDArray.50, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.49 = type { i8*, i32, i32 }
%class.SkTDArray.50 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.56 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.51" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.56 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.57", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl.59" }
%"struct.std::__1::__cxx_atomic_impl.59" = type { %"struct.std::__1::__cxx_atomic_base_impl.60" }
%"struct.std::__1::__cxx_atomic_base_impl.60" = type { i8 }
%"struct.std::__1::atomic.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl.54" }
%"struct.std::__1::__cxx_atomic_impl.54" = type { %"struct.std::__1::__cxx_atomic_base_impl.55" }
%"struct.std::__1::__cxx_atomic_base_impl.55" = type { i8 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.67" = type { %"class.absl::optional_internal::optional_data.68" }
%"class.absl::optional_internal::optional_data.68" = type { %"class.absl::optional_internal::optional_data_base.69" }
%"class.absl::optional_internal::optional_data_base.69" = type { %"class.absl::optional_internal::optional_data_dtor_base.70" }
%"class.absl::optional_internal::optional_data_dtor_base.70" = type { i8, %union.anon.71 }
%union.anon.71 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.views::Background"* }
%"class.views::Background" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.views::Border"* }
%"class.views::Border" = type opaque
%"class.ui::PaintCache" = type <{ %class.sk_sp.84, float, [4 x i8] }>
%class.sk_sp.84 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.85", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { i8* }
%"class.ui::NativeTheme" = type opaque
%"class.absl::optional.89" = type { %"class.absl::optional_internal::optional_data.90" }
%"class.absl::optional_internal::optional_data.90" = type { %"class.absl::optional_internal::optional_data_base.91" }
%"class.absl::optional_internal::optional_data_base.91" = type { %"class.absl::optional_internal::optional_data_dtor_base.92" }
%"class.absl::optional_internal::optional_data_dtor_base.92" = type { i8, %union.anon.93 }
%union.anon.93 = type { i8 }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.std::__1::vector.110"* }
%"class.std::__1::vector.110" = type opaque
%"class.views::ContextMenuController" = type opaque
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.views::ViewTargeterDelegate" = type opaque
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.views::ViewAccessibility"* }
%"class.views::ViewAccessibility" = type opaque
%"class.base::ObserverList.126" = type <{ %"class.std::__1::vector.5", %"class.base::LinkedList.127", i64, i32, [4 x i8] }>
%"class.base::LinkedList.127" = type { %"class.base::LinkNode.128" }
%"class.base::LinkNode.128" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.views::View"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.ui::MouseEvent" = type { %"class.ui::LocatedEvent", i32, %"class.gfx::Vector2dF", %"struct.ui::PointerDetails" }
%"class.ui::LocatedEvent" = type { %"class.ui::Event", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.137" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.130" }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.132" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.base::flat_map.140"* }
%"class.base::flat_map.140" = type opaque
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Vector2dF" = type { float, float }
%"struct.ui::PointerDetails" = type { i32, float, float, float, float, float, float, float, i32, %"class.gfx::Vector2d" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.ui::KeyEvent" = type <{ %"class.ui::Event", i32, i32, i32, i8, [3 x i8], %"class.ui::DomKey", [4 x i8] }>
%"class.ui::DomKey" = type { i32 }
%"class.ui::ScrollEvent" = type <{ %"class.ui::MouseEvent", float, float, float, float, i32, i32, i32, [4 x i8] }>
%"class.ui::TouchEvent" = type <{ %"class.ui::LocatedEvent", i32, i8, i8, [2 x i8], %"struct.ui::PointerDetails", [4 x i8] }>
%"class.ui::GestureEvent" = type <{ %"class.ui::LocatedEvent", %"struct.ui::GestureEventDetails", i32, [4 x i8] }>
%"struct.ui::GestureEventDetails" = type { i32, %"union.ui::GestureEventDetails::Details", i32, i8, i32, i32, %"class.gfx::RectF" }
%"union.ui::GestureEventDetails::Details" = type { %struct.anon }
%struct.anon = type { float, float, i8 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.ui::CancelModeEvent" = type { %"class.ui::Event" }

@_ZTV28OmniboxMouseEnterExitHandler = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.OmniboxMouseEnterExitHandler*)* @_ZN28OmniboxMouseEnterExitHandlerD2Ev to i8*), i8* bitcast (void (%class.OmniboxMouseEnterExitHandler*)* @_ZN28OmniboxMouseEnterExitHandlerD0Ev to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::Event"*)* @_ZN2ui12EventHandler7OnEventEPNS_5EventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::KeyEvent"*)* @_ZN2ui12EventHandler10OnKeyEventEPNS_8KeyEventE to i8*), i8* bitcast (void (%class.OmniboxMouseEnterExitHandler*, %"class.ui::MouseEvent"*)* @_ZN28OmniboxMouseEnterExitHandler12OnMouseEventEPN2ui10MouseEventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::ScrollEvent"*)* @_ZN2ui12EventHandler13OnScrollEventEPNS_11ScrollEventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::TouchEvent"*)* @_ZN2ui12EventHandler12OnTouchEventEPNS_10TouchEventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::GestureEvent"*)* @_ZN2ui12EventHandler14OnGestureEventEPNS_12GestureEventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::CancelModeEvent"*)* @_ZN2ui12EventHandler12OnCancelModeEPNS_15CancelModeEventE to i8*), i8* bitcast ({ i8*, i64 } (%"class.ui::EventHandler"*)* @_ZNK2ui12EventHandler13GetLogContextEv to i8*)] }, align 8

@_ZN28OmniboxMouseEnterExitHandlerC1EN4base17RepeatingCallbackIFvvEEE = hidden unnamed_addr alias void (%class.OmniboxMouseEnterExitHandler*, %"class.base::RepeatingCallback"*), void (%class.OmniboxMouseEnterExitHandler*, %"class.base::RepeatingCallback"*)* @_ZN28OmniboxMouseEnterExitHandlerC2EN4base17RepeatingCallbackIFvvEEE
@_ZN28OmniboxMouseEnterExitHandlerD1Ev = hidden unnamed_addr alias void (%class.OmniboxMouseEnterExitHandler*), void (%class.OmniboxMouseEnterExitHandler*)* @_ZN28OmniboxMouseEnterExitHandlerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28OmniboxMouseEnterExitHandlerC2EN4base17RepeatingCallbackIFvvEEE(%class.OmniboxMouseEnterExitHandler*, %"class.base::RepeatingCallback"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 0
  tail call void @_ZN2ui12EventHandlerC2Ev(%"class.ui::EventHandler"* %3) #8
  %4 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV28OmniboxMouseEnterExitHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %5, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %6) #8
  %7 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #8
  ret void
}

declare void @_ZN2ui12EventHandlerC2Ev(%"class.ui::EventHandler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28OmniboxMouseEnterExitHandlerD2Ev(%class.OmniboxMouseEnterExitHandler*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV28OmniboxMouseEnterExitHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.views::View"**, %"class.views::View"*** %3, align 8
  %5 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load %"class.views::View"**, %"class.views::View"*** %5, align 8
  %7 = icmp eq %"class.views::View"** %4, %6
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 0
  br label %22

10:                                               ; preds = %22
  %11 = load %"class.views::View"**, %"class.views::View"*** %3, align 8
  br label %12

12:                                               ; preds = %10, %1
  %13 = phi %"class.views::View"** [ %11, %10 ], [ %4, %1 ]
  %14 = icmp eq %"class.views::View"** %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  %16 = ptrtoint %"class.views::View"** %13 to i64
  %17 = bitcast %"class.views::View"*** %5 to i64*
  store i64 %16, i64* %17, align 8
  %18 = bitcast %"class.views::View"** %13 to i8*
  tail call void @_ZdlPv(i8* %18) #9
  br label %19

19:                                               ; preds = %12, %15
  %20 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %20) #8
  %21 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 0
  tail call void @_ZN2ui12EventHandlerD2Ev(%"class.ui::EventHandler"* %21) #8
  ret void

22:                                               ; preds = %8, %22
  %23 = phi %"class.views::View"** [ %4, %8 ], [ %28, %22 ]
  %24 = bitcast %"class.views::View"** %23 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 104
  %27 = bitcast i8* %26 to %"class.ui::EventTarget"*
  tail call void @_ZN2ui11EventTarget22RemovePreTargetHandlerEPNS_12EventHandlerE(%"class.ui::EventTarget"* %27, %"class.ui::EventHandler"* %9) #8
  %28 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %23, i64 1
  %29 = icmp eq %"class.views::View"** %28, %6
  br i1 %29, label %10, label %22
}

declare void @_ZN2ui11EventTarget22RemovePreTargetHandlerEPNS_12EventHandlerE(%"class.ui::EventTarget"*, %"class.ui::EventHandler"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui12EventHandlerD2Ev(%"class.ui::EventHandler"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28OmniboxMouseEnterExitHandlerD0Ev(%class.OmniboxMouseEnterExitHandler*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV28OmniboxMouseEnterExitHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.views::View"**, %"class.views::View"*** %3, align 8
  %5 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load %"class.views::View"**, %"class.views::View"*** %5, align 8
  %7 = icmp eq %"class.views::View"** %4, %6
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 0
  br label %19

10:                                               ; preds = %19
  %11 = load %"class.views::View"**, %"class.views::View"*** %3, align 8
  br label %12

12:                                               ; preds = %10, %1
  %13 = phi %"class.views::View"** [ %11, %10 ], [ %4, %1 ]
  %14 = icmp eq %"class.views::View"** %13, null
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = ptrtoint %"class.views::View"** %13 to i64
  %17 = bitcast %"class.views::View"*** %5 to i64*
  store i64 %16, i64* %17, align 8
  %18 = bitcast %"class.views::View"** %13 to i8*
  tail call void @_ZdlPv(i8* %18) #9
  br label %27

19:                                               ; preds = %19, %8
  %20 = phi %"class.views::View"** [ %4, %8 ], [ %25, %19 ]
  %21 = bitcast %"class.views::View"** %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 104
  %24 = bitcast i8* %23 to %"class.ui::EventTarget"*
  tail call void @_ZN2ui11EventTarget22RemovePreTargetHandlerEPNS_12EventHandlerE(%"class.ui::EventTarget"* %24, %"class.ui::EventHandler"* %9) #8
  %25 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %20, i64 1
  %26 = icmp eq %"class.views::View"** %25, %6
  br i1 %26, label %10, label %19

27:                                               ; preds = %12, %15
  %28 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %28) #8
  %29 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 0
  tail call void @_ZN2ui12EventHandlerD2Ev(%"class.ui::EventHandler"* %29) #8
  %30 = bitcast %class.OmniboxMouseEnterExitHandler* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28OmniboxMouseEnterExitHandler23ObserveMouseEnterExitOnEPN5views4ViewE(%class.OmniboxMouseEnterExitHandler*, %"class.views::View"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.views::View"* %1 to i64
  %4 = getelementptr inbounds %"class.views::View", %"class.views::View"* %1, i64 0, i32 4
  %5 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 0
  tail call void @_ZN2ui11EventTarget19AddPreTargetHandlerEPNS_12EventHandlerENS0_8PriorityE(%"class.ui::EventTarget"* %4, %"class.ui::EventHandler"* %5, i32 2) #8
  %6 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load %"class.views::View"**, %"class.views::View"*** %7, align 8
  %9 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.views::View"**, %"class.views::View"*** %9, align 8
  %11 = icmp eq %"class.views::View"** %8, %10
  %12 = ptrtoint %"class.views::View"** %10 to i64
  br i1 %11, label %18, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.views::View"** %8 to i64*
  store i64 %3, i64* %14, align 8
  %15 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %8, i64 1
  %16 = ptrtoint %"class.views::View"** %15 to i64
  %17 = bitcast %"class.views::View"*** %7 to i64*
  store i64 %16, i64* %17, align 8
  br label %75

18:                                               ; preds = %2
  %19 = ptrtoint %"class.views::View"** %8 to i64
  %20 = bitcast %"class.views::View"*** %7 to i64*
  %21 = bitcast %"class.std::__1::vector"* %6 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = ashr exact i64 %23, 3
  %25 = add nsw i64 %24, 1
  %26 = icmp ugt i64 %25, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #10
  unreachable

29:                                               ; preds = %18
  %30 = bitcast %"class.views::View"*** %9 to i64*
  %31 = sub i64 %12, %22
  %32 = ashr exact i64 %31, 3
  %33 = icmp ult i64 %32, 1152921504606846975
  br i1 %33, label %34, label %42

34:                                               ; preds = %29
  %35 = ashr exact i64 %31, 2
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %34
  %40 = icmp ugt i64 %37, 2305843009213693951
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @abort() #10
  unreachable

42:                                               ; preds = %39, %29
  %43 = phi i64 [ %37, %39 ], [ 2305843009213693951, %29 ]
  %44 = shl i64 %43, 3
  %45 = tail call i8* @_Znwm(i64 %44) #9
  %46 = bitcast i8* %45 to %"class.views::View"**
  br label %47

47:                                               ; preds = %42, %34
  %48 = phi i64 [ %43, %42 ], [ 0, %34 ]
  %49 = phi %"class.views::View"** [ %46, %42 ], [ null, %34 ]
  %50 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %49, i64 %24
  %51 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %49, i64 %48
  %52 = ptrtoint %"class.views::View"** %51 to i64
  %53 = bitcast %"class.views::View"** %50 to i64*
  store i64 %3, i64* %53, align 8
  %54 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %50, i64 1
  %55 = ptrtoint %"class.views::View"** %54 to i64
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %57 = load %"class.views::View"**, %"class.views::View"*** %56, align 8
  %58 = load i64, i64* %20, align 8
  %59 = ptrtoint %"class.views::View"** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = sub nsw i64 0, %61
  %63 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %50, i64 %62
  %64 = ptrtoint %"class.views::View"** %63 to i64
  %65 = icmp sgt i64 %60, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %47
  %67 = bitcast %"class.views::View"** %63 to i8*
  %68 = bitcast %"class.views::View"** %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 %60, i1 false) #8
  %69 = load %"class.views::View"**, %"class.views::View"*** %56, align 8
  br label %70

70:                                               ; preds = %66, %47
  %71 = phi %"class.views::View"** [ %57, %47 ], [ %69, %66 ]
  store i64 %64, i64* %21, align 8
  store i64 %55, i64* %20, align 8
  store i64 %52, i64* %30, align 8
  %72 = icmp eq %"class.views::View"** %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = bitcast %"class.views::View"** %71 to i8*
  tail call void @_ZdlPv(i8* %74) #9
  br label %75

75:                                               ; preds = %13, %70, %73
  ret void
}

declare void @_ZN2ui11EventTarget19AddPreTargetHandlerEPNS_12EventHandlerENS0_8PriorityE(%"class.ui::EventTarget"*, %"class.ui::EventHandler"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28OmniboxMouseEnterExitHandler12OnMouseEventEPN2ui10MouseEventE(%class.OmniboxMouseEnterExitHandler* nocapture readonly, %"class.ui::MouseEvent"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, -5
  %6 = icmp ult i32 %5, 2
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.OmniboxMouseEnterExitHandler, %class.OmniboxMouseEnterExitHandler* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %11 = bitcast void ()** %10 to void (%"class.base::internal::BindStateBase"*)**
  %12 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %11, align 8
  tail call void %12(%"class.base::internal::BindStateBase"* %9) #8
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

declare void @_ZN2ui12EventHandler7OnEventEPNS_5EventE(%"class.ui::EventHandler"*, %"class.ui::Event"*) unnamed_addr #1

declare void @_ZN2ui12EventHandler10OnKeyEventEPNS_8KeyEventE(%"class.ui::EventHandler"*, %"class.ui::KeyEvent"*) unnamed_addr #1

declare void @_ZN2ui12EventHandler13OnScrollEventEPNS_11ScrollEventE(%"class.ui::EventHandler"*, %"class.ui::ScrollEvent"*) unnamed_addr #1

declare void @_ZN2ui12EventHandler12OnTouchEventEPNS_10TouchEventE(%"class.ui::EventHandler"*, %"class.ui::TouchEvent"*) unnamed_addr #1

declare void @_ZN2ui12EventHandler14OnGestureEventEPNS_12GestureEventE(%"class.ui::EventHandler"*, %"class.ui::GestureEvent"*) unnamed_addr #1

declare void @_ZN2ui12EventHandler12OnCancelModeEPNS_15CancelModeEventE(%"class.ui::EventHandler"*, %"class.ui::CancelModeEvent"*) unnamed_addr #1

declare { i8*, i64 } @_ZNK2ui12EventHandler13GetLogContextEv(%"class.ui::EventHandler"*) unnamed_addr #1

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
