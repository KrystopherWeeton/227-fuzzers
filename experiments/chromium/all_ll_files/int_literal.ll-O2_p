; ModuleID = '../../third_party/dawn/third_party/tint/src/ast/int_literal.cc'
source_filename = "../../third_party/dawn/third_party/tint/src/ast/int_literal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.tint::TypeInfo" = type { %"struct.tint::TypeInfo"*, i8* }
%"class.tint::ast::IntLiteral" = type <{ %"class.tint::Castable", i32, [4 x i8] }>
%"class.tint::Castable" = type { %"class.tint::ast::Literal" }
%"class.tint::ast::Literal" = type { %"class.tint::Castable.0" }
%"class.tint::Castable.0" = type { %"class.tint::ast::Node" }
%"class.tint::ast::Node" = type { %"class.tint::Castable.1", %"class.tint::ProgramID", %"class.tint::Source" }
%"class.tint::Castable.1" = type { %"class.tint::Cloneable" }
%"class.tint::Cloneable" = type { %"class.tint::Castable.2" }
%"class.tint::Castable.2" = type { %"class.tint::CastableBase" }
%"class.tint::CastableBase" = type { i32 (...)** }
%"class.tint::ProgramID" = type { i32 }
%"class.tint::Source" = type { %"class.tint::Source::Range", %"class.std::__1::basic_string", %"class.tint::Source::FileContent"* }
%"class.tint::Source::Range" = type { %"class.tint::Source::Location", %"class.tint::Source::Location" }
%"class.tint::Source::Location" = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.tint::Source::FileContent" = type { %"class.std::__1::basic_string", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::basic_string"* }
%"class.tint::sem::Info" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZNK4tint8CastableINS_3ast10IntLiteralENS1_7LiteralEE8TypeInfoEv = comdat any

@_ZN4tint6detail10TypeInfoOfINS_3ast7LiteralEE4infoE = external global %"struct.tint::TypeInfo", align 8
@.str = private unnamed_addr constant [22 x i8] c"tint::ast::IntLiteral\00", align 1
@_ZN4tint6detail10TypeInfoOfINS_3ast10IntLiteralEE4infoE = hidden constant %"struct.tint::TypeInfo" { %"struct.tint::TypeInfo"* @_ZN4tint6detail10TypeInfoOfINS_3ast7LiteralEE4infoE, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i32 0, i32 0) }, align 8
@_ZTVN4tint3ast10IntLiteralE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.tint::ast::IntLiteral"*)* @_ZN4tint3ast10IntLiteralD2Ev to i8*), i8* bitcast (void (%"class.tint::ast::IntLiteral"*)* @_ZN4tint3ast10IntLiteralD0Ev to i8*), i8* bitcast (%"struct.tint::TypeInfo"* (%"class.tint::Castable"*)* @_ZNK4tint8CastableINS_3ast10IntLiteralENS1_7LiteralEE8TypeInfoEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.tint::ast::Literal"*, %"class.tint::sem::Info"*, %"class.std::__1::basic_ostream"*, i64)* @_ZNK4tint3ast7Literal6to_strERKNS_3sem4InfoERNSt3__113basic_ostreamIcNS6_11char_traitsIcEEEEm to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN4tint3ast10IntLiteralD1Ev = hidden unnamed_addr alias void (%"class.tint::ast::IntLiteral"*), void (%"class.tint::ast::IntLiteral"*)* @_ZN4tint3ast10IntLiteralD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint3ast10IntLiteralC2ENS_9ProgramIDERKNS_6SourceEj(%"class.tint::ast::IntLiteral"*, i32, %"class.tint::Source"* dereferenceable(64), i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.tint::ast::IntLiteral", %"class.tint::ast::IntLiteral"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4tint3ast7LiteralC2ENS_9ProgramIDERKNS_6SourceE(%"class.tint::ast::Literal"* %5, i32 %1, %"class.tint::Source"* dereferenceable(64) %2) #5
  %6 = getelementptr inbounds %"class.tint::ast::IntLiteral", %"class.tint::ast::IntLiteral"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4tint3ast10IntLiteralE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.tint::ast::IntLiteral", %"class.tint::ast::IntLiteral"* %0, i64 0, i32 1
  store i32 %3, i32* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint3ast10IntLiteralD2Ev(%"class.tint::ast::IntLiteral"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tint::ast::IntLiteral", %"class.tint::ast::IntLiteral"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4tint3ast7LiteralD2Ev(%"class.tint::ast::Literal"* %2) #5
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4tint3ast10IntLiteralD0Ev(%"class.tint::ast::IntLiteral"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.tint::TypeInfo"* @_ZNK4tint8CastableINS_3ast10IntLiteralENS1_7LiteralEE8TypeInfoEv(%"class.tint::Castable"*) unnamed_addr #0 comdat align 2 {
  ret %"struct.tint::TypeInfo"* @_ZN4tint6detail10TypeInfoOfINS_3ast10IntLiteralEE4infoE
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZNK4tint3ast7Literal6to_strERKNS_3sem4InfoERNSt3__113basic_ostreamIcNS6_11char_traitsIcEEEEm(%"class.tint::ast::Literal"*, %"class.tint::sem::Info"*, %"class.std::__1::basic_ostream"* dereferenceable(160), i64) unnamed_addr #3

declare void @_ZN4tint3ast7LiteralC2ENS_9ProgramIDERKNS_6SourceE(%"class.tint::ast::Literal"*, i32, %"class.tint::Source"* dereferenceable(64)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4tint3ast7LiteralD2Ev(%"class.tint::ast::Literal"*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
