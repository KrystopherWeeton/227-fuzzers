; ModuleID = '../../v8/src/base/platform/platform-posix-time.cc'
source_filename = "../../v8/src/base/platform/platform-posix-time.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::base::PosixDefaultTimezoneCache" = type { %"class.v8::base::PosixTimezoneCache" }
%"class.v8::base::PosixTimezoneCache" = type { %"class.v8::base::TimezoneCache" }
%"class.v8::base::TimezoneCache" = type { i32 (...)** }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }

$_ZN2v84base18PosixTimezoneCache5ClearENS0_13TimezoneCache17TimeZoneDetectionE = comdat any

$_ZN2v84base13TimezoneCacheD2Ev = comdat any

$_ZN2v84base25PosixDefaultTimezoneCacheD0Ev = comdat any

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN2v84base25PosixDefaultTimezoneCacheE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.v8::base::PosixDefaultTimezoneCache"*, double)* @_ZN2v84base25PosixDefaultTimezoneCache13LocalTimezoneEd to i8*), i8* bitcast (double (%"class.v8::base::PosixTimezoneCache"*, double)* @_ZN2v84base18PosixTimezoneCache21DaylightSavingsOffsetEd to i8*), i8* bitcast (double (%"class.v8::base::PosixDefaultTimezoneCache"*, double, i1)* @_ZN2v84base25PosixDefaultTimezoneCache15LocalTimeOffsetEdb to i8*), i8* bitcast (void (%"class.v8::base::PosixTimezoneCache"*, i32)* @_ZN2v84base18PosixTimezoneCache5ClearENS0_13TimezoneCache17TimeZoneDetectionE to i8*), i8* bitcast (void (%"class.v8::base::TimezoneCache"*)* @_ZN2v84base13TimezoneCacheD2Ev to i8*), i8* bitcast (void (%"class.v8::base::PosixDefaultTimezoneCache"*)* @_ZN2v84base25PosixDefaultTimezoneCacheD0Ev to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v84base25PosixDefaultTimezoneCache13LocalTimezoneEd(%"class.v8::base::PosixDefaultTimezoneCache"* nocapture readnone, double) unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.tm, align 8
  %5 = fcmp uno double %1, 0.000000e+00
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6
  %8 = fdiv double %1, 1.000000e+03
  %9 = tail call double @llvm.floor.f64(double %8)
  %10 = fptosi double %9 to i64
  store i64 %10, i64* %3, align 8
  %11 = bitcast %struct.tm* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #6
  %12 = call %struct.tm* @localtime_r(i64* nonnull %3, %struct.tm* nonnull %4) #6
  %13 = icmp eq %struct.tm* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %struct.tm, %struct.tm* %12, i64 0, i32 10
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  %18 = select i1 %17, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %16
  br label %19

19:                                               ; preds = %14, %6
  %20 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %6 ], [ %18, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6
  br label %21

21:                                               ; preds = %2, %19
  %22 = phi i8* [ %20, %19 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %2 ]
  ret i8* %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #2

; Function Attrs: nounwind
declare %struct.tm* @localtime_r(i64*, %struct.tm*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN2v84base25PosixDefaultTimezoneCache15LocalTimeOffsetEdb(%"class.v8::base::PosixDefaultTimezoneCache"* nocapture readnone, double, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.tm, align 8
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = tail call i64 @time(i64* null) #6
  store i64 %7, i64* %4, align 8
  %8 = bitcast %struct.tm* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #6
  %9 = call %struct.tm* @localtime_r(i64* nonnull %4, %struct.tm* nonnull %5) #6
  %10 = getelementptr inbounds %struct.tm, %struct.tm* %9, i64 0, i32 9
  %11 = load i64, i64* %10, align 8
  %12 = mul nsw i64 %11, 1000
  %13 = getelementptr inbounds %struct.tm, %struct.tm* %9, i64 0, i32 8
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %14, 0
  %16 = select i1 %15, i64 3600000, i64 0
  %17 = sub nsw i64 %12, %16
  %18 = sitofp i64 %17 to double
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  ret double %18
}

; Function Attrs: nounwind
declare i64 @time(i64*) local_unnamed_addr #3

declare double @_ZN2v84base18PosixTimezoneCache21DaylightSavingsOffsetEd(%"class.v8::base::PosixTimezoneCache"*, double) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base18PosixTimezoneCache5ClearENS0_13TimezoneCache17TimeZoneDetectionE(%"class.v8::base::PosixTimezoneCache"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base13TimezoneCacheD2Ev(%"class.v8::base::TimezoneCache"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base25PosixDefaultTimezoneCacheD0Ev(%"class.v8::base::PosixDefaultTimezoneCache"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::base::PosixDefaultTimezoneCache"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
