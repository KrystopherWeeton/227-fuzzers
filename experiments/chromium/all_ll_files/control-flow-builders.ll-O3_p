; ModuleID = '../../v8/src/interpreter/control-flow-builders.cc'
source_filename = "../../v8/src/interpreter/control-flow-builders.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::interpreter::BreakableControlFlowBuilder" = type { %"class.v8::internal::interpreter::ControlFlowBuilder", %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::AstNode"*, %"class.v8::internal::interpreter::BlockCoverageBuilder"* }
%"class.v8::internal::interpreter::ControlFlowBuilder" = type { i32 (...)**, %"class.v8::internal::interpreter::BytecodeArrayBuilder"* }
%"class.v8::internal::interpreter::BytecodeArrayBuilder" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::FeedbackVectorSpec"*, i8, %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::HandlerTableBuilder", i32, i32, %"class.v8::internal::interpreter::BytecodeRegisterAllocator", %"class.v8::internal::interpreter::BytecodeArrayWriter", %"class.v8::internal::interpreter::BytecodeRegisterOptimizer"*, %"class.v8::internal::interpreter::BytecodeSourceInfo", %"class.v8::internal::interpreter::BytecodeSourceInfo" }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.11" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::set.11" = type { %"class.std::__1::__tree.12" }
%"class.std::__1::__tree.12" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::FeedbackVectorSpec" = type <{ %"class.v8::internal::ZoneVector", i32, [4 x i8] }>
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::interpreter::ConstantArrayBuilder" = type { [3 x %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*], %"class.v8::base::TemplateHashMapImpl", %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneVector.36", %"class.v8::internal::ZoneMap.43", i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice" = type { i64, i64, i64, i8, %"class.v8::internal::ZoneVector.21" }
%"class.v8::internal::ZoneVector.21" = type { %"class.std::__1::vector.22" }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*, %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*, %"class.std::__1::__compressed_pair.26" }
%"class.v8::internal::interpreter::ConstantArrayBuilder::Entry" = type <{ %union.anon, i8, [7 x i8] }>
%union.anon = type { %"class.v8::internal::Handle" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27", %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.v8::internal::ZoneAllocator.29" }
%"class.v8::internal::ZoneAllocator.29" = type { %"class.v8::internal::Zone"* }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::internal::ZoneAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::internal::ZoneAllocationPolicy>::Impl" = type { %"class.v8::internal::ZoneAllocationPolicy", %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"struct.v8::base::TemplateHashMapEntry" = type opaque
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.30" }
%"class.std::__1::__tree.30" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.v8::internal::ZoneAllocator.33" }
%"class.v8::internal::ZoneAllocator.33" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ZoneVector.36" = type { %"class.std::__1::vector.37" }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.39" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40", %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.v8::internal::ZoneAllocator.42" }
%"class.v8::internal::ZoneAllocator.42" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneMap.43" = type { %"class.std::__1::map.44" }
%"class.std::__1::map.44" = type { %"class.std::__1::__tree.45" }
%"class.std::__1::__tree.45" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.v8::internal::ZoneAllocator.48" }
%"class.v8::internal::ZoneAllocator.48" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::interpreter::HandlerTableBuilder" = type { %"class.v8::internal::ZoneVector.54" }
%"class.v8::internal::ZoneVector.54" = type { %"class.std::__1::vector.55" }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"struct.v8::internal::interpreter::HandlerTableBuilder::Entry"*, %"struct.v8::internal::interpreter::HandlerTableBuilder::Entry"*, %"class.std::__1::__compressed_pair.57" }
%"struct.v8::internal::interpreter::HandlerTableBuilder::Entry" = type { i64, i64, i64, %"class.v8::internal::interpreter::Register", i32 }
%"class.v8::internal::interpreter::Register" = type { i32 }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58", %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.v8::internal::interpreter::HandlerTableBuilder::Entry"* }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.v8::internal::ZoneAllocator.60" }
%"class.v8::internal::ZoneAllocator.60" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::interpreter::BytecodeRegisterAllocator" = type { i32, i32, %"class.v8::internal::interpreter::BytecodeRegisterAllocator::Observer"* }
%"class.v8::internal::interpreter::BytecodeRegisterAllocator::Observer" = type { i32 (...)** }
%"class.v8::internal::interpreter::BytecodeArrayWriter" = type <{ i32, i32, i32, [4 x i8], %"class.v8::internal::ZoneVector.61", i32, [4 x i8], %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"*, i8, [7 x i8], i64, i8, i8, i8, [5 x i8] }>
%"class.v8::internal::ZoneVector.61" = type { %"class.std::__1::vector.62" }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { i8*, i8*, %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65", %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.65" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.v8::internal::ZoneAllocator.67" }
%"class.v8::internal::ZoneAllocator.67" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::SourcePositionTableBuilder" = type { i32, %"class.v8::internal::ZoneVector.61", %"struct.v8::internal::PositionTableEntry" }
%"struct.v8::internal::PositionTableEntry" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.v8::internal::interpreter::BytecodeRegisterOptimizer" = type opaque
%"class.v8::internal::interpreter::BytecodeSourceInfo" = type { i8, i32 }
%"class.v8::internal::interpreter::BytecodeLabels" = type <{ %"class.v8::internal::ZoneLinkedList", i8, [7 x i8] }>
%"class.v8::internal::ZoneLinkedList" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.68" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.v8::internal::ZoneAllocator.70" }
%"class.v8::internal::ZoneAllocator.70" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::AstNode" = type { i32, i32 }
%"class.v8::internal::interpreter::BlockCoverageBuilder" = type { %"class.v8::internal::ZoneVector.71", %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::SourceRangeMap"* }
%"class.v8::internal::ZoneVector.71" = type { %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::SourceRange"*, %"struct.v8::internal::SourceRange"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::SourceRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75", %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::SourceRange"* }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.v8::internal::ZoneAllocator.77" }
%"class.v8::internal::ZoneAllocator.77" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::SourceRangeMap" = type { %"class.v8::internal::ZoneMap.78" }
%"class.v8::internal::ZoneMap.78" = type { %"class.std::__1::map.79" }
%"class.std::__1::map.79" = type { %"class.std::__1::__tree.80" }
%"class.std::__1::__tree.80" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.v8::internal::ZoneAllocator.83" }
%"class.v8::internal::ZoneAllocator.83" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::interpreter::LoopBuilder" = type { %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BytecodeLoopHeader", %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels", i32, i32 }
%"class.v8::internal::interpreter::BytecodeLoopHeader" = type { i64 }
%"class.v8::internal::interpreter::SwitchBuilder" = type { %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::ZoneVector.89" }
%"class.v8::internal::ZoneVector.89" = type { %"class.std::__1::vector.90" }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %"class.v8::internal::interpreter::BytecodeLabel"*, %"class.v8::internal::interpreter::BytecodeLabel"*, %"class.std::__1::__compressed_pair.92" }
%"class.v8::internal::interpreter::BytecodeLabel" = type { i8, i64 }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.v8::internal::interpreter::BytecodeLabel"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.v8::internal::ZoneAllocator.95" }
%"class.v8::internal::ZoneAllocator.95" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::interpreter::TryCatchBuilder" = type { %"class.v8::internal::interpreter::ControlFlowBuilder", i32, i32, %"class.v8::internal::interpreter::BytecodeLabel", %"class.v8::internal::interpreter::BlockCoverageBuilder"*, %"class.v8::internal::TryCatchStatement"* }
%"class.v8::internal::TryCatchStatement" = type <{ %"class.v8::internal::TryStatement", %"class.v8::internal::Scope"*, %"class.v8::internal::Block"*, i32, [4 x i8] }>
%"class.v8::internal::TryStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::Block"* }
%"class.v8::internal::Statement" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::Scope" = type opaque
%"class.v8::internal::Block" = type { %"class.v8::internal::BreakableStatement", %"class.v8::internal::ZoneList", %"class.v8::internal::Scope"* }
%"class.v8::internal::BreakableStatement" = type { %"class.v8::internal::Statement" }
%"class.v8::internal::ZoneList" = type { %"class.v8::internal::Statement"**, i32, i32 }
%"class.v8::internal::interpreter::TryFinallyBuilder" = type { %"class.v8::internal::interpreter::ControlFlowBuilder", i32, i32, %"class.v8::internal::interpreter::BytecodeLabel", %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BlockCoverageBuilder"*, %"class.v8::internal::TryFinallyStatement"* }
%"class.v8::internal::TryFinallyStatement" = type { %"class.v8::internal::TryStatement", %"class.v8::internal::Block"* }
%"class.v8::internal::interpreter::ConditionalControlFlowBuilder" = type { %"class.v8::internal::interpreter::ControlFlowBuilder", %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::AstNode"*, i32, i32, %"class.v8::internal::interpreter::BlockCoverageBuilder"* }
%"class.v8::internal::ZoneObject" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.96" }
%"struct.std::__1::pair.96" = type { %"class.v8::internal::ZoneObject"*, %"class.v8::internal::AstNodeSourceRanges"* }
%"class.v8::internal::AstNodeSourceRanges" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::CaseClause" = type { %"class.v8::internal::Expression"*, %"class.v8::internal::ZoneList" }
%"class.v8::internal::Expression" = type { %"class.v8::internal::AstNode" }

$_ZN2v88internal11interpreter20BlockCoverageBuilder21IncrementBlockCounterEPNS0_10ZoneObjectENS0_15SourceRangeKindE = comdat any

@_ZTVN2v88internal11interpreter27BreakableControlFlowBuilderE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::interpreter::BreakableControlFlowBuilder"*)* @_ZN2v88internal11interpreter27BreakableControlFlowBuilderD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::interpreter::BreakableControlFlowBuilder"*)* @_ZN2v88internal11interpreter27BreakableControlFlowBuilderD0Ev to i8*)] }, align 8
@_ZTVN2v88internal11interpreter11LoopBuilderE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::interpreter::LoopBuilder"*)* @_ZN2v88internal11interpreter11LoopBuilderD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::interpreter::LoopBuilder"*)* @_ZN2v88internal11interpreter11LoopBuilderD0Ev to i8*)] }, align 8
@_ZTVN2v88internal11interpreter13SwitchBuilderE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::interpreter::SwitchBuilder"*)* @_ZN2v88internal11interpreter13SwitchBuilderD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::interpreter::SwitchBuilder"*)* @_ZN2v88internal11interpreter13SwitchBuilderD0Ev to i8*)] }, align 8
@_ZTVN2v88internal11interpreter15TryCatchBuilderE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::interpreter::TryCatchBuilder"*)* @_ZN2v88internal11interpreter15TryCatchBuilderD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::interpreter::TryCatchBuilder"*)* @_ZN2v88internal11interpreter15TryCatchBuilderD0Ev to i8*)] }, align 8
@_ZTVN2v88internal11interpreter17TryFinallyBuilderE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::interpreter::TryFinallyBuilder"*)* @_ZN2v88internal11interpreter17TryFinallyBuilderD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::interpreter::TryFinallyBuilder"*)* @_ZN2v88internal11interpreter17TryFinallyBuilderD0Ev to i8*)] }, align 8
@_ZTVN2v88internal11interpreter29ConditionalControlFlowBuilderE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::interpreter::ConditionalControlFlowBuilder"*)* @_ZN2v88internal11interpreter29ConditionalControlFlowBuilderD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::interpreter::ConditionalControlFlowBuilder"*)* @_ZN2v88internal11interpreter29ConditionalControlFlowBuilderD0Ev to i8*)] }, align 8

@_ZN2v88internal11interpreter27BreakableControlFlowBuilderD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::interpreter::BreakableControlFlowBuilder"*), void (%"class.v8::internal::interpreter::BreakableControlFlowBuilder"*)* @_ZN2v88internal11interpreter27BreakableControlFlowBuilderD2Ev
@_ZN2v88internal11interpreter11LoopBuilderD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::interpreter::LoopBuilder"*), void (%"class.v8::internal::interpreter::LoopBuilder"*)* @_ZN2v88internal11interpreter11LoopBuilderD2Ev
@_ZN2v88internal11interpreter13SwitchBuilderD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::interpreter::SwitchBuilder"*), void (%"class.v8::internal::interpreter::SwitchBuilder"*)* @_ZN2v88internal11interpreter13SwitchBuilderD2Ev
@_ZN2v88internal11interpreter15TryCatchBuilderD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::interpreter::TryCatchBuilder"*), void (%"class.v8::internal::interpreter::TryCatchBuilder"*)* @_ZN2v88internal11interpreter15TryCatchBuilderD2Ev
@_ZN2v88internal11interpreter17TryFinallyBuilderD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::interpreter::TryFinallyBuilder"*), void (%"class.v8::internal::interpreter::TryFinallyBuilder"*)* @_ZN2v88internal11interpreter17TryFinallyBuilderD2Ev
@_ZN2v88internal11interpreter29ConditionalControlFlowBuilderD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::interpreter::ConditionalControlFlowBuilder"*), void (%"class.v8::internal::interpreter::ConditionalControlFlowBuilder"*)* @_ZN2v88internal11interpreter29ConditionalControlFlowBuilderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter27BreakableControlFlowBuilderD2Ev(%"class.v8::internal::interpreter::BreakableControlFlowBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal11interpreter27BreakableControlFlowBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %4, align 8
  tail call void @_ZN2v88internal11interpreter14BytecodeLabels4BindEPNS1_20BytecodeArrayBuilderE(%"class.v8::internal::interpreter::BytecodeLabels"* %3, %"class.v8::internal::interpreter::BytecodeArrayBuilder"* %5) #5
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 3
  %7 = load %"class.v8::internal::interpreter::BlockCoverageBuilder"*, %"class.v8::internal::interpreter::BlockCoverageBuilder"** %6, align 8
  %8 = icmp eq %"class.v8::internal::interpreter::BlockCoverageBuilder"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 2
  %11 = bitcast %"class.v8::internal::AstNode"** %10 to %"class.v8::internal::ZoneObject"**
  %12 = load %"class.v8::internal::ZoneObject"*, %"class.v8::internal::ZoneObject"** %11, align 8
  tail call void @_ZN2v88internal11interpreter20BlockCoverageBuilder21IncrementBlockCounterEPNS0_10ZoneObjectENS0_15SourceRangeKindE(%"class.v8::internal::interpreter::BlockCoverageBuilder"* nonnull %7, %"class.v8::internal::ZoneObject"* %12, i32 2)
  br label %13

13:                                               ; preds = %1, %9
  %14 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %40, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__list_node_base"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %19, i64 0, i32 0
  %27 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %27, i64 0, i32 1
  %29 = bitcast %"struct.std::__1::__list_node_base"** %28 to i64*
  store i64 %25, i64* %29, align 8
  %30 = bitcast %"struct.std::__1::__list_node_base"* %19 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"struct.std::__1::__list_node_base"** %23 to i64**
  %33 = load i64*, i64** %32, align 8
  store i64 %31, i64* %33, align 8
  store i64 0, i64* %14, align 8
  %34 = icmp eq %"struct.std::__1::__list_node_base"* %19, %20
  br i1 %34, label %40, label %35

35:                                               ; preds = %17, %35
  %36 = phi %"struct.std::__1::__list_node_base"* [ %38, %35 ], [ %19, %17 ]
  %37 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %36, i64 0, i32 1
  %38 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__list_node_base"* %38, %20
  br i1 %39, label %40, label %35

40:                                               ; preds = %35, %13, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter27BreakableControlFlowBuilder15BindBreakTargetEv(%"class.v8::internal::interpreter::BreakableControlFlowBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %3, align 8
  tail call void @_ZN2v88internal11interpreter14BytecodeLabels4BindEPNS1_20BytecodeArrayBuilderE(%"class.v8::internal::interpreter::BytecodeLabels"* %2, %"class.v8::internal::interpreter::BytecodeArrayBuilder"* %4) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11interpreter20BlockCoverageBuilder21IncrementBlockCounterEPNS0_10ZoneObjectENS0_15SourceRangeKindE(%"class.v8::internal::interpreter::BlockCoverageBuilder"*, %"class.v8::internal::ZoneObject"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::BlockCoverageBuilder", %"class.v8::internal::interpreter::BlockCoverageBuilder"* %0, i64 0, i32 2
  %5 = load %"class.v8::internal::SourceRangeMap"*, %"class.v8::internal::SourceRangeMap"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %288, label %10

10:                                               ; preds = %3, %10
  %11 = phi %"class.std::__1::__tree_end_node"* [ %21, %10 ], [ %6, %3 ]
  %12 = phi %"class.std::__1::__tree_node"* [ %22, %10 ], [ %8, %3 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.v8::internal::ZoneObject"*, %"class.v8::internal::ZoneObject"** %13, align 8
  %15 = icmp ult %"class.v8::internal::ZoneObject"* %14, %1
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__tree_node_base"** %16 to %"class.std::__1::__tree_node"**
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node"* %12 to %"class.std::__1::__tree_node"**
  %20 = select i1 %15, %"class.std::__1::__tree_node"** %17, %"class.std::__1::__tree_node"** %19
  %21 = select i1 %15, %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"* %18
  %22 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %23 = icmp eq %"class.std::__1::__tree_node"* %22, null
  br i1 %23, label %24, label %10

24:                                               ; preds = %10
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %21, %6
  br i1 %25, label %288, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.v8::internal::ZoneObject"**
  %29 = load %"class.v8::internal::ZoneObject"*, %"class.v8::internal::ZoneObject"** %28, align 8
  %30 = icmp ugt %"class.v8::internal::ZoneObject"* %29, %1
  br i1 %30, label %288, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 5
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.v8::internal::AstNodeSourceRanges"**
  %34 = load %"class.v8::internal::AstNodeSourceRanges"*, %"class.v8::internal::AstNodeSourceRanges"** %33, align 8
  %35 = icmp eq %"class.v8::internal::AstNodeSourceRanges"* %34, null
  br i1 %35, label %288, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.v8::internal::AstNodeSourceRanges"* %34 to i64 (%"class.v8::internal::AstNodeSourceRanges"*, i32)***
  %38 = load i64 (%"class.v8::internal::AstNodeSourceRanges"*, i32)**, i64 (%"class.v8::internal::AstNodeSourceRanges"*, i32)*** %37, align 8
  %39 = getelementptr inbounds i64 (%"class.v8::internal::AstNodeSourceRanges"*, i32)*, i64 (%"class.v8::internal::AstNodeSourceRanges"*, i32)** %38, i64 2
  %40 = load i64 (%"class.v8::internal::AstNodeSourceRanges"*, i32)*, i64 (%"class.v8::internal::AstNodeSourceRanges"*, i32)** %39, align 8
  %41 = tail call i64 %40(%"class.v8::internal::AstNodeSourceRanges"* nonnull %34, i32 %2) #5
  %42 = trunc i64 %41 to i32
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %288, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.v8::internal::interpreter::BlockCoverageBuilder", %"class.v8::internal::interpreter::BlockCoverageBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %46 = bitcast %"struct.v8::internal::SourceRange"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.v8::internal::interpreter::BlockCoverageBuilder"* %0 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = lshr exact i64 %50, 3
  %52 = trunc i64 %51 to i32
  %53 = inttoptr i64 %47 to %"struct.v8::internal::SourceRange"*
  %54 = getelementptr inbounds %"class.v8::internal::interpreter::BlockCoverageBuilder", %"class.v8::internal::interpreter::BlockCoverageBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %55 = load %"struct.v8::internal::SourceRange"*, %"struct.v8::internal::SourceRange"** %54, align 8
  %56 = icmp ugt %"struct.v8::internal::SourceRange"* %55, %53
  %57 = ptrtoint %"struct.v8::internal::SourceRange"* %55 to i64
  br i1 %56, label %58, label %62

58:                                               ; preds = %44
  %59 = inttoptr i64 %47 to i64*
  store i64 %41, i64* %59, align 4
  %60 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %53, i64 1
  %61 = ptrtoint %"struct.v8::internal::SourceRange"* %60 to i64
  store i64 %61, i64* %46, align 8
  br label %282

62:                                               ; preds = %44
  %63 = ashr exact i64 %50, 3
  %64 = add nsw i64 %63, 1
  %65 = icmp ugt i64 %64, 268435455
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = bitcast %"class.v8::internal::interpreter::BlockCoverageBuilder"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %67) #6
  unreachable

68:                                               ; preds = %62
  %69 = bitcast %"struct.v8::internal::SourceRange"** %54 to i64*
  %70 = sub i64 %57, %49
  %71 = ashr exact i64 %70, 3
  %72 = icmp ult i64 %71, 134217727
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = ashr exact i64 %70, 2
  %75 = icmp ult i64 %74, %64
  %76 = select i1 %75, i64 %64, i64 %74
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %96, label %78

78:                                               ; preds = %73, %68
  %79 = phi i64 [ %76, %73 ], [ 268435455, %68 ]
  %80 = getelementptr inbounds %"class.v8::internal::interpreter::BlockCoverageBuilder", %"class.v8::internal::interpreter::BlockCoverageBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %81 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %80, align 8
  %82 = shl i64 %79, 3
  %83 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %81, i64 0, i32 2
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %81, i64 0, i32 3
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %86, %84
  %88 = icmp ugt i64 %82, %87
  br i1 %88, label %89, label %91, !prof !2

89:                                               ; preds = %78
  %90 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %81, i64 %82) #5
  br label %93

91:                                               ; preds = %78
  %92 = add i64 %84, %82
  store i64 %92, i64* %83, align 8
  br label %93

93:                                               ; preds = %91, %89
  %94 = phi i64 [ %90, %89 ], [ %84, %91 ]
  %95 = inttoptr i64 %94 to %"struct.v8::internal::SourceRange"*
  br label %96

96:                                               ; preds = %93, %73
  %97 = phi i64 [ %79, %93 ], [ 0, %73 ]
  %98 = phi %"struct.v8::internal::SourceRange"* [ %95, %93 ], [ null, %73 ]
  %99 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %98, i64 %63
  %100 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %98, i64 %97
  %101 = ptrtoint %"struct.v8::internal::SourceRange"* %100 to i64
  %102 = bitcast %"struct.v8::internal::SourceRange"* %99 to i64*
  store i64 %41, i64* %102, align 4
  %103 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %99, i64 1
  %104 = ptrtoint %"struct.v8::internal::SourceRange"* %103 to i64
  %105 = getelementptr inbounds %"class.v8::internal::interpreter::BlockCoverageBuilder", %"class.v8::internal::interpreter::BlockCoverageBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.v8::internal::SourceRange"*, %"struct.v8::internal::SourceRange"** %105, align 8
  %107 = ptrtoint %"struct.v8::internal::SourceRange"* %106 to i64
  %108 = load %"struct.v8::internal::SourceRange"*, %"struct.v8::internal::SourceRange"** %45, align 8
  %109 = icmp eq %"struct.v8::internal::SourceRange"* %108, %106
  br i1 %109, label %279, label %110

110:                                              ; preds = %96
  %111 = getelementptr %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %108, i64 -1, i32 0
  %112 = ptrtoint i32* %111 to i64
  %113 = sub i64 %112, %107
  %114 = lshr i64 %113, 3
  %115 = add nuw nsw i64 %114, 1
  %116 = icmp ult i64 %115, 4
  br i1 %116, label %209, label %117

117:                                              ; preds = %110
  %118 = getelementptr %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %108, i64 -1, i32 0
  %119 = ptrtoint i32* %118 to i64
  %120 = sub i64 %119, %107
  %121 = lshr i64 %120, 3
  %122 = xor i64 %121, -1
  %123 = add nsw i64 %63, %122
  %124 = getelementptr %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %98, i64 %123
  %125 = xor i64 %121, -1
  %126 = getelementptr %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %108, i64 %125
  %127 = icmp ult %"struct.v8::internal::SourceRange"* %124, %108
  %128 = icmp ult %"struct.v8::internal::SourceRange"* %126, %99
  %129 = and i1 %127, %128
  br i1 %129, label %209, label %130

130:                                              ; preds = %117
  %131 = and i64 %115, 4611686018427387900
  %132 = sub nsw i64 0, %131
  %133 = getelementptr %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %99, i64 %132
  %134 = sub nsw i64 0, %131
  %135 = getelementptr %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %108, i64 %134
  %136 = add nsw i64 %131, -4
  %137 = lshr exact i64 %136, 2
  %138 = add nuw nsw i64 %137, 1
  %139 = and i64 %138, 1
  %140 = icmp eq i64 %136, 0
  br i1 %140, label %187, label %141

141:                                              ; preds = %130
  %142 = sub nuw nsw i64 %138, %139
  %143 = getelementptr %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %99, i64 -1
  %144 = getelementptr %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %108, i64 -1
  %145 = getelementptr %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %99, i64 -1
  %146 = getelementptr %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %108, i64 -1
  br label %147

147:                                              ; preds = %147, %141
  %148 = phi i64 [ 0, %141 ], [ %182, %147 ]
  %149 = phi i64 [ %142, %141 ], [ %183, %147 ]
  %150 = sub i64 0, %148
  %151 = sub i64 0, %148
  %152 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %143, i64 %150
  %153 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %144, i64 %151
  %154 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %153, i64 -1
  %155 = bitcast %"struct.v8::internal::SourceRange"* %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 4, !alias.scope !3
  %157 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %153, i64 -2
  %158 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %157, i64 -1
  %159 = bitcast %"struct.v8::internal::SourceRange"* %158 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 4, !alias.scope !3
  %161 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %152, i64 -1
  %162 = bitcast %"struct.v8::internal::SourceRange"* %161 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %162, align 4, !alias.scope !6, !noalias !3
  %163 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %152, i64 -2
  %164 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %163, i64 -1
  %165 = bitcast %"struct.v8::internal::SourceRange"* %164 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %165, align 4, !alias.scope !6, !noalias !3
  %166 = sub nuw nsw i64 -4, %148
  %167 = sub nuw nsw i64 -4, %148
  %168 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %145, i64 %166
  %169 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %146, i64 %167
  %170 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %169, i64 -1
  %171 = bitcast %"struct.v8::internal::SourceRange"* %170 to <2 x i64>*
  %172 = load <2 x i64>, <2 x i64>* %171, align 4, !alias.scope !3
  %173 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %169, i64 -2
  %174 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %173, i64 -1
  %175 = bitcast %"struct.v8::internal::SourceRange"* %174 to <2 x i64>*
  %176 = load <2 x i64>, <2 x i64>* %175, align 4, !alias.scope !3
  %177 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %168, i64 -1
  %178 = bitcast %"struct.v8::internal::SourceRange"* %177 to <2 x i64>*
  store <2 x i64> %172, <2 x i64>* %178, align 4, !alias.scope !6, !noalias !3
  %179 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %168, i64 -2
  %180 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %179, i64 -1
  %181 = bitcast %"struct.v8::internal::SourceRange"* %180 to <2 x i64>*
  store <2 x i64> %176, <2 x i64>* %181, align 4, !alias.scope !6, !noalias !3
  %182 = add i64 %148, 8
  %183 = add i64 %149, -2
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %147, !llvm.loop !8

185:                                              ; preds = %147
  %186 = sub nuw nsw i64 -8, %148
  br label %187

187:                                              ; preds = %185, %130
  %188 = phi i64 [ 0, %130 ], [ %186, %185 ]
  %189 = icmp eq i64 %139, 0
  br i1 %189, label %207, label %190

190:                                              ; preds = %187
  %191 = getelementptr %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %99, i64 -1
  %192 = getelementptr %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %108, i64 -1
  %193 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %191, i64 %188
  %194 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %192, i64 %188
  %195 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %194, i64 -1
  %196 = bitcast %"struct.v8::internal::SourceRange"* %195 to <2 x i64>*
  %197 = load <2 x i64>, <2 x i64>* %196, align 4, !alias.scope !3
  %198 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %194, i64 -2
  %199 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %198, i64 -1
  %200 = bitcast %"struct.v8::internal::SourceRange"* %199 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 4, !alias.scope !3
  %202 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %193, i64 -1
  %203 = bitcast %"struct.v8::internal::SourceRange"* %202 to <2 x i64>*
  store <2 x i64> %197, <2 x i64>* %203, align 4, !alias.scope !6, !noalias !3
  %204 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %193, i64 -2
  %205 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %204, i64 -1
  %206 = bitcast %"struct.v8::internal::SourceRange"* %205 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %206, align 4, !alias.scope !6, !noalias !3
  br label %207

207:                                              ; preds = %187, %190
  %208 = icmp eq i64 %115, %131
  br i1 %208, label %279, label %209

209:                                              ; preds = %207, %117, %110
  %210 = phi %"struct.v8::internal::SourceRange"* [ %99, %117 ], [ %99, %110 ], [ %133, %207 ]
  %211 = phi %"struct.v8::internal::SourceRange"* [ %108, %117 ], [ %108, %110 ], [ %135, %207 ]
  %212 = getelementptr %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %211, i64 -1, i32 0
  %213 = ptrtoint i32* %212 to i64
  %214 = sub i64 %213, %107
  %215 = lshr i64 %214, 3
  %216 = add nuw nsw i64 %215, 1
  %217 = and i64 %216, 7
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %230, label %219

219:                                              ; preds = %209, %219
  %220 = phi %"struct.v8::internal::SourceRange"* [ %223, %219 ], [ %210, %209 ]
  %221 = phi %"struct.v8::internal::SourceRange"* [ %224, %219 ], [ %211, %209 ]
  %222 = phi i64 [ %228, %219 ], [ %217, %209 ]
  %223 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %220, i64 -1
  %224 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %221, i64 -1
  %225 = bitcast %"struct.v8::internal::SourceRange"* %224 to i64*
  %226 = bitcast %"struct.v8::internal::SourceRange"* %223 to i64*
  %227 = load i64, i64* %225, align 4
  store i64 %227, i64* %226, align 4
  %228 = add i64 %222, -1
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %219, !llvm.loop !10

230:                                              ; preds = %219, %209
  %231 = phi %"struct.v8::internal::SourceRange"* [ undef, %209 ], [ %223, %219 ]
  %232 = phi %"struct.v8::internal::SourceRange"* [ %210, %209 ], [ %223, %219 ]
  %233 = phi %"struct.v8::internal::SourceRange"* [ %211, %209 ], [ %224, %219 ]
  %234 = icmp ult i64 %214, 56
  br i1 %234, label %279, label %235

235:                                              ; preds = %230, %235
  %236 = phi %"struct.v8::internal::SourceRange"* [ %273, %235 ], [ %232, %230 ]
  %237 = phi %"struct.v8::internal::SourceRange"* [ %274, %235 ], [ %233, %230 ]
  %238 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %236, i64 -1
  %239 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %237, i64 -1
  %240 = bitcast %"struct.v8::internal::SourceRange"* %239 to i64*
  %241 = bitcast %"struct.v8::internal::SourceRange"* %238 to i64*
  %242 = load i64, i64* %240, align 4
  store i64 %242, i64* %241, align 4
  %243 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %236, i64 -2
  %244 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %237, i64 -2
  %245 = bitcast %"struct.v8::internal::SourceRange"* %244 to i64*
  %246 = bitcast %"struct.v8::internal::SourceRange"* %243 to i64*
  %247 = load i64, i64* %245, align 4
  store i64 %247, i64* %246, align 4
  %248 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %236, i64 -3
  %249 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %237, i64 -3
  %250 = bitcast %"struct.v8::internal::SourceRange"* %249 to i64*
  %251 = bitcast %"struct.v8::internal::SourceRange"* %248 to i64*
  %252 = load i64, i64* %250, align 4
  store i64 %252, i64* %251, align 4
  %253 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %236, i64 -4
  %254 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %237, i64 -4
  %255 = bitcast %"struct.v8::internal::SourceRange"* %254 to i64*
  %256 = bitcast %"struct.v8::internal::SourceRange"* %253 to i64*
  %257 = load i64, i64* %255, align 4
  store i64 %257, i64* %256, align 4
  %258 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %236, i64 -5
  %259 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %237, i64 -5
  %260 = bitcast %"struct.v8::internal::SourceRange"* %259 to i64*
  %261 = bitcast %"struct.v8::internal::SourceRange"* %258 to i64*
  %262 = load i64, i64* %260, align 4
  store i64 %262, i64* %261, align 4
  %263 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %236, i64 -6
  %264 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %237, i64 -6
  %265 = bitcast %"struct.v8::internal::SourceRange"* %264 to i64*
  %266 = bitcast %"struct.v8::internal::SourceRange"* %263 to i64*
  %267 = load i64, i64* %265, align 4
  store i64 %267, i64* %266, align 4
  %268 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %236, i64 -7
  %269 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %237, i64 -7
  %270 = bitcast %"struct.v8::internal::SourceRange"* %269 to i64*
  %271 = bitcast %"struct.v8::internal::SourceRange"* %268 to i64*
  %272 = load i64, i64* %270, align 4
  store i64 %272, i64* %271, align 4
  %273 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %236, i64 -8
  %274 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %237, i64 -8
  %275 = bitcast %"struct.v8::internal::SourceRange"* %274 to i64*
  %276 = bitcast %"struct.v8::internal::SourceRange"* %273 to i64*
  %277 = load i64, i64* %275, align 4
  store i64 %277, i64* %276, align 4
  %278 = icmp eq %"struct.v8::internal::SourceRange"* %274, %106
  br i1 %278, label %279, label %235, !llvm.loop !12

279:                                              ; preds = %230, %235, %207, %96
  %280 = phi %"struct.v8::internal::SourceRange"* [ %99, %96 ], [ %133, %207 ], [ %231, %230 ], [ %273, %235 ]
  %281 = ptrtoint %"struct.v8::internal::SourceRange"* %280 to i64
  store i64 %281, i64* %48, align 8
  store i64 %104, i64* %46, align 8
  store i64 %101, i64* %69, align 8
  br label %282

282:                                              ; preds = %58, %279
  %283 = icmp eq i32 %52, -1
  br i1 %283, label %288, label %284

284:                                              ; preds = %282
  %285 = getelementptr inbounds %"class.v8::internal::interpreter::BlockCoverageBuilder", %"class.v8::internal::interpreter::BlockCoverageBuilder"* %0, i64 0, i32 1
  %286 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %285, align 8
  %287 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder15IncBlockCounterEi(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %286, i32 %52) #5
  br label %288

288:                                              ; preds = %36, %26, %24, %3, %31, %282, %284
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter27BreakableControlFlowBuilderD0Ev(%"class.v8::internal::interpreter::BreakableControlFlowBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal11interpreter27BreakableControlFlowBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %4, align 8
  tail call void @_ZN2v88internal11interpreter14BytecodeLabels4BindEPNS1_20BytecodeArrayBuilderE(%"class.v8::internal::interpreter::BytecodeLabels"* %3, %"class.v8::internal::interpreter::BytecodeArrayBuilder"* %5) #5
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 3
  %7 = load %"class.v8::internal::interpreter::BlockCoverageBuilder"*, %"class.v8::internal::interpreter::BlockCoverageBuilder"** %6, align 8
  %8 = icmp eq %"class.v8::internal::interpreter::BlockCoverageBuilder"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 2
  %11 = bitcast %"class.v8::internal::AstNode"** %10 to %"class.v8::internal::ZoneObject"**
  %12 = load %"class.v8::internal::ZoneObject"*, %"class.v8::internal::ZoneObject"** %11, align 8
  tail call void @_ZN2v88internal11interpreter20BlockCoverageBuilder21IncrementBlockCounterEPNS0_10ZoneObjectENS0_15SourceRangeKindE(%"class.v8::internal::interpreter::BlockCoverageBuilder"* nonnull %7, %"class.v8::internal::ZoneObject"* %12, i32 2) #5
  br label %13

13:                                               ; preds = %9, %1
  %14 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %40, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__list_node_base"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %19, i64 0, i32 0
  %27 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %27, i64 0, i32 1
  %29 = bitcast %"struct.std::__1::__list_node_base"** %28 to i64*
  store i64 %25, i64* %29, align 8
  %30 = bitcast %"struct.std::__1::__list_node_base"* %19 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"struct.std::__1::__list_node_base"** %23 to i64**
  %33 = load i64*, i64** %32, align 8
  store i64 %31, i64* %33, align 8
  store i64 0, i64* %14, align 8
  %34 = icmp eq %"struct.std::__1::__list_node_base"* %19, %20
  br i1 %34, label %40, label %35

35:                                               ; preds = %17, %35
  %36 = phi %"struct.std::__1::__list_node_base"* [ %38, %35 ], [ %19, %17 ]
  %37 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %36, i64 0, i32 1
  %38 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__list_node_base"* %38, %20
  br i1 %39, label %40, label %35

40:                                               ; preds = %35, %13, %17
  %41 = bitcast %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0 to i8*
  tail call void @_ZdlPv(i8* %41) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

declare void @_ZN2v88internal11interpreter14BytecodeLabels4BindEPNS1_20BytecodeArrayBuilderE(%"class.v8::internal::interpreter::BytecodeLabels"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter27BreakableControlFlowBuilder8EmitJumpEPNS1_14BytecodeLabelsE(%"class.v8::internal::interpreter::BreakableControlFlowBuilder"* nocapture readonly, %"class.v8::internal::interpreter::BytecodeLabels"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %3, align 8
  %5 = tail call %"class.v8::internal::interpreter::BytecodeLabel"* @_ZN2v88internal11interpreter14BytecodeLabels3NewEv(%"class.v8::internal::interpreter::BytecodeLabels"* %1) #5
  %6 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder4JumpEPNS1_13BytecodeLabelE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %4, %"class.v8::internal::interpreter::BytecodeLabel"* %5) #5
  ret void
}

declare dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder4JumpEPNS1_13BytecodeLabelE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeLabel"*) local_unnamed_addr #2

declare %"class.v8::internal::interpreter::BytecodeLabel"* @_ZN2v88internal11interpreter14BytecodeLabels3NewEv(%"class.v8::internal::interpreter::BytecodeLabels"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter27BreakableControlFlowBuilder14EmitJumpIfTrueENS1_20BytecodeArrayBuilder13ToBooleanModeEPNS1_14BytecodeLabelsE(%"class.v8::internal::interpreter::BreakableControlFlowBuilder"* nocapture readonly, i32, %"class.v8::internal::interpreter::BytecodeLabels"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %4, align 8
  %6 = tail call %"class.v8::internal::interpreter::BytecodeLabel"* @_ZN2v88internal11interpreter14BytecodeLabels3NewEv(%"class.v8::internal::interpreter::BytecodeLabels"* %2) #5
  %7 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder10JumpIfTrueENS2_13ToBooleanModeEPNS1_13BytecodeLabelE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %5, i32 %1, %"class.v8::internal::interpreter::BytecodeLabel"* %6) #5
  ret void
}

declare dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder10JumpIfTrueENS2_13ToBooleanModeEPNS1_13BytecodeLabelE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"*, i32, %"class.v8::internal::interpreter::BytecodeLabel"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter27BreakableControlFlowBuilder15EmitJumpIfFalseENS1_20BytecodeArrayBuilder13ToBooleanModeEPNS1_14BytecodeLabelsE(%"class.v8::internal::interpreter::BreakableControlFlowBuilder"* nocapture readonly, i32, %"class.v8::internal::interpreter::BytecodeLabels"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %4, align 8
  %6 = tail call %"class.v8::internal::interpreter::BytecodeLabel"* @_ZN2v88internal11interpreter14BytecodeLabels3NewEv(%"class.v8::internal::interpreter::BytecodeLabels"* %2) #5
  %7 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder11JumpIfFalseENS2_13ToBooleanModeEPNS1_13BytecodeLabelE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %5, i32 %1, %"class.v8::internal::interpreter::BytecodeLabel"* %6) #5
  ret void
}

declare dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder11JumpIfFalseENS2_13ToBooleanModeEPNS1_13BytecodeLabelE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"*, i32, %"class.v8::internal::interpreter::BytecodeLabel"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter27BreakableControlFlowBuilder19EmitJumpIfUndefinedEPNS1_14BytecodeLabelsE(%"class.v8::internal::interpreter::BreakableControlFlowBuilder"* nocapture readonly, %"class.v8::internal::interpreter::BytecodeLabels"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %3, align 8
  %5 = tail call %"class.v8::internal::interpreter::BytecodeLabel"* @_ZN2v88internal11interpreter14BytecodeLabels3NewEv(%"class.v8::internal::interpreter::BytecodeLabels"* %1) #5
  %6 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder15JumpIfUndefinedEPNS1_13BytecodeLabelE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %4, %"class.v8::internal::interpreter::BytecodeLabel"* %5) #5
  ret void
}

declare dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder15JumpIfUndefinedEPNS1_13BytecodeLabelE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeLabel"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter27BreakableControlFlowBuilder14EmitJumpIfNullEPNS1_14BytecodeLabelsE(%"class.v8::internal::interpreter::BreakableControlFlowBuilder"* nocapture readonly, %"class.v8::internal::interpreter::BytecodeLabels"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::BreakableControlFlowBuilder", %"class.v8::internal::interpreter::BreakableControlFlowBuilder"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %3, align 8
  %5 = tail call %"class.v8::internal::interpreter::BytecodeLabel"* @_ZN2v88internal11interpreter14BytecodeLabels3NewEv(%"class.v8::internal::interpreter::BytecodeLabels"* %1) #5
  %6 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder10JumpIfNullEPNS1_13BytecodeLabelE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %4, %"class.v8::internal::interpreter::BytecodeLabel"* %5) #5
  ret void
}

declare dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder10JumpIfNullEPNS1_13BytecodeLabelE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeLabel"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter11LoopBuilderD2Ev(%"class.v8::internal::interpreter::LoopBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal11interpreter11LoopBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %12, i64 0, i32 1
  %14 = bitcast %"struct.std::__1::__list_node_base"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %9, i64 0, i32 0
  %17 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 0, i32 1
  %19 = bitcast %"struct.std::__1::__list_node_base"** %18 to i64*
  store i64 %15, i64* %19, align 8
  %20 = bitcast %"struct.std::__1::__list_node_base"* %9 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"struct.std::__1::__list_node_base"** %13 to i64**
  %23 = load i64*, i64** %22, align 8
  store i64 %21, i64* %23, align 8
  store i64 0, i64* %4, align 8
  %24 = icmp eq %"struct.std::__1::__list_node_base"* %9, %10
  br i1 %24, label %30, label %25

25:                                               ; preds = %7, %25
  %26 = phi %"struct.std::__1::__list_node_base"* [ %28, %25 ], [ %9, %7 ]
  %27 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 0, i32 1
  %28 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__list_node_base"* %28, %10
  br i1 %29, label %30, label %25

30:                                               ; preds = %25, %1, %7
  %31 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 2
  %32 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %58, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %40, i64 0, i32 1
  %42 = bitcast %"struct.std::__1::__list_node_base"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %37, i64 0, i32 0
  %45 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %45, i64 0, i32 1
  %47 = bitcast %"struct.std::__1::__list_node_base"** %46 to i64*
  store i64 %43, i64* %47, align 8
  %48 = bitcast %"struct.std::__1::__list_node_base"* %37 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"struct.std::__1::__list_node_base"** %41 to i64**
  %51 = load i64*, i64** %50, align 8
  store i64 %49, i64* %51, align 8
  store i64 0, i64* %32, align 8
  %52 = icmp eq %"struct.std::__1::__list_node_base"* %37, %38
  br i1 %52, label %58, label %53

53:                                               ; preds = %35, %53
  %54 = phi %"struct.std::__1::__list_node_base"* [ %56, %53 ], [ %37, %35 ]
  %55 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %54, i64 0, i32 1
  %56 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__list_node_base"* %56, %38
  br i1 %57, label %58, label %53

58:                                               ; preds = %53, %30, %35
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal11interpreter27BreakableControlFlowBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %59 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 0, i32 0, i32 1
  %61 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %60, align 8
  tail call void @_ZN2v88internal11interpreter14BytecodeLabels4BindEPNS1_20BytecodeArrayBuilderE(%"class.v8::internal::interpreter::BytecodeLabels"* %59, %"class.v8::internal::interpreter::BytecodeArrayBuilder"* %61) #5
  %62 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 0, i32 3
  %63 = load %"class.v8::internal::interpreter::BlockCoverageBuilder"*, %"class.v8::internal::interpreter::BlockCoverageBuilder"** %62, align 8
  %64 = icmp eq %"class.v8::internal::interpreter::BlockCoverageBuilder"* %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 0, i32 2
  %67 = bitcast %"class.v8::internal::AstNode"** %66 to %"class.v8::internal::ZoneObject"**
  %68 = load %"class.v8::internal::ZoneObject"*, %"class.v8::internal::ZoneObject"** %67, align 8
  tail call void @_ZN2v88internal11interpreter20BlockCoverageBuilder21IncrementBlockCounterEPNS0_10ZoneObjectENS0_15SourceRangeKindE(%"class.v8::internal::interpreter::BlockCoverageBuilder"* nonnull %63, %"class.v8::internal::ZoneObject"* %68, i32 2) #5
  br label %69

69:                                               ; preds = %65, %58
  %70 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %96, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %78, i64 0, i32 1
  %80 = bitcast %"struct.std::__1::__list_node_base"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 0
  %83 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %82, align 8
  %84 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %83, i64 0, i32 1
  %85 = bitcast %"struct.std::__1::__list_node_base"** %84 to i64*
  store i64 %81, i64* %85, align 8
  %86 = bitcast %"struct.std::__1::__list_node_base"* %75 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"struct.std::__1::__list_node_base"** %79 to i64**
  %89 = load i64*, i64** %88, align 8
  store i64 %87, i64* %89, align 8
  store i64 0, i64* %70, align 8
  %90 = icmp eq %"struct.std::__1::__list_node_base"* %75, %76
  br i1 %90, label %96, label %91

91:                                               ; preds = %73, %91
  %92 = phi %"struct.std::__1::__list_node_base"* [ %94, %91 ], [ %75, %73 ]
  %93 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %92, i64 0, i32 1
  %94 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %93, align 8
  %95 = icmp eq %"struct.std::__1::__list_node_base"* %94, %76
  br i1 %95, label %96, label %91

96:                                               ; preds = %91, %69, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter11LoopBuilderD0Ev(%"class.v8::internal::interpreter::LoopBuilder"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal11interpreter11LoopBuilderD2Ev(%"class.v8::internal::interpreter::LoopBuilder"* %0) #5
  %2 = bitcast %"class.v8::internal::interpreter::LoopBuilder"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter11LoopBuilder10LoopHeaderEv(%"class.v8::internal::interpreter::LoopBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 1
  %5 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder4BindEPNS1_18BytecodeLoopHeaderE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %3, %"class.v8::internal::interpreter::BytecodeLoopHeader"* %4) #5
  ret void
}

declare dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder4BindEPNS1_18BytecodeLoopHeaderE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeLoopHeader"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter11LoopBuilder8LoopBodyEv(%"class.v8::internal::interpreter::LoopBuilder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 0, i32 3
  %3 = load %"class.v8::internal::interpreter::BlockCoverageBuilder"*, %"class.v8::internal::interpreter::BlockCoverageBuilder"** %2, align 8
  %4 = icmp eq %"class.v8::internal::interpreter::BlockCoverageBuilder"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.v8::internal::interpreter::BlockCoverageBuilder", %"class.v8::internal::interpreter::BlockCoverageBuilder"* %3, i64 0, i32 1
  %11 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %10, align 8
  %12 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder15IncBlockCounterEi(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %11, i32 %7) #5
  br label %13

13:                                               ; preds = %9, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter11LoopBuilder12JumpToHeaderEiPS2_(%"class.v8::internal::interpreter::LoopBuilder"*, i32, %"class.v8::internal::interpreter::LoopBuilder"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %5, align 8
  tail call void @_ZN2v88internal11interpreter14BytecodeLabels4BindEPNS1_20BytecodeArrayBuilderE(%"class.v8::internal::interpreter::BytecodeLabels"* %4, %"class.v8::internal::interpreter::BytecodeArrayBuilder"* %6) #5
  %7 = icmp eq %"class.v8::internal::interpreter::LoopBuilder"* %2, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 1, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %2, i64 0, i32 1, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %2, i64 0, i32 3
  %16 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %2, i64 0, i32 0, i32 0, i32 1
  %17 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %16, align 8
  %18 = tail call %"class.v8::internal::interpreter::BytecodeLabel"* @_ZN2v88internal11interpreter14BytecodeLabels3NewEv(%"class.v8::internal::interpreter::BytecodeLabels"* %15) #5
  %19 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder4JumpEPNS1_13BytecodeLabelE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %17, %"class.v8::internal::interpreter::BytecodeLabel"* %18) #5
  br label %28

20:                                               ; preds = %3, %8
  %21 = icmp slt i32 %1, 5
  %22 = select i1 %21, i32 %1, i32 5
  %23 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %5, align 8
  %24 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 5
  %26 = load i32, i32* %25, align 4
  %27 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder8JumpLoopEPNS1_18BytecodeLoopHeaderEii(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %23, %"class.v8::internal::interpreter::BytecodeLoopHeader"* %24, i32 %22, i32 %26) #5
  br label %28

28:                                               ; preds = %20, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter11LoopBuilder11BindLoopEndEv(%"class.v8::internal::interpreter::LoopBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %3, align 8
  tail call void @_ZN2v88internal11interpreter14BytecodeLabels4BindEPNS1_20BytecodeArrayBuilderE(%"class.v8::internal::interpreter::BytecodeLabels"* %2, %"class.v8::internal::interpreter::BytecodeArrayBuilder"* %4) #5
  ret void
}

declare dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder8JumpLoopEPNS1_18BytecodeLoopHeaderEii(%"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeLoopHeader"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter11LoopBuilder18BindContinueTargetEv(%"class.v8::internal::interpreter::LoopBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::LoopBuilder", %"class.v8::internal::interpreter::LoopBuilder"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %3, align 8
  tail call void @_ZN2v88internal11interpreter14BytecodeLabels4BindEPNS1_20BytecodeArrayBuilderE(%"class.v8::internal::interpreter::BytecodeLabels"* %2, %"class.v8::internal::interpreter::BytecodeArrayBuilder"* %4) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter13SwitchBuilderD2Ev(%"class.v8::internal::interpreter::SwitchBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal11interpreter13SwitchBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::interpreter::BytecodeLabel"*, %"class.v8::internal::interpreter::BytecodeLabel"** %3, align 8
  %5 = icmp eq %"class.v8::internal::interpreter::BytecodeLabel"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.v8::internal::interpreter::BytecodeLabel"* %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::interpreter::BytecodeLabel"** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal11interpreter27BreakableControlFlowBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %11 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %12, align 8
  tail call void @_ZN2v88internal11interpreter14BytecodeLabels4BindEPNS1_20BytecodeArrayBuilderE(%"class.v8::internal::interpreter::BytecodeLabels"* %11, %"class.v8::internal::interpreter::BytecodeArrayBuilder"* %13) #5
  %14 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 0, i32 3
  %15 = load %"class.v8::internal::interpreter::BlockCoverageBuilder"*, %"class.v8::internal::interpreter::BlockCoverageBuilder"** %14, align 8
  %16 = icmp eq %"class.v8::internal::interpreter::BlockCoverageBuilder"* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 0, i32 2
  %19 = bitcast %"class.v8::internal::AstNode"** %18 to %"class.v8::internal::ZoneObject"**
  %20 = load %"class.v8::internal::ZoneObject"*, %"class.v8::internal::ZoneObject"** %19, align 8
  tail call void @_ZN2v88internal11interpreter20BlockCoverageBuilder21IncrementBlockCounterEPNS0_10ZoneObjectENS0_15SourceRangeKindE(%"class.v8::internal::interpreter::BlockCoverageBuilder"* nonnull %15, %"class.v8::internal::ZoneObject"* %20, i32 2) #5
  br label %21

21:                                               ; preds = %17, %10
  %22 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %48, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %30, i64 0, i32 1
  %32 = bitcast %"struct.std::__1::__list_node_base"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %27, i64 0, i32 0
  %35 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %35, i64 0, i32 1
  %37 = bitcast %"struct.std::__1::__list_node_base"** %36 to i64*
  store i64 %33, i64* %37, align 8
  %38 = bitcast %"struct.std::__1::__list_node_base"* %27 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"struct.std::__1::__list_node_base"** %31 to i64**
  %41 = load i64*, i64** %40, align 8
  store i64 %39, i64* %41, align 8
  store i64 0, i64* %22, align 8
  %42 = icmp eq %"struct.std::__1::__list_node_base"* %27, %28
  br i1 %42, label %48, label %43

43:                                               ; preds = %25, %43
  %44 = phi %"struct.std::__1::__list_node_base"* [ %46, %43 ], [ %27, %25 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %44, i64 0, i32 1
  %46 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__list_node_base"* %46, %28
  br i1 %47, label %48, label %43

48:                                               ; preds = %43, %21, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter13SwitchBuilderD0Ev(%"class.v8::internal::interpreter::SwitchBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal11interpreter13SwitchBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::interpreter::BytecodeLabel"*, %"class.v8::internal::interpreter::BytecodeLabel"** %3, align 8
  %5 = icmp eq %"class.v8::internal::interpreter::BytecodeLabel"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.v8::internal::interpreter::BytecodeLabel"* %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::interpreter::BytecodeLabel"** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal11interpreter27BreakableControlFlowBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %11 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %12, align 8
  tail call void @_ZN2v88internal11interpreter14BytecodeLabels4BindEPNS1_20BytecodeArrayBuilderE(%"class.v8::internal::interpreter::BytecodeLabels"* %11, %"class.v8::internal::interpreter::BytecodeArrayBuilder"* %13) #5
  %14 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 0, i32 3
  %15 = load %"class.v8::internal::interpreter::BlockCoverageBuilder"*, %"class.v8::internal::interpreter::BlockCoverageBuilder"** %14, align 8
  %16 = icmp eq %"class.v8::internal::interpreter::BlockCoverageBuilder"* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 0, i32 2
  %19 = bitcast %"class.v8::internal::AstNode"** %18 to %"class.v8::internal::ZoneObject"**
  %20 = load %"class.v8::internal::ZoneObject"*, %"class.v8::internal::ZoneObject"** %19, align 8
  tail call void @_ZN2v88internal11interpreter20BlockCoverageBuilder21IncrementBlockCounterEPNS0_10ZoneObjectENS0_15SourceRangeKindE(%"class.v8::internal::interpreter::BlockCoverageBuilder"* nonnull %15, %"class.v8::internal::ZoneObject"* %20, i32 2) #5
  br label %21

21:                                               ; preds = %17, %10
  %22 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %48, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %30, i64 0, i32 1
  %32 = bitcast %"struct.std::__1::__list_node_base"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %27, i64 0, i32 0
  %35 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %35, i64 0, i32 1
  %37 = bitcast %"struct.std::__1::__list_node_base"** %36 to i64*
  store i64 %33, i64* %37, align 8
  %38 = bitcast %"struct.std::__1::__list_node_base"* %27 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"struct.std::__1::__list_node_base"** %31 to i64**
  %41 = load i64*, i64** %40, align 8
  store i64 %39, i64* %41, align 8
  store i64 0, i64* %22, align 8
  %42 = icmp eq %"struct.std::__1::__list_node_base"* %27, %28
  br i1 %42, label %48, label %43

43:                                               ; preds = %25, %43
  %44 = phi %"struct.std::__1::__list_node_base"* [ %46, %43 ], [ %27, %25 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %44, i64 0, i32 1
  %46 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__list_node_base"* %46, %28
  br i1 %47, label %48, label %43

48:                                               ; preds = %43, %21, %25
  %49 = bitcast %"class.v8::internal::interpreter::SwitchBuilder"* %0 to i8*
  tail call void @_ZdlPv(i8* %49) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter13SwitchBuilder13SetCaseTargetEiPNS0_10CaseClauseE(%"class.v8::internal::interpreter::SwitchBuilder"*, i32, %"class.v8::internal::CaseClause"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 1, i32 0
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = bitcast %"class.v8::internal::interpreter::BytecodeLabel"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.90"* %4 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 4
  %13 = icmp ugt i64 %12, %5
  br i1 %13, label %16, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::vector.90"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %15) #6
  unreachable

16:                                               ; preds = %3
  %17 = inttoptr i64 %10 to %"class.v8::internal::interpreter::BytecodeLabel"*
  %18 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabel", %"class.v8::internal::interpreter::BytecodeLabel"* %17, i64 %5
  %19 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %19, align 8
  %21 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder4BindEPNS1_13BytecodeLabelE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %20, %"class.v8::internal::interpreter::BytecodeLabel"* %18) #5
  %22 = getelementptr inbounds %"class.v8::internal::interpreter::SwitchBuilder", %"class.v8::internal::interpreter::SwitchBuilder"* %0, i64 0, i32 0, i32 3
  %23 = load %"class.v8::internal::interpreter::BlockCoverageBuilder"*, %"class.v8::internal::interpreter::BlockCoverageBuilder"** %22, align 8
  %24 = icmp eq %"class.v8::internal::interpreter::BlockCoverageBuilder"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %16
  %26 = bitcast %"class.v8::internal::CaseClause"* %2 to %"class.v8::internal::ZoneObject"*
  tail call void @_ZN2v88internal11interpreter20BlockCoverageBuilder21IncrementBlockCounterEPNS0_10ZoneObjectENS0_15SourceRangeKindE(%"class.v8::internal::interpreter::BlockCoverageBuilder"* nonnull %23, %"class.v8::internal::ZoneObject"* %26, i32 0)
  br label %27

27:                                               ; preds = %16, %25
  ret void
}

declare dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder4BindEPNS1_13BytecodeLabelE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeLabel"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter15TryCatchBuilderD2Ev(%"class.v8::internal::interpreter::TryCatchBuilder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::TryCatchBuilder", %"class.v8::internal::interpreter::TryCatchBuilder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal11interpreter15TryCatchBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::TryCatchBuilder", %"class.v8::internal::interpreter::TryCatchBuilder"* %0, i64 0, i32 4
  %4 = load %"class.v8::internal::interpreter::BlockCoverageBuilder"*, %"class.v8::internal::interpreter::BlockCoverageBuilder"** %3, align 8
  %5 = icmp eq %"class.v8::internal::interpreter::BlockCoverageBuilder"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::interpreter::TryCatchBuilder", %"class.v8::internal::interpreter::TryCatchBuilder"* %0, i64 0, i32 5
  %8 = bitcast %"class.v8::internal::TryCatchStatement"** %7 to %"class.v8::internal::ZoneObject"**
  %9 = load %"class.v8::internal::ZoneObject"*, %"class.v8::internal::ZoneObject"** %8, align 8
  tail call void @_ZN2v88internal11interpreter20BlockCoverageBuilder21IncrementBlockCounterEPNS0_10ZoneObjectENS0_15SourceRangeKindE(%"class.v8::internal::interpreter::BlockCoverageBuilder"* nonnull %4, %"class.v8::internal::ZoneObject"* %9, i32 2)
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter15TryCatchBuilderD0Ev(%"class.v8::internal::interpreter::TryCatchBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::TryCatchBuilder", %"class.v8::internal::interpreter::TryCatchBuilder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal11interpreter15TryCatchBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::TryCatchBuilder", %"class.v8::internal::interpreter::TryCatchBuilder"* %0, i64 0, i32 4
  %4 = load %"class.v8::internal::interpreter::BlockCoverageBuilder"*, %"class.v8::internal::interpreter::BlockCoverageBuilder"** %3, align 8
  %5 = icmp eq %"class.v8::internal::interpreter::BlockCoverageBuilder"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::interpreter::TryCatchBuilder", %"class.v8::internal::interpreter::TryCatchBuilder"* %0, i64 0, i32 5
  %8 = bitcast %"class.v8::internal::TryCatchStatement"** %7 to %"class.v8::internal::ZoneObject"**
  %9 = load %"class.v8::internal::ZoneObject"*, %"class.v8::internal::ZoneObject"** %8, align 8
  tail call void @_ZN2v88internal11interpreter20BlockCoverageBuilder21IncrementBlockCounterEPNS0_10ZoneObjectENS0_15SourceRangeKindE(%"class.v8::internal::interpreter::BlockCoverageBuilder"* nonnull %4, %"class.v8::internal::ZoneObject"* %9, i32 2) #5
  br label %10

10:                                               ; preds = %1, %6
  %11 = bitcast %"class.v8::internal::interpreter::TryCatchBuilder"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter15TryCatchBuilder8BeginTryENS1_8RegisterE(%"class.v8::internal::interpreter::TryCatchBuilder"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::TryCatchBuilder", %"class.v8::internal::interpreter::TryCatchBuilder"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::interpreter::TryCatchBuilder", %"class.v8::internal::interpreter::TryCatchBuilder"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder12MarkTryBeginEiNS1_8RegisterE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %4, i32 %6, i32 %1) #5
  ret void
}

declare dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder12MarkTryBeginEiNS1_8RegisterE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter15TryCatchBuilder6EndTryEv(%"class.v8::internal::interpreter::TryCatchBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::TryCatchBuilder", %"class.v8::internal::interpreter::TryCatchBuilder"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::TryCatchBuilder", %"class.v8::internal::interpreter::TryCatchBuilder"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder10MarkTryEndEi(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %3, i32 %5) #5
  %7 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %2, align 8
  %8 = getelementptr inbounds %"class.v8::internal::interpreter::TryCatchBuilder", %"class.v8::internal::interpreter::TryCatchBuilder"* %0, i64 0, i32 3
  %9 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder4JumpEPNS1_13BytecodeLabelE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %7, %"class.v8::internal::interpreter::BytecodeLabel"* %8) #5
  %10 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %2, align 8
  %11 = load i32, i32* %4, align 8
  %12 = getelementptr inbounds %"class.v8::internal::interpreter::TryCatchBuilder", %"class.v8::internal::interpreter::TryCatchBuilder"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder11MarkHandlerEiNS0_12HandlerTable15CatchPredictionE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %10, i32 %11, i32 %13) #5
  %15 = getelementptr inbounds %"class.v8::internal::interpreter::TryCatchBuilder", %"class.v8::internal::interpreter::TryCatchBuilder"* %0, i64 0, i32 4
  %16 = load %"class.v8::internal::interpreter::BlockCoverageBuilder"*, %"class.v8::internal::interpreter::BlockCoverageBuilder"** %15, align 8
  %17 = icmp eq %"class.v8::internal::interpreter::BlockCoverageBuilder"* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.v8::internal::interpreter::TryCatchBuilder", %"class.v8::internal::interpreter::TryCatchBuilder"* %0, i64 0, i32 5
  %20 = bitcast %"class.v8::internal::TryCatchStatement"** %19 to %"class.v8::internal::ZoneObject"**
  %21 = load %"class.v8::internal::ZoneObject"*, %"class.v8::internal::ZoneObject"** %20, align 8
  tail call void @_ZN2v88internal11interpreter20BlockCoverageBuilder21IncrementBlockCounterEPNS0_10ZoneObjectENS0_15SourceRangeKindE(%"class.v8::internal::interpreter::BlockCoverageBuilder"* nonnull %16, %"class.v8::internal::ZoneObject"* %21, i32 1)
  br label %22

22:                                               ; preds = %1, %18
  ret void
}

declare dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder10MarkTryEndEi(%"class.v8::internal::interpreter::BytecodeArrayBuilder"*, i32) local_unnamed_addr #2

declare dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder11MarkHandlerEiNS0_12HandlerTable15CatchPredictionE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter15TryCatchBuilder8EndCatchEv(%"class.v8::internal::interpreter::TryCatchBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::TryCatchBuilder", %"class.v8::internal::interpreter::TryCatchBuilder"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::TryCatchBuilder", %"class.v8::internal::interpreter::TryCatchBuilder"* %0, i64 0, i32 3
  %5 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder4BindEPNS1_13BytecodeLabelE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %3, %"class.v8::internal::interpreter::BytecodeLabel"* %4) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter17TryFinallyBuilderD2Ev(%"class.v8::internal::interpreter::TryFinallyBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal11interpreter17TryFinallyBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 5
  %4 = load %"class.v8::internal::interpreter::BlockCoverageBuilder"*, %"class.v8::internal::interpreter::BlockCoverageBuilder"** %3, align 8
  %5 = icmp eq %"class.v8::internal::interpreter::BlockCoverageBuilder"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 6
  %8 = bitcast %"class.v8::internal::TryFinallyStatement"** %7 to %"class.v8::internal::ZoneObject"**
  %9 = load %"class.v8::internal::ZoneObject"*, %"class.v8::internal::ZoneObject"** %8, align 8
  tail call void @_ZN2v88internal11interpreter20BlockCoverageBuilder21IncrementBlockCounterEPNS0_10ZoneObjectENS0_15SourceRangeKindE(%"class.v8::internal::interpreter::BlockCoverageBuilder"* nonnull %4, %"class.v8::internal::ZoneObject"* %9, i32 2)
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %38, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %20, i64 0, i32 1
  %22 = bitcast %"struct.std::__1::__list_node_base"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 0, i32 0
  %25 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 1
  %27 = bitcast %"struct.std::__1::__list_node_base"** %26 to i64*
  store i64 %23, i64* %27, align 8
  %28 = bitcast %"struct.std::__1::__list_node_base"* %17 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"struct.std::__1::__list_node_base"** %21 to i64**
  %31 = load i64*, i64** %30, align 8
  store i64 %29, i64* %31, align 8
  store i64 0, i64* %12, align 8
  %32 = icmp eq %"struct.std::__1::__list_node_base"* %17, %18
  br i1 %32, label %38, label %33

33:                                               ; preds = %15, %33
  %34 = phi %"struct.std::__1::__list_node_base"* [ %36, %33 ], [ %17, %15 ]
  %35 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 0, i32 1
  %36 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__list_node_base"* %36, %18
  br i1 %37, label %38, label %33

38:                                               ; preds = %33, %10, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter17TryFinallyBuilderD0Ev(%"class.v8::internal::interpreter::TryFinallyBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal11interpreter17TryFinallyBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 5
  %4 = load %"class.v8::internal::interpreter::BlockCoverageBuilder"*, %"class.v8::internal::interpreter::BlockCoverageBuilder"** %3, align 8
  %5 = icmp eq %"class.v8::internal::interpreter::BlockCoverageBuilder"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 6
  %8 = bitcast %"class.v8::internal::TryFinallyStatement"** %7 to %"class.v8::internal::ZoneObject"**
  %9 = load %"class.v8::internal::ZoneObject"*, %"class.v8::internal::ZoneObject"** %8, align 8
  tail call void @_ZN2v88internal11interpreter20BlockCoverageBuilder21IncrementBlockCounterEPNS0_10ZoneObjectENS0_15SourceRangeKindE(%"class.v8::internal::interpreter::BlockCoverageBuilder"* nonnull %4, %"class.v8::internal::ZoneObject"* %9, i32 2) #5
  br label %10

10:                                               ; preds = %6, %1
  %11 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %38, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %20, i64 0, i32 1
  %22 = bitcast %"struct.std::__1::__list_node_base"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 0, i32 0
  %25 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 1
  %27 = bitcast %"struct.std::__1::__list_node_base"** %26 to i64*
  store i64 %23, i64* %27, align 8
  %28 = bitcast %"struct.std::__1::__list_node_base"* %17 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"struct.std::__1::__list_node_base"** %21 to i64**
  %31 = load i64*, i64** %30, align 8
  store i64 %29, i64* %31, align 8
  store i64 0, i64* %12, align 8
  %32 = icmp eq %"struct.std::__1::__list_node_base"* %17, %18
  br i1 %32, label %38, label %33

33:                                               ; preds = %15, %33
  %34 = phi %"struct.std::__1::__list_node_base"* [ %36, %33 ], [ %17, %15 ]
  %35 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 0, i32 1
  %36 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__list_node_base"* %36, %18
  br i1 %37, label %38, label %33

38:                                               ; preds = %33, %10, %15
  %39 = bitcast %"class.v8::internal::interpreter::TryFinallyBuilder"* %0 to i8*
  tail call void @_ZdlPv(i8* %39) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter17TryFinallyBuilder8BeginTryENS1_8RegisterE(%"class.v8::internal::interpreter::TryFinallyBuilder"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder12MarkTryBeginEiNS1_8RegisterE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %4, i32 %6, i32 %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter17TryFinallyBuilder8LeaveTryEv(%"class.v8::internal::interpreter::TryFinallyBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 4
  %5 = tail call %"class.v8::internal::interpreter::BytecodeLabel"* @_ZN2v88internal11interpreter14BytecodeLabels3NewEv(%"class.v8::internal::interpreter::BytecodeLabels"* %4) #5
  %6 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder4JumpEPNS1_13BytecodeLabelE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %3, %"class.v8::internal::interpreter::BytecodeLabel"* %5) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter17TryFinallyBuilder6EndTryEv(%"class.v8::internal::interpreter::TryFinallyBuilder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder10MarkTryEndEi(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %3, i32 %5) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter17TryFinallyBuilder12BeginHandlerEv(%"class.v8::internal::interpreter::TryFinallyBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 3
  %5 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder4BindEPNS1_13BytecodeLabelE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %3, %"class.v8::internal::interpreter::BytecodeLabel"* %4) #5
  %6 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %2, align 8
  %7 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder11MarkHandlerEiNS0_12HandlerTable15CatchPredictionE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %6, i32 %8, i32 %10) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter17TryFinallyBuilder12BeginFinallyEv(%"class.v8::internal::interpreter::TryFinallyBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %3, align 8
  tail call void @_ZN2v88internal11interpreter14BytecodeLabels4BindEPNS1_20BytecodeArrayBuilderE(%"class.v8::internal::interpreter::BytecodeLabels"* %2, %"class.v8::internal::interpreter::BytecodeArrayBuilder"* %4) #5
  %5 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 5
  %6 = load %"class.v8::internal::interpreter::BlockCoverageBuilder"*, %"class.v8::internal::interpreter::BlockCoverageBuilder"** %5, align 8
  %7 = icmp eq %"class.v8::internal::interpreter::BlockCoverageBuilder"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.v8::internal::interpreter::TryFinallyBuilder", %"class.v8::internal::interpreter::TryFinallyBuilder"* %0, i64 0, i32 6
  %10 = bitcast %"class.v8::internal::TryFinallyStatement"** %9 to %"class.v8::internal::ZoneObject"**
  %11 = load %"class.v8::internal::ZoneObject"*, %"class.v8::internal::ZoneObject"** %10, align 8
  tail call void @_ZN2v88internal11interpreter20BlockCoverageBuilder21IncrementBlockCounterEPNS0_10ZoneObjectENS0_15SourceRangeKindE(%"class.v8::internal::interpreter::BlockCoverageBuilder"* nonnull %6, %"class.v8::internal::ZoneObject"* %11, i32 4)
  br label %12

12:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal11interpreter17TryFinallyBuilder10EndFinallyEv(%"class.v8::internal::interpreter::TryFinallyBuilder"* nocapture) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter29ConditionalControlFlowBuilderD2Ev(%"class.v8::internal::interpreter::ConditionalControlFlowBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal11interpreter29ConditionalControlFlowBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 3, i32 1
  %5 = load i8, i8* %4, align 8, !range !13
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %8, align 8
  tail call void @_ZN2v88internal11interpreter14BytecodeLabels4BindEPNS1_20BytecodeArrayBuilderE(%"class.v8::internal::interpreter::BytecodeLabels"* %3, %"class.v8::internal::interpreter::BytecodeArrayBuilder"* %9) #5
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 0, i32 1
  %13 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %12, align 8
  tail call void @_ZN2v88internal11interpreter14BytecodeLabels4BindEPNS1_20BytecodeArrayBuilderE(%"class.v8::internal::interpreter::BytecodeLabels"* %11, %"class.v8::internal::interpreter::BytecodeArrayBuilder"* %13) #5
  %14 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 7
  %15 = load %"class.v8::internal::interpreter::BlockCoverageBuilder"*, %"class.v8::internal::interpreter::BlockCoverageBuilder"** %14, align 8
  %16 = icmp eq %"class.v8::internal::interpreter::BlockCoverageBuilder"* %15, null
  br i1 %16, label %26, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 4
  %19 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 63
  %23 = icmp eq i32 %22, 12
  br i1 %23, label %24, label %26

24:                                               ; preds = %17
  %25 = bitcast %"class.v8::internal::AstNode"* %19 to %"class.v8::internal::ZoneObject"*
  tail call void @_ZN2v88internal11interpreter20BlockCoverageBuilder21IncrementBlockCounterEPNS0_10ZoneObjectENS0_15SourceRangeKindE(%"class.v8::internal::interpreter::BlockCoverageBuilder"* nonnull %15, %"class.v8::internal::ZoneObject"* %25, i32 2)
  br label %26

26:                                               ; preds = %10, %24, %17
  %27 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %53, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %35, i64 0, i32 1
  %37 = bitcast %"struct.std::__1::__list_node_base"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %32, i64 0, i32 0
  %40 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %40, i64 0, i32 1
  %42 = bitcast %"struct.std::__1::__list_node_base"** %41 to i64*
  store i64 %38, i64* %42, align 8
  %43 = bitcast %"struct.std::__1::__list_node_base"* %32 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"struct.std::__1::__list_node_base"** %36 to i64**
  %46 = load i64*, i64** %45, align 8
  store i64 %44, i64* %46, align 8
  store i64 0, i64* %27, align 8
  %47 = icmp eq %"struct.std::__1::__list_node_base"* %32, %33
  br i1 %47, label %53, label %48

48:                                               ; preds = %30, %48
  %49 = phi %"struct.std::__1::__list_node_base"* [ %51, %48 ], [ %32, %30 ]
  %50 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %49, i64 0, i32 1
  %51 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__list_node_base"* %51, %33
  br i1 %52, label %53, label %48

53:                                               ; preds = %48, %26, %30
  %54 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 2
  %55 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %81, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = bitcast %"struct.std::__1::__list_node_base"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 0
  %68 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %68, i64 0, i32 1
  %70 = bitcast %"struct.std::__1::__list_node_base"** %69 to i64*
  store i64 %66, i64* %70, align 8
  %71 = bitcast %"struct.std::__1::__list_node_base"* %60 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"struct.std::__1::__list_node_base"** %64 to i64**
  %74 = load i64*, i64** %73, align 8
  store i64 %72, i64* %74, align 8
  store i64 0, i64* %55, align 8
  %75 = icmp eq %"struct.std::__1::__list_node_base"* %60, %61
  br i1 %75, label %81, label %76

76:                                               ; preds = %58, %76
  %77 = phi %"struct.std::__1::__list_node_base"* [ %79, %76 ], [ %60, %58 ]
  %78 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %77, i64 0, i32 1
  %79 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__list_node_base"* %79, %61
  br i1 %80, label %81, label %76

81:                                               ; preds = %76, %53, %58
  %82 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %108, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeLabels", %"class.v8::internal::interpreter::BytecodeLabels"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %90, i64 0, i32 1
  %92 = bitcast %"struct.std::__1::__list_node_base"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %87, i64 0, i32 0
  %95 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %94, align 8
  %96 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %95, i64 0, i32 1
  %97 = bitcast %"struct.std::__1::__list_node_base"** %96 to i64*
  store i64 %93, i64* %97, align 8
  %98 = bitcast %"struct.std::__1::__list_node_base"* %87 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::__list_node_base"** %91 to i64**
  %101 = load i64*, i64** %100, align 8
  store i64 %99, i64* %101, align 8
  store i64 0, i64* %82, align 8
  %102 = icmp eq %"struct.std::__1::__list_node_base"* %87, %88
  br i1 %102, label %108, label %103

103:                                              ; preds = %85, %103
  %104 = phi %"struct.std::__1::__list_node_base"* [ %106, %103 ], [ %87, %85 ]
  %105 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %104, i64 0, i32 1
  %106 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__list_node_base"* %106, %88
  br i1 %107, label %108, label %103

108:                                              ; preds = %103, %81, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter29ConditionalControlFlowBuilderD0Ev(%"class.v8::internal::interpreter::ConditionalControlFlowBuilder"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal11interpreter29ConditionalControlFlowBuilderD2Ev(%"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0) #5
  %2 = bitcast %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter29ConditionalControlFlowBuilder9JumpToEndEv(%"class.v8::internal::interpreter::ConditionalControlFlowBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 1
  %5 = tail call %"class.v8::internal::interpreter::BytecodeLabel"* @_ZN2v88internal11interpreter14BytecodeLabels3NewEv(%"class.v8::internal::interpreter::BytecodeLabels"* %4) #5
  %6 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder4JumpEPNS1_13BytecodeLabelE(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %3, %"class.v8::internal::interpreter::BytecodeLabel"* %5) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter29ConditionalControlFlowBuilder4ThenEv(%"class.v8::internal::interpreter::ConditionalControlFlowBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %3, align 8
  tail call void @_ZN2v88internal11interpreter14BytecodeLabels4BindEPNS1_20BytecodeArrayBuilderE(%"class.v8::internal::interpreter::BytecodeLabels"* %2, %"class.v8::internal::interpreter::BytecodeArrayBuilder"* %4) #5
  %5 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 7
  %6 = load %"class.v8::internal::interpreter::BlockCoverageBuilder"*, %"class.v8::internal::interpreter::BlockCoverageBuilder"** %5, align 8
  %7 = icmp eq %"class.v8::internal::interpreter::BlockCoverageBuilder"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 5
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::interpreter::BlockCoverageBuilder", %"class.v8::internal::interpreter::BlockCoverageBuilder"* %6, i64 0, i32 1
  %14 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %13, align 8
  %15 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder15IncBlockCounterEi(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %14, i32 %10) #5
  br label %16

16:                                               ; preds = %12, %8, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter29ConditionalControlFlowBuilder4ElseEv(%"class.v8::internal::interpreter::ConditionalControlFlowBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %3, align 8
  tail call void @_ZN2v88internal11interpreter14BytecodeLabels4BindEPNS1_20BytecodeArrayBuilderE(%"class.v8::internal::interpreter::BytecodeLabels"* %2, %"class.v8::internal::interpreter::BytecodeArrayBuilder"* %4) #5
  %5 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 7
  %6 = load %"class.v8::internal::interpreter::BlockCoverageBuilder"*, %"class.v8::internal::interpreter::BlockCoverageBuilder"** %5, align 8
  %7 = icmp eq %"class.v8::internal::interpreter::BlockCoverageBuilder"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.v8::internal::interpreter::ConditionalControlFlowBuilder", %"class.v8::internal::interpreter::ConditionalControlFlowBuilder"* %0, i64 0, i32 6
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::interpreter::BlockCoverageBuilder", %"class.v8::internal::interpreter::BlockCoverageBuilder"* %6, i64 0, i32 1
  %14 = load %"class.v8::internal::interpreter::BytecodeArrayBuilder"*, %"class.v8::internal::interpreter::BytecodeArrayBuilder"** %13, align 8
  %15 = tail call dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder15IncBlockCounterEi(%"class.v8::internal::interpreter::BytecodeArrayBuilder"* %14, i32 %10) #5
  br label %16

16:                                               ; preds = %12, %8, %1
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

declare dereferenceable(432) %"class.v8::internal::interpreter::BytecodeArrayBuilder"* @_ZN2v88internal11interpreter20BytecodeArrayBuilder15IncBlockCounterEi(%"class.v8::internal::interpreter::BytecodeArrayBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = !{i8 0, i8 2}
