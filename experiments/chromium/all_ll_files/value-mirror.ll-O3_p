; ModuleID = '../../v8/src/inspector/value-mirror.cc'
source_filename = "../../v8/src/inspector/value-mirror.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8_inspector::ValueMirror" = type { i32 (...)** }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8_inspector::ValueMirror::PropertyAccumulator" = type { i32 (...)** }
%"class.v8_inspector::String16" = type { %"class.std::__1::basic_string", i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__rep" }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__long" }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__long" = type { i16*, i64, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.v8::MicrotasksScope" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::MicrotaskQueue"*, i8, [7 x i8] }>
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::Maybe.18" = type { i8, %"struct.v8::debug::PropertyDescriptor" }
%"struct.v8::debug::PropertyDescriptor" = type { i8, %"class.v8::Local.2", %"class.v8::Local.2", %"class.v8::Local.2" }
%"class.v8::Local.2" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"struct.v8_inspector::PropertyMirror" = type { %"class.v8_inspector::String16", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.v8_inspector::ValueMirror"* }
%"class.v8::Isolate" = type { i8 }
%"class.v8::Set" = type { i8 }
%"class.v8_inspector::V8Inspector" = type { i32 (...)** }
%"class.v8_inspector::V8InspectorImpl" = type { %"class.v8_inspector::V8Inspector", %"class.v8::Isolate"*, %"class.v8_inspector::V8InspectorClient"*, %"class.std::__1::unique_ptr.32", %"class.v8::Global", i32, i32, i32, i32, i64, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.57", %"class.std::__1::unordered_map.81", %"class.std::__1::unordered_map.105", %"class.std::__1::unordered_map", %"class.std::__1::map", %"class.std::__1::unique_ptr.137", %"class.v8_inspector::V8Inspector::Counters"* }
%"class.v8_inspector::V8InspectorClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.v8_inspector::V8Debugger"* }
%"class.v8_inspector::V8Debugger" = type { %"class.v8::debug::DebugDelegate", %"class.v8::debug::AsyncEventDelegate", %"class.v8::Isolate"*, %"class.v8_inspector::V8InspectorImpl"*, i32, i32, i32, i64, i8, i8, i32, i32, i32, %"class.v8_inspector::String16", %"class.std::__1::unique_ptr.171", %"class.std::__1::unordered_map.177", %"class.std::__1::unordered_set", i32, i32, %"class.std::__1::vector.226", %"class.std::__1::vector.233", %"class.std::__1::vector.240", i32, %"class.std::__1::list", %"class.std::__1::unordered_map.251", i8*, i8, i8, i8, i32, i8, [7 x i8], %"class.std::__1::unordered_map.279", i64, %"class.std::__1::unordered_map.307", %"class.std::__1::unique_ptr.331" }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.v8_inspector::V8StackTraceImpl"* }
%"class.v8_inspector::V8StackTraceImpl" = type opaque
%"class.std::__1::unordered_map.177" = type { %"class.std::__1::__hash_table.178" }
%"class.std::__1::__hash_table.178" = type <{ %"class.std::__1::unique_ptr.179", %"class.std::__1::__compressed_pair.189", %"class.std::__1::__compressed_pair.194", %"class.std::__1::__compressed_pair.199", [4 x i8] }>
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181", %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"struct.std::__1::__hash_node_base.182"** }
%"struct.std::__1::__hash_node_base.182" = type { %"struct.std::__1::__hash_node_base.182"* }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.std::__1::__bucket_list_deallocator.184" }
%"class.std::__1::__bucket_list_deallocator.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { i64 }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.std::__1::__hash_node_base.182" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { float }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.205" }
%"class.std::__1::__hash_table.205" = type <{ %"class.std::__1::unique_ptr.206", %"class.std::__1::__compressed_pair.216", %"class.std::__1::__compressed_pair.221", %"class.std::__1::__compressed_pair.223", [4 x i8] }>
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208", %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"struct.std::__1::__hash_node_base.209"** }
%"struct.std::__1::__hash_node_base.209" = type { %"struct.std::__1::__hash_node_base.209"* }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.std::__1::__bucket_list_deallocator.211" }
%"class.std::__1::__bucket_list_deallocator.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.std::__1::__hash_node_base.209" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::vector.226" = type { %"class.std::__1::__vector_base.227" }
%"class.std::__1::__vector_base.227" = type { i8**, i8**, %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { i8** }
%"class.std::__1::vector.233" = type { %"class.std::__1::__vector_base.234" }
%"class.std::__1::__vector_base.234" = type { %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"*, %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::shared_ptr" = type opaque
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.std::__1::shared_ptr"* }
%"class.std::__1::vector.240" = type { %"class.std::__1::__vector_base.241" }
%"class.std::__1::__vector_base.241" = type { %"struct.v8_inspector::V8StackTraceId"*, %"struct.v8_inspector::V8StackTraceId"*, %"class.std::__1::__compressed_pair.242" }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair", i8, [7 x i8] }>
%"struct.std::__1::pair" = type { i64, i64 }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.v8_inspector::V8StackTraceId"* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.247" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::unordered_map.251" = type { %"class.std::__1::__hash_table.252" }
%"class.std::__1::__hash_table.252" = type <{ %"class.std::__1::unique_ptr.253", %"class.std::__1::__compressed_pair.263", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", [4 x i8] }>
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255", %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"struct.std::__1::__hash_node_base.256"** }
%"struct.std::__1::__hash_node_base.256" = type { %"struct.std::__1::__hash_node_base.256"* }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.std::__1::__bucket_list_deallocator.258" }
%"class.std::__1::__bucket_list_deallocator.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.std::__1::__hash_node_base.256" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::unordered_map.279" = type { %"class.std::__1::__hash_table.280" }
%"class.std::__1::__hash_table.280" = type <{ %"class.std::__1::unique_ptr.281", %"class.std::__1::__compressed_pair.291", %"class.std::__1::__compressed_pair.296", %"class.std::__1::__compressed_pair.301", [4 x i8] }>
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283", %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.std::__1::__hash_node_base.284"** }
%"struct.std::__1::__hash_node_base.284" = type { %"struct.std::__1::__hash_node_base.284"* }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.std::__1::__bucket_list_deallocator.286" }
%"class.std::__1::__bucket_list_deallocator.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::__hash_node_base.284" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::unordered_map.307" = type { %"class.std::__1::__hash_table.308" }
%"class.std::__1::__hash_table.308" = type <{ %"class.std::__1::unique_ptr.309", %"class.std::__1::__compressed_pair.319", %"class.std::__1::__compressed_pair.324", %"class.std::__1::__compressed_pair.327", [4 x i8] }>
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311", %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"struct.std::__1::__hash_node_base.312"** }
%"struct.std::__1::__hash_node_base.312" = type { %"struct.std::__1::__hash_node_base.312"* }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.std::__1::__bucket_list_deallocator.314" }
%"class.std::__1::__bucket_list_deallocator.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.std::__1::__hash_node_base.312" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.v8_inspector::protocol::Runtime::Backend::TerminateExecutionCallback"* }
%"class.v8_inspector::protocol::Runtime::Backend::TerminateExecutionCallback" = type { i32 (...)** }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.std::__1::unordered_map.57" = type { %"class.std::__1::__hash_table.58" }
%"class.std::__1::__hash_table.58" = type <{ %"class.std::__1::unique_ptr.59", %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.77", [4 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61", %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.std::__1::__hash_node_base.62"** }
%"struct.std::__1::__hash_node_base.62" = type { %"struct.std::__1::__hash_node_base.62"* }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.std::__1::__bucket_list_deallocator.64" }
%"class.std::__1::__bucket_list_deallocator.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.std::__1::__hash_node_base.62" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::unordered_map.81" = type { %"class.std::__1::__hash_table.82" }
%"class.std::__1::__hash_table.82" = type <{ %"class.std::__1::unique_ptr.83", %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.101", [4 x i8] }>
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85", %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.std::__1::__hash_node_base.86"** }
%"struct.std::__1::__hash_node_base.86" = type { %"struct.std::__1::__hash_node_base.86"* }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.std::__1::__bucket_list_deallocator.88" }
%"class.std::__1::__bucket_list_deallocator.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.std::__1::__hash_node_base.86" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::unordered_map.105" = type { %"class.std::__1::__hash_table.106" }
%"class.std::__1::__hash_table.106" = type <{ %"class.std::__1::unique_ptr.107", %"class.std::__1::__compressed_pair.117", %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.125", [4 x i8] }>
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109", %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::__hash_node_base.110"** }
%"struct.std::__1::__hash_node_base.110" = type { %"struct.std::__1::__hash_node_base.110"* }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.std::__1::__bucket_list_deallocator.112" }
%"class.std::__1::__bucket_list_deallocator.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.std::__1::__hash_node_base.110" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.38", %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.54", [4 x i8] }>
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40", %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.v8_inspector::V8Console"* }
%"class.v8_inspector::V8Console" = type { %"class.v8::debug::ConsoleDelegate", %"class.v8_inspector::V8InspectorImpl"* }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8_inspector::V8Inspector::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::Isolate"*, %"class.std::__1::unordered_map.143" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8_inspector::V8Inspector::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unordered_map.143" = type { %"class.std::__1::__hash_table.144" }
%"class.std::__1::__hash_table.144" = type <{ %"class.std::__1::unique_ptr.145", %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.165", [4 x i8] }>
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147", %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.std::__1::__hash_node_base.148"** }
%"struct.std::__1::__hash_node_base.148" = type { %"struct.std::__1::__hash_node_base.148"* }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.std::__1::__bucket_list_deallocator.150" }
%"class.std::__1::__bucket_list_deallocator.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.std::__1::__hash_node_base.148" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.v8_inspector::InspectedContext" = type { %"class.v8_inspector::V8InspectorImpl"*, %"class.v8::Global", i32, i32, %"class.v8_inspector::String16", %"class.v8_inspector::String16", %"class.v8_inspector::String16", %"class.v8_inspector::V8DebuggerId", %"class.std::__1::unordered_set.465", %"class.std::__1::unordered_map.487", %"class.v8_inspector::InspectedContext::WeakCallbackData"*, %"class.v8::Global.511" }
%"class.v8_inspector::V8DebuggerId" = type { i64, i64 }
%"class.std::__1::unordered_set.465" = type { %"class.std::__1::__hash_table.466" }
%"class.std::__1::__hash_table.466" = type <{ %"class.std::__1::unique_ptr.467", %"class.std::__1::__compressed_pair.477", %"class.std::__1::__compressed_pair.482", %"class.std::__1::__compressed_pair.484", [4 x i8] }>
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469", %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"struct.std::__1::__hash_node_base.470"** }
%"struct.std::__1::__hash_node_base.470" = type { %"struct.std::__1::__hash_node_base.470"* }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.std::__1::__bucket_list_deallocator.472" }
%"class.std::__1::__bucket_list_deallocator.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"struct.std::__1::__hash_node_base.470" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::unordered_map.487" = type { %"class.std::__1::__hash_table.488" }
%"class.std::__1::__hash_table.488" = type <{ %"class.std::__1::unique_ptr.489", %"class.std::__1::__compressed_pair.499", %"class.std::__1::__compressed_pair.504", %"class.std::__1::__compressed_pair.507", [4 x i8] }>
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491", %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"struct.std::__1::__hash_node_base.492"** }
%"struct.std::__1::__hash_node_base.492" = type { %"struct.std::__1::__hash_node_base.492"* }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.std::__1::__bucket_list_deallocator.494" }
%"class.std::__1::__bucket_list_deallocator.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"struct.std::__1::__hash_node_base.492" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.v8_inspector::InspectedContext::WeakCallbackData" = type opaque
%"class.v8::Global.511" = type { %"class.v8::PersistentBase.512" }
%"class.v8::PersistentBase.512" = type { %"class.v8::debug::WeakMap"* }
%"class.v8::debug::WeakMap" = type { i8 }
%"class.v8::String" = type { i8 }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.v8::debug::PropertyIterator" = type { i32 (...)** }
%"class.v8::Name" = type { i8 }
%"class.v8::Symbol" = type { i8 }
%"class.v8::Function" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::unique_ptr.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.v8_inspector::protocol::Runtime::ObjectPreview"* }
%"class.v8_inspector::protocol::Runtime::ObjectPreview" = type { %"class.v8_crdtp::ProtocolObject.420", %"class.v8_inspector::String16", %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::ValueMaybe", i8, %"class.std::__1::unique_ptr.423", %"class.v8_crdtp::detail::PtrMaybe.436" }
%"class.v8_crdtp::ProtocolObject.420" = type { %"class.v8_crdtp::Serializable" }
%"class.v8_crdtp::Serializable" = type { i32 (...)** }
%"class.v8_crdtp::detail::ValueMaybe" = type { i8, %"class.v8_inspector::String16" }
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.std::__1::vector.426"* }
%"class.std::__1::vector.426" = type { %"class.std::__1::__vector_base.427" }
%"class.std::__1::__vector_base.427" = type { %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"*, %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.v8_inspector::protocol::Runtime::PropertyPreview"* }
%"class.v8_inspector::protocol::Runtime::PropertyPreview" = type { %"class.v8_crdtp::ProtocolObject", %"class.v8_inspector::String16", %"class.v8_inspector::String16", %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::PtrMaybe", %"class.v8_crdtp::detail::ValueMaybe" }
%"class.v8_crdtp::ProtocolObject" = type { %"class.v8_crdtp::Serializable" }
%"class.v8_crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.417" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.std::__1::unique_ptr.414"* }
%"class.v8_crdtp::detail::PtrMaybe.436" = type { %"class.std::__1::unique_ptr.437" }
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.std::__1::vector.440"* }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.std::__1::unique_ptr.442"*, %"class.std::__1::unique_ptr.442"*, %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::unique_ptr.442" = type { %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"class.v8_inspector::protocol::Runtime::EntryPreview"* }
%"class.v8_inspector::protocol::Runtime::EntryPreview" = type { %"class.v8_crdtp::ProtocolObject.462", %"class.v8_crdtp::detail::PtrMaybe", %"class.std::__1::unique_ptr.417" }
%"class.v8_crdtp::ProtocolObject.462" = type { %"class.v8_crdtp::Serializable" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.std::__1::unique_ptr.442"* }
%"class.v8_inspector::StringView" = type { i8, i64, %union.anon.371 }
%union.anon.371 = type { i8* }
%"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror" = type { %"class.v8_inspector::ValueMirror", %"class.v8::Local.2", %"class.v8_inspector::String16", %"class.v8_inspector::String16" }
%"class.v8_inspector::StringBuffer" = type { i32 (...)** }
%"class.v8_inspector::(anonymous namespace)::ObjectMirror" = type { %"class.v8_inspector::ValueMirror", %"class.v8::Local.0", %"class.v8_inspector::String16", i8, %"class.v8_inspector::String16" }
%"class.v8::Local.0" = type { %"class.v8::Object"* }
%"class.v8::Map" = type { i8 }
%"class.v8::TypedArray" = type { i8 }
%"class.v8::ArrayBuffer" = type { i8 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::ArrayBufferView" = type { i8 }
%"class.v8::WasmMemoryObject" = type { i8 }
%"class.v8::debug::WasmValueObject" = type { i8 }
%"class.v8::Array" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"*, %"class.std::__1::__compressed_pair.20" }
%"struct.v8_inspector::InternalPropertyMirror" = type { %"class.v8_inspector::String16", %"class.std::__1::unique_ptr.10" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.v8_inspector::InternalPropertyMirror"* }
%"class.v8::debug::Location" = type <{ i32, i32, i8, [3 x i8] }>
%"class.v8::debug::GeneratorObject" = type { i8 }
%"class.v8::debug::Script" = type { i8 }
%"class.std::__1::vector.339" = type { %"class.std::__1::__vector_base.340" }
%"class.std::__1::__vector_base.340" = type { %"struct.v8_inspector::PrivatePropertyMirror"*, %"struct.v8_inspector::PrivatePropertyMirror"*, %"class.std::__1::__compressed_pair.341" }
%"struct.v8_inspector::PrivatePropertyMirror" = type { %"class.v8_inspector::String16", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"struct.v8_inspector::PrivatePropertyMirror"* }
%"class.std::__1::vector.346" = type { %"class.std::__1::__vector_base.347" }
%"class.std::__1::__vector_base.347" = type { %"class.v8::Local.2"*, %"class.v8::Local.2"*, %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.v8::Local.2"* }
%"class.v8::debug::AccessorPair" = type { i8 }
%"class.v8_inspector::String16Builder" = type { %"class.std::__1::vector.355" }
%"class.std::__1::vector.355" = type { %"class.std::__1::__vector_base.356" }
%"class.std::__1::__vector_base.356" = type { i16*, i16*, %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { i16* }
%"class.v8::Int32" = type { i8 }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.595 }
%union.anon.595 = type { %"class.v8_inspector::String16" }
%"class.v8::Uint32" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8_inspector::(anonymous namespace)::LocationMirror" = type <{ %"class.v8_inspector::ValueMirror", %"class.v8::Local.2", i32, i32, i32, [4 x i8] }>
%"class.v8_crdtp::DispatchResponse" = type { i32, %"class.std::__1::basic_string.541" }
%"class.std::__1::basic_string.541" = type { %"class.std::__1::__compressed_pair.542" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.544 }
%union.anon.544 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.515" = type { %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"class.v8_inspector::protocol::Runtime::RemoteObject"* }
%"class.v8_inspector::protocol::Runtime::RemoteObject" = type { %"class.v8_crdtp::ProtocolObject.518", %"class.v8_inspector::protocol::Runtime::API::RemoteObject", %"class.v8_inspector::String16", %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::PtrMaybe.521", %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::PtrMaybe", %"class.v8_crdtp::detail::PtrMaybe.528" }
%"class.v8_crdtp::ProtocolObject.518" = type { %"class.v8_crdtp::Serializable" }
%"class.v8_inspector::protocol::Runtime::API::RemoteObject" = type { %"class.v8_inspector::protocol::Exported" }
%"class.v8_inspector::protocol::Exported" = type { i32 (...)** }
%"class.v8_crdtp::detail::PtrMaybe.521" = type { %"class.std::__1::unique_ptr.522" }
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.v8_inspector::protocol::Value"* }
%"class.v8_inspector::protocol::Value" = type <{ %"class.v8_crdtp::Serializable", i32, [4 x i8] }>
%"class.v8_crdtp::detail::PtrMaybe.528" = type { %"class.std::__1::unique_ptr.529" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8_inspector::protocol::Runtime::CustomPreview"* }
%"class.v8_inspector::protocol::Runtime::CustomPreview" = type { %"class.v8_crdtp::ProtocolObject.532", %"class.v8_inspector::String16", %"class.v8_crdtp::detail::ValueMaybe" }
%"class.v8_crdtp::ProtocolObject.532" = type { %"class.v8_crdtp::Serializable" }
%"class.v8_inspector::protocol::DictionaryValue" = type { %"class.v8_inspector::protocol::Value.base", [4 x i8], %"class.std::__1::unordered_map.553", %"class.std::__1::vector.580" }
%"class.v8_inspector::protocol::Value.base" = type <{ %"class.v8_crdtp::Serializable", i32 }>
%"class.std::__1::unordered_map.553" = type { %"class.std::__1::__hash_table.554" }
%"class.std::__1::__hash_table.554" = type <{ %"class.std::__1::unique_ptr.555", %"class.std::__1::__compressed_pair.565", %"class.std::__1::__compressed_pair.570", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557", %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"struct.std::__1::__hash_node_base.558"** }
%"struct.std::__1::__hash_node_base.558" = type { %"struct.std::__1::__hash_node_base.558"* }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"class.std::__1::__bucket_list_deallocator.560" }
%"class.std::__1::__bucket_list_deallocator.560" = type { %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"struct.std::__1::__hash_node_base.558" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::vector.580" = type { %"class.std::__1::__vector_base.581" }
%"class.std::__1::__vector_base.581" = type { %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"*, %"class.std::__1::__compressed_pair.582" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"class.v8_inspector::String16"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.545 }
%struct.anon.545 = type { i8 }
%"class.v8::Boolean" = type { i8 }
%"class.v8::Number" = type { i8 }
%"class.v8_inspector::protocol::ListValue" = type { %"class.v8_inspector::protocol::Value.base", %"class.std::__1::vector.619" }
%"class.std::__1::vector.619" = type { %"class.std::__1::__vector_base.620" }
%"class.std::__1::__vector_base.620" = type { %"class.std::__1::unique_ptr.522"*, %"class.std::__1::unique_ptr.522"*, %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"class.std::__1::unique_ptr.522"* }
%"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator" = type { %"class.v8_inspector::ValueMirror::PropertyAccumulator", %"class.std::__1::vector.580", i32, i32*, i32*, i8*, %"class.std::__1::vector.632"* }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"struct.v8_inspector::PropertyMirror"*, %"struct.v8_inspector::PropertyMirror"*, %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"struct.v8_inspector::PropertyMirror"* }
%"class.std::__1::vector.639" = type { %"class.std::__1::__vector_base.640" }
%"class.std::__1::__vector_base.640" = type { %"struct.v8_inspector::(anonymous namespace)::EntryMirror"*, %"struct.v8_inspector::(anonymous namespace)::EntryMirror"*, %"class.std::__1::__compressed_pair.641" }
%"struct.v8_inspector::(anonymous namespace)::EntryMirror" = type { %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* }
%"class.v8::Proxy" = type { i8 }
%"class.v8::StringObject" = type { i8 }
%"class.v8_inspector::(anonymous namespace)::NumberMirror" = type { %"class.v8_inspector::ValueMirror", %"class.v8::Local.381" }
%"class.v8::Local.381" = type { %"class.v8::Number"* }
%"class.v8_inspector::(anonymous namespace)::BigIntMirror" = type { %"class.v8_inspector::ValueMirror", %"class.v8::Local.388" }
%"class.v8::Local.388" = type { %"class.v8::BigInt"* }
%"class.v8::BigInt" = type { i8 }
%"class.v8_inspector::(anonymous namespace)::SymbolMirror" = type { %"class.v8_inspector::ValueMirror", %"class.v8::Local.16" }
%"class.v8::Local.16" = type { %"class.v8::Symbol"* }
%"class.v8_inspector::(anonymous namespace)::FunctionMirror" = type { %"class.v8_inspector::ValueMirror", %"class.v8::Local.19" }
%"class.v8::Local.19" = type { %"class.v8::Function"* }

$_ZN12v8_inspector8String166concatIJS0_cS0_EEES0_DpT_ = comdat any

$_ZN12v8_inspector8String166concatIJPKcS0_cEEES0_DpT_ = comdat any

$_ZNK12v8_inspector11ValueMirror20buildPropertyPreviewEN2v85LocalINS1_7ContextEEERKNS_8String16EPNSt3__110unique_ptrINS_8protocol7Runtime15PropertyPreviewENS8_14default_deleteISC_EEEE = comdat any

$_ZNK12v8_inspector11ValueMirror18buildObjectPreviewEN2v85LocalINS1_7ContextEEEbPiS5_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS6_14default_deleteISA_EEEE = comdat any

$_ZNK12v8_inspector11ValueMirror17buildEntryPreviewEN2v85LocalINS1_7ContextEEEPiS5_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS6_14default_deleteISA_EEEE = comdat any

$_ZN12v8_inspector8String166concatIJPKcS0_S3_EEES0_DpT_ = comdat any

$_ZN12v8_inspector15String16Builder9appendAllIPKcJNS_8String16ES3_EEEvT_DpT0_ = comdat any

$_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE21__grow_by_and_replaceEmmmmmmPKt = comdat any

$_ZN12v8_inspector8protocol7Runtime12RemoteObject10setSubtypeERKNS_8String16E = comdat any

$_ZN12v8_inspector8protocol7Runtime12RemoteObject14setDescriptionERKNS_8String16E = comdat any

$_ZNK12v8_inspector8String169substringEmm = comdat any

$_ZNSt3__1plItNS_11char_traitsItEENS_9allocatorItEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_ = comdat any

$_ZN12v8_inspector8String166concatIJS0_cS0_cEEES0_DpT_ = comdat any

$_ZN12v8_inspector15String16Builder9appendAllINS_8String16EJcS2_cEEEvT_DpT0_ = comdat any

$_ZN12v8_inspector15String16Builder9appendAllIcJNS_8String16EcEEEvT_DpT0_ = comdat any

$_ZN12v8_inspector8String166concatIJcS0_cEEES0_DpT_ = comdat any

$_ZN12v8_inspector15String16Builder9appendAllIPKcJNS_8String16EcEEEvT_DpT0_ = comdat any

$_ZNSt3__16vectorIN12v8_inspector22InternalPropertyMirrorENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN12v8_inspector21PrivatePropertyMirrorENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_ = comdat any

$_ZN12v8_inspector15String16Builder9appendAllINS_8String16EJcS2_EEEvT_DpT0_ = comdat any

$_ZN12v8_inspector15String16Builder9appendAllIcJNS_8String16EEEEvT_DpT0_ = comdat any

$_ZN12v8_inspector8protocol7Runtime12RemoteObject12setClassNameERKNS_8String16E = comdat any

$_ZN12v8_inspector8protocol7Runtime15PropertyPreview10setSubtypeERKNS_8String16E = comdat any

$_ZN12v8_inspector8protocol7Runtime15PropertyPreview8setValueERKNS_8String16E = comdat any

$_ZN12v8_inspector8String166concatIJS0_S0_S0_EEES0_DpT_ = comdat any

$_ZN12v8_inspector8String166concatIJS0_tEEES0_DpT_ = comdat any

$_ZN12v8_inspector15String16Builder9appendAllINS_8String16EJS2_S2_EEEvT_DpT0_ = comdat any

$_ZN12v8_inspector15String16Builder9appendAllINS_8String16EJS2_EEEvT_DpT0_ = comdat any

$_ZN12v8_inspector8protocol7Runtime13ObjectPreview10setSubtypeERKNS_8String16E = comdat any

$_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA19_KcEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA17_KcEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA18_KcEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN12v8_inspector22InternalPropertyMirrorENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime15PropertyPreviewENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN12v8_inspector14PropertyMirrorENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime12EntryPreviewENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN12v8_inspector8protocol7Runtime13ObjectPreview14setDescriptionERKNS_8String16E = comdat any

$_ZN12v8_inspector8protocol7Runtime12RemoteObject22setUnserializableValueERKNS_8String16E = comdat any

@.str = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"tryCatch.HasCaught()\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"description\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"__proto__\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"[[FunctionLocation]]\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"[[IsGenerator]]\00", align 1
@.str.8 = private unnamed_addr constant [22 x i8] c"[[GeneratorLocation]]\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"nodeName\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"nodeType\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"className\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"<!DOCTYPE \00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"node\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum5ErrorE = external local_unnamed_addr global i8*, align 8
@.str.18 = private unnamed_addr constant [6 x i8] c"array\00", align 1
@_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum5ArrayE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6ObjectE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum7BooleanE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6StringE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum9UndefinedE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum6RegexpE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum5ProxyE = external local_unnamed_addr global i8*, align 8
@.str.19 = private unnamed_addr constant [6 x i8] c"Proxy\00", align 1
@_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum4DateE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum7PromiseE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum3MapE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum3SetE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum7WeakmapE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum7WeaksetE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum8IteratorE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum9GeneratorE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum10TypedarrayE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum11ArraybufferE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum8DataviewE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum17WebassemblymemoryE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum9WasmvalueE = external local_unnamed_addr global i8*, align 8
@.str.20 = private unnamed_addr constant [19 x i8] c"internal#scopeList\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"internal#entry\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"internal#scope\00", align 1
@_ZTVN12v8_inspector11ValueMirrorE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::ValueMirror"*)* @_ZN12v8_inspector11ValueMirrorD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::ValueMirror"*)* @_ZN12v8_inspector11ValueMirrorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)* @_ZNK12v8_inspector11ValueMirror20buildPropertyPreviewEN2v85LocalINS1_7ContextEEERKNS_8String16EPNSt3__110unique_ptrINS_8protocol7Runtime15PropertyPreviewENS8_14default_deleteISC_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i1, i32*, i32*, %"class.std::__1::unique_ptr.417"*)* @_ZNK12v8_inspector11ValueMirror18buildObjectPreviewEN2v85LocalINS1_7ContextEEEbPiS5_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS6_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)* @_ZNK12v8_inspector11ValueMirror17buildEntryPreviewEN2v85LocalINS1_7ContextEEEPiS5_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS6_14default_deleteISA_EEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.23 = private unnamed_addr constant [8 x i8] c"Symbol(\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"body\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"Request\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"Response\00", align 1
@_ZN2v88Function19kLineOffsetNotFoundE = external local_unnamed_addr constant i32, align 4
@_ZTVN12v8_inspector12_GLOBAL__N_114LocationMirrorE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::ValueMirror"*)* @_ZN12v8_inspector11ValueMirrorD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::LocationMirror"*)* @_ZN12v8_inspector12_GLOBAL__N_114LocationMirrorD0Ev to i8*), i8* bitcast (void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::(anonymous namespace)::LocationMirror"*, %"class.v8::Context"*, i32, %"class.std::__1::unique_ptr.515"*)* @_ZNK12v8_inspector12_GLOBAL__N_114LocationMirror17buildRemoteObjectEN2v85LocalINS2_7ContextEEENS_8WrapModeEPNSt3__110unique_ptrINS_8protocol7Runtime12RemoteObjectENS7_14default_deleteISB_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)* @_ZNK12v8_inspector11ValueMirror20buildPropertyPreviewEN2v85LocalINS1_7ContextEEERKNS_8String16EPNSt3__110unique_ptrINS_8protocol7Runtime15PropertyPreviewENS8_14default_deleteISC_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i1, i32*, i32*, %"class.std::__1::unique_ptr.417"*)* @_ZNK12v8_inspector11ValueMirror18buildObjectPreviewEN2v85LocalINS1_7ContextEEEbPiS5_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS6_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)* @_ZNK12v8_inspector11ValueMirror17buildEntryPreviewEN2v85LocalINS1_7ContextEEEPiS5_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS6_14default_deleteISA_EEEE to i8*), i8* bitcast (%"class.v8::Value"* (%"class.v8_inspector::(anonymous namespace)::LocationMirror"*)* @_ZNK12v8_inspector12_GLOBAL__N_114LocationMirror7v8ValueEv to i8*)] }, align 8
@.str.29 = private unnamed_addr constant [9 x i8] c"scriptId\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"lineNumber\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"columnNumber\00", align 1
@.str.32 = private unnamed_addr constant [18 x i8] c"internal#location\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"Object\00", align 1
@_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@.str.34 = private unnamed_addr constant [6 x i8] c"stack\00", align 1
@.str.35 = private unnamed_addr constant [8 x i8] c"message\00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"Scopes[\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.39 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.40 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c" => \00", align 1
@.str.42 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.43 = private unnamed_addr constant [7 x i8] c"splice\00", align 1
@_ZTVN12v8_inspector12_GLOBAL__N_112ObjectMirrorE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::ObjectMirror"*)* @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::ObjectMirror"*)* @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorD0Ev to i8*), i8* bitcast (void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*, %"class.v8::Context"*, i32, %"class.std::__1::unique_ptr.515"*)* @_ZNK12v8_inspector12_GLOBAL__N_112ObjectMirror17buildRemoteObjectEN2v85LocalINS2_7ContextEEENS_8WrapModeEPNSt3__110unique_ptrINS_8protocol7Runtime12RemoteObjectENS7_14default_deleteISB_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::ObjectMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)* @_ZNK12v8_inspector12_GLOBAL__N_112ObjectMirror20buildPropertyPreviewEN2v85LocalINS2_7ContextEEERKNS_8String16EPNSt3__110unique_ptrINS_8protocol7Runtime15PropertyPreviewENS9_14default_deleteISD_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::ObjectMirror"*, %"class.v8::Context"*, i1, i32*, i32*, %"class.std::__1::unique_ptr.417"*)* @_ZNK12v8_inspector12_GLOBAL__N_112ObjectMirror18buildObjectPreviewEN2v85LocalINS2_7ContextEEEbPiS6_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS7_14default_deleteISB_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::ObjectMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)* @_ZNK12v8_inspector12_GLOBAL__N_112ObjectMirror17buildEntryPreviewEN2v85LocalINS2_7ContextEEEPiS6_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS7_14default_deleteISB_EEEE to i8*), i8* bitcast (%"class.v8::Value"* (%"class.v8_inspector::(anonymous namespace)::ObjectMirror"*)* @_ZNK12v8_inspector12_GLOBAL__N_112ObjectMirror7v8ValueEv to i8*)] }, align 8
@.str.44 = private unnamed_addr constant [35 x i8] c"Object reference chain is too long\00", align 1
@.str.45 = private unnamed_addr constant [37 x i8] c"Object couldn't be returned by value\00", align 1
@_ZTVN12v8_inspector8protocol5ValueE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN12v8_inspector8protocol16FundamentalValueE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN12v8_inspector8protocol11StringValueE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN12v8_inspector8protocol7Runtime15PropertyPreviewE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN12v8_inspector8protocol7Runtime15PropertyPreview8TypeEnum8AccessorE = external local_unnamed_addr global i8*, align 8
@.str.46 = private unnamed_addr constant [19 x i8] c"[[PrimitiveValue]]\00", align 1
@.str.47 = private unnamed_addr constant [17 x i8] c"[[PromiseState]]\00", align 1
@.str.48 = private unnamed_addr constant [18 x i8] c"[[PromiseResult]]\00", align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"[[GeneratorState]]\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.51 = private unnamed_addr constant [14 x i8] c"[[Int8Array]]\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"[[Uint8Array]]\00", align 1
@.str.53 = private unnamed_addr constant [15 x i8] c"[[Int16Array]]\00", align 1
@.str.54 = private unnamed_addr constant [15 x i8] c"[[Int32Array]]\00", align 1
@_ZTVN12v8_inspector12_GLOBAL__N_126PreviewPropertyAccumulatorE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"*)* @_ZN12v8_inspector12_GLOBAL__N_126PreviewPropertyAccumulatorD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"*)* @_ZN12v8_inspector12_GLOBAL__N_126PreviewPropertyAccumulatorD0Ev to i8*), i8* bitcast (i1 (%"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"*, %"struct.v8_inspector::PropertyMirror"*)* @_ZN12v8_inspector12_GLOBAL__N_126PreviewPropertyAccumulator3AddENS_14PropertyMirrorE to i8*)] }, align 8
@_ZTVN12v8_inspector8protocol7Runtime12EntryPreviewE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN12v8_inspector8protocol7Runtime13ObjectPreviewE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN12v8_inspector12_GLOBAL__N_120PrimitiveValueMirrorE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"*)* @_ZN12v8_inspector12_GLOBAL__N_120PrimitiveValueMirrorD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"*)* @_ZN12v8_inspector12_GLOBAL__N_120PrimitiveValueMirrorD0Ev to i8*), i8* bitcast (void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"*, %"class.v8::Context"*, i32, %"class.std::__1::unique_ptr.515"*)* @_ZNK12v8_inspector12_GLOBAL__N_120PrimitiveValueMirror17buildRemoteObjectEN2v85LocalINS2_7ContextEEENS_8WrapModeEPNSt3__110unique_ptrINS_8protocol7Runtime12RemoteObjectENS7_14default_deleteISB_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)* @_ZNK12v8_inspector12_GLOBAL__N_120PrimitiveValueMirror20buildPropertyPreviewEN2v85LocalINS2_7ContextEEERKNS_8String16EPNSt3__110unique_ptrINS_8protocol7Runtime15PropertyPreviewENS9_14default_deleteISD_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i1, i32*, i32*, %"class.std::__1::unique_ptr.417"*)* @_ZNK12v8_inspector11ValueMirror18buildObjectPreviewEN2v85LocalINS1_7ContextEEEbPiS5_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS6_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)* @_ZNK12v8_inspector12_GLOBAL__N_120PrimitiveValueMirror17buildEntryPreviewEN2v85LocalINS2_7ContextEEEPiS6_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS7_14default_deleteISB_EEEE to i8*), i8* bitcast (%"class.v8::Value"* (%"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"*)* @_ZNK12v8_inspector12_GLOBAL__N_120PrimitiveValueMirror7v8ValueEv to i8*)] }, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum4NullE = external local_unnamed_addr global i8*, align 8
@.str.55 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.57 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZTVN12v8_inspector12_GLOBAL__N_112NumberMirrorE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::ValueMirror"*)* @_ZN12v8_inspector11ValueMirrorD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::NumberMirror"*)* @_ZN12v8_inspector12_GLOBAL__N_112NumberMirrorD0Ev to i8*), i8* bitcast (void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::(anonymous namespace)::NumberMirror"*, %"class.v8::Context"*, i32, %"class.std::__1::unique_ptr.515"*)* @_ZNK12v8_inspector12_GLOBAL__N_112NumberMirror17buildRemoteObjectEN2v85LocalINS2_7ContextEEENS_8WrapModeEPNSt3__110unique_ptrINS_8protocol7Runtime12RemoteObjectENS7_14default_deleteISB_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::NumberMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)* @_ZNK12v8_inspector12_GLOBAL__N_112NumberMirror20buildPropertyPreviewEN2v85LocalINS2_7ContextEEERKNS_8String16EPNSt3__110unique_ptrINS_8protocol7Runtime15PropertyPreviewENS9_14default_deleteISD_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i1, i32*, i32*, %"class.std::__1::unique_ptr.417"*)* @_ZNK12v8_inspector11ValueMirror18buildObjectPreviewEN2v85LocalINS1_7ContextEEEbPiS5_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS6_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::NumberMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)* @_ZNK12v8_inspector12_GLOBAL__N_112NumberMirror17buildEntryPreviewEN2v85LocalINS2_7ContextEEEPiS6_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS7_14default_deleteISB_EEEE to i8*), i8* bitcast (%"class.v8::Value"* (%"class.v8_inspector::(anonymous namespace)::NumberMirror"*)* @_ZNK12v8_inspector12_GLOBAL__N_112NumberMirror7v8ValueEv to i8*)] }, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6NumberE = external local_unnamed_addr global i8*, align 8
@.str.58 = private unnamed_addr constant [4 x i8] c"NaN\00", align 1
@.str.59 = private unnamed_addr constant [3 x i8] c"-0\00", align 1
@.str.60 = private unnamed_addr constant [10 x i8] c"-Infinity\00", align 1
@.str.61 = private unnamed_addr constant [9 x i8] c"Infinity\00", align 1
@_ZTVN12v8_inspector12_GLOBAL__N_112BigIntMirrorE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::ValueMirror"*)* @_ZN12v8_inspector11ValueMirrorD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::BigIntMirror"*)* @_ZN12v8_inspector12_GLOBAL__N_112BigIntMirrorD0Ev to i8*), i8* bitcast (void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::(anonymous namespace)::BigIntMirror"*, %"class.v8::Context"*, i32, %"class.std::__1::unique_ptr.515"*)* @_ZNK12v8_inspector12_GLOBAL__N_112BigIntMirror17buildRemoteObjectEN2v85LocalINS2_7ContextEEENS_8WrapModeEPNSt3__110unique_ptrINS_8protocol7Runtime12RemoteObjectENS7_14default_deleteISB_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::BigIntMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)* @_ZNK12v8_inspector12_GLOBAL__N_112BigIntMirror20buildPropertyPreviewEN2v85LocalINS2_7ContextEEERKNS_8String16EPNSt3__110unique_ptrINS_8protocol7Runtime15PropertyPreviewENS9_14default_deleteISD_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i1, i32*, i32*, %"class.std::__1::unique_ptr.417"*)* @_ZNK12v8_inspector11ValueMirror18buildObjectPreviewEN2v85LocalINS1_7ContextEEEbPiS5_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS6_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::BigIntMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)* @_ZNK12v8_inspector12_GLOBAL__N_112BigIntMirror17buildEntryPreviewEN2v85LocalINS2_7ContextEEEPiS6_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS7_14default_deleteISB_EEEE to i8*), i8* bitcast (%"class.v8::Value"* (%"class.v8_inspector::(anonymous namespace)::BigIntMirror"*)* @_ZNK12v8_inspector12_GLOBAL__N_112BigIntMirror7v8ValueEv to i8*)] }, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6BigintE = external local_unnamed_addr global i8*, align 8
@.str.62 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@_ZTVN12v8_inspector12_GLOBAL__N_112SymbolMirrorE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::ValueMirror"*)* @_ZN12v8_inspector11ValueMirrorD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::SymbolMirror"*)* @_ZN12v8_inspector12_GLOBAL__N_112SymbolMirrorD0Ev to i8*), i8* bitcast (void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::(anonymous namespace)::SymbolMirror"*, %"class.v8::Context"*, i32, %"class.std::__1::unique_ptr.515"*)* @_ZNK12v8_inspector12_GLOBAL__N_112SymbolMirror17buildRemoteObjectEN2v85LocalINS2_7ContextEEENS_8WrapModeEPNSt3__110unique_ptrINS_8protocol7Runtime12RemoteObjectENS7_14default_deleteISB_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::SymbolMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)* @_ZNK12v8_inspector12_GLOBAL__N_112SymbolMirror20buildPropertyPreviewEN2v85LocalINS2_7ContextEEERKNS_8String16EPNSt3__110unique_ptrINS_8protocol7Runtime15PropertyPreviewENS9_14default_deleteISD_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i1, i32*, i32*, %"class.std::__1::unique_ptr.417"*)* @_ZNK12v8_inspector11ValueMirror18buildObjectPreviewEN2v85LocalINS1_7ContextEEEbPiS5_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS6_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)* @_ZNK12v8_inspector11ValueMirror17buildEntryPreviewEN2v85LocalINS1_7ContextEEEPiS5_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS6_14default_deleteISA_EEEE to i8*), i8* bitcast (%"class.v8::Value"* (%"class.v8_inspector::(anonymous namespace)::SymbolMirror"*)* @_ZNK12v8_inspector12_GLOBAL__N_112SymbolMirror7v8ValueEv to i8*)] }, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6SymbolE = external local_unnamed_addr global i8*, align 8
@_ZTVN12v8_inspector12_GLOBAL__N_114FunctionMirrorE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::ValueMirror"*)* @_ZN12v8_inspector11ValueMirrorD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::FunctionMirror"*)* @_ZN12v8_inspector12_GLOBAL__N_114FunctionMirrorD0Ev to i8*), i8* bitcast (void (%"class.v8_crdtp::DispatchResponse"*, %"class.v8_inspector::(anonymous namespace)::FunctionMirror"*, %"class.v8::Context"*, i32, %"class.std::__1::unique_ptr.515"*)* @_ZNK12v8_inspector12_GLOBAL__N_114FunctionMirror17buildRemoteObjectEN2v85LocalINS2_7ContextEEENS_8WrapModeEPNSt3__110unique_ptrINS_8protocol7Runtime12RemoteObjectENS7_14default_deleteISB_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::FunctionMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)* @_ZNK12v8_inspector12_GLOBAL__N_114FunctionMirror20buildPropertyPreviewEN2v85LocalINS2_7ContextEEERKNS_8String16EPNSt3__110unique_ptrINS_8protocol7Runtime15PropertyPreviewENS9_14default_deleteISD_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i1, i32*, i32*, %"class.std::__1::unique_ptr.417"*)* @_ZNK12v8_inspector11ValueMirror18buildObjectPreviewEN2v85LocalINS1_7ContextEEEbPiS5_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS6_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::FunctionMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)* @_ZNK12v8_inspector12_GLOBAL__N_114FunctionMirror17buildEntryPreviewEN2v85LocalINS2_7ContextEEEPiS6_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS7_14default_deleteISB_EEEE to i8*), i8* bitcast (%"class.v8::Value"* (%"class.v8_inspector::(anonymous namespace)::FunctionMirror"*)* @_ZNK12v8_inspector12_GLOBAL__N_114FunctionMirror7v8ValueEv to i8*)] }, align 8
@_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum8FunctionE = external local_unnamed_addr global i8*, align 8

@_ZN12v8_inspector11ValueMirrorD1Ev = hidden unnamed_addr alias void (%"class.v8_inspector::ValueMirror"*), void (%"class.v8_inspector::ValueMirror"*)* @_ZN12v8_inspector11ValueMirrorD2Ev

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN12v8_inspector11ValueMirrorD0Ev(%"class.v8_inspector::ValueMirror"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12v8_inspector11ValueMirror13getPropertiesEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEEbbPNS0_19PropertyAccumulatorE(%"class.v8::Context"*, %"class.v8::Object"*, i1 zeroext, i1 zeroext, %"class.v8_inspector::ValueMirror::PropertyAccumulator"*) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8::TryCatch", align 8
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = alloca %"class.v8_inspector::String16", align 8
  %10 = alloca %"class.v8::TryCatch", align 8
  %11 = alloca %"class.v8_inspector::String16", align 8
  %12 = alloca %"class.v8_inspector::String16", align 8
  %13 = alloca %"class.v8::TryCatch", align 8
  %14 = alloca %"class.v8_inspector::String16", align 8
  %15 = alloca %"class.v8_inspector::String16", align 8
  %16 = alloca %"class.v8_inspector::String16", align 8
  %17 = alloca %"class.v8::TryCatch", align 8
  %18 = alloca %"class.v8::MicrotasksScope", align 8
  %19 = alloca %"class.v8_inspector::String16", align 8
  %20 = alloca %"class.v8_inspector::String16", align 8
  %21 = alloca %"class.v8_inspector::String16", align 8
  %22 = alloca %"class.v8_inspector::String16", align 8
  %23 = alloca %"class.v8_inspector::String16", align 8
  %24 = alloca %"class.v8::TryCatch", align 8
  %25 = alloca %"class.v8::TryCatch", align 8
  %26 = alloca %"class.v8::Maybe.18", align 8
  %27 = alloca %"class.v8_inspector::String16", align 8
  %28 = alloca %"class.v8_inspector::String16", align 8
  %29 = alloca %"class.v8::TryCatch", align 8
  %30 = alloca %"struct.v8_inspector::PropertyMirror", align 8
  %31 = alloca %"struct.v8_inspector::PropertyMirror", align 8
  %32 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15
  %33 = bitcast %"class.v8::TryCatch"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %33) #15
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %17, %"class.v8::Isolate"* %32) #15
  %34 = call %"class.v8::Set"* @_ZN2v83Set3NewEPNS_7IsolateE(%"class.v8::Isolate"* %32) #15
  %35 = ptrtoint %"class.v8::Set"* %34 to i64
  %36 = bitcast %"class.v8::MicrotasksScope"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #15
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %18, %"class.v8::Isolate"* %32, i32 1) #15
  %37 = bitcast %"class.v8::Object"* %1 to %"class.v8::Value"*
  %38 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %37) #15
  br i1 %38, label %39, label %90

39:                                               ; preds = %5
  %40 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15
  %41 = call %"class.v8_inspector::V8Inspector"* @_ZN2v85debug12GetInspectorEPNS_7IsolateE(%"class.v8::Isolate"* %40) #15
  %42 = bitcast %"class.v8_inspector::V8Inspector"* %41 to %"class.v8_inspector::V8InspectorImpl"*
  %43 = call i32 @_ZN12v8_inspector16InspectedContext9contextIdEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %0) #15
  %44 = call %"class.v8_inspector::InspectedContext"* @_ZNK12v8_inspector15V8InspectorImpl10getContextEi(%"class.v8_inspector::V8InspectorImpl"* %42, i32 %43) #15
  %45 = icmp eq %"class.v8_inspector::InspectedContext"* %44, null
  br i1 %45, label %90, label %46

46:                                               ; preds = %39
  %47 = call i32 @_ZN12v8_inspector16InspectedContext15getInternalTypeEN2v85LocalINS1_6ObjectEEE(%"class.v8_inspector::InspectedContext"* nonnull %44, %"class.v8::Object"* %1) #15
  switch i32 %47, label %90 [
    i32 2, label %48
    i32 3, label %75
  ]

48:                                               ; preds = %46
  %49 = bitcast %"class.v8_inspector::String16"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #15
  %50 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %32, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %19) #15
  %51 = bitcast %"class.v8::String"* %50 to %"class.v8::Value"*
  %52 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %0, %"class.v8::Value"* %51) #15
  %53 = icmp eq %"class.v8::Value"* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %48
  %55 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %52) #15
  %56 = bitcast %"class.v8_inspector::String16"* %19 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %56, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %54
  %61 = bitcast %"class.v8_inspector::String16"* %19 to i8**
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #16
  br label %63

63:                                               ; preds = %54, %60
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #15
  br i1 %55, label %73, label %1050

64:                                               ; preds = %48
  %65 = bitcast %"class.v8_inspector::String16"* %19 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %65, i64 0, i32 1, i32 1
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = bitcast %"class.v8_inspector::String16"* %19 to i8**
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #16
  br label %72

72:                                               ; preds = %64, %69
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #15
  br label %1050

73:                                               ; preds = %63
  %74 = bitcast %"class.v8::Value"* %52 to %"class.v8::Object"*
  br label %90

75:                                               ; preds = %46
  %76 = bitcast %"class.v8_inspector::String16"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #15
  %77 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %32, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %20) #15
  %78 = bitcast %"class.v8::String"* %77 to %"class.v8::Value"*
  %79 = call %"class.v8::Set"* @_ZN2v83Set3AddENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Set"* %34, %"class.v8::Context"* %0, %"class.v8::Value"* %78) #15
  %80 = ptrtoint %"class.v8::Set"* %79 to i64
  %81 = icmp eq %"class.v8::Set"* %79, null
  %82 = bitcast %"class.v8_inspector::String16"* %20 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %82, i64 0, i32 1, i32 1
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %75
  %87 = bitcast %"class.v8_inspector::String16"* %20 to i8**
  %88 = load i8*, i8** %87, align 8
  call void @_ZdlPv(i8* %88) #16
  br label %89

89:                                               ; preds = %75, %86
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76) #15
  br i1 %81, label %1050, label %90

90:                                               ; preds = %89, %39, %5, %73, %46
  %91 = phi %"class.v8::Value"* [ %37, %89 ], [ %37, %39 ], [ %37, %5 ], [ %52, %73 ], [ %37, %46 ]
  %92 = phi i64 [ %80, %89 ], [ %35, %39 ], [ %35, %5 ], [ %35, %73 ], [ %35, %46 ]
  %93 = phi %"class.v8::Object"* [ %1, %89 ], [ %1, %39 ], [ %1, %5 ], [ %74, %73 ], [ %1, %46 ]
  %94 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15
  %95 = call %"class.v8_inspector::V8Inspector"* @_ZN2v85debug12GetInspectorEPNS_7IsolateE(%"class.v8::Isolate"* %94) #15
  %96 = getelementptr inbounds %"class.v8_inspector::V8Inspector", %"class.v8_inspector::V8Inspector"* %95, i64 2
  %97 = bitcast %"class.v8_inspector::V8Inspector"* %96 to %"class.v8_inspector::V8InspectorClient"**
  %98 = load %"class.v8_inspector::V8InspectorClient"*, %"class.v8_inspector::V8InspectorClient"** %97, align 8
  %99 = bitcast %"class.v8_inspector::V8InspectorClient"* %98 to i1 (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)***
  %100 = load i1 (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)**, i1 (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)*** %99, align 8
  %101 = getelementptr inbounds i1 (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)*, i1 (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)** %100, i64 11
  %102 = load i1 (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)*, i1 (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)** %101, align 8
  %103 = call zeroext i1 %102(%"class.v8_inspector::V8InspectorClient"* %98, %"class.v8::Value"* %91) #15
  %104 = call %"class.v8::debug::PropertyIterator"* @_ZN2v85debug16PropertyIterator6CreateENS_5LocalINS_7ContextEEENS2_INS_6ObjectEEE(%"class.v8::Context"* %0, %"class.v8::Object"* %93) #15
  %105 = icmp eq %"class.v8::debug::PropertyIterator"* %104, null
  br i1 %105, label %234, label %106

106:                                              ; preds = %90
  %107 = bitcast %"class.v8::debug::PropertyIterator"* %104 to i1 (%"class.v8::debug::PropertyIterator"*)***
  %108 = load i1 (%"class.v8::debug::PropertyIterator"*)**, i1 (%"class.v8::debug::PropertyIterator"*)*** %107, align 8
  %109 = getelementptr inbounds i1 (%"class.v8::debug::PropertyIterator"*)*, i1 (%"class.v8::debug::PropertyIterator"*)** %108, i64 2
  %110 = load i1 (%"class.v8::debug::PropertyIterator"*)*, i1 (%"class.v8::debug::PropertyIterator"*)** %109, align 8
  %111 = call zeroext i1 %110(%"class.v8::debug::PropertyIterator"* nonnull %104) #15
  br i1 %111, label %1044, label %112

112:                                              ; preds = %106
  %113 = xor i1 %2, true
  %114 = bitcast %"class.v8::debug::PropertyIterator"* %104 to %"class.v8::Name"* (%"class.v8::debug::PropertyIterator"*)***
  %115 = bitcast %"class.v8_inspector::String16"* %21 to i8*
  %116 = bitcast %"class.v8_inspector::String16"* %23 to i8*
  %117 = bitcast %"class.v8_inspector::String16"* %16 to i8*
  %118 = bitcast %"class.v8_inspector::String16"* %16 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %118, i64 0, i32 1, i32 1
  %120 = bitcast %"class.v8_inspector::String16"* %16 to i8**
  %121 = bitcast %"class.v8_inspector::String16"* %21 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %121, i64 0, i32 1, i32 1
  %123 = bitcast %"class.v8_inspector::String16"* %21 to i8**
  %124 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %23, i64 0, i32 1
  %125 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %21, i64 0, i32 1
  %126 = bitcast %"class.v8_inspector::String16"* %22 to i8*
  %127 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %22, i64 0, i32 1
  %128 = bitcast %"class.v8::TryCatch"* %24 to i8*
  %129 = bitcast %"class.v8::debug::PropertyIterator"* %104 to i64 (%"class.v8::debug::PropertyIterator"*)***
  %130 = bitcast %"class.v8::TryCatch"* %25 to i8*
  %131 = getelementptr inbounds %"class.v8::Maybe.18", %"class.v8::Maybe.18"* %26, i64 0, i32 0
  %132 = bitcast %"class.v8::debug::PropertyIterator"* %104 to void (%"class.v8::Maybe.18"*, %"class.v8::debug::PropertyIterator"*)***
  %133 = getelementptr inbounds %"class.v8::Maybe.18", %"class.v8::Maybe.18"* %26, i64 0, i32 1, i32 0
  %134 = getelementptr inbounds %"class.v8::Maybe.18", %"class.v8::Maybe.18"* %26, i64 0, i32 1, i32 1, i32 0
  %135 = getelementptr inbounds %"class.v8::Maybe.18", %"class.v8::Maybe.18"* %26, i64 0, i32 1, i32 2
  %136 = bitcast %"class.v8::Local.2"* %135 to i64*
  %137 = getelementptr inbounds %"class.v8::Maybe.18", %"class.v8::Maybe.18"* %26, i64 0, i32 1, i32 3, i32 0
  %138 = bitcast %"class.v8_inspector::String16"* %27 to i8*
  %139 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %140 = bitcast %"class.v8_inspector::String16"* %27 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %141 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %140, i64 0, i32 1, i32 1
  %142 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %143 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = bitcast %"class.v8_inspector::String16"* %27 to i16*
  %145 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = bitcast %"class.v8_inspector::String16"* %21 to i16*
  %147 = bitcast %"class.v8_inspector::String16"* %27 to i8**
  %148 = bitcast %"class.v8_inspector::String16"* %28 to i8*
  %149 = bitcast %"class.v8_inspector::String16"* %28 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %149, i64 0, i32 1, i32 1
  %151 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %152 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = bitcast %"class.v8_inspector::String16"* %28 to i16*
  %154 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  %155 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %156 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %155, i64 0, i32 1, i32 1
  %157 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %158 = bitcast %"class.v8::TryCatch"* %7 to i8*
  %159 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  %160 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %160, i64 0, i32 1, i32 1
  %162 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %163 = bitcast %"class.v8_inspector::String16"* %9 to i8*
  %164 = bitcast %"class.v8_inspector::String16"* %9 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %165 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %164, i64 0, i32 1, i32 1
  %166 = bitcast %"class.v8_inspector::String16"* %9 to i8**
  %167 = bitcast %"class.v8_inspector::String16"* %28 to i8**
  %168 = bitcast %"class.v8::TryCatch"* %29 to i8*
  %169 = bitcast %"class.v8::TryCatch"* %13 to i8*
  %170 = bitcast %"class.v8_inspector::String16"* %14 to i8*
  %171 = bitcast %"class.v8_inspector::String16"* %14 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %171, i64 0, i32 1, i32 1
  %173 = bitcast %"class.v8_inspector::String16"* %14 to i8**
  %174 = bitcast %"class.v8_inspector::String16"* %15 to i8*
  %175 = bitcast %"class.v8_inspector::String16"* %15 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %175, i64 0, i32 1, i32 1
  %177 = bitcast %"class.v8_inspector::String16"* %15 to i8**
  %178 = bitcast %"class.v8::TryCatch"* %10 to i8*
  %179 = bitcast %"class.v8_inspector::String16"* %11 to i8*
  %180 = bitcast %"class.v8_inspector::String16"* %11 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %181 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %180, i64 0, i32 1, i32 1
  %182 = bitcast %"class.v8_inspector::String16"* %11 to i8**
  %183 = bitcast %"class.v8_inspector::String16"* %12 to i8*
  %184 = bitcast %"class.v8_inspector::String16"* %12 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %184, i64 0, i32 1, i32 1
  %186 = bitcast %"class.v8_inspector::String16"* %12 to i8**
  %187 = xor i1 %3, true
  %188 = bitcast %"struct.v8_inspector::PropertyMirror"* %30 to i8*
  %189 = bitcast %"struct.v8_inspector::PropertyMirror"* %30 to i8**
  %190 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %191 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %192 = bitcast %"struct.v8_inspector::PropertyMirror"* %30 to i16*
  %193 = bitcast %"struct.v8_inspector::PropertyMirror"* %30 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %193, i64 0, i32 1, i32 1
  %195 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %30, i64 0, i32 0, i32 1
  %196 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %30, i64 0, i32 1
  %197 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %30, i64 0, i32 2
  %198 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %30, i64 0, i32 3
  %199 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %30, i64 0, i32 4
  %200 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %30, i64 0, i32 5
  %201 = bitcast %"struct.v8_inspector::PropertyMirror"* %31 to i8*
  %202 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %31, i64 0, i32 0, i32 1
  %203 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %31, i64 0, i32 1
  %204 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %31, i64 0, i32 6
  %205 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %30, i64 0, i32 6, i32 0, i32 0, i32 0
  %206 = bitcast %"class.std::__1::unique_ptr.10"* %204 to i64*
  %207 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %31, i64 0, i32 7
  %208 = bitcast %"class.std::__1::unique_ptr.10"* %207 to i64*
  %209 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %31, i64 0, i32 8
  %210 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %30, i64 0, i32 8, i32 0, i32 0, i32 0
  %211 = bitcast %"class.std::__1::unique_ptr.10"* %209 to i64*
  %212 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %31, i64 0, i32 9
  %213 = bitcast %"class.std::__1::unique_ptr.10"* %212 to i64*
  %214 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %31, i64 0, i32 10
  %215 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %30, i64 0, i32 10, i32 0, i32 0, i32 0
  %216 = bitcast %"class.std::__1::unique_ptr.10"* %214 to i64*
  %217 = bitcast %"class.v8_inspector::ValueMirror::PropertyAccumulator"* %4 to i1 (%"class.v8_inspector::ValueMirror::PropertyAccumulator"*, %"struct.v8_inspector::PropertyMirror"*)***
  %218 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %31, i64 0, i32 10, i32 0, i32 0, i32 0
  %219 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %31, i64 0, i32 9, i32 0, i32 0, i32 0
  %220 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %31, i64 0, i32 8, i32 0, i32 0, i32 0
  %221 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %31, i64 0, i32 7, i32 0, i32 0, i32 0
  %222 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %31, i64 0, i32 6, i32 0, i32 0, i32 0
  %223 = bitcast %"struct.v8_inspector::PropertyMirror"* %31 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %223, i64 0, i32 1, i32 1
  %225 = bitcast %"struct.v8_inspector::PropertyMirror"* %31 to i8**
  %226 = bitcast %"class.v8::debug::PropertyIterator"* %104 to i16 (%"class.v8::debug::PropertyIterator"*)***
  %227 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %30, i64 0, i32 10, i32 0, i32 0, i32 0
  %228 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %30, i64 0, i32 9, i32 0, i32 0, i32 0
  %229 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %30, i64 0, i32 8, i32 0, i32 0, i32 0
  %230 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %30, i64 0, i32 7, i32 0, i32 0, i32 0
  %231 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %30, i64 0, i32 6, i32 0, i32 0, i32 0
  %232 = bitcast %"class.v8_inspector::ValueMirror"** %205 to <2 x %"class.v8_inspector::ValueMirror"*>*
  %233 = bitcast %"class.v8_inspector::ValueMirror"** %210 to <2 x %"class.v8_inspector::ValueMirror"*>*
  br label %237

234:                                              ; preds = %90
  %235 = call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* nonnull %17) #15
  br i1 %235, label %1050, label %236, !prof !2

236:                                              ; preds = %234
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0)) #14
  unreachable

237:                                              ; preds = %112, %1037
  %238 = phi i1 [ false, %112 ], [ %1038, %1037 ]
  %239 = phi i64 [ %92, %112 ], [ %1039, %1037 ]
  %240 = load i1 (%"class.v8::debug::PropertyIterator"*)**, i1 (%"class.v8::debug::PropertyIterator"*)*** %107, align 8
  %241 = getelementptr inbounds i1 (%"class.v8::debug::PropertyIterator"*)*, i1 (%"class.v8::debug::PropertyIterator"*)** %240, i64 10
  %242 = load i1 (%"class.v8::debug::PropertyIterator"*)*, i1 (%"class.v8::debug::PropertyIterator"*)** %241, align 8
  %243 = call zeroext i1 %242(%"class.v8::debug::PropertyIterator"* nonnull %104) #15
  %244 = or i1 %243, %113
  br i1 %244, label %245, label %1044

245:                                              ; preds = %237
  %246 = load %"class.v8::Name"* (%"class.v8::debug::PropertyIterator"*)**, %"class.v8::Name"* (%"class.v8::debug::PropertyIterator"*)*** %114, align 8
  %247 = getelementptr inbounds %"class.v8::Name"* (%"class.v8::debug::PropertyIterator"*)*, %"class.v8::Name"* (%"class.v8::debug::PropertyIterator"*)** %246, i64 4
  %248 = load %"class.v8::Name"* (%"class.v8::debug::PropertyIterator"*)*, %"class.v8::Name"* (%"class.v8::debug::PropertyIterator"*)** %247, align 8
  %249 = call %"class.v8::Name"* %248(%"class.v8::debug::PropertyIterator"* nonnull %104) #15
  %250 = inttoptr i64 %239 to %"class.v8::Set"*
  %251 = bitcast %"class.v8::Name"* %249 to %"class.v8::Value"*
  %252 = call i16 @_ZN2v83Set3HasENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Set"* %250, %"class.v8::Context"* %0, %"class.v8::Value"* %251) #15
  %253 = trunc i16 %252 to i8
  %254 = icmp eq i8 %253, 0
  br i1 %254, label %1044, label %255

255:                                              ; preds = %245
  %256 = icmp ugt i16 %252, 255
  br i1 %256, label %257, label %269

257:                                              ; preds = %255
  %258 = load i16 (%"class.v8::debug::PropertyIterator"*)**, i16 (%"class.v8::debug::PropertyIterator"*)*** %226, align 8
  %259 = getelementptr inbounds i16 (%"class.v8::debug::PropertyIterator"*)*, i16 (%"class.v8::debug::PropertyIterator"*)** %258, i64 3
  %260 = load i16 (%"class.v8::debug::PropertyIterator"*)*, i16 (%"class.v8::debug::PropertyIterator"*)** %259, align 8
  %261 = call i16 %260(%"class.v8::debug::PropertyIterator"* nonnull %104) #15
  %262 = trunc i16 %261 to i8
  %263 = icmp ne i8 %262, 0
  %264 = icmp ugt i16 %261, 255
  %265 = and i1 %264, %263
  br i1 %265, label %1037, label %266

266:                                              ; preds = %257
  %267 = call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* nonnull %17) #15
  br i1 %267, label %1044, label %268, !prof !2

268:                                              ; preds = %266
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0)) #14
  unreachable

269:                                              ; preds = %255
  %270 = call %"class.v8::Set"* @_ZN2v83Set3AddENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Set"* %250, %"class.v8::Context"* %0, %"class.v8::Value"* %251) #15
  %271 = ptrtoint %"class.v8::Set"* %270 to i64
  %272 = icmp eq %"class.v8::Set"* %270, null
  br i1 %272, label %1044, label %273

273:                                              ; preds = %269
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %115) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 0, i64 32, i1 false) #15
  %274 = bitcast %"class.v8::Name"* %249 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = and i64 %275, 3
  %277 = icmp eq i64 %276, 1
  br i1 %277, label %278, label %292

278:                                              ; preds = %273
  %279 = add i64 %275, -1
  %280 = inttoptr i64 %279 to i32*
  %281 = load i32, i32* %280, align 4
  %282 = and i64 %275, -4294967296
  %283 = zext i32 %281 to i64
  %284 = or i64 %282, %283
  %285 = add i64 %284, 7
  %286 = inttoptr i64 %285 to i16*
  %287 = load i16, i16* %286, align 2
  %288 = icmp ult i16 %287, 64
  br i1 %288, label %289, label %292

289:                                              ; preds = %278
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %126) #15
  %290 = bitcast %"class.v8::Name"* %249 to %"class.v8::String"*
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %22, %"class.v8::Isolate"* %32, %"class.v8::String"* %290) #15
  %291 = load i64, i64* %127, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* nonnull align 8 %126, i64 24, i1 false) #15
  store i64 %291, i64* %125, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %126) #15
  br label %304

292:                                              ; preds = %273, %278
  %293 = bitcast %"class.v8::Name"* %249 to %"class.v8::Symbol"*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %116) #15
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %117)
  %294 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15, !noalias !3
  %295 = call %"class.v8::Value"* @_ZNK2v86Symbol11DescriptionEPNS_7IsolateE(%"class.v8::Symbol"* %293, %"class.v8::Isolate"* %294) #15, !noalias !3
  call void @_ZN12v8_inspector29toProtocolStringWithTypeCheckEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8_inspector::String16"* nonnull sret %16, %"class.v8::Isolate"* %294, %"class.v8::Value"* %295) #15, !noalias !3
  call void @_ZN12v8_inspector8String166concatIJPKcS0_S3_EEES0_DpT_(%"class.v8_inspector::String16"* nonnull sret %23, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), %"class.v8_inspector::String16"* nonnull %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0)) #15
  %296 = load i8, i8* %119, align 1, !noalias !3
  %297 = icmp slt i8 %296, 0
  br i1 %297, label %298, label %300

298:                                              ; preds = %292
  %299 = load i8*, i8** %120, align 8, !noalias !3
  call void @_ZdlPv(i8* %299) #16
  br label %300

300:                                              ; preds = %292, %298
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %117)
  %301 = load i64, i64* %124, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* nonnull align 8 %116, i64 24, i1 false) #15
  store i64 %301, i64* %125, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %116) #15
  %302 = call %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector11ValueMirror6createEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8::Context"* %0, %"class.v8::Value"* %251)
  %303 = ptrtoint %"class.v8_inspector::ValueMirror"* %302 to i64
  br label %304

304:                                              ; preds = %300, %289
  %305 = phi i64 [ %291, %289 ], [ %301, %300 ]
  %306 = phi i64 [ 0, %289 ], [ %303, %300 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %128) #15
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %24, %"class.v8::Isolate"* %32) #15
  %307 = load i64 (%"class.v8::debug::PropertyIterator"*)**, i64 (%"class.v8::debug::PropertyIterator"*)*** %129, align 8
  %308 = getelementptr inbounds i64 (%"class.v8::debug::PropertyIterator"*)*, i64 (%"class.v8::debug::PropertyIterator"*)** %307, i64 8
  %309 = load i64 (%"class.v8::debug::PropertyIterator"*)*, i64 (%"class.v8::debug::PropertyIterator"*)** %308, align 8
  %310 = call i64 %309(%"class.v8::debug::PropertyIterator"* nonnull %104) #15
  %311 = trunc i64 %310 to i8
  %312 = lshr i64 %310, 32
  %313 = icmp eq i8 %311, 0
  br i1 %313, label %314, label %318, !prof !6

314:                                              ; preds = %304
  %315 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %24) #15
  %316 = call %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector11ValueMirror6createEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8::Context"* %0, %"class.v8::Value"* %315)
  %317 = ptrtoint %"class.v8_inspector::ValueMirror"* %316 to i64
  br label %670

318:                                              ; preds = %304
  %319 = load i1 (%"class.v8::debug::PropertyIterator"*)**, i1 (%"class.v8::debug::PropertyIterator"*)*** %107, align 8
  %320 = getelementptr inbounds i1 (%"class.v8::debug::PropertyIterator"*)*, i1 (%"class.v8::debug::PropertyIterator"*)** %319, i64 5
  %321 = load i1 (%"class.v8::debug::PropertyIterator"*)*, i1 (%"class.v8::debug::PropertyIterator"*)** %320, align 8
  %322 = call zeroext i1 %321(%"class.v8::debug::PropertyIterator"* nonnull %104) #15
  br i1 %322, label %323, label %416

323:                                              ; preds = %318
  %324 = load i1 (%"class.v8::debug::PropertyIterator"*)**, i1 (%"class.v8::debug::PropertyIterator"*)*** %107, align 8
  %325 = getelementptr inbounds i1 (%"class.v8::debug::PropertyIterator"*)*, i1 (%"class.v8::debug::PropertyIterator"*)** %324, i64 6
  %326 = load i1 (%"class.v8::debug::PropertyIterator"*)*, i1 (%"class.v8::debug::PropertyIterator"*)** %325, align 8
  %327 = call zeroext i1 %326(%"class.v8::debug::PropertyIterator"* nonnull %104) #15
  br i1 %327, label %328, label %362

328:                                              ; preds = %323
  %329 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %169) #15
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %13, %"class.v8::Isolate"* %329) #15
  %330 = call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %329) #15
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %170) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #15
  %331 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %329, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %14) #15
  %332 = bitcast %"class.v8::String"* %331 to %"class.v8::Value"*
  %333 = call i16 @_ZN2v86Object3SetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEES5_(%"class.v8::Object"* %330, %"class.v8::Context"* %0, %"class.v8::Value"* %332, %"class.v8::Value"* %251) #15
  %334 = trunc i16 %333 to i8
  %335 = icmp eq i8 %334, 0
  %336 = load i8, i8* %172, align 1
  %337 = icmp slt i8 %336, 0
  br i1 %337, label %338, label %340

338:                                              ; preds = %328
  %339 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %339) #16
  br label %340

340:                                              ; preds = %338, %328
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %170) #15
  br i1 %335, label %359, label %341

341:                                              ; preds = %340
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %174) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #15
  %342 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %329, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %15) #15
  %343 = bitcast %"class.v8::String"* %342 to %"class.v8::Value"*
  %344 = call i16 @_ZN2v86Object3SetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEES5_(%"class.v8::Object"* %330, %"class.v8::Context"* %0, %"class.v8::Value"* %343, %"class.v8::Value"* %91) #15
  %345 = trunc i16 %344 to i8
  %346 = icmp eq i8 %345, 0
  %347 = load i8, i8* %176, align 1
  %348 = icmp slt i8 %347, 0
  br i1 %348, label %349, label %351

349:                                              ; preds = %341
  %350 = load i8*, i8** %177, align 8
  call void @_ZdlPv(i8* %350) #16
  br label %351

351:                                              ; preds = %349, %341
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %174) #15
  br i1 %346, label %359, label %352

352:                                              ; preds = %351
  %353 = bitcast %"class.v8::Object"* %330 to %"class.v8::Value"*
  %354 = call %"class.v8::Function"* @_ZN2v88Function3NewENS_5LocalINS_7ContextEEEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS1_IS5_EEiNS_19ConstructorBehaviorENS_14SideEffectTypeE(%"class.v8::Context"* %0, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN12v8_inspector12_GLOBAL__N_120nativeGetterCallbackERKN2v820FunctionCallbackInfoINS1_5ValueEEE, %"class.v8::Value"* %353, i32 0, i32 0, i32 0) #15
  %355 = icmp eq %"class.v8::Function"* %354, null
  br i1 %355, label %359, label %356

356:                                              ; preds = %352
  %357 = bitcast %"class.v8::Function"* %354 to %"class.v8::Value"*
  %358 = call %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector11ValueMirror6createEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8::Context"* %0, %"class.v8::Value"* nonnull %357) #15
  br label %359

359:                                              ; preds = %340, %351, %352, %356
  %360 = phi %"class.v8_inspector::ValueMirror"* [ null, %340 ], [ null, %351 ], [ %358, %356 ], [ null, %352 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %169) #15
  %361 = ptrtoint %"class.v8_inspector::ValueMirror"* %360 to i64
  br label %362

362:                                              ; preds = %359, %323
  %363 = phi i64 [ %361, %359 ], [ 0, %323 ]
  %364 = load i1 (%"class.v8::debug::PropertyIterator"*)**, i1 (%"class.v8::debug::PropertyIterator"*)*** %107, align 8
  %365 = getelementptr inbounds i1 (%"class.v8::debug::PropertyIterator"*)*, i1 (%"class.v8::debug::PropertyIterator"*)** %364, i64 7
  %366 = load i1 (%"class.v8::debug::PropertyIterator"*)*, i1 (%"class.v8::debug::PropertyIterator"*)** %365, align 8
  %367 = call zeroext i1 %366(%"class.v8::debug::PropertyIterator"* nonnull %104) #15
  br i1 %367, label %368, label %402

368:                                              ; preds = %362
  %369 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %178) #15
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %10, %"class.v8::Isolate"* %369) #15
  %370 = call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %369) #15
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %179) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #15
  %371 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %369, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %11) #15
  %372 = bitcast %"class.v8::String"* %371 to %"class.v8::Value"*
  %373 = call i16 @_ZN2v86Object3SetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEES5_(%"class.v8::Object"* %370, %"class.v8::Context"* %0, %"class.v8::Value"* %372, %"class.v8::Value"* %251) #15
  %374 = trunc i16 %373 to i8
  %375 = icmp eq i8 %374, 0
  %376 = load i8, i8* %181, align 1
  %377 = icmp slt i8 %376, 0
  br i1 %377, label %378, label %380

378:                                              ; preds = %368
  %379 = load i8*, i8** %182, align 8
  call void @_ZdlPv(i8* %379) #16
  br label %380

380:                                              ; preds = %378, %368
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %179) #15
  br i1 %375, label %399, label %381

381:                                              ; preds = %380
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %183) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #15
  %382 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %369, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %12) #15
  %383 = bitcast %"class.v8::String"* %382 to %"class.v8::Value"*
  %384 = call i16 @_ZN2v86Object3SetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEES5_(%"class.v8::Object"* %370, %"class.v8::Context"* %0, %"class.v8::Value"* %383, %"class.v8::Value"* %91) #15
  %385 = trunc i16 %384 to i8
  %386 = icmp eq i8 %385, 0
  %387 = load i8, i8* %185, align 1
  %388 = icmp slt i8 %387, 0
  br i1 %388, label %389, label %391

389:                                              ; preds = %381
  %390 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %390) #16
  br label %391

391:                                              ; preds = %389, %381
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %183) #15
  br i1 %386, label %399, label %392

392:                                              ; preds = %391
  %393 = bitcast %"class.v8::Object"* %370 to %"class.v8::Value"*
  %394 = call %"class.v8::Function"* @_ZN2v88Function3NewENS_5LocalINS_7ContextEEEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS1_IS5_EEiNS_19ConstructorBehaviorENS_14SideEffectTypeE(%"class.v8::Context"* %0, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN12v8_inspector12_GLOBAL__N_120nativeSetterCallbackERKN2v820FunctionCallbackInfoINS1_5ValueEEE, %"class.v8::Value"* %393, i32 1, i32 0, i32 0) #15
  %395 = icmp eq %"class.v8::Function"* %394, null
  br i1 %395, label %399, label %396

396:                                              ; preds = %392
  %397 = bitcast %"class.v8::Function"* %394 to %"class.v8::Value"*
  %398 = call %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector11ValueMirror6createEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8::Context"* %0, %"class.v8::Value"* nonnull %397) #15
  br label %399

399:                                              ; preds = %380, %391, %392, %396
  %400 = phi %"class.v8_inspector::ValueMirror"* [ null, %380 ], [ null, %391 ], [ %398, %396 ], [ null, %392 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %10) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %178) #15
  %401 = ptrtoint %"class.v8_inspector::ValueMirror"* %400 to i64
  br label %402

402:                                              ; preds = %399, %362
  %403 = phi i64 [ %401, %399 ], [ 0, %362 ]
  %404 = trunc i64 %312 to i8
  %405 = and i8 %404, 1
  %406 = xor i8 %405, 1
  %407 = and i64 %310, 8589934592
  %408 = icmp eq i64 %407, 0
  %409 = lshr i64 %310, 34
  %410 = trunc i64 %409 to i8
  %411 = and i8 %410, 1
  %412 = xor i8 %411, 1
  %413 = icmp eq i64 %363, 0
  br i1 %413, label %414, label %681

414:                                              ; preds = %402
  %415 = icmp ne i64 %403, 0
  br label %670

416:                                              ; preds = %318
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %130) #15
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %25, %"class.v8::Isolate"* %32) #15
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %131) #15
  %417 = load void (%"class.v8::Maybe.18"*, %"class.v8::debug::PropertyIterator"*)**, void (%"class.v8::Maybe.18"*, %"class.v8::debug::PropertyIterator"*)*** %132, align 8
  %418 = getelementptr inbounds void (%"class.v8::Maybe.18"*, %"class.v8::debug::PropertyIterator"*)*, void (%"class.v8::Maybe.18"*, %"class.v8::debug::PropertyIterator"*)** %417, i64 9
  %419 = load void (%"class.v8::Maybe.18"*, %"class.v8::debug::PropertyIterator"*)*, void (%"class.v8::Maybe.18"*, %"class.v8::debug::PropertyIterator"*)** %418, align 8
  call void %419(%"class.v8::Maybe.18"* nonnull sret %26, %"class.v8::debug::PropertyIterator"* nonnull %104) #15
  %420 = load i8, i8* %131, align 8, !range !7
  %421 = icmp eq i8 %420, 0
  br i1 %421, label %422, label %426, !prof !6

422:                                              ; preds = %416
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %131) #15
  %423 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %25) #15
  %424 = call %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector11ValueMirror6createEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8::Context"* %0, %"class.v8::Value"* %423)
  %425 = ptrtoint %"class.v8_inspector::ValueMirror"* %424 to i64
  br label %660

426:                                              ; preds = %416
  %427 = load i8, i8* %133, align 8
  %428 = load %"class.v8::Value"*, %"class.v8::Value"** %134, align 8
  %429 = load i64, i64* %136, align 8
  %430 = load %"class.v8::Value"*, %"class.v8::Value"** %137, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %131) #15
  %431 = and i8 %427, 32
  %432 = icmp eq i8 %431, 0
  %433 = lshr i8 %427, 4
  %434 = and i8 %433, 1
  %435 = select i1 %432, i8 0, i8 %434
  %436 = and i8 %427, 3
  %437 = icmp eq i8 %436, 3
  %438 = and i8 %427, 8
  %439 = icmp eq i8 %438, 0
  %440 = lshr i8 %427, 2
  %441 = and i8 %440, 1
  %442 = select i1 %439, i8 0, i8 %441
  %443 = icmp eq %"class.v8::Value"* %428, null
  br i1 %443, label %447, label %444

444:                                              ; preds = %426
  %445 = call %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector11ValueMirror6createEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8::Context"* %0, %"class.v8::Value"* nonnull %428)
  %446 = ptrtoint %"class.v8_inspector::ValueMirror"* %445 to i64
  br label %447

447:                                              ; preds = %444, %426
  %448 = phi i64 [ 0, %426 ], [ %446, %444 ]
  %449 = inttoptr i64 %429 to %"class.v8::Value"*
  %450 = icmp eq i64 %429, 0
  br i1 %450, label %459, label %451

451:                                              ; preds = %447
  %452 = call %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector11ValueMirror6createEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8::Context"* %0, %"class.v8::Value"* nonnull %449)
  %453 = ptrtoint %"class.v8_inspector::ValueMirror"* %452 to i64
  %454 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* nonnull %449) #15
  br i1 %454, label %455, label %459

455:                                              ; preds = %451
  %456 = inttoptr i64 %429 to %"class.v8::Function"*
  %457 = call i32 @_ZNK2v88Function8ScriptIdEv(%"class.v8::Function"* %456) #15
  %458 = icmp eq i32 %457, 0
  br label %459

459:                                              ; preds = %451, %455, %447
  %460 = phi i64 [ 0, %447 ], [ %453, %455 ], [ %453, %451 ]
  %461 = phi i1 [ false, %447 ], [ %458, %455 ], [ false, %451 ]
  %462 = icmp eq %"class.v8::Value"* %430, null
  br i1 %462, label %466, label %463

463:                                              ; preds = %459
  %464 = call %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector11ValueMirror6createEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8::Context"* %0, %"class.v8::Value"* nonnull %430)
  %465 = ptrtoint %"class.v8_inspector::ValueMirror"* %464 to i64
  br label %466

466:                                              ; preds = %463, %459
  %467 = phi i64 [ 0, %459 ], [ %465, %463 ]
  %468 = inttoptr i64 %460 to %"class.v8_inspector::ValueMirror"*
  %469 = or i64 %467, %460
  %470 = icmp ne i64 %469, 0
  %471 = call zeroext i1 @_ZNK2v85Value8IsSymbolEv(%"class.v8::Value"* %91) #15
  br i1 %471, label %476, label %472

472:                                              ; preds = %466
  %473 = load i8, i8* %122, align 1
  %474 = load i64, i64* %139, align 8
  %475 = zext i8 %473 to i64
  br label %512

476:                                              ; preds = %466
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %138) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %27, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)) #15
  %477 = load i8, i8* %122, align 1
  %478 = icmp slt i8 %477, 0
  %479 = load i64, i64* %139, align 8
  %480 = zext i8 %477 to i64
  %481 = select i1 %478, i64 %479, i64 %480
  %482 = load i8, i8* %141, align 1
  %483 = icmp slt i8 %482, 0
  %484 = load i64, i64* %142, align 8
  %485 = zext i8 %482 to i64
  %486 = select i1 %483, i64 %484, i64 %485
  %487 = icmp eq i64 %481, %486
  br i1 %487, label %488, label %507

488:                                              ; preds = %476
  %489 = icmp eq i64 %481, 0
  br i1 %489, label %507, label %490

490:                                              ; preds = %488
  %491 = load i16*, i16** %143, align 8
  %492 = select i1 %483, i16* %491, i16* %144
  %493 = load i16*, i16** %145, align 8
  %494 = select i1 %478, i16* %493, i16* %146
  br label %495

495:                                              ; preds = %502, %490
  %496 = phi i64 [ %503, %502 ], [ %481, %490 ]
  %497 = phi i16* [ %505, %502 ], [ %492, %490 ]
  %498 = phi i16* [ %504, %502 ], [ %494, %490 ]
  %499 = load i16, i16* %498, align 2
  %500 = load i16, i16* %497, align 2
  %501 = icmp eq i16 %500, %499
  br i1 %501, label %502, label %507

502:                                              ; preds = %495
  %503 = add i64 %496, -1
  %504 = getelementptr inbounds i16, i16* %498, i64 1
  %505 = getelementptr inbounds i16, i16* %497, i64 1
  %506 = icmp eq i64 %503, 0
  br i1 %506, label %507, label %495

507:                                              ; preds = %495, %502, %476, %488
  %508 = phi i1 [ true, %488 ], [ false, %476 ], [ true, %502 ], [ false, %495 ]
  br i1 %483, label %509, label %511

509:                                              ; preds = %507
  %510 = load i8*, i8** %147, align 8
  call void @_ZdlPv(i8* %510) #16
  br label %511

511:                                              ; preds = %509, %507
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %138) #15
  br i1 %508, label %627, label %512

512:                                              ; preds = %472, %511
  %513 = phi i64 [ %475, %472 ], [ %480, %511 ]
  %514 = phi i64 [ %474, %472 ], [ %479, %511 ]
  %515 = phi i8 [ %473, %472 ], [ %477, %511 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %148) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %28, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)) #15
  %516 = icmp slt i8 %515, 0
  %517 = select i1 %516, i64 %514, i64 %513
  %518 = load i8, i8* %150, align 1
  %519 = icmp slt i8 %518, 0
  %520 = load i64, i64* %151, align 8
  %521 = zext i8 %518 to i64
  %522 = select i1 %519, i64 %520, i64 %521
  %523 = icmp eq i64 %517, %522
  br i1 %523, label %524, label %543

524:                                              ; preds = %512
  %525 = icmp eq i64 %517, 0
  br i1 %525, label %620, label %526

526:                                              ; preds = %524
  %527 = load i16*, i16** %152, align 8
  %528 = select i1 %519, i16* %527, i16* %153
  %529 = load i16*, i16** %145, align 8
  %530 = select i1 %516, i16* %529, i16* %146
  br label %531

531:                                              ; preds = %538, %526
  %532 = phi i64 [ %539, %538 ], [ %517, %526 ]
  %533 = phi i16* [ %541, %538 ], [ %528, %526 ]
  %534 = phi i16* [ %540, %538 ], [ %530, %526 ]
  %535 = load i16, i16* %534, align 2
  %536 = load i16, i16* %533, align 2
  %537 = icmp eq i16 %536, %535
  br i1 %537, label %538, label %543

538:                                              ; preds = %531
  %539 = add i64 %532, -1
  %540 = getelementptr inbounds i16, i16* %534, i64 1
  %541 = getelementptr inbounds i16, i16* %533, i64 1
  %542 = icmp eq i64 %539, 0
  br i1 %542, label %620, label %531

543:                                              ; preds = %531, %512
  %544 = and i1 %103, %461
  br i1 %544, label %545, label %620

545:                                              ; preds = %543
  %546 = load i64, i64* %274, align 8
  %547 = and i64 %546, 3
  %548 = icmp eq i64 %547, 1
  br i1 %548, label %549, label %616

549:                                              ; preds = %545
  %550 = add i64 %546, -1
  %551 = inttoptr i64 %550 to i32*
  %552 = load i32, i32* %551, align 4
  %553 = and i64 %546, -4294967296
  %554 = zext i32 %552 to i64
  %555 = or i64 %553, %554
  %556 = add i64 %555, 7
  %557 = inttoptr i64 %556 to i16*
  %558 = load i16, i16* %557, align 2
  %559 = icmp ult i16 %558, 64
  br i1 %559, label %560, label %616

560:                                              ; preds = %549
  %561 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15
  %562 = bitcast %"class.v8::Name"* %249 to %"class.v8::String"*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %154) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0)) #15
  %563 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %561, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %6) #15
  %564 = call zeroext i1 @_ZNK2v86String12StringEqualsENS_5LocalIS0_EE(%"class.v8::String"* %562, %"class.v8::String"* %563) #15
  %565 = load i8, i8* %156, align 1
  %566 = icmp slt i8 %565, 0
  br i1 %566, label %567, label %569

567:                                              ; preds = %560
  %568 = load i8*, i8** %157, align 8
  call void @_ZdlPv(i8* %568) #16
  br label %569

569:                                              ; preds = %567, %560
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %154) #15
  br i1 %564, label %570, label %616

570:                                              ; preds = %569
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %158) #15
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %7, %"class.v8::Isolate"* %561) #15
  %571 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %0) #15
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %159) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i64 0, i64 0)) #15
  %572 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %561, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %8) #15
  %573 = bitcast %"class.v8::String"* %572 to %"class.v8::Name"*
  %574 = call %"class.v8::Value"* @_ZN2v86Object20GetRealNamedPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"* %571, %"class.v8::Context"* %0, %"class.v8::Name"* %573) #15
  %575 = icmp eq %"class.v8::Value"* %574, null
  %576 = load i8, i8* %161, align 1
  %577 = icmp slt i8 %576, 0
  br i1 %577, label %578, label %580

578:                                              ; preds = %570
  %579 = load i8*, i8** %162, align 8
  call void @_ZdlPv(i8* %579) #16
  br label %580

580:                                              ; preds = %578, %570
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %159) #15
  br i1 %575, label %590, label %581

581:                                              ; preds = %580
  %582 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %574) #15
  br i1 %582, label %583, label %590

583:                                              ; preds = %581
  %584 = bitcast %"class.v8::Value"* %574 to %"class.v8::Object"*
  %585 = call i16 @_ZN2v85Value10InstanceOfENS_5LocalINS_7ContextEEENS1_INS_6ObjectEEE(%"class.v8::Value"* %91, %"class.v8::Context"* %0, %"class.v8::Object"* nonnull %584) #15
  %586 = trunc i16 %585 to i8
  %587 = icmp ne i8 %586, 0
  %588 = icmp ugt i16 %585, 255
  %589 = and i1 %588, %587
  br i1 %589, label %614, label %590

590:                                              ; preds = %583, %581, %580
  %591 = call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* nonnull %7) #15
  br i1 %591, label %592, label %593

592:                                              ; preds = %590
  call void @_ZN2v88TryCatch5ResetEv(%"class.v8::TryCatch"* nonnull %7) #15
  br label %593

593:                                              ; preds = %592, %590
  %594 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %0) #15
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %163) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0)) #15
  %595 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %561, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %9) #15
  %596 = bitcast %"class.v8::String"* %595 to %"class.v8::Name"*
  %597 = call %"class.v8::Value"* @_ZN2v86Object20GetRealNamedPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"* %594, %"class.v8::Context"* %0, %"class.v8::Name"* %596) #15
  %598 = icmp eq %"class.v8::Value"* %597, null
  %599 = load i8, i8* %165, align 1
  %600 = icmp slt i8 %599, 0
  br i1 %600, label %601, label %603

601:                                              ; preds = %593
  %602 = load i8*, i8** %166, align 8
  call void @_ZdlPv(i8* %602) #16
  br label %603

603:                                              ; preds = %601, %593
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %163) #15
  br i1 %598, label %613, label %604

604:                                              ; preds = %603
  %605 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %597) #15
  br i1 %605, label %606, label %613

606:                                              ; preds = %604
  %607 = bitcast %"class.v8::Value"* %597 to %"class.v8::Object"*
  %608 = call i16 @_ZN2v85Value10InstanceOfENS_5LocalINS_7ContextEEENS1_INS_6ObjectEEE(%"class.v8::Value"* %91, %"class.v8::Context"* %0, %"class.v8::Object"* nonnull %607) #15
  %609 = trunc i16 %608 to i8
  %610 = icmp ne i8 %609, 0
  %611 = icmp ugt i16 %608, 255
  %612 = and i1 %611, %610
  br i1 %612, label %614, label %613

613:                                              ; preds = %606, %604, %603
  br label %614

614:                                              ; preds = %613, %606, %583
  %615 = phi i1 [ true, %583 ], [ false, %613 ], [ true, %606 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %158) #15
  br label %616

616:                                              ; preds = %545, %549, %569, %614
  %617 = phi i1 [ false, %549 ], [ %615, %614 ], [ false, %569 ], [ false, %545 ]
  %618 = xor i1 %617, true
  %619 = load i8, i8* %150, align 1
  br label %620

620:                                              ; preds = %538, %524, %543, %616
  %621 = phi i8 [ %518, %543 ], [ %619, %616 ], [ %518, %524 ], [ %518, %538 ]
  %622 = phi i1 [ false, %543 ], [ %618, %616 ], [ false, %524 ], [ false, %538 ]
  %623 = icmp slt i8 %621, 0
  br i1 %623, label %624, label %626

624:                                              ; preds = %620
  %625 = load i8*, i8** %167, align 8
  call void @_ZdlPv(i8* %625) #16
  br label %626

626:                                              ; preds = %624, %620
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %148) #15
  br i1 %622, label %627, label %660

627:                                              ; preds = %511, %626
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %168) #15
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %29, %"class.v8::Isolate"* %32) #15
  %628 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %93, %"class.v8::Context"* %0, %"class.v8::Value"* %251) #15
  %629 = icmp eq %"class.v8::Value"* %628, null
  br i1 %629, label %655, label %630

630:                                              ; preds = %627
  %631 = call %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector11ValueMirror6createEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8::Context"* %0, %"class.v8::Value"* nonnull %628)
  %632 = ptrtoint %"class.v8_inspector::ValueMirror"* %631 to i64
  %633 = icmp eq i64 %448, 0
  br i1 %633, label %640, label %634

634:                                              ; preds = %630
  %635 = inttoptr i64 %448 to %"class.v8_inspector::ValueMirror"*
  %636 = inttoptr i64 %448 to void (%"class.v8_inspector::ValueMirror"*)***
  %637 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %636, align 8
  %638 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %637, i64 1
  %639 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %638, align 8
  call void %639(%"class.v8_inspector::ValueMirror"* nonnull %635) #15
  br label %640

640:                                              ; preds = %634, %630
  %641 = icmp eq i64 %467, 0
  br i1 %641, label %648, label %642

642:                                              ; preds = %640
  %643 = inttoptr i64 %467 to %"class.v8_inspector::ValueMirror"*
  %644 = inttoptr i64 %467 to void (%"class.v8_inspector::ValueMirror"*)***
  %645 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %644, align 8
  %646 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %645, i64 1
  %647 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %646, align 8
  call void %647(%"class.v8_inspector::ValueMirror"* nonnull %643) #15
  br label %648

648:                                              ; preds = %640, %642
  %649 = icmp eq i64 %460, 0
  br i1 %649, label %655, label %650

650:                                              ; preds = %648
  %651 = inttoptr i64 %460 to void (%"class.v8_inspector::ValueMirror"*)***
  %652 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %651, align 8
  %653 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %652, i64 1
  %654 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %653, align 8
  call void %654(%"class.v8_inspector::ValueMirror"* nonnull %468) #15
  br label %655

655:                                              ; preds = %627, %650, %648
  %656 = phi i64 [ %467, %627 ], [ 0, %648 ], [ 0, %650 ]
  %657 = phi i64 [ %460, %627 ], [ 0, %648 ], [ 0, %650 ]
  %658 = phi i64 [ %448, %627 ], [ %632, %648 ], [ %632, %650 ]
  %659 = phi i1 [ %243, %627 ], [ true, %648 ], [ true, %650 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %29) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %168) #15
  br label %660

660:                                              ; preds = %626, %655, %422
  %661 = phi i64 [ 0, %655 ], [ 0, %626 ], [ %425, %422 ]
  %662 = phi i64 [ %656, %655 ], [ %467, %626 ], [ 0, %422 ]
  %663 = phi i64 [ %657, %655 ], [ %460, %626 ], [ 0, %422 ]
  %664 = phi i64 [ %658, %655 ], [ %448, %626 ], [ 0, %422 ]
  %665 = phi i1 [ %470, %655 ], [ %470, %626 ], [ false, %422 ]
  %666 = phi i8 [ %442, %655 ], [ %442, %626 ], [ 0, %422 ]
  %667 = phi i1 [ %437, %655 ], [ %437, %626 ], [ false, %422 ]
  %668 = phi i8 [ %435, %655 ], [ %435, %626 ], [ 0, %422 ]
  %669 = phi i1 [ %659, %655 ], [ %243, %626 ], [ %243, %422 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %25) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %130) #15
  br label %670

670:                                              ; preds = %414, %660, %314
  %671 = phi i64 [ 0, %414 ], [ %661, %660 ], [ %317, %314 ]
  %672 = phi i64 [ %403, %414 ], [ %662, %660 ], [ 0, %314 ]
  %673 = phi i64 [ 0, %414 ], [ %663, %660 ], [ 0, %314 ]
  %674 = phi i64 [ 0, %414 ], [ %664, %660 ], [ 0, %314 ]
  %675 = phi i1 [ %415, %414 ], [ %665, %660 ], [ false, %314 ]
  %676 = phi i8 [ %412, %414 ], [ %666, %660 ], [ 0, %314 ]
  %677 = phi i1 [ %408, %414 ], [ %667, %660 ], [ false, %314 ]
  %678 = phi i8 [ %406, %414 ], [ %668, %660 ], [ 0, %314 ]
  %679 = phi i1 [ %243, %414 ], [ %669, %660 ], [ %243, %314 ]
  %680 = or i1 %675, %187
  br i1 %680, label %681, label %984

681:                                              ; preds = %402, %670
  %682 = phi i1 [ %679, %670 ], [ %243, %402 ]
  %683 = phi i8 [ %678, %670 ], [ %406, %402 ]
  %684 = phi i1 [ %677, %670 ], [ %408, %402 ]
  %685 = phi i8 [ %676, %670 ], [ %412, %402 ]
  %686 = phi i64 [ %674, %670 ], [ 0, %402 ]
  %687 = phi i64 [ %673, %670 ], [ %363, %402 ]
  %688 = phi i64 [ %672, %670 ], [ %403, %402 ]
  %689 = phi i64 [ %671, %670 ], [ 0, %402 ]
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %188) #15
  %690 = load i8, i8* %122, align 1
  %691 = icmp slt i8 %690, 0
  br i1 %691, label %693, label %692

692:                                              ; preds = %681
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %188, i8* nonnull align 8 %115, i64 24, i1 false) #15
  br label %863

693:                                              ; preds = %681
  %694 = load i16*, i16** %145, align 8
  %695 = load i64, i64* %139, align 8
  %696 = icmp ult i64 %695, 11
  br i1 %696, label %697, label %699

697:                                              ; preds = %693
  %698 = trunc i64 %695 to i8
  store i8 %698, i8* %194, align 1
  br label %713

699:                                              ; preds = %693
  %700 = icmp ugt i64 %695, 9223372036854775791
  br i1 %700, label %701, label %703

701:                                              ; preds = %699
  %702 = bitcast %"struct.v8_inspector::PropertyMirror"* %30 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %702) #14
  unreachable

703:                                              ; preds = %699
  %704 = add nuw nsw i64 %695, 8
  %705 = and i64 %704, -8
  %706 = icmp slt i64 %705, 0
  br i1 %706, label %707, label %708

707:                                              ; preds = %703
  call void @abort() #14
  unreachable

708:                                              ; preds = %703
  %709 = shl i64 %705, 1
  %710 = call i8* @_Znwm(i64 %709) #16
  %711 = bitcast i8* %710 to i16*
  store i8* %710, i8** %189, align 8
  %712 = or i64 %705, -9223372036854775808
  store i64 %712, i64* %190, align 8
  store i64 %695, i64* %191, align 8
  br label %713

713:                                              ; preds = %708, %697
  %714 = phi i16* [ %192, %697 ], [ %711, %708 ]
  %715 = add nuw nsw i64 %695, 1
  %716 = add i64 %695, 1
  %717 = icmp ult i64 %716, 16
  br i1 %717, label %808, label %718

718:                                              ; preds = %713
  %719 = getelementptr i16, i16* %714, i64 1
  %720 = getelementptr i16, i16* %719, i64 %695
  %721 = getelementptr i16, i16* %694, i64 1
  %722 = getelementptr i16, i16* %721, i64 %695
  %723 = icmp ult i16* %714, %722
  %724 = icmp ult i16* %694, %720
  %725 = and i1 %723, %724
  br i1 %725, label %808, label %726

726:                                              ; preds = %718
  %727 = and i64 %716, -16
  %728 = getelementptr i16, i16* %714, i64 %727
  %729 = sub i64 %715, %727
  %730 = getelementptr i16, i16* %694, i64 %727
  %731 = add i64 %727, -16
  %732 = lshr exact i64 %731, 4
  %733 = add nuw nsw i64 %732, 1
  %734 = and i64 %733, 3
  %735 = icmp ult i64 %731, 48
  br i1 %735, label %787, label %736

736:                                              ; preds = %726
  %737 = sub nsw i64 %733, %734
  br label %738

738:                                              ; preds = %738, %736
  %739 = phi i64 [ 0, %736 ], [ %784, %738 ]
  %740 = phi i64 [ %737, %736 ], [ %785, %738 ]
  %741 = getelementptr i16, i16* %714, i64 %739
  %742 = getelementptr i16, i16* %694, i64 %739
  %743 = bitcast i16* %742 to <8 x i16>*
  %744 = load <8 x i16>, <8 x i16>* %743, align 2, !alias.scope !8
  %745 = getelementptr i16, i16* %742, i64 8
  %746 = bitcast i16* %745 to <8 x i16>*
  %747 = load <8 x i16>, <8 x i16>* %746, align 2, !alias.scope !8
  %748 = bitcast i16* %741 to <8 x i16>*
  store <8 x i16> %744, <8 x i16>* %748, align 2, !alias.scope !11, !noalias !8
  %749 = getelementptr i16, i16* %741, i64 8
  %750 = bitcast i16* %749 to <8 x i16>*
  store <8 x i16> %747, <8 x i16>* %750, align 2, !alias.scope !11, !noalias !8
  %751 = or i64 %739, 16
  %752 = getelementptr i16, i16* %714, i64 %751
  %753 = getelementptr i16, i16* %694, i64 %751
  %754 = bitcast i16* %753 to <8 x i16>*
  %755 = load <8 x i16>, <8 x i16>* %754, align 2, !alias.scope !8
  %756 = getelementptr i16, i16* %753, i64 8
  %757 = bitcast i16* %756 to <8 x i16>*
  %758 = load <8 x i16>, <8 x i16>* %757, align 2, !alias.scope !8
  %759 = bitcast i16* %752 to <8 x i16>*
  store <8 x i16> %755, <8 x i16>* %759, align 2, !alias.scope !11, !noalias !8
  %760 = getelementptr i16, i16* %752, i64 8
  %761 = bitcast i16* %760 to <8 x i16>*
  store <8 x i16> %758, <8 x i16>* %761, align 2, !alias.scope !11, !noalias !8
  %762 = or i64 %739, 32
  %763 = getelementptr i16, i16* %714, i64 %762
  %764 = getelementptr i16, i16* %694, i64 %762
  %765 = bitcast i16* %764 to <8 x i16>*
  %766 = load <8 x i16>, <8 x i16>* %765, align 2, !alias.scope !8
  %767 = getelementptr i16, i16* %764, i64 8
  %768 = bitcast i16* %767 to <8 x i16>*
  %769 = load <8 x i16>, <8 x i16>* %768, align 2, !alias.scope !8
  %770 = bitcast i16* %763 to <8 x i16>*
  store <8 x i16> %766, <8 x i16>* %770, align 2, !alias.scope !11, !noalias !8
  %771 = getelementptr i16, i16* %763, i64 8
  %772 = bitcast i16* %771 to <8 x i16>*
  store <8 x i16> %769, <8 x i16>* %772, align 2, !alias.scope !11, !noalias !8
  %773 = or i64 %739, 48
  %774 = getelementptr i16, i16* %714, i64 %773
  %775 = getelementptr i16, i16* %694, i64 %773
  %776 = bitcast i16* %775 to <8 x i16>*
  %777 = load <8 x i16>, <8 x i16>* %776, align 2, !alias.scope !8
  %778 = getelementptr i16, i16* %775, i64 8
  %779 = bitcast i16* %778 to <8 x i16>*
  %780 = load <8 x i16>, <8 x i16>* %779, align 2, !alias.scope !8
  %781 = bitcast i16* %774 to <8 x i16>*
  store <8 x i16> %777, <8 x i16>* %781, align 2, !alias.scope !11, !noalias !8
  %782 = getelementptr i16, i16* %774, i64 8
  %783 = bitcast i16* %782 to <8 x i16>*
  store <8 x i16> %780, <8 x i16>* %783, align 2, !alias.scope !11, !noalias !8
  %784 = add i64 %739, 64
  %785 = add i64 %740, -4
  %786 = icmp eq i64 %785, 0
  br i1 %786, label %787, label %738, !llvm.loop !13

787:                                              ; preds = %738, %726
  %788 = phi i64 [ 0, %726 ], [ %784, %738 ]
  %789 = icmp eq i64 %734, 0
  br i1 %789, label %806, label %790

790:                                              ; preds = %787, %790
  %791 = phi i64 [ %803, %790 ], [ %788, %787 ]
  %792 = phi i64 [ %804, %790 ], [ %734, %787 ]
  %793 = getelementptr i16, i16* %714, i64 %791
  %794 = getelementptr i16, i16* %694, i64 %791
  %795 = bitcast i16* %794 to <8 x i16>*
  %796 = load <8 x i16>, <8 x i16>* %795, align 2, !alias.scope !8
  %797 = getelementptr i16, i16* %794, i64 8
  %798 = bitcast i16* %797 to <8 x i16>*
  %799 = load <8 x i16>, <8 x i16>* %798, align 2, !alias.scope !8
  %800 = bitcast i16* %793 to <8 x i16>*
  store <8 x i16> %796, <8 x i16>* %800, align 2, !alias.scope !11, !noalias !8
  %801 = getelementptr i16, i16* %793, i64 8
  %802 = bitcast i16* %801 to <8 x i16>*
  store <8 x i16> %799, <8 x i16>* %802, align 2, !alias.scope !11, !noalias !8
  %803 = add i64 %791, 16
  %804 = add i64 %792, -1
  %805 = icmp eq i64 %804, 0
  br i1 %805, label %806, label %790, !llvm.loop !15

806:                                              ; preds = %790, %787
  %807 = icmp eq i64 %716, %727
  br i1 %807, label %861, label %808

808:                                              ; preds = %806, %718, %713
  %809 = phi i16* [ %714, %718 ], [ %714, %713 ], [ %728, %806 ]
  %810 = phi i64 [ %715, %718 ], [ %715, %713 ], [ %729, %806 ]
  %811 = phi i16* [ %694, %718 ], [ %694, %713 ], [ %730, %806 ]
  %812 = add i64 %810, -1
  %813 = and i64 %810, 7
  %814 = icmp eq i64 %813, 0
  br i1 %814, label %826, label %815

815:                                              ; preds = %808, %815
  %816 = phi i16* [ %822, %815 ], [ %809, %808 ]
  %817 = phi i64 [ %821, %815 ], [ %810, %808 ]
  %818 = phi i16* [ %823, %815 ], [ %811, %808 ]
  %819 = phi i64 [ %824, %815 ], [ %813, %808 ]
  %820 = load i16, i16* %818, align 2
  store i16 %820, i16* %816, align 2
  %821 = add i64 %817, -1
  %822 = getelementptr inbounds i16, i16* %816, i64 1
  %823 = getelementptr inbounds i16, i16* %818, i64 1
  %824 = add i64 %819, -1
  %825 = icmp eq i64 %824, 0
  br i1 %825, label %826, label %815, !llvm.loop !17

826:                                              ; preds = %815, %808
  %827 = phi i16* [ %809, %808 ], [ %822, %815 ]
  %828 = phi i64 [ %810, %808 ], [ %821, %815 ]
  %829 = phi i16* [ %811, %808 ], [ %823, %815 ]
  %830 = icmp ult i64 %812, 7
  br i1 %830, label %861, label %831

831:                                              ; preds = %826, %831
  %832 = phi i16* [ %858, %831 ], [ %827, %826 ]
  %833 = phi i64 [ %857, %831 ], [ %828, %826 ]
  %834 = phi i16* [ %859, %831 ], [ %829, %826 ]
  %835 = load i16, i16* %834, align 2
  store i16 %835, i16* %832, align 2
  %836 = getelementptr inbounds i16, i16* %832, i64 1
  %837 = getelementptr inbounds i16, i16* %834, i64 1
  %838 = load i16, i16* %837, align 2
  store i16 %838, i16* %836, align 2
  %839 = getelementptr inbounds i16, i16* %832, i64 2
  %840 = getelementptr inbounds i16, i16* %834, i64 2
  %841 = load i16, i16* %840, align 2
  store i16 %841, i16* %839, align 2
  %842 = getelementptr inbounds i16, i16* %832, i64 3
  %843 = getelementptr inbounds i16, i16* %834, i64 3
  %844 = load i16, i16* %843, align 2
  store i16 %844, i16* %842, align 2
  %845 = getelementptr inbounds i16, i16* %832, i64 4
  %846 = getelementptr inbounds i16, i16* %834, i64 4
  %847 = load i16, i16* %846, align 2
  store i16 %847, i16* %845, align 2
  %848 = getelementptr inbounds i16, i16* %832, i64 5
  %849 = getelementptr inbounds i16, i16* %834, i64 5
  %850 = load i16, i16* %849, align 2
  store i16 %850, i16* %848, align 2
  %851 = getelementptr inbounds i16, i16* %832, i64 6
  %852 = getelementptr inbounds i16, i16* %834, i64 6
  %853 = load i16, i16* %852, align 2
  store i16 %853, i16* %851, align 2
  %854 = getelementptr inbounds i16, i16* %832, i64 7
  %855 = getelementptr inbounds i16, i16* %834, i64 7
  %856 = load i16, i16* %855, align 2
  store i16 %856, i16* %854, align 2
  %857 = add i64 %833, -8
  %858 = getelementptr inbounds i16, i16* %832, i64 8
  %859 = getelementptr inbounds i16, i16* %834, i64 8
  %860 = icmp eq i64 %857, 0
  br i1 %860, label %861, label %831, !llvm.loop !18

861:                                              ; preds = %826, %831, %806
  %862 = load i64, i64* %125, align 8
  br label %863

863:                                              ; preds = %861, %692
  %864 = phi i64 [ %862, %861 ], [ %305, %692 ]
  store i64 %864, i64* %195, align 8
  %865 = and i8 %683, 1
  store i8 %865, i8* %196, align 8
  %866 = and i8 %685, 1
  store i8 %866, i8* %197, align 1
  %867 = zext i1 %684 to i8
  store i8 %867, i8* %198, align 2
  %868 = zext i1 %682 to i8
  store i8 %868, i8* %199, align 1
  %869 = load i1 (%"class.v8::debug::PropertyIterator"*)**, i1 (%"class.v8::debug::PropertyIterator"*)*** %107, align 8
  %870 = getelementptr inbounds i1 (%"class.v8::debug::PropertyIterator"*)*, i1 (%"class.v8::debug::PropertyIterator"*)** %869, i64 11
  %871 = load i1 (%"class.v8::debug::PropertyIterator"*)*, i1 (%"class.v8::debug::PropertyIterator"*)** %870, align 8
  %872 = call zeroext i1 %871(%"class.v8::debug::PropertyIterator"* nonnull %104) #15
  %873 = zext i1 %872 to i8
  store i8 %873, i8* %200, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %201, i8* nonnull align 8 %188, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %188, i8 0, i64 24, i1 false) #15
  %874 = load i64, i64* %195, align 8
  store i64 %874, i64* %202, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %196, i64 5, i1 false) #15
  store i64 %686, i64* %206, align 8
  store <2 x %"class.v8_inspector::ValueMirror"*> zeroinitializer, <2 x %"class.v8_inspector::ValueMirror"*>* %232, align 8
  store i64 %687, i64* %208, align 8
  store i64 %688, i64* %211, align 8
  store <2 x %"class.v8_inspector::ValueMirror"*> zeroinitializer, <2 x %"class.v8_inspector::ValueMirror"*>* %233, align 8
  store i64 %306, i64* %213, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %215, align 8
  store i64 %689, i64* %216, align 8
  %875 = load i1 (%"class.v8_inspector::ValueMirror::PropertyAccumulator"*, %"struct.v8_inspector::PropertyMirror"*)**, i1 (%"class.v8_inspector::ValueMirror::PropertyAccumulator"*, %"struct.v8_inspector::PropertyMirror"*)*** %217, align 8
  %876 = getelementptr inbounds i1 (%"class.v8_inspector::ValueMirror::PropertyAccumulator"*, %"struct.v8_inspector::PropertyMirror"*)*, i1 (%"class.v8_inspector::ValueMirror::PropertyAccumulator"*, %"struct.v8_inspector::PropertyMirror"*)** %875, i64 2
  %877 = load i1 (%"class.v8_inspector::ValueMirror::PropertyAccumulator"*, %"struct.v8_inspector::PropertyMirror"*)*, i1 (%"class.v8_inspector::ValueMirror::PropertyAccumulator"*, %"struct.v8_inspector::PropertyMirror"*)** %876, align 8
  %878 = call zeroext i1 %877(%"class.v8_inspector::ValueMirror::PropertyAccumulator"* %4, %"struct.v8_inspector::PropertyMirror"* nonnull %31) #15
  %879 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %218, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %218, align 8
  %880 = icmp eq %"class.v8_inspector::ValueMirror"* %879, null
  br i1 %880, label %886, label %881

881:                                              ; preds = %863
  %882 = bitcast %"class.v8_inspector::ValueMirror"* %879 to void (%"class.v8_inspector::ValueMirror"*)***
  %883 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %882, align 8
  %884 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %883, i64 1
  %885 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %884, align 8
  call void %885(%"class.v8_inspector::ValueMirror"* nonnull %879) #15
  br label %886

886:                                              ; preds = %881, %863
  %887 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %219, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %219, align 8
  %888 = icmp eq %"class.v8_inspector::ValueMirror"* %887, null
  br i1 %888, label %894, label %889

889:                                              ; preds = %886
  %890 = bitcast %"class.v8_inspector::ValueMirror"* %887 to void (%"class.v8_inspector::ValueMirror"*)***
  %891 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %890, align 8
  %892 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %891, i64 1
  %893 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %892, align 8
  call void %893(%"class.v8_inspector::ValueMirror"* nonnull %887) #15
  br label %894

894:                                              ; preds = %889, %886
  %895 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %220, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %220, align 8
  %896 = icmp eq %"class.v8_inspector::ValueMirror"* %895, null
  br i1 %896, label %902, label %897

897:                                              ; preds = %894
  %898 = bitcast %"class.v8_inspector::ValueMirror"* %895 to void (%"class.v8_inspector::ValueMirror"*)***
  %899 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %898, align 8
  %900 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %899, i64 1
  %901 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %900, align 8
  call void %901(%"class.v8_inspector::ValueMirror"* nonnull %895) #15
  br label %902

902:                                              ; preds = %897, %894
  %903 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %221, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %221, align 8
  %904 = icmp eq %"class.v8_inspector::ValueMirror"* %903, null
  br i1 %904, label %910, label %905

905:                                              ; preds = %902
  %906 = bitcast %"class.v8_inspector::ValueMirror"* %903 to void (%"class.v8_inspector::ValueMirror"*)***
  %907 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %906, align 8
  %908 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %907, i64 1
  %909 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %908, align 8
  call void %909(%"class.v8_inspector::ValueMirror"* nonnull %903) #15
  br label %910

910:                                              ; preds = %905, %902
  %911 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %222, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %222, align 8
  %912 = icmp eq %"class.v8_inspector::ValueMirror"* %911, null
  br i1 %912, label %918, label %913

913:                                              ; preds = %910
  %914 = bitcast %"class.v8_inspector::ValueMirror"* %911 to void (%"class.v8_inspector::ValueMirror"*)***
  %915 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %914, align 8
  %916 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %915, i64 1
  %917 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %916, align 8
  call void %917(%"class.v8_inspector::ValueMirror"* nonnull %911) #15
  br label %918

918:                                              ; preds = %913, %910
  %919 = load i8, i8* %224, align 1
  %920 = icmp slt i8 %919, 0
  br i1 %920, label %921, label %923

921:                                              ; preds = %918
  %922 = load i8*, i8** %225, align 8
  call void @_ZdlPv(i8* %922) #16
  br label %923

923:                                              ; preds = %918, %921
  br i1 %878, label %924, label %936

924:                                              ; preds = %923
  %925 = load i16 (%"class.v8::debug::PropertyIterator"*)**, i16 (%"class.v8::debug::PropertyIterator"*)*** %226, align 8
  %926 = getelementptr inbounds i16 (%"class.v8::debug::PropertyIterator"*)*, i16 (%"class.v8::debug::PropertyIterator"*)** %925, i64 3
  %927 = load i16 (%"class.v8::debug::PropertyIterator"*)*, i16 (%"class.v8::debug::PropertyIterator"*)** %926, align 8
  %928 = call i16 %927(%"class.v8::debug::PropertyIterator"* nonnull %104) #15
  %929 = trunc i16 %928 to i8
  %930 = icmp ne i8 %929, 0
  %931 = icmp ugt i16 %928, 255
  %932 = and i1 %931, %930
  br i1 %932, label %936, label %933

933:                                              ; preds = %924
  %934 = call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* nonnull %24) #15
  br i1 %934, label %936, label %935, !prof !2

935:                                              ; preds = %933
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0)) #14
  unreachable

936:                                              ; preds = %924, %933, %923
  %937 = phi i32 [ 1, %923 ], [ 1, %933 ], [ 0, %924 ]
  %938 = phi i1 [ true, %923 ], [ false, %933 ], [ %238, %924 ]
  %939 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %227, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %227, align 8
  %940 = icmp eq %"class.v8_inspector::ValueMirror"* %939, null
  br i1 %940, label %946, label %941

941:                                              ; preds = %936
  %942 = bitcast %"class.v8_inspector::ValueMirror"* %939 to void (%"class.v8_inspector::ValueMirror"*)***
  %943 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %942, align 8
  %944 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %943, i64 1
  %945 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %944, align 8
  call void %945(%"class.v8_inspector::ValueMirror"* nonnull %939) #15
  br label %946

946:                                              ; preds = %941, %936
  %947 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %228, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %228, align 8
  %948 = icmp eq %"class.v8_inspector::ValueMirror"* %947, null
  br i1 %948, label %954, label %949

949:                                              ; preds = %946
  %950 = bitcast %"class.v8_inspector::ValueMirror"* %947 to void (%"class.v8_inspector::ValueMirror"*)***
  %951 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %950, align 8
  %952 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %951, i64 1
  %953 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %952, align 8
  call void %953(%"class.v8_inspector::ValueMirror"* nonnull %947) #15
  br label %954

954:                                              ; preds = %949, %946
  %955 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %229, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %229, align 8
  %956 = icmp eq %"class.v8_inspector::ValueMirror"* %955, null
  br i1 %956, label %962, label %957

957:                                              ; preds = %954
  %958 = bitcast %"class.v8_inspector::ValueMirror"* %955 to void (%"class.v8_inspector::ValueMirror"*)***
  %959 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %958, align 8
  %960 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %959, i64 1
  %961 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %960, align 8
  call void %961(%"class.v8_inspector::ValueMirror"* nonnull %955) #15
  br label %962

962:                                              ; preds = %957, %954
  %963 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %230, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %230, align 8
  %964 = icmp eq %"class.v8_inspector::ValueMirror"* %963, null
  br i1 %964, label %970, label %965

965:                                              ; preds = %962
  %966 = bitcast %"class.v8_inspector::ValueMirror"* %963 to void (%"class.v8_inspector::ValueMirror"*)***
  %967 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %966, align 8
  %968 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %967, i64 1
  %969 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %968, align 8
  call void %969(%"class.v8_inspector::ValueMirror"* nonnull %963) #15
  br label %970

970:                                              ; preds = %965, %962
  %971 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %231, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %231, align 8
  %972 = icmp eq %"class.v8_inspector::ValueMirror"* %971, null
  br i1 %972, label %978, label %973

973:                                              ; preds = %970
  %974 = bitcast %"class.v8_inspector::ValueMirror"* %971 to void (%"class.v8_inspector::ValueMirror"*)***
  %975 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %974, align 8
  %976 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %975, i64 1
  %977 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %976, align 8
  call void %977(%"class.v8_inspector::ValueMirror"* nonnull %971) #15
  br label %978

978:                                              ; preds = %973, %970
  %979 = load i8, i8* %194, align 1
  %980 = icmp slt i8 %979, 0
  br i1 %980, label %981, label %983

981:                                              ; preds = %978
  %982 = load i8*, i8** %189, align 8
  call void @_ZdlPv(i8* %982) #16
  br label %983

983:                                              ; preds = %978, %981
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %188) #15
  br label %984

984:                                              ; preds = %670, %983
  %985 = phi i64 [ 0, %983 ], [ %671, %670 ]
  %986 = phi i64 [ 0, %983 ], [ %672, %670 ]
  %987 = phi i64 [ 0, %983 ], [ %673, %670 ]
  %988 = phi i64 [ 0, %983 ], [ %674, %670 ]
  %989 = phi i64 [ 0, %983 ], [ %306, %670 ]
  %990 = phi i32 [ %937, %983 ], [ 4, %670 ]
  %991 = phi i1 [ %938, %983 ], [ %238, %670 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %24) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %128) #15
  %992 = icmp eq i64 %985, 0
  br i1 %992, label %999, label %993

993:                                              ; preds = %984
  %994 = inttoptr i64 %985 to %"class.v8_inspector::ValueMirror"*
  %995 = inttoptr i64 %985 to void (%"class.v8_inspector::ValueMirror"*)***
  %996 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %995, align 8
  %997 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %996, i64 1
  %998 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %997, align 8
  call void %998(%"class.v8_inspector::ValueMirror"* nonnull %994) #15
  br label %999

999:                                              ; preds = %984, %993
  %1000 = icmp eq i64 %986, 0
  br i1 %1000, label %1007, label %1001

1001:                                             ; preds = %999
  %1002 = inttoptr i64 %986 to %"class.v8_inspector::ValueMirror"*
  %1003 = inttoptr i64 %986 to void (%"class.v8_inspector::ValueMirror"*)***
  %1004 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %1003, align 8
  %1005 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1004, i64 1
  %1006 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1005, align 8
  call void %1006(%"class.v8_inspector::ValueMirror"* nonnull %1002) #15
  br label %1007

1007:                                             ; preds = %999, %1001
  %1008 = icmp eq i64 %987, 0
  br i1 %1008, label %1015, label %1009

1009:                                             ; preds = %1007
  %1010 = inttoptr i64 %987 to %"class.v8_inspector::ValueMirror"*
  %1011 = inttoptr i64 %987 to void (%"class.v8_inspector::ValueMirror"*)***
  %1012 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %1011, align 8
  %1013 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1012, i64 1
  %1014 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1013, align 8
  call void %1014(%"class.v8_inspector::ValueMirror"* nonnull %1010) #15
  br label %1015

1015:                                             ; preds = %1007, %1009
  %1016 = icmp eq i64 %988, 0
  br i1 %1016, label %1023, label %1017

1017:                                             ; preds = %1015
  %1018 = inttoptr i64 %988 to %"class.v8_inspector::ValueMirror"*
  %1019 = inttoptr i64 %988 to void (%"class.v8_inspector::ValueMirror"*)***
  %1020 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %1019, align 8
  %1021 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1020, i64 1
  %1022 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1021, align 8
  call void %1022(%"class.v8_inspector::ValueMirror"* nonnull %1018) #15
  br label %1023

1023:                                             ; preds = %1015, %1017
  %1024 = icmp eq i64 %989, 0
  br i1 %1024, label %1031, label %1025

1025:                                             ; preds = %1023
  %1026 = inttoptr i64 %989 to %"class.v8_inspector::ValueMirror"*
  %1027 = inttoptr i64 %989 to void (%"class.v8_inspector::ValueMirror"*)***
  %1028 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %1027, align 8
  %1029 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1028, i64 1
  %1030 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1029, align 8
  call void %1030(%"class.v8_inspector::ValueMirror"* nonnull %1026) #15
  br label %1031

1031:                                             ; preds = %1023, %1025
  %1032 = load i8, i8* %122, align 1
  %1033 = icmp slt i8 %1032, 0
  br i1 %1033, label %1034, label %1036

1034:                                             ; preds = %1031
  %1035 = load i8*, i8** %123, align 8
  call void @_ZdlPv(i8* %1035) #16
  br label %1036

1036:                                             ; preds = %1034, %1031
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %115) #15
  switch i32 %990, label %1044 [
    i32 0, label %1037
    i32 4, label %1037
  ]

1037:                                             ; preds = %1036, %257, %1036
  %1038 = phi i1 [ %991, %1036 ], [ %991, %1036 ], [ %238, %257 ]
  %1039 = phi i64 [ %271, %1036 ], [ %271, %1036 ], [ %239, %257 ]
  %1040 = load i1 (%"class.v8::debug::PropertyIterator"*)**, i1 (%"class.v8::debug::PropertyIterator"*)*** %107, align 8
  %1041 = getelementptr inbounds i1 (%"class.v8::debug::PropertyIterator"*)*, i1 (%"class.v8::debug::PropertyIterator"*)** %1040, i64 2
  %1042 = load i1 (%"class.v8::debug::PropertyIterator"*)*, i1 (%"class.v8::debug::PropertyIterator"*)** %1041, align 8
  %1043 = call zeroext i1 %1042(%"class.v8::debug::PropertyIterator"* nonnull %104) #15
  br i1 %1043, label %1044, label %237

1044:                                             ; preds = %1036, %245, %269, %237, %1037, %266, %106
  %1045 = phi i1 [ false, %266 ], [ true, %106 ], [ true, %1037 ], [ true, %237 ], [ %991, %1036 ], [ false, %245 ], [ false, %269 ]
  %1046 = bitcast %"class.v8::debug::PropertyIterator"* %104 to void (%"class.v8::debug::PropertyIterator"*)***
  %1047 = load void (%"class.v8::debug::PropertyIterator"*)**, void (%"class.v8::debug::PropertyIterator"*)*** %1046, align 8
  %1048 = getelementptr inbounds void (%"class.v8::debug::PropertyIterator"*)*, void (%"class.v8::debug::PropertyIterator"*)** %1047, i64 1
  %1049 = load void (%"class.v8::debug::PropertyIterator"*)*, void (%"class.v8::debug::PropertyIterator"*)** %1048, align 8
  call void %1049(%"class.v8::debug::PropertyIterator"* nonnull %104) #15
  br label %1050

1050:                                             ; preds = %89, %234, %1044, %63, %72
  %1051 = phi i1 [ false, %89 ], [ false, %72 ], [ false, %63 ], [ %1045, %1044 ], [ false, %234 ]
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %18) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #15
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %33) #15
  ret i1 %1051
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #4

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #4

declare %"class.v8::Set"* @_ZN2v83Set3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #4

declare void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"*, %"class.v8::Isolate"*, i32) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #4

declare %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #4

declare void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"*, i8*) unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.v8::Set"* @_ZN2v83Set3AddENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Set"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #4

declare %"class.v8::debug::PropertyIterator"* @_ZN2v85debug16PropertyIterator6CreateENS_5LocalINS_7ContextEEENS2_INS_6ObjectEEE(%"class.v8::Context"*, %"class.v8::Object"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #5

declare i16 @_ZN2v83Set3HasENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Set"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #4

declare void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* sret, %"class.v8::Isolate"*, %"class.v8::String"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector11ValueMirror6createEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = alloca %"class.v8_inspector::String16", align 8
  %10 = alloca %"class.std::__1::unique_ptr.417", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.v8_inspector::String16", align 8
  %13 = alloca %"class.v8_inspector::String16", align 8
  %14 = alloca %"class.v8_inspector::String16", align 8
  %15 = alloca %"class.v8_inspector::String16", align 8
  %16 = alloca %"class.v8_inspector::String16", align 8
  %17 = alloca %"class.v8_inspector::String16", align 8
  %18 = alloca %"class.v8_inspector::String16", align 8
  %19 = alloca %"class.v8_inspector::String16", align 8
  %20 = alloca %"class.std::__1::unique_ptr.417", align 8
  %21 = alloca i32, align 4
  %22 = alloca %"class.v8_inspector::String16", align 8
  %23 = alloca %"class.v8_inspector::String16", align 8
  %24 = alloca %"class.v8_inspector::String16", align 8
  %25 = alloca %"class.v8_inspector::String16", align 8
  %26 = alloca %"class.v8_inspector::String16", align 8
  %27 = alloca %"class.v8_inspector::String16", align 8
  %28 = alloca %"class.v8_inspector::String16", align 8
  %29 = alloca %"class.v8_inspector::String16", align 8
  %30 = alloca %"class.v8_inspector::String16", align 8
  %31 = alloca %"class.v8_inspector::String16", align 8
  %32 = alloca %"class.v8_inspector::String16", align 8
  %33 = alloca %"class.v8_inspector::String16", align 8
  %34 = alloca %"class.v8_inspector::String16", align 8
  %35 = alloca %"class.v8_inspector::String16", align 8
  %36 = alloca %"class.v8_inspector::String16", align 8
  %37 = alloca %"class.v8_inspector::String16", align 8
  %38 = alloca %"class.v8_inspector::String16", align 8
  %39 = alloca %"class.v8_inspector::String16", align 8
  %40 = alloca %"class.v8_inspector::String16", align 8
  %41 = alloca %"class.v8_inspector::String16", align 8
  %42 = alloca %"class.v8_inspector::String16", align 8
  %43 = alloca %"class.v8_inspector::String16", align 8
  %44 = alloca %"class.v8_inspector::String16", align 8
  %45 = alloca %"class.v8_inspector::String16", align 8
  %46 = alloca %"class.v8_inspector::String16", align 8
  %47 = alloca %"class.v8_inspector::String16", align 8
  %48 = alloca %"class.v8_inspector::String16", align 8
  %49 = alloca %"class.v8_inspector::String16", align 8
  %50 = alloca %"class.v8_inspector::String16", align 8
  %51 = alloca %"class.v8_inspector::String16", align 8
  %52 = alloca %"class.v8_inspector::String16", align 8
  %53 = alloca %"class.v8_inspector::String16", align 8
  %54 = alloca %"class.v8::TryCatch", align 8
  %55 = alloca %"class.v8_inspector::String16", align 8
  %56 = alloca %"class.v8_inspector::String16", align 8
  %57 = alloca %"class.v8_inspector::String16", align 8
  %58 = alloca %"class.v8_inspector::String16", align 8
  %59 = alloca %"class.v8_inspector::StringView", align 8
  %60 = alloca %"class.v8_inspector::String16", align 8
  %61 = alloca %"class.v8_inspector::String16", align 8
  %62 = alloca %"class.v8_inspector::String16", align 8
  %63 = alloca %"class.v8_inspector::String16", align 8
  %64 = alloca %"class.v8_inspector::String16", align 8
  %65 = alloca %"class.v8_inspector::String16", align 8
  %66 = alloca %"class.v8_inspector::String16", align 8
  %67 = alloca %"class.v8_inspector::String16", align 8
  %68 = alloca %"class.v8_inspector::String16", align 8
  %69 = alloca %"class.v8_inspector::String16", align 8
  %70 = alloca %"class.v8_inspector::String16", align 8
  %71 = alloca %"class.v8_inspector::String16", align 8
  %72 = alloca %"class.v8_inspector::String16", align 8
  %73 = alloca %"class.v8_inspector::String16", align 8
  %74 = alloca %"class.v8_inspector::String16", align 8
  %75 = alloca %"class.v8_inspector::String16", align 8
  %76 = alloca %"class.v8_inspector::String16", align 8
  %77 = alloca %"class.v8_inspector::String16", align 8
  %78 = alloca %"class.v8_inspector::String16", align 8
  %79 = alloca i64, align 8
  %80 = alloca %"class.v8_inspector::String16", align 8
  %81 = alloca %"class.v8_inspector::String16", align 8
  %82 = bitcast %"class.v8::Value"* %1 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = and i64 %83, 3
  %85 = icmp eq i64 %84, 1
  br i1 %85, label %86, label %107

86:                                               ; preds = %2
  %87 = add i64 %83, -1
  %88 = inttoptr i64 %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = and i64 %83, -4294967296
  %91 = zext i32 %89 to i64
  %92 = or i64 %90, %91
  %93 = add i64 %92, 7
  %94 = inttoptr i64 %93 to i16*
  %95 = load i16, i16* %94, align 2
  %96 = icmp eq i16 %95, 67
  br i1 %96, label %97, label %107

97:                                               ; preds = %86
  %98 = add i64 %83, 23
  %99 = inttoptr i64 %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = and i32 %100, -2
  %102 = icmp eq i32 %101, 6
  br i1 %102, label %103, label %107

103:                                              ; preds = %97
  %104 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6ObjectE, align 8
  %105 = tail call fastcc %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* @_ZNSt3__111make_uniqueIN12v8_inspector12_GLOBAL__N_120PrimitiveValueMirrorEJRN2v85LocalINS4_5ValueEEERPKcEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.v8::Value"* %1, i8* %104)
  %106 = ptrtoint %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %105 to i64
  br label %2819

107:                                              ; preds = %86, %2, %97
  %108 = tail call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %1) #15
  br i1 %108, label %109, label %113

109:                                              ; preds = %107
  %110 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum7BooleanE, align 8
  %111 = tail call fastcc %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* @_ZNSt3__111make_uniqueIN12v8_inspector12_GLOBAL__N_120PrimitiveValueMirrorEJRN2v85LocalINS4_5ValueEEERPKcEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.v8::Value"* %1, i8* %110)
  %112 = ptrtoint %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %111 to i64
  br label %2819

113:                                              ; preds = %107
  %114 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %1) #15
  br i1 %114, label %115, label %121

115:                                              ; preds = %113
  %116 = tail call i8* @_Znwm(i64 16) #16
  %117 = bitcast i8* %116 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_112NumberMirrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %117, align 8
  %118 = getelementptr inbounds i8, i8* %116, i64 8
  %119 = bitcast i8* %118 to %"class.v8::Value"**
  store %"class.v8::Value"* %1, %"class.v8::Value"** %119, align 8
  %120 = ptrtoint i8* %116 to i64
  br label %2819

121:                                              ; preds = %113
  %122 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15
  %123 = load i64, i64* %82, align 8
  %124 = and i64 %123, 3
  %125 = icmp eq i64 %124, 1
  br i1 %125, label %126, label %141

126:                                              ; preds = %121
  %127 = add i64 %123, -1
  %128 = inttoptr i64 %127 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = and i64 %123, -4294967296
  %131 = zext i32 %129 to i64
  %132 = or i64 %130, %131
  %133 = add i64 %132, 7
  %134 = inttoptr i64 %133 to i16*
  %135 = load i16, i16* %134, align 2
  %136 = icmp ult i16 %135, 64
  br i1 %136, label %137, label %141

137:                                              ; preds = %126
  %138 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6StringE, align 8
  %139 = tail call fastcc %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* @_ZNSt3__111make_uniqueIN12v8_inspector12_GLOBAL__N_120PrimitiveValueMirrorEJRN2v85LocalINS4_5ValueEEERPKcEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.v8::Value"* %1, i8* %138)
  %140 = ptrtoint %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %139 to i64
  br label %2819

141:                                              ; preds = %121, %126
  %142 = tail call zeroext i1 @_ZNK2v85Value8IsBigIntEv(%"class.v8::Value"* %1) #15
  br i1 %142, label %143, label %149

143:                                              ; preds = %141
  %144 = tail call i8* @_Znwm(i64 16) #16
  %145 = bitcast i8* %144 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_112BigIntMirrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %145, align 8
  %146 = getelementptr inbounds i8, i8* %144, i64 8
  %147 = bitcast i8* %146 to %"class.v8::Value"**
  store %"class.v8::Value"* %1, %"class.v8::Value"** %147, align 8
  %148 = ptrtoint i8* %144 to i64
  br label %2819

149:                                              ; preds = %141
  %150 = tail call zeroext i1 @_ZNK2v85Value8IsSymbolEv(%"class.v8::Value"* %1) #15
  br i1 %150, label %151, label %157

151:                                              ; preds = %149
  %152 = tail call i8* @_Znwm(i64 16) #16
  %153 = bitcast i8* %152 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_112SymbolMirrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %153, align 8
  %154 = getelementptr inbounds i8, i8* %152, i64 8
  %155 = bitcast i8* %154 to %"class.v8::Value"**
  store %"class.v8::Value"* %1, %"class.v8::Value"** %155, align 8
  %156 = ptrtoint i8* %152 to i64
  br label %2819

157:                                              ; preds = %149
  %158 = load i64, i64* %82, align 8
  %159 = and i64 %158, 3
  %160 = icmp eq i64 %159, 1
  br i1 %160, label %161, label %178

161:                                              ; preds = %157
  %162 = add i64 %158, -1
  %163 = inttoptr i64 %162 to i32*
  %164 = load i32, i32* %163, align 4
  %165 = and i64 %158, -4294967296
  %166 = zext i32 %164 to i64
  %167 = or i64 %165, %166
  %168 = add i64 %167, 7
  %169 = inttoptr i64 %168 to i16*
  %170 = load i16, i16* %169, align 2
  %171 = icmp eq i16 %170, 67
  br i1 %171, label %172, label %178

172:                                              ; preds = %161
  %173 = add i64 %158, 23
  %174 = inttoptr i64 %173 to i32*
  %175 = load i32, i32* %174, align 4
  %176 = and i32 %175, -2
  %177 = icmp eq i32 %176, 10
  br i1 %177, label %180, label %178

178:                                              ; preds = %161, %157, %172
  %179 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %1) #15
  br i1 %179, label %180, label %213

180:                                              ; preds = %172, %178
  %181 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15
  %182 = tail call %"class.v8_inspector::V8Inspector"* @_ZN2v85debug12GetInspectorEPNS_7IsolateE(%"class.v8::Isolate"* %181) #15
  %183 = getelementptr inbounds %"class.v8_inspector::V8Inspector", %"class.v8_inspector::V8Inspector"* %182, i64 2
  %184 = bitcast %"class.v8_inspector::V8Inspector"* %183 to %"class.v8_inspector::V8InspectorClient"**
  %185 = load %"class.v8_inspector::V8InspectorClient"*, %"class.v8_inspector::V8InspectorClient"** %184, align 8
  %186 = bitcast %"class.v8_inspector::V8InspectorClient"* %185 to %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)***
  %187 = load %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)**, %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)*** %186, align 8
  %188 = getelementptr inbounds %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)*, %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)** %187, i64 9
  %189 = load %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)*, %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)** %188, align 8
  %190 = tail call %"class.v8_inspector::StringBuffer"* %189(%"class.v8_inspector::V8InspectorClient"* %185, %"class.v8::Value"* %1) #15
  %191 = icmp eq %"class.v8_inspector::StringBuffer"* %190, null
  br i1 %191, label %213, label %192

192:                                              ; preds = %180
  %193 = bitcast %"class.v8_inspector::String16"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %193) #15
  %194 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %59, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %194) #15
  %195 = bitcast %"class.v8_inspector::StringBuffer"* %190 to void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)***
  %196 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)**, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)*** %195, align 8
  %197 = getelementptr inbounds void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)** %196, i64 2
  %198 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)** %197, align 8
  call void %198(%"class.v8_inspector::StringView"* nonnull sret %59, %"class.v8_inspector::StringBuffer"* nonnull %190) #15
  call void @_ZN12v8_inspector10toString16ERKNS_10StringViewE(%"class.v8_inspector::String16"* nonnull sret %58, %"class.v8_inspector::StringView"* nonnull dereferenceable(24) %59) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %194) #15
  %199 = call %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector12clientMirrorEN2v85LocalINS0_7ContextEEENS1_INS0_5ValueEEERKNS_8String16E(%"class.v8::Context"* %0, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %58)
  %200 = ptrtoint %"class.v8_inspector::ValueMirror"* %199 to i64
  %201 = bitcast %"class.v8_inspector::String16"* %58 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %201, i64 0, i32 1, i32 1
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %208

205:                                              ; preds = %192
  %206 = bitcast %"class.v8_inspector::String16"* %58 to i8**
  %207 = load i8*, i8** %206, align 8
  call void @_ZdlPv(i8* %207) #16
  br label %208

208:                                              ; preds = %205, %192
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %193) #15
  %209 = bitcast %"class.v8_inspector::StringBuffer"* %190 to void (%"class.v8_inspector::StringBuffer"*)***
  %210 = load void (%"class.v8_inspector::StringBuffer"*)**, void (%"class.v8_inspector::StringBuffer"*)*** %209, align 8
  %211 = getelementptr inbounds void (%"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringBuffer"*)** %210, i64 1
  %212 = load void (%"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringBuffer"*)** %211, align 8
  call void %212(%"class.v8_inspector::StringBuffer"* nonnull %190) #15
  br label %2819

213:                                              ; preds = %180, %178
  %214 = load i64, i64* %82, align 8
  %215 = and i64 %214, 3
  %216 = icmp eq i64 %215, 1
  br i1 %216, label %217, label %238

217:                                              ; preds = %213
  %218 = add i64 %214, -1
  %219 = inttoptr i64 %218 to i32*
  %220 = load i32, i32* %219, align 4
  %221 = and i64 %214, -4294967296
  %222 = zext i32 %220 to i64
  %223 = or i64 %221, %222
  %224 = add i64 %223, 7
  %225 = inttoptr i64 %224 to i16*
  %226 = load i16, i16* %225, align 2
  %227 = icmp eq i16 %226, 67
  br i1 %227, label %228, label %238

228:                                              ; preds = %217
  %229 = add i64 %214, 23
  %230 = inttoptr i64 %229 to i32*
  %231 = load i32, i32* %230, align 4
  %232 = and i32 %231, -2
  %233 = icmp eq i32 %232, 10
  br i1 %233, label %234, label %238

234:                                              ; preds = %228
  %235 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum9UndefinedE, align 8
  %236 = tail call fastcc %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* @_ZNSt3__111make_uniqueIN12v8_inspector12_GLOBAL__N_120PrimitiveValueMirrorEJRN2v85LocalINS4_5ValueEEERPKcEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.v8::Value"* %1, i8* %235)
  %237 = ptrtoint %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %236 to i64
  br label %2819

238:                                              ; preds = %217, %213, %228
  %239 = tail call zeroext i1 @_ZNK2v85Value8IsRegExpEv(%"class.v8::Value"* %1) #15
  br i1 %239, label %240, label %271

240:                                              ; preds = %238
  %241 = bitcast %"class.v8_inspector::String16"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %241) #15
  %242 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15, !noalias !19
  %243 = tail call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %1, %"class.v8::Context"* %0) #15, !noalias !19
  %244 = icmp eq %"class.v8::String"* %243, null
  br i1 %244, label %245, label %248

245:                                              ; preds = %240
  %246 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %247 = tail call %"class.v8::String"* @_ZN2v86Object18GetConstructorNameEv(%"class.v8::Object"* %246) #15, !noalias !22
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %60, %"class.v8::Isolate"* %242, %"class.v8::String"* %247) #15
  br label %249

248:                                              ; preds = %240
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %60, %"class.v8::Isolate"* %242, %"class.v8::String"* nonnull %243) #15
  br label %249

249:                                              ; preds = %245, %248
  %250 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum6RegexpE, align 8
  %251 = call i8* @_Znwm(i64 88) #16
  %252 = bitcast i8* %251 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %253 = bitcast %"class.v8_inspector::String16"* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %253) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %57, i8* %250) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %252, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %57, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %60) #15
  %254 = bitcast %"class.v8_inspector::String16"* %57 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %255 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %254, i64 0, i32 1, i32 1
  %256 = load i8, i8* %255, align 1
  %257 = icmp slt i8 %256, 0
  br i1 %257, label %258, label %261

258:                                              ; preds = %249
  %259 = bitcast %"class.v8_inspector::String16"* %57 to i8**
  %260 = load i8*, i8** %259, align 8
  call void @_ZdlPv(i8* %260) #16
  br label %261

261:                                              ; preds = %258, %249
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %253) #15
  %262 = ptrtoint i8* %251 to i64
  %263 = bitcast %"class.v8_inspector::String16"* %60 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %264 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %263, i64 0, i32 1, i32 1
  %265 = load i8, i8* %264, align 1
  %266 = icmp slt i8 %265, 0
  br i1 %266, label %267, label %270

267:                                              ; preds = %261
  %268 = bitcast %"class.v8_inspector::String16"* %60 to i8**
  %269 = load i8*, i8** %268, align 8
  call void @_ZdlPv(i8* %269) #16
  br label %270

270:                                              ; preds = %261, %267
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %241) #15
  br label %2819

271:                                              ; preds = %238
  %272 = tail call zeroext i1 @_ZNK2v85Value7IsProxyEv(%"class.v8::Value"* %1) #15
  br i1 %272, label %273, label %296

273:                                              ; preds = %271
  %274 = tail call i8* @_Znwm(i64 88) #16
  %275 = bitcast i8* %274 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %276 = bitcast %"class.v8_inspector::String16"* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %276) #15
  %277 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum5ProxyE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %55, i8* %277) #15
  %278 = bitcast %"class.v8_inspector::String16"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %278) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0)) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %275, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %55, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %56) #15
  %279 = bitcast %"class.v8_inspector::String16"* %56 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %280 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %279, i64 0, i32 1, i32 1
  %281 = load i8, i8* %280, align 1
  %282 = icmp slt i8 %281, 0
  br i1 %282, label %283, label %286

283:                                              ; preds = %273
  %284 = bitcast %"class.v8_inspector::String16"* %56 to i8**
  %285 = load i8*, i8** %284, align 8
  call void @_ZdlPv(i8* %285) #16
  br label %286

286:                                              ; preds = %283, %273
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %278) #15
  %287 = bitcast %"class.v8_inspector::String16"* %55 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %288 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %287, i64 0, i32 1, i32 1
  %289 = load i8, i8* %288, align 1
  %290 = icmp slt i8 %289, 0
  br i1 %290, label %291, label %294

291:                                              ; preds = %286
  %292 = bitcast %"class.v8_inspector::String16"* %55 to i8**
  %293 = load i8*, i8** %292, align 8
  call void @_ZdlPv(i8* %293) #16
  br label %294

294:                                              ; preds = %291, %286
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %276) #15
  %295 = ptrtoint i8* %274 to i64
  br label %2819

296:                                              ; preds = %271
  %297 = tail call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %1) #15
  br i1 %297, label %298, label %304

298:                                              ; preds = %296
  %299 = tail call i8* @_Znwm(i64 16) #16
  %300 = bitcast i8* %299 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_114FunctionMirrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %300, align 8
  %301 = getelementptr inbounds i8, i8* %299, i64 8
  %302 = bitcast i8* %301 to %"class.v8::Value"**
  store %"class.v8::Value"* %1, %"class.v8::Value"** %302, align 8
  %303 = ptrtoint i8* %299 to i64
  br label %2819

304:                                              ; preds = %296
  %305 = tail call zeroext i1 @_ZNK2v85Value6IsDateEv(%"class.v8::Value"* %1) #15
  br i1 %305, label %306, label %338

306:                                              ; preds = %304
  %307 = bitcast %"class.v8_inspector::String16"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %307) #15
  %308 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15, !noalias !25
  %309 = bitcast %"class.v8::TryCatch"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %309) #15, !noalias !25
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %54, %"class.v8::Isolate"* %308) #15, !noalias !25
  %310 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %1, %"class.v8::Context"* %0) #15, !noalias !25
  %311 = icmp eq %"class.v8::String"* %310, null
  br i1 %311, label %312, label %315

312:                                              ; preds = %306
  %313 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %314 = call %"class.v8::String"* @_ZN2v86Object18GetConstructorNameEv(%"class.v8::Object"* %313) #15, !noalias !28
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %61, %"class.v8::Isolate"* %308, %"class.v8::String"* %314) #15
  br label %316

315:                                              ; preds = %306
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %61, %"class.v8::Isolate"* %308, %"class.v8::String"* nonnull %310) #15
  br label %316

316:                                              ; preds = %312, %315
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %54) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %309) #15, !noalias !25
  %317 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum4DateE, align 8
  %318 = call i8* @_Znwm(i64 88) #16
  %319 = bitcast i8* %318 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %320 = bitcast %"class.v8_inspector::String16"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %320) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %53, i8* %317) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %319, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %53, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %61) #15
  %321 = bitcast %"class.v8_inspector::String16"* %53 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %322 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %321, i64 0, i32 1, i32 1
  %323 = load i8, i8* %322, align 1
  %324 = icmp slt i8 %323, 0
  br i1 %324, label %325, label %328

325:                                              ; preds = %316
  %326 = bitcast %"class.v8_inspector::String16"* %53 to i8**
  %327 = load i8*, i8** %326, align 8
  call void @_ZdlPv(i8* %327) #16
  br label %328

328:                                              ; preds = %325, %316
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %320) #15
  %329 = ptrtoint i8* %318 to i64
  %330 = bitcast %"class.v8_inspector::String16"* %61 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %331 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %330, i64 0, i32 1, i32 1
  %332 = load i8, i8* %331, align 1
  %333 = icmp slt i8 %332, 0
  br i1 %333, label %334, label %337

334:                                              ; preds = %328
  %335 = bitcast %"class.v8_inspector::String16"* %61 to i8**
  %336 = load i8*, i8** %335, align 8
  call void @_ZdlPv(i8* %336) #16
  br label %337

337:                                              ; preds = %328, %334
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %307) #15
  br label %2819

338:                                              ; preds = %304
  %339 = tail call zeroext i1 @_ZNK2v85Value9IsPromiseEv(%"class.v8::Value"* %1) #15
  br i1 %339, label %340, label %365

340:                                              ; preds = %338
  %341 = bitcast %"class.v8_inspector::String16"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %341) #15
  %342 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %343 = tail call %"class.v8::String"* @_ZN2v86Object18GetConstructorNameEv(%"class.v8::Object"* %342) #15, !noalias !31
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %62, %"class.v8::Isolate"* %122, %"class.v8::String"* %343) #15
  %344 = call i8* @_Znwm(i64 88) #16
  %345 = bitcast i8* %344 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %346 = bitcast %"class.v8_inspector::String16"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %346) #15
  %347 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum7PromiseE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %52, i8* %347) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %345, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %52, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %62) #15
  %348 = bitcast %"class.v8_inspector::String16"* %52 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %349 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %348, i64 0, i32 1, i32 1
  %350 = load i8, i8* %349, align 1
  %351 = icmp slt i8 %350, 0
  br i1 %351, label %352, label %355

352:                                              ; preds = %340
  %353 = bitcast %"class.v8_inspector::String16"* %52 to i8**
  %354 = load i8*, i8** %353, align 8
  call void @_ZdlPv(i8* %354) #16
  br label %355

355:                                              ; preds = %352, %340
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %346) #15
  %356 = ptrtoint i8* %344 to i64
  %357 = bitcast %"class.v8_inspector::String16"* %62 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %358 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %357, i64 0, i32 1, i32 1
  %359 = load i8, i8* %358, align 1
  %360 = icmp slt i8 %359, 0
  br i1 %360, label %361, label %364

361:                                              ; preds = %355
  %362 = bitcast %"class.v8_inspector::String16"* %62 to i8**
  %363 = load i8*, i8** %362, align 8
  call void @_ZdlPv(i8* %363) #16
  br label %364

364:                                              ; preds = %355, %361
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %341) #15
  br label %2819

365:                                              ; preds = %338
  %366 = tail call zeroext i1 @_ZNK2v85Value13IsNativeErrorEv(%"class.v8::Value"* %1) #15
  br i1 %366, label %367, label %391

367:                                              ; preds = %365
  %368 = bitcast %"class.v8_inspector::String16"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %368) #15
  %369 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_119descriptionForErrorEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEENS0_9ErrorTypeE(%"class.v8_inspector::String16"* noalias nonnull %63, %"class.v8::Context"* %0, %"class.v8::Object"* %369, i32 0)
  %370 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum5ErrorE, align 8
  %371 = call i8* @_Znwm(i64 88) #16
  %372 = bitcast i8* %371 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %373 = bitcast %"class.v8_inspector::String16"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %373) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %51, i8* %370) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %372, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %51, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %63) #15
  %374 = bitcast %"class.v8_inspector::String16"* %51 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %375 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %374, i64 0, i32 1, i32 1
  %376 = load i8, i8* %375, align 1
  %377 = icmp slt i8 %376, 0
  br i1 %377, label %378, label %381

378:                                              ; preds = %367
  %379 = bitcast %"class.v8_inspector::String16"* %51 to i8**
  %380 = load i8*, i8** %379, align 8
  call void @_ZdlPv(i8* %380) #16
  br label %381

381:                                              ; preds = %378, %367
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %373) #15
  %382 = ptrtoint i8* %371 to i64
  %383 = bitcast %"class.v8_inspector::String16"* %63 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %384 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %383, i64 0, i32 1, i32 1
  %385 = load i8, i8* %384, align 1
  %386 = icmp slt i8 %385, 0
  br i1 %386, label %387, label %390

387:                                              ; preds = %381
  %388 = bitcast %"class.v8_inspector::String16"* %63 to i8**
  %389 = load i8*, i8** %388, align 8
  call void @_ZdlPv(i8* %389) #16
  br label %390

390:                                              ; preds = %381, %387
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %368) #15
  br label %2819

391:                                              ; preds = %365
  %392 = tail call zeroext i1 @_ZNK2v85Value5IsMapEv(%"class.v8::Value"* %1) #15
  br i1 %392, label %393, label %419

393:                                              ; preds = %391
  %394 = bitcast %"class.v8::Value"* %1 to %"class.v8::Map"*
  %395 = bitcast %"class.v8_inspector::String16"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %395) #15
  %396 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %397 = tail call i64 @_ZNK2v83Map4SizeEv(%"class.v8::Map"* %394) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_124descriptionForCollectionEPN2v87IsolateENS1_5LocalINS1_6ObjectEEEm(%"class.v8_inspector::String16"* noalias nonnull %64, %"class.v8::Isolate"* %122, %"class.v8::Object"* %396, i64 %397)
  %398 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum3MapE, align 8
  %399 = call i8* @_Znwm(i64 88) #16
  %400 = bitcast i8* %399 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %401 = bitcast %"class.v8_inspector::String16"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %401) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %50, i8* %398) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %400, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %50, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %64) #15
  %402 = bitcast %"class.v8_inspector::String16"* %50 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %403 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %402, i64 0, i32 1, i32 1
  %404 = load i8, i8* %403, align 1
  %405 = icmp slt i8 %404, 0
  br i1 %405, label %406, label %409

406:                                              ; preds = %393
  %407 = bitcast %"class.v8_inspector::String16"* %50 to i8**
  %408 = load i8*, i8** %407, align 8
  call void @_ZdlPv(i8* %408) #16
  br label %409

409:                                              ; preds = %406, %393
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %401) #15
  %410 = ptrtoint i8* %399 to i64
  %411 = bitcast %"class.v8_inspector::String16"* %64 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %412 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %411, i64 0, i32 1, i32 1
  %413 = load i8, i8* %412, align 1
  %414 = icmp slt i8 %413, 0
  br i1 %414, label %415, label %418

415:                                              ; preds = %409
  %416 = bitcast %"class.v8_inspector::String16"* %64 to i8**
  %417 = load i8*, i8** %416, align 8
  call void @_ZdlPv(i8* %417) #16
  br label %418

418:                                              ; preds = %409, %415
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %395) #15
  br label %2819

419:                                              ; preds = %391
  %420 = tail call zeroext i1 @_ZNK2v85Value5IsSetEv(%"class.v8::Value"* %1) #15
  br i1 %420, label %421, label %447

421:                                              ; preds = %419
  %422 = bitcast %"class.v8::Value"* %1 to %"class.v8::Set"*
  %423 = bitcast %"class.v8_inspector::String16"* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %423) #15
  %424 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %425 = tail call i64 @_ZNK2v83Set4SizeEv(%"class.v8::Set"* %422) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_124descriptionForCollectionEPN2v87IsolateENS1_5LocalINS1_6ObjectEEEm(%"class.v8_inspector::String16"* noalias nonnull %65, %"class.v8::Isolate"* %122, %"class.v8::Object"* %424, i64 %425)
  %426 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum3SetE, align 8
  %427 = call i8* @_Znwm(i64 88) #16
  %428 = bitcast i8* %427 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %429 = bitcast %"class.v8_inspector::String16"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %429) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %49, i8* %426) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %428, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %49, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %65) #15
  %430 = bitcast %"class.v8_inspector::String16"* %49 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %431 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %430, i64 0, i32 1, i32 1
  %432 = load i8, i8* %431, align 1
  %433 = icmp slt i8 %432, 0
  br i1 %433, label %434, label %437

434:                                              ; preds = %421
  %435 = bitcast %"class.v8_inspector::String16"* %49 to i8**
  %436 = load i8*, i8** %435, align 8
  call void @_ZdlPv(i8* %436) #16
  br label %437

437:                                              ; preds = %434, %421
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %429) #15
  %438 = ptrtoint i8* %427 to i64
  %439 = bitcast %"class.v8_inspector::String16"* %65 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %440 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %439, i64 0, i32 1, i32 1
  %441 = load i8, i8* %440, align 1
  %442 = icmp slt i8 %441, 0
  br i1 %442, label %443, label %446

443:                                              ; preds = %437
  %444 = bitcast %"class.v8_inspector::String16"* %65 to i8**
  %445 = load i8*, i8** %444, align 8
  call void @_ZdlPv(i8* %445) #16
  br label %446

446:                                              ; preds = %437, %443
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %423) #15
  br label %2819

447:                                              ; preds = %419
  %448 = tail call zeroext i1 @_ZNK2v85Value9IsWeakMapEv(%"class.v8::Value"* %1) #15
  br i1 %448, label %449, label %474

449:                                              ; preds = %447
  %450 = bitcast %"class.v8_inspector::String16"* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %450) #15
  %451 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %452 = tail call %"class.v8::String"* @_ZN2v86Object18GetConstructorNameEv(%"class.v8::Object"* %451) #15, !noalias !34
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %66, %"class.v8::Isolate"* %122, %"class.v8::String"* %452) #15
  %453 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum7WeakmapE, align 8
  %454 = call i8* @_Znwm(i64 88) #16
  %455 = bitcast i8* %454 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %456 = bitcast %"class.v8_inspector::String16"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %456) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %48, i8* %453) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %455, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %48, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %66) #15
  %457 = bitcast %"class.v8_inspector::String16"* %48 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %458 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %457, i64 0, i32 1, i32 1
  %459 = load i8, i8* %458, align 1
  %460 = icmp slt i8 %459, 0
  br i1 %460, label %461, label %464

461:                                              ; preds = %449
  %462 = bitcast %"class.v8_inspector::String16"* %48 to i8**
  %463 = load i8*, i8** %462, align 8
  call void @_ZdlPv(i8* %463) #16
  br label %464

464:                                              ; preds = %461, %449
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %456) #15
  %465 = ptrtoint i8* %454 to i64
  %466 = bitcast %"class.v8_inspector::String16"* %66 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %467 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %466, i64 0, i32 1, i32 1
  %468 = load i8, i8* %467, align 1
  %469 = icmp slt i8 %468, 0
  br i1 %469, label %470, label %473

470:                                              ; preds = %464
  %471 = bitcast %"class.v8_inspector::String16"* %66 to i8**
  %472 = load i8*, i8** %471, align 8
  call void @_ZdlPv(i8* %472) #16
  br label %473

473:                                              ; preds = %464, %470
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %450) #15
  br label %2819

474:                                              ; preds = %447
  %475 = tail call zeroext i1 @_ZNK2v85Value9IsWeakSetEv(%"class.v8::Value"* %1) #15
  br i1 %475, label %476, label %501

476:                                              ; preds = %474
  %477 = bitcast %"class.v8_inspector::String16"* %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %477) #15
  %478 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %479 = tail call %"class.v8::String"* @_ZN2v86Object18GetConstructorNameEv(%"class.v8::Object"* %478) #15, !noalias !37
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %67, %"class.v8::Isolate"* %122, %"class.v8::String"* %479) #15
  %480 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum7WeaksetE, align 8
  %481 = call i8* @_Znwm(i64 88) #16
  %482 = bitcast i8* %481 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %483 = bitcast %"class.v8_inspector::String16"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %483) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %47, i8* %480) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %482, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %47, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %67) #15
  %484 = bitcast %"class.v8_inspector::String16"* %47 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %485 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %484, i64 0, i32 1, i32 1
  %486 = load i8, i8* %485, align 1
  %487 = icmp slt i8 %486, 0
  br i1 %487, label %488, label %491

488:                                              ; preds = %476
  %489 = bitcast %"class.v8_inspector::String16"* %47 to i8**
  %490 = load i8*, i8** %489, align 8
  call void @_ZdlPv(i8* %490) #16
  br label %491

491:                                              ; preds = %488, %476
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %483) #15
  %492 = ptrtoint i8* %481 to i64
  %493 = bitcast %"class.v8_inspector::String16"* %67 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %494 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %493, i64 0, i32 1, i32 1
  %495 = load i8, i8* %494, align 1
  %496 = icmp slt i8 %495, 0
  br i1 %496, label %497, label %500

497:                                              ; preds = %491
  %498 = bitcast %"class.v8_inspector::String16"* %67 to i8**
  %499 = load i8*, i8** %498, align 8
  call void @_ZdlPv(i8* %499) #16
  br label %500

500:                                              ; preds = %491, %497
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %477) #15
  br label %2819

501:                                              ; preds = %474
  %502 = tail call zeroext i1 @_ZNK2v85Value13IsMapIteratorEv(%"class.v8::Value"* %1) #15
  br i1 %502, label %505, label %503

503:                                              ; preds = %501
  %504 = tail call zeroext i1 @_ZNK2v85Value13IsSetIteratorEv(%"class.v8::Value"* %1) #15
  br i1 %504, label %505, label %530

505:                                              ; preds = %503, %501
  %506 = bitcast %"class.v8_inspector::String16"* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %506) #15
  %507 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %508 = tail call %"class.v8::String"* @_ZN2v86Object18GetConstructorNameEv(%"class.v8::Object"* %507) #15, !noalias !40
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %68, %"class.v8::Isolate"* %122, %"class.v8::String"* %508) #15
  %509 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum8IteratorE, align 8
  %510 = call i8* @_Znwm(i64 88) #16
  %511 = bitcast i8* %510 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %512 = bitcast %"class.v8_inspector::String16"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %512) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %46, i8* %509) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %511, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %46, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %68) #15
  %513 = bitcast %"class.v8_inspector::String16"* %46 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %514 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %513, i64 0, i32 1, i32 1
  %515 = load i8, i8* %514, align 1
  %516 = icmp slt i8 %515, 0
  br i1 %516, label %517, label %520

517:                                              ; preds = %505
  %518 = bitcast %"class.v8_inspector::String16"* %46 to i8**
  %519 = load i8*, i8** %518, align 8
  call void @_ZdlPv(i8* %519) #16
  br label %520

520:                                              ; preds = %517, %505
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %512) #15
  %521 = ptrtoint i8* %510 to i64
  %522 = bitcast %"class.v8_inspector::String16"* %68 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %523 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %522, i64 0, i32 1, i32 1
  %524 = load i8, i8* %523, align 1
  %525 = icmp slt i8 %524, 0
  br i1 %525, label %526, label %529

526:                                              ; preds = %520
  %527 = bitcast %"class.v8_inspector::String16"* %68 to i8**
  %528 = load i8*, i8** %527, align 8
  call void @_ZdlPv(i8* %528) #16
  br label %529

529:                                              ; preds = %520, %526
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %506) #15
  br label %2819

530:                                              ; preds = %503
  %531 = tail call zeroext i1 @_ZNK2v85Value17IsGeneratorObjectEv(%"class.v8::Value"* %1) #15
  br i1 %531, label %532, label %557

532:                                              ; preds = %530
  %533 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %534 = bitcast %"class.v8_inspector::String16"* %69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %534) #15
  %535 = tail call %"class.v8::String"* @_ZN2v86Object18GetConstructorNameEv(%"class.v8::Object"* %533) #15, !noalias !43
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %69, %"class.v8::Isolate"* %122, %"class.v8::String"* %535) #15
  %536 = call i8* @_Znwm(i64 88) #16
  %537 = bitcast i8* %536 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %538 = bitcast %"class.v8_inspector::String16"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %538) #15
  %539 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum9GeneratorE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %45, i8* %539) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %537, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %45, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %69) #15
  %540 = bitcast %"class.v8_inspector::String16"* %45 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %541 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %540, i64 0, i32 1, i32 1
  %542 = load i8, i8* %541, align 1
  %543 = icmp slt i8 %542, 0
  br i1 %543, label %544, label %547

544:                                              ; preds = %532
  %545 = bitcast %"class.v8_inspector::String16"* %45 to i8**
  %546 = load i8*, i8** %545, align 8
  call void @_ZdlPv(i8* %546) #16
  br label %547

547:                                              ; preds = %544, %532
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %538) #15
  %548 = ptrtoint i8* %536 to i64
  %549 = bitcast %"class.v8_inspector::String16"* %69 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %550 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %549, i64 0, i32 1, i32 1
  %551 = load i8, i8* %550, align 1
  %552 = icmp slt i8 %551, 0
  br i1 %552, label %553, label %556

553:                                              ; preds = %547
  %554 = bitcast %"class.v8_inspector::String16"* %69 to i8**
  %555 = load i8*, i8** %554, align 8
  call void @_ZdlPv(i8* %555) #16
  br label %556

556:                                              ; preds = %547, %553
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %534) #15
  br label %2819

557:                                              ; preds = %530
  %558 = tail call zeroext i1 @_ZNK2v85Value12IsTypedArrayEv(%"class.v8::Value"* %1) #15
  br i1 %558, label %559, label %585

559:                                              ; preds = %557
  %560 = bitcast %"class.v8::Value"* %1 to %"class.v8::TypedArray"*
  %561 = bitcast %"class.v8_inspector::String16"* %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %561) #15
  %562 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %563 = tail call i64 @_ZN2v810TypedArray6LengthEv(%"class.v8::TypedArray"* %560) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_124descriptionForCollectionEPN2v87IsolateENS1_5LocalINS1_6ObjectEEEm(%"class.v8_inspector::String16"* noalias nonnull %70, %"class.v8::Isolate"* %122, %"class.v8::Object"* %562, i64 %563)
  %564 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum10TypedarrayE, align 8
  %565 = call i8* @_Znwm(i64 88) #16
  %566 = bitcast i8* %565 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %567 = bitcast %"class.v8_inspector::String16"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %567) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %44, i8* %564) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %566, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %44, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %70) #15
  %568 = bitcast %"class.v8_inspector::String16"* %44 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %569 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %568, i64 0, i32 1, i32 1
  %570 = load i8, i8* %569, align 1
  %571 = icmp slt i8 %570, 0
  br i1 %571, label %572, label %575

572:                                              ; preds = %559
  %573 = bitcast %"class.v8_inspector::String16"* %44 to i8**
  %574 = load i8*, i8** %573, align 8
  call void @_ZdlPv(i8* %574) #16
  br label %575

575:                                              ; preds = %572, %559
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %567) #15
  %576 = ptrtoint i8* %565 to i64
  %577 = bitcast %"class.v8_inspector::String16"* %70 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %578 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %577, i64 0, i32 1, i32 1
  %579 = load i8, i8* %578, align 1
  %580 = icmp slt i8 %579, 0
  br i1 %580, label %581, label %584

581:                                              ; preds = %575
  %582 = bitcast %"class.v8_inspector::String16"* %70 to i8**
  %583 = load i8*, i8** %582, align 8
  call void @_ZdlPv(i8* %583) #16
  br label %584

584:                                              ; preds = %575, %581
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %561) #15
  br label %2819

585:                                              ; preds = %557
  %586 = tail call zeroext i1 @_ZNK2v85Value13IsArrayBufferEv(%"class.v8::Value"* %1) #15
  br i1 %586, label %587, label %613

587:                                              ; preds = %585
  %588 = bitcast %"class.v8::Value"* %1 to %"class.v8::ArrayBuffer"*
  %589 = bitcast %"class.v8_inspector::String16"* %71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %589) #15
  %590 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %591 = tail call i64 @_ZNK2v811ArrayBuffer10ByteLengthEv(%"class.v8::ArrayBuffer"* %588) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_124descriptionForCollectionEPN2v87IsolateENS1_5LocalINS1_6ObjectEEEm(%"class.v8_inspector::String16"* noalias nonnull %71, %"class.v8::Isolate"* %122, %"class.v8::Object"* %590, i64 %591)
  %592 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum11ArraybufferE, align 8
  %593 = call i8* @_Znwm(i64 88) #16
  %594 = bitcast i8* %593 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %595 = bitcast %"class.v8_inspector::String16"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %595) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %43, i8* %592) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %594, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %43, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %71) #15
  %596 = bitcast %"class.v8_inspector::String16"* %43 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %597 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %596, i64 0, i32 1, i32 1
  %598 = load i8, i8* %597, align 1
  %599 = icmp slt i8 %598, 0
  br i1 %599, label %600, label %603

600:                                              ; preds = %587
  %601 = bitcast %"class.v8_inspector::String16"* %43 to i8**
  %602 = load i8*, i8** %601, align 8
  call void @_ZdlPv(i8* %602) #16
  br label %603

603:                                              ; preds = %600, %587
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %595) #15
  %604 = ptrtoint i8* %593 to i64
  %605 = bitcast %"class.v8_inspector::String16"* %71 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %606 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %605, i64 0, i32 1, i32 1
  %607 = load i8, i8* %606, align 1
  %608 = icmp slt i8 %607, 0
  br i1 %608, label %609, label %612

609:                                              ; preds = %603
  %610 = bitcast %"class.v8_inspector::String16"* %71 to i8**
  %611 = load i8*, i8** %610, align 8
  call void @_ZdlPv(i8* %611) #16
  br label %612

612:                                              ; preds = %603, %609
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %589) #15
  br label %2819

613:                                              ; preds = %585
  %614 = tail call zeroext i1 @_ZNK2v85Value19IsSharedArrayBufferEv(%"class.v8::Value"* %1) #15
  br i1 %614, label %615, label %641

615:                                              ; preds = %613
  %616 = bitcast %"class.v8::Value"* %1 to %"class.v8::SharedArrayBuffer"*
  %617 = bitcast %"class.v8_inspector::String16"* %72 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %617) #15
  %618 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %619 = tail call i64 @_ZNK2v817SharedArrayBuffer10ByteLengthEv(%"class.v8::SharedArrayBuffer"* %616) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_124descriptionForCollectionEPN2v87IsolateENS1_5LocalINS1_6ObjectEEEm(%"class.v8_inspector::String16"* noalias nonnull %72, %"class.v8::Isolate"* %122, %"class.v8::Object"* %618, i64 %619)
  %620 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum11ArraybufferE, align 8
  %621 = call i8* @_Znwm(i64 88) #16
  %622 = bitcast i8* %621 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %623 = bitcast %"class.v8_inspector::String16"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %623) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %42, i8* %620) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %622, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %42, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %72) #15
  %624 = bitcast %"class.v8_inspector::String16"* %42 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %625 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %624, i64 0, i32 1, i32 1
  %626 = load i8, i8* %625, align 1
  %627 = icmp slt i8 %626, 0
  br i1 %627, label %628, label %631

628:                                              ; preds = %615
  %629 = bitcast %"class.v8_inspector::String16"* %42 to i8**
  %630 = load i8*, i8** %629, align 8
  call void @_ZdlPv(i8* %630) #16
  br label %631

631:                                              ; preds = %628, %615
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %623) #15
  %632 = ptrtoint i8* %621 to i64
  %633 = bitcast %"class.v8_inspector::String16"* %72 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %634 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %633, i64 0, i32 1, i32 1
  %635 = load i8, i8* %634, align 1
  %636 = icmp slt i8 %635, 0
  br i1 %636, label %637, label %640

637:                                              ; preds = %631
  %638 = bitcast %"class.v8_inspector::String16"* %72 to i8**
  %639 = load i8*, i8** %638, align 8
  call void @_ZdlPv(i8* %639) #16
  br label %640

640:                                              ; preds = %631, %637
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %617) #15
  br label %2819

641:                                              ; preds = %613
  %642 = tail call zeroext i1 @_ZNK2v85Value10IsDataViewEv(%"class.v8::Value"* %1) #15
  br i1 %642, label %643, label %669

643:                                              ; preds = %641
  %644 = bitcast %"class.v8_inspector::String16"* %73 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %644) #15
  %645 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %646 = bitcast %"class.v8::Value"* %1 to %"class.v8::ArrayBufferView"*
  %647 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %646) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_124descriptionForCollectionEPN2v87IsolateENS1_5LocalINS1_6ObjectEEEm(%"class.v8_inspector::String16"* noalias nonnull %73, %"class.v8::Isolate"* %122, %"class.v8::Object"* %645, i64 %647)
  %648 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum8DataviewE, align 8
  %649 = call i8* @_Znwm(i64 88) #16
  %650 = bitcast i8* %649 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %651 = bitcast %"class.v8_inspector::String16"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %651) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %41, i8* %648) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %650, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %41, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %73) #15
  %652 = bitcast %"class.v8_inspector::String16"* %41 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %653 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %652, i64 0, i32 1, i32 1
  %654 = load i8, i8* %653, align 1
  %655 = icmp slt i8 %654, 0
  br i1 %655, label %656, label %659

656:                                              ; preds = %643
  %657 = bitcast %"class.v8_inspector::String16"* %41 to i8**
  %658 = load i8*, i8** %657, align 8
  call void @_ZdlPv(i8* %658) #16
  br label %659

659:                                              ; preds = %656, %643
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %651) #15
  %660 = ptrtoint i8* %649 to i64
  %661 = bitcast %"class.v8_inspector::String16"* %73 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %662 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %661, i64 0, i32 1, i32 1
  %663 = load i8, i8* %662, align 1
  %664 = icmp slt i8 %663, 0
  br i1 %664, label %665, label %668

665:                                              ; preds = %659
  %666 = bitcast %"class.v8_inspector::String16"* %73 to i8**
  %667 = load i8*, i8** %666, align 8
  call void @_ZdlPv(i8* %667) #16
  br label %668

668:                                              ; preds = %659, %665
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %644) #15
  br label %2819

669:                                              ; preds = %641
  %670 = tail call zeroext i1 @_ZNK2v85Value18IsWasmMemoryObjectEv(%"class.v8::Value"* %1) #15
  br i1 %670, label %671, label %699

671:                                              ; preds = %669
  %672 = bitcast %"class.v8::Value"* %1 to %"class.v8::WasmMemoryObject"*
  %673 = bitcast %"class.v8_inspector::String16"* %74 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %673) #15
  %674 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %675 = tail call %"class.v8::ArrayBuffer"* @_ZN2v816WasmMemoryObject6BufferEv(%"class.v8::WasmMemoryObject"* %672) #15
  %676 = tail call i64 @_ZNK2v811ArrayBuffer10ByteLengthEv(%"class.v8::ArrayBuffer"* %675) #15
  %677 = lshr i64 %676, 16
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_124descriptionForCollectionEPN2v87IsolateENS1_5LocalINS1_6ObjectEEEm(%"class.v8_inspector::String16"* noalias nonnull %74, %"class.v8::Isolate"* %122, %"class.v8::Object"* %674, i64 %677)
  %678 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum17WebassemblymemoryE, align 8
  %679 = call i8* @_Znwm(i64 88) #16
  %680 = bitcast i8* %679 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %681 = bitcast %"class.v8_inspector::String16"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %681) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %40, i8* %678) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %680, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %40, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %74) #15
  %682 = bitcast %"class.v8_inspector::String16"* %40 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %683 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %682, i64 0, i32 1, i32 1
  %684 = load i8, i8* %683, align 1
  %685 = icmp slt i8 %684, 0
  br i1 %685, label %686, label %689

686:                                              ; preds = %671
  %687 = bitcast %"class.v8_inspector::String16"* %40 to i8**
  %688 = load i8*, i8** %687, align 8
  call void @_ZdlPv(i8* %688) #16
  br label %689

689:                                              ; preds = %686, %671
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %681) #15
  %690 = ptrtoint i8* %679 to i64
  %691 = bitcast %"class.v8_inspector::String16"* %74 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %692 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %691, i64 0, i32 1, i32 1
  %693 = load i8, i8* %692, align 1
  %694 = icmp slt i8 %693, 0
  br i1 %694, label %695, label %698

695:                                              ; preds = %689
  %696 = bitcast %"class.v8_inspector::String16"* %74 to i8**
  %697 = load i8*, i8** %696, align 8
  call void @_ZdlPv(i8* %697) #16
  br label %698

698:                                              ; preds = %689, %695
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %673) #15
  br label %2819

699:                                              ; preds = %669
  %700 = tail call zeroext i1 @_ZN2v85debug15WasmValueObject17IsWasmValueObjectENS_5LocalINS_5ValueEEE(%"class.v8::Value"* %1) #15
  br i1 %700, label %701, label %727

701:                                              ; preds = %699
  %702 = bitcast %"class.v8::Value"* %1 to %"class.v8::debug::WasmValueObject"*
  %703 = bitcast %"class.v8_inspector::String16"* %75 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %703) #15
  %704 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15, !noalias !46
  %705 = tail call %"class.v8::String"* @_ZNK2v85debug15WasmValueObject4typeEv(%"class.v8::debug::WasmValueObject"* %702) #15, !noalias !46
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %75, %"class.v8::Isolate"* %704, %"class.v8::String"* %705) #15
  %706 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum9WasmvalueE, align 8
  %707 = call i8* @_Znwm(i64 88) #16
  %708 = bitcast i8* %707 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %709 = bitcast %"class.v8_inspector::String16"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %709) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %39, i8* %706) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %708, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %39, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %75) #15
  %710 = bitcast %"class.v8_inspector::String16"* %39 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %711 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %710, i64 0, i32 1, i32 1
  %712 = load i8, i8* %711, align 1
  %713 = icmp slt i8 %712, 0
  br i1 %713, label %714, label %717

714:                                              ; preds = %701
  %715 = bitcast %"class.v8_inspector::String16"* %39 to i8**
  %716 = load i8*, i8** %715, align 8
  call void @_ZdlPv(i8* %716) #16
  br label %717

717:                                              ; preds = %714, %701
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %709) #15
  %718 = ptrtoint i8* %707 to i64
  %719 = bitcast %"class.v8_inspector::String16"* %75 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %720 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %719, i64 0, i32 1, i32 1
  %721 = load i8, i8* %720, align 1
  %722 = icmp slt i8 %721, 0
  br i1 %722, label %723, label %726

723:                                              ; preds = %717
  %724 = bitcast %"class.v8_inspector::String16"* %75 to i8**
  %725 = load i8*, i8** %724, align 8
  call void @_ZdlPv(i8* %725) #16
  br label %726

726:                                              ; preds = %717, %723
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %703) #15
  br label %2819

727:                                              ; preds = %699
  %728 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %729 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %1) #15
  br i1 %729, label %730, label %737

730:                                              ; preds = %727
  %731 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15
  %732 = tail call %"class.v8_inspector::V8Inspector"* @_ZN2v85debug12GetInspectorEPNS_7IsolateE(%"class.v8::Isolate"* %731) #15
  %733 = bitcast %"class.v8_inspector::V8Inspector"* %732 to %"class.v8_inspector::V8InspectorImpl"*
  %734 = tail call i32 @_ZN12v8_inspector16InspectedContext9contextIdEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %0) #15
  %735 = tail call %"class.v8_inspector::InspectedContext"* @_ZNK12v8_inspector15V8InspectorImpl10getContextEi(%"class.v8_inspector::V8InspectorImpl"* %733, i32 %734) #15
  %736 = icmp eq %"class.v8_inspector::InspectedContext"* %735, null
  br i1 %736, label %737, label %741

737:                                              ; preds = %727, %730
  %738 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %1) #15
  %739 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %1) #15
  %740 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %1) #15
  br label %2569

741:                                              ; preds = %730
  %742 = tail call i32 @_ZN12v8_inspector16InspectedContext15getInternalTypeEN2v85LocalINS1_6ObjectEEE(%"class.v8_inspector::InspectedContext"* nonnull %735, %"class.v8::Object"* %728) #15
  %743 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %1) #15
  %744 = icmp eq i32 %742, 3
  %745 = and i1 %743, %744
  br i1 %745, label %746, label %780

746:                                              ; preds = %741
  %747 = bitcast %"class.v8_inspector::String16"* %76 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %747) #15
  %748 = bitcast %"class.v8::Value"* %1 to %"class.v8::Array"*
  %749 = bitcast %"class.v8_inspector::String16"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %749)
  %750 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %748) #15, !noalias !49
  %751 = zext i32 %750 to i64
  call void @_ZN12v8_inspector8String1611fromIntegerEm(%"class.v8_inspector::String16"* nonnull sret %38, i64 %751) #15, !noalias !49
  call void @_ZN12v8_inspector8String166concatIJPKcS0_cEEES0_DpT_(%"class.v8_inspector::String16"* nonnull sret %76, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i64 0, i64 0), %"class.v8_inspector::String16"* nonnull %38, i8 signext 93) #15
  %752 = bitcast %"class.v8_inspector::String16"* %38 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %753 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %752, i64 0, i32 1, i32 1
  %754 = load i8, i8* %753, align 1, !noalias !49
  %755 = icmp slt i8 %754, 0
  br i1 %755, label %756, label %759

756:                                              ; preds = %746
  %757 = bitcast %"class.v8_inspector::String16"* %38 to i8**
  %758 = load i8*, i8** %757, align 8, !noalias !49
  call void @_ZdlPv(i8* %758) #16
  br label %759

759:                                              ; preds = %746, %756
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %749)
  %760 = call i8* @_Znwm(i64 88) #16
  %761 = bitcast i8* %760 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %762 = bitcast %"class.v8_inspector::String16"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %762) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %37, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i64 0, i64 0)) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %761, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %37, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %76) #15
  %763 = bitcast %"class.v8_inspector::String16"* %37 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %764 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %763, i64 0, i32 1, i32 1
  %765 = load i8, i8* %764, align 1
  %766 = icmp slt i8 %765, 0
  br i1 %766, label %767, label %770

767:                                              ; preds = %759
  %768 = bitcast %"class.v8_inspector::String16"* %37 to i8**
  %769 = load i8*, i8** %768, align 8
  call void @_ZdlPv(i8* %769) #16
  br label %770

770:                                              ; preds = %767, %759
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %762) #15
  %771 = ptrtoint i8* %760 to i64
  %772 = bitcast %"class.v8_inspector::String16"* %76 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %773 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %772, i64 0, i32 1, i32 1
  %774 = load i8, i8* %773, align 1
  %775 = icmp slt i8 %774, 0
  br i1 %775, label %776, label %779

776:                                              ; preds = %770
  %777 = bitcast %"class.v8_inspector::String16"* %76 to i8**
  %778 = load i8*, i8** %777, align 8
  call void @_ZdlPv(i8* %778) #16
  br label %779

779:                                              ; preds = %770, %776
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %747) #15
  br label %2819

780:                                              ; preds = %741
  %781 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %1) #15
  %782 = icmp eq i32 %742, 1
  %783 = and i1 %782, %781
  br i1 %783, label %784, label %2526

784:                                              ; preds = %780
  %785 = bitcast %"class.v8_inspector::String16"* %77 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %785) #15
  %786 = bitcast %"class.v8_inspector::String16"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %786)
  %787 = bitcast %"class.v8_inspector::String16"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %787)
  %788 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15, !noalias !52
  %789 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %789) #15, !noalias !52
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %789, i8 0, i64 32, i1 false) #15, !noalias !52
  %790 = bitcast %"class.v8_inspector::String16"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %790) #15, !noalias !52
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0)) #15, !noalias !52
  %791 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %788, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %9) #15, !noalias !52
  %792 = bitcast %"class.v8::String"* %791 to %"class.v8::Name"*
  %793 = call %"class.v8::Value"* @_ZN2v86Object20GetRealNamedPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"* %728, %"class.v8::Context"* %0, %"class.v8::Name"* %792) #15, !noalias !52
  %794 = icmp eq %"class.v8::Value"* %793, null
  %795 = bitcast %"class.v8_inspector::String16"* %9 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %796 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %795, i64 0, i32 1, i32 1
  %797 = load i8, i8* %796, align 1, !noalias !52
  %798 = icmp slt i8 %797, 0
  br i1 %798, label %799, label %802

799:                                              ; preds = %784
  %800 = bitcast %"class.v8_inspector::String16"* %9 to i8**
  %801 = load i8*, i8** %800, align 8, !noalias !52
  call void @_ZdlPv(i8* %801) #16
  br label %802

802:                                              ; preds = %799, %784
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %790) #15, !noalias !52
  br i1 %794, label %1492, label %803

803:                                              ; preds = %802
  %804 = call %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector11ValueMirror6createEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8::Context"* %0, %"class.v8::Value"* nonnull %793) #15
  %805 = icmp eq %"class.v8_inspector::ValueMirror"* %804, null
  br i1 %805, label %1492, label %806

806:                                              ; preds = %803
  %807 = bitcast %"class.std::__1::unique_ptr.417"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %807) #15, !noalias !52
  %808 = bitcast %"class.std::__1::unique_ptr.417"* %10 to i64*
  store i64 0, i64* %808, align 8, !noalias !52
  %809 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %809) #15, !noalias !52
  store i32 5, i32* %11, align 4, !noalias !52
  %810 = bitcast %"class.v8_inspector::ValueMirror"* %804 to void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)***
  %811 = load void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)**, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)*** %810, align 8
  %812 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)*, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)** %811, i64 5
  %813 = load void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)*, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)** %812, align 8
  call void %813(%"class.v8_inspector::ValueMirror"* nonnull %804, %"class.v8::Context"* %0, i32* nonnull %11, i32* nonnull %11, %"class.std::__1::unique_ptr.417"* nonnull %10) #15
  %814 = getelementptr inbounds %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.417"* %10, i64 0, i32 0, i32 0, i32 0
  %815 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %814, align 8, !noalias !52
  %816 = icmp eq %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %815, null
  br i1 %816, label %817, label %818

817:                                              ; preds = %806
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %809) #15, !noalias !52
  br label %1487

818:                                              ; preds = %806
  %819 = bitcast %"class.v8_inspector::String16"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %819) #15, !noalias !52
  %820 = bitcast %"class.v8_inspector::String16"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %820) #15, !noalias !52
  %821 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ObjectPreview", %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %815, i64 0, i32 3, i32 0
  %822 = bitcast %"class.v8_inspector::String16"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %822, i8 0, i64 32, i1 false)
  %823 = load i8, i8* %821, align 8, !range !7, !noalias !55
  %824 = icmp eq i8 %823, 0
  %825 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ObjectPreview", %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %815, i64 0, i32 3, i32 1
  %826 = select i1 %824, %"class.v8_inspector::String16"* %13, %"class.v8_inspector::String16"* %825
  %827 = bitcast %"class.v8_inspector::String16"* %826 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %828 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %827, i64 0, i32 1, i32 1
  %829 = load i8, i8* %828, align 1, !noalias !55
  %830 = icmp slt i8 %829, 0
  br i1 %830, label %833, label %831

831:                                              ; preds = %818
  %832 = bitcast %"class.v8_inspector::String16"* %826 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %819, i8* align 8 %832, i64 24, i1 false) #15
  br label %1008

833:                                              ; preds = %818
  %834 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %826, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %835 = load i16*, i16** %834, align 8, !noalias !55
  %836 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %826, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %837 = load i64, i64* %836, align 8, !noalias !55
  %838 = icmp ult i64 %837, 11
  br i1 %838, label %839, label %844

839:                                              ; preds = %833
  %840 = bitcast %"class.v8_inspector::String16"* %12 to i16*
  %841 = trunc i64 %837 to i8
  %842 = bitcast %"class.v8_inspector::String16"* %12 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %843 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %842, i64 0, i32 1, i32 1
  store i8 %841, i8* %843, align 1, !alias.scope !55, !noalias !52
  br label %861

844:                                              ; preds = %833
  %845 = icmp ugt i64 %837, 9223372036854775791
  br i1 %845, label %846, label %848

846:                                              ; preds = %844
  %847 = bitcast %"class.v8_inspector::String16"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %847) #14
  unreachable

848:                                              ; preds = %844
  %849 = add nuw nsw i64 %837, 8
  %850 = and i64 %849, -8
  %851 = icmp slt i64 %850, 0
  br i1 %851, label %852, label %853

852:                                              ; preds = %848
  call void @abort() #14
  unreachable

853:                                              ; preds = %848
  %854 = shl i64 %850, 1
  %855 = call i8* @_Znwm(i64 %854) #16
  %856 = bitcast i8* %855 to i16*
  %857 = bitcast %"class.v8_inspector::String16"* %12 to i8**
  store i8* %855, i8** %857, align 8, !alias.scope !55, !noalias !52
  %858 = or i64 %850, -9223372036854775808
  %859 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %858, i64* %859, align 8, !alias.scope !55, !noalias !52
  %860 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %837, i64* %860, align 8, !alias.scope !55, !noalias !52
  br label %861

861:                                              ; preds = %853, %839
  %862 = phi i16* [ %840, %839 ], [ %856, %853 ]
  %863 = add nuw nsw i64 %837, 1
  %864 = add i64 %837, 1
  %865 = icmp ult i64 %864, 16
  br i1 %865, label %955, label %866

866:                                              ; preds = %861
  %867 = add i64 %837, 1
  %868 = getelementptr i16, i16* %862, i64 %867
  %869 = getelementptr i16, i16* %835, i64 %867
  %870 = icmp ult i16* %862, %869
  %871 = icmp ult i16* %835, %868
  %872 = and i1 %870, %871
  br i1 %872, label %955, label %873

873:                                              ; preds = %866
  %874 = and i64 %864, -16
  %875 = getelementptr i16, i16* %862, i64 %874
  %876 = sub i64 %863, %874
  %877 = getelementptr i16, i16* %835, i64 %874
  %878 = add i64 %874, -16
  %879 = lshr exact i64 %878, 4
  %880 = add nuw nsw i64 %879, 1
  %881 = and i64 %880, 3
  %882 = icmp ult i64 %878, 48
  br i1 %882, label %934, label %883

883:                                              ; preds = %873
  %884 = sub nsw i64 %880, %881
  br label %885

885:                                              ; preds = %885, %883
  %886 = phi i64 [ 0, %883 ], [ %931, %885 ]
  %887 = phi i64 [ %884, %883 ], [ %932, %885 ]
  %888 = getelementptr i16, i16* %862, i64 %886
  %889 = getelementptr i16, i16* %835, i64 %886
  %890 = bitcast i16* %889 to <8 x i16>*
  %891 = load <8 x i16>, <8 x i16>* %890, align 2, !alias.scope !58
  %892 = getelementptr i16, i16* %889, i64 8
  %893 = bitcast i16* %892 to <8 x i16>*
  %894 = load <8 x i16>, <8 x i16>* %893, align 2, !alias.scope !58
  %895 = bitcast i16* %888 to <8 x i16>*
  store <8 x i16> %891, <8 x i16>* %895, align 2, !alias.scope !61, !noalias !63
  %896 = getelementptr i16, i16* %888, i64 8
  %897 = bitcast i16* %896 to <8 x i16>*
  store <8 x i16> %894, <8 x i16>* %897, align 2, !alias.scope !61, !noalias !63
  %898 = or i64 %886, 16
  %899 = getelementptr i16, i16* %862, i64 %898
  %900 = getelementptr i16, i16* %835, i64 %898
  %901 = bitcast i16* %900 to <8 x i16>*
  %902 = load <8 x i16>, <8 x i16>* %901, align 2, !alias.scope !58
  %903 = getelementptr i16, i16* %900, i64 8
  %904 = bitcast i16* %903 to <8 x i16>*
  %905 = load <8 x i16>, <8 x i16>* %904, align 2, !alias.scope !58
  %906 = bitcast i16* %899 to <8 x i16>*
  store <8 x i16> %902, <8 x i16>* %906, align 2, !alias.scope !61, !noalias !63
  %907 = getelementptr i16, i16* %899, i64 8
  %908 = bitcast i16* %907 to <8 x i16>*
  store <8 x i16> %905, <8 x i16>* %908, align 2, !alias.scope !61, !noalias !63
  %909 = or i64 %886, 32
  %910 = getelementptr i16, i16* %862, i64 %909
  %911 = getelementptr i16, i16* %835, i64 %909
  %912 = bitcast i16* %911 to <8 x i16>*
  %913 = load <8 x i16>, <8 x i16>* %912, align 2, !alias.scope !58
  %914 = getelementptr i16, i16* %911, i64 8
  %915 = bitcast i16* %914 to <8 x i16>*
  %916 = load <8 x i16>, <8 x i16>* %915, align 2, !alias.scope !58
  %917 = bitcast i16* %910 to <8 x i16>*
  store <8 x i16> %913, <8 x i16>* %917, align 2, !alias.scope !61, !noalias !63
  %918 = getelementptr i16, i16* %910, i64 8
  %919 = bitcast i16* %918 to <8 x i16>*
  store <8 x i16> %916, <8 x i16>* %919, align 2, !alias.scope !61, !noalias !63
  %920 = or i64 %886, 48
  %921 = getelementptr i16, i16* %862, i64 %920
  %922 = getelementptr i16, i16* %835, i64 %920
  %923 = bitcast i16* %922 to <8 x i16>*
  %924 = load <8 x i16>, <8 x i16>* %923, align 2, !alias.scope !58
  %925 = getelementptr i16, i16* %922, i64 8
  %926 = bitcast i16* %925 to <8 x i16>*
  %927 = load <8 x i16>, <8 x i16>* %926, align 2, !alias.scope !58
  %928 = bitcast i16* %921 to <8 x i16>*
  store <8 x i16> %924, <8 x i16>* %928, align 2, !alias.scope !61, !noalias !63
  %929 = getelementptr i16, i16* %921, i64 8
  %930 = bitcast i16* %929 to <8 x i16>*
  store <8 x i16> %927, <8 x i16>* %930, align 2, !alias.scope !61, !noalias !63
  %931 = add i64 %886, 64
  %932 = add i64 %887, -4
  %933 = icmp eq i64 %932, 0
  br i1 %933, label %934, label %885, !llvm.loop !64

934:                                              ; preds = %885, %873
  %935 = phi i64 [ 0, %873 ], [ %931, %885 ]
  %936 = icmp eq i64 %881, 0
  br i1 %936, label %953, label %937

937:                                              ; preds = %934, %937
  %938 = phi i64 [ %950, %937 ], [ %935, %934 ]
  %939 = phi i64 [ %951, %937 ], [ %881, %934 ]
  %940 = getelementptr i16, i16* %862, i64 %938
  %941 = getelementptr i16, i16* %835, i64 %938
  %942 = bitcast i16* %941 to <8 x i16>*
  %943 = load <8 x i16>, <8 x i16>* %942, align 2, !alias.scope !58
  %944 = getelementptr i16, i16* %941, i64 8
  %945 = bitcast i16* %944 to <8 x i16>*
  %946 = load <8 x i16>, <8 x i16>* %945, align 2, !alias.scope !58
  %947 = bitcast i16* %940 to <8 x i16>*
  store <8 x i16> %943, <8 x i16>* %947, align 2, !alias.scope !61, !noalias !63
  %948 = getelementptr i16, i16* %940, i64 8
  %949 = bitcast i16* %948 to <8 x i16>*
  store <8 x i16> %946, <8 x i16>* %949, align 2, !alias.scope !61, !noalias !63
  %950 = add i64 %938, 16
  %951 = add i64 %939, -1
  %952 = icmp eq i64 %951, 0
  br i1 %952, label %953, label %937, !llvm.loop !65

953:                                              ; preds = %937, %934
  %954 = icmp eq i64 %864, %874
  br i1 %954, label %1008, label %955

955:                                              ; preds = %953, %866, %861
  %956 = phi i16* [ %862, %866 ], [ %862, %861 ], [ %875, %953 ]
  %957 = phi i64 [ %863, %866 ], [ %863, %861 ], [ %876, %953 ]
  %958 = phi i16* [ %835, %866 ], [ %835, %861 ], [ %877, %953 ]
  %959 = add i64 %957, -1
  %960 = and i64 %957, 7
  %961 = icmp eq i64 %960, 0
  br i1 %961, label %973, label %962

962:                                              ; preds = %955, %962
  %963 = phi i16* [ %969, %962 ], [ %956, %955 ]
  %964 = phi i64 [ %968, %962 ], [ %957, %955 ]
  %965 = phi i16* [ %970, %962 ], [ %958, %955 ]
  %966 = phi i64 [ %971, %962 ], [ %960, %955 ]
  %967 = load i16, i16* %965, align 2
  store i16 %967, i16* %963, align 2, !noalias !52
  %968 = add i64 %964, -1
  %969 = getelementptr inbounds i16, i16* %963, i64 1
  %970 = getelementptr inbounds i16, i16* %965, i64 1
  %971 = add i64 %966, -1
  %972 = icmp eq i64 %971, 0
  br i1 %972, label %973, label %962, !llvm.loop !66

973:                                              ; preds = %962, %955
  %974 = phi i16* [ %956, %955 ], [ %969, %962 ]
  %975 = phi i64 [ %957, %955 ], [ %968, %962 ]
  %976 = phi i16* [ %958, %955 ], [ %970, %962 ]
  %977 = icmp ult i64 %959, 7
  br i1 %977, label %1008, label %978

978:                                              ; preds = %973, %978
  %979 = phi i16* [ %1005, %978 ], [ %974, %973 ]
  %980 = phi i64 [ %1004, %978 ], [ %975, %973 ]
  %981 = phi i16* [ %1006, %978 ], [ %976, %973 ]
  %982 = load i16, i16* %981, align 2
  store i16 %982, i16* %979, align 2, !noalias !52
  %983 = getelementptr inbounds i16, i16* %979, i64 1
  %984 = getelementptr inbounds i16, i16* %981, i64 1
  %985 = load i16, i16* %984, align 2
  store i16 %985, i16* %983, align 2, !noalias !52
  %986 = getelementptr inbounds i16, i16* %979, i64 2
  %987 = getelementptr inbounds i16, i16* %981, i64 2
  %988 = load i16, i16* %987, align 2
  store i16 %988, i16* %986, align 2, !noalias !52
  %989 = getelementptr inbounds i16, i16* %979, i64 3
  %990 = getelementptr inbounds i16, i16* %981, i64 3
  %991 = load i16, i16* %990, align 2
  store i16 %991, i16* %989, align 2, !noalias !52
  %992 = getelementptr inbounds i16, i16* %979, i64 4
  %993 = getelementptr inbounds i16, i16* %981, i64 4
  %994 = load i16, i16* %993, align 2
  store i16 %994, i16* %992, align 2, !noalias !52
  %995 = getelementptr inbounds i16, i16* %979, i64 5
  %996 = getelementptr inbounds i16, i16* %981, i64 5
  %997 = load i16, i16* %996, align 2
  store i16 %997, i16* %995, align 2, !noalias !52
  %998 = getelementptr inbounds i16, i16* %979, i64 6
  %999 = getelementptr inbounds i16, i16* %981, i64 6
  %1000 = load i16, i16* %999, align 2
  store i16 %1000, i16* %998, align 2, !noalias !52
  %1001 = getelementptr inbounds i16, i16* %979, i64 7
  %1002 = getelementptr inbounds i16, i16* %981, i64 7
  %1003 = load i16, i16* %1002, align 2
  store i16 %1003, i16* %1001, align 2, !noalias !52
  %1004 = add i64 %980, -8
  %1005 = getelementptr inbounds i16, i16* %979, i64 8
  %1006 = getelementptr inbounds i16, i16* %981, i64 8
  %1007 = icmp eq i64 %1004, 0
  br i1 %1007, label %1008, label %978, !llvm.loop !67

1008:                                             ; preds = %973, %978, %953, %831
  %1009 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %12, i64 0, i32 1
  %1010 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %826, i64 0, i32 1
  %1011 = load i64, i64* %1010, align 8, !noalias !55
  store i64 %1011, i64* %1009, align 8, !alias.scope !55, !noalias !52
  %1012 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1013 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1012, i64 0, i32 1, i32 1
  %1014 = load i8, i8* %1013, align 1, !noalias !52
  %1015 = icmp slt i8 %1014, 0
  br i1 %1015, label %1016, label %1020

1016:                                             ; preds = %1008
  %1017 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %1018 = load i8*, i8** %1017, align 8, !noalias !52
  call void @_ZdlPv(i8* %1018) #16
  %1019 = load i64, i64* %1009, align 8, !noalias !52
  br label %1020

1020:                                             ; preds = %1008, %1016
  %1021 = phi i64 [ %1011, %1008 ], [ %1019, %1016 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %789, i8* nonnull align 8 %819, i64 24, i1 false) #15, !noalias !52
  %1022 = bitcast %"class.v8_inspector::String16"* %12 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1023 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1022, i64 0, i32 1, i32 1
  store i8 0, i8* %1023, align 1, !noalias !52
  %1024 = bitcast %"class.v8_inspector::String16"* %12 to i16*
  store i16 0, i16* %1024, align 8, !noalias !52
  %1025 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 1
  store i64 %1021, i64* %1025, align 8, !noalias !52
  %1026 = bitcast %"class.v8_inspector::String16"* %13 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1027 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1026, i64 0, i32 1, i32 1
  %1028 = load i8, i8* %1027, align 1, !noalias !52
  %1029 = icmp slt i8 %1028, 0
  br i1 %1029, label %1030, label %1033

1030:                                             ; preds = %1020
  %1031 = bitcast %"class.v8_inspector::String16"* %13 to i8**
  %1032 = load i8*, i8** %1031, align 8, !noalias !52
  call void @_ZdlPv(i8* %1032) #16
  br label %1033

1033:                                             ; preds = %1030, %1020
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %820) #15, !noalias !52
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %819) #15, !noalias !52
  %1034 = bitcast %"class.v8_inspector::String16"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1034) #15, !noalias !52
  %1035 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %814, align 8, !noalias !52
  %1036 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ObjectPreview", %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1035, i64 0, i32 1
  %1037 = bitcast %"class.v8_inspector::String16"* %1036 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1038 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1037, i64 0, i32 1, i32 1
  %1039 = load i8, i8* %1038, align 1, !noalias !68
  %1040 = icmp slt i8 %1039, 0
  br i1 %1040, label %1043, label %1041

1041:                                             ; preds = %1033
  %1042 = bitcast %"class.v8_inspector::String16"* %1036 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1034, i8* align 8 %1042, i64 24, i1 false) #15
  br label %1218

1043:                                             ; preds = %1033
  %1044 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1036, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1045 = load i16*, i16** %1044, align 8, !noalias !68
  %1046 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ObjectPreview", %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1035, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1047 = load i64, i64* %1046, align 8, !noalias !68
  %1048 = icmp ult i64 %1047, 11
  br i1 %1048, label %1049, label %1054

1049:                                             ; preds = %1043
  %1050 = bitcast %"class.v8_inspector::String16"* %14 to i16*
  %1051 = trunc i64 %1047 to i8
  %1052 = bitcast %"class.v8_inspector::String16"* %14 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1053 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1052, i64 0, i32 1, i32 1
  store i8 %1051, i8* %1053, align 1, !alias.scope !68, !noalias !52
  br label %1071

1054:                                             ; preds = %1043
  %1055 = icmp ugt i64 %1047, 9223372036854775791
  br i1 %1055, label %1056, label %1058

1056:                                             ; preds = %1054
  %1057 = bitcast %"class.v8_inspector::String16"* %14 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1057) #14
  unreachable

1058:                                             ; preds = %1054
  %1059 = add nuw nsw i64 %1047, 8
  %1060 = and i64 %1059, -8
  %1061 = icmp slt i64 %1060, 0
  br i1 %1061, label %1062, label %1063

1062:                                             ; preds = %1058
  call void @abort() #14
  unreachable

1063:                                             ; preds = %1058
  %1064 = shl i64 %1060, 1
  %1065 = call i8* @_Znwm(i64 %1064) #16
  %1066 = bitcast i8* %1065 to i16*
  %1067 = bitcast %"class.v8_inspector::String16"* %14 to i8**
  store i8* %1065, i8** %1067, align 8, !alias.scope !68, !noalias !52
  %1068 = or i64 %1060, -9223372036854775808
  %1069 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1068, i64* %1069, align 8, !alias.scope !68, !noalias !52
  %1070 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1047, i64* %1070, align 8, !alias.scope !68, !noalias !52
  br label %1071

1071:                                             ; preds = %1063, %1049
  %1072 = phi i16* [ %1050, %1049 ], [ %1066, %1063 ]
  %1073 = add nuw nsw i64 %1047, 1
  %1074 = add i64 %1047, 1
  %1075 = icmp ult i64 %1074, 16
  br i1 %1075, label %1165, label %1076

1076:                                             ; preds = %1071
  %1077 = add i64 %1047, 1
  %1078 = getelementptr i16, i16* %1072, i64 %1077
  %1079 = getelementptr i16, i16* %1045, i64 %1077
  %1080 = icmp ult i16* %1072, %1079
  %1081 = icmp ult i16* %1045, %1078
  %1082 = and i1 %1080, %1081
  br i1 %1082, label %1165, label %1083

1083:                                             ; preds = %1076
  %1084 = and i64 %1074, -16
  %1085 = getelementptr i16, i16* %1072, i64 %1084
  %1086 = sub i64 %1073, %1084
  %1087 = getelementptr i16, i16* %1045, i64 %1084
  %1088 = add i64 %1084, -16
  %1089 = lshr exact i64 %1088, 4
  %1090 = add nuw nsw i64 %1089, 1
  %1091 = and i64 %1090, 3
  %1092 = icmp ult i64 %1088, 48
  br i1 %1092, label %1144, label %1093

1093:                                             ; preds = %1083
  %1094 = sub nsw i64 %1090, %1091
  br label %1095

1095:                                             ; preds = %1095, %1093
  %1096 = phi i64 [ 0, %1093 ], [ %1141, %1095 ]
  %1097 = phi i64 [ %1094, %1093 ], [ %1142, %1095 ]
  %1098 = getelementptr i16, i16* %1072, i64 %1096
  %1099 = getelementptr i16, i16* %1045, i64 %1096
  %1100 = bitcast i16* %1099 to <8 x i16>*
  %1101 = load <8 x i16>, <8 x i16>* %1100, align 2, !alias.scope !71
  %1102 = getelementptr i16, i16* %1099, i64 8
  %1103 = bitcast i16* %1102 to <8 x i16>*
  %1104 = load <8 x i16>, <8 x i16>* %1103, align 2, !alias.scope !71
  %1105 = bitcast i16* %1098 to <8 x i16>*
  store <8 x i16> %1101, <8 x i16>* %1105, align 2, !alias.scope !74, !noalias !76
  %1106 = getelementptr i16, i16* %1098, i64 8
  %1107 = bitcast i16* %1106 to <8 x i16>*
  store <8 x i16> %1104, <8 x i16>* %1107, align 2, !alias.scope !74, !noalias !76
  %1108 = or i64 %1096, 16
  %1109 = getelementptr i16, i16* %1072, i64 %1108
  %1110 = getelementptr i16, i16* %1045, i64 %1108
  %1111 = bitcast i16* %1110 to <8 x i16>*
  %1112 = load <8 x i16>, <8 x i16>* %1111, align 2, !alias.scope !71
  %1113 = getelementptr i16, i16* %1110, i64 8
  %1114 = bitcast i16* %1113 to <8 x i16>*
  %1115 = load <8 x i16>, <8 x i16>* %1114, align 2, !alias.scope !71
  %1116 = bitcast i16* %1109 to <8 x i16>*
  store <8 x i16> %1112, <8 x i16>* %1116, align 2, !alias.scope !74, !noalias !76
  %1117 = getelementptr i16, i16* %1109, i64 8
  %1118 = bitcast i16* %1117 to <8 x i16>*
  store <8 x i16> %1115, <8 x i16>* %1118, align 2, !alias.scope !74, !noalias !76
  %1119 = or i64 %1096, 32
  %1120 = getelementptr i16, i16* %1072, i64 %1119
  %1121 = getelementptr i16, i16* %1045, i64 %1119
  %1122 = bitcast i16* %1121 to <8 x i16>*
  %1123 = load <8 x i16>, <8 x i16>* %1122, align 2, !alias.scope !71
  %1124 = getelementptr i16, i16* %1121, i64 8
  %1125 = bitcast i16* %1124 to <8 x i16>*
  %1126 = load <8 x i16>, <8 x i16>* %1125, align 2, !alias.scope !71
  %1127 = bitcast i16* %1120 to <8 x i16>*
  store <8 x i16> %1123, <8 x i16>* %1127, align 2, !alias.scope !74, !noalias !76
  %1128 = getelementptr i16, i16* %1120, i64 8
  %1129 = bitcast i16* %1128 to <8 x i16>*
  store <8 x i16> %1126, <8 x i16>* %1129, align 2, !alias.scope !74, !noalias !76
  %1130 = or i64 %1096, 48
  %1131 = getelementptr i16, i16* %1072, i64 %1130
  %1132 = getelementptr i16, i16* %1045, i64 %1130
  %1133 = bitcast i16* %1132 to <8 x i16>*
  %1134 = load <8 x i16>, <8 x i16>* %1133, align 2, !alias.scope !71
  %1135 = getelementptr i16, i16* %1132, i64 8
  %1136 = bitcast i16* %1135 to <8 x i16>*
  %1137 = load <8 x i16>, <8 x i16>* %1136, align 2, !alias.scope !71
  %1138 = bitcast i16* %1131 to <8 x i16>*
  store <8 x i16> %1134, <8 x i16>* %1138, align 2, !alias.scope !74, !noalias !76
  %1139 = getelementptr i16, i16* %1131, i64 8
  %1140 = bitcast i16* %1139 to <8 x i16>*
  store <8 x i16> %1137, <8 x i16>* %1140, align 2, !alias.scope !74, !noalias !76
  %1141 = add i64 %1096, 64
  %1142 = add i64 %1097, -4
  %1143 = icmp eq i64 %1142, 0
  br i1 %1143, label %1144, label %1095, !llvm.loop !77

1144:                                             ; preds = %1095, %1083
  %1145 = phi i64 [ 0, %1083 ], [ %1141, %1095 ]
  %1146 = icmp eq i64 %1091, 0
  br i1 %1146, label %1163, label %1147

1147:                                             ; preds = %1144, %1147
  %1148 = phi i64 [ %1160, %1147 ], [ %1145, %1144 ]
  %1149 = phi i64 [ %1161, %1147 ], [ %1091, %1144 ]
  %1150 = getelementptr i16, i16* %1072, i64 %1148
  %1151 = getelementptr i16, i16* %1045, i64 %1148
  %1152 = bitcast i16* %1151 to <8 x i16>*
  %1153 = load <8 x i16>, <8 x i16>* %1152, align 2, !alias.scope !71
  %1154 = getelementptr i16, i16* %1151, i64 8
  %1155 = bitcast i16* %1154 to <8 x i16>*
  %1156 = load <8 x i16>, <8 x i16>* %1155, align 2, !alias.scope !71
  %1157 = bitcast i16* %1150 to <8 x i16>*
  store <8 x i16> %1153, <8 x i16>* %1157, align 2, !alias.scope !74, !noalias !76
  %1158 = getelementptr i16, i16* %1150, i64 8
  %1159 = bitcast i16* %1158 to <8 x i16>*
  store <8 x i16> %1156, <8 x i16>* %1159, align 2, !alias.scope !74, !noalias !76
  %1160 = add i64 %1148, 16
  %1161 = add i64 %1149, -1
  %1162 = icmp eq i64 %1161, 0
  br i1 %1162, label %1163, label %1147, !llvm.loop !78

1163:                                             ; preds = %1147, %1144
  %1164 = icmp eq i64 %1074, %1084
  br i1 %1164, label %1218, label %1165

1165:                                             ; preds = %1163, %1076, %1071
  %1166 = phi i16* [ %1072, %1076 ], [ %1072, %1071 ], [ %1085, %1163 ]
  %1167 = phi i64 [ %1073, %1076 ], [ %1073, %1071 ], [ %1086, %1163 ]
  %1168 = phi i16* [ %1045, %1076 ], [ %1045, %1071 ], [ %1087, %1163 ]
  %1169 = add i64 %1167, -1
  %1170 = and i64 %1167, 7
  %1171 = icmp eq i64 %1170, 0
  br i1 %1171, label %1183, label %1172

1172:                                             ; preds = %1165, %1172
  %1173 = phi i16* [ %1179, %1172 ], [ %1166, %1165 ]
  %1174 = phi i64 [ %1178, %1172 ], [ %1167, %1165 ]
  %1175 = phi i16* [ %1180, %1172 ], [ %1168, %1165 ]
  %1176 = phi i64 [ %1181, %1172 ], [ %1170, %1165 ]
  %1177 = load i16, i16* %1175, align 2
  store i16 %1177, i16* %1173, align 2, !noalias !52
  %1178 = add i64 %1174, -1
  %1179 = getelementptr inbounds i16, i16* %1173, i64 1
  %1180 = getelementptr inbounds i16, i16* %1175, i64 1
  %1181 = add i64 %1176, -1
  %1182 = icmp eq i64 %1181, 0
  br i1 %1182, label %1183, label %1172, !llvm.loop !79

1183:                                             ; preds = %1172, %1165
  %1184 = phi i16* [ %1166, %1165 ], [ %1179, %1172 ]
  %1185 = phi i64 [ %1167, %1165 ], [ %1178, %1172 ]
  %1186 = phi i16* [ %1168, %1165 ], [ %1180, %1172 ]
  %1187 = icmp ult i64 %1169, 7
  br i1 %1187, label %1218, label %1188

1188:                                             ; preds = %1183, %1188
  %1189 = phi i16* [ %1215, %1188 ], [ %1184, %1183 ]
  %1190 = phi i64 [ %1214, %1188 ], [ %1185, %1183 ]
  %1191 = phi i16* [ %1216, %1188 ], [ %1186, %1183 ]
  %1192 = load i16, i16* %1191, align 2
  store i16 %1192, i16* %1189, align 2, !noalias !52
  %1193 = getelementptr inbounds i16, i16* %1189, i64 1
  %1194 = getelementptr inbounds i16, i16* %1191, i64 1
  %1195 = load i16, i16* %1194, align 2
  store i16 %1195, i16* %1193, align 2, !noalias !52
  %1196 = getelementptr inbounds i16, i16* %1189, i64 2
  %1197 = getelementptr inbounds i16, i16* %1191, i64 2
  %1198 = load i16, i16* %1197, align 2
  store i16 %1198, i16* %1196, align 2, !noalias !52
  %1199 = getelementptr inbounds i16, i16* %1189, i64 3
  %1200 = getelementptr inbounds i16, i16* %1191, i64 3
  %1201 = load i16, i16* %1200, align 2
  store i16 %1201, i16* %1199, align 2, !noalias !52
  %1202 = getelementptr inbounds i16, i16* %1189, i64 4
  %1203 = getelementptr inbounds i16, i16* %1191, i64 4
  %1204 = load i16, i16* %1203, align 2
  store i16 %1204, i16* %1202, align 2, !noalias !52
  %1205 = getelementptr inbounds i16, i16* %1189, i64 5
  %1206 = getelementptr inbounds i16, i16* %1191, i64 5
  %1207 = load i16, i16* %1206, align 2
  store i16 %1207, i16* %1205, align 2, !noalias !52
  %1208 = getelementptr inbounds i16, i16* %1189, i64 6
  %1209 = getelementptr inbounds i16, i16* %1191, i64 6
  %1210 = load i16, i16* %1209, align 2
  store i16 %1210, i16* %1208, align 2, !noalias !52
  %1211 = getelementptr inbounds i16, i16* %1189, i64 7
  %1212 = getelementptr inbounds i16, i16* %1191, i64 7
  %1213 = load i16, i16* %1212, align 2
  store i16 %1213, i16* %1211, align 2, !noalias !52
  %1214 = add i64 %1190, -8
  %1215 = getelementptr inbounds i16, i16* %1189, i64 8
  %1216 = getelementptr inbounds i16, i16* %1191, i64 8
  %1217 = icmp eq i64 %1214, 0
  br i1 %1217, label %1218, label %1188, !llvm.loop !80

1218:                                             ; preds = %1183, %1188, %1163, %1041
  %1219 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %14, i64 0, i32 1
  %1220 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ObjectPreview", %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1035, i64 0, i32 1, i32 1
  %1221 = load i64, i64* %1220, align 8, !noalias !68
  store i64 %1221, i64* %1219, align 8, !alias.scope !68, !noalias !52
  %1222 = bitcast %"class.v8_inspector::String16"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1222) #15, !noalias !52
  %1223 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6StringE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %15, i8* %1223) #15
  %1224 = bitcast %"class.v8_inspector::String16"* %14 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1225 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1224, i64 0, i32 1, i32 1
  %1226 = load i8, i8* %1225, align 1, !noalias !52
  %1227 = icmp slt i8 %1226, 0
  %1228 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1229 = load i64, i64* %1228, align 8, !noalias !52
  %1230 = zext i8 %1226 to i64
  %1231 = select i1 %1227, i64 %1229, i64 %1230
  %1232 = bitcast %"class.v8_inspector::String16"* %15 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1233 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1232, i64 0, i32 1, i32 1
  %1234 = load i8, i8* %1233, align 1, !noalias !52
  %1235 = icmp slt i8 %1234, 0
  %1236 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1237 = load i64, i64* %1236, align 8, !noalias !52
  %1238 = zext i8 %1234 to i64
  %1239 = select i1 %1235, i64 %1237, i64 %1238
  %1240 = icmp eq i64 %1231, %1239
  br i1 %1240, label %1241, label %1264

1241:                                             ; preds = %1218
  %1242 = icmp eq i64 %1231, 0
  br i1 %1242, label %1264, label %1243

1243:                                             ; preds = %1241
  %1244 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1245 = load i16*, i16** %1244, align 8, !noalias !52
  %1246 = bitcast %"class.v8_inspector::String16"* %15 to i16*
  %1247 = select i1 %1235, i16* %1245, i16* %1246
  %1248 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1249 = load i16*, i16** %1248, align 8, !noalias !52
  %1250 = bitcast %"class.v8_inspector::String16"* %14 to i16*
  %1251 = select i1 %1227, i16* %1249, i16* %1250
  br label %1252

1252:                                             ; preds = %1259, %1243
  %1253 = phi i64 [ %1260, %1259 ], [ %1231, %1243 ]
  %1254 = phi i16* [ %1262, %1259 ], [ %1247, %1243 ]
  %1255 = phi i16* [ %1261, %1259 ], [ %1251, %1243 ]
  %1256 = load i16, i16* %1255, align 2
  %1257 = load i16, i16* %1254, align 2
  %1258 = icmp eq i16 %1257, %1256
  br i1 %1258, label %1259, label %1264

1259:                                             ; preds = %1252
  %1260 = add i64 %1253, -1
  %1261 = getelementptr inbounds i16, i16* %1255, i64 1
  %1262 = getelementptr inbounds i16, i16* %1254, i64 1
  %1263 = icmp eq i64 %1260, 0
  br i1 %1263, label %1264, label %1252

1264:                                             ; preds = %1259, %1252, %1241, %1218
  %1265 = phi i1 [ false, %1218 ], [ true, %1241 ], [ false, %1252 ], [ true, %1259 ]
  br i1 %1235, label %1266, label %1270

1266:                                             ; preds = %1264
  %1267 = bitcast %"class.v8_inspector::String16"* %15 to i8**
  %1268 = load i8*, i8** %1267, align 8, !noalias !52
  call void @_ZdlPv(i8* %1268) #16
  %1269 = load i8, i8* %1225, align 1, !noalias !52
  br label %1270

1270:                                             ; preds = %1266, %1264
  %1271 = phi i8 [ %1269, %1266 ], [ %1226, %1264 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1222) #15, !noalias !52
  %1272 = icmp slt i8 %1271, 0
  br i1 %1272, label %1273, label %1276

1273:                                             ; preds = %1270
  %1274 = bitcast %"class.v8_inspector::String16"* %14 to i8**
  %1275 = load i8*, i8** %1274, align 8, !noalias !52
  call void @_ZdlPv(i8* %1275) #16
  br label %1276

1276:                                             ; preds = %1273, %1270
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1034) #15, !noalias !52
  br i1 %1265, label %1277, label %1479

1277:                                             ; preds = %1276
  %1278 = bitcast %"class.v8_inspector::String16"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1278) #15, !noalias !52
  %1279 = load i8, i8* %1013, align 1, !noalias !52
  %1280 = icmp slt i8 %1279, 0
  br i1 %1280, label %1282, label %1281

1281:                                             ; preds = %1277
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %786, i8* nonnull align 8 %789, i64 24, i1 false) #15, !noalias !52
  br label %1457

1282:                                             ; preds = %1277
  %1283 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1284 = load i16*, i16** %1283, align 8, !noalias !52
  %1285 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1286 = load i64, i64* %1285, align 8, !noalias !52
  %1287 = icmp ult i64 %1286, 11
  br i1 %1287, label %1288, label %1293

1288:                                             ; preds = %1282
  %1289 = bitcast %"class.v8_inspector::String16"* %17 to i16*
  %1290 = trunc i64 %1286 to i8
  %1291 = bitcast %"class.v8_inspector::String16"* %17 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1292 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1291, i64 0, i32 1, i32 1
  store i8 %1290, i8* %1292, align 1, !noalias !52
  br label %1310

1293:                                             ; preds = %1282
  %1294 = icmp ugt i64 %1286, 9223372036854775791
  br i1 %1294, label %1295, label %1297

1295:                                             ; preds = %1293
  %1296 = bitcast %"class.v8_inspector::String16"* %17 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1296) #14
  unreachable

1297:                                             ; preds = %1293
  %1298 = add nuw nsw i64 %1286, 8
  %1299 = and i64 %1298, -8
  %1300 = icmp slt i64 %1299, 0
  br i1 %1300, label %1301, label %1302

1301:                                             ; preds = %1297
  call void @abort() #14
  unreachable

1302:                                             ; preds = %1297
  %1303 = shl i64 %1299, 1
  %1304 = call i8* @_Znwm(i64 %1303) #16
  %1305 = bitcast i8* %1304 to i16*
  %1306 = bitcast %"class.v8_inspector::String16"* %17 to i8**
  store i8* %1304, i8** %1306, align 8, !noalias !52
  %1307 = or i64 %1299, -9223372036854775808
  %1308 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1307, i64* %1308, align 8, !noalias !52
  %1309 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1286, i64* %1309, align 8, !noalias !52
  br label %1310

1310:                                             ; preds = %1302, %1288
  %1311 = phi i16* [ %1289, %1288 ], [ %1305, %1302 ]
  %1312 = add nuw nsw i64 %1286, 1
  %1313 = add i64 %1286, 1
  %1314 = icmp ult i64 %1313, 16
  br i1 %1314, label %1404, label %1315

1315:                                             ; preds = %1310
  %1316 = add i64 %1286, 1
  %1317 = getelementptr i16, i16* %1311, i64 %1316
  %1318 = getelementptr i16, i16* %1284, i64 %1316
  %1319 = icmp ult i16* %1311, %1318
  %1320 = icmp ult i16* %1284, %1317
  %1321 = and i1 %1319, %1320
  br i1 %1321, label %1404, label %1322

1322:                                             ; preds = %1315
  %1323 = and i64 %1313, -16
  %1324 = getelementptr i16, i16* %1311, i64 %1323
  %1325 = sub i64 %1312, %1323
  %1326 = getelementptr i16, i16* %1284, i64 %1323
  %1327 = add i64 %1323, -16
  %1328 = lshr exact i64 %1327, 4
  %1329 = add nuw nsw i64 %1328, 1
  %1330 = and i64 %1329, 3
  %1331 = icmp ult i64 %1327, 48
  br i1 %1331, label %1383, label %1332

1332:                                             ; preds = %1322
  %1333 = sub nsw i64 %1329, %1330
  br label %1334

1334:                                             ; preds = %1334, %1332
  %1335 = phi i64 [ 0, %1332 ], [ %1380, %1334 ]
  %1336 = phi i64 [ %1333, %1332 ], [ %1381, %1334 ]
  %1337 = getelementptr i16, i16* %1311, i64 %1335
  %1338 = getelementptr i16, i16* %1284, i64 %1335
  %1339 = bitcast i16* %1338 to <8 x i16>*
  %1340 = load <8 x i16>, <8 x i16>* %1339, align 2, !alias.scope !81
  %1341 = getelementptr i16, i16* %1338, i64 8
  %1342 = bitcast i16* %1341 to <8 x i16>*
  %1343 = load <8 x i16>, <8 x i16>* %1342, align 2, !alias.scope !81
  %1344 = bitcast i16* %1337 to <8 x i16>*
  store <8 x i16> %1340, <8 x i16>* %1344, align 2, !alias.scope !84, !noalias !86
  %1345 = getelementptr i16, i16* %1337, i64 8
  %1346 = bitcast i16* %1345 to <8 x i16>*
  store <8 x i16> %1343, <8 x i16>* %1346, align 2, !alias.scope !84, !noalias !86
  %1347 = or i64 %1335, 16
  %1348 = getelementptr i16, i16* %1311, i64 %1347
  %1349 = getelementptr i16, i16* %1284, i64 %1347
  %1350 = bitcast i16* %1349 to <8 x i16>*
  %1351 = load <8 x i16>, <8 x i16>* %1350, align 2, !alias.scope !81
  %1352 = getelementptr i16, i16* %1349, i64 8
  %1353 = bitcast i16* %1352 to <8 x i16>*
  %1354 = load <8 x i16>, <8 x i16>* %1353, align 2, !alias.scope !81
  %1355 = bitcast i16* %1348 to <8 x i16>*
  store <8 x i16> %1351, <8 x i16>* %1355, align 2, !alias.scope !84, !noalias !86
  %1356 = getelementptr i16, i16* %1348, i64 8
  %1357 = bitcast i16* %1356 to <8 x i16>*
  store <8 x i16> %1354, <8 x i16>* %1357, align 2, !alias.scope !84, !noalias !86
  %1358 = or i64 %1335, 32
  %1359 = getelementptr i16, i16* %1311, i64 %1358
  %1360 = getelementptr i16, i16* %1284, i64 %1358
  %1361 = bitcast i16* %1360 to <8 x i16>*
  %1362 = load <8 x i16>, <8 x i16>* %1361, align 2, !alias.scope !81
  %1363 = getelementptr i16, i16* %1360, i64 8
  %1364 = bitcast i16* %1363 to <8 x i16>*
  %1365 = load <8 x i16>, <8 x i16>* %1364, align 2, !alias.scope !81
  %1366 = bitcast i16* %1359 to <8 x i16>*
  store <8 x i16> %1362, <8 x i16>* %1366, align 2, !alias.scope !84, !noalias !86
  %1367 = getelementptr i16, i16* %1359, i64 8
  %1368 = bitcast i16* %1367 to <8 x i16>*
  store <8 x i16> %1365, <8 x i16>* %1368, align 2, !alias.scope !84, !noalias !86
  %1369 = or i64 %1335, 48
  %1370 = getelementptr i16, i16* %1311, i64 %1369
  %1371 = getelementptr i16, i16* %1284, i64 %1369
  %1372 = bitcast i16* %1371 to <8 x i16>*
  %1373 = load <8 x i16>, <8 x i16>* %1372, align 2, !alias.scope !81
  %1374 = getelementptr i16, i16* %1371, i64 8
  %1375 = bitcast i16* %1374 to <8 x i16>*
  %1376 = load <8 x i16>, <8 x i16>* %1375, align 2, !alias.scope !81
  %1377 = bitcast i16* %1370 to <8 x i16>*
  store <8 x i16> %1373, <8 x i16>* %1377, align 2, !alias.scope !84, !noalias !86
  %1378 = getelementptr i16, i16* %1370, i64 8
  %1379 = bitcast i16* %1378 to <8 x i16>*
  store <8 x i16> %1376, <8 x i16>* %1379, align 2, !alias.scope !84, !noalias !86
  %1380 = add i64 %1335, 64
  %1381 = add i64 %1336, -4
  %1382 = icmp eq i64 %1381, 0
  br i1 %1382, label %1383, label %1334, !llvm.loop !87

1383:                                             ; preds = %1334, %1322
  %1384 = phi i64 [ 0, %1322 ], [ %1380, %1334 ]
  %1385 = icmp eq i64 %1330, 0
  br i1 %1385, label %1402, label %1386

1386:                                             ; preds = %1383, %1386
  %1387 = phi i64 [ %1399, %1386 ], [ %1384, %1383 ]
  %1388 = phi i64 [ %1400, %1386 ], [ %1330, %1383 ]
  %1389 = getelementptr i16, i16* %1311, i64 %1387
  %1390 = getelementptr i16, i16* %1284, i64 %1387
  %1391 = bitcast i16* %1390 to <8 x i16>*
  %1392 = load <8 x i16>, <8 x i16>* %1391, align 2, !alias.scope !81
  %1393 = getelementptr i16, i16* %1390, i64 8
  %1394 = bitcast i16* %1393 to <8 x i16>*
  %1395 = load <8 x i16>, <8 x i16>* %1394, align 2, !alias.scope !81
  %1396 = bitcast i16* %1389 to <8 x i16>*
  store <8 x i16> %1392, <8 x i16>* %1396, align 2, !alias.scope !84, !noalias !86
  %1397 = getelementptr i16, i16* %1389, i64 8
  %1398 = bitcast i16* %1397 to <8 x i16>*
  store <8 x i16> %1395, <8 x i16>* %1398, align 2, !alias.scope !84, !noalias !86
  %1399 = add i64 %1387, 16
  %1400 = add i64 %1388, -1
  %1401 = icmp eq i64 %1400, 0
  br i1 %1401, label %1402, label %1386, !llvm.loop !88

1402:                                             ; preds = %1386, %1383
  %1403 = icmp eq i64 %1313, %1323
  br i1 %1403, label %1457, label %1404

1404:                                             ; preds = %1402, %1315, %1310
  %1405 = phi i16* [ %1311, %1315 ], [ %1311, %1310 ], [ %1324, %1402 ]
  %1406 = phi i64 [ %1312, %1315 ], [ %1312, %1310 ], [ %1325, %1402 ]
  %1407 = phi i16* [ %1284, %1315 ], [ %1284, %1310 ], [ %1326, %1402 ]
  %1408 = add i64 %1406, -1
  %1409 = and i64 %1406, 7
  %1410 = icmp eq i64 %1409, 0
  br i1 %1410, label %1422, label %1411

1411:                                             ; preds = %1404, %1411
  %1412 = phi i16* [ %1418, %1411 ], [ %1405, %1404 ]
  %1413 = phi i64 [ %1417, %1411 ], [ %1406, %1404 ]
  %1414 = phi i16* [ %1419, %1411 ], [ %1407, %1404 ]
  %1415 = phi i64 [ %1420, %1411 ], [ %1409, %1404 ]
  %1416 = load i16, i16* %1414, align 2
  store i16 %1416, i16* %1412, align 2, !noalias !52
  %1417 = add i64 %1413, -1
  %1418 = getelementptr inbounds i16, i16* %1412, i64 1
  %1419 = getelementptr inbounds i16, i16* %1414, i64 1
  %1420 = add i64 %1415, -1
  %1421 = icmp eq i64 %1420, 0
  br i1 %1421, label %1422, label %1411, !llvm.loop !89

1422:                                             ; preds = %1411, %1404
  %1423 = phi i16* [ %1405, %1404 ], [ %1418, %1411 ]
  %1424 = phi i64 [ %1406, %1404 ], [ %1417, %1411 ]
  %1425 = phi i16* [ %1407, %1404 ], [ %1419, %1411 ]
  %1426 = icmp ult i64 %1408, 7
  br i1 %1426, label %1457, label %1427

1427:                                             ; preds = %1422, %1427
  %1428 = phi i16* [ %1454, %1427 ], [ %1423, %1422 ]
  %1429 = phi i64 [ %1453, %1427 ], [ %1424, %1422 ]
  %1430 = phi i16* [ %1455, %1427 ], [ %1425, %1422 ]
  %1431 = load i16, i16* %1430, align 2
  store i16 %1431, i16* %1428, align 2, !noalias !52
  %1432 = getelementptr inbounds i16, i16* %1428, i64 1
  %1433 = getelementptr inbounds i16, i16* %1430, i64 1
  %1434 = load i16, i16* %1433, align 2
  store i16 %1434, i16* %1432, align 2, !noalias !52
  %1435 = getelementptr inbounds i16, i16* %1428, i64 2
  %1436 = getelementptr inbounds i16, i16* %1430, i64 2
  %1437 = load i16, i16* %1436, align 2
  store i16 %1437, i16* %1435, align 2, !noalias !52
  %1438 = getelementptr inbounds i16, i16* %1428, i64 3
  %1439 = getelementptr inbounds i16, i16* %1430, i64 3
  %1440 = load i16, i16* %1439, align 2
  store i16 %1440, i16* %1438, align 2, !noalias !52
  %1441 = getelementptr inbounds i16, i16* %1428, i64 4
  %1442 = getelementptr inbounds i16, i16* %1430, i64 4
  %1443 = load i16, i16* %1442, align 2
  store i16 %1443, i16* %1441, align 2, !noalias !52
  %1444 = getelementptr inbounds i16, i16* %1428, i64 5
  %1445 = getelementptr inbounds i16, i16* %1430, i64 5
  %1446 = load i16, i16* %1445, align 2
  store i16 %1446, i16* %1444, align 2, !noalias !52
  %1447 = getelementptr inbounds i16, i16* %1428, i64 6
  %1448 = getelementptr inbounds i16, i16* %1430, i64 6
  %1449 = load i16, i16* %1448, align 2
  store i16 %1449, i16* %1447, align 2, !noalias !52
  %1450 = getelementptr inbounds i16, i16* %1428, i64 7
  %1451 = getelementptr inbounds i16, i16* %1430, i64 7
  %1452 = load i16, i16* %1451, align 2
  store i16 %1452, i16* %1450, align 2, !noalias !52
  %1453 = add i64 %1429, -8
  %1454 = getelementptr inbounds i16, i16* %1428, i64 8
  %1455 = getelementptr inbounds i16, i16* %1430, i64 8
  %1456 = icmp eq i64 %1453, 0
  br i1 %1456, label %1457, label %1427, !llvm.loop !90

1457:                                             ; preds = %1422, %1427, %1402, %1281
  %1458 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %17, i64 0, i32 1
  %1459 = load i64, i64* %1025, align 8, !noalias !52
  store i64 %1459, i64* %1458, align 8, !noalias !52
  call void @_ZN12v8_inspector8String166concatIJcS0_cEEES0_DpT_(%"class.v8_inspector::String16"* nonnull sret %16, i8 signext 34, %"class.v8_inspector::String16"* nonnull %17, i8 signext 34) #15
  %1460 = load i8, i8* %1013, align 1, !noalias !52
  %1461 = icmp slt i8 %1460, 0
  br i1 %1461, label %1462, label %1465

1462:                                             ; preds = %1457
  %1463 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %1464 = load i8*, i8** %1463, align 8, !noalias !52
  call void @_ZdlPv(i8* %1464) #16
  br label %1465

1465:                                             ; preds = %1457, %1462
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %789, i8* nonnull align 8 %1278, i64 24, i1 false) #15, !noalias !52
  %1466 = bitcast %"class.v8_inspector::String16"* %16 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1467 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1466, i64 0, i32 1, i32 1
  store i8 0, i8* %1467, align 1, !noalias !52
  %1468 = bitcast %"class.v8_inspector::String16"* %16 to i16*
  store i16 0, i16* %1468, align 8, !noalias !52
  %1469 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %16, i64 0, i32 1
  %1470 = load i64, i64* %1469, align 8, !noalias !52
  store i64 %1470, i64* %1025, align 8, !noalias !52
  %1471 = bitcast %"class.v8_inspector::String16"* %17 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1472 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1471, i64 0, i32 1, i32 1
  %1473 = load i8, i8* %1472, align 1, !noalias !52
  %1474 = icmp slt i8 %1473, 0
  br i1 %1474, label %1475, label %1478

1475:                                             ; preds = %1465
  %1476 = bitcast %"class.v8_inspector::String16"* %17 to i8**
  %1477 = load i8*, i8** %1476, align 8, !noalias !52
  call void @_ZdlPv(i8* %1477) #16
  br label %1478

1478:                                             ; preds = %1475, %1465
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1278) #15, !noalias !52
  br label %1479

1479:                                             ; preds = %1478, %1276
  %1480 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %814, align 8, !noalias !52
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %809) #15, !noalias !52
  store %"class.v8_inspector::protocol::Runtime::ObjectPreview"* null, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %814, align 8, !noalias !52
  %1481 = icmp eq %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1480, null
  br i1 %1481, label %1487, label %1482

1482:                                             ; preds = %1479
  %1483 = bitcast %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1480 to void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)***
  %1484 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*** %1483, align 8
  %1485 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %1484, i64 2
  %1486 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %1485, align 8
  call void %1486(%"class.v8_inspector::protocol::Runtime::ObjectPreview"* nonnull %1480) #15
  br label %1487

1487:                                             ; preds = %1482, %1479, %817
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %807) #15, !noalias !52
  %1488 = bitcast %"class.v8_inspector::ValueMirror"* %804 to void (%"class.v8_inspector::ValueMirror"*)***
  %1489 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %1488, align 8
  %1490 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1489, i64 1
  %1491 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1490, align 8
  call void %1491(%"class.v8_inspector::ValueMirror"* nonnull %804) #15
  br label %1492

1492:                                             ; preds = %803, %802, %1487
  %1493 = bitcast %"class.v8_inspector::String16"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1493) #15, !noalias !52
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1493, i8 0, i64 32, i1 false) #15, !noalias !52
  %1494 = bitcast %"class.v8_inspector::String16"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1494) #15, !noalias !52
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %19, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0)) #15, !noalias !52
  %1495 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %788, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %19) #15, !noalias !52
  %1496 = bitcast %"class.v8::String"* %1495 to %"class.v8::Name"*
  %1497 = call %"class.v8::Value"* @_ZN2v86Object20GetRealNamedPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"* %728, %"class.v8::Context"* %0, %"class.v8::Name"* %1496) #15, !noalias !52
  %1498 = icmp eq %"class.v8::Value"* %1497, null
  %1499 = bitcast %"class.v8_inspector::String16"* %19 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1500 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1499, i64 0, i32 1, i32 1
  %1501 = load i8, i8* %1500, align 1, !noalias !52
  %1502 = icmp slt i8 %1501, 0
  br i1 %1502, label %1503, label %1506

1503:                                             ; preds = %1492
  %1504 = bitcast %"class.v8_inspector::String16"* %19 to i8**
  %1505 = load i8*, i8** %1504, align 8, !noalias !52
  call void @_ZdlPv(i8* %1505) #16
  br label %1506

1506:                                             ; preds = %1503, %1492
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1494) #15, !noalias !52
  br i1 %1498, label %2196, label %1507

1507:                                             ; preds = %1506
  %1508 = call %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector11ValueMirror6createEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8::Context"* %0, %"class.v8::Value"* nonnull %1497) #15
  %1509 = icmp eq %"class.v8_inspector::ValueMirror"* %1508, null
  br i1 %1509, label %2196, label %1510

1510:                                             ; preds = %1507
  %1511 = bitcast %"class.std::__1::unique_ptr.417"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1511) #15, !noalias !52
  %1512 = bitcast %"class.std::__1::unique_ptr.417"* %20 to i64*
  store i64 0, i64* %1512, align 8, !noalias !52
  %1513 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1513) #15, !noalias !52
  store i32 5, i32* %21, align 4, !noalias !52
  %1514 = bitcast %"class.v8_inspector::ValueMirror"* %1508 to void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)***
  %1515 = load void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)**, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)*** %1514, align 8
  %1516 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)*, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)** %1515, i64 5
  %1517 = load void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)*, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)** %1516, align 8
  call void %1517(%"class.v8_inspector::ValueMirror"* nonnull %1508, %"class.v8::Context"* %0, i32* nonnull %21, i32* nonnull %21, %"class.std::__1::unique_ptr.417"* nonnull %20) #15
  %1518 = getelementptr inbounds %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.417"* %20, i64 0, i32 0, i32 0, i32 0
  %1519 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1518, align 8, !noalias !52
  %1520 = icmp eq %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1519, null
  br i1 %1520, label %1521, label %1522

1521:                                             ; preds = %1510
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1513) #15, !noalias !52
  br label %2191

1522:                                             ; preds = %1510
  %1523 = bitcast %"class.v8_inspector::String16"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1523) #15, !noalias !52
  %1524 = bitcast %"class.v8_inspector::String16"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1524) #15, !noalias !52
  %1525 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ObjectPreview", %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1519, i64 0, i32 3, i32 0
  %1526 = bitcast %"class.v8_inspector::String16"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1526, i8 0, i64 32, i1 false)
  %1527 = load i8, i8* %1525, align 8, !range !7, !noalias !91
  %1528 = icmp eq i8 %1527, 0
  %1529 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ObjectPreview", %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1519, i64 0, i32 3, i32 1
  %1530 = select i1 %1528, %"class.v8_inspector::String16"* %23, %"class.v8_inspector::String16"* %1529
  %1531 = bitcast %"class.v8_inspector::String16"* %1530 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1532 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1531, i64 0, i32 1, i32 1
  %1533 = load i8, i8* %1532, align 1, !noalias !91
  %1534 = icmp slt i8 %1533, 0
  br i1 %1534, label %1537, label %1535

1535:                                             ; preds = %1522
  %1536 = bitcast %"class.v8_inspector::String16"* %1530 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1523, i8* align 8 %1536, i64 24, i1 false) #15
  br label %1712

1537:                                             ; preds = %1522
  %1538 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1530, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1539 = load i16*, i16** %1538, align 8, !noalias !91
  %1540 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1530, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1541 = load i64, i64* %1540, align 8, !noalias !91
  %1542 = icmp ult i64 %1541, 11
  br i1 %1542, label %1543, label %1548

1543:                                             ; preds = %1537
  %1544 = bitcast %"class.v8_inspector::String16"* %22 to i16*
  %1545 = trunc i64 %1541 to i8
  %1546 = bitcast %"class.v8_inspector::String16"* %22 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1547 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1546, i64 0, i32 1, i32 1
  store i8 %1545, i8* %1547, align 1, !alias.scope !91, !noalias !52
  br label %1565

1548:                                             ; preds = %1537
  %1549 = icmp ugt i64 %1541, 9223372036854775791
  br i1 %1549, label %1550, label %1552

1550:                                             ; preds = %1548
  %1551 = bitcast %"class.v8_inspector::String16"* %22 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1551) #14
  unreachable

1552:                                             ; preds = %1548
  %1553 = add nuw nsw i64 %1541, 8
  %1554 = and i64 %1553, -8
  %1555 = icmp slt i64 %1554, 0
  br i1 %1555, label %1556, label %1557

1556:                                             ; preds = %1552
  call void @abort() #14
  unreachable

1557:                                             ; preds = %1552
  %1558 = shl i64 %1554, 1
  %1559 = call i8* @_Znwm(i64 %1558) #16
  %1560 = bitcast i8* %1559 to i16*
  %1561 = bitcast %"class.v8_inspector::String16"* %22 to i8**
  store i8* %1559, i8** %1561, align 8, !alias.scope !91, !noalias !52
  %1562 = or i64 %1554, -9223372036854775808
  %1563 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1562, i64* %1563, align 8, !alias.scope !91, !noalias !52
  %1564 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1541, i64* %1564, align 8, !alias.scope !91, !noalias !52
  br label %1565

1565:                                             ; preds = %1557, %1543
  %1566 = phi i16* [ %1544, %1543 ], [ %1560, %1557 ]
  %1567 = add nuw nsw i64 %1541, 1
  %1568 = add i64 %1541, 1
  %1569 = icmp ult i64 %1568, 16
  br i1 %1569, label %1659, label %1570

1570:                                             ; preds = %1565
  %1571 = add i64 %1541, 1
  %1572 = getelementptr i16, i16* %1566, i64 %1571
  %1573 = getelementptr i16, i16* %1539, i64 %1571
  %1574 = icmp ult i16* %1566, %1573
  %1575 = icmp ult i16* %1539, %1572
  %1576 = and i1 %1574, %1575
  br i1 %1576, label %1659, label %1577

1577:                                             ; preds = %1570
  %1578 = and i64 %1568, -16
  %1579 = getelementptr i16, i16* %1566, i64 %1578
  %1580 = sub i64 %1567, %1578
  %1581 = getelementptr i16, i16* %1539, i64 %1578
  %1582 = add i64 %1578, -16
  %1583 = lshr exact i64 %1582, 4
  %1584 = add nuw nsw i64 %1583, 1
  %1585 = and i64 %1584, 3
  %1586 = icmp ult i64 %1582, 48
  br i1 %1586, label %1638, label %1587

1587:                                             ; preds = %1577
  %1588 = sub nsw i64 %1584, %1585
  br label %1589

1589:                                             ; preds = %1589, %1587
  %1590 = phi i64 [ 0, %1587 ], [ %1635, %1589 ]
  %1591 = phi i64 [ %1588, %1587 ], [ %1636, %1589 ]
  %1592 = getelementptr i16, i16* %1566, i64 %1590
  %1593 = getelementptr i16, i16* %1539, i64 %1590
  %1594 = bitcast i16* %1593 to <8 x i16>*
  %1595 = load <8 x i16>, <8 x i16>* %1594, align 2, !alias.scope !94
  %1596 = getelementptr i16, i16* %1593, i64 8
  %1597 = bitcast i16* %1596 to <8 x i16>*
  %1598 = load <8 x i16>, <8 x i16>* %1597, align 2, !alias.scope !94
  %1599 = bitcast i16* %1592 to <8 x i16>*
  store <8 x i16> %1595, <8 x i16>* %1599, align 2, !alias.scope !97, !noalias !99
  %1600 = getelementptr i16, i16* %1592, i64 8
  %1601 = bitcast i16* %1600 to <8 x i16>*
  store <8 x i16> %1598, <8 x i16>* %1601, align 2, !alias.scope !97, !noalias !99
  %1602 = or i64 %1590, 16
  %1603 = getelementptr i16, i16* %1566, i64 %1602
  %1604 = getelementptr i16, i16* %1539, i64 %1602
  %1605 = bitcast i16* %1604 to <8 x i16>*
  %1606 = load <8 x i16>, <8 x i16>* %1605, align 2, !alias.scope !94
  %1607 = getelementptr i16, i16* %1604, i64 8
  %1608 = bitcast i16* %1607 to <8 x i16>*
  %1609 = load <8 x i16>, <8 x i16>* %1608, align 2, !alias.scope !94
  %1610 = bitcast i16* %1603 to <8 x i16>*
  store <8 x i16> %1606, <8 x i16>* %1610, align 2, !alias.scope !97, !noalias !99
  %1611 = getelementptr i16, i16* %1603, i64 8
  %1612 = bitcast i16* %1611 to <8 x i16>*
  store <8 x i16> %1609, <8 x i16>* %1612, align 2, !alias.scope !97, !noalias !99
  %1613 = or i64 %1590, 32
  %1614 = getelementptr i16, i16* %1566, i64 %1613
  %1615 = getelementptr i16, i16* %1539, i64 %1613
  %1616 = bitcast i16* %1615 to <8 x i16>*
  %1617 = load <8 x i16>, <8 x i16>* %1616, align 2, !alias.scope !94
  %1618 = getelementptr i16, i16* %1615, i64 8
  %1619 = bitcast i16* %1618 to <8 x i16>*
  %1620 = load <8 x i16>, <8 x i16>* %1619, align 2, !alias.scope !94
  %1621 = bitcast i16* %1614 to <8 x i16>*
  store <8 x i16> %1617, <8 x i16>* %1621, align 2, !alias.scope !97, !noalias !99
  %1622 = getelementptr i16, i16* %1614, i64 8
  %1623 = bitcast i16* %1622 to <8 x i16>*
  store <8 x i16> %1620, <8 x i16>* %1623, align 2, !alias.scope !97, !noalias !99
  %1624 = or i64 %1590, 48
  %1625 = getelementptr i16, i16* %1566, i64 %1624
  %1626 = getelementptr i16, i16* %1539, i64 %1624
  %1627 = bitcast i16* %1626 to <8 x i16>*
  %1628 = load <8 x i16>, <8 x i16>* %1627, align 2, !alias.scope !94
  %1629 = getelementptr i16, i16* %1626, i64 8
  %1630 = bitcast i16* %1629 to <8 x i16>*
  %1631 = load <8 x i16>, <8 x i16>* %1630, align 2, !alias.scope !94
  %1632 = bitcast i16* %1625 to <8 x i16>*
  store <8 x i16> %1628, <8 x i16>* %1632, align 2, !alias.scope !97, !noalias !99
  %1633 = getelementptr i16, i16* %1625, i64 8
  %1634 = bitcast i16* %1633 to <8 x i16>*
  store <8 x i16> %1631, <8 x i16>* %1634, align 2, !alias.scope !97, !noalias !99
  %1635 = add i64 %1590, 64
  %1636 = add i64 %1591, -4
  %1637 = icmp eq i64 %1636, 0
  br i1 %1637, label %1638, label %1589, !llvm.loop !100

1638:                                             ; preds = %1589, %1577
  %1639 = phi i64 [ 0, %1577 ], [ %1635, %1589 ]
  %1640 = icmp eq i64 %1585, 0
  br i1 %1640, label %1657, label %1641

1641:                                             ; preds = %1638, %1641
  %1642 = phi i64 [ %1654, %1641 ], [ %1639, %1638 ]
  %1643 = phi i64 [ %1655, %1641 ], [ %1585, %1638 ]
  %1644 = getelementptr i16, i16* %1566, i64 %1642
  %1645 = getelementptr i16, i16* %1539, i64 %1642
  %1646 = bitcast i16* %1645 to <8 x i16>*
  %1647 = load <8 x i16>, <8 x i16>* %1646, align 2, !alias.scope !94
  %1648 = getelementptr i16, i16* %1645, i64 8
  %1649 = bitcast i16* %1648 to <8 x i16>*
  %1650 = load <8 x i16>, <8 x i16>* %1649, align 2, !alias.scope !94
  %1651 = bitcast i16* %1644 to <8 x i16>*
  store <8 x i16> %1647, <8 x i16>* %1651, align 2, !alias.scope !97, !noalias !99
  %1652 = getelementptr i16, i16* %1644, i64 8
  %1653 = bitcast i16* %1652 to <8 x i16>*
  store <8 x i16> %1650, <8 x i16>* %1653, align 2, !alias.scope !97, !noalias !99
  %1654 = add i64 %1642, 16
  %1655 = add i64 %1643, -1
  %1656 = icmp eq i64 %1655, 0
  br i1 %1656, label %1657, label %1641, !llvm.loop !101

1657:                                             ; preds = %1641, %1638
  %1658 = icmp eq i64 %1568, %1578
  br i1 %1658, label %1712, label %1659

1659:                                             ; preds = %1657, %1570, %1565
  %1660 = phi i16* [ %1566, %1570 ], [ %1566, %1565 ], [ %1579, %1657 ]
  %1661 = phi i64 [ %1567, %1570 ], [ %1567, %1565 ], [ %1580, %1657 ]
  %1662 = phi i16* [ %1539, %1570 ], [ %1539, %1565 ], [ %1581, %1657 ]
  %1663 = add i64 %1661, -1
  %1664 = and i64 %1661, 7
  %1665 = icmp eq i64 %1664, 0
  br i1 %1665, label %1677, label %1666

1666:                                             ; preds = %1659, %1666
  %1667 = phi i16* [ %1673, %1666 ], [ %1660, %1659 ]
  %1668 = phi i64 [ %1672, %1666 ], [ %1661, %1659 ]
  %1669 = phi i16* [ %1674, %1666 ], [ %1662, %1659 ]
  %1670 = phi i64 [ %1675, %1666 ], [ %1664, %1659 ]
  %1671 = load i16, i16* %1669, align 2
  store i16 %1671, i16* %1667, align 2, !noalias !52
  %1672 = add i64 %1668, -1
  %1673 = getelementptr inbounds i16, i16* %1667, i64 1
  %1674 = getelementptr inbounds i16, i16* %1669, i64 1
  %1675 = add i64 %1670, -1
  %1676 = icmp eq i64 %1675, 0
  br i1 %1676, label %1677, label %1666, !llvm.loop !102

1677:                                             ; preds = %1666, %1659
  %1678 = phi i16* [ %1660, %1659 ], [ %1673, %1666 ]
  %1679 = phi i64 [ %1661, %1659 ], [ %1672, %1666 ]
  %1680 = phi i16* [ %1662, %1659 ], [ %1674, %1666 ]
  %1681 = icmp ult i64 %1663, 7
  br i1 %1681, label %1712, label %1682

1682:                                             ; preds = %1677, %1682
  %1683 = phi i16* [ %1709, %1682 ], [ %1678, %1677 ]
  %1684 = phi i64 [ %1708, %1682 ], [ %1679, %1677 ]
  %1685 = phi i16* [ %1710, %1682 ], [ %1680, %1677 ]
  %1686 = load i16, i16* %1685, align 2
  store i16 %1686, i16* %1683, align 2, !noalias !52
  %1687 = getelementptr inbounds i16, i16* %1683, i64 1
  %1688 = getelementptr inbounds i16, i16* %1685, i64 1
  %1689 = load i16, i16* %1688, align 2
  store i16 %1689, i16* %1687, align 2, !noalias !52
  %1690 = getelementptr inbounds i16, i16* %1683, i64 2
  %1691 = getelementptr inbounds i16, i16* %1685, i64 2
  %1692 = load i16, i16* %1691, align 2
  store i16 %1692, i16* %1690, align 2, !noalias !52
  %1693 = getelementptr inbounds i16, i16* %1683, i64 3
  %1694 = getelementptr inbounds i16, i16* %1685, i64 3
  %1695 = load i16, i16* %1694, align 2
  store i16 %1695, i16* %1693, align 2, !noalias !52
  %1696 = getelementptr inbounds i16, i16* %1683, i64 4
  %1697 = getelementptr inbounds i16, i16* %1685, i64 4
  %1698 = load i16, i16* %1697, align 2
  store i16 %1698, i16* %1696, align 2, !noalias !52
  %1699 = getelementptr inbounds i16, i16* %1683, i64 5
  %1700 = getelementptr inbounds i16, i16* %1685, i64 5
  %1701 = load i16, i16* %1700, align 2
  store i16 %1701, i16* %1699, align 2, !noalias !52
  %1702 = getelementptr inbounds i16, i16* %1683, i64 6
  %1703 = getelementptr inbounds i16, i16* %1685, i64 6
  %1704 = load i16, i16* %1703, align 2
  store i16 %1704, i16* %1702, align 2, !noalias !52
  %1705 = getelementptr inbounds i16, i16* %1683, i64 7
  %1706 = getelementptr inbounds i16, i16* %1685, i64 7
  %1707 = load i16, i16* %1706, align 2
  store i16 %1707, i16* %1705, align 2, !noalias !52
  %1708 = add i64 %1684, -8
  %1709 = getelementptr inbounds i16, i16* %1683, i64 8
  %1710 = getelementptr inbounds i16, i16* %1685, i64 8
  %1711 = icmp eq i64 %1708, 0
  br i1 %1711, label %1712, label %1682, !llvm.loop !103

1712:                                             ; preds = %1677, %1682, %1657, %1535
  %1713 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %22, i64 0, i32 1
  %1714 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1530, i64 0, i32 1
  %1715 = load i64, i64* %1714, align 8, !noalias !91
  store i64 %1715, i64* %1713, align 8, !alias.scope !91, !noalias !52
  %1716 = bitcast %"class.v8_inspector::String16"* %18 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1717 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1716, i64 0, i32 1, i32 1
  %1718 = load i8, i8* %1717, align 1, !noalias !52
  %1719 = icmp slt i8 %1718, 0
  br i1 %1719, label %1720, label %1724

1720:                                             ; preds = %1712
  %1721 = bitcast %"class.v8_inspector::String16"* %18 to i8**
  %1722 = load i8*, i8** %1721, align 8, !noalias !52
  call void @_ZdlPv(i8* %1722) #16
  %1723 = load i64, i64* %1713, align 8, !noalias !52
  br label %1724

1724:                                             ; preds = %1712, %1720
  %1725 = phi i64 [ %1715, %1712 ], [ %1723, %1720 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1493, i8* nonnull align 8 %1523, i64 24, i1 false) #15, !noalias !52
  %1726 = bitcast %"class.v8_inspector::String16"* %22 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1727 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1726, i64 0, i32 1, i32 1
  store i8 0, i8* %1727, align 1, !noalias !52
  %1728 = bitcast %"class.v8_inspector::String16"* %22 to i16*
  store i16 0, i16* %1728, align 8, !noalias !52
  %1729 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %18, i64 0, i32 1
  store i64 %1725, i64* %1729, align 8, !noalias !52
  %1730 = bitcast %"class.v8_inspector::String16"* %23 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1731 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1730, i64 0, i32 1, i32 1
  %1732 = load i8, i8* %1731, align 1, !noalias !52
  %1733 = icmp slt i8 %1732, 0
  br i1 %1733, label %1734, label %1737

1734:                                             ; preds = %1724
  %1735 = bitcast %"class.v8_inspector::String16"* %23 to i8**
  %1736 = load i8*, i8** %1735, align 8, !noalias !52
  call void @_ZdlPv(i8* %1736) #16
  br label %1737

1737:                                             ; preds = %1734, %1724
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1524) #15, !noalias !52
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1523) #15, !noalias !52
  %1738 = bitcast %"class.v8_inspector::String16"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1738) #15, !noalias !52
  %1739 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1518, align 8, !noalias !52
  %1740 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ObjectPreview", %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1739, i64 0, i32 1
  %1741 = bitcast %"class.v8_inspector::String16"* %1740 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1742 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1741, i64 0, i32 1, i32 1
  %1743 = load i8, i8* %1742, align 1, !noalias !104
  %1744 = icmp slt i8 %1743, 0
  br i1 %1744, label %1747, label %1745

1745:                                             ; preds = %1737
  %1746 = bitcast %"class.v8_inspector::String16"* %1740 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1738, i8* align 8 %1746, i64 24, i1 false) #15
  br label %1922

1747:                                             ; preds = %1737
  %1748 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1740, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1749 = load i16*, i16** %1748, align 8, !noalias !104
  %1750 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ObjectPreview", %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1739, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1751 = load i64, i64* %1750, align 8, !noalias !104
  %1752 = icmp ult i64 %1751, 11
  br i1 %1752, label %1753, label %1758

1753:                                             ; preds = %1747
  %1754 = bitcast %"class.v8_inspector::String16"* %24 to i16*
  %1755 = trunc i64 %1751 to i8
  %1756 = bitcast %"class.v8_inspector::String16"* %24 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1757 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1756, i64 0, i32 1, i32 1
  store i8 %1755, i8* %1757, align 1, !alias.scope !104, !noalias !52
  br label %1775

1758:                                             ; preds = %1747
  %1759 = icmp ugt i64 %1751, 9223372036854775791
  br i1 %1759, label %1760, label %1762

1760:                                             ; preds = %1758
  %1761 = bitcast %"class.v8_inspector::String16"* %24 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1761) #14
  unreachable

1762:                                             ; preds = %1758
  %1763 = add nuw nsw i64 %1751, 8
  %1764 = and i64 %1763, -8
  %1765 = icmp slt i64 %1764, 0
  br i1 %1765, label %1766, label %1767

1766:                                             ; preds = %1762
  call void @abort() #14
  unreachable

1767:                                             ; preds = %1762
  %1768 = shl i64 %1764, 1
  %1769 = call i8* @_Znwm(i64 %1768) #16
  %1770 = bitcast i8* %1769 to i16*
  %1771 = bitcast %"class.v8_inspector::String16"* %24 to i8**
  store i8* %1769, i8** %1771, align 8, !alias.scope !104, !noalias !52
  %1772 = or i64 %1764, -9223372036854775808
  %1773 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1772, i64* %1773, align 8, !alias.scope !104, !noalias !52
  %1774 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1751, i64* %1774, align 8, !alias.scope !104, !noalias !52
  br label %1775

1775:                                             ; preds = %1767, %1753
  %1776 = phi i16* [ %1754, %1753 ], [ %1770, %1767 ]
  %1777 = add nuw nsw i64 %1751, 1
  %1778 = add i64 %1751, 1
  %1779 = icmp ult i64 %1778, 16
  br i1 %1779, label %1869, label %1780

1780:                                             ; preds = %1775
  %1781 = add i64 %1751, 1
  %1782 = getelementptr i16, i16* %1776, i64 %1781
  %1783 = getelementptr i16, i16* %1749, i64 %1781
  %1784 = icmp ult i16* %1776, %1783
  %1785 = icmp ult i16* %1749, %1782
  %1786 = and i1 %1784, %1785
  br i1 %1786, label %1869, label %1787

1787:                                             ; preds = %1780
  %1788 = and i64 %1778, -16
  %1789 = getelementptr i16, i16* %1776, i64 %1788
  %1790 = sub i64 %1777, %1788
  %1791 = getelementptr i16, i16* %1749, i64 %1788
  %1792 = add i64 %1788, -16
  %1793 = lshr exact i64 %1792, 4
  %1794 = add nuw nsw i64 %1793, 1
  %1795 = and i64 %1794, 3
  %1796 = icmp ult i64 %1792, 48
  br i1 %1796, label %1848, label %1797

1797:                                             ; preds = %1787
  %1798 = sub nsw i64 %1794, %1795
  br label %1799

1799:                                             ; preds = %1799, %1797
  %1800 = phi i64 [ 0, %1797 ], [ %1845, %1799 ]
  %1801 = phi i64 [ %1798, %1797 ], [ %1846, %1799 ]
  %1802 = getelementptr i16, i16* %1776, i64 %1800
  %1803 = getelementptr i16, i16* %1749, i64 %1800
  %1804 = bitcast i16* %1803 to <8 x i16>*
  %1805 = load <8 x i16>, <8 x i16>* %1804, align 2, !alias.scope !107
  %1806 = getelementptr i16, i16* %1803, i64 8
  %1807 = bitcast i16* %1806 to <8 x i16>*
  %1808 = load <8 x i16>, <8 x i16>* %1807, align 2, !alias.scope !107
  %1809 = bitcast i16* %1802 to <8 x i16>*
  store <8 x i16> %1805, <8 x i16>* %1809, align 2, !alias.scope !110, !noalias !112
  %1810 = getelementptr i16, i16* %1802, i64 8
  %1811 = bitcast i16* %1810 to <8 x i16>*
  store <8 x i16> %1808, <8 x i16>* %1811, align 2, !alias.scope !110, !noalias !112
  %1812 = or i64 %1800, 16
  %1813 = getelementptr i16, i16* %1776, i64 %1812
  %1814 = getelementptr i16, i16* %1749, i64 %1812
  %1815 = bitcast i16* %1814 to <8 x i16>*
  %1816 = load <8 x i16>, <8 x i16>* %1815, align 2, !alias.scope !107
  %1817 = getelementptr i16, i16* %1814, i64 8
  %1818 = bitcast i16* %1817 to <8 x i16>*
  %1819 = load <8 x i16>, <8 x i16>* %1818, align 2, !alias.scope !107
  %1820 = bitcast i16* %1813 to <8 x i16>*
  store <8 x i16> %1816, <8 x i16>* %1820, align 2, !alias.scope !110, !noalias !112
  %1821 = getelementptr i16, i16* %1813, i64 8
  %1822 = bitcast i16* %1821 to <8 x i16>*
  store <8 x i16> %1819, <8 x i16>* %1822, align 2, !alias.scope !110, !noalias !112
  %1823 = or i64 %1800, 32
  %1824 = getelementptr i16, i16* %1776, i64 %1823
  %1825 = getelementptr i16, i16* %1749, i64 %1823
  %1826 = bitcast i16* %1825 to <8 x i16>*
  %1827 = load <8 x i16>, <8 x i16>* %1826, align 2, !alias.scope !107
  %1828 = getelementptr i16, i16* %1825, i64 8
  %1829 = bitcast i16* %1828 to <8 x i16>*
  %1830 = load <8 x i16>, <8 x i16>* %1829, align 2, !alias.scope !107
  %1831 = bitcast i16* %1824 to <8 x i16>*
  store <8 x i16> %1827, <8 x i16>* %1831, align 2, !alias.scope !110, !noalias !112
  %1832 = getelementptr i16, i16* %1824, i64 8
  %1833 = bitcast i16* %1832 to <8 x i16>*
  store <8 x i16> %1830, <8 x i16>* %1833, align 2, !alias.scope !110, !noalias !112
  %1834 = or i64 %1800, 48
  %1835 = getelementptr i16, i16* %1776, i64 %1834
  %1836 = getelementptr i16, i16* %1749, i64 %1834
  %1837 = bitcast i16* %1836 to <8 x i16>*
  %1838 = load <8 x i16>, <8 x i16>* %1837, align 2, !alias.scope !107
  %1839 = getelementptr i16, i16* %1836, i64 8
  %1840 = bitcast i16* %1839 to <8 x i16>*
  %1841 = load <8 x i16>, <8 x i16>* %1840, align 2, !alias.scope !107
  %1842 = bitcast i16* %1835 to <8 x i16>*
  store <8 x i16> %1838, <8 x i16>* %1842, align 2, !alias.scope !110, !noalias !112
  %1843 = getelementptr i16, i16* %1835, i64 8
  %1844 = bitcast i16* %1843 to <8 x i16>*
  store <8 x i16> %1841, <8 x i16>* %1844, align 2, !alias.scope !110, !noalias !112
  %1845 = add i64 %1800, 64
  %1846 = add i64 %1801, -4
  %1847 = icmp eq i64 %1846, 0
  br i1 %1847, label %1848, label %1799, !llvm.loop !113

1848:                                             ; preds = %1799, %1787
  %1849 = phi i64 [ 0, %1787 ], [ %1845, %1799 ]
  %1850 = icmp eq i64 %1795, 0
  br i1 %1850, label %1867, label %1851

1851:                                             ; preds = %1848, %1851
  %1852 = phi i64 [ %1864, %1851 ], [ %1849, %1848 ]
  %1853 = phi i64 [ %1865, %1851 ], [ %1795, %1848 ]
  %1854 = getelementptr i16, i16* %1776, i64 %1852
  %1855 = getelementptr i16, i16* %1749, i64 %1852
  %1856 = bitcast i16* %1855 to <8 x i16>*
  %1857 = load <8 x i16>, <8 x i16>* %1856, align 2, !alias.scope !107
  %1858 = getelementptr i16, i16* %1855, i64 8
  %1859 = bitcast i16* %1858 to <8 x i16>*
  %1860 = load <8 x i16>, <8 x i16>* %1859, align 2, !alias.scope !107
  %1861 = bitcast i16* %1854 to <8 x i16>*
  store <8 x i16> %1857, <8 x i16>* %1861, align 2, !alias.scope !110, !noalias !112
  %1862 = getelementptr i16, i16* %1854, i64 8
  %1863 = bitcast i16* %1862 to <8 x i16>*
  store <8 x i16> %1860, <8 x i16>* %1863, align 2, !alias.scope !110, !noalias !112
  %1864 = add i64 %1852, 16
  %1865 = add i64 %1853, -1
  %1866 = icmp eq i64 %1865, 0
  br i1 %1866, label %1867, label %1851, !llvm.loop !114

1867:                                             ; preds = %1851, %1848
  %1868 = icmp eq i64 %1778, %1788
  br i1 %1868, label %1922, label %1869

1869:                                             ; preds = %1867, %1780, %1775
  %1870 = phi i16* [ %1776, %1780 ], [ %1776, %1775 ], [ %1789, %1867 ]
  %1871 = phi i64 [ %1777, %1780 ], [ %1777, %1775 ], [ %1790, %1867 ]
  %1872 = phi i16* [ %1749, %1780 ], [ %1749, %1775 ], [ %1791, %1867 ]
  %1873 = add i64 %1871, -1
  %1874 = and i64 %1871, 7
  %1875 = icmp eq i64 %1874, 0
  br i1 %1875, label %1887, label %1876

1876:                                             ; preds = %1869, %1876
  %1877 = phi i16* [ %1883, %1876 ], [ %1870, %1869 ]
  %1878 = phi i64 [ %1882, %1876 ], [ %1871, %1869 ]
  %1879 = phi i16* [ %1884, %1876 ], [ %1872, %1869 ]
  %1880 = phi i64 [ %1885, %1876 ], [ %1874, %1869 ]
  %1881 = load i16, i16* %1879, align 2
  store i16 %1881, i16* %1877, align 2, !noalias !52
  %1882 = add i64 %1878, -1
  %1883 = getelementptr inbounds i16, i16* %1877, i64 1
  %1884 = getelementptr inbounds i16, i16* %1879, i64 1
  %1885 = add i64 %1880, -1
  %1886 = icmp eq i64 %1885, 0
  br i1 %1886, label %1887, label %1876, !llvm.loop !115

1887:                                             ; preds = %1876, %1869
  %1888 = phi i16* [ %1870, %1869 ], [ %1883, %1876 ]
  %1889 = phi i64 [ %1871, %1869 ], [ %1882, %1876 ]
  %1890 = phi i16* [ %1872, %1869 ], [ %1884, %1876 ]
  %1891 = icmp ult i64 %1873, 7
  br i1 %1891, label %1922, label %1892

1892:                                             ; preds = %1887, %1892
  %1893 = phi i16* [ %1919, %1892 ], [ %1888, %1887 ]
  %1894 = phi i64 [ %1918, %1892 ], [ %1889, %1887 ]
  %1895 = phi i16* [ %1920, %1892 ], [ %1890, %1887 ]
  %1896 = load i16, i16* %1895, align 2
  store i16 %1896, i16* %1893, align 2, !noalias !52
  %1897 = getelementptr inbounds i16, i16* %1893, i64 1
  %1898 = getelementptr inbounds i16, i16* %1895, i64 1
  %1899 = load i16, i16* %1898, align 2
  store i16 %1899, i16* %1897, align 2, !noalias !52
  %1900 = getelementptr inbounds i16, i16* %1893, i64 2
  %1901 = getelementptr inbounds i16, i16* %1895, i64 2
  %1902 = load i16, i16* %1901, align 2
  store i16 %1902, i16* %1900, align 2, !noalias !52
  %1903 = getelementptr inbounds i16, i16* %1893, i64 3
  %1904 = getelementptr inbounds i16, i16* %1895, i64 3
  %1905 = load i16, i16* %1904, align 2
  store i16 %1905, i16* %1903, align 2, !noalias !52
  %1906 = getelementptr inbounds i16, i16* %1893, i64 4
  %1907 = getelementptr inbounds i16, i16* %1895, i64 4
  %1908 = load i16, i16* %1907, align 2
  store i16 %1908, i16* %1906, align 2, !noalias !52
  %1909 = getelementptr inbounds i16, i16* %1893, i64 5
  %1910 = getelementptr inbounds i16, i16* %1895, i64 5
  %1911 = load i16, i16* %1910, align 2
  store i16 %1911, i16* %1909, align 2, !noalias !52
  %1912 = getelementptr inbounds i16, i16* %1893, i64 6
  %1913 = getelementptr inbounds i16, i16* %1895, i64 6
  %1914 = load i16, i16* %1913, align 2
  store i16 %1914, i16* %1912, align 2, !noalias !52
  %1915 = getelementptr inbounds i16, i16* %1893, i64 7
  %1916 = getelementptr inbounds i16, i16* %1895, i64 7
  %1917 = load i16, i16* %1916, align 2
  store i16 %1917, i16* %1915, align 2, !noalias !52
  %1918 = add i64 %1894, -8
  %1919 = getelementptr inbounds i16, i16* %1893, i64 8
  %1920 = getelementptr inbounds i16, i16* %1895, i64 8
  %1921 = icmp eq i64 %1918, 0
  br i1 %1921, label %1922, label %1892, !llvm.loop !116

1922:                                             ; preds = %1887, %1892, %1867, %1745
  %1923 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %24, i64 0, i32 1
  %1924 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ObjectPreview", %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1739, i64 0, i32 1, i32 1
  %1925 = load i64, i64* %1924, align 8, !noalias !104
  store i64 %1925, i64* %1923, align 8, !alias.scope !104, !noalias !52
  %1926 = bitcast %"class.v8_inspector::String16"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1926) #15, !noalias !52
  %1927 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6StringE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %25, i8* %1927) #15
  %1928 = bitcast %"class.v8_inspector::String16"* %24 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1929 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1928, i64 0, i32 1, i32 1
  %1930 = load i8, i8* %1929, align 1, !noalias !52
  %1931 = icmp slt i8 %1930, 0
  %1932 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1933 = load i64, i64* %1932, align 8, !noalias !52
  %1934 = zext i8 %1930 to i64
  %1935 = select i1 %1931, i64 %1933, i64 %1934
  %1936 = bitcast %"class.v8_inspector::String16"* %25 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1937 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1936, i64 0, i32 1, i32 1
  %1938 = load i8, i8* %1937, align 1, !noalias !52
  %1939 = icmp slt i8 %1938, 0
  %1940 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1941 = load i64, i64* %1940, align 8, !noalias !52
  %1942 = zext i8 %1938 to i64
  %1943 = select i1 %1939, i64 %1941, i64 %1942
  %1944 = icmp eq i64 %1935, %1943
  br i1 %1944, label %1945, label %1968

1945:                                             ; preds = %1922
  %1946 = icmp eq i64 %1935, 0
  br i1 %1946, label %1968, label %1947

1947:                                             ; preds = %1945
  %1948 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1949 = load i16*, i16** %1948, align 8, !noalias !52
  %1950 = bitcast %"class.v8_inspector::String16"* %25 to i16*
  %1951 = select i1 %1939, i16* %1949, i16* %1950
  %1952 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1953 = load i16*, i16** %1952, align 8, !noalias !52
  %1954 = bitcast %"class.v8_inspector::String16"* %24 to i16*
  %1955 = select i1 %1931, i16* %1953, i16* %1954
  br label %1956

1956:                                             ; preds = %1963, %1947
  %1957 = phi i64 [ %1964, %1963 ], [ %1935, %1947 ]
  %1958 = phi i16* [ %1966, %1963 ], [ %1951, %1947 ]
  %1959 = phi i16* [ %1965, %1963 ], [ %1955, %1947 ]
  %1960 = load i16, i16* %1959, align 2
  %1961 = load i16, i16* %1958, align 2
  %1962 = icmp eq i16 %1961, %1960
  br i1 %1962, label %1963, label %1968

1963:                                             ; preds = %1956
  %1964 = add i64 %1957, -1
  %1965 = getelementptr inbounds i16, i16* %1959, i64 1
  %1966 = getelementptr inbounds i16, i16* %1958, i64 1
  %1967 = icmp eq i64 %1964, 0
  br i1 %1967, label %1968, label %1956

1968:                                             ; preds = %1963, %1956, %1945, %1922
  %1969 = phi i1 [ false, %1922 ], [ true, %1945 ], [ false, %1956 ], [ true, %1963 ]
  br i1 %1939, label %1970, label %1974

1970:                                             ; preds = %1968
  %1971 = bitcast %"class.v8_inspector::String16"* %25 to i8**
  %1972 = load i8*, i8** %1971, align 8, !noalias !52
  call void @_ZdlPv(i8* %1972) #16
  %1973 = load i8, i8* %1929, align 1, !noalias !52
  br label %1974

1974:                                             ; preds = %1970, %1968
  %1975 = phi i8 [ %1973, %1970 ], [ %1930, %1968 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1926) #15, !noalias !52
  %1976 = icmp slt i8 %1975, 0
  br i1 %1976, label %1977, label %1980

1977:                                             ; preds = %1974
  %1978 = bitcast %"class.v8_inspector::String16"* %24 to i8**
  %1979 = load i8*, i8** %1978, align 8, !noalias !52
  call void @_ZdlPv(i8* %1979) #16
  br label %1980

1980:                                             ; preds = %1977, %1974
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1738) #15, !noalias !52
  br i1 %1969, label %1981, label %2183

1981:                                             ; preds = %1980
  %1982 = bitcast %"class.v8_inspector::String16"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1982) #15, !noalias !52
  %1983 = load i8, i8* %1717, align 1, !noalias !52
  %1984 = icmp slt i8 %1983, 0
  br i1 %1984, label %1986, label %1985

1985:                                             ; preds = %1981
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %787, i8* nonnull align 8 %1493, i64 24, i1 false) #15, !noalias !52
  br label %2161

1986:                                             ; preds = %1981
  %1987 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1988 = load i16*, i16** %1987, align 8, !noalias !52
  %1989 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1990 = load i64, i64* %1989, align 8, !noalias !52
  %1991 = icmp ult i64 %1990, 11
  br i1 %1991, label %1992, label %1997

1992:                                             ; preds = %1986
  %1993 = bitcast %"class.v8_inspector::String16"* %27 to i16*
  %1994 = trunc i64 %1990 to i8
  %1995 = bitcast %"class.v8_inspector::String16"* %27 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1996 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1995, i64 0, i32 1, i32 1
  store i8 %1994, i8* %1996, align 1, !noalias !52
  br label %2014

1997:                                             ; preds = %1986
  %1998 = icmp ugt i64 %1990, 9223372036854775791
  br i1 %1998, label %1999, label %2001

1999:                                             ; preds = %1997
  %2000 = bitcast %"class.v8_inspector::String16"* %27 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %2000) #14
  unreachable

2001:                                             ; preds = %1997
  %2002 = add nuw nsw i64 %1990, 8
  %2003 = and i64 %2002, -8
  %2004 = icmp slt i64 %2003, 0
  br i1 %2004, label %2005, label %2006

2005:                                             ; preds = %2001
  call void @abort() #14
  unreachable

2006:                                             ; preds = %2001
  %2007 = shl i64 %2003, 1
  %2008 = call i8* @_Znwm(i64 %2007) #16
  %2009 = bitcast i8* %2008 to i16*
  %2010 = bitcast %"class.v8_inspector::String16"* %27 to i8**
  store i8* %2008, i8** %2010, align 8, !noalias !52
  %2011 = or i64 %2003, -9223372036854775808
  %2012 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %2011, i64* %2012, align 8, !noalias !52
  %2013 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1990, i64* %2013, align 8, !noalias !52
  br label %2014

2014:                                             ; preds = %2006, %1992
  %2015 = phi i16* [ %1993, %1992 ], [ %2009, %2006 ]
  %2016 = add nuw nsw i64 %1990, 1
  %2017 = add i64 %1990, 1
  %2018 = icmp ult i64 %2017, 16
  br i1 %2018, label %2108, label %2019

2019:                                             ; preds = %2014
  %2020 = add i64 %1990, 1
  %2021 = getelementptr i16, i16* %2015, i64 %2020
  %2022 = getelementptr i16, i16* %1988, i64 %2020
  %2023 = icmp ult i16* %2015, %2022
  %2024 = icmp ult i16* %1988, %2021
  %2025 = and i1 %2023, %2024
  br i1 %2025, label %2108, label %2026

2026:                                             ; preds = %2019
  %2027 = and i64 %2017, -16
  %2028 = getelementptr i16, i16* %2015, i64 %2027
  %2029 = sub i64 %2016, %2027
  %2030 = getelementptr i16, i16* %1988, i64 %2027
  %2031 = add i64 %2027, -16
  %2032 = lshr exact i64 %2031, 4
  %2033 = add nuw nsw i64 %2032, 1
  %2034 = and i64 %2033, 3
  %2035 = icmp ult i64 %2031, 48
  br i1 %2035, label %2087, label %2036

2036:                                             ; preds = %2026
  %2037 = sub nsw i64 %2033, %2034
  br label %2038

2038:                                             ; preds = %2038, %2036
  %2039 = phi i64 [ 0, %2036 ], [ %2084, %2038 ]
  %2040 = phi i64 [ %2037, %2036 ], [ %2085, %2038 ]
  %2041 = getelementptr i16, i16* %2015, i64 %2039
  %2042 = getelementptr i16, i16* %1988, i64 %2039
  %2043 = bitcast i16* %2042 to <8 x i16>*
  %2044 = load <8 x i16>, <8 x i16>* %2043, align 2, !alias.scope !117
  %2045 = getelementptr i16, i16* %2042, i64 8
  %2046 = bitcast i16* %2045 to <8 x i16>*
  %2047 = load <8 x i16>, <8 x i16>* %2046, align 2, !alias.scope !117
  %2048 = bitcast i16* %2041 to <8 x i16>*
  store <8 x i16> %2044, <8 x i16>* %2048, align 2, !alias.scope !120, !noalias !122
  %2049 = getelementptr i16, i16* %2041, i64 8
  %2050 = bitcast i16* %2049 to <8 x i16>*
  store <8 x i16> %2047, <8 x i16>* %2050, align 2, !alias.scope !120, !noalias !122
  %2051 = or i64 %2039, 16
  %2052 = getelementptr i16, i16* %2015, i64 %2051
  %2053 = getelementptr i16, i16* %1988, i64 %2051
  %2054 = bitcast i16* %2053 to <8 x i16>*
  %2055 = load <8 x i16>, <8 x i16>* %2054, align 2, !alias.scope !117
  %2056 = getelementptr i16, i16* %2053, i64 8
  %2057 = bitcast i16* %2056 to <8 x i16>*
  %2058 = load <8 x i16>, <8 x i16>* %2057, align 2, !alias.scope !117
  %2059 = bitcast i16* %2052 to <8 x i16>*
  store <8 x i16> %2055, <8 x i16>* %2059, align 2, !alias.scope !120, !noalias !122
  %2060 = getelementptr i16, i16* %2052, i64 8
  %2061 = bitcast i16* %2060 to <8 x i16>*
  store <8 x i16> %2058, <8 x i16>* %2061, align 2, !alias.scope !120, !noalias !122
  %2062 = or i64 %2039, 32
  %2063 = getelementptr i16, i16* %2015, i64 %2062
  %2064 = getelementptr i16, i16* %1988, i64 %2062
  %2065 = bitcast i16* %2064 to <8 x i16>*
  %2066 = load <8 x i16>, <8 x i16>* %2065, align 2, !alias.scope !117
  %2067 = getelementptr i16, i16* %2064, i64 8
  %2068 = bitcast i16* %2067 to <8 x i16>*
  %2069 = load <8 x i16>, <8 x i16>* %2068, align 2, !alias.scope !117
  %2070 = bitcast i16* %2063 to <8 x i16>*
  store <8 x i16> %2066, <8 x i16>* %2070, align 2, !alias.scope !120, !noalias !122
  %2071 = getelementptr i16, i16* %2063, i64 8
  %2072 = bitcast i16* %2071 to <8 x i16>*
  store <8 x i16> %2069, <8 x i16>* %2072, align 2, !alias.scope !120, !noalias !122
  %2073 = or i64 %2039, 48
  %2074 = getelementptr i16, i16* %2015, i64 %2073
  %2075 = getelementptr i16, i16* %1988, i64 %2073
  %2076 = bitcast i16* %2075 to <8 x i16>*
  %2077 = load <8 x i16>, <8 x i16>* %2076, align 2, !alias.scope !117
  %2078 = getelementptr i16, i16* %2075, i64 8
  %2079 = bitcast i16* %2078 to <8 x i16>*
  %2080 = load <8 x i16>, <8 x i16>* %2079, align 2, !alias.scope !117
  %2081 = bitcast i16* %2074 to <8 x i16>*
  store <8 x i16> %2077, <8 x i16>* %2081, align 2, !alias.scope !120, !noalias !122
  %2082 = getelementptr i16, i16* %2074, i64 8
  %2083 = bitcast i16* %2082 to <8 x i16>*
  store <8 x i16> %2080, <8 x i16>* %2083, align 2, !alias.scope !120, !noalias !122
  %2084 = add i64 %2039, 64
  %2085 = add i64 %2040, -4
  %2086 = icmp eq i64 %2085, 0
  br i1 %2086, label %2087, label %2038, !llvm.loop !123

2087:                                             ; preds = %2038, %2026
  %2088 = phi i64 [ 0, %2026 ], [ %2084, %2038 ]
  %2089 = icmp eq i64 %2034, 0
  br i1 %2089, label %2106, label %2090

2090:                                             ; preds = %2087, %2090
  %2091 = phi i64 [ %2103, %2090 ], [ %2088, %2087 ]
  %2092 = phi i64 [ %2104, %2090 ], [ %2034, %2087 ]
  %2093 = getelementptr i16, i16* %2015, i64 %2091
  %2094 = getelementptr i16, i16* %1988, i64 %2091
  %2095 = bitcast i16* %2094 to <8 x i16>*
  %2096 = load <8 x i16>, <8 x i16>* %2095, align 2, !alias.scope !117
  %2097 = getelementptr i16, i16* %2094, i64 8
  %2098 = bitcast i16* %2097 to <8 x i16>*
  %2099 = load <8 x i16>, <8 x i16>* %2098, align 2, !alias.scope !117
  %2100 = bitcast i16* %2093 to <8 x i16>*
  store <8 x i16> %2096, <8 x i16>* %2100, align 2, !alias.scope !120, !noalias !122
  %2101 = getelementptr i16, i16* %2093, i64 8
  %2102 = bitcast i16* %2101 to <8 x i16>*
  store <8 x i16> %2099, <8 x i16>* %2102, align 2, !alias.scope !120, !noalias !122
  %2103 = add i64 %2091, 16
  %2104 = add i64 %2092, -1
  %2105 = icmp eq i64 %2104, 0
  br i1 %2105, label %2106, label %2090, !llvm.loop !124

2106:                                             ; preds = %2090, %2087
  %2107 = icmp eq i64 %2017, %2027
  br i1 %2107, label %2161, label %2108

2108:                                             ; preds = %2106, %2019, %2014
  %2109 = phi i16* [ %2015, %2019 ], [ %2015, %2014 ], [ %2028, %2106 ]
  %2110 = phi i64 [ %2016, %2019 ], [ %2016, %2014 ], [ %2029, %2106 ]
  %2111 = phi i16* [ %1988, %2019 ], [ %1988, %2014 ], [ %2030, %2106 ]
  %2112 = add i64 %2110, -1
  %2113 = and i64 %2110, 7
  %2114 = icmp eq i64 %2113, 0
  br i1 %2114, label %2126, label %2115

2115:                                             ; preds = %2108, %2115
  %2116 = phi i16* [ %2122, %2115 ], [ %2109, %2108 ]
  %2117 = phi i64 [ %2121, %2115 ], [ %2110, %2108 ]
  %2118 = phi i16* [ %2123, %2115 ], [ %2111, %2108 ]
  %2119 = phi i64 [ %2124, %2115 ], [ %2113, %2108 ]
  %2120 = load i16, i16* %2118, align 2
  store i16 %2120, i16* %2116, align 2, !noalias !52
  %2121 = add i64 %2117, -1
  %2122 = getelementptr inbounds i16, i16* %2116, i64 1
  %2123 = getelementptr inbounds i16, i16* %2118, i64 1
  %2124 = add i64 %2119, -1
  %2125 = icmp eq i64 %2124, 0
  br i1 %2125, label %2126, label %2115, !llvm.loop !125

2126:                                             ; preds = %2115, %2108
  %2127 = phi i16* [ %2109, %2108 ], [ %2122, %2115 ]
  %2128 = phi i64 [ %2110, %2108 ], [ %2121, %2115 ]
  %2129 = phi i16* [ %2111, %2108 ], [ %2123, %2115 ]
  %2130 = icmp ult i64 %2112, 7
  br i1 %2130, label %2161, label %2131

2131:                                             ; preds = %2126, %2131
  %2132 = phi i16* [ %2158, %2131 ], [ %2127, %2126 ]
  %2133 = phi i64 [ %2157, %2131 ], [ %2128, %2126 ]
  %2134 = phi i16* [ %2159, %2131 ], [ %2129, %2126 ]
  %2135 = load i16, i16* %2134, align 2
  store i16 %2135, i16* %2132, align 2, !noalias !52
  %2136 = getelementptr inbounds i16, i16* %2132, i64 1
  %2137 = getelementptr inbounds i16, i16* %2134, i64 1
  %2138 = load i16, i16* %2137, align 2
  store i16 %2138, i16* %2136, align 2, !noalias !52
  %2139 = getelementptr inbounds i16, i16* %2132, i64 2
  %2140 = getelementptr inbounds i16, i16* %2134, i64 2
  %2141 = load i16, i16* %2140, align 2
  store i16 %2141, i16* %2139, align 2, !noalias !52
  %2142 = getelementptr inbounds i16, i16* %2132, i64 3
  %2143 = getelementptr inbounds i16, i16* %2134, i64 3
  %2144 = load i16, i16* %2143, align 2
  store i16 %2144, i16* %2142, align 2, !noalias !52
  %2145 = getelementptr inbounds i16, i16* %2132, i64 4
  %2146 = getelementptr inbounds i16, i16* %2134, i64 4
  %2147 = load i16, i16* %2146, align 2
  store i16 %2147, i16* %2145, align 2, !noalias !52
  %2148 = getelementptr inbounds i16, i16* %2132, i64 5
  %2149 = getelementptr inbounds i16, i16* %2134, i64 5
  %2150 = load i16, i16* %2149, align 2
  store i16 %2150, i16* %2148, align 2, !noalias !52
  %2151 = getelementptr inbounds i16, i16* %2132, i64 6
  %2152 = getelementptr inbounds i16, i16* %2134, i64 6
  %2153 = load i16, i16* %2152, align 2
  store i16 %2153, i16* %2151, align 2, !noalias !52
  %2154 = getelementptr inbounds i16, i16* %2132, i64 7
  %2155 = getelementptr inbounds i16, i16* %2134, i64 7
  %2156 = load i16, i16* %2155, align 2
  store i16 %2156, i16* %2154, align 2, !noalias !52
  %2157 = add i64 %2133, -8
  %2158 = getelementptr inbounds i16, i16* %2132, i64 8
  %2159 = getelementptr inbounds i16, i16* %2134, i64 8
  %2160 = icmp eq i64 %2157, 0
  br i1 %2160, label %2161, label %2131, !llvm.loop !126

2161:                                             ; preds = %2126, %2131, %2106, %1985
  %2162 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %27, i64 0, i32 1
  %2163 = load i64, i64* %1729, align 8, !noalias !52
  store i64 %2163, i64* %2162, align 8, !noalias !52
  call void @_ZN12v8_inspector8String166concatIJcS0_cEEES0_DpT_(%"class.v8_inspector::String16"* nonnull sret %26, i8 signext 34, %"class.v8_inspector::String16"* nonnull %27, i8 signext 34) #15
  %2164 = load i8, i8* %1717, align 1, !noalias !52
  %2165 = icmp slt i8 %2164, 0
  br i1 %2165, label %2166, label %2169

2166:                                             ; preds = %2161
  %2167 = bitcast %"class.v8_inspector::String16"* %18 to i8**
  %2168 = load i8*, i8** %2167, align 8, !noalias !52
  call void @_ZdlPv(i8* %2168) #16
  br label %2169

2169:                                             ; preds = %2161, %2166
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1493, i8* nonnull align 8 %1982, i64 24, i1 false) #15, !noalias !52
  %2170 = bitcast %"class.v8_inspector::String16"* %26 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2171 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2170, i64 0, i32 1, i32 1
  store i8 0, i8* %2171, align 1, !noalias !52
  %2172 = bitcast %"class.v8_inspector::String16"* %26 to i16*
  store i16 0, i16* %2172, align 8, !noalias !52
  %2173 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %26, i64 0, i32 1
  %2174 = load i64, i64* %2173, align 8, !noalias !52
  store i64 %2174, i64* %1729, align 8, !noalias !52
  %2175 = bitcast %"class.v8_inspector::String16"* %27 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2176 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2175, i64 0, i32 1, i32 1
  %2177 = load i8, i8* %2176, align 1, !noalias !52
  %2178 = icmp slt i8 %2177, 0
  br i1 %2178, label %2179, label %2182

2179:                                             ; preds = %2169
  %2180 = bitcast %"class.v8_inspector::String16"* %27 to i8**
  %2181 = load i8*, i8** %2180, align 8, !noalias !52
  call void @_ZdlPv(i8* %2181) #16
  br label %2182

2182:                                             ; preds = %2179, %2169
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1982) #15, !noalias !52
  br label %2183

2183:                                             ; preds = %2182, %1980
  %2184 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1518, align 8, !noalias !52
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1513) #15, !noalias !52
  store %"class.v8_inspector::protocol::Runtime::ObjectPreview"* null, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1518, align 8, !noalias !52
  %2185 = icmp eq %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %2184, null
  br i1 %2185, label %2191, label %2186

2186:                                             ; preds = %2183
  %2187 = bitcast %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %2184 to void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)***
  %2188 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*** %2187, align 8
  %2189 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %2188, i64 2
  %2190 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %2189, align 8
  call void %2190(%"class.v8_inspector::protocol::Runtime::ObjectPreview"* nonnull %2184) #15
  br label %2191

2191:                                             ; preds = %2186, %2183, %1521
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1511) #15, !noalias !52
  %2192 = bitcast %"class.v8_inspector::ValueMirror"* %1508 to void (%"class.v8_inspector::ValueMirror"*)***
  %2193 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %2192, align 8
  %2194 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %2193, i64 1
  %2195 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %2194, align 8
  call void %2195(%"class.v8_inspector::ValueMirror"* nonnull %1508) #15
  br label %2196

2196:                                             ; preds = %1507, %1506, %2191
  %2197 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2198 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2197, i64 0, i32 1, i32 1
  %2199 = load i8, i8* %2198, align 1, !noalias !52
  %2200 = icmp slt i8 %2199, 0
  %2201 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2202 = load i64, i64* %2201, align 8
  %2203 = zext i8 %2199 to i64
  %2204 = select i1 %2200, i64 %2202, i64 %2203
  %2205 = icmp eq i64 %2204, 0
  br i1 %2205, label %2306, label %2206

2206:                                             ; preds = %2196
  %2207 = bitcast %"class.v8_inspector::String16"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2207) #15, !noalias !52
  %2208 = bitcast %"class.v8_inspector::String16"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2208) #15, !noalias !52
  %2209 = bitcast %"class.v8_inspector::String16"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2209) #15, !noalias !52
  %2210 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2210) #15, !noalias !127
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i64 0, i64 0)) #15, !noalias !130
  %2211 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2211) #15, !noalias !131
  %2212 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0
  %2213 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 0
  call void @_ZNSt3__1plItNS_11char_traitsItEENS_9allocatorItEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2212, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2213) #15, !noalias !134
  call void @_ZN12v8_inspector8String16C1EONSt3__112basic_stringItNS1_11char_traitsItEENS1_9allocatorItEEEE(%"class.v8_inspector::String16"* nonnull %30, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #15
  %2214 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2215 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2214, i64 0, i32 1, i32 1
  %2216 = load i8, i8* %2215, align 1, !noalias !131
  %2217 = icmp slt i8 %2216, 0
  br i1 %2217, label %2218, label %2221

2218:                                             ; preds = %2206
  %2219 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %2220 = load i8*, i8** %2219, align 8, !noalias !131
  call void @_ZdlPv(i8* %2220) #16
  br label %2221

2221:                                             ; preds = %2218, %2206
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2211) #15, !noalias !131
  %2222 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2223 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2222, i64 0, i32 1, i32 1
  %2224 = load i8, i8* %2223, align 1, !noalias !127
  %2225 = icmp slt i8 %2224, 0
  br i1 %2225, label %2226, label %2229

2226:                                             ; preds = %2221
  %2227 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %2228 = load i8*, i8** %2227, align 8, !noalias !127
  call void @_ZdlPv(i8* %2228) #16
  br label %2229

2229:                                             ; preds = %2226, %2221
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2210) #15, !noalias !127
  %2230 = bitcast %"class.v8_inspector::String16"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2230) #15, !noalias !52
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i64 0, i64 0)) #15
  %2231 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2231) #15, !noalias !135
  %2232 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %30, i64 0, i32 0
  %2233 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %31, i64 0, i32 0
  call void @_ZNSt3__1plItNS_11char_traitsItEENS_9allocatorItEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2232, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2233) #15, !noalias !138
  call void @_ZN12v8_inspector8String16C1EONSt3__112basic_stringItNS1_11char_traitsItEENS1_9allocatorItEEEE(%"class.v8_inspector::String16"* nonnull %29, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #15
  %2234 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2235 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2234, i64 0, i32 1, i32 1
  %2236 = load i8, i8* %2235, align 1, !noalias !135
  %2237 = icmp slt i8 %2236, 0
  br i1 %2237, label %2238, label %2241

2238:                                             ; preds = %2229
  %2239 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %2240 = load i8*, i8** %2239, align 8, !noalias !135
  call void @_ZdlPv(i8* %2240) #16
  br label %2241

2241:                                             ; preds = %2238, %2229
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2231) #15, !noalias !135
  %2242 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2242) #15, !noalias !139
  %2243 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %29, i64 0, i32 0
  %2244 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %18, i64 0, i32 0
  call void @_ZNSt3__1plItNS_11char_traitsItEENS_9allocatorItEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2243, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2244) #15, !noalias !142
  call void @_ZN12v8_inspector8String16C1EONSt3__112basic_stringItNS1_11char_traitsItEENS1_9allocatorItEEEE(%"class.v8_inspector::String16"* nonnull %28, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #15
  %2245 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2246 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2245, i64 0, i32 1, i32 1
  %2247 = load i8, i8* %2246, align 1, !noalias !139
  %2248 = icmp slt i8 %2247, 0
  br i1 %2248, label %2249, label %2252

2249:                                             ; preds = %2241
  %2250 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %2251 = load i8*, i8** %2250, align 8, !noalias !139
  call void @_ZdlPv(i8* %2251) #16
  br label %2252

2252:                                             ; preds = %2249, %2241
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2242) #15, !noalias !139
  %2253 = bitcast %"class.v8_inspector::String16"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2253) #15, !noalias !52
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i64 0, i64 0)) #15
  %2254 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2254) #15, !noalias !143
  %2255 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %28, i64 0, i32 0
  %2256 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %32, i64 0, i32 0
  call void @_ZNSt3__1plItNS_11char_traitsItEENS_9allocatorItEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2255, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2256) #15, !noalias !146
  call void @_ZN12v8_inspector8String16C1EONSt3__112basic_stringItNS1_11char_traitsItEENS1_9allocatorItEEEE(%"class.v8_inspector::String16"* nonnull %77, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #15
  %2257 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2258 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2257, i64 0, i32 1, i32 1
  %2259 = load i8, i8* %2258, align 1, !noalias !143
  %2260 = icmp slt i8 %2259, 0
  br i1 %2260, label %2261, label %2264

2261:                                             ; preds = %2252
  %2262 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %2263 = load i8*, i8** %2262, align 8, !noalias !143
  call void @_ZdlPv(i8* %2263) #16
  br label %2264

2264:                                             ; preds = %2261, %2252
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2254) #15, !noalias !143
  %2265 = bitcast %"class.v8_inspector::String16"* %32 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2266 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2265, i64 0, i32 1, i32 1
  %2267 = load i8, i8* %2266, align 1, !noalias !52
  %2268 = icmp slt i8 %2267, 0
  br i1 %2268, label %2269, label %2272

2269:                                             ; preds = %2264
  %2270 = bitcast %"class.v8_inspector::String16"* %32 to i8**
  %2271 = load i8*, i8** %2270, align 8, !noalias !52
  call void @_ZdlPv(i8* %2271) #16
  br label %2272

2272:                                             ; preds = %2269, %2264
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2253) #15, !noalias !52
  %2273 = bitcast %"class.v8_inspector::String16"* %28 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2274 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2273, i64 0, i32 1, i32 1
  %2275 = load i8, i8* %2274, align 1, !noalias !52
  %2276 = icmp slt i8 %2275, 0
  br i1 %2276, label %2277, label %2280

2277:                                             ; preds = %2272
  %2278 = bitcast %"class.v8_inspector::String16"* %28 to i8**
  %2279 = load i8*, i8** %2278, align 8, !noalias !52
  call void @_ZdlPv(i8* %2279) #16
  br label %2280

2280:                                             ; preds = %2277, %2272
  %2281 = bitcast %"class.v8_inspector::String16"* %29 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2282 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2281, i64 0, i32 1, i32 1
  %2283 = load i8, i8* %2282, align 1, !noalias !52
  %2284 = icmp slt i8 %2283, 0
  br i1 %2284, label %2285, label %2288

2285:                                             ; preds = %2280
  %2286 = bitcast %"class.v8_inspector::String16"* %29 to i8**
  %2287 = load i8*, i8** %2286, align 8, !noalias !52
  call void @_ZdlPv(i8* %2287) #16
  br label %2288

2288:                                             ; preds = %2285, %2280
  %2289 = bitcast %"class.v8_inspector::String16"* %31 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2290 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2289, i64 0, i32 1, i32 1
  %2291 = load i8, i8* %2290, align 1, !noalias !52
  %2292 = icmp slt i8 %2291, 0
  br i1 %2292, label %2293, label %2296

2293:                                             ; preds = %2288
  %2294 = bitcast %"class.v8_inspector::String16"* %31 to i8**
  %2295 = load i8*, i8** %2294, align 8, !noalias !52
  call void @_ZdlPv(i8* %2295) #16
  br label %2296

2296:                                             ; preds = %2293, %2288
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2230) #15, !noalias !52
  %2297 = bitcast %"class.v8_inspector::String16"* %30 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2298 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2297, i64 0, i32 1, i32 1
  %2299 = load i8, i8* %2298, align 1, !noalias !52
  %2300 = icmp slt i8 %2299, 0
  br i1 %2300, label %2301, label %2304

2301:                                             ; preds = %2296
  %2302 = bitcast %"class.v8_inspector::String16"* %30 to i8**
  %2303 = load i8*, i8** %2302, align 8, !noalias !52
  call void @_ZdlPv(i8* %2303) #16
  br label %2304

2304:                                             ; preds = %2301, %2296
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2209) #15, !noalias !52
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2208) #15, !noalias !52
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2207) #15, !noalias !52
  %2305 = bitcast %"class.v8_inspector::String16"* %18 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  br label %2491

2306:                                             ; preds = %2196
  %2307 = bitcast %"class.v8_inspector::String16"* %18 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2308 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2307, i64 0, i32 1, i32 1
  %2309 = load i8, i8* %2308, align 1, !noalias !52
  %2310 = icmp slt i8 %2309, 0
  br i1 %2310, label %2312, label %2311

2311:                                             ; preds = %2306
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %785, i8* nonnull align 8 %1493, i64 24, i1 false) #15
  br label %2487

2312:                                             ; preds = %2306
  %2313 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2314 = load i16*, i16** %2313, align 8, !noalias !52
  %2315 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2316 = load i64, i64* %2315, align 8, !noalias !52
  %2317 = icmp ult i64 %2316, 11
  br i1 %2317, label %2318, label %2323

2318:                                             ; preds = %2312
  %2319 = bitcast %"class.v8_inspector::String16"* %77 to i16*
  %2320 = trunc i64 %2316 to i8
  %2321 = bitcast %"class.v8_inspector::String16"* %77 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2322 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2321, i64 0, i32 1, i32 1
  store i8 %2320, i8* %2322, align 1, !alias.scope !52
  br label %2340

2323:                                             ; preds = %2312
  %2324 = icmp ugt i64 %2316, 9223372036854775791
  br i1 %2324, label %2325, label %2327

2325:                                             ; preds = %2323
  %2326 = bitcast %"class.v8_inspector::String16"* %77 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %2326) #14
  unreachable

2327:                                             ; preds = %2323
  %2328 = add nuw nsw i64 %2316, 8
  %2329 = and i64 %2328, -8
  %2330 = icmp slt i64 %2329, 0
  br i1 %2330, label %2331, label %2332

2331:                                             ; preds = %2327
  call void @abort() #14
  unreachable

2332:                                             ; preds = %2327
  %2333 = shl i64 %2329, 1
  %2334 = call i8* @_Znwm(i64 %2333) #16
  %2335 = bitcast i8* %2334 to i16*
  %2336 = bitcast %"class.v8_inspector::String16"* %77 to i8**
  store i8* %2334, i8** %2336, align 8, !alias.scope !52
  %2337 = or i64 %2329, -9223372036854775808
  %2338 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %2337, i64* %2338, align 8, !alias.scope !52
  %2339 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2316, i64* %2339, align 8, !alias.scope !52
  br label %2340

2340:                                             ; preds = %2332, %2318
  %2341 = phi i16* [ %2319, %2318 ], [ %2335, %2332 ]
  %2342 = add nuw nsw i64 %2316, 1
  %2343 = add i64 %2316, 1
  %2344 = icmp ult i64 %2343, 16
  br i1 %2344, label %2434, label %2345

2345:                                             ; preds = %2340
  %2346 = add i64 %2316, 1
  %2347 = getelementptr i16, i16* %2341, i64 %2346
  %2348 = getelementptr i16, i16* %2314, i64 %2346
  %2349 = icmp ult i16* %2341, %2348
  %2350 = icmp ult i16* %2314, %2347
  %2351 = and i1 %2349, %2350
  br i1 %2351, label %2434, label %2352

2352:                                             ; preds = %2345
  %2353 = and i64 %2343, -16
  %2354 = getelementptr i16, i16* %2341, i64 %2353
  %2355 = sub i64 %2342, %2353
  %2356 = getelementptr i16, i16* %2314, i64 %2353
  %2357 = add i64 %2353, -16
  %2358 = lshr exact i64 %2357, 4
  %2359 = add nuw nsw i64 %2358, 1
  %2360 = and i64 %2359, 3
  %2361 = icmp ult i64 %2357, 48
  br i1 %2361, label %2413, label %2362

2362:                                             ; preds = %2352
  %2363 = sub nsw i64 %2359, %2360
  br label %2364

2364:                                             ; preds = %2364, %2362
  %2365 = phi i64 [ 0, %2362 ], [ %2410, %2364 ]
  %2366 = phi i64 [ %2363, %2362 ], [ %2411, %2364 ]
  %2367 = getelementptr i16, i16* %2341, i64 %2365
  %2368 = getelementptr i16, i16* %2314, i64 %2365
  %2369 = bitcast i16* %2368 to <8 x i16>*
  %2370 = load <8 x i16>, <8 x i16>* %2369, align 2, !alias.scope !147
  %2371 = getelementptr i16, i16* %2368, i64 8
  %2372 = bitcast i16* %2371 to <8 x i16>*
  %2373 = load <8 x i16>, <8 x i16>* %2372, align 2, !alias.scope !147
  %2374 = bitcast i16* %2367 to <8 x i16>*
  store <8 x i16> %2370, <8 x i16>* %2374, align 2, !alias.scope !150, !noalias !147
  %2375 = getelementptr i16, i16* %2367, i64 8
  %2376 = bitcast i16* %2375 to <8 x i16>*
  store <8 x i16> %2373, <8 x i16>* %2376, align 2, !alias.scope !150, !noalias !147
  %2377 = or i64 %2365, 16
  %2378 = getelementptr i16, i16* %2341, i64 %2377
  %2379 = getelementptr i16, i16* %2314, i64 %2377
  %2380 = bitcast i16* %2379 to <8 x i16>*
  %2381 = load <8 x i16>, <8 x i16>* %2380, align 2, !alias.scope !147
  %2382 = getelementptr i16, i16* %2379, i64 8
  %2383 = bitcast i16* %2382 to <8 x i16>*
  %2384 = load <8 x i16>, <8 x i16>* %2383, align 2, !alias.scope !147
  %2385 = bitcast i16* %2378 to <8 x i16>*
  store <8 x i16> %2381, <8 x i16>* %2385, align 2, !alias.scope !150, !noalias !147
  %2386 = getelementptr i16, i16* %2378, i64 8
  %2387 = bitcast i16* %2386 to <8 x i16>*
  store <8 x i16> %2384, <8 x i16>* %2387, align 2, !alias.scope !150, !noalias !147
  %2388 = or i64 %2365, 32
  %2389 = getelementptr i16, i16* %2341, i64 %2388
  %2390 = getelementptr i16, i16* %2314, i64 %2388
  %2391 = bitcast i16* %2390 to <8 x i16>*
  %2392 = load <8 x i16>, <8 x i16>* %2391, align 2, !alias.scope !147
  %2393 = getelementptr i16, i16* %2390, i64 8
  %2394 = bitcast i16* %2393 to <8 x i16>*
  %2395 = load <8 x i16>, <8 x i16>* %2394, align 2, !alias.scope !147
  %2396 = bitcast i16* %2389 to <8 x i16>*
  store <8 x i16> %2392, <8 x i16>* %2396, align 2, !alias.scope !150, !noalias !147
  %2397 = getelementptr i16, i16* %2389, i64 8
  %2398 = bitcast i16* %2397 to <8 x i16>*
  store <8 x i16> %2395, <8 x i16>* %2398, align 2, !alias.scope !150, !noalias !147
  %2399 = or i64 %2365, 48
  %2400 = getelementptr i16, i16* %2341, i64 %2399
  %2401 = getelementptr i16, i16* %2314, i64 %2399
  %2402 = bitcast i16* %2401 to <8 x i16>*
  %2403 = load <8 x i16>, <8 x i16>* %2402, align 2, !alias.scope !147
  %2404 = getelementptr i16, i16* %2401, i64 8
  %2405 = bitcast i16* %2404 to <8 x i16>*
  %2406 = load <8 x i16>, <8 x i16>* %2405, align 2, !alias.scope !147
  %2407 = bitcast i16* %2400 to <8 x i16>*
  store <8 x i16> %2403, <8 x i16>* %2407, align 2, !alias.scope !150, !noalias !147
  %2408 = getelementptr i16, i16* %2400, i64 8
  %2409 = bitcast i16* %2408 to <8 x i16>*
  store <8 x i16> %2406, <8 x i16>* %2409, align 2, !alias.scope !150, !noalias !147
  %2410 = add i64 %2365, 64
  %2411 = add i64 %2366, -4
  %2412 = icmp eq i64 %2411, 0
  br i1 %2412, label %2413, label %2364, !llvm.loop !152

2413:                                             ; preds = %2364, %2352
  %2414 = phi i64 [ 0, %2352 ], [ %2410, %2364 ]
  %2415 = icmp eq i64 %2360, 0
  br i1 %2415, label %2432, label %2416

2416:                                             ; preds = %2413, %2416
  %2417 = phi i64 [ %2429, %2416 ], [ %2414, %2413 ]
  %2418 = phi i64 [ %2430, %2416 ], [ %2360, %2413 ]
  %2419 = getelementptr i16, i16* %2341, i64 %2417
  %2420 = getelementptr i16, i16* %2314, i64 %2417
  %2421 = bitcast i16* %2420 to <8 x i16>*
  %2422 = load <8 x i16>, <8 x i16>* %2421, align 2, !alias.scope !147
  %2423 = getelementptr i16, i16* %2420, i64 8
  %2424 = bitcast i16* %2423 to <8 x i16>*
  %2425 = load <8 x i16>, <8 x i16>* %2424, align 2, !alias.scope !147
  %2426 = bitcast i16* %2419 to <8 x i16>*
  store <8 x i16> %2422, <8 x i16>* %2426, align 2, !alias.scope !150, !noalias !147
  %2427 = getelementptr i16, i16* %2419, i64 8
  %2428 = bitcast i16* %2427 to <8 x i16>*
  store <8 x i16> %2425, <8 x i16>* %2428, align 2, !alias.scope !150, !noalias !147
  %2429 = add i64 %2417, 16
  %2430 = add i64 %2418, -1
  %2431 = icmp eq i64 %2430, 0
  br i1 %2431, label %2432, label %2416, !llvm.loop !153

2432:                                             ; preds = %2416, %2413
  %2433 = icmp eq i64 %2343, %2353
  br i1 %2433, label %2487, label %2434

2434:                                             ; preds = %2432, %2345, %2340
  %2435 = phi i16* [ %2341, %2345 ], [ %2341, %2340 ], [ %2354, %2432 ]
  %2436 = phi i64 [ %2342, %2345 ], [ %2342, %2340 ], [ %2355, %2432 ]
  %2437 = phi i16* [ %2314, %2345 ], [ %2314, %2340 ], [ %2356, %2432 ]
  %2438 = add i64 %2436, -1
  %2439 = and i64 %2436, 7
  %2440 = icmp eq i64 %2439, 0
  br i1 %2440, label %2452, label %2441

2441:                                             ; preds = %2434, %2441
  %2442 = phi i16* [ %2448, %2441 ], [ %2435, %2434 ]
  %2443 = phi i64 [ %2447, %2441 ], [ %2436, %2434 ]
  %2444 = phi i16* [ %2449, %2441 ], [ %2437, %2434 ]
  %2445 = phi i64 [ %2450, %2441 ], [ %2439, %2434 ]
  %2446 = load i16, i16* %2444, align 2
  store i16 %2446, i16* %2442, align 2
  %2447 = add i64 %2443, -1
  %2448 = getelementptr inbounds i16, i16* %2442, i64 1
  %2449 = getelementptr inbounds i16, i16* %2444, i64 1
  %2450 = add i64 %2445, -1
  %2451 = icmp eq i64 %2450, 0
  br i1 %2451, label %2452, label %2441, !llvm.loop !154

2452:                                             ; preds = %2441, %2434
  %2453 = phi i16* [ %2435, %2434 ], [ %2448, %2441 ]
  %2454 = phi i64 [ %2436, %2434 ], [ %2447, %2441 ]
  %2455 = phi i16* [ %2437, %2434 ], [ %2449, %2441 ]
  %2456 = icmp ult i64 %2438, 7
  br i1 %2456, label %2487, label %2457

2457:                                             ; preds = %2452, %2457
  %2458 = phi i16* [ %2484, %2457 ], [ %2453, %2452 ]
  %2459 = phi i64 [ %2483, %2457 ], [ %2454, %2452 ]
  %2460 = phi i16* [ %2485, %2457 ], [ %2455, %2452 ]
  %2461 = load i16, i16* %2460, align 2
  store i16 %2461, i16* %2458, align 2
  %2462 = getelementptr inbounds i16, i16* %2458, i64 1
  %2463 = getelementptr inbounds i16, i16* %2460, i64 1
  %2464 = load i16, i16* %2463, align 2
  store i16 %2464, i16* %2462, align 2
  %2465 = getelementptr inbounds i16, i16* %2458, i64 2
  %2466 = getelementptr inbounds i16, i16* %2460, i64 2
  %2467 = load i16, i16* %2466, align 2
  store i16 %2467, i16* %2465, align 2
  %2468 = getelementptr inbounds i16, i16* %2458, i64 3
  %2469 = getelementptr inbounds i16, i16* %2460, i64 3
  %2470 = load i16, i16* %2469, align 2
  store i16 %2470, i16* %2468, align 2
  %2471 = getelementptr inbounds i16, i16* %2458, i64 4
  %2472 = getelementptr inbounds i16, i16* %2460, i64 4
  %2473 = load i16, i16* %2472, align 2
  store i16 %2473, i16* %2471, align 2
  %2474 = getelementptr inbounds i16, i16* %2458, i64 5
  %2475 = getelementptr inbounds i16, i16* %2460, i64 5
  %2476 = load i16, i16* %2475, align 2
  store i16 %2476, i16* %2474, align 2
  %2477 = getelementptr inbounds i16, i16* %2458, i64 6
  %2478 = getelementptr inbounds i16, i16* %2460, i64 6
  %2479 = load i16, i16* %2478, align 2
  store i16 %2479, i16* %2477, align 2
  %2480 = getelementptr inbounds i16, i16* %2458, i64 7
  %2481 = getelementptr inbounds i16, i16* %2460, i64 7
  %2482 = load i16, i16* %2481, align 2
  store i16 %2482, i16* %2480, align 2
  %2483 = add i64 %2459, -8
  %2484 = getelementptr inbounds i16, i16* %2458, i64 8
  %2485 = getelementptr inbounds i16, i16* %2460, i64 8
  %2486 = icmp eq i64 %2483, 0
  br i1 %2486, label %2487, label %2457, !llvm.loop !155

2487:                                             ; preds = %2452, %2457, %2432, %2311
  %2488 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %77, i64 0, i32 1
  %2489 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %18, i64 0, i32 1
  %2490 = load i64, i64* %2489, align 8, !noalias !52
  store i64 %2490, i64* %2488, align 8, !alias.scope !52
  br label %2491

2491:                                             ; preds = %2487, %2304
  %2492 = phi %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* [ %2307, %2487 ], [ %2305, %2304 ]
  %2493 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2492, i64 0, i32 1, i32 1
  %2494 = load i8, i8* %2493, align 1, !noalias !52
  %2495 = icmp slt i8 %2494, 0
  br i1 %2495, label %2496, label %2499

2496:                                             ; preds = %2491
  %2497 = bitcast %"class.v8_inspector::String16"* %18 to i8**
  %2498 = load i8*, i8** %2497, align 8, !noalias !52
  call void @_ZdlPv(i8* %2498) #16
  br label %2499

2499:                                             ; preds = %2496, %2491
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1493) #15, !noalias !52
  %2500 = load i8, i8* %2198, align 1, !noalias !52
  %2501 = icmp slt i8 %2500, 0
  br i1 %2501, label %2502, label %2505

2502:                                             ; preds = %2499
  %2503 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %2504 = load i8*, i8** %2503, align 8, !noalias !52
  call void @_ZdlPv(i8* %2504) #16
  br label %2505

2505:                                             ; preds = %2499, %2502
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %789) #15, !noalias !52
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %786)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %787)
  %2506 = call i8* @_Znwm(i64 88) #16
  %2507 = bitcast i8* %2506 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %2508 = bitcast %"class.v8_inspector::String16"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2508) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %2507, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %36, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %77) #15
  %2509 = bitcast %"class.v8_inspector::String16"* %36 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2510 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2509, i64 0, i32 1, i32 1
  %2511 = load i8, i8* %2510, align 1
  %2512 = icmp slt i8 %2511, 0
  br i1 %2512, label %2513, label %2516

2513:                                             ; preds = %2505
  %2514 = bitcast %"class.v8_inspector::String16"* %36 to i8**
  %2515 = load i8*, i8** %2514, align 8
  call void @_ZdlPv(i8* %2515) #16
  br label %2516

2516:                                             ; preds = %2513, %2505
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2508) #15
  %2517 = ptrtoint i8* %2506 to i64
  %2518 = bitcast %"class.v8_inspector::String16"* %77 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2519 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2518, i64 0, i32 1, i32 1
  %2520 = load i8, i8* %2519, align 1
  %2521 = icmp slt i8 %2520, 0
  br i1 %2521, label %2522, label %2525

2522:                                             ; preds = %2516
  %2523 = bitcast %"class.v8_inspector::String16"* %77 to i8**
  %2524 = load i8*, i8** %2523, align 8
  call void @_ZdlPv(i8* %2524) #16
  br label %2525

2525:                                             ; preds = %2516, %2522
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %785) #15
  br label %2819

2526:                                             ; preds = %780
  %2527 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %1) #15
  %2528 = icmp eq i32 %742, 2
  %2529 = and i1 %2528, %2527
  br i1 %2529, label %2530, label %2569

2530:                                             ; preds = %2526
  %2531 = bitcast %"class.v8_inspector::String16"* %78 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2531) #15
  %2532 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15, !noalias !156
  %2533 = bitcast %"class.v8_inspector::String16"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2533) #15, !noalias !156
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %35, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)) #15, !noalias !156
  %2534 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %2532, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %35) #15, !noalias !156
  %2535 = bitcast %"class.v8::String"* %2534 to %"class.v8::Name"*
  %2536 = call %"class.v8::Value"* @_ZN2v86Object20GetRealNamedPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"* %728, %"class.v8::Context"* %0, %"class.v8::Name"* %2535) #15, !noalias !156
  %2537 = icmp eq %"class.v8::Value"* %2536, null
  %2538 = bitcast %"class.v8_inspector::String16"* %35 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2539 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2538, i64 0, i32 1, i32 1
  %2540 = load i8, i8* %2539, align 1, !noalias !156
  %2541 = icmp slt i8 %2540, 0
  br i1 %2541, label %2542, label %2545

2542:                                             ; preds = %2530
  %2543 = bitcast %"class.v8_inspector::String16"* %35 to i8**
  %2544 = load i8*, i8** %2543, align 8, !noalias !156
  call void @_ZdlPv(i8* %2544) #16
  br label %2545

2545:                                             ; preds = %2542, %2530
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2533) #15, !noalias !156
  br i1 %2537, label %2546, label %2547

2546:                                             ; preds = %2545
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2531, i8 0, i64 32, i1 false) #15, !alias.scope !156
  br label %2548

2547:                                             ; preds = %2545
  call void @_ZN12v8_inspector29toProtocolStringWithTypeCheckEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8_inspector::String16"* nonnull sret %78, %"class.v8::Isolate"* %2532, %"class.v8::Value"* nonnull %2536) #15
  br label %2548

2548:                                             ; preds = %2546, %2547
  %2549 = call i8* @_Znwm(i64 88) #16
  %2550 = bitcast i8* %2549 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %2551 = bitcast %"class.v8_inspector::String16"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2551) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %34, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0)) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %2550, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %34, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %78) #15
  %2552 = bitcast %"class.v8_inspector::String16"* %34 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2553 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2552, i64 0, i32 1, i32 1
  %2554 = load i8, i8* %2553, align 1
  %2555 = icmp slt i8 %2554, 0
  br i1 %2555, label %2556, label %2559

2556:                                             ; preds = %2548
  %2557 = bitcast %"class.v8_inspector::String16"* %34 to i8**
  %2558 = load i8*, i8** %2557, align 8
  call void @_ZdlPv(i8* %2558) #16
  br label %2559

2559:                                             ; preds = %2556, %2548
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2551) #15
  %2560 = ptrtoint i8* %2549 to i64
  %2561 = bitcast %"class.v8_inspector::String16"* %78 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2562 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2561, i64 0, i32 1, i32 1
  %2563 = load i8, i8* %2562, align 1
  %2564 = icmp slt i8 %2563, 0
  br i1 %2564, label %2565, label %2568

2565:                                             ; preds = %2559
  %2566 = bitcast %"class.v8_inspector::String16"* %78 to i8**
  %2567 = load i8*, i8** %2566, align 8
  call void @_ZdlPv(i8* %2567) #16
  br label %2568

2568:                                             ; preds = %2559, %2565
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2531) #15
  br label %2819

2569:                                             ; preds = %737, %2526
  %2570 = bitcast i64* %79 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2570) #15
  store i64 0, i64* %79, align 8
  %2571 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %1) #15
  br i1 %2571, label %2574, label %2572

2572:                                             ; preds = %2569
  %2573 = call fastcc zeroext i1 @_ZN12v8_inspector12_GLOBAL__N_111isArrayLikeEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEEPm(%"class.v8::Context"* %0, %"class.v8::Value"* %1, i64* nonnull %79)
  br i1 %2573, label %2574, label %2605

2574:                                             ; preds = %2572, %2569
  %2575 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %1) #15
  br i1 %2575, label %2576, label %2580

2576:                                             ; preds = %2574
  %2577 = bitcast %"class.v8::Value"* %1 to %"class.v8::Array"*
  %2578 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2577) #15
  %2579 = zext i32 %2578 to i64
  br label %2582

2580:                                             ; preds = %2574
  %2581 = load i64, i64* %79, align 8
  br label %2582

2582:                                             ; preds = %2580, %2576
  %2583 = phi i64 [ %2579, %2576 ], [ %2581, %2580 ]
  store i64 %2583, i64* %79, align 8
  %2584 = bitcast %"class.v8_inspector::String16"* %80 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2584) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_124descriptionForCollectionEPN2v87IsolateENS1_5LocalINS1_6ObjectEEEm(%"class.v8_inspector::String16"* noalias nonnull %80, %"class.v8::Isolate"* %122, %"class.v8::Object"* %728, i64 %2583)
  %2585 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum5ArrayE, align 8
  %2586 = call i8* @_Znwm(i64 88) #16
  %2587 = bitcast i8* %2586 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %2588 = bitcast %"class.v8_inspector::String16"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2588) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %33, i8* %2585) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %2587, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %33, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %80) #15
  %2589 = bitcast %"class.v8_inspector::String16"* %33 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2590 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2589, i64 0, i32 1, i32 1
  %2591 = load i8, i8* %2590, align 1
  %2592 = icmp slt i8 %2591, 0
  br i1 %2592, label %2593, label %2596

2593:                                             ; preds = %2582
  %2594 = bitcast %"class.v8_inspector::String16"* %33 to i8**
  %2595 = load i8*, i8** %2594, align 8
  call void @_ZdlPv(i8* %2595) #16
  br label %2596

2596:                                             ; preds = %2593, %2582
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2588) #15
  %2597 = ptrtoint i8* %2586 to i64
  %2598 = bitcast %"class.v8_inspector::String16"* %80 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2599 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2598, i64 0, i32 1, i32 1
  %2600 = load i8, i8* %2599, align 1
  %2601 = icmp slt i8 %2600, 0
  br i1 %2601, label %2602, label %2814

2602:                                             ; preds = %2596
  %2603 = bitcast %"class.v8_inspector::String16"* %80 to i8**
  %2604 = load i8*, i8** %2603, align 8
  call void @_ZdlPv(i8* %2604) #16
  br label %2814

2605:                                             ; preds = %2572
  %2606 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %1) #15
  br i1 %2606, label %2607, label %2817

2607:                                             ; preds = %2605
  %2608 = bitcast %"class.v8_inspector::String16"* %81 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2608) #15
  %2609 = tail call %"class.v8::String"* @_ZN2v86Object18GetConstructorNameEv(%"class.v8::Object"* %728) #15, !noalias !159
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %81, %"class.v8::Isolate"* %122, %"class.v8::String"* %2609) #15
  %2610 = call i8* @_Znwm(i64 88) #16
  %2611 = bitcast i8* %2610 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_112ObjectMirrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2611, align 8
  %2612 = getelementptr inbounds i8, i8* %2610, i64 8
  %2613 = bitcast i8* %2612 to %"class.v8::Value"**
  store %"class.v8::Value"* %1, %"class.v8::Value"** %2613, align 8
  %2614 = getelementptr inbounds i8, i8* %2610, i64 16
  %2615 = bitcast %"class.v8_inspector::String16"* %81 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %2616 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %2615, i64 0, i32 1, i32 1
  %2617 = load i8, i8* %2616, align 1
  %2618 = icmp slt i8 %2617, 0
  br i1 %2618, label %2620, label %2619

2619:                                             ; preds = %2607
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2614, i8* nonnull align 8 %2608, i64 24, i1 false) #15
  br label %2801

2620:                                             ; preds = %2607
  %2621 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2622 = load i16*, i16** %2621, align 8
  %2623 = bitcast i16* %2622 to i8*
  %2624 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2625 = load i64, i64* %2624, align 8
  %2626 = icmp ult i64 %2625, 11
  br i1 %2626, label %2627, label %2630

2627:                                             ; preds = %2620
  %2628 = trunc i64 %2625 to i8
  %2629 = getelementptr inbounds i8, i8* %2610, i64 39
  store i8 %2628, i8* %2629, align 1
  br label %2648

2630:                                             ; preds = %2620
  %2631 = icmp ugt i64 %2625, 9223372036854775791
  br i1 %2631, label %2632, label %2634

2632:                                             ; preds = %2630
  %2633 = bitcast i8* %2614 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %2633) #14
  unreachable

2634:                                             ; preds = %2630
  %2635 = add nuw nsw i64 %2625, 8
  %2636 = and i64 %2635, -8
  %2637 = icmp slt i64 %2636, 0
  br i1 %2637, label %2638, label %2639

2638:                                             ; preds = %2634
  call void @abort() #14
  unreachable

2639:                                             ; preds = %2634
  %2640 = shl i64 %2636, 1
  %2641 = call i8* @_Znwm(i64 %2640) #16
  %2642 = bitcast i8* %2614 to i8**
  store i8* %2641, i8** %2642, align 8
  %2643 = or i64 %2636, -9223372036854775808
  %2644 = getelementptr inbounds i8, i8* %2610, i64 32
  %2645 = bitcast i8* %2644 to i64*
  store i64 %2643, i64* %2645, align 8
  %2646 = getelementptr inbounds i8, i8* %2610, i64 24
  %2647 = bitcast i8* %2646 to i64*
  store i64 %2625, i64* %2647, align 8
  br label %2648

2648:                                             ; preds = %2639, %2627
  %2649 = phi i8* [ %2614, %2627 ], [ %2641, %2639 ]
  %2650 = bitcast i8* %2649 to i16*
  %2651 = add nuw nsw i64 %2625, 1
  %2652 = add i64 %2625, 1
  %2653 = icmp ult i64 %2652, 16
  br i1 %2653, label %2746, label %2654

2654:                                             ; preds = %2648
  %2655 = shl i64 %2625, 1
  %2656 = add i64 %2655, 2
  %2657 = getelementptr i8, i8* %2649, i64 %2656
  %2658 = add i64 %2625, 1
  %2659 = getelementptr i16, i16* %2622, i64 %2658
  %2660 = bitcast i16* %2659 to i8*
  %2661 = icmp ult i8* %2649, %2660
  %2662 = icmp ugt i8* %2657, %2623
  %2663 = and i1 %2661, %2662
  br i1 %2663, label %2746, label %2664

2664:                                             ; preds = %2654
  %2665 = and i64 %2652, -16
  %2666 = getelementptr i16, i16* %2650, i64 %2665
  %2667 = sub i64 %2651, %2665
  %2668 = getelementptr i16, i16* %2622, i64 %2665
  %2669 = add i64 %2665, -16
  %2670 = lshr exact i64 %2669, 4
  %2671 = add nuw nsw i64 %2670, 1
  %2672 = and i64 %2671, 3
  %2673 = icmp ult i64 %2669, 48
  br i1 %2673, label %2725, label %2674

2674:                                             ; preds = %2664
  %2675 = sub nsw i64 %2671, %2672
  br label %2676

2676:                                             ; preds = %2676, %2674
  %2677 = phi i64 [ 0, %2674 ], [ %2722, %2676 ]
  %2678 = phi i64 [ %2675, %2674 ], [ %2723, %2676 ]
  %2679 = getelementptr i16, i16* %2650, i64 %2677
  %2680 = getelementptr i16, i16* %2622, i64 %2677
  %2681 = bitcast i16* %2680 to <8 x i16>*
  %2682 = load <8 x i16>, <8 x i16>* %2681, align 2, !alias.scope !162
  %2683 = getelementptr i16, i16* %2680, i64 8
  %2684 = bitcast i16* %2683 to <8 x i16>*
  %2685 = load <8 x i16>, <8 x i16>* %2684, align 2, !alias.scope !162
  %2686 = bitcast i16* %2679 to <8 x i16>*
  store <8 x i16> %2682, <8 x i16>* %2686, align 2, !alias.scope !165, !noalias !162
  %2687 = getelementptr i16, i16* %2679, i64 8
  %2688 = bitcast i16* %2687 to <8 x i16>*
  store <8 x i16> %2685, <8 x i16>* %2688, align 2, !alias.scope !165, !noalias !162
  %2689 = or i64 %2677, 16
  %2690 = getelementptr i16, i16* %2650, i64 %2689
  %2691 = getelementptr i16, i16* %2622, i64 %2689
  %2692 = bitcast i16* %2691 to <8 x i16>*
  %2693 = load <8 x i16>, <8 x i16>* %2692, align 2, !alias.scope !162
  %2694 = getelementptr i16, i16* %2691, i64 8
  %2695 = bitcast i16* %2694 to <8 x i16>*
  %2696 = load <8 x i16>, <8 x i16>* %2695, align 2, !alias.scope !162
  %2697 = bitcast i16* %2690 to <8 x i16>*
  store <8 x i16> %2693, <8 x i16>* %2697, align 2, !alias.scope !165, !noalias !162
  %2698 = getelementptr i16, i16* %2690, i64 8
  %2699 = bitcast i16* %2698 to <8 x i16>*
  store <8 x i16> %2696, <8 x i16>* %2699, align 2, !alias.scope !165, !noalias !162
  %2700 = or i64 %2677, 32
  %2701 = getelementptr i16, i16* %2650, i64 %2700
  %2702 = getelementptr i16, i16* %2622, i64 %2700
  %2703 = bitcast i16* %2702 to <8 x i16>*
  %2704 = load <8 x i16>, <8 x i16>* %2703, align 2, !alias.scope !162
  %2705 = getelementptr i16, i16* %2702, i64 8
  %2706 = bitcast i16* %2705 to <8 x i16>*
  %2707 = load <8 x i16>, <8 x i16>* %2706, align 2, !alias.scope !162
  %2708 = bitcast i16* %2701 to <8 x i16>*
  store <8 x i16> %2704, <8 x i16>* %2708, align 2, !alias.scope !165, !noalias !162
  %2709 = getelementptr i16, i16* %2701, i64 8
  %2710 = bitcast i16* %2709 to <8 x i16>*
  store <8 x i16> %2707, <8 x i16>* %2710, align 2, !alias.scope !165, !noalias !162
  %2711 = or i64 %2677, 48
  %2712 = getelementptr i16, i16* %2650, i64 %2711
  %2713 = getelementptr i16, i16* %2622, i64 %2711
  %2714 = bitcast i16* %2713 to <8 x i16>*
  %2715 = load <8 x i16>, <8 x i16>* %2714, align 2, !alias.scope !162
  %2716 = getelementptr i16, i16* %2713, i64 8
  %2717 = bitcast i16* %2716 to <8 x i16>*
  %2718 = load <8 x i16>, <8 x i16>* %2717, align 2, !alias.scope !162
  %2719 = bitcast i16* %2712 to <8 x i16>*
  store <8 x i16> %2715, <8 x i16>* %2719, align 2, !alias.scope !165, !noalias !162
  %2720 = getelementptr i16, i16* %2712, i64 8
  %2721 = bitcast i16* %2720 to <8 x i16>*
  store <8 x i16> %2718, <8 x i16>* %2721, align 2, !alias.scope !165, !noalias !162
  %2722 = add i64 %2677, 64
  %2723 = add i64 %2678, -4
  %2724 = icmp eq i64 %2723, 0
  br i1 %2724, label %2725, label %2676, !llvm.loop !167

2725:                                             ; preds = %2676, %2664
  %2726 = phi i64 [ 0, %2664 ], [ %2722, %2676 ]
  %2727 = icmp eq i64 %2672, 0
  br i1 %2727, label %2744, label %2728

2728:                                             ; preds = %2725, %2728
  %2729 = phi i64 [ %2741, %2728 ], [ %2726, %2725 ]
  %2730 = phi i64 [ %2742, %2728 ], [ %2672, %2725 ]
  %2731 = getelementptr i16, i16* %2650, i64 %2729
  %2732 = getelementptr i16, i16* %2622, i64 %2729
  %2733 = bitcast i16* %2732 to <8 x i16>*
  %2734 = load <8 x i16>, <8 x i16>* %2733, align 2, !alias.scope !162
  %2735 = getelementptr i16, i16* %2732, i64 8
  %2736 = bitcast i16* %2735 to <8 x i16>*
  %2737 = load <8 x i16>, <8 x i16>* %2736, align 2, !alias.scope !162
  %2738 = bitcast i16* %2731 to <8 x i16>*
  store <8 x i16> %2734, <8 x i16>* %2738, align 2, !alias.scope !165, !noalias !162
  %2739 = getelementptr i16, i16* %2731, i64 8
  %2740 = bitcast i16* %2739 to <8 x i16>*
  store <8 x i16> %2737, <8 x i16>* %2740, align 2, !alias.scope !165, !noalias !162
  %2741 = add i64 %2729, 16
  %2742 = add i64 %2730, -1
  %2743 = icmp eq i64 %2742, 0
  br i1 %2743, label %2744, label %2728, !llvm.loop !168

2744:                                             ; preds = %2728, %2725
  %2745 = icmp eq i64 %2652, %2665
  br i1 %2745, label %2799, label %2746

2746:                                             ; preds = %2744, %2654, %2648
  %2747 = phi i16* [ %2650, %2654 ], [ %2650, %2648 ], [ %2666, %2744 ]
  %2748 = phi i64 [ %2651, %2654 ], [ %2651, %2648 ], [ %2667, %2744 ]
  %2749 = phi i16* [ %2622, %2654 ], [ %2622, %2648 ], [ %2668, %2744 ]
  %2750 = add i64 %2748, -1
  %2751 = and i64 %2748, 7
  %2752 = icmp eq i64 %2751, 0
  br i1 %2752, label %2764, label %2753

2753:                                             ; preds = %2746, %2753
  %2754 = phi i16* [ %2760, %2753 ], [ %2747, %2746 ]
  %2755 = phi i64 [ %2759, %2753 ], [ %2748, %2746 ]
  %2756 = phi i16* [ %2761, %2753 ], [ %2749, %2746 ]
  %2757 = phi i64 [ %2762, %2753 ], [ %2751, %2746 ]
  %2758 = load i16, i16* %2756, align 2
  store i16 %2758, i16* %2754, align 2
  %2759 = add i64 %2755, -1
  %2760 = getelementptr inbounds i16, i16* %2754, i64 1
  %2761 = getelementptr inbounds i16, i16* %2756, i64 1
  %2762 = add i64 %2757, -1
  %2763 = icmp eq i64 %2762, 0
  br i1 %2763, label %2764, label %2753, !llvm.loop !169

2764:                                             ; preds = %2753, %2746
  %2765 = phi i16* [ %2747, %2746 ], [ %2760, %2753 ]
  %2766 = phi i64 [ %2748, %2746 ], [ %2759, %2753 ]
  %2767 = phi i16* [ %2749, %2746 ], [ %2761, %2753 ]
  %2768 = icmp ult i64 %2750, 7
  br i1 %2768, label %2799, label %2769

2769:                                             ; preds = %2764, %2769
  %2770 = phi i16* [ %2796, %2769 ], [ %2765, %2764 ]
  %2771 = phi i64 [ %2795, %2769 ], [ %2766, %2764 ]
  %2772 = phi i16* [ %2797, %2769 ], [ %2767, %2764 ]
  %2773 = load i16, i16* %2772, align 2
  store i16 %2773, i16* %2770, align 2
  %2774 = getelementptr inbounds i16, i16* %2770, i64 1
  %2775 = getelementptr inbounds i16, i16* %2772, i64 1
  %2776 = load i16, i16* %2775, align 2
  store i16 %2776, i16* %2774, align 2
  %2777 = getelementptr inbounds i16, i16* %2770, i64 2
  %2778 = getelementptr inbounds i16, i16* %2772, i64 2
  %2779 = load i16, i16* %2778, align 2
  store i16 %2779, i16* %2777, align 2
  %2780 = getelementptr inbounds i16, i16* %2770, i64 3
  %2781 = getelementptr inbounds i16, i16* %2772, i64 3
  %2782 = load i16, i16* %2781, align 2
  store i16 %2782, i16* %2780, align 2
  %2783 = getelementptr inbounds i16, i16* %2770, i64 4
  %2784 = getelementptr inbounds i16, i16* %2772, i64 4
  %2785 = load i16, i16* %2784, align 2
  store i16 %2785, i16* %2783, align 2
  %2786 = getelementptr inbounds i16, i16* %2770, i64 5
  %2787 = getelementptr inbounds i16, i16* %2772, i64 5
  %2788 = load i16, i16* %2787, align 2
  store i16 %2788, i16* %2786, align 2
  %2789 = getelementptr inbounds i16, i16* %2770, i64 6
  %2790 = getelementptr inbounds i16, i16* %2772, i64 6
  %2791 = load i16, i16* %2790, align 2
  store i16 %2791, i16* %2789, align 2
  %2792 = getelementptr inbounds i16, i16* %2770, i64 7
  %2793 = getelementptr inbounds i16, i16* %2772, i64 7
  %2794 = load i16, i16* %2793, align 2
  store i16 %2794, i16* %2792, align 2
  %2795 = add i64 %2771, -8
  %2796 = getelementptr inbounds i16, i16* %2770, i64 8
  %2797 = getelementptr inbounds i16, i16* %2772, i64 8
  %2798 = icmp eq i64 %2795, 0
  br i1 %2798, label %2799, label %2769, !llvm.loop !170

2799:                                             ; preds = %2764, %2769, %2744
  %2800 = load i8, i8* %2616, align 1
  br label %2801

2801:                                             ; preds = %2799, %2619
  %2802 = phi i8 [ %2800, %2799 ], [ %2617, %2619 ]
  %2803 = getelementptr inbounds i8, i8* %2610, i64 40
  %2804 = bitcast i8* %2803 to i64*
  %2805 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %81, i64 0, i32 1
  %2806 = load i64, i64* %2805, align 8
  store i64 %2806, i64* %2804, align 8
  %2807 = getelementptr inbounds i8, i8* %2610, i64 48
  store i8 0, i8* %2807, align 8
  %2808 = getelementptr inbounds i8, i8* %2610, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %2808, i8 0, i64 32, i1 false) #15
  %2809 = ptrtoint i8* %2610 to i64
  %2810 = icmp slt i8 %2802, 0
  br i1 %2810, label %2811, label %2814

2811:                                             ; preds = %2801
  %2812 = bitcast %"class.v8_inspector::String16"* %81 to i8**
  %2813 = load i8*, i8** %2812, align 8
  call void @_ZdlPv(i8* %2813) #16
  br label %2814

2814:                                             ; preds = %2811, %2801, %2602, %2596
  %2815 = phi i8* [ %2584, %2596 ], [ %2584, %2602 ], [ %2608, %2801 ], [ %2608, %2811 ]
  %2816 = phi i64 [ %2597, %2596 ], [ %2597, %2602 ], [ %2809, %2801 ], [ %2809, %2811 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2815) #15
  br label %2817

2817:                                             ; preds = %2814, %2605
  %2818 = phi i64 [ 0, %2605 ], [ %2816, %2814 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2570) #15
  br label %2819

2819:                                             ; preds = %2817, %2525, %2568, %779, %726, %698, %668, %640, %612, %584, %556, %529, %500, %473, %446, %418, %390, %364, %337, %298, %294, %270, %234, %208, %137, %143, %151, %115, %109, %103
  %2820 = phi i64 [ %106, %103 ], [ %112, %109 ], [ %120, %115 ], [ %140, %137 ], [ %148, %143 ], [ %156, %151 ], [ %200, %208 ], [ %2560, %2568 ], [ %771, %779 ], [ %718, %726 ], [ %690, %698 ], [ %660, %668 ], [ %632, %640 ], [ %604, %612 ], [ %576, %584 ], [ %548, %556 ], [ %521, %529 ], [ %492, %500 ], [ %465, %473 ], [ %438, %446 ], [ %410, %418 ], [ %382, %390 ], [ %356, %364 ], [ %329, %337 ], [ %303, %298 ], [ %295, %294 ], [ %262, %270 ], [ %237, %234 ], [ %2517, %2525 ], [ %2818, %2817 ]
  %2821 = inttoptr i64 %2820 to %"class.v8_inspector::ValueMirror"*
  ret %"class.v8_inspector::ValueMirror"* %2821
}

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #4

declare i32 @_ZNK2v88Function8ScriptIdEv(%"class.v8::Function"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value8IsSymbolEv(%"class.v8::Value"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector11ValueMirror21getInternalPropertiesEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEEPNSt3__16vectorINS_22InternalPropertyMirrorENS7_9allocatorIS9_EEEE(%"class.v8::Context"*, %"class.v8::Object"*, %"class.std::__1::vector"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::debug::Location", align 8
  %5 = alloca [3 x i8], align 1
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = alloca %"class.v8::TryCatch", align 8
  %8 = alloca %"struct.v8_inspector::InternalPropertyMirror", align 8
  %9 = alloca %"struct.v8_inspector::InternalPropertyMirror", align 8
  %10 = alloca %"struct.v8_inspector::InternalPropertyMirror", align 8
  %11 = alloca %"struct.v8_inspector::InternalPropertyMirror", align 8
  %12 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15
  %13 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #15
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %12, i32 1) #15
  %14 = bitcast %"class.v8::TryCatch"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #15
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %7, %"class.v8::Isolate"* %12) #15
  %15 = bitcast %"class.v8::Object"* %1 to %"class.v8::Value"*
  %16 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %15) #15
  br i1 %16, label %17, label %128

17:                                               ; preds = %3
  %18 = bitcast %"class.v8::Object"* %1 to %"class.v8::Function"*
  %19 = call i32 @_ZNK2v88Function8ScriptIdEv(%"class.v8::Function"* %18) #15
  %20 = call i32 @_ZNK2v88Function19GetScriptLineNumberEv(%"class.v8::Function"* %18) #15
  %21 = call i32 @_ZNK2v88Function21GetScriptColumnNumberEv(%"class.v8::Function"* %18) #15
  %22 = icmp eq i32 %19, 0
  br i1 %22, label %80, label %23

23:                                               ; preds = %17
  %24 = load i32, i32* @_ZN2v88Function19kLineOffsetNotFoundE, align 4
  %25 = icmp eq i32 %24, %20
  %26 = icmp eq i32 %24, %21
  %27 = or i1 %25, %26
  br i1 %27, label %80, label %28

28:                                               ; preds = %23
  %29 = call i8* @_Znwm(i64 32) #16
  %30 = bitcast i8* %29 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_114LocationMirrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds i8, i8* %29, i64 8
  %32 = bitcast i8* %31 to %"class.v8::Object"**
  store %"class.v8::Object"* %1, %"class.v8::Object"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %29, i64 16
  %34 = bitcast i8* %33 to i32*
  store i32 %19, i32* %34, align 8
  %35 = getelementptr inbounds i8, i8* %29, i64 20
  %36 = bitcast i8* %35 to i32*
  store i32 %20, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %29, i64 24
  %38 = bitcast i8* %37 to i32*
  store i32 %21, i32* %38, align 8
  %39 = ptrtoint i8* %29 to i64
  %40 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %40) #15
  %41 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %8, i64 0, i32 0
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %41, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #15
  %42 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %8, i64 0, i32 1
  %43 = bitcast %"class.std::__1::unique_ptr.10"* %42 to i64*
  store i64 %39, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %45 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %46, align 8
  %48 = icmp ult %"struct.v8_inspector::InternalPropertyMirror"* %45, %47
  br i1 %48, label %49, label %61

49:                                               ; preds = %28
  %50 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* nonnull align 8 %40, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 24, i1 false) #15
  %51 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %45, i64 0, i32 0, i32 1
  %52 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %8, i64 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %51, align 8
  %54 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %45, i64 0, i32 1
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %42, i64 0, i32 0, i32 0, i32 0
  %56 = load i64, i64* %43, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %55, align 8
  %57 = bitcast %"class.std::__1::unique_ptr.10"* %54 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %45, i64 1
  %59 = ptrtoint %"struct.v8_inspector::InternalPropertyMirror"* %58 to i64
  %60 = bitcast %"struct.v8_inspector::InternalPropertyMirror"** %44 to i64*
  store i64 %59, i64* %60, align 8
  br label %62

61:                                               ; preds = %28
  call void @_ZNSt3__16vectorIN12v8_inspector22InternalPropertyMirrorENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector"* %2, %"struct.v8_inspector::InternalPropertyMirror"* nonnull dereferenceable(40) %8) #15
  br label %62

62:                                               ; preds = %49, %61
  %63 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %64 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %63, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %63, align 8
  %65 = icmp eq %"class.v8_inspector::ValueMirror"* %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.v8_inspector::ValueMirror"* %64 to void (%"class.v8_inspector::ValueMirror"*)***
  %68 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %68, i64 1
  %70 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %69, align 8
  call void %70(%"class.v8_inspector::ValueMirror"* nonnull %64) #15
  br label %71

71:                                               ; preds = %66, %62
  %72 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %72, i64 0, i32 1, i32 1
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %8 to i8**
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #16
  br label %79

79:                                               ; preds = %71, %76
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %40) #15
  br label %80

80:                                               ; preds = %23, %17, %79
  %81 = call zeroext i1 @_ZNK2v85Value19IsGeneratorFunctionEv(%"class.v8::Value"* %15) #15
  br i1 %81, label %82, label %128

82:                                               ; preds = %80
  %83 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %83) #15
  %84 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %9, i64 0, i32 0
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %84, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0)) #15
  %85 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15
  %86 = ptrtoint %"class.v8::Isolate"* %85 to i64
  %87 = add i64 %86, 184
  %88 = inttoptr i64 %87 to %"class.v8::Value"*
  %89 = call %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector11ValueMirror6createEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8::Context"* %0, %"class.v8::Value"* %88)
  %90 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.v8_inspector::ValueMirror"* %89, %"class.v8_inspector::ValueMirror"** %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %92 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %94 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %93, align 8
  %95 = icmp ult %"struct.v8_inspector::InternalPropertyMirror"* %92, %94
  br i1 %95, label %96, label %110

96:                                               ; preds = %82
  %97 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* nonnull align 8 %83, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 24, i1 false) #15
  %98 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %92, i64 0, i32 0, i32 1
  %99 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %9, i64 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %98, align 8
  %101 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %92, i64 0, i32 1
  %102 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %9, i64 0, i32 1
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = bitcast %"class.std::__1::unique_ptr.10"* %102 to i64*
  %105 = load i64, i64* %104, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %103, align 8
  %106 = bitcast %"class.std::__1::unique_ptr.10"* %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %92, i64 1
  %108 = ptrtoint %"struct.v8_inspector::InternalPropertyMirror"* %107 to i64
  %109 = bitcast %"struct.v8_inspector::InternalPropertyMirror"** %91 to i64*
  store i64 %108, i64* %109, align 8
  br label %111

110:                                              ; preds = %82
  call void @_ZNSt3__16vectorIN12v8_inspector22InternalPropertyMirrorENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector"* %2, %"struct.v8_inspector::InternalPropertyMirror"* nonnull dereferenceable(40) %9) #15
  br label %111

111:                                              ; preds = %96, %110
  %112 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %90, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %90, align 8
  %113 = icmp eq %"class.v8_inspector::ValueMirror"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %111
  %115 = bitcast %"class.v8_inspector::ValueMirror"* %112 to void (%"class.v8_inspector::ValueMirror"*)***
  %116 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %116, i64 1
  %118 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %117, align 8
  call void %118(%"class.v8_inspector::ValueMirror"* nonnull %112) #15
  br label %119

119:                                              ; preds = %114, %111
  %120 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %9 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %120, i64 0, i32 1, i32 1
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %119
  %125 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %9 to i8**
  %126 = load i8*, i8** %125, align 8
  call void @_ZdlPv(i8* %126) #16
  br label %127

127:                                              ; preds = %119, %124
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %83) #15
  br label %128

128:                                              ; preds = %127, %80, %3
  %129 = call zeroext i1 @_ZNK2v85Value17IsGeneratorObjectEv(%"class.v8::Value"* %15) #15
  br i1 %129, label %130, label %232

130:                                              ; preds = %128
  %131 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %131)
  %132 = call %"class.v8::debug::GeneratorObject"* @_ZN2v85debug15GeneratorObject4CastENS_5LocalINS_5ValueEEE(%"class.v8::Value"* %15) #15
  %133 = call zeroext i1 @_ZN2v85debug15GeneratorObject11IsSuspendedEv(%"class.v8::debug::GeneratorObject"* %132) #15
  br i1 %133, label %156, label %134

134:                                              ; preds = %130
  %135 = call %"class.v8::Function"* @_ZN2v85debug15GeneratorObject8FunctionEv(%"class.v8::debug::GeneratorObject"* %132) #15
  %136 = call i32 @_ZNK2v88Function8ScriptIdEv(%"class.v8::Function"* %135) #15
  %137 = call i32 @_ZNK2v88Function19GetScriptLineNumberEv(%"class.v8::Function"* %135) #15
  %138 = call i32 @_ZNK2v88Function21GetScriptColumnNumberEv(%"class.v8::Function"* %135) #15
  %139 = icmp eq i32 %136, 0
  br i1 %139, label %176, label %140

140:                                              ; preds = %134
  %141 = load i32, i32* @_ZN2v88Function19kLineOffsetNotFoundE, align 4
  %142 = icmp eq i32 %141, %137
  %143 = icmp eq i32 %141, %138
  %144 = or i1 %142, %143
  br i1 %144, label %176, label %145

145:                                              ; preds = %140
  %146 = call i8* @_Znwm(i64 32) #16
  %147 = bitcast i8* %146 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_114LocationMirrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %147, align 8
  %148 = getelementptr inbounds i8, i8* %146, i64 8
  %149 = bitcast i8* %148 to %"class.v8::Function"**
  store %"class.v8::Function"* %135, %"class.v8::Function"** %149, align 8
  %150 = getelementptr inbounds i8, i8* %146, i64 16
  %151 = bitcast i8* %150 to i32*
  store i32 %136, i32* %151, align 8
  %152 = getelementptr inbounds i8, i8* %146, i64 20
  %153 = bitcast i8* %152 to i32*
  store i32 %137, i32* %153, align 4
  %154 = getelementptr inbounds i8, i8* %146, i64 24
  %155 = bitcast i8* %154 to i32*
  store i32 %138, i32* %155, align 8
  br label %189

156:                                              ; preds = %130
  %157 = call %"class.v8::debug::Script"* @_ZN2v85debug15GeneratorObject6ScriptEv(%"class.v8::debug::GeneratorObject"* %132) #15
  %158 = icmp eq %"class.v8::debug::Script"* %157, null
  br i1 %158, label %176, label %159

159:                                              ; preds = %156
  %160 = bitcast %"class.v8::debug::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %160) #15
  %161 = call { i64, i8 } @_ZN2v85debug15GeneratorObject17SuspendedLocationEv(%"class.v8::debug::GeneratorObject"* %132) #15
  %162 = extractvalue { i64, i8 } %161, 0
  %163 = extractvalue { i64, i8 } %161, 1
  %164 = bitcast %"class.v8::debug::Location"* %4 to i64*
  store i64 %162, i64* %164, align 8
  %165 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %4, i64 0, i32 2
  store i8 %163, i8* %165, align 8
  %166 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %4, i64 0, i32 3, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %166, i8* nonnull align 1 %131, i64 3, i1 false) #15
  %167 = call i32 @_ZNK2v85debug6Script2IdEv(%"class.v8::debug::Script"* nonnull %157) #15
  %168 = call i32 @_ZNK2v85debug8Location13GetLineNumberEv(%"class.v8::debug::Location"* nonnull %4) #15
  %169 = call i32 @_ZNK2v85debug8Location15GetColumnNumberEv(%"class.v8::debug::Location"* nonnull %4) #15
  %170 = icmp eq i32 %167, 0
  br i1 %170, label %177, label %171

171:                                              ; preds = %159
  %172 = load i32, i32* @_ZN2v88Function19kLineOffsetNotFoundE, align 4
  %173 = icmp eq i32 %172, %168
  %174 = icmp eq i32 %172, %169
  %175 = or i1 %173, %174
  br i1 %175, label %177, label %178

176:                                              ; preds = %156, %134, %140
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %131)
  br label %232

177:                                              ; preds = %159, %171
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %160) #15
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %131)
  br label %232

178:                                              ; preds = %171
  %179 = call i8* @_Znwm(i64 32) #16
  %180 = bitcast i8* %179 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_114LocationMirrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %180, align 8
  %181 = getelementptr inbounds i8, i8* %179, i64 8
  %182 = bitcast i8* %181 to %"class.v8::Object"**
  store %"class.v8::Object"* %1, %"class.v8::Object"** %182, align 8
  %183 = getelementptr inbounds i8, i8* %179, i64 16
  %184 = bitcast i8* %183 to i32*
  store i32 %167, i32* %184, align 8
  %185 = getelementptr inbounds i8, i8* %179, i64 20
  %186 = bitcast i8* %185 to i32*
  store i32 %168, i32* %186, align 4
  %187 = getelementptr inbounds i8, i8* %179, i64 24
  %188 = bitcast i8* %187 to i32*
  store i32 %169, i32* %188, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %160) #15
  br label %189

189:                                              ; preds = %178, %145
  %190 = phi i8* [ %146, %145 ], [ %179, %178 ]
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %131)
  %191 = ptrtoint i8* %190 to i64
  %192 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %192) #15
  %193 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %10, i64 0, i32 0
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %193, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i64 0, i64 0)) #15
  %194 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %10, i64 0, i32 1
  %195 = bitcast %"class.std::__1::unique_ptr.10"* %194 to i64*
  store i64 %191, i64* %195, align 8
  %196 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %197 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %196, align 8
  %198 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %199 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %198, align 8
  %200 = icmp ult %"struct.v8_inspector::InternalPropertyMirror"* %197, %199
  br i1 %200, label %201, label %213

201:                                              ; preds = %189
  %202 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %197 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %202, i8* nonnull align 8 %192, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %192, i8 0, i64 24, i1 false) #15
  %203 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %197, i64 0, i32 0, i32 1
  %204 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %10, i64 0, i32 0, i32 1
  %205 = load i64, i64* %204, align 8
  store i64 %205, i64* %203, align 8
  %206 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %197, i64 0, i32 1
  %207 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %194, i64 0, i32 0, i32 0, i32 0
  %208 = load i64, i64* %195, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %207, align 8
  %209 = bitcast %"class.std::__1::unique_ptr.10"* %206 to i64*
  store i64 %208, i64* %209, align 8
  %210 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %197, i64 1
  %211 = ptrtoint %"struct.v8_inspector::InternalPropertyMirror"* %210 to i64
  %212 = bitcast %"struct.v8_inspector::InternalPropertyMirror"** %196 to i64*
  store i64 %211, i64* %212, align 8
  br label %214

213:                                              ; preds = %189
  call void @_ZNSt3__16vectorIN12v8_inspector22InternalPropertyMirrorENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector"* %2, %"struct.v8_inspector::InternalPropertyMirror"* nonnull dereferenceable(40) %10) #15
  br label %214

214:                                              ; preds = %201, %213
  %215 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %216 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %215, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %215, align 8
  %217 = icmp eq %"class.v8_inspector::ValueMirror"* %216, null
  br i1 %217, label %223, label %218

218:                                              ; preds = %214
  %219 = bitcast %"class.v8_inspector::ValueMirror"* %216 to void (%"class.v8_inspector::ValueMirror"*)***
  %220 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %219, align 8
  %221 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %220, i64 1
  %222 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %221, align 8
  call void %222(%"class.v8_inspector::ValueMirror"* nonnull %216) #15
  br label %223

223:                                              ; preds = %218, %214
  %224 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %10 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %225 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %224, i64 0, i32 1, i32 1
  %226 = load i8, i8* %225, align 1
  %227 = icmp slt i8 %226, 0
  br i1 %227, label %228, label %231

228:                                              ; preds = %223
  %229 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %10 to i8**
  %230 = load i8*, i8** %229, align 8
  call void @_ZdlPv(i8* %230) #16
  br label %231

231:                                              ; preds = %223, %228
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %192) #15
  br label %232

232:                                              ; preds = %177, %176, %231, %128
  %233 = call %"class.v8_inspector::V8Inspector"* @_ZN2v85debug12GetInspectorEPNS_7IsolateE(%"class.v8::Isolate"* %12) #15
  %234 = getelementptr inbounds %"class.v8_inspector::V8Inspector", %"class.v8_inspector::V8Inspector"* %233, i64 3
  %235 = bitcast %"class.v8_inspector::V8Inspector"* %234 to %"class.v8_inspector::V8Debugger"**
  %236 = load %"class.v8_inspector::V8Debugger"*, %"class.v8_inspector::V8Debugger"** %235, align 8
  %237 = call %"class.v8::Array"* @_ZN12v8_inspector10V8Debugger18internalPropertiesEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8_inspector::V8Debugger"* %236, %"class.v8::Context"* %0, %"class.v8::Value"* %15) #15
  %238 = icmp eq %"class.v8::Array"* %237, null
  br i1 %238, label %320, label %239

239:                                              ; preds = %232
  %240 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* nonnull %237) #15
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %320, label %242

242:                                              ; preds = %239
  %243 = bitcast %"class.v8::Array"* %237 to %"class.v8::Object"*
  %244 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %11 to i8*
  %245 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %11, i64 0, i32 0
  %246 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %11, i64 0, i32 1
  %247 = bitcast %"class.std::__1::unique_ptr.10"* %246 to i64*
  %248 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %249 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %250 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %11, i64 0, i32 0, i32 1
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %246, i64 0, i32 0, i32 0, i32 0
  %252 = bitcast %"struct.v8_inspector::InternalPropertyMirror"** %248 to i64*
  %253 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %254 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %11 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %255 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %254, i64 0, i32 1, i32 1
  %256 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %11 to i8**
  br label %257

257:                                              ; preds = %242, %316
  %258 = phi i32 [ 0, %242 ], [ %317, %316 ]
  %259 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* nonnull %243, %"class.v8::Context"* %0, i32 %258) #15
  %260 = icmp eq %"class.v8::Value"* %259, null
  br i1 %260, label %277, label %261

261:                                              ; preds = %257
  %262 = bitcast %"class.v8::Value"* %259 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = and i64 %263, 3
  %265 = icmp eq i64 %264, 1
  br i1 %265, label %266, label %277

266:                                              ; preds = %261
  %267 = add i64 %263, -1
  %268 = inttoptr i64 %267 to i32*
  %269 = load i32, i32* %268, align 4
  %270 = and i64 %263, -4294967296
  %271 = zext i32 %269 to i64
  %272 = or i64 %270, %271
  %273 = add i64 %272, 7
  %274 = inttoptr i64 %273 to i16*
  %275 = load i16, i16* %274, align 2
  %276 = icmp ult i16 %275, 64
  br i1 %276, label %278, label %277

277:                                              ; preds = %257, %261, %266
  call void @_ZN2v88TryCatch5ResetEv(%"class.v8::TryCatch"* nonnull %7) #15
  br label %316

278:                                              ; preds = %266
  %279 = or i32 %258, 1
  %280 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* nonnull %243, %"class.v8::Context"* %0, i32 %279) #15
  %281 = icmp eq %"class.v8::Value"* %280, null
  br i1 %281, label %282, label %283

282:                                              ; preds = %278
  call void @_ZN2v88TryCatch5ResetEv(%"class.v8::TryCatch"* nonnull %7) #15
  br label %316

283:                                              ; preds = %278
  %284 = call %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector11ValueMirror6createEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8::Context"* %0, %"class.v8::Value"* nonnull %280)
  %285 = icmp eq %"class.v8_inspector::ValueMirror"* %284, null
  br i1 %285, label %316, label %286

286:                                              ; preds = %283
  %287 = ptrtoint %"class.v8_inspector::ValueMirror"* %284 to i64
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %244) #15
  %288 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15
  call void @_ZN12v8_inspector29toProtocolStringWithTypeCheckEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8_inspector::String16"* nonnull sret %245, %"class.v8::Isolate"* %288, %"class.v8::Value"* nonnull %259) #15
  store i64 %287, i64* %247, align 8
  %289 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %248, align 8
  %290 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %249, align 8
  %291 = icmp ult %"struct.v8_inspector::InternalPropertyMirror"* %289, %290
  br i1 %291, label %292, label %301

292:                                              ; preds = %286
  %293 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %289 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %293, i8* nonnull align 8 %244, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %244, i8 0, i64 24, i1 false) #15
  %294 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %289, i64 0, i32 0, i32 1
  %295 = load i64, i64* %250, align 8
  store i64 %295, i64* %294, align 8
  %296 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %289, i64 0, i32 1
  %297 = load i64, i64* %247, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %251, align 8
  %298 = bitcast %"class.std::__1::unique_ptr.10"* %296 to i64*
  store i64 %297, i64* %298, align 8
  %299 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %289, i64 1
  %300 = ptrtoint %"struct.v8_inspector::InternalPropertyMirror"* %299 to i64
  store i64 %300, i64* %252, align 8
  br label %302

301:                                              ; preds = %286
  call void @_ZNSt3__16vectorIN12v8_inspector22InternalPropertyMirrorENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector"* %2, %"struct.v8_inspector::InternalPropertyMirror"* nonnull dereferenceable(40) %11) #15
  br label %302

302:                                              ; preds = %292, %301
  %303 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %253, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %253, align 8
  %304 = icmp eq %"class.v8_inspector::ValueMirror"* %303, null
  br i1 %304, label %310, label %305

305:                                              ; preds = %302
  %306 = bitcast %"class.v8_inspector::ValueMirror"* %303 to void (%"class.v8_inspector::ValueMirror"*)***
  %307 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %306, align 8
  %308 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %307, i64 1
  %309 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %308, align 8
  call void %309(%"class.v8_inspector::ValueMirror"* nonnull %303) #15
  br label %310

310:                                              ; preds = %305, %302
  %311 = load i8, i8* %255, align 1
  %312 = icmp slt i8 %311, 0
  br i1 %312, label %313, label %315

313:                                              ; preds = %310
  %314 = load i8*, i8** %256, align 8
  call void @_ZdlPv(i8* %314) #16
  br label %315

315:                                              ; preds = %313, %310
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %244) #15
  br label %316

316:                                              ; preds = %283, %282, %315, %277
  %317 = add i32 %258, 2
  %318 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* nonnull %237) #15
  %319 = icmp ult i32 %317, %318
  br i1 %319, label %257, label %320

320:                                              ; preds = %316, %239, %232
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #15
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #15
  ret void
}

declare zeroext i1 @_ZNK2v85Value19IsGeneratorFunctionEv(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value17IsGeneratorObjectEv(%"class.v8::Value"*) local_unnamed_addr #4

declare %"class.v8_inspector::V8Inspector"* @_ZN2v85debug12GetInspectorEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #4

declare %"class.v8::Array"* @_ZN12v8_inspector10V8Debugger18internalPropertiesEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8_inspector::V8Debugger"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #4

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #4

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #4

declare void @_ZN2v88TryCatch5ResetEv(%"class.v8::TryCatch"*) local_unnamed_addr #4

declare void @_ZN12v8_inspector29toProtocolStringWithTypeCheckEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8_inspector::String16"* sret, %"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector11ValueMirror20getPrivatePropertiesEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEE(%"class.std::__1::vector.339"* noalias sret, %"class.v8::Context"*, %"class.v8::Object"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::MicrotasksScope", align 8
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.std::__1::vector.346", align 8
  %7 = alloca %"class.std::__1::vector.346", align 8
  %8 = alloca %"struct.v8_inspector::PrivatePropertyMirror", align 8
  %9 = bitcast %"class.std::__1::vector.339"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #15
  %10 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %1) #15
  %11 = bitcast %"class.v8::MicrotasksScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #15
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %4, %"class.v8::Isolate"* %10, i32 1) #15
  %12 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #15
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %10) #15
  %13 = bitcast %"class.std::__1::vector.346"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #15
  %14 = bitcast %"class.std::__1::vector.346"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #15
  %15 = call zeroext i1 @_ZN2v85debug17GetPrivateMembersENS_5LocalINS_7ContextEEENS1_INS_6ObjectEEEPNSt3__16vectorINS1_INS_5ValueEEENS6_9allocatorIS9_EEEESD_(%"class.v8::Context"* %1, %"class.v8::Object"* %2, %"class.std::__1::vector.346"* nonnull %6, %"class.std::__1::vector.346"* nonnull %7) #15
  br i1 %15, label %16, label %176

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.std::__1::vector.346", %"class.std::__1::vector.346"* %7, i64 0, i32 0, i32 1
  %18 = bitcast %"class.v8::Local.2"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.346"* %7 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %176, label %25

25:                                               ; preds = %16
  %26 = inttoptr i64 %21 to %"class.v8::Local.2"*
  %27 = getelementptr inbounds %"class.std::__1::vector.346", %"class.std::__1::vector.346"* %6, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::vector.346", %"class.std::__1::vector.346"* %7, i64 0, i32 0, i32 0
  %29 = bitcast %"struct.v8_inspector::PrivatePropertyMirror"* %8 to i8*
  %30 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %8, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %8, i64 0, i32 1
  %32 = bitcast %"class.std::__1::unique_ptr.10"* %31 to i64*
  %33 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %8, i64 0, i32 2
  %34 = bitcast %"class.std::__1::unique_ptr.10"* %33 to i64*
  %35 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %8, i64 0, i32 3
  %36 = bitcast %"class.std::__1::unique_ptr.10"* %35 to i64*
  %37 = getelementptr inbounds %"class.std::__1::vector.339", %"class.std::__1::vector.339"* %0, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.std::__1::vector.339", %"class.std::__1::vector.339"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %8, i64 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %31, i64 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %33, i64 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %35, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast %"struct.v8_inspector::PrivatePropertyMirror"** %37 to i64*
  %44 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %47 = bitcast %"struct.v8_inspector::PrivatePropertyMirror"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %47, i64 0, i32 1, i32 1
  %49 = bitcast %"struct.v8_inspector::PrivatePropertyMirror"* %8 to i8**
  br label %50

50:                                               ; preds = %174, %25
  %51 = phi %"class.v8::Local.2"* [ %26, %25 ], [ %175, %174 ]
  %52 = phi i64 [ 0, %25 ], [ %172, %174 ]
  %53 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %27, align 8
  %54 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %53, i64 %52, i32 0
  %55 = load %"class.v8::Value"*, %"class.v8::Value"** %54, align 8
  %56 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %51, i64 %52
  %57 = bitcast %"class.v8::Local.2"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = inttoptr i64 %58 to %"class.v8::Value"*
  %60 = call zeroext i1 @_ZN2v85debug12AccessorPair14IsAccessorPairENS_5LocalINS_5ValueEEE(%"class.v8::Value"* %59) #15
  br i1 %60, label %61, label %115

61:                                               ; preds = %50
  %62 = inttoptr i64 %58 to %"class.v8::debug::AccessorPair"*
  %63 = call %"class.v8::Value"* @_ZN2v85debug12AccessorPair6getterEv(%"class.v8::debug::AccessorPair"* %62) #15
  %64 = call %"class.v8::Value"* @_ZN2v85debug12AccessorPair6setterEv(%"class.v8::debug::AccessorPair"* %62) #15
  %65 = bitcast %"class.v8::Value"* %63 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = and i64 %66, 3
  %68 = icmp eq i64 %67, 1
  br i1 %68, label %69, label %86

69:                                               ; preds = %61
  %70 = add i64 %66, -1
  %71 = inttoptr i64 %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = and i64 %66, -4294967296
  %74 = zext i32 %72 to i64
  %75 = or i64 %73, %74
  %76 = add i64 %75, 7
  %77 = inttoptr i64 %76 to i16*
  %78 = load i16, i16* %77, align 2
  %79 = icmp eq i16 %78, 67
  br i1 %79, label %80, label %86

80:                                               ; preds = %69
  %81 = add i64 %66, 23
  %82 = inttoptr i64 %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, -2
  %85 = icmp eq i32 %84, 6
  br i1 %85, label %89, label %86

86:                                               ; preds = %69, %61, %80
  %87 = call %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector11ValueMirror6createEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8::Context"* %1, %"class.v8::Value"* %63)
  %88 = ptrtoint %"class.v8_inspector::ValueMirror"* %87 to i64
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i64 [ 0, %80 ], [ %88, %86 ]
  %91 = bitcast %"class.v8::Value"* %64 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 1
  br i1 %94, label %95, label %112

95:                                               ; preds = %89
  %96 = add i64 %92, -1
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = and i64 %92, -4294967296
  %100 = zext i32 %98 to i64
  %101 = or i64 %99, %100
  %102 = add i64 %101, 7
  %103 = inttoptr i64 %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = icmp eq i16 %104, 67
  br i1 %105, label %106, label %112

106:                                              ; preds = %95
  %107 = add i64 %92, 23
  %108 = inttoptr i64 %107 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = and i32 %109, -2
  %111 = icmp eq i32 %110, 6
  br i1 %111, label %118, label %112

112:                                              ; preds = %95, %89, %106
  %113 = call %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector11ValueMirror6createEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8::Context"* %1, %"class.v8::Value"* %64)
  %114 = ptrtoint %"class.v8_inspector::ValueMirror"* %113 to i64
  br label %118

115:                                              ; preds = %50
  %116 = call %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector11ValueMirror6createEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8::Context"* %1, %"class.v8::Value"* %59)
  %117 = ptrtoint %"class.v8_inspector::ValueMirror"* %116 to i64
  br label %118

118:                                              ; preds = %106, %112, %115
  %119 = phi i64 [ 0, %115 ], [ 0, %106 ], [ %114, %112 ]
  %120 = phi i64 [ 0, %115 ], [ %90, %106 ], [ %90, %112 ]
  %121 = phi i64 [ %117, %115 ], [ 0, %106 ], [ 0, %112 ]
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %29) #15
  %122 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %1) #15
  call void @_ZN12v8_inspector29toProtocolStringWithTypeCheckEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8_inspector::String16"* nonnull sret %30, %"class.v8::Isolate"* %122, %"class.v8::Value"* %55) #15
  store i64 %121, i64* %32, align 8
  store i64 %120, i64* %34, align 8
  store i64 %119, i64* %36, align 8
  %123 = load %"struct.v8_inspector::PrivatePropertyMirror"*, %"struct.v8_inspector::PrivatePropertyMirror"** %37, align 8
  %124 = load %"struct.v8_inspector::PrivatePropertyMirror"*, %"struct.v8_inspector::PrivatePropertyMirror"** %38, align 8
  %125 = icmp ult %"struct.v8_inspector::PrivatePropertyMirror"* %123, %124
  br i1 %125, label %126, label %141

126:                                              ; preds = %118
  %127 = bitcast %"struct.v8_inspector::PrivatePropertyMirror"* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* nonnull align 8 %29, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #15
  %128 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %123, i64 0, i32 0, i32 1
  %129 = load i64, i64* %39, align 8
  store i64 %129, i64* %128, align 8
  %130 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %123, i64 0, i32 1
  %131 = load i64, i64* %32, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %40, align 8
  %132 = bitcast %"class.std::__1::unique_ptr.10"* %130 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %123, i64 0, i32 2
  %134 = load i64, i64* %34, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %41, align 8
  %135 = bitcast %"class.std::__1::unique_ptr.10"* %133 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %123, i64 0, i32 3
  %137 = load i64, i64* %36, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %42, align 8
  %138 = bitcast %"class.std::__1::unique_ptr.10"* %136 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %123, i64 1
  %140 = ptrtoint %"struct.v8_inspector::PrivatePropertyMirror"* %139 to i64
  store i64 %140, i64* %43, align 8
  br label %142

141:                                              ; preds = %118
  call void @_ZNSt3__16vectorIN12v8_inspector21PrivatePropertyMirrorENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.339"* %0, %"struct.v8_inspector::PrivatePropertyMirror"* nonnull dereferenceable(56) %8) #15
  br label %142

142:                                              ; preds = %126, %141
  %143 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %44, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %44, align 8
  %144 = icmp eq %"class.v8_inspector::ValueMirror"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %142
  %146 = bitcast %"class.v8_inspector::ValueMirror"* %143 to void (%"class.v8_inspector::ValueMirror"*)***
  %147 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %147, i64 1
  %149 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %148, align 8
  call void %149(%"class.v8_inspector::ValueMirror"* nonnull %143) #15
  br label %150

150:                                              ; preds = %145, %142
  %151 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %45, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %45, align 8
  %152 = icmp eq %"class.v8_inspector::ValueMirror"* %151, null
  br i1 %152, label %158, label %153

153:                                              ; preds = %150
  %154 = bitcast %"class.v8_inspector::ValueMirror"* %151 to void (%"class.v8_inspector::ValueMirror"*)***
  %155 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %155, i64 1
  %157 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %156, align 8
  call void %157(%"class.v8_inspector::ValueMirror"* nonnull %151) #15
  br label %158

158:                                              ; preds = %153, %150
  %159 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %46, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %46, align 8
  %160 = icmp eq %"class.v8_inspector::ValueMirror"* %159, null
  br i1 %160, label %166, label %161

161:                                              ; preds = %158
  %162 = bitcast %"class.v8_inspector::ValueMirror"* %159 to void (%"class.v8_inspector::ValueMirror"*)***
  %163 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %162, align 8
  %164 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %163, i64 1
  %165 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %164, align 8
  call void %165(%"class.v8_inspector::ValueMirror"* nonnull %159) #15
  br label %166

166:                                              ; preds = %161, %158
  %167 = load i8, i8* %48, align 1
  %168 = icmp slt i8 %167, 0
  br i1 %168, label %169, label %171

169:                                              ; preds = %166
  %170 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %170) #16
  br label %171

171:                                              ; preds = %169, %166
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %29) #15
  %172 = add nuw i64 %52, 1
  %173 = icmp ult i64 %172, %23
  br i1 %173, label %174, label %176

174:                                              ; preds = %171
  %175 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %28, align 8
  br label %50

176:                                              ; preds = %171, %16, %3
  %177 = getelementptr inbounds %"class.std::__1::vector.346", %"class.std::__1::vector.346"* %7, i64 0, i32 0, i32 0
  %178 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %177, align 8
  %179 = icmp eq %"class.v8::Local.2"* %178, null
  br i1 %179, label %185, label %180

180:                                              ; preds = %176
  %181 = ptrtoint %"class.v8::Local.2"* %178 to i64
  %182 = getelementptr inbounds %"class.std::__1::vector.346", %"class.std::__1::vector.346"* %7, i64 0, i32 0, i32 1
  %183 = bitcast %"class.v8::Local.2"** %182 to i64*
  store i64 %181, i64* %183, align 8
  %184 = bitcast %"class.v8::Local.2"* %178 to i8*
  call void @_ZdlPv(i8* %184) #16
  br label %185

185:                                              ; preds = %176, %180
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #15
  %186 = getelementptr inbounds %"class.std::__1::vector.346", %"class.std::__1::vector.346"* %6, i64 0, i32 0, i32 0
  %187 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %186, align 8
  %188 = icmp eq %"class.v8::Local.2"* %187, null
  br i1 %188, label %194, label %189

189:                                              ; preds = %185
  %190 = ptrtoint %"class.v8::Local.2"* %187 to i64
  %191 = getelementptr inbounds %"class.std::__1::vector.346", %"class.std::__1::vector.346"* %6, i64 0, i32 0, i32 1
  %192 = bitcast %"class.v8::Local.2"** %191 to i64*
  store i64 %190, i64* %192, align 8
  %193 = bitcast %"class.v8::Local.2"* %187 to i8*
  call void @_ZdlPv(i8* %193) #16
  br label %194

194:                                              ; preds = %185, %189
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #15
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #15
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #15
  ret void
}

declare zeroext i1 @_ZN2v85debug17GetPrivateMembersENS_5LocalINS_7ContextEEENS1_INS_6ObjectEEEPNSt3__16vectorINS1_INS_5ValueEEENS6_9allocatorIS9_EEEESD_(%"class.v8::Context"*, %"class.v8::Object"*, %"class.std::__1::vector.346"*, %"class.std::__1::vector.346"*) local_unnamed_addr #4

declare zeroext i1 @_ZN2v85debug12AccessorPair14IsAccessorPairENS_5LocalINS_5ValueEEE(%"class.v8::Value"*) local_unnamed_addr #4

declare %"class.v8::Value"* @_ZN2v85debug12AccessorPair6getterEv(%"class.v8::debug::AccessorPair"*) local_unnamed_addr #4

declare %"class.v8::Value"* @_ZN2v85debug12AccessorPair6setterEv(%"class.v8::debug::AccessorPair"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector18descriptionForNodeEN2v85LocalINS0_7ContextEEENS1_INS0_5ValueEEE(%"class.v8_inspector::String16"* noalias sret, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca [7 x i8], align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = alloca %"class.v8_inspector::String16", align 8
  %10 = alloca %"class.v8_inspector::String16", align 8
  %11 = alloca %"class.v8_inspector::String16", align 8
  %12 = alloca %"class.v8_inspector::String16", align 8
  %13 = alloca %"class.v8_inspector::String16", align 8
  %14 = alloca %"class.v8_inspector::String16", align 8
  %15 = alloca %"class.v8_inspector::String16", align 8
  %16 = alloca %"class.v8_inspector::String16", align 8
  %17 = alloca %"class.v8_inspector::String16", align 8
  %18 = alloca %"class.v8_inspector::String16", align 8
  %19 = alloca %"class.v8_inspector::String16Builder", align 8
  %20 = alloca %"class.v8_inspector::String16", align 8
  %21 = alloca %"class.v8_inspector::String16", align 8
  %22 = alloca %"class.v8_inspector::String16", align 8
  %23 = alloca %"class.v8_inspector::String16", align 8
  %24 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #15
  br i1 %24, label %27, label %25

25:                                               ; preds = %3
  %26 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false)
  br label %1244

27:                                               ; preds = %3
  %28 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %29 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %1) #15
  %30 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #15
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %29) #15
  %31 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0)) #15
  %32 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %29, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %5) #15
  %33 = bitcast %"class.v8::String"* %32 to %"class.v8::Value"*
  %34 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %28, %"class.v8::Context"* %1, %"class.v8::Value"* %33) #15
  %35 = icmp eq %"class.v8::Value"* %34, null
  %36 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %27
  %41 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #16
  br label %43

43:                                               ; preds = %27, %40
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #15
  br i1 %35, label %44, label %46

44:                                               ; preds = %43
  %45 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 32, i1 false)
  br label %1243

46:                                               ; preds = %43
  %47 = getelementptr inbounds [7 x i8], [7 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %47)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 7, i1 false)
  %48 = call %"class.v8::Function"* @_ZN2v85debug10GetBuiltinEPNS_7IsolateENS0_7BuiltinE(%"class.v8::Isolate"* %29, i32 0) #15
  %49 = bitcast %"class.v8::Value"* %34 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, 3
  %52 = icmp eq i64 %51, 1
  br i1 %52, label %53, label %102

53:                                               ; preds = %46
  %54 = add i64 %50, -1
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = and i64 %50, -4294967296
  %58 = zext i32 %56 to i64
  %59 = or i64 %57, %58
  %60 = add i64 %59, 7
  %61 = inttoptr i64 %60 to i16*
  %62 = load i16, i16* %61, align 2
  %63 = icmp ult i16 %62, 64
  br i1 %63, label %64, label %102

64:                                               ; preds = %53
  %65 = call %"class.v8::Value"* @_ZN2v88Function4CallENS_5LocalINS_7ContextEEENS1_INS_5ValueEEEiPS5_(%"class.v8::Function"* %48, %"class.v8::Context"* %1, %"class.v8::Value"* nonnull %34, i32 0, %"class.v8::Local.2"* null) #15
  %66 = icmp eq %"class.v8::Value"* %65, null
  br i1 %66, label %67, label %69

67:                                               ; preds = %64
  %68 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 32, i1 false)
  br label %1242

69:                                               ; preds = %64
  %70 = bitcast %"class.v8::Value"* %65 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = and i64 %71, 3
  %73 = icmp eq i64 %72, 1
  br i1 %73, label %74, label %102

74:                                               ; preds = %69
  %75 = add i64 %71, -1
  %76 = inttoptr i64 %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = and i64 %71, -4294967296
  %79 = zext i32 %77 to i64
  %80 = or i64 %78, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load i16, i16* %82, align 2
  %84 = icmp ult i16 %83, 64
  br i1 %84, label %85, label %102

85:                                               ; preds = %74
  %86 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %86) #15
  %87 = bitcast %"class.v8::Value"* %65 to %"class.v8::String"*
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %7, %"class.v8::Isolate"* %29, %"class.v8::String"* nonnull %87) #15
  %88 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i16*, i16** %88, align 8
  %90 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %93 = bitcast i64* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 8 %93, i64 7, i1 false)
  %94 = getelementptr inbounds i8, i8* %86, i64 23
  %95 = load i8, i8* %94, align 1
  %96 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %96, i64 0, i32 1, i32 1
  store i8 0, i8* %97, align 1
  %98 = bitcast %"class.v8_inspector::String16"* %7 to i16*
  store i16 0, i16* %98, align 8
  %99 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 1
  %100 = load i64, i64* %99, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %86) #15
  %101 = icmp slt i8 %95, 0
  br i1 %101, label %108, label %102

102:                                              ; preds = %69, %46, %53, %74, %85
  %103 = phi i16* [ %89, %85 ], [ null, %74 ], [ null, %53 ], [ null, %46 ], [ null, %69 ]
  %104 = phi i64 [ %91, %85 ], [ 0, %74 ], [ 0, %53 ], [ 0, %46 ], [ 0, %69 ]
  %105 = phi i8 [ %95, %85 ], [ 0, %74 ], [ 0, %53 ], [ 0, %46 ], [ 0, %69 ]
  %106 = phi i64 [ %100, %85 ], [ 0, %74 ], [ 0, %53 ], [ 0, %46 ], [ 0, %69 ]
  %107 = zext i8 %105 to i64
  br label %108

108:                                              ; preds = %85, %102
  %109 = phi i1 [ false, %102 ], [ true, %85 ]
  %110 = phi i16* [ %103, %102 ], [ %89, %85 ]
  %111 = phi i64 [ %104, %102 ], [ %91, %85 ]
  %112 = phi i8 [ %105, %102 ], [ %95, %85 ]
  %113 = phi i64 [ %106, %102 ], [ %100, %85 ]
  %114 = phi i64 [ %107, %102 ], [ %91, %85 ]
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %206

116:                                              ; preds = %108
  %117 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %117) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0)) #15
  %118 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %29, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %8) #15
  %119 = bitcast %"class.v8::String"* %118 to %"class.v8::Value"*
  %120 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %28, %"class.v8::Context"* %1, %"class.v8::Value"* %119) #15
  %121 = icmp eq %"class.v8::Value"* %120, null
  br i1 %121, label %132, label %122

122:                                              ; preds = %116
  %123 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %120) #15
  %124 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %124, i64 0, i32 1, i32 1
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %122
  %129 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %130 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %130) #16
  br label %131

131:                                              ; preds = %122, %128
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %117) #15
  br i1 %123, label %143, label %141

132:                                              ; preds = %116
  %133 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %133, i64 0, i32 1, i32 1
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %132
  %138 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %139 = load i8*, i8** %138, align 8
  call void @_ZdlPv(i8* %139) #16
  br label %140

140:                                              ; preds = %132, %137
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %117) #15
  br label %141

141:                                              ; preds = %131, %140
  %142 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 32, i1 false)
  br label %1236

143:                                              ; preds = %131
  %144 = bitcast %"class.v8::Value"* %120 to %"class.v8::Object"*
  %145 = bitcast %"class.v8_inspector::String16"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %145) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #15
  %146 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %29, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %9) #15
  %147 = bitcast %"class.v8::String"* %146 to %"class.v8::Value"*
  %148 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %144, %"class.v8::Context"* %1, %"class.v8::Value"* %147) #15
  %149 = icmp eq %"class.v8::Value"* %148, null
  br i1 %149, label %176, label %150

150:                                              ; preds = %143
  %151 = bitcast %"class.v8::Value"* %148 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = and i64 %152, 3
  %154 = icmp eq i64 %153, 1
  br i1 %154, label %155, label %166

155:                                              ; preds = %150
  %156 = add i64 %152, -1
  %157 = inttoptr i64 %156 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = and i64 %152, -4294967296
  %160 = zext i32 %158 to i64
  %161 = or i64 %159, %160
  %162 = add i64 %161, 7
  %163 = inttoptr i64 %162 to i16*
  %164 = load i16, i16* %163, align 2
  %165 = icmp ult i16 %164, 64
  br label %166

166:                                              ; preds = %150, %155
  %167 = phi i1 [ %165, %155 ], [ false, %150 ]
  %168 = bitcast %"class.v8_inspector::String16"* %9 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %168, i64 0, i32 1, i32 1
  %170 = load i8, i8* %169, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %166
  %173 = bitcast %"class.v8_inspector::String16"* %9 to i8**
  %174 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %174) #16
  br label %175

175:                                              ; preds = %166, %172
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %145) #15
  br i1 %167, label %187, label %185

176:                                              ; preds = %143
  %177 = bitcast %"class.v8_inspector::String16"* %9 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %177, i64 0, i32 1, i32 1
  %179 = load i8, i8* %178, align 1
  %180 = icmp slt i8 %179, 0
  br i1 %180, label %181, label %184

181:                                              ; preds = %176
  %182 = bitcast %"class.v8_inspector::String16"* %9 to i8**
  %183 = load i8*, i8** %182, align 8
  call void @_ZdlPv(i8* %183) #16
  br label %184

184:                                              ; preds = %176, %181
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %145) #15
  br label %185

185:                                              ; preds = %175, %184
  %186 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 32, i1 false)
  br label %1236

187:                                              ; preds = %175
  %188 = bitcast %"class.v8_inspector::String16"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %188) #15
  %189 = bitcast %"class.v8::Value"* %148 to %"class.v8::String"*
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %10, %"class.v8::Isolate"* %29, %"class.v8::String"* nonnull %189) #15
  br i1 %109, label %190, label %192

190:                                              ; preds = %187
  %191 = bitcast i16* %110 to i8*
  call void @_ZdlPv(i8* %191) #16
  br label %192

192:                                              ; preds = %190, %187
  %193 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load i16*, i16** %193, align 8
  %195 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %196 = load i64, i64* %195, align 8
  %197 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %198 = bitcast i64* %197 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 8 %198, i64 7, i1 false)
  %199 = getelementptr inbounds i8, i8* %188, i64 23
  %200 = load i8, i8* %199, align 1
  %201 = bitcast %"class.v8_inspector::String16"* %10 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %201, i64 0, i32 1, i32 1
  store i8 0, i8* %202, align 1
  %203 = bitcast %"class.v8_inspector::String16"* %10 to i16*
  store i16 0, i16* %203, align 8
  %204 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %10, i64 0, i32 1
  %205 = load i64, i64* %204, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %188) #15
  br label %206

206:                                              ; preds = %192, %108
  %207 = phi i64 [ %205, %192 ], [ %113, %108 ]
  %208 = phi i8 [ %200, %192 ], [ %112, %108 ]
  %209 = phi i64 [ %196, %192 ], [ %111, %108 ]
  %210 = phi i16* [ %194, %192 ], [ %110, %108 ]
  %211 = bitcast i16* %210 to i8*
  %212 = bitcast %"class.v8_inspector::String16"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %212) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0)) #15
  %213 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %29, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %11) #15
  %214 = bitcast %"class.v8::String"* %213 to %"class.v8::Value"*
  %215 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %28, %"class.v8::Context"* %1, %"class.v8::Value"* %214) #15
  %216 = icmp eq %"class.v8::Value"* %215, null
  br i1 %216, label %227, label %217

217:                                              ; preds = %206
  %218 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %215) #15
  %219 = bitcast %"class.v8_inspector::String16"* %11 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %220 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %219, i64 0, i32 1, i32 1
  %221 = load i8, i8* %220, align 1
  %222 = icmp slt i8 %221, 0
  br i1 %222, label %223, label %226

223:                                              ; preds = %217
  %224 = bitcast %"class.v8_inspector::String16"* %11 to i8**
  %225 = load i8*, i8** %224, align 8
  call void @_ZdlPv(i8* %225) #16
  br label %226

226:                                              ; preds = %217, %223
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %212) #15
  br i1 %218, label %244, label %236

227:                                              ; preds = %206
  %228 = bitcast %"class.v8_inspector::String16"* %11 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %229 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %228, i64 0, i32 1, i32 1
  %230 = load i8, i8* %229, align 1
  %231 = icmp slt i8 %230, 0
  br i1 %231, label %232, label %235

232:                                              ; preds = %227
  %233 = bitcast %"class.v8_inspector::String16"* %11 to i8**
  %234 = load i8*, i8** %233, align 8
  call void @_ZdlPv(i8* %234) #16
  br label %235

235:                                              ; preds = %227, %232
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %212) #15
  br label %236

236:                                              ; preds = %226, %235
  %237 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i16* %210, i16** %237, align 8
  %238 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %209, i64* %238, align 8
  %239 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %240 = bitcast i64* %239 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %240, i8* nonnull align 8 %47, i64 7, i1 false)
  %241 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  %242 = getelementptr inbounds i8, i8* %241, i64 23
  store i8 %208, i8* %242, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 7, i1 false)
  %243 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 1
  store i64 %207, i64* %243, align 8
  br label %1242

244:                                              ; preds = %226
  %245 = bitcast %"class.v8::Value"* %215 to %"class.v8::Int32"*
  %246 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %245) #15
  %247 = icmp eq i32 %246, 1
  br i1 %247, label %248, label %1032

248:                                              ; preds = %244
  %249 = bitcast %"class.v8_inspector::String16"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %249) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0)) #15
  %250 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %29, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %12) #15
  %251 = bitcast %"class.v8::String"* %250 to %"class.v8::Value"*
  %252 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %28, %"class.v8::Context"* %1, %"class.v8::Value"* %251) #15
  %253 = icmp eq %"class.v8::Value"* %252, null
  %254 = bitcast %"class.v8_inspector::String16"* %12 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %255 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %254, i64 0, i32 1, i32 1
  %256 = load i8, i8* %255, align 1
  %257 = icmp slt i8 %256, 0
  br i1 %257, label %258, label %261

258:                                              ; preds = %248
  %259 = bitcast %"class.v8_inspector::String16"* %12 to i8**
  %260 = load i8*, i8** %259, align 8
  call void @_ZdlPv(i8* %260) #16
  br label %261

261:                                              ; preds = %248, %258
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %249) #15
  br i1 %253, label %262, label %270

262:                                              ; preds = %261
  %263 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i16* %210, i16** %263, align 8
  %264 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %209, i64* %264, align 8
  %265 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %266 = bitcast i64* %265 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %266, i8* nonnull align 8 %47, i64 7, i1 false)
  %267 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  %268 = getelementptr inbounds i8, i8* %267, i64 23
  store i8 %208, i8* %268, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 7, i1 false)
  %269 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 1
  store i64 %207, i64* %269, align 8
  br label %1242

270:                                              ; preds = %261
  %271 = bitcast %"class.v8::Value"* %252 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = and i64 %272, 3
  %274 = icmp eq i64 %273, 1
  br i1 %274, label %275, label %708

275:                                              ; preds = %270
  %276 = add i64 %272, -1
  %277 = inttoptr i64 %276 to i32*
  %278 = load i32, i32* %277, align 4
  %279 = and i64 %272, -4294967296
  %280 = zext i32 %278 to i64
  %281 = or i64 %279, %280
  %282 = add i64 %281, 7
  %283 = inttoptr i64 %282 to i16*
  %284 = load i16, i16* %283, align 2
  %285 = icmp ult i16 %284, 64
  br i1 %285, label %286, label %708

286:                                              ; preds = %275
  %287 = bitcast %"class.v8_inspector::String16"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %287) #15
  %288 = bitcast %"class.v8::Value"* %252 to %"class.v8::String"*
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %13, %"class.v8::Isolate"* %29, %"class.v8::String"* nonnull %288) #15
  %289 = bitcast %"class.v8_inspector::String16"* %13 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %290 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %289, i64 0, i32 1, i32 1
  %291 = load i8, i8* %290, align 1
  %292 = icmp slt i8 %291, 0
  %293 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %294 = load i64, i64* %293, align 8
  %295 = zext i8 %291 to i64
  %296 = select i1 %292, i64 %294, i64 %295
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %697, label %298

298:                                              ; preds = %286
  %299 = bitcast %"class.v8_inspector::String16"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %299) #15
  %300 = icmp slt i8 %208, 0
  br i1 %300, label %308, label %301

301:                                              ; preds = %298
  %302 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i16* %210, i16** %302, align 8
  %303 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %209, i64* %303, align 8
  %304 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %305 = bitcast i64* %304 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %305, i8* nonnull align 8 %47, i64 7, i1 false)
  %306 = bitcast %"class.v8_inspector::String16"* %15 to i8*
  %307 = getelementptr inbounds i8, i8* %306, i64 23
  store i8 %208, i8* %307, align 1
  br label %481

308:                                              ; preds = %298
  %309 = icmp ult i64 %209, 11
  br i1 %309, label %310, label %315

310:                                              ; preds = %308
  %311 = bitcast %"class.v8_inspector::String16"* %15 to i16*
  %312 = trunc i64 %209 to i8
  %313 = bitcast %"class.v8_inspector::String16"* %15 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %314 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %313, i64 0, i32 1, i32 1
  store i8 %312, i8* %314, align 1
  br label %332

315:                                              ; preds = %308
  %316 = icmp ugt i64 %209, 9223372036854775791
  br i1 %316, label %317, label %319

317:                                              ; preds = %315
  %318 = bitcast %"class.v8_inspector::String16"* %15 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %318) #14
  unreachable

319:                                              ; preds = %315
  %320 = add nuw nsw i64 %209, 8
  %321 = and i64 %320, -8
  %322 = icmp slt i64 %321, 0
  br i1 %322, label %323, label %324

323:                                              ; preds = %319
  call void @abort() #14
  unreachable

324:                                              ; preds = %319
  %325 = shl i64 %321, 1
  %326 = call i8* @_Znwm(i64 %325) #16
  %327 = bitcast i8* %326 to i16*
  %328 = bitcast %"class.v8_inspector::String16"* %15 to i8**
  store i8* %326, i8** %328, align 8
  %329 = or i64 %321, -9223372036854775808
  %330 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %329, i64* %330, align 8
  %331 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %209, i64* %331, align 8
  br label %332

332:                                              ; preds = %324, %310
  %333 = phi i16* [ %311, %310 ], [ %327, %324 ]
  %334 = add nuw nsw i64 %209, 1
  %335 = add i64 %209, 1
  %336 = icmp ult i64 %335, 16
  br i1 %336, label %426, label %337

337:                                              ; preds = %332
  %338 = add i64 %209, 1
  %339 = getelementptr i16, i16* %333, i64 %338
  %340 = getelementptr i16, i16* %210, i64 %338
  %341 = icmp ult i16* %333, %340
  %342 = icmp ult i16* %210, %339
  %343 = and i1 %341, %342
  br i1 %343, label %426, label %344

344:                                              ; preds = %337
  %345 = and i64 %335, -16
  %346 = getelementptr i16, i16* %333, i64 %345
  %347 = sub i64 %334, %345
  %348 = getelementptr i16, i16* %210, i64 %345
  %349 = add i64 %345, -16
  %350 = lshr exact i64 %349, 4
  %351 = add nuw nsw i64 %350, 1
  %352 = and i64 %351, 3
  %353 = icmp ult i64 %349, 48
  br i1 %353, label %405, label %354

354:                                              ; preds = %344
  %355 = sub nsw i64 %351, %352
  br label %356

356:                                              ; preds = %356, %354
  %357 = phi i64 [ 0, %354 ], [ %402, %356 ]
  %358 = phi i64 [ %355, %354 ], [ %403, %356 ]
  %359 = getelementptr i16, i16* %333, i64 %357
  %360 = getelementptr i16, i16* %210, i64 %357
  %361 = bitcast i16* %360 to <8 x i16>*
  %362 = load <8 x i16>, <8 x i16>* %361, align 2, !alias.scope !171
  %363 = getelementptr i16, i16* %360, i64 8
  %364 = bitcast i16* %363 to <8 x i16>*
  %365 = load <8 x i16>, <8 x i16>* %364, align 2, !alias.scope !171
  %366 = bitcast i16* %359 to <8 x i16>*
  store <8 x i16> %362, <8 x i16>* %366, align 2, !alias.scope !174, !noalias !171
  %367 = getelementptr i16, i16* %359, i64 8
  %368 = bitcast i16* %367 to <8 x i16>*
  store <8 x i16> %365, <8 x i16>* %368, align 2, !alias.scope !174, !noalias !171
  %369 = or i64 %357, 16
  %370 = getelementptr i16, i16* %333, i64 %369
  %371 = getelementptr i16, i16* %210, i64 %369
  %372 = bitcast i16* %371 to <8 x i16>*
  %373 = load <8 x i16>, <8 x i16>* %372, align 2, !alias.scope !171
  %374 = getelementptr i16, i16* %371, i64 8
  %375 = bitcast i16* %374 to <8 x i16>*
  %376 = load <8 x i16>, <8 x i16>* %375, align 2, !alias.scope !171
  %377 = bitcast i16* %370 to <8 x i16>*
  store <8 x i16> %373, <8 x i16>* %377, align 2, !alias.scope !174, !noalias !171
  %378 = getelementptr i16, i16* %370, i64 8
  %379 = bitcast i16* %378 to <8 x i16>*
  store <8 x i16> %376, <8 x i16>* %379, align 2, !alias.scope !174, !noalias !171
  %380 = or i64 %357, 32
  %381 = getelementptr i16, i16* %333, i64 %380
  %382 = getelementptr i16, i16* %210, i64 %380
  %383 = bitcast i16* %382 to <8 x i16>*
  %384 = load <8 x i16>, <8 x i16>* %383, align 2, !alias.scope !171
  %385 = getelementptr i16, i16* %382, i64 8
  %386 = bitcast i16* %385 to <8 x i16>*
  %387 = load <8 x i16>, <8 x i16>* %386, align 2, !alias.scope !171
  %388 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %384, <8 x i16>* %388, align 2, !alias.scope !174, !noalias !171
  %389 = getelementptr i16, i16* %381, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  store <8 x i16> %387, <8 x i16>* %390, align 2, !alias.scope !174, !noalias !171
  %391 = or i64 %357, 48
  %392 = getelementptr i16, i16* %333, i64 %391
  %393 = getelementptr i16, i16* %210, i64 %391
  %394 = bitcast i16* %393 to <8 x i16>*
  %395 = load <8 x i16>, <8 x i16>* %394, align 2, !alias.scope !171
  %396 = getelementptr i16, i16* %393, i64 8
  %397 = bitcast i16* %396 to <8 x i16>*
  %398 = load <8 x i16>, <8 x i16>* %397, align 2, !alias.scope !171
  %399 = bitcast i16* %392 to <8 x i16>*
  store <8 x i16> %395, <8 x i16>* %399, align 2, !alias.scope !174, !noalias !171
  %400 = getelementptr i16, i16* %392, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  store <8 x i16> %398, <8 x i16>* %401, align 2, !alias.scope !174, !noalias !171
  %402 = add i64 %357, 64
  %403 = add i64 %358, -4
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %405, label %356, !llvm.loop !176

405:                                              ; preds = %356, %344
  %406 = phi i64 [ 0, %344 ], [ %402, %356 ]
  %407 = icmp eq i64 %352, 0
  br i1 %407, label %424, label %408

408:                                              ; preds = %405, %408
  %409 = phi i64 [ %421, %408 ], [ %406, %405 ]
  %410 = phi i64 [ %422, %408 ], [ %352, %405 ]
  %411 = getelementptr i16, i16* %333, i64 %409
  %412 = getelementptr i16, i16* %210, i64 %409
  %413 = bitcast i16* %412 to <8 x i16>*
  %414 = load <8 x i16>, <8 x i16>* %413, align 2, !alias.scope !171
  %415 = getelementptr i16, i16* %412, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  %417 = load <8 x i16>, <8 x i16>* %416, align 2, !alias.scope !171
  %418 = bitcast i16* %411 to <8 x i16>*
  store <8 x i16> %414, <8 x i16>* %418, align 2, !alias.scope !174, !noalias !171
  %419 = getelementptr i16, i16* %411, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %417, <8 x i16>* %420, align 2, !alias.scope !174, !noalias !171
  %421 = add i64 %409, 16
  %422 = add i64 %410, -1
  %423 = icmp eq i64 %422, 0
  br i1 %423, label %424, label %408, !llvm.loop !177

424:                                              ; preds = %408, %405
  %425 = icmp eq i64 %335, %345
  br i1 %425, label %479, label %426

426:                                              ; preds = %424, %337, %332
  %427 = phi i16* [ %333, %337 ], [ %333, %332 ], [ %346, %424 ]
  %428 = phi i64 [ %334, %337 ], [ %334, %332 ], [ %347, %424 ]
  %429 = phi i16* [ %210, %337 ], [ %210, %332 ], [ %348, %424 ]
  %430 = add i64 %428, -1
  %431 = and i64 %428, 7
  %432 = icmp eq i64 %431, 0
  br i1 %432, label %444, label %433

433:                                              ; preds = %426, %433
  %434 = phi i16* [ %440, %433 ], [ %427, %426 ]
  %435 = phi i64 [ %439, %433 ], [ %428, %426 ]
  %436 = phi i16* [ %441, %433 ], [ %429, %426 ]
  %437 = phi i64 [ %442, %433 ], [ %431, %426 ]
  %438 = load i16, i16* %436, align 2
  store i16 %438, i16* %434, align 2
  %439 = add i64 %435, -1
  %440 = getelementptr inbounds i16, i16* %434, i64 1
  %441 = getelementptr inbounds i16, i16* %436, i64 1
  %442 = add i64 %437, -1
  %443 = icmp eq i64 %442, 0
  br i1 %443, label %444, label %433, !llvm.loop !178

444:                                              ; preds = %433, %426
  %445 = phi i16* [ %427, %426 ], [ %440, %433 ]
  %446 = phi i64 [ %428, %426 ], [ %439, %433 ]
  %447 = phi i16* [ %429, %426 ], [ %441, %433 ]
  %448 = icmp ult i64 %430, 7
  br i1 %448, label %479, label %449

449:                                              ; preds = %444, %449
  %450 = phi i16* [ %476, %449 ], [ %445, %444 ]
  %451 = phi i64 [ %475, %449 ], [ %446, %444 ]
  %452 = phi i16* [ %477, %449 ], [ %447, %444 ]
  %453 = load i16, i16* %452, align 2
  store i16 %453, i16* %450, align 2
  %454 = getelementptr inbounds i16, i16* %450, i64 1
  %455 = getelementptr inbounds i16, i16* %452, i64 1
  %456 = load i16, i16* %455, align 2
  store i16 %456, i16* %454, align 2
  %457 = getelementptr inbounds i16, i16* %450, i64 2
  %458 = getelementptr inbounds i16, i16* %452, i64 2
  %459 = load i16, i16* %458, align 2
  store i16 %459, i16* %457, align 2
  %460 = getelementptr inbounds i16, i16* %450, i64 3
  %461 = getelementptr inbounds i16, i16* %452, i64 3
  %462 = load i16, i16* %461, align 2
  store i16 %462, i16* %460, align 2
  %463 = getelementptr inbounds i16, i16* %450, i64 4
  %464 = getelementptr inbounds i16, i16* %452, i64 4
  %465 = load i16, i16* %464, align 2
  store i16 %465, i16* %463, align 2
  %466 = getelementptr inbounds i16, i16* %450, i64 5
  %467 = getelementptr inbounds i16, i16* %452, i64 5
  %468 = load i16, i16* %467, align 2
  store i16 %468, i16* %466, align 2
  %469 = getelementptr inbounds i16, i16* %450, i64 6
  %470 = getelementptr inbounds i16, i16* %452, i64 6
  %471 = load i16, i16* %470, align 2
  store i16 %471, i16* %469, align 2
  %472 = getelementptr inbounds i16, i16* %450, i64 7
  %473 = getelementptr inbounds i16, i16* %452, i64 7
  %474 = load i16, i16* %473, align 2
  store i16 %474, i16* %472, align 2
  %475 = add i64 %451, -8
  %476 = getelementptr inbounds i16, i16* %450, i64 8
  %477 = getelementptr inbounds i16, i16* %452, i64 8
  %478 = icmp eq i64 %475, 0
  br i1 %478, label %479, label %449, !llvm.loop !179

479:                                              ; preds = %444, %449, %424
  %480 = load i8, i8* %290, align 1
  br label %481

481:                                              ; preds = %479, %301
  %482 = phi i8 [ %480, %479 ], [ %291, %301 ]
  %483 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %15, i64 0, i32 1
  store i64 %207, i64* %483, align 8
  %484 = icmp slt i8 %482, 0
  br i1 %484, label %487, label %485

485:                                              ; preds = %481
  %486 = bitcast %"class.v8_inspector::String16"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %486, i8* nonnull align 8 %287, i64 24, i1 false) #15
  br label %661

487:                                              ; preds = %481
  %488 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %489 = load i16*, i16** %488, align 8
  %490 = load i64, i64* %293, align 8
  %491 = icmp ult i64 %490, 11
  br i1 %491, label %492, label %497

492:                                              ; preds = %487
  %493 = bitcast %"class.v8_inspector::String16"* %16 to i16*
  %494 = trunc i64 %490 to i8
  %495 = bitcast %"class.v8_inspector::String16"* %16 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %496 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %495, i64 0, i32 1, i32 1
  store i8 %494, i8* %496, align 1
  br label %514

497:                                              ; preds = %487
  %498 = icmp ugt i64 %490, 9223372036854775791
  br i1 %498, label %499, label %501

499:                                              ; preds = %497
  %500 = bitcast %"class.v8_inspector::String16"* %16 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %500) #14
  unreachable

501:                                              ; preds = %497
  %502 = add nuw nsw i64 %490, 8
  %503 = and i64 %502, -8
  %504 = icmp slt i64 %503, 0
  br i1 %504, label %505, label %506

505:                                              ; preds = %501
  call void @abort() #14
  unreachable

506:                                              ; preds = %501
  %507 = shl i64 %503, 1
  %508 = call i8* @_Znwm(i64 %507) #16
  %509 = bitcast i8* %508 to i16*
  %510 = bitcast %"class.v8_inspector::String16"* %16 to i8**
  store i8* %508, i8** %510, align 8
  %511 = or i64 %503, -9223372036854775808
  %512 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %511, i64* %512, align 8
  %513 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %490, i64* %513, align 8
  br label %514

514:                                              ; preds = %506, %492
  %515 = phi i16* [ %493, %492 ], [ %509, %506 ]
  %516 = add nuw nsw i64 %490, 1
  %517 = add i64 %490, 1
  %518 = icmp ult i64 %517, 16
  br i1 %518, label %608, label %519

519:                                              ; preds = %514
  %520 = add i64 %490, 1
  %521 = getelementptr i16, i16* %515, i64 %520
  %522 = getelementptr i16, i16* %489, i64 %520
  %523 = icmp ult i16* %515, %522
  %524 = icmp ult i16* %489, %521
  %525 = and i1 %523, %524
  br i1 %525, label %608, label %526

526:                                              ; preds = %519
  %527 = and i64 %517, -16
  %528 = getelementptr i16, i16* %515, i64 %527
  %529 = sub i64 %516, %527
  %530 = getelementptr i16, i16* %489, i64 %527
  %531 = add i64 %527, -16
  %532 = lshr exact i64 %531, 4
  %533 = add nuw nsw i64 %532, 1
  %534 = and i64 %533, 3
  %535 = icmp ult i64 %531, 48
  br i1 %535, label %587, label %536

536:                                              ; preds = %526
  %537 = sub nsw i64 %533, %534
  br label %538

538:                                              ; preds = %538, %536
  %539 = phi i64 [ 0, %536 ], [ %584, %538 ]
  %540 = phi i64 [ %537, %536 ], [ %585, %538 ]
  %541 = getelementptr i16, i16* %515, i64 %539
  %542 = getelementptr i16, i16* %489, i64 %539
  %543 = bitcast i16* %542 to <8 x i16>*
  %544 = load <8 x i16>, <8 x i16>* %543, align 2, !alias.scope !180
  %545 = getelementptr i16, i16* %542, i64 8
  %546 = bitcast i16* %545 to <8 x i16>*
  %547 = load <8 x i16>, <8 x i16>* %546, align 2, !alias.scope !180
  %548 = bitcast i16* %541 to <8 x i16>*
  store <8 x i16> %544, <8 x i16>* %548, align 2, !alias.scope !183, !noalias !180
  %549 = getelementptr i16, i16* %541, i64 8
  %550 = bitcast i16* %549 to <8 x i16>*
  store <8 x i16> %547, <8 x i16>* %550, align 2, !alias.scope !183, !noalias !180
  %551 = or i64 %539, 16
  %552 = getelementptr i16, i16* %515, i64 %551
  %553 = getelementptr i16, i16* %489, i64 %551
  %554 = bitcast i16* %553 to <8 x i16>*
  %555 = load <8 x i16>, <8 x i16>* %554, align 2, !alias.scope !180
  %556 = getelementptr i16, i16* %553, i64 8
  %557 = bitcast i16* %556 to <8 x i16>*
  %558 = load <8 x i16>, <8 x i16>* %557, align 2, !alias.scope !180
  %559 = bitcast i16* %552 to <8 x i16>*
  store <8 x i16> %555, <8 x i16>* %559, align 2, !alias.scope !183, !noalias !180
  %560 = getelementptr i16, i16* %552, i64 8
  %561 = bitcast i16* %560 to <8 x i16>*
  store <8 x i16> %558, <8 x i16>* %561, align 2, !alias.scope !183, !noalias !180
  %562 = or i64 %539, 32
  %563 = getelementptr i16, i16* %515, i64 %562
  %564 = getelementptr i16, i16* %489, i64 %562
  %565 = bitcast i16* %564 to <8 x i16>*
  %566 = load <8 x i16>, <8 x i16>* %565, align 2, !alias.scope !180
  %567 = getelementptr i16, i16* %564, i64 8
  %568 = bitcast i16* %567 to <8 x i16>*
  %569 = load <8 x i16>, <8 x i16>* %568, align 2, !alias.scope !180
  %570 = bitcast i16* %563 to <8 x i16>*
  store <8 x i16> %566, <8 x i16>* %570, align 2, !alias.scope !183, !noalias !180
  %571 = getelementptr i16, i16* %563, i64 8
  %572 = bitcast i16* %571 to <8 x i16>*
  store <8 x i16> %569, <8 x i16>* %572, align 2, !alias.scope !183, !noalias !180
  %573 = or i64 %539, 48
  %574 = getelementptr i16, i16* %515, i64 %573
  %575 = getelementptr i16, i16* %489, i64 %573
  %576 = bitcast i16* %575 to <8 x i16>*
  %577 = load <8 x i16>, <8 x i16>* %576, align 2, !alias.scope !180
  %578 = getelementptr i16, i16* %575, i64 8
  %579 = bitcast i16* %578 to <8 x i16>*
  %580 = load <8 x i16>, <8 x i16>* %579, align 2, !alias.scope !180
  %581 = bitcast i16* %574 to <8 x i16>*
  store <8 x i16> %577, <8 x i16>* %581, align 2, !alias.scope !183, !noalias !180
  %582 = getelementptr i16, i16* %574, i64 8
  %583 = bitcast i16* %582 to <8 x i16>*
  store <8 x i16> %580, <8 x i16>* %583, align 2, !alias.scope !183, !noalias !180
  %584 = add i64 %539, 64
  %585 = add i64 %540, -4
  %586 = icmp eq i64 %585, 0
  br i1 %586, label %587, label %538, !llvm.loop !185

587:                                              ; preds = %538, %526
  %588 = phi i64 [ 0, %526 ], [ %584, %538 ]
  %589 = icmp eq i64 %534, 0
  br i1 %589, label %606, label %590

590:                                              ; preds = %587, %590
  %591 = phi i64 [ %603, %590 ], [ %588, %587 ]
  %592 = phi i64 [ %604, %590 ], [ %534, %587 ]
  %593 = getelementptr i16, i16* %515, i64 %591
  %594 = getelementptr i16, i16* %489, i64 %591
  %595 = bitcast i16* %594 to <8 x i16>*
  %596 = load <8 x i16>, <8 x i16>* %595, align 2, !alias.scope !180
  %597 = getelementptr i16, i16* %594, i64 8
  %598 = bitcast i16* %597 to <8 x i16>*
  %599 = load <8 x i16>, <8 x i16>* %598, align 2, !alias.scope !180
  %600 = bitcast i16* %593 to <8 x i16>*
  store <8 x i16> %596, <8 x i16>* %600, align 2, !alias.scope !183, !noalias !180
  %601 = getelementptr i16, i16* %593, i64 8
  %602 = bitcast i16* %601 to <8 x i16>*
  store <8 x i16> %599, <8 x i16>* %602, align 2, !alias.scope !183, !noalias !180
  %603 = add i64 %591, 16
  %604 = add i64 %592, -1
  %605 = icmp eq i64 %604, 0
  br i1 %605, label %606, label %590, !llvm.loop !186

606:                                              ; preds = %590, %587
  %607 = icmp eq i64 %517, %527
  br i1 %607, label %661, label %608

608:                                              ; preds = %606, %519, %514
  %609 = phi i16* [ %515, %519 ], [ %515, %514 ], [ %528, %606 ]
  %610 = phi i64 [ %516, %519 ], [ %516, %514 ], [ %529, %606 ]
  %611 = phi i16* [ %489, %519 ], [ %489, %514 ], [ %530, %606 ]
  %612 = add i64 %610, -1
  %613 = and i64 %610, 7
  %614 = icmp eq i64 %613, 0
  br i1 %614, label %626, label %615

615:                                              ; preds = %608, %615
  %616 = phi i16* [ %622, %615 ], [ %609, %608 ]
  %617 = phi i64 [ %621, %615 ], [ %610, %608 ]
  %618 = phi i16* [ %623, %615 ], [ %611, %608 ]
  %619 = phi i64 [ %624, %615 ], [ %613, %608 ]
  %620 = load i16, i16* %618, align 2
  store i16 %620, i16* %616, align 2
  %621 = add i64 %617, -1
  %622 = getelementptr inbounds i16, i16* %616, i64 1
  %623 = getelementptr inbounds i16, i16* %618, i64 1
  %624 = add i64 %619, -1
  %625 = icmp eq i64 %624, 0
  br i1 %625, label %626, label %615, !llvm.loop !187

626:                                              ; preds = %615, %608
  %627 = phi i16* [ %609, %608 ], [ %622, %615 ]
  %628 = phi i64 [ %610, %608 ], [ %621, %615 ]
  %629 = phi i16* [ %611, %608 ], [ %623, %615 ]
  %630 = icmp ult i64 %612, 7
  br i1 %630, label %661, label %631

631:                                              ; preds = %626, %631
  %632 = phi i16* [ %658, %631 ], [ %627, %626 ]
  %633 = phi i64 [ %657, %631 ], [ %628, %626 ]
  %634 = phi i16* [ %659, %631 ], [ %629, %626 ]
  %635 = load i16, i16* %634, align 2
  store i16 %635, i16* %632, align 2
  %636 = getelementptr inbounds i16, i16* %632, i64 1
  %637 = getelementptr inbounds i16, i16* %634, i64 1
  %638 = load i16, i16* %637, align 2
  store i16 %638, i16* %636, align 2
  %639 = getelementptr inbounds i16, i16* %632, i64 2
  %640 = getelementptr inbounds i16, i16* %634, i64 2
  %641 = load i16, i16* %640, align 2
  store i16 %641, i16* %639, align 2
  %642 = getelementptr inbounds i16, i16* %632, i64 3
  %643 = getelementptr inbounds i16, i16* %634, i64 3
  %644 = load i16, i16* %643, align 2
  store i16 %644, i16* %642, align 2
  %645 = getelementptr inbounds i16, i16* %632, i64 4
  %646 = getelementptr inbounds i16, i16* %634, i64 4
  %647 = load i16, i16* %646, align 2
  store i16 %647, i16* %645, align 2
  %648 = getelementptr inbounds i16, i16* %632, i64 5
  %649 = getelementptr inbounds i16, i16* %634, i64 5
  %650 = load i16, i16* %649, align 2
  store i16 %650, i16* %648, align 2
  %651 = getelementptr inbounds i16, i16* %632, i64 6
  %652 = getelementptr inbounds i16, i16* %634, i64 6
  %653 = load i16, i16* %652, align 2
  store i16 %653, i16* %651, align 2
  %654 = getelementptr inbounds i16, i16* %632, i64 7
  %655 = getelementptr inbounds i16, i16* %634, i64 7
  %656 = load i16, i16* %655, align 2
  store i16 %656, i16* %654, align 2
  %657 = add i64 %633, -8
  %658 = getelementptr inbounds i16, i16* %632, i64 8
  %659 = getelementptr inbounds i16, i16* %634, i64 8
  %660 = icmp eq i64 %657, 0
  br i1 %660, label %661, label %631, !llvm.loop !188

661:                                              ; preds = %626, %631, %606, %485
  %662 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %16, i64 0, i32 1
  %663 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %13, i64 0, i32 1
  %664 = load i64, i64* %663, align 8
  store i64 %664, i64* %662, align 8
  call void @_ZN12v8_inspector8String166concatIJS0_cS0_EEES0_DpT_(%"class.v8_inspector::String16"* nonnull sret %14, %"class.v8_inspector::String16"* nonnull %15, i8 signext 35, %"class.v8_inspector::String16"* nonnull %16)
  br i1 %300, label %665, label %666

665:                                              ; preds = %661
  call void @_ZdlPv(i8* %211) #16
  br label %666

666:                                              ; preds = %665, %661
  %667 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %668 = load i16*, i16** %667, align 8
  %669 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %670 = load i64, i64* %669, align 8
  %671 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %672 = bitcast i64* %671 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 8 %672, i64 7, i1 false)
  %673 = getelementptr inbounds i8, i8* %299, i64 23
  %674 = load i8, i8* %673, align 1
  %675 = bitcast %"class.v8_inspector::String16"* %14 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %676 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %675, i64 0, i32 1, i32 1
  store i8 0, i8* %676, align 1
  %677 = bitcast %"class.v8_inspector::String16"* %14 to i16*
  store i16 0, i16* %677, align 8
  %678 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %14, i64 0, i32 1
  %679 = load i64, i64* %678, align 8
  %680 = bitcast %"class.v8_inspector::String16"* %16 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %681 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %680, i64 0, i32 1, i32 1
  %682 = load i8, i8* %681, align 1
  %683 = icmp slt i8 %682, 0
  br i1 %683, label %684, label %687

684:                                              ; preds = %666
  %685 = bitcast %"class.v8_inspector::String16"* %16 to i8**
  %686 = load i8*, i8** %685, align 8
  call void @_ZdlPv(i8* %686) #16
  br label %687

687:                                              ; preds = %666, %684
  %688 = bitcast %"class.v8_inspector::String16"* %15 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %689 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %688, i64 0, i32 1, i32 1
  %690 = load i8, i8* %689, align 1
  %691 = icmp slt i8 %690, 0
  br i1 %691, label %692, label %695

692:                                              ; preds = %687
  %693 = bitcast %"class.v8_inspector::String16"* %15 to i8**
  %694 = load i8*, i8** %693, align 8
  call void @_ZdlPv(i8* %694) #16
  br label %695

695:                                              ; preds = %687, %692
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %299) #15
  %696 = load i8, i8* %290, align 1
  br label %697

697:                                              ; preds = %286, %695
  %698 = phi i8 [ %291, %286 ], [ %696, %695 ]
  %699 = phi i64 [ %207, %286 ], [ %679, %695 ]
  %700 = phi i8 [ %208, %286 ], [ %674, %695 ]
  %701 = phi i64 [ %209, %286 ], [ %670, %695 ]
  %702 = phi i16* [ %210, %286 ], [ %668, %695 ]
  %703 = icmp slt i8 %698, 0
  br i1 %703, label %704, label %707

704:                                              ; preds = %697
  %705 = bitcast %"class.v8_inspector::String16"* %13 to i8**
  %706 = load i8*, i8** %705, align 8
  call void @_ZdlPv(i8* %706) #16
  br label %707

707:                                              ; preds = %697, %704
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %287) #15
  br label %708

708:                                              ; preds = %270, %707, %275
  %709 = phi i64 [ %699, %707 ], [ %207, %275 ], [ %207, %270 ]
  %710 = phi i8 [ %700, %707 ], [ %208, %275 ], [ %208, %270 ]
  %711 = phi i64 [ %701, %707 ], [ %209, %275 ], [ %209, %270 ]
  %712 = phi i16* [ %702, %707 ], [ %210, %275 ], [ %210, %270 ]
  %713 = bitcast i16* %712 to i8*
  %714 = bitcast %"class.v8_inspector::String16"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %714) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0)) #15
  %715 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %29, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %17) #15
  %716 = bitcast %"class.v8::String"* %715 to %"class.v8::Value"*
  %717 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %28, %"class.v8::Context"* %1, %"class.v8::Value"* %716) #15
  %718 = icmp eq %"class.v8::Value"* %717, null
  %719 = bitcast %"class.v8_inspector::String16"* %17 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %720 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %719, i64 0, i32 1, i32 1
  %721 = load i8, i8* %720, align 1
  %722 = icmp slt i8 %721, 0
  br i1 %722, label %723, label %726

723:                                              ; preds = %708
  %724 = bitcast %"class.v8_inspector::String16"* %17 to i8**
  %725 = load i8*, i8** %724, align 8
  call void @_ZdlPv(i8* %725) #16
  br label %726

726:                                              ; preds = %708, %723
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %714) #15
  br i1 %718, label %727, label %735

727:                                              ; preds = %726
  %728 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i16* %712, i16** %728, align 8
  %729 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %711, i64* %729, align 8
  %730 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %731 = bitcast i64* %730 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %731, i8* nonnull align 8 %47, i64 7, i1 false)
  %732 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  %733 = getelementptr inbounds i8, i8* %732, i64 23
  store i8 %710, i8* %733, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 7, i1 false)
  %734 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 1
  store i64 %709, i64* %734, align 8
  br label %1242

735:                                              ; preds = %726
  %736 = bitcast %"class.v8::Value"* %717 to i64*
  %737 = load i64, i64* %736, align 8
  %738 = and i64 %737, 3
  %739 = icmp eq i64 %738, 1
  br i1 %739, label %740, label %1224

740:                                              ; preds = %735
  %741 = add i64 %737, -1
  %742 = inttoptr i64 %741 to i32*
  %743 = load i32, i32* %742, align 4
  %744 = and i64 %737, -4294967296
  %745 = zext i32 %743 to i64
  %746 = or i64 %744, %745
  %747 = add i64 %746, 7
  %748 = inttoptr i64 %747 to i16*
  %749 = load i16, i16* %748, align 2
  %750 = icmp ult i16 %749, 64
  br i1 %750, label %751, label %1224

751:                                              ; preds = %740
  %752 = bitcast %"class.v8::Value"* %717 to %"class.v8::String"*
  %753 = call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* nonnull %752) #15
  %754 = icmp eq i32 %753, 0
  br i1 %754, label %1224, label %755

755:                                              ; preds = %751
  %756 = bitcast %"class.v8_inspector::String16"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %756) #15
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %18, %"class.v8::Isolate"* %29, %"class.v8::String"* nonnull %752) #15
  %757 = bitcast %"class.v8_inspector::String16Builder"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %757) #15
  call void @_ZN12v8_inspector15String16BuilderC1Ev(%"class.v8_inspector::String16Builder"* nonnull %19) #15
  %758 = bitcast %"class.v8_inspector::String16"* %18 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %759 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %758, i64 0, i32 1, i32 1
  %760 = load i8, i8* %759, align 1
  %761 = icmp slt i8 %760, 0
  %762 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %763 = load i64, i64* %762, align 8
  %764 = zext i8 %760 to i64
  %765 = select i1 %761, i64 %763, i64 %764
  %766 = icmp eq i64 %765, 0
  br i1 %766, label %770, label %767

767:                                              ; preds = %755
  %768 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %769 = bitcast %"class.v8_inspector::String16"* %18 to i16*
  br label %999

770:                                              ; preds = %1023, %755
  %771 = bitcast %"class.v8_inspector::String16"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %771) #15
  %772 = icmp slt i8 %710, 0
  br i1 %772, label %780, label %773

773:                                              ; preds = %770
  %774 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i16* %712, i16** %774, align 8
  %775 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %711, i64* %775, align 8
  %776 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %777 = bitcast i64* %776 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %777, i8* nonnull align 8 %47, i64 7, i1 false)
  %778 = bitcast %"class.v8_inspector::String16"* %21 to i8*
  %779 = getelementptr inbounds i8, i8* %778, i64 23
  store i8 %710, i8* %779, align 1
  br label %951

780:                                              ; preds = %770
  %781 = icmp ult i64 %711, 11
  br i1 %781, label %782, label %787

782:                                              ; preds = %780
  %783 = bitcast %"class.v8_inspector::String16"* %21 to i16*
  %784 = trunc i64 %711 to i8
  %785 = bitcast %"class.v8_inspector::String16"* %21 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %786 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %785, i64 0, i32 1, i32 1
  store i8 %784, i8* %786, align 1
  br label %804

787:                                              ; preds = %780
  %788 = icmp ugt i64 %711, 9223372036854775791
  br i1 %788, label %789, label %791

789:                                              ; preds = %787
  %790 = bitcast %"class.v8_inspector::String16"* %21 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %790) #14
  unreachable

791:                                              ; preds = %787
  %792 = add nuw nsw i64 %711, 8
  %793 = and i64 %792, -8
  %794 = icmp slt i64 %793, 0
  br i1 %794, label %795, label %796

795:                                              ; preds = %791
  call void @abort() #14
  unreachable

796:                                              ; preds = %791
  %797 = shl i64 %793, 1
  %798 = call i8* @_Znwm(i64 %797) #16
  %799 = bitcast i8* %798 to i16*
  %800 = bitcast %"class.v8_inspector::String16"* %21 to i8**
  store i8* %798, i8** %800, align 8
  %801 = or i64 %793, -9223372036854775808
  %802 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %801, i64* %802, align 8
  %803 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %711, i64* %803, align 8
  br label %804

804:                                              ; preds = %796, %782
  %805 = phi i16* [ %783, %782 ], [ %799, %796 ]
  %806 = add nuw nsw i64 %711, 1
  %807 = add i64 %711, 1
  %808 = icmp ult i64 %807, 16
  br i1 %808, label %898, label %809

809:                                              ; preds = %804
  %810 = add i64 %711, 1
  %811 = getelementptr i16, i16* %805, i64 %810
  %812 = getelementptr i16, i16* %712, i64 %810
  %813 = icmp ult i16* %805, %812
  %814 = icmp ult i16* %712, %811
  %815 = and i1 %813, %814
  br i1 %815, label %898, label %816

816:                                              ; preds = %809
  %817 = and i64 %807, -16
  %818 = getelementptr i16, i16* %805, i64 %817
  %819 = sub i64 %806, %817
  %820 = getelementptr i16, i16* %712, i64 %817
  %821 = add i64 %817, -16
  %822 = lshr exact i64 %821, 4
  %823 = add nuw nsw i64 %822, 1
  %824 = and i64 %823, 3
  %825 = icmp ult i64 %821, 48
  br i1 %825, label %877, label %826

826:                                              ; preds = %816
  %827 = sub nsw i64 %823, %824
  br label %828

828:                                              ; preds = %828, %826
  %829 = phi i64 [ 0, %826 ], [ %874, %828 ]
  %830 = phi i64 [ %827, %826 ], [ %875, %828 ]
  %831 = getelementptr i16, i16* %805, i64 %829
  %832 = getelementptr i16, i16* %712, i64 %829
  %833 = bitcast i16* %832 to <8 x i16>*
  %834 = load <8 x i16>, <8 x i16>* %833, align 2, !alias.scope !189
  %835 = getelementptr i16, i16* %832, i64 8
  %836 = bitcast i16* %835 to <8 x i16>*
  %837 = load <8 x i16>, <8 x i16>* %836, align 2, !alias.scope !189
  %838 = bitcast i16* %831 to <8 x i16>*
  store <8 x i16> %834, <8 x i16>* %838, align 2, !alias.scope !192, !noalias !189
  %839 = getelementptr i16, i16* %831, i64 8
  %840 = bitcast i16* %839 to <8 x i16>*
  store <8 x i16> %837, <8 x i16>* %840, align 2, !alias.scope !192, !noalias !189
  %841 = or i64 %829, 16
  %842 = getelementptr i16, i16* %805, i64 %841
  %843 = getelementptr i16, i16* %712, i64 %841
  %844 = bitcast i16* %843 to <8 x i16>*
  %845 = load <8 x i16>, <8 x i16>* %844, align 2, !alias.scope !189
  %846 = getelementptr i16, i16* %843, i64 8
  %847 = bitcast i16* %846 to <8 x i16>*
  %848 = load <8 x i16>, <8 x i16>* %847, align 2, !alias.scope !189
  %849 = bitcast i16* %842 to <8 x i16>*
  store <8 x i16> %845, <8 x i16>* %849, align 2, !alias.scope !192, !noalias !189
  %850 = getelementptr i16, i16* %842, i64 8
  %851 = bitcast i16* %850 to <8 x i16>*
  store <8 x i16> %848, <8 x i16>* %851, align 2, !alias.scope !192, !noalias !189
  %852 = or i64 %829, 32
  %853 = getelementptr i16, i16* %805, i64 %852
  %854 = getelementptr i16, i16* %712, i64 %852
  %855 = bitcast i16* %854 to <8 x i16>*
  %856 = load <8 x i16>, <8 x i16>* %855, align 2, !alias.scope !189
  %857 = getelementptr i16, i16* %854, i64 8
  %858 = bitcast i16* %857 to <8 x i16>*
  %859 = load <8 x i16>, <8 x i16>* %858, align 2, !alias.scope !189
  %860 = bitcast i16* %853 to <8 x i16>*
  store <8 x i16> %856, <8 x i16>* %860, align 2, !alias.scope !192, !noalias !189
  %861 = getelementptr i16, i16* %853, i64 8
  %862 = bitcast i16* %861 to <8 x i16>*
  store <8 x i16> %859, <8 x i16>* %862, align 2, !alias.scope !192, !noalias !189
  %863 = or i64 %829, 48
  %864 = getelementptr i16, i16* %805, i64 %863
  %865 = getelementptr i16, i16* %712, i64 %863
  %866 = bitcast i16* %865 to <8 x i16>*
  %867 = load <8 x i16>, <8 x i16>* %866, align 2, !alias.scope !189
  %868 = getelementptr i16, i16* %865, i64 8
  %869 = bitcast i16* %868 to <8 x i16>*
  %870 = load <8 x i16>, <8 x i16>* %869, align 2, !alias.scope !189
  %871 = bitcast i16* %864 to <8 x i16>*
  store <8 x i16> %867, <8 x i16>* %871, align 2, !alias.scope !192, !noalias !189
  %872 = getelementptr i16, i16* %864, i64 8
  %873 = bitcast i16* %872 to <8 x i16>*
  store <8 x i16> %870, <8 x i16>* %873, align 2, !alias.scope !192, !noalias !189
  %874 = add i64 %829, 64
  %875 = add i64 %830, -4
  %876 = icmp eq i64 %875, 0
  br i1 %876, label %877, label %828, !llvm.loop !194

877:                                              ; preds = %828, %816
  %878 = phi i64 [ 0, %816 ], [ %874, %828 ]
  %879 = icmp eq i64 %824, 0
  br i1 %879, label %896, label %880

880:                                              ; preds = %877, %880
  %881 = phi i64 [ %893, %880 ], [ %878, %877 ]
  %882 = phi i64 [ %894, %880 ], [ %824, %877 ]
  %883 = getelementptr i16, i16* %805, i64 %881
  %884 = getelementptr i16, i16* %712, i64 %881
  %885 = bitcast i16* %884 to <8 x i16>*
  %886 = load <8 x i16>, <8 x i16>* %885, align 2, !alias.scope !189
  %887 = getelementptr i16, i16* %884, i64 8
  %888 = bitcast i16* %887 to <8 x i16>*
  %889 = load <8 x i16>, <8 x i16>* %888, align 2, !alias.scope !189
  %890 = bitcast i16* %883 to <8 x i16>*
  store <8 x i16> %886, <8 x i16>* %890, align 2, !alias.scope !192, !noalias !189
  %891 = getelementptr i16, i16* %883, i64 8
  %892 = bitcast i16* %891 to <8 x i16>*
  store <8 x i16> %889, <8 x i16>* %892, align 2, !alias.scope !192, !noalias !189
  %893 = add i64 %881, 16
  %894 = add i64 %882, -1
  %895 = icmp eq i64 %894, 0
  br i1 %895, label %896, label %880, !llvm.loop !195

896:                                              ; preds = %880, %877
  %897 = icmp eq i64 %807, %817
  br i1 %897, label %951, label %898

898:                                              ; preds = %896, %809, %804
  %899 = phi i16* [ %805, %809 ], [ %805, %804 ], [ %818, %896 ]
  %900 = phi i64 [ %806, %809 ], [ %806, %804 ], [ %819, %896 ]
  %901 = phi i16* [ %712, %809 ], [ %712, %804 ], [ %820, %896 ]
  %902 = add i64 %900, -1
  %903 = and i64 %900, 7
  %904 = icmp eq i64 %903, 0
  br i1 %904, label %916, label %905

905:                                              ; preds = %898, %905
  %906 = phi i16* [ %912, %905 ], [ %899, %898 ]
  %907 = phi i64 [ %911, %905 ], [ %900, %898 ]
  %908 = phi i16* [ %913, %905 ], [ %901, %898 ]
  %909 = phi i64 [ %914, %905 ], [ %903, %898 ]
  %910 = load i16, i16* %908, align 2
  store i16 %910, i16* %906, align 2
  %911 = add i64 %907, -1
  %912 = getelementptr inbounds i16, i16* %906, i64 1
  %913 = getelementptr inbounds i16, i16* %908, i64 1
  %914 = add i64 %909, -1
  %915 = icmp eq i64 %914, 0
  br i1 %915, label %916, label %905, !llvm.loop !196

916:                                              ; preds = %905, %898
  %917 = phi i16* [ %899, %898 ], [ %912, %905 ]
  %918 = phi i64 [ %900, %898 ], [ %911, %905 ]
  %919 = phi i16* [ %901, %898 ], [ %913, %905 ]
  %920 = icmp ult i64 %902, 7
  br i1 %920, label %951, label %921

921:                                              ; preds = %916, %921
  %922 = phi i16* [ %948, %921 ], [ %917, %916 ]
  %923 = phi i64 [ %947, %921 ], [ %918, %916 ]
  %924 = phi i16* [ %949, %921 ], [ %919, %916 ]
  %925 = load i16, i16* %924, align 2
  store i16 %925, i16* %922, align 2
  %926 = getelementptr inbounds i16, i16* %922, i64 1
  %927 = getelementptr inbounds i16, i16* %924, i64 1
  %928 = load i16, i16* %927, align 2
  store i16 %928, i16* %926, align 2
  %929 = getelementptr inbounds i16, i16* %922, i64 2
  %930 = getelementptr inbounds i16, i16* %924, i64 2
  %931 = load i16, i16* %930, align 2
  store i16 %931, i16* %929, align 2
  %932 = getelementptr inbounds i16, i16* %922, i64 3
  %933 = getelementptr inbounds i16, i16* %924, i64 3
  %934 = load i16, i16* %933, align 2
  store i16 %934, i16* %932, align 2
  %935 = getelementptr inbounds i16, i16* %922, i64 4
  %936 = getelementptr inbounds i16, i16* %924, i64 4
  %937 = load i16, i16* %936, align 2
  store i16 %937, i16* %935, align 2
  %938 = getelementptr inbounds i16, i16* %922, i64 5
  %939 = getelementptr inbounds i16, i16* %924, i64 5
  %940 = load i16, i16* %939, align 2
  store i16 %940, i16* %938, align 2
  %941 = getelementptr inbounds i16, i16* %922, i64 6
  %942 = getelementptr inbounds i16, i16* %924, i64 6
  %943 = load i16, i16* %942, align 2
  store i16 %943, i16* %941, align 2
  %944 = getelementptr inbounds i16, i16* %922, i64 7
  %945 = getelementptr inbounds i16, i16* %924, i64 7
  %946 = load i16, i16* %945, align 2
  store i16 %946, i16* %944, align 2
  %947 = add i64 %923, -8
  %948 = getelementptr inbounds i16, i16* %922, i64 8
  %949 = getelementptr inbounds i16, i16* %924, i64 8
  %950 = icmp eq i64 %947, 0
  br i1 %950, label %951, label %921, !llvm.loop !197

951:                                              ; preds = %916, %921, %896, %773
  %952 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %21, i64 0, i32 1
  store i64 %709, i64* %952, align 8
  call void @_ZN12v8_inspector15String16Builder8toStringEv(%"class.v8_inspector::String16"* nonnull sret %22, %"class.v8_inspector::String16Builder"* nonnull %19) #15
  call void @_ZN12v8_inspector8String166concatIJS0_cS0_EEES0_DpT_(%"class.v8_inspector::String16"* nonnull sret %20, %"class.v8_inspector::String16"* nonnull %21, i8 signext 46, %"class.v8_inspector::String16"* nonnull %22)
  br i1 %772, label %953, label %954

953:                                              ; preds = %951
  call void @_ZdlPv(i8* %713) #16
  br label %954

954:                                              ; preds = %953, %951
  %955 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %956 = load i16*, i16** %955, align 8
  %957 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %958 = load i64, i64* %957, align 8
  %959 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %960 = bitcast i64* %959 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 8 %960, i64 7, i1 false)
  %961 = getelementptr inbounds i8, i8* %771, i64 23
  %962 = load i8, i8* %961, align 1
  %963 = bitcast %"class.v8_inspector::String16"* %20 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %964 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %963, i64 0, i32 1, i32 1
  store i8 0, i8* %964, align 1
  %965 = bitcast %"class.v8_inspector::String16"* %20 to i16*
  store i16 0, i16* %965, align 8
  %966 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %20, i64 0, i32 1
  %967 = load i64, i64* %966, align 8
  %968 = bitcast %"class.v8_inspector::String16"* %22 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %969 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %968, i64 0, i32 1, i32 1
  %970 = load i8, i8* %969, align 1
  %971 = icmp slt i8 %970, 0
  br i1 %971, label %972, label %975

972:                                              ; preds = %954
  %973 = bitcast %"class.v8_inspector::String16"* %22 to i8**
  %974 = load i8*, i8** %973, align 8
  call void @_ZdlPv(i8* %974) #16
  br label %975

975:                                              ; preds = %954, %972
  %976 = bitcast %"class.v8_inspector::String16"* %21 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %977 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %976, i64 0, i32 1, i32 1
  %978 = load i8, i8* %977, align 1
  %979 = icmp slt i8 %978, 0
  br i1 %979, label %980, label %983

980:                                              ; preds = %975
  %981 = bitcast %"class.v8_inspector::String16"* %21 to i8**
  %982 = load i8*, i8** %981, align 8
  call void @_ZdlPv(i8* %982) #16
  br label %983

983:                                              ; preds = %975, %980
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %771) #15
  %984 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %19, i64 0, i32 0, i32 0, i32 0
  %985 = load i16*, i16** %984, align 8
  %986 = icmp eq i16* %985, null
  br i1 %986, label %992, label %987

987:                                              ; preds = %983
  %988 = ptrtoint i16* %985 to i64
  %989 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %19, i64 0, i32 0, i32 0, i32 1
  %990 = bitcast i16** %989 to i64*
  store i64 %988, i64* %990, align 8
  %991 = bitcast i16* %985 to i8*
  call void @_ZdlPv(i8* %991) #16
  br label %992

992:                                              ; preds = %983, %987
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %757) #15
  %993 = load i8, i8* %759, align 1
  %994 = icmp slt i8 %993, 0
  br i1 %994, label %995, label %998

995:                                              ; preds = %992
  %996 = bitcast %"class.v8_inspector::String16"* %18 to i8**
  %997 = load i8*, i8** %996, align 8
  call void @_ZdlPv(i8* %997) #16
  br label %998

998:                                              ; preds = %992, %995
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %756) #15
  br label %1224

999:                                              ; preds = %767, %1023
  %1000 = phi i8 [ %760, %767 ], [ %1024, %1023 ]
  %1001 = phi i1 [ %761, %767 ], [ %1027, %1023 ]
  %1002 = phi i64 [ 0, %767 ], [ %1026, %1023 ]
  %1003 = phi i8 [ 0, %767 ], [ %1025, %1023 ]
  %1004 = load i16*, i16** %768, align 8
  %1005 = select i1 %1001, i16* %1004, i16* %769
  %1006 = getelementptr inbounds i16, i16* %1005, i64 %1002
  %1007 = load i16, i16* %1006, align 2
  %1008 = icmp eq i16 %1007, 32
  br i1 %1008, label %1009, label %1014

1009:                                             ; preds = %999
  %1010 = and i8 %1003, 1
  %1011 = icmp eq i8 %1010, 0
  br i1 %1011, label %1012, label %1023

1012:                                             ; preds = %1009
  call void @_ZN12v8_inspector15String16Builder6appendEc(%"class.v8_inspector::String16Builder"* nonnull %19, i8 signext 46) #15
  %1013 = load i8, i8* %759, align 1
  br label %1023

1014:                                             ; preds = %999
  call void @_ZN12v8_inspector15String16Builder6appendEt(%"class.v8_inspector::String16Builder"* nonnull %19, i16 zeroext %1007) #15
  %1015 = load i8, i8* %759, align 1
  %1016 = icmp slt i8 %1015, 0
  %1017 = load i16*, i16** %768, align 8
  %1018 = select i1 %1016, i16* %1017, i16* %769
  %1019 = getelementptr inbounds i16, i16* %1018, i64 %1002
  %1020 = load i16, i16* %1019, align 2
  %1021 = icmp eq i16 %1020, 46
  %1022 = zext i1 %1021 to i8
  br label %1023

1023:                                             ; preds = %1009, %1014, %1012
  %1024 = phi i8 [ %1000, %1009 ], [ %1013, %1012 ], [ %1015, %1014 ]
  %1025 = phi i8 [ %1003, %1009 ], [ 1, %1012 ], [ %1022, %1014 ]
  %1026 = add nuw i64 %1002, 1
  %1027 = icmp slt i8 %1024, 0
  %1028 = load i64, i64* %762, align 8
  %1029 = zext i8 %1024 to i64
  %1030 = select i1 %1027, i64 %1028, i64 %1029
  %1031 = icmp ult i64 %1026, %1030
  br i1 %1031, label %999, label %770

1032:                                             ; preds = %244
  %1033 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %245) #15
  %1034 = icmp eq i32 %1033, 1
  br i1 %1034, label %1035, label %1224

1035:                                             ; preds = %1032
  %1036 = icmp slt i8 %208, 0
  br i1 %1036, label %1044, label %1037

1037:                                             ; preds = %1035
  %1038 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i16* %210, i16** %1038, align 8
  %1039 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %209, i64* %1039, align 8
  %1040 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1041 = bitcast i64* %1040 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1041, i8* nonnull align 8 %47, i64 7, i1 false)
  %1042 = bitcast %"class.v8_inspector::String16"* %23 to i8*
  %1043 = getelementptr inbounds i8, i8* %1042, i64 23
  store i8 %208, i8* %1043, align 1
  br label %1215

1044:                                             ; preds = %1035
  %1045 = icmp ult i64 %209, 11
  br i1 %1045, label %1046, label %1051

1046:                                             ; preds = %1044
  %1047 = bitcast %"class.v8_inspector::String16"* %23 to i16*
  %1048 = trunc i64 %209 to i8
  %1049 = bitcast %"class.v8_inspector::String16"* %23 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1050 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1049, i64 0, i32 1, i32 1
  store i8 %1048, i8* %1050, align 1
  br label %1068

1051:                                             ; preds = %1044
  %1052 = icmp ugt i64 %209, 9223372036854775791
  br i1 %1052, label %1053, label %1055

1053:                                             ; preds = %1051
  %1054 = bitcast %"class.v8_inspector::String16"* %23 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1054) #14
  unreachable

1055:                                             ; preds = %1051
  %1056 = add nuw nsw i64 %209, 8
  %1057 = and i64 %1056, -8
  %1058 = icmp slt i64 %1057, 0
  br i1 %1058, label %1059, label %1060

1059:                                             ; preds = %1055
  call void @abort() #14
  unreachable

1060:                                             ; preds = %1055
  %1061 = shl i64 %1057, 1
  %1062 = call i8* @_Znwm(i64 %1061) #16
  %1063 = bitcast i8* %1062 to i16*
  %1064 = bitcast %"class.v8_inspector::String16"* %23 to i8**
  store i8* %1062, i8** %1064, align 8
  %1065 = or i64 %1057, -9223372036854775808
  %1066 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1065, i64* %1066, align 8
  %1067 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %209, i64* %1067, align 8
  br label %1068

1068:                                             ; preds = %1060, %1046
  %1069 = phi i16* [ %1047, %1046 ], [ %1063, %1060 ]
  %1070 = add nuw nsw i64 %209, 1
  %1071 = add i64 %209, 1
  %1072 = icmp ult i64 %1071, 16
  br i1 %1072, label %1162, label %1073

1073:                                             ; preds = %1068
  %1074 = add i64 %209, 1
  %1075 = getelementptr i16, i16* %1069, i64 %1074
  %1076 = getelementptr i16, i16* %210, i64 %1074
  %1077 = icmp ult i16* %1069, %1076
  %1078 = icmp ult i16* %210, %1075
  %1079 = and i1 %1077, %1078
  br i1 %1079, label %1162, label %1080

1080:                                             ; preds = %1073
  %1081 = and i64 %1071, -16
  %1082 = getelementptr i16, i16* %1069, i64 %1081
  %1083 = sub i64 %1070, %1081
  %1084 = getelementptr i16, i16* %210, i64 %1081
  %1085 = add i64 %1081, -16
  %1086 = lshr exact i64 %1085, 4
  %1087 = add nuw nsw i64 %1086, 1
  %1088 = and i64 %1087, 3
  %1089 = icmp ult i64 %1085, 48
  br i1 %1089, label %1141, label %1090

1090:                                             ; preds = %1080
  %1091 = sub nsw i64 %1087, %1088
  br label %1092

1092:                                             ; preds = %1092, %1090
  %1093 = phi i64 [ 0, %1090 ], [ %1138, %1092 ]
  %1094 = phi i64 [ %1091, %1090 ], [ %1139, %1092 ]
  %1095 = getelementptr i16, i16* %1069, i64 %1093
  %1096 = getelementptr i16, i16* %210, i64 %1093
  %1097 = bitcast i16* %1096 to <8 x i16>*
  %1098 = load <8 x i16>, <8 x i16>* %1097, align 2, !alias.scope !198
  %1099 = getelementptr i16, i16* %1096, i64 8
  %1100 = bitcast i16* %1099 to <8 x i16>*
  %1101 = load <8 x i16>, <8 x i16>* %1100, align 2, !alias.scope !198
  %1102 = bitcast i16* %1095 to <8 x i16>*
  store <8 x i16> %1098, <8 x i16>* %1102, align 2, !alias.scope !201, !noalias !198
  %1103 = getelementptr i16, i16* %1095, i64 8
  %1104 = bitcast i16* %1103 to <8 x i16>*
  store <8 x i16> %1101, <8 x i16>* %1104, align 2, !alias.scope !201, !noalias !198
  %1105 = or i64 %1093, 16
  %1106 = getelementptr i16, i16* %1069, i64 %1105
  %1107 = getelementptr i16, i16* %210, i64 %1105
  %1108 = bitcast i16* %1107 to <8 x i16>*
  %1109 = load <8 x i16>, <8 x i16>* %1108, align 2, !alias.scope !198
  %1110 = getelementptr i16, i16* %1107, i64 8
  %1111 = bitcast i16* %1110 to <8 x i16>*
  %1112 = load <8 x i16>, <8 x i16>* %1111, align 2, !alias.scope !198
  %1113 = bitcast i16* %1106 to <8 x i16>*
  store <8 x i16> %1109, <8 x i16>* %1113, align 2, !alias.scope !201, !noalias !198
  %1114 = getelementptr i16, i16* %1106, i64 8
  %1115 = bitcast i16* %1114 to <8 x i16>*
  store <8 x i16> %1112, <8 x i16>* %1115, align 2, !alias.scope !201, !noalias !198
  %1116 = or i64 %1093, 32
  %1117 = getelementptr i16, i16* %1069, i64 %1116
  %1118 = getelementptr i16, i16* %210, i64 %1116
  %1119 = bitcast i16* %1118 to <8 x i16>*
  %1120 = load <8 x i16>, <8 x i16>* %1119, align 2, !alias.scope !198
  %1121 = getelementptr i16, i16* %1118, i64 8
  %1122 = bitcast i16* %1121 to <8 x i16>*
  %1123 = load <8 x i16>, <8 x i16>* %1122, align 2, !alias.scope !198
  %1124 = bitcast i16* %1117 to <8 x i16>*
  store <8 x i16> %1120, <8 x i16>* %1124, align 2, !alias.scope !201, !noalias !198
  %1125 = getelementptr i16, i16* %1117, i64 8
  %1126 = bitcast i16* %1125 to <8 x i16>*
  store <8 x i16> %1123, <8 x i16>* %1126, align 2, !alias.scope !201, !noalias !198
  %1127 = or i64 %1093, 48
  %1128 = getelementptr i16, i16* %1069, i64 %1127
  %1129 = getelementptr i16, i16* %210, i64 %1127
  %1130 = bitcast i16* %1129 to <8 x i16>*
  %1131 = load <8 x i16>, <8 x i16>* %1130, align 2, !alias.scope !198
  %1132 = getelementptr i16, i16* %1129, i64 8
  %1133 = bitcast i16* %1132 to <8 x i16>*
  %1134 = load <8 x i16>, <8 x i16>* %1133, align 2, !alias.scope !198
  %1135 = bitcast i16* %1128 to <8 x i16>*
  store <8 x i16> %1131, <8 x i16>* %1135, align 2, !alias.scope !201, !noalias !198
  %1136 = getelementptr i16, i16* %1128, i64 8
  %1137 = bitcast i16* %1136 to <8 x i16>*
  store <8 x i16> %1134, <8 x i16>* %1137, align 2, !alias.scope !201, !noalias !198
  %1138 = add i64 %1093, 64
  %1139 = add i64 %1094, -4
  %1140 = icmp eq i64 %1139, 0
  br i1 %1140, label %1141, label %1092, !llvm.loop !203

1141:                                             ; preds = %1092, %1080
  %1142 = phi i64 [ 0, %1080 ], [ %1138, %1092 ]
  %1143 = icmp eq i64 %1088, 0
  br i1 %1143, label %1160, label %1144

1144:                                             ; preds = %1141, %1144
  %1145 = phi i64 [ %1157, %1144 ], [ %1142, %1141 ]
  %1146 = phi i64 [ %1158, %1144 ], [ %1088, %1141 ]
  %1147 = getelementptr i16, i16* %1069, i64 %1145
  %1148 = getelementptr i16, i16* %210, i64 %1145
  %1149 = bitcast i16* %1148 to <8 x i16>*
  %1150 = load <8 x i16>, <8 x i16>* %1149, align 2, !alias.scope !198
  %1151 = getelementptr i16, i16* %1148, i64 8
  %1152 = bitcast i16* %1151 to <8 x i16>*
  %1153 = load <8 x i16>, <8 x i16>* %1152, align 2, !alias.scope !198
  %1154 = bitcast i16* %1147 to <8 x i16>*
  store <8 x i16> %1150, <8 x i16>* %1154, align 2, !alias.scope !201, !noalias !198
  %1155 = getelementptr i16, i16* %1147, i64 8
  %1156 = bitcast i16* %1155 to <8 x i16>*
  store <8 x i16> %1153, <8 x i16>* %1156, align 2, !alias.scope !201, !noalias !198
  %1157 = add i64 %1145, 16
  %1158 = add i64 %1146, -1
  %1159 = icmp eq i64 %1158, 0
  br i1 %1159, label %1160, label %1144, !llvm.loop !204

1160:                                             ; preds = %1144, %1141
  %1161 = icmp eq i64 %1071, %1081
  br i1 %1161, label %1215, label %1162

1162:                                             ; preds = %1160, %1073, %1068
  %1163 = phi i16* [ %1069, %1073 ], [ %1069, %1068 ], [ %1082, %1160 ]
  %1164 = phi i64 [ %1070, %1073 ], [ %1070, %1068 ], [ %1083, %1160 ]
  %1165 = phi i16* [ %210, %1073 ], [ %210, %1068 ], [ %1084, %1160 ]
  %1166 = add i64 %1164, -1
  %1167 = and i64 %1164, 7
  %1168 = icmp eq i64 %1167, 0
  br i1 %1168, label %1180, label %1169

1169:                                             ; preds = %1162, %1169
  %1170 = phi i16* [ %1176, %1169 ], [ %1163, %1162 ]
  %1171 = phi i64 [ %1175, %1169 ], [ %1164, %1162 ]
  %1172 = phi i16* [ %1177, %1169 ], [ %1165, %1162 ]
  %1173 = phi i64 [ %1178, %1169 ], [ %1167, %1162 ]
  %1174 = load i16, i16* %1172, align 2
  store i16 %1174, i16* %1170, align 2
  %1175 = add i64 %1171, -1
  %1176 = getelementptr inbounds i16, i16* %1170, i64 1
  %1177 = getelementptr inbounds i16, i16* %1172, i64 1
  %1178 = add i64 %1173, -1
  %1179 = icmp eq i64 %1178, 0
  br i1 %1179, label %1180, label %1169, !llvm.loop !205

1180:                                             ; preds = %1169, %1162
  %1181 = phi i16* [ %1163, %1162 ], [ %1176, %1169 ]
  %1182 = phi i64 [ %1164, %1162 ], [ %1175, %1169 ]
  %1183 = phi i16* [ %1165, %1162 ], [ %1177, %1169 ]
  %1184 = icmp ult i64 %1166, 7
  br i1 %1184, label %1215, label %1185

1185:                                             ; preds = %1180, %1185
  %1186 = phi i16* [ %1212, %1185 ], [ %1181, %1180 ]
  %1187 = phi i64 [ %1211, %1185 ], [ %1182, %1180 ]
  %1188 = phi i16* [ %1213, %1185 ], [ %1183, %1180 ]
  %1189 = load i16, i16* %1188, align 2
  store i16 %1189, i16* %1186, align 2
  %1190 = getelementptr inbounds i16, i16* %1186, i64 1
  %1191 = getelementptr inbounds i16, i16* %1188, i64 1
  %1192 = load i16, i16* %1191, align 2
  store i16 %1192, i16* %1190, align 2
  %1193 = getelementptr inbounds i16, i16* %1186, i64 2
  %1194 = getelementptr inbounds i16, i16* %1188, i64 2
  %1195 = load i16, i16* %1194, align 2
  store i16 %1195, i16* %1193, align 2
  %1196 = getelementptr inbounds i16, i16* %1186, i64 3
  %1197 = getelementptr inbounds i16, i16* %1188, i64 3
  %1198 = load i16, i16* %1197, align 2
  store i16 %1198, i16* %1196, align 2
  %1199 = getelementptr inbounds i16, i16* %1186, i64 4
  %1200 = getelementptr inbounds i16, i16* %1188, i64 4
  %1201 = load i16, i16* %1200, align 2
  store i16 %1201, i16* %1199, align 2
  %1202 = getelementptr inbounds i16, i16* %1186, i64 5
  %1203 = getelementptr inbounds i16, i16* %1188, i64 5
  %1204 = load i16, i16* %1203, align 2
  store i16 %1204, i16* %1202, align 2
  %1205 = getelementptr inbounds i16, i16* %1186, i64 6
  %1206 = getelementptr inbounds i16, i16* %1188, i64 6
  %1207 = load i16, i16* %1206, align 2
  store i16 %1207, i16* %1205, align 2
  %1208 = getelementptr inbounds i16, i16* %1186, i64 7
  %1209 = getelementptr inbounds i16, i16* %1188, i64 7
  %1210 = load i16, i16* %1209, align 2
  store i16 %1210, i16* %1208, align 2
  %1211 = add i64 %1187, -8
  %1212 = getelementptr inbounds i16, i16* %1186, i64 8
  %1213 = getelementptr inbounds i16, i16* %1188, i64 8
  %1214 = icmp eq i64 %1211, 0
  br i1 %1214, label %1215, label %1185, !llvm.loop !206

1215:                                             ; preds = %1180, %1185, %1160, %1037
  %1216 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %23, i64 0, i32 1
  store i64 %207, i64* %1216, align 8
  call void @_ZN12v8_inspector8String166concatIJPKcS0_cEEES0_DpT_(%"class.v8_inspector::String16"* sret %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), %"class.v8_inspector::String16"* nonnull %23, i8 signext 62)
  %1217 = bitcast %"class.v8_inspector::String16"* %23 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1218 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1217, i64 0, i32 1, i32 1
  %1219 = load i8, i8* %1218, align 1
  %1220 = icmp slt i8 %1219, 0
  br i1 %1220, label %1221, label %1236

1221:                                             ; preds = %1215
  %1222 = bitcast %"class.v8_inspector::String16"* %23 to i8**
  %1223 = load i8*, i8** %1222, align 8
  call void @_ZdlPv(i8* %1223) #16
  br label %1236

1224:                                             ; preds = %735, %740, %998, %751, %1032
  %1225 = phi i64 [ %207, %1032 ], [ %709, %740 ], [ %967, %998 ], [ %709, %751 ], [ %709, %735 ]
  %1226 = phi i8 [ %208, %1032 ], [ %710, %740 ], [ %962, %998 ], [ %710, %751 ], [ %710, %735 ]
  %1227 = phi i64 [ %209, %1032 ], [ %711, %740 ], [ %958, %998 ], [ %711, %751 ], [ %711, %735 ]
  %1228 = phi i16* [ %210, %1032 ], [ %712, %740 ], [ %956, %998 ], [ %712, %751 ], [ %712, %735 ]
  %1229 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i16* %1228, i16** %1229, align 8
  %1230 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1227, i64* %1230, align 8
  %1231 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1232 = bitcast i64* %1231 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1232, i8* nonnull align 8 %47, i64 7, i1 false)
  %1233 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  %1234 = getelementptr inbounds i8, i8* %1233, i64 23
  store i8 %1226, i8* %1234, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 7, i1 false)
  %1235 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 1
  store i64 %1225, i64* %1235, align 8
  br label %1242

1236:                                             ; preds = %1215, %1221, %185, %141
  %1237 = phi i8 [ %112, %185 ], [ %112, %141 ], [ %208, %1215 ], [ %208, %1221 ]
  %1238 = phi i16* [ %110, %185 ], [ %110, %141 ], [ %210, %1215 ], [ %210, %1221 ]
  %1239 = icmp slt i8 %1237, 0
  br i1 %1239, label %1240, label %1242

1240:                                             ; preds = %1236
  %1241 = bitcast i16* %1238 to i8*
  call void @_ZdlPv(i8* %1241) #16
  br label %1242

1242:                                             ; preds = %727, %262, %236, %1224, %67, %1236, %1240
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %47)
  br label %1243

1243:                                             ; preds = %1242, %44
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #15
  br label %1244

1244:                                             ; preds = %1243, %25
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare %"class.v8::Function"* @_ZN2v85debug10GetBuiltinEPNS_7IsolateENS0_7BuiltinE(%"class.v8::Isolate"*, i32) local_unnamed_addr #4

declare %"class.v8::Value"* @_ZN2v88Function4CallENS_5LocalINS_7ContextEEENS1_INS_5ValueEEEiPS5_(%"class.v8::Function"*, %"class.v8::Context"*, %"class.v8::Value"*, i32, %"class.v8::Local.2"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #4

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8String166concatIJS0_cS0_EEES0_DpT_(%"class.v8_inspector::String16"* noalias sret, %"class.v8_inspector::String16"*, i8 signext, %"class.v8_inspector::String16"*) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.v8_inspector::String16Builder", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = bitcast %"class.v8_inspector::String16Builder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #15
  call void @_ZN12v8_inspector15String16BuilderC1Ev(%"class.v8_inspector::String16Builder"* nonnull %5) #15
  %9 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  %15 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %15, i64 24, i1 false) #15
  br label %191

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp ult i64 %20, 11
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = bitcast %"class.v8_inspector::String16"* %6 to i16*
  %24 = trunc i64 %20 to i8
  %25 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %25, i64 0, i32 1, i32 1
  store i8 %24, i8* %26, align 1
  br label %44

27:                                               ; preds = %16
  %28 = icmp ugt i64 %20, 9223372036854775791
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = bitcast %"class.v8_inspector::String16"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %30) #14
  unreachable

31:                                               ; preds = %27
  %32 = add nuw nsw i64 %20, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  call void @abort() #14
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = call i8* @_Znwm(i64 %37) #16
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %20, i64* %43, align 8
  br label %44

44:                                               ; preds = %36, %22
  %45 = phi i16* [ %23, %22 ], [ %39, %36 ]
  %46 = add nuw nsw i64 %20, 1
  %47 = add i64 %20, 1
  %48 = icmp ult i64 %47, 16
  br i1 %48, label %138, label %49

49:                                               ; preds = %44
  %50 = add i64 %20, 1
  %51 = getelementptr i16, i16* %45, i64 %50
  %52 = getelementptr i16, i16* %18, i64 %50
  %53 = icmp ult i16* %45, %52
  %54 = icmp ult i16* %18, %51
  %55 = and i1 %53, %54
  br i1 %55, label %138, label %56

56:                                               ; preds = %49
  %57 = and i64 %47, -16
  %58 = getelementptr i16, i16* %45, i64 %57
  %59 = sub i64 %46, %57
  %60 = getelementptr i16, i16* %18, i64 %57
  %61 = add i64 %57, -16
  %62 = lshr exact i64 %61, 4
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp ult i64 %61, 48
  br i1 %65, label %117, label %66

66:                                               ; preds = %56
  %67 = sub nsw i64 %63, %64
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i64 [ 0, %66 ], [ %114, %68 ]
  %70 = phi i64 [ %67, %66 ], [ %115, %68 ]
  %71 = getelementptr i16, i16* %45, i64 %69
  %72 = getelementptr i16, i16* %18, i64 %69
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !207
  %75 = getelementptr i16, i16* %72, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !207
  %78 = bitcast i16* %71 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %78, align 2, !alias.scope !210, !noalias !207
  %79 = getelementptr i16, i16* %71, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %80, align 2, !alias.scope !210, !noalias !207
  %81 = or i64 %69, 16
  %82 = getelementptr i16, i16* %45, i64 %81
  %83 = getelementptr i16, i16* %18, i64 %81
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !207
  %86 = getelementptr i16, i16* %83, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !207
  %89 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %89, align 2, !alias.scope !210, !noalias !207
  %90 = getelementptr i16, i16* %82, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %91, align 2, !alias.scope !210, !noalias !207
  %92 = or i64 %69, 32
  %93 = getelementptr i16, i16* %45, i64 %92
  %94 = getelementptr i16, i16* %18, i64 %92
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !207
  %97 = getelementptr i16, i16* %94, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !207
  %100 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %100, align 2, !alias.scope !210, !noalias !207
  %101 = getelementptr i16, i16* %93, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %102, align 2, !alias.scope !210, !noalias !207
  %103 = or i64 %69, 48
  %104 = getelementptr i16, i16* %45, i64 %103
  %105 = getelementptr i16, i16* %18, i64 %103
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !207
  %108 = getelementptr i16, i16* %105, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !207
  %111 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %111, align 2, !alias.scope !210, !noalias !207
  %112 = getelementptr i16, i16* %104, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %113, align 2, !alias.scope !210, !noalias !207
  %114 = add i64 %69, 64
  %115 = add i64 %70, -4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %68, !llvm.loop !212

117:                                              ; preds = %68, %56
  %118 = phi i64 [ 0, %56 ], [ %114, %68 ]
  %119 = icmp eq i64 %64, 0
  br i1 %119, label %136, label %120

120:                                              ; preds = %117, %120
  %121 = phi i64 [ %133, %120 ], [ %118, %117 ]
  %122 = phi i64 [ %134, %120 ], [ %64, %117 ]
  %123 = getelementptr i16, i16* %45, i64 %121
  %124 = getelementptr i16, i16* %18, i64 %121
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !207
  %127 = getelementptr i16, i16* %124, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !207
  %130 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %130, align 2, !alias.scope !210, !noalias !207
  %131 = getelementptr i16, i16* %123, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %132, align 2, !alias.scope !210, !noalias !207
  %133 = add i64 %121, 16
  %134 = add i64 %122, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %120, !llvm.loop !213

136:                                              ; preds = %120, %117
  %137 = icmp eq i64 %47, %57
  br i1 %137, label %191, label %138

138:                                              ; preds = %136, %49, %44
  %139 = phi i16* [ %45, %49 ], [ %45, %44 ], [ %58, %136 ]
  %140 = phi i64 [ %46, %49 ], [ %46, %44 ], [ %59, %136 ]
  %141 = phi i16* [ %18, %49 ], [ %18, %44 ], [ %60, %136 ]
  %142 = add i64 %140, -1
  %143 = and i64 %140, 7
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %138, %145
  %146 = phi i16* [ %152, %145 ], [ %139, %138 ]
  %147 = phi i64 [ %151, %145 ], [ %140, %138 ]
  %148 = phi i16* [ %153, %145 ], [ %141, %138 ]
  %149 = phi i64 [ %154, %145 ], [ %143, %138 ]
  %150 = load i16, i16* %148, align 2
  store i16 %150, i16* %146, align 2
  %151 = add i64 %147, -1
  %152 = getelementptr inbounds i16, i16* %146, i64 1
  %153 = getelementptr inbounds i16, i16* %148, i64 1
  %154 = add i64 %149, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %145, !llvm.loop !214

156:                                              ; preds = %145, %138
  %157 = phi i16* [ %139, %138 ], [ %152, %145 ]
  %158 = phi i64 [ %140, %138 ], [ %151, %145 ]
  %159 = phi i16* [ %141, %138 ], [ %153, %145 ]
  %160 = icmp ult i64 %142, 7
  br i1 %160, label %191, label %161

161:                                              ; preds = %156, %161
  %162 = phi i16* [ %188, %161 ], [ %157, %156 ]
  %163 = phi i64 [ %187, %161 ], [ %158, %156 ]
  %164 = phi i16* [ %189, %161 ], [ %159, %156 ]
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %162, align 2
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = getelementptr inbounds i16, i16* %164, i64 1
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %162, i64 2
  %170 = getelementptr inbounds i16, i16* %164, i64 2
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %162, i64 3
  %173 = getelementptr inbounds i16, i16* %164, i64 3
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %162, i64 4
  %176 = getelementptr inbounds i16, i16* %164, i64 4
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %162, i64 5
  %179 = getelementptr inbounds i16, i16* %164, i64 5
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %162, i64 6
  %182 = getelementptr inbounds i16, i16* %164, i64 6
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %162, i64 7
  %185 = getelementptr inbounds i16, i16* %164, i64 7
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %163, -8
  %188 = getelementptr inbounds i16, i16* %162, i64 8
  %189 = getelementptr inbounds i16, i16* %164, i64 8
  %190 = icmp eq i64 %187, 0
  br i1 %190, label %191, label %161, !llvm.loop !215

191:                                              ; preds = %156, %161, %136, %13
  %192 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 1
  %193 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %194 = load i64, i64* %193, align 8
  store i64 %194, i64* %192, align 8
  %195 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %196 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %195, i64 0, i32 1, i32 1
  %197 = load i8, i8* %196, align 1
  %198 = icmp slt i8 %197, 0
  br i1 %198, label %202, label %199

199:                                              ; preds = %191
  %200 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  %201 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %200, i8* align 8 %201, i64 24, i1 false) #15
  br label %377

202:                                              ; preds = %191
  %203 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load i16*, i16** %203, align 8
  %205 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %206 = load i64, i64* %205, align 8
  %207 = icmp ult i64 %206, 11
  br i1 %207, label %208, label %213

208:                                              ; preds = %202
  %209 = bitcast %"class.v8_inspector::String16"* %7 to i16*
  %210 = trunc i64 %206 to i8
  %211 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %211, i64 0, i32 1, i32 1
  store i8 %210, i8* %212, align 1
  br label %230

213:                                              ; preds = %202
  %214 = icmp ugt i64 %206, 9223372036854775791
  br i1 %214, label %215, label %217

215:                                              ; preds = %213
  %216 = bitcast %"class.v8_inspector::String16"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %216) #14
  unreachable

217:                                              ; preds = %213
  %218 = add nuw nsw i64 %206, 8
  %219 = and i64 %218, -8
  %220 = icmp slt i64 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %217
  call void @abort() #14
  unreachable

222:                                              ; preds = %217
  %223 = shl i64 %219, 1
  %224 = call i8* @_Znwm(i64 %223) #16
  %225 = bitcast i8* %224 to i16*
  %226 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  store i8* %224, i8** %226, align 8
  %227 = or i64 %219, -9223372036854775808
  %228 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %227, i64* %228, align 8
  %229 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %206, i64* %229, align 8
  br label %230

230:                                              ; preds = %222, %208
  %231 = phi i16* [ %209, %208 ], [ %225, %222 ]
  %232 = add nuw nsw i64 %206, 1
  %233 = add i64 %206, 1
  %234 = icmp ult i64 %233, 16
  br i1 %234, label %324, label %235

235:                                              ; preds = %230
  %236 = add i64 %206, 1
  %237 = getelementptr i16, i16* %231, i64 %236
  %238 = getelementptr i16, i16* %204, i64 %236
  %239 = icmp ult i16* %231, %238
  %240 = icmp ult i16* %204, %237
  %241 = and i1 %239, %240
  br i1 %241, label %324, label %242

242:                                              ; preds = %235
  %243 = and i64 %233, -16
  %244 = getelementptr i16, i16* %231, i64 %243
  %245 = sub i64 %232, %243
  %246 = getelementptr i16, i16* %204, i64 %243
  %247 = add i64 %243, -16
  %248 = lshr exact i64 %247, 4
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp ult i64 %247, 48
  br i1 %251, label %303, label %252

252:                                              ; preds = %242
  %253 = sub nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %300, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %301, %254 ]
  %257 = getelementptr i16, i16* %231, i64 %255
  %258 = getelementptr i16, i16* %204, i64 %255
  %259 = bitcast i16* %258 to <8 x i16>*
  %260 = load <8 x i16>, <8 x i16>* %259, align 2, !alias.scope !216
  %261 = getelementptr i16, i16* %258, i64 8
  %262 = bitcast i16* %261 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !216
  %264 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %260, <8 x i16>* %264, align 2, !alias.scope !219, !noalias !216
  %265 = getelementptr i16, i16* %257, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %266, align 2, !alias.scope !219, !noalias !216
  %267 = or i64 %255, 16
  %268 = getelementptr i16, i16* %231, i64 %267
  %269 = getelementptr i16, i16* %204, i64 %267
  %270 = bitcast i16* %269 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !216
  %272 = getelementptr i16, i16* %269, i64 8
  %273 = bitcast i16* %272 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !216
  %275 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %271, <8 x i16>* %275, align 2, !alias.scope !219, !noalias !216
  %276 = getelementptr i16, i16* %268, i64 8
  %277 = bitcast i16* %276 to <8 x i16>*
  store <8 x i16> %274, <8 x i16>* %277, align 2, !alias.scope !219, !noalias !216
  %278 = or i64 %255, 32
  %279 = getelementptr i16, i16* %231, i64 %278
  %280 = getelementptr i16, i16* %204, i64 %278
  %281 = bitcast i16* %280 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !216
  %283 = getelementptr i16, i16* %280, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !216
  %286 = bitcast i16* %279 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !219, !noalias !216
  %287 = getelementptr i16, i16* %279, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !219, !noalias !216
  %289 = or i64 %255, 48
  %290 = getelementptr i16, i16* %231, i64 %289
  %291 = getelementptr i16, i16* %204, i64 %289
  %292 = bitcast i16* %291 to <8 x i16>*
  %293 = load <8 x i16>, <8 x i16>* %292, align 2, !alias.scope !216
  %294 = getelementptr i16, i16* %291, i64 8
  %295 = bitcast i16* %294 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !216
  %297 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %293, <8 x i16>* %297, align 2, !alias.scope !219, !noalias !216
  %298 = getelementptr i16, i16* %290, i64 8
  %299 = bitcast i16* %298 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %299, align 2, !alias.scope !219, !noalias !216
  %300 = add i64 %255, 64
  %301 = add i64 %256, -4
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %254, !llvm.loop !221

303:                                              ; preds = %254, %242
  %304 = phi i64 [ 0, %242 ], [ %300, %254 ]
  %305 = icmp eq i64 %250, 0
  br i1 %305, label %322, label %306

306:                                              ; preds = %303, %306
  %307 = phi i64 [ %319, %306 ], [ %304, %303 ]
  %308 = phi i64 [ %320, %306 ], [ %250, %303 ]
  %309 = getelementptr i16, i16* %231, i64 %307
  %310 = getelementptr i16, i16* %204, i64 %307
  %311 = bitcast i16* %310 to <8 x i16>*
  %312 = load <8 x i16>, <8 x i16>* %311, align 2, !alias.scope !216
  %313 = getelementptr i16, i16* %310, i64 8
  %314 = bitcast i16* %313 to <8 x i16>*
  %315 = load <8 x i16>, <8 x i16>* %314, align 2, !alias.scope !216
  %316 = bitcast i16* %309 to <8 x i16>*
  store <8 x i16> %312, <8 x i16>* %316, align 2, !alias.scope !219, !noalias !216
  %317 = getelementptr i16, i16* %309, i64 8
  %318 = bitcast i16* %317 to <8 x i16>*
  store <8 x i16> %315, <8 x i16>* %318, align 2, !alias.scope !219, !noalias !216
  %319 = add i64 %307, 16
  %320 = add i64 %308, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %306, !llvm.loop !222

322:                                              ; preds = %306, %303
  %323 = icmp eq i64 %233, %243
  br i1 %323, label %377, label %324

324:                                              ; preds = %322, %235, %230
  %325 = phi i16* [ %231, %235 ], [ %231, %230 ], [ %244, %322 ]
  %326 = phi i64 [ %232, %235 ], [ %232, %230 ], [ %245, %322 ]
  %327 = phi i16* [ %204, %235 ], [ %204, %230 ], [ %246, %322 ]
  %328 = add i64 %326, -1
  %329 = and i64 %326, 7
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %342, label %331

331:                                              ; preds = %324, %331
  %332 = phi i16* [ %338, %331 ], [ %325, %324 ]
  %333 = phi i64 [ %337, %331 ], [ %326, %324 ]
  %334 = phi i16* [ %339, %331 ], [ %327, %324 ]
  %335 = phi i64 [ %340, %331 ], [ %329, %324 ]
  %336 = load i16, i16* %334, align 2
  store i16 %336, i16* %332, align 2
  %337 = add i64 %333, -1
  %338 = getelementptr inbounds i16, i16* %332, i64 1
  %339 = getelementptr inbounds i16, i16* %334, i64 1
  %340 = add i64 %335, -1
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %342, label %331, !llvm.loop !223

342:                                              ; preds = %331, %324
  %343 = phi i16* [ %325, %324 ], [ %338, %331 ]
  %344 = phi i64 [ %326, %324 ], [ %337, %331 ]
  %345 = phi i16* [ %327, %324 ], [ %339, %331 ]
  %346 = icmp ult i64 %328, 7
  br i1 %346, label %377, label %347

347:                                              ; preds = %342, %347
  %348 = phi i16* [ %374, %347 ], [ %343, %342 ]
  %349 = phi i64 [ %373, %347 ], [ %344, %342 ]
  %350 = phi i16* [ %375, %347 ], [ %345, %342 ]
  %351 = load i16, i16* %350, align 2
  store i16 %351, i16* %348, align 2
  %352 = getelementptr inbounds i16, i16* %348, i64 1
  %353 = getelementptr inbounds i16, i16* %350, i64 1
  %354 = load i16, i16* %353, align 2
  store i16 %354, i16* %352, align 2
  %355 = getelementptr inbounds i16, i16* %348, i64 2
  %356 = getelementptr inbounds i16, i16* %350, i64 2
  %357 = load i16, i16* %356, align 2
  store i16 %357, i16* %355, align 2
  %358 = getelementptr inbounds i16, i16* %348, i64 3
  %359 = getelementptr inbounds i16, i16* %350, i64 3
  %360 = load i16, i16* %359, align 2
  store i16 %360, i16* %358, align 2
  %361 = getelementptr inbounds i16, i16* %348, i64 4
  %362 = getelementptr inbounds i16, i16* %350, i64 4
  %363 = load i16, i16* %362, align 2
  store i16 %363, i16* %361, align 2
  %364 = getelementptr inbounds i16, i16* %348, i64 5
  %365 = getelementptr inbounds i16, i16* %350, i64 5
  %366 = load i16, i16* %365, align 2
  store i16 %366, i16* %364, align 2
  %367 = getelementptr inbounds i16, i16* %348, i64 6
  %368 = getelementptr inbounds i16, i16* %350, i64 6
  %369 = load i16, i16* %368, align 2
  store i16 %369, i16* %367, align 2
  %370 = getelementptr inbounds i16, i16* %348, i64 7
  %371 = getelementptr inbounds i16, i16* %350, i64 7
  %372 = load i16, i16* %371, align 2
  store i16 %372, i16* %370, align 2
  %373 = add i64 %349, -8
  %374 = getelementptr inbounds i16, i16* %348, i64 8
  %375 = getelementptr inbounds i16, i16* %350, i64 8
  %376 = icmp eq i64 %373, 0
  br i1 %376, label %377, label %347, !llvm.loop !224

377:                                              ; preds = %342, %347, %322, %199
  %378 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 1
  %379 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %380 = load i64, i64* %379, align 8
  store i64 %380, i64* %378, align 8
  call void @_ZN12v8_inspector15String16Builder9appendAllINS_8String16EJcS2_EEEvT_DpT0_(%"class.v8_inspector::String16Builder"* nonnull %5, %"class.v8_inspector::String16"* nonnull %6, i8 signext %2, %"class.v8_inspector::String16"* nonnull %7)
  %381 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %382 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %381, i64 0, i32 1, i32 1
  %383 = load i8, i8* %382, align 1
  %384 = icmp slt i8 %383, 0
  br i1 %384, label %385, label %388

385:                                              ; preds = %377
  %386 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %387 = load i8*, i8** %386, align 8
  call void @_ZdlPv(i8* %387) #16
  br label %388

388:                                              ; preds = %377, %385
  %389 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %390 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %389, i64 0, i32 1, i32 1
  %391 = load i8, i8* %390, align 1
  %392 = icmp slt i8 %391, 0
  br i1 %392, label %393, label %396

393:                                              ; preds = %388
  %394 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %395 = load i8*, i8** %394, align 8
  call void @_ZdlPv(i8* %395) #16
  br label %396

396:                                              ; preds = %388, %393
  call void @_ZN12v8_inspector15String16Builder8toStringEv(%"class.v8_inspector::String16"* sret %0, %"class.v8_inspector::String16Builder"* nonnull %5) #15
  %397 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %5, i64 0, i32 0, i32 0, i32 0
  %398 = load i16*, i16** %397, align 8
  %399 = icmp eq i16* %398, null
  br i1 %399, label %405, label %400

400:                                              ; preds = %396
  %401 = ptrtoint i16* %398 to i64
  %402 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %5, i64 0, i32 0, i32 0, i32 1
  %403 = bitcast i16** %402 to i64*
  store i64 %401, i64* %403, align 8
  %404 = bitcast i16* %398 to i8*
  call void @_ZdlPv(i8* %404) #16
  br label %405

405:                                              ; preds = %396, %400
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #15
  ret void
}

declare i32 @_ZNK2v86String6LengthEv(%"class.v8::String"*) local_unnamed_addr #4

declare void @_ZN12v8_inspector15String16BuilderC1Ev(%"class.v8_inspector::String16Builder"*) unnamed_addr #4

declare void @_ZN12v8_inspector15String16Builder6appendEc(%"class.v8_inspector::String16Builder"*, i8 signext) local_unnamed_addr #4

declare void @_ZN12v8_inspector15String16Builder6appendEt(%"class.v8_inspector::String16Builder"*, i16 zeroext) local_unnamed_addr #4

declare void @_ZN12v8_inspector15String16Builder8toStringEv(%"class.v8_inspector::String16"* sret, %"class.v8_inspector::String16Builder"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8String166concatIJPKcS0_cEEES0_DpT_(%"class.v8_inspector::String16"* noalias sret, i8*, %"class.v8_inspector::String16"*, i8 signext) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.v8_inspector::String16Builder", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = bitcast %"class.v8_inspector::String16Builder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  call void @_ZN12v8_inspector15String16BuilderC1Ev(%"class.v8_inspector::String16Builder"* nonnull %5) #15
  %8 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %4
  %13 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  %14 = bitcast %"class.v8_inspector::String16"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %14, i64 24, i1 false) #15
  br label %190

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %19, 11
  br i1 %20, label %21, label %26

21:                                               ; preds = %15
  %22 = bitcast %"class.v8_inspector::String16"* %6 to i16*
  %23 = trunc i64 %19 to i8
  %24 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %24, i64 0, i32 1, i32 1
  store i8 %23, i8* %25, align 1
  br label %43

26:                                               ; preds = %15
  %27 = icmp ugt i64 %19, 9223372036854775791
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.v8_inspector::String16"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #14
  unreachable

30:                                               ; preds = %26
  %31 = add nuw nsw i64 %19, 8
  %32 = and i64 %31, -8
  %33 = icmp slt i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  call void @abort() #14
  unreachable

35:                                               ; preds = %30
  %36 = shl i64 %32, 1
  %37 = call i8* @_Znwm(i64 %36) #16
  %38 = bitcast i8* %37 to i16*
  %39 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  store i8* %37, i8** %39, align 8
  %40 = or i64 %32, -9223372036854775808
  %41 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %42, align 8
  br label %43

43:                                               ; preds = %35, %21
  %44 = phi i16* [ %22, %21 ], [ %38, %35 ]
  %45 = add nuw nsw i64 %19, 1
  %46 = add i64 %19, 1
  %47 = icmp ult i64 %46, 16
  br i1 %47, label %137, label %48

48:                                               ; preds = %43
  %49 = add i64 %19, 1
  %50 = getelementptr i16, i16* %44, i64 %49
  %51 = getelementptr i16, i16* %17, i64 %49
  %52 = icmp ult i16* %44, %51
  %53 = icmp ult i16* %17, %50
  %54 = and i1 %52, %53
  br i1 %54, label %137, label %55

55:                                               ; preds = %48
  %56 = and i64 %46, -16
  %57 = getelementptr i16, i16* %44, i64 %56
  %58 = sub i64 %45, %56
  %59 = getelementptr i16, i16* %17, i64 %56
  %60 = add i64 %56, -16
  %61 = lshr exact i64 %60, 4
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 3
  %64 = icmp ult i64 %60, 48
  br i1 %64, label %116, label %65

65:                                               ; preds = %55
  %66 = sub nsw i64 %62, %63
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i64 [ 0, %65 ], [ %113, %67 ]
  %69 = phi i64 [ %66, %65 ], [ %114, %67 ]
  %70 = getelementptr i16, i16* %44, i64 %68
  %71 = getelementptr i16, i16* %17, i64 %68
  %72 = bitcast i16* %71 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !225
  %74 = getelementptr i16, i16* %71, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !225
  %77 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %77, align 2, !alias.scope !228, !noalias !225
  %78 = getelementptr i16, i16* %70, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %79, align 2, !alias.scope !228, !noalias !225
  %80 = or i64 %68, 16
  %81 = getelementptr i16, i16* %44, i64 %80
  %82 = getelementptr i16, i16* %17, i64 %80
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !225
  %85 = getelementptr i16, i16* %82, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !225
  %88 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %88, align 2, !alias.scope !228, !noalias !225
  %89 = getelementptr i16, i16* %81, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %90, align 2, !alias.scope !228, !noalias !225
  %91 = or i64 %68, 32
  %92 = getelementptr i16, i16* %44, i64 %91
  %93 = getelementptr i16, i16* %17, i64 %91
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !225
  %96 = getelementptr i16, i16* %93, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !225
  %99 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %99, align 2, !alias.scope !228, !noalias !225
  %100 = getelementptr i16, i16* %92, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %101, align 2, !alias.scope !228, !noalias !225
  %102 = or i64 %68, 48
  %103 = getelementptr i16, i16* %44, i64 %102
  %104 = getelementptr i16, i16* %17, i64 %102
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !225
  %107 = getelementptr i16, i16* %104, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !225
  %110 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %110, align 2, !alias.scope !228, !noalias !225
  %111 = getelementptr i16, i16* %103, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !228, !noalias !225
  %113 = add i64 %68, 64
  %114 = add i64 %69, -4
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %67, !llvm.loop !230

116:                                              ; preds = %67, %55
  %117 = phi i64 [ 0, %55 ], [ %113, %67 ]
  %118 = icmp eq i64 %63, 0
  br i1 %118, label %135, label %119

119:                                              ; preds = %116, %119
  %120 = phi i64 [ %132, %119 ], [ %117, %116 ]
  %121 = phi i64 [ %133, %119 ], [ %63, %116 ]
  %122 = getelementptr i16, i16* %44, i64 %120
  %123 = getelementptr i16, i16* %17, i64 %120
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !225
  %126 = getelementptr i16, i16* %123, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !225
  %129 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %129, align 2, !alias.scope !228, !noalias !225
  %130 = getelementptr i16, i16* %122, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %131, align 2, !alias.scope !228, !noalias !225
  %132 = add i64 %120, 16
  %133 = add i64 %121, -1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %119, !llvm.loop !231

135:                                              ; preds = %119, %116
  %136 = icmp eq i64 %46, %56
  br i1 %136, label %190, label %137

137:                                              ; preds = %135, %48, %43
  %138 = phi i16* [ %44, %48 ], [ %44, %43 ], [ %57, %135 ]
  %139 = phi i64 [ %45, %48 ], [ %45, %43 ], [ %58, %135 ]
  %140 = phi i16* [ %17, %48 ], [ %17, %43 ], [ %59, %135 ]
  %141 = add i64 %139, -1
  %142 = and i64 %139, 7
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %155, label %144

144:                                              ; preds = %137, %144
  %145 = phi i16* [ %151, %144 ], [ %138, %137 ]
  %146 = phi i64 [ %150, %144 ], [ %139, %137 ]
  %147 = phi i16* [ %152, %144 ], [ %140, %137 ]
  %148 = phi i64 [ %153, %144 ], [ %142, %137 ]
  %149 = load i16, i16* %147, align 2
  store i16 %149, i16* %145, align 2
  %150 = add i64 %146, -1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = getelementptr inbounds i16, i16* %147, i64 1
  %153 = add i64 %148, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %144, !llvm.loop !232

155:                                              ; preds = %144, %137
  %156 = phi i16* [ %138, %137 ], [ %151, %144 ]
  %157 = phi i64 [ %139, %137 ], [ %150, %144 ]
  %158 = phi i16* [ %140, %137 ], [ %152, %144 ]
  %159 = icmp ult i64 %141, 7
  br i1 %159, label %190, label %160

160:                                              ; preds = %155, %160
  %161 = phi i16* [ %187, %160 ], [ %156, %155 ]
  %162 = phi i64 [ %186, %160 ], [ %157, %155 ]
  %163 = phi i16* [ %188, %160 ], [ %158, %155 ]
  %164 = load i16, i16* %163, align 2
  store i16 %164, i16* %161, align 2
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = getelementptr inbounds i16, i16* %163, i64 1
  %167 = load i16, i16* %166, align 2
  store i16 %167, i16* %165, align 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = getelementptr inbounds i16, i16* %163, i64 2
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = getelementptr inbounds i16, i16* %163, i64 3
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = getelementptr inbounds i16, i16* %163, i64 4
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = getelementptr inbounds i16, i16* %163, i64 5
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = getelementptr inbounds i16, i16* %163, i64 6
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = getelementptr inbounds i16, i16* %163, i64 7
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = add i64 %162, -8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = getelementptr inbounds i16, i16* %163, i64 8
  %189 = icmp eq i64 %186, 0
  br i1 %189, label %190, label %160, !llvm.loop !233

190:                                              ; preds = %155, %160, %135, %12
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 1
  %192 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 1
  %193 = load i64, i64* %192, align 8
  store i64 %193, i64* %191, align 8
  call void @_ZN12v8_inspector15String16Builder9appendAllIPKcJNS_8String16EcEEEvT_DpT0_(%"class.v8_inspector::String16Builder"* nonnull %5, i8* %1, %"class.v8_inspector::String16"* nonnull %6, i8 signext %3)
  %194 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %194, i64 0, i32 1, i32 1
  %196 = load i8, i8* %195, align 1
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %198, label %201

198:                                              ; preds = %190
  %199 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %200 = load i8*, i8** %199, align 8
  call void @_ZdlPv(i8* %200) #16
  br label %201

201:                                              ; preds = %190, %198
  call void @_ZN12v8_inspector15String16Builder8toStringEv(%"class.v8_inspector::String16"* sret %0, %"class.v8_inspector::String16Builder"* nonnull %5) #15
  %202 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %5, i64 0, i32 0, i32 0, i32 0
  %203 = load i16*, i16** %202, align 8
  %204 = icmp eq i16* %203, null
  br i1 %204, label %210, label %205

205:                                              ; preds = %201
  %206 = ptrtoint i16* %203 to i64
  %207 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %5, i64 0, i32 0, i32 0, i32 1
  %208 = bitcast i16** %207 to i64*
  store i64 %206, i64* %208, align 8
  %209 = bitcast i16* %203 to i8*
  call void @_ZdlPv(i8* %209) #16
  br label %210

210:                                              ; preds = %201, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector12clientMirrorEN2v85LocalINS0_7ContextEEENS1_INS0_5ValueEEERKNS_8String16E(%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::String16"* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 {
  %4 = alloca %"class.v8_inspector::String16", align 8
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::StringView", align 8
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = alloca %"class.v8_inspector::String16", align 8
  %10 = alloca %"class.v8_inspector::String16", align 8
  %11 = alloca %"class.v8_inspector::String16", align 8
  %12 = alloca %"class.v8_inspector::String16", align 8
  %13 = alloca %"class.v8::TryCatch", align 8
  %14 = alloca %"class.v8_inspector::String16", align 8
  %15 = alloca %"class.v8_inspector::String16", align 8
  %16 = alloca %"class.v8_inspector::String16", align 8
  %17 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15
  %18 = tail call %"class.v8_inspector::V8Inspector"* @_ZN2v85debug12GetInspectorEPNS_7IsolateE(%"class.v8::Isolate"* %17) #15
  %19 = getelementptr inbounds %"class.v8_inspector::V8Inspector", %"class.v8_inspector::V8Inspector"* %18, i64 2
  %20 = bitcast %"class.v8_inspector::V8Inspector"* %19 to %"class.v8_inspector::V8InspectorClient"**
  %21 = load %"class.v8_inspector::V8InspectorClient"*, %"class.v8_inspector::V8InspectorClient"** %20, align 8
  %22 = bitcast %"class.v8_inspector::V8InspectorClient"* %21 to %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Context"*, %"class.v8::Value"*)***
  %23 = load %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Context"*, %"class.v8::Value"*)**, %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Context"*, %"class.v8::Value"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Context"*, %"class.v8::Value"*)*, %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Context"*, %"class.v8::Value"*)** %23, i64 10
  %25 = load %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Context"*, %"class.v8::Value"*)*, %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Context"*, %"class.v8::Value"*)** %24, align 8
  %26 = tail call %"class.v8_inspector::StringBuffer"* %25(%"class.v8_inspector::V8InspectorClient"* %21, %"class.v8::Context"* %0, %"class.v8::Value"* %1) #15
  %27 = icmp eq %"class.v8_inspector::StringBuffer"* %26, null
  br i1 %27, label %44, label %28

28:                                               ; preds = %3
  %29 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #15
  %30 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #15
  %31 = bitcast %"class.v8_inspector::StringBuffer"* %26 to void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)***
  %32 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)**, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)** %32, i64 2
  %34 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)** %33, align 8
  call void %34(%"class.v8_inspector::StringView"* nonnull sret %7, %"class.v8_inspector::StringBuffer"* nonnull %26) #15
  call void @_ZN12v8_inspector10toString16ERKNS_10StringViewE(%"class.v8_inspector::String16"* nonnull sret %6, %"class.v8_inspector::StringView"* nonnull dereferenceable(24) %7) #15
  %35 = call i8* @_Znwm(i64 88) #16
  %36 = bitcast i8* %35 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %36, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* dereferenceable(32) %2, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %6) #15
  %37 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %478

41:                                               ; preds = %28
  %42 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #16
  br label %478

44:                                               ; preds = %3
  %45 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0)) #15
  %46 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %46, i64 0, i32 1, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  %50 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = zext i8 %48 to i64
  %53 = select i1 %49, i64 %51, i64 %52
  %54 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %54, i64 0, i32 1, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  %58 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = zext i8 %56 to i64
  %61 = select i1 %57, i64 %59, i64 %60
  %62 = icmp eq i64 %53, %61
  br i1 %62, label %63, label %86

63:                                               ; preds = %44
  %64 = icmp eq i64 %53, 0
  br i1 %64, label %86, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i16*, i16** %66, align 8
  %68 = bitcast %"class.v8_inspector::String16"* %8 to i16*
  %69 = select i1 %57, i16* %67, i16* %68
  %70 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i16*, i16** %70, align 8
  %72 = bitcast %"class.v8_inspector::String16"* %2 to i16*
  %73 = select i1 %49, i16* %71, i16* %72
  br label %74

74:                                               ; preds = %81, %65
  %75 = phi i64 [ %82, %81 ], [ %53, %65 ]
  %76 = phi i16* [ %84, %81 ], [ %69, %65 ]
  %77 = phi i16* [ %83, %81 ], [ %73, %65 ]
  %78 = load i16, i16* %77, align 2
  %79 = load i16, i16* %76, align 2
  %80 = icmp eq i16 %79, %78
  br i1 %80, label %81, label %86

81:                                               ; preds = %74
  %82 = add i64 %75, -1
  %83 = getelementptr inbounds i16, i16* %77, i64 1
  %84 = getelementptr inbounds i16, i16* %76, i64 1
  %85 = icmp eq i64 %82, 0
  br i1 %85, label %86, label %74

86:                                               ; preds = %74, %81, %44, %63
  %87 = phi i1 [ false, %44 ], [ true, %63 ], [ false, %74 ], [ true, %81 ]
  br i1 %57, label %88, label %91

88:                                               ; preds = %86
  %89 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %90 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %90) #16
  br label %91

91:                                               ; preds = %86, %88
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45) #15
  br i1 %87, label %92, label %104

92:                                               ; preds = %91
  %93 = bitcast %"class.v8_inspector::String16"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %93) #15
  call void @_ZN12v8_inspector18descriptionForNodeEN2v85LocalINS0_7ContextEEENS1_INS0_5ValueEEE(%"class.v8_inspector::String16"* nonnull sret %9, %"class.v8::Context"* %0, %"class.v8::Value"* %1)
  %94 = call i8* @_Znwm(i64 88) #16
  %95 = bitcast i8* %94 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %95, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* dereferenceable(32) %2, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %9) #15
  %96 = bitcast %"class.v8_inspector::String16"* %9 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %96, i64 0, i32 1, i32 1
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %92
  %101 = bitcast %"class.v8_inspector::String16"* %9 to i8**
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #16
  br label %103

103:                                              ; preds = %92, %100
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %93) #15
  br label %483

104:                                              ; preds = %91
  %105 = bitcast %"class.v8_inspector::String16"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %105) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #15
  %106 = load i8, i8* %47, align 1
  %107 = icmp slt i8 %106, 0
  %108 = load i64, i64* %50, align 8
  %109 = zext i8 %106 to i64
  %110 = select i1 %107, i64 %108, i64 %109
  %111 = bitcast %"class.v8_inspector::String16"* %10 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %111, i64 0, i32 1, i32 1
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  %115 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %116 = load i64, i64* %115, align 8
  %117 = zext i8 %113 to i64
  %118 = select i1 %114, i64 %116, i64 %117
  %119 = icmp eq i64 %110, %118
  br i1 %119, label %120, label %143

120:                                              ; preds = %104
  %121 = icmp eq i64 %110, 0
  br i1 %121, label %143, label %122

122:                                              ; preds = %120
  %123 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i16*, i16** %123, align 8
  %125 = bitcast %"class.v8_inspector::String16"* %10 to i16*
  %126 = select i1 %114, i16* %124, i16* %125
  %127 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i16*, i16** %127, align 8
  %129 = bitcast %"class.v8_inspector::String16"* %2 to i16*
  %130 = select i1 %107, i16* %128, i16* %129
  br label %131

131:                                              ; preds = %138, %122
  %132 = phi i64 [ %139, %138 ], [ %110, %122 ]
  %133 = phi i16* [ %141, %138 ], [ %126, %122 ]
  %134 = phi i16* [ %140, %138 ], [ %130, %122 ]
  %135 = load i16, i16* %134, align 2
  %136 = load i16, i16* %133, align 2
  %137 = icmp eq i16 %136, %135
  br i1 %137, label %138, label %143

138:                                              ; preds = %131
  %139 = add i64 %132, -1
  %140 = getelementptr inbounds i16, i16* %134, i64 1
  %141 = getelementptr inbounds i16, i16* %133, i64 1
  %142 = icmp eq i64 %139, 0
  br i1 %142, label %143, label %131

143:                                              ; preds = %131, %138, %104, %120
  %144 = phi i1 [ false, %104 ], [ true, %120 ], [ false, %131 ], [ true, %138 ]
  br i1 %114, label %145, label %148

145:                                              ; preds = %143
  %146 = bitcast %"class.v8_inspector::String16"* %10 to i8**
  %147 = load i8*, i8** %146, align 8
  call void @_ZdlPv(i8* %147) #16
  br label %148

148:                                              ; preds = %143, %145
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %105) #15
  br i1 %144, label %149, label %172

149:                                              ; preds = %148
  %150 = bitcast %"class.v8_inspector::String16"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %150) #15
  %151 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_119descriptionForErrorEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEENS0_9ErrorTypeE(%"class.v8_inspector::String16"* noalias nonnull %11, %"class.v8::Context"* %0, %"class.v8::Object"* %151, i32 1)
  %152 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum5ErrorE, align 8
  %153 = call i8* @_Znwm(i64 88) #16
  %154 = bitcast i8* %153 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %155 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %155) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %5, i8* %152) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %154, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %5, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %11) #15
  %156 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %156, i64 0, i32 1, i32 1
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %149
  %161 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %162 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %162) #16
  br label %163

163:                                              ; preds = %160, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %155) #15
  %164 = bitcast %"class.v8_inspector::String16"* %11 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %165 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %164, i64 0, i32 1, i32 1
  %166 = load i8, i8* %165, align 1
  %167 = icmp slt i8 %166, 0
  br i1 %167, label %168, label %171

168:                                              ; preds = %163
  %169 = bitcast %"class.v8_inspector::String16"* %11 to i8**
  %170 = load i8*, i8** %169, align 8
  call void @_ZdlPv(i8* %170) #16
  br label %171

171:                                              ; preds = %163, %168
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %150) #15
  br label %483

172:                                              ; preds = %148
  %173 = bitcast %"class.v8_inspector::String16"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %173) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0)) #15
  %174 = load i8, i8* %47, align 1
  %175 = icmp slt i8 %174, 0
  %176 = load i64, i64* %50, align 8
  %177 = zext i8 %174 to i64
  %178 = select i1 %175, i64 %176, i64 %177
  %179 = bitcast %"class.v8_inspector::String16"* %12 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %180 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %179, i64 0, i32 1, i32 1
  %181 = load i8, i8* %180, align 1
  %182 = icmp slt i8 %181, 0
  %183 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = zext i8 %181 to i64
  %186 = select i1 %182, i64 %184, i64 %185
  %187 = icmp eq i64 %178, %186
  br i1 %187, label %188, label %264

188:                                              ; preds = %172
  %189 = icmp eq i64 %178, 0
  br i1 %189, label %211, label %190

190:                                              ; preds = %188
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load i16*, i16** %191, align 8
  %193 = bitcast %"class.v8_inspector::String16"* %12 to i16*
  %194 = select i1 %182, i16* %192, i16* %193
  %195 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load i16*, i16** %195, align 8
  %197 = bitcast %"class.v8_inspector::String16"* %2 to i16*
  %198 = select i1 %175, i16* %196, i16* %197
  br label %199

199:                                              ; preds = %206, %190
  %200 = phi i64 [ %207, %206 ], [ %178, %190 ]
  %201 = phi i16* [ %209, %206 ], [ %194, %190 ]
  %202 = phi i16* [ %208, %206 ], [ %198, %190 ]
  %203 = load i16, i16* %202, align 2
  %204 = load i16, i16* %201, align 2
  %205 = icmp eq i16 %204, %203
  br i1 %205, label %206, label %264

206:                                              ; preds = %199
  %207 = add i64 %200, -1
  %208 = getelementptr inbounds i16, i16* %202, i64 1
  %209 = getelementptr inbounds i16, i16* %201, i64 1
  %210 = icmp eq i64 %207, 0
  br i1 %210, label %211, label %199

211:                                              ; preds = %206, %188
  %212 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %1) #15
  %213 = load i8, i8* %180, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %218

215:                                              ; preds = %211
  %216 = bitcast %"class.v8_inspector::String16"* %12 to i8**
  %217 = load i8*, i8** %216, align 8
  call void @_ZdlPv(i8* %217) #16
  br label %218

218:                                              ; preds = %211, %215
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %173) #15
  br i1 %212, label %219, label %269

219:                                              ; preds = %218
  %220 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15
  %221 = bitcast %"class.v8::TryCatch"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %221) #15
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %13, %"class.v8::Isolate"* %220) #15
  %222 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %223 = bitcast %"class.v8_inspector::String16"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %223) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #15
  %224 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %220, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %14) #15
  %225 = bitcast %"class.v8::String"* %224 to %"class.v8::Value"*
  %226 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %222, %"class.v8::Context"* %0, %"class.v8::Value"* %225) #15
  %227 = icmp eq %"class.v8::Value"* %226, null
  %228 = bitcast %"class.v8_inspector::String16"* %14 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %229 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %228, i64 0, i32 1, i32 1
  %230 = load i8, i8* %229, align 1
  %231 = icmp slt i8 %230, 0
  br i1 %231, label %232, label %235

232:                                              ; preds = %219
  %233 = bitcast %"class.v8_inspector::String16"* %14 to i8**
  %234 = load i8*, i8** %233, align 8
  call void @_ZdlPv(i8* %234) #16
  br label %235

235:                                              ; preds = %219, %232
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %223) #15
  br i1 %227, label %263, label %236

236:                                              ; preds = %235
  %237 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %226) #15
  br i1 %237, label %238, label %263

238:                                              ; preds = %236
  %239 = bitcast %"class.v8_inspector::String16"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %239) #15
  %240 = bitcast %"class.v8::Value"* %226 to %"class.v8::Int32"*
  %241 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %240) #15
  %242 = sext i32 %241 to i64
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_124descriptionForCollectionEPN2v87IsolateENS1_5LocalINS1_6ObjectEEEm(%"class.v8_inspector::String16"* noalias nonnull %15, %"class.v8::Isolate"* %220, %"class.v8::Object"* %222, i64 %242)
  %243 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum5ArrayE, align 8
  %244 = call i8* @_Znwm(i64 88) #16
  %245 = bitcast i8* %244 to %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*
  %246 = bitcast %"class.v8_inspector::String16"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %246) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %4, i8* %243) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nonnull %245, %"class.v8::Value"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %4, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %15) #15
  %247 = bitcast %"class.v8_inspector::String16"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %248 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %247, i64 0, i32 1, i32 1
  %249 = load i8, i8* %248, align 1
  %250 = icmp slt i8 %249, 0
  br i1 %250, label %251, label %254

251:                                              ; preds = %238
  %252 = bitcast %"class.v8_inspector::String16"* %4 to i8**
  %253 = load i8*, i8** %252, align 8
  call void @_ZdlPv(i8* %253) #16
  br label %254

254:                                              ; preds = %251, %238
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %246) #15
  %255 = bitcast %"class.v8_inspector::String16"* %15 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %256 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %255, i64 0, i32 1, i32 1
  %257 = load i8, i8* %256, align 1
  %258 = icmp slt i8 %257, 0
  br i1 %258, label %259, label %262

259:                                              ; preds = %254
  %260 = bitcast %"class.v8_inspector::String16"* %15 to i8**
  %261 = load i8*, i8** %260, align 8
  call void @_ZdlPv(i8* %261) #16
  br label %262

262:                                              ; preds = %254, %259
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %239) #15
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %221) #15
  br label %483

263:                                              ; preds = %235, %236
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %221) #15
  br label %269

264:                                              ; preds = %199, %172
  br i1 %182, label %265, label %268

265:                                              ; preds = %264
  %266 = bitcast %"class.v8_inspector::String16"* %12 to i8**
  %267 = load i8*, i8** %266, align 8
  call void @_ZdlPv(i8* %267) #16
  br label %268

268:                                              ; preds = %264, %265
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %173) #15
  br label %269

269:                                              ; preds = %263, %268, %218
  %270 = bitcast %"class.v8_inspector::String16"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %270) #15
  %271 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15
  %272 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %273 = call %"class.v8::String"* @_ZN2v86Object18GetConstructorNameEv(%"class.v8::Object"* %272) #15, !noalias !234
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %16, %"class.v8::Isolate"* %271, %"class.v8::String"* %273) #15
  %274 = call i8* @_Znwm(i64 88) #16
  %275 = bitcast i8* %274 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_112ObjectMirrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %275, align 8
  %276 = getelementptr inbounds i8, i8* %274, i64 8
  %277 = bitcast i8* %276 to %"class.v8::Value"**
  store %"class.v8::Value"* %1, %"class.v8::Value"** %277, align 8
  %278 = getelementptr inbounds i8, i8* %274, i64 16
  %279 = bitcast %"class.v8_inspector::String16"* %16 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %280 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %279, i64 0, i32 1, i32 1
  %281 = load i8, i8* %280, align 1
  %282 = icmp slt i8 %281, 0
  br i1 %282, label %284, label %283

283:                                              ; preds = %269
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %278, i8* nonnull align 8 %270, i64 24, i1 false) #15
  br label %465

284:                                              ; preds = %269
  %285 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = load i16*, i16** %285, align 8
  %287 = bitcast i16* %286 to i8*
  %288 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %289 = load i64, i64* %288, align 8
  %290 = icmp ult i64 %289, 11
  br i1 %290, label %291, label %294

291:                                              ; preds = %284
  %292 = trunc i64 %289 to i8
  %293 = getelementptr inbounds i8, i8* %274, i64 39
  store i8 %292, i8* %293, align 1
  br label %312

294:                                              ; preds = %284
  %295 = icmp ugt i64 %289, 9223372036854775791
  br i1 %295, label %296, label %298

296:                                              ; preds = %294
  %297 = bitcast i8* %278 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %297) #14
  unreachable

298:                                              ; preds = %294
  %299 = add nuw nsw i64 %289, 8
  %300 = and i64 %299, -8
  %301 = icmp slt i64 %300, 0
  br i1 %301, label %302, label %303

302:                                              ; preds = %298
  call void @abort() #14
  unreachable

303:                                              ; preds = %298
  %304 = shl i64 %300, 1
  %305 = call i8* @_Znwm(i64 %304) #16
  %306 = bitcast i8* %278 to i8**
  store i8* %305, i8** %306, align 8
  %307 = or i64 %300, -9223372036854775808
  %308 = getelementptr inbounds i8, i8* %274, i64 32
  %309 = bitcast i8* %308 to i64*
  store i64 %307, i64* %309, align 8
  %310 = getelementptr inbounds i8, i8* %274, i64 24
  %311 = bitcast i8* %310 to i64*
  store i64 %289, i64* %311, align 8
  br label %312

312:                                              ; preds = %303, %291
  %313 = phi i8* [ %278, %291 ], [ %305, %303 ]
  %314 = bitcast i8* %313 to i16*
  %315 = add nuw nsw i64 %289, 1
  %316 = add i64 %289, 1
  %317 = icmp ult i64 %316, 16
  br i1 %317, label %410, label %318

318:                                              ; preds = %312
  %319 = shl i64 %289, 1
  %320 = add i64 %319, 2
  %321 = getelementptr i8, i8* %313, i64 %320
  %322 = add i64 %289, 1
  %323 = getelementptr i16, i16* %286, i64 %322
  %324 = bitcast i16* %323 to i8*
  %325 = icmp ult i8* %313, %324
  %326 = icmp ugt i8* %321, %287
  %327 = and i1 %325, %326
  br i1 %327, label %410, label %328

328:                                              ; preds = %318
  %329 = and i64 %316, -16
  %330 = getelementptr i16, i16* %314, i64 %329
  %331 = sub i64 %315, %329
  %332 = getelementptr i16, i16* %286, i64 %329
  %333 = add i64 %329, -16
  %334 = lshr exact i64 %333, 4
  %335 = add nuw nsw i64 %334, 1
  %336 = and i64 %335, 3
  %337 = icmp ult i64 %333, 48
  br i1 %337, label %389, label %338

338:                                              ; preds = %328
  %339 = sub nsw i64 %335, %336
  br label %340

340:                                              ; preds = %340, %338
  %341 = phi i64 [ 0, %338 ], [ %386, %340 ]
  %342 = phi i64 [ %339, %338 ], [ %387, %340 ]
  %343 = getelementptr i16, i16* %314, i64 %341
  %344 = getelementptr i16, i16* %286, i64 %341
  %345 = bitcast i16* %344 to <8 x i16>*
  %346 = load <8 x i16>, <8 x i16>* %345, align 2, !alias.scope !237
  %347 = getelementptr i16, i16* %344, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  %349 = load <8 x i16>, <8 x i16>* %348, align 2, !alias.scope !237
  %350 = bitcast i16* %343 to <8 x i16>*
  store <8 x i16> %346, <8 x i16>* %350, align 2, !alias.scope !240, !noalias !237
  %351 = getelementptr i16, i16* %343, i64 8
  %352 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %349, <8 x i16>* %352, align 2, !alias.scope !240, !noalias !237
  %353 = or i64 %341, 16
  %354 = getelementptr i16, i16* %314, i64 %353
  %355 = getelementptr i16, i16* %286, i64 %353
  %356 = bitcast i16* %355 to <8 x i16>*
  %357 = load <8 x i16>, <8 x i16>* %356, align 2, !alias.scope !237
  %358 = getelementptr i16, i16* %355, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  %360 = load <8 x i16>, <8 x i16>* %359, align 2, !alias.scope !237
  %361 = bitcast i16* %354 to <8 x i16>*
  store <8 x i16> %357, <8 x i16>* %361, align 2, !alias.scope !240, !noalias !237
  %362 = getelementptr i16, i16* %354, i64 8
  %363 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %360, <8 x i16>* %363, align 2, !alias.scope !240, !noalias !237
  %364 = or i64 %341, 32
  %365 = getelementptr i16, i16* %314, i64 %364
  %366 = getelementptr i16, i16* %286, i64 %364
  %367 = bitcast i16* %366 to <8 x i16>*
  %368 = load <8 x i16>, <8 x i16>* %367, align 2, !alias.scope !237
  %369 = getelementptr i16, i16* %366, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  %371 = load <8 x i16>, <8 x i16>* %370, align 2, !alias.scope !237
  %372 = bitcast i16* %365 to <8 x i16>*
  store <8 x i16> %368, <8 x i16>* %372, align 2, !alias.scope !240, !noalias !237
  %373 = getelementptr i16, i16* %365, i64 8
  %374 = bitcast i16* %373 to <8 x i16>*
  store <8 x i16> %371, <8 x i16>* %374, align 2, !alias.scope !240, !noalias !237
  %375 = or i64 %341, 48
  %376 = getelementptr i16, i16* %314, i64 %375
  %377 = getelementptr i16, i16* %286, i64 %375
  %378 = bitcast i16* %377 to <8 x i16>*
  %379 = load <8 x i16>, <8 x i16>* %378, align 2, !alias.scope !237
  %380 = getelementptr i16, i16* %377, i64 8
  %381 = bitcast i16* %380 to <8 x i16>*
  %382 = load <8 x i16>, <8 x i16>* %381, align 2, !alias.scope !237
  %383 = bitcast i16* %376 to <8 x i16>*
  store <8 x i16> %379, <8 x i16>* %383, align 2, !alias.scope !240, !noalias !237
  %384 = getelementptr i16, i16* %376, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  store <8 x i16> %382, <8 x i16>* %385, align 2, !alias.scope !240, !noalias !237
  %386 = add i64 %341, 64
  %387 = add i64 %342, -4
  %388 = icmp eq i64 %387, 0
  br i1 %388, label %389, label %340, !llvm.loop !242

389:                                              ; preds = %340, %328
  %390 = phi i64 [ 0, %328 ], [ %386, %340 ]
  %391 = icmp eq i64 %336, 0
  br i1 %391, label %408, label %392

392:                                              ; preds = %389, %392
  %393 = phi i64 [ %405, %392 ], [ %390, %389 ]
  %394 = phi i64 [ %406, %392 ], [ %336, %389 ]
  %395 = getelementptr i16, i16* %314, i64 %393
  %396 = getelementptr i16, i16* %286, i64 %393
  %397 = bitcast i16* %396 to <8 x i16>*
  %398 = load <8 x i16>, <8 x i16>* %397, align 2, !alias.scope !237
  %399 = getelementptr i16, i16* %396, i64 8
  %400 = bitcast i16* %399 to <8 x i16>*
  %401 = load <8 x i16>, <8 x i16>* %400, align 2, !alias.scope !237
  %402 = bitcast i16* %395 to <8 x i16>*
  store <8 x i16> %398, <8 x i16>* %402, align 2, !alias.scope !240, !noalias !237
  %403 = getelementptr i16, i16* %395, i64 8
  %404 = bitcast i16* %403 to <8 x i16>*
  store <8 x i16> %401, <8 x i16>* %404, align 2, !alias.scope !240, !noalias !237
  %405 = add i64 %393, 16
  %406 = add i64 %394, -1
  %407 = icmp eq i64 %406, 0
  br i1 %407, label %408, label %392, !llvm.loop !243

408:                                              ; preds = %392, %389
  %409 = icmp eq i64 %316, %329
  br i1 %409, label %463, label %410

410:                                              ; preds = %408, %318, %312
  %411 = phi i16* [ %314, %318 ], [ %314, %312 ], [ %330, %408 ]
  %412 = phi i64 [ %315, %318 ], [ %315, %312 ], [ %331, %408 ]
  %413 = phi i16* [ %286, %318 ], [ %286, %312 ], [ %332, %408 ]
  %414 = add i64 %412, -1
  %415 = and i64 %412, 7
  %416 = icmp eq i64 %415, 0
  br i1 %416, label %428, label %417

417:                                              ; preds = %410, %417
  %418 = phi i16* [ %424, %417 ], [ %411, %410 ]
  %419 = phi i64 [ %423, %417 ], [ %412, %410 ]
  %420 = phi i16* [ %425, %417 ], [ %413, %410 ]
  %421 = phi i64 [ %426, %417 ], [ %415, %410 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %418, align 2
  %423 = add i64 %419, -1
  %424 = getelementptr inbounds i16, i16* %418, i64 1
  %425 = getelementptr inbounds i16, i16* %420, i64 1
  %426 = add i64 %421, -1
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %417, !llvm.loop !244

428:                                              ; preds = %417, %410
  %429 = phi i16* [ %411, %410 ], [ %424, %417 ]
  %430 = phi i64 [ %412, %410 ], [ %423, %417 ]
  %431 = phi i16* [ %413, %410 ], [ %425, %417 ]
  %432 = icmp ult i64 %414, 7
  br i1 %432, label %463, label %433

433:                                              ; preds = %428, %433
  %434 = phi i16* [ %460, %433 ], [ %429, %428 ]
  %435 = phi i64 [ %459, %433 ], [ %430, %428 ]
  %436 = phi i16* [ %461, %433 ], [ %431, %428 ]
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %434, align 2
  %438 = getelementptr inbounds i16, i16* %434, i64 1
  %439 = getelementptr inbounds i16, i16* %436, i64 1
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %434, i64 2
  %442 = getelementptr inbounds i16, i16* %436, i64 2
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = getelementptr inbounds i16, i16* %434, i64 3
  %445 = getelementptr inbounds i16, i16* %436, i64 3
  %446 = load i16, i16* %445, align 2
  store i16 %446, i16* %444, align 2
  %447 = getelementptr inbounds i16, i16* %434, i64 4
  %448 = getelementptr inbounds i16, i16* %436, i64 4
  %449 = load i16, i16* %448, align 2
  store i16 %449, i16* %447, align 2
  %450 = getelementptr inbounds i16, i16* %434, i64 5
  %451 = getelementptr inbounds i16, i16* %436, i64 5
  %452 = load i16, i16* %451, align 2
  store i16 %452, i16* %450, align 2
  %453 = getelementptr inbounds i16, i16* %434, i64 6
  %454 = getelementptr inbounds i16, i16* %436, i64 6
  %455 = load i16, i16* %454, align 2
  store i16 %455, i16* %453, align 2
  %456 = getelementptr inbounds i16, i16* %434, i64 7
  %457 = getelementptr inbounds i16, i16* %436, i64 7
  %458 = load i16, i16* %457, align 2
  store i16 %458, i16* %456, align 2
  %459 = add i64 %435, -8
  %460 = getelementptr inbounds i16, i16* %434, i64 8
  %461 = getelementptr inbounds i16, i16* %436, i64 8
  %462 = icmp eq i64 %459, 0
  br i1 %462, label %463, label %433, !llvm.loop !245

463:                                              ; preds = %428, %433, %408
  %464 = load i8, i8* %280, align 1
  br label %465

465:                                              ; preds = %463, %283
  %466 = phi i8 [ %464, %463 ], [ %281, %283 ]
  %467 = getelementptr inbounds i8, i8* %274, i64 40
  %468 = bitcast i8* %467 to i64*
  %469 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %16, i64 0, i32 1
  %470 = load i64, i64* %469, align 8
  store i64 %470, i64* %468, align 8
  %471 = getelementptr inbounds i8, i8* %274, i64 48
  store i8 0, i8* %471, align 8
  %472 = getelementptr inbounds i8, i8* %274, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %472, i8 0, i64 32, i1 false) #15
  %473 = icmp slt i8 %466, 0
  br i1 %473, label %474, label %477

474:                                              ; preds = %465
  %475 = bitcast %"class.v8_inspector::String16"* %16 to i8**
  %476 = load i8*, i8** %475, align 8
  call void @_ZdlPv(i8* %476) #16
  br label %477

477:                                              ; preds = %465, %474
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %270) #15
  br label %483

478:                                              ; preds = %28, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #15
  %479 = bitcast %"class.v8_inspector::StringBuffer"* %26 to void (%"class.v8_inspector::StringBuffer"*)***
  %480 = load void (%"class.v8_inspector::StringBuffer"*)**, void (%"class.v8_inspector::StringBuffer"*)*** %479, align 8
  %481 = getelementptr inbounds void (%"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringBuffer"*)** %480, i64 1
  %482 = load void (%"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringBuffer"*)** %481, align 8
  call void %482(%"class.v8_inspector::StringBuffer"* nonnull %26) #15
  br label %483

483:                                              ; preds = %103, %171, %477, %262, %478
  %484 = phi i8* [ %35, %478 ], [ %94, %103 ], [ %153, %171 ], [ %244, %262 ], [ %274, %477 ]
  %485 = bitcast i8* %484 to %"class.v8_inspector::ValueMirror"*
  ret %"class.v8_inspector::ValueMirror"* %485
}

declare void @_ZN12v8_inspector10toString16ERKNS_10StringViewE(%"class.v8_inspector::String16"* sret, %"class.v8_inspector::StringView"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12v8_inspector12_GLOBAL__N_119descriptionForErrorEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEENS0_9ErrorTypeE(%"class.v8_inspector::String16"* noalias, %"class.v8::Context"*, %"class.v8::Object"*, i32) unnamed_addr #2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.v8::TryCatch", align 8
  %9 = alloca %"class.v8_inspector::String16", align 8
  %10 = alloca %"class.v8::base::Optional", align 8
  %11 = alloca %"class.v8_inspector::String16", align 8
  %12 = alloca %"class.v8_inspector::String16", align 8
  %13 = alloca %"class.v8_inspector::String16", align 8
  %14 = alloca %"class.v8::base::Optional", align 8
  %15 = alloca %"class.v8_inspector::String16", align 8
  %16 = alloca %"class.v8_inspector::String16", align 8
  %17 = alloca %"class.v8_inspector::String16", align 8
  %18 = alloca %"class.v8_inspector::String16", align 8
  %19 = alloca %"class.v8_inspector::String16", align 8
  %20 = alloca %"class.v8_inspector::String16", align 8
  %21 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %1) #15
  %22 = bitcast %"class.v8::TryCatch"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %22) #15
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %8, %"class.v8::Isolate"* %21) #15
  %23 = bitcast %"class.v8_inspector::String16"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #15
  %24 = call %"class.v8::String"* @_ZN2v86Object18GetConstructorNameEv(%"class.v8::Object"* %2) #15
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %9, %"class.v8::Isolate"* %21, %"class.v8::String"* %24) #15
  %25 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #15
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast %union.anon.595* %26 to i8*
  store i8 0, i8* %27, align 8
  %28 = bitcast %"class.v8_inspector::String16"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)) #15
  %29 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %21, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %11) #15
  %30 = bitcast %"class.v8::String"* %29 to %"class.v8::Value"*
  %31 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %2, %"class.v8::Context"* %1, %"class.v8::Value"* %30) #15
  %32 = icmp eq %"class.v8::Value"* %31, null
  br i1 %32, label %86, label %33

33:                                               ; preds = %4
  %34 = bitcast %"class.v8::Value"* %31 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 3
  %37 = icmp eq i64 %36, 1
  br i1 %37, label %38, label %49

38:                                               ; preds = %33
  %39 = add i64 %35, -1
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = and i64 %35, -4294967296
  %43 = zext i32 %41 to i64
  %44 = or i64 %42, %43
  %45 = add i64 %44, 7
  %46 = inttoptr i64 %45 to i16*
  %47 = load i16, i16* %46, align 2
  %48 = icmp ult i16 %47, 64
  br label %49

49:                                               ; preds = %33, %38
  %50 = phi i1 [ %48, %38 ], [ false, %33 ]
  %51 = bitcast %"class.v8_inspector::String16"* %11 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %51, i64 0, i32 1, i32 1
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = bitcast %"class.v8_inspector::String16"* %11 to i8**
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #16
  br label %58

58:                                               ; preds = %49, %55
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #15
  br i1 %50, label %59, label %96

59:                                               ; preds = %58
  %60 = bitcast %"class.v8_inspector::String16"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %60) #15
  %61 = bitcast %"class.v8::Value"* %31 to %"class.v8::String"*
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %12, %"class.v8::Isolate"* %21, %"class.v8::String"* nonnull %61) #15
  %62 = load i8, i8* %25, align 8, !range !7
  %63 = icmp eq i8 %62, 0
  %64 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %63, label %81, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.v8_inspector::String16"* %64 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %66, i64 0, i32 1, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %65
  %71 = bitcast %"class.v8_inspector::String16"* %64 to i8**
  %72 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %72) #16
  br label %73

73:                                               ; preds = %70, %65
  %74 = bitcast %"class.v8_inspector::String16"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* nonnull align 8 %60, i64 24, i1 false) #15
  %75 = bitcast %"class.v8_inspector::String16"* %12 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %75, i64 0, i32 1, i32 1
  store i8 0, i8* %76, align 1
  %77 = bitcast %"class.v8_inspector::String16"* %12 to i16*
  store i16 0, i16* %77, align 8
  %78 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %12, i64 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i64 %79, i64* %80, align 8
  br label %94

81:                                               ; preds = %59
  %82 = bitcast %"class.v8_inspector::String16"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* nonnull align 8 %60, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 24, i1 false) #15
  %83 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %84 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %12, i64 0, i32 1
  %85 = load i64, i64* %84, align 8
  store i64 %85, i64* %83, align 8
  store i8 1, i8* %25, align 8
  br label %94

86:                                               ; preds = %4
  %87 = bitcast %"class.v8_inspector::String16"* %11 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %87, i64 0, i32 1, i32 1
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %86
  %92 = bitcast %"class.v8_inspector::String16"* %11 to i8**
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #16
  br label %94

94:                                               ; preds = %91, %86, %73, %81
  %95 = phi i8* [ %60, %81 ], [ %60, %73 ], [ %28, %86 ], [ %28, %91 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %95) #15
  br label %96

96:                                               ; preds = %94, %58
  %97 = icmp eq i32 %3, 0
  %98 = load i8, i8* %25, align 8
  %99 = icmp ne i8 %98, 0
  br i1 %97, label %100, label %289

100:                                              ; preds = %96
  br i1 %99, label %101, label %531

101:                                              ; preds = %100
  %102 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %103 = bitcast %"class.v8_inspector::String16"* %102 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %103, i64 0, i32 1, i32 1
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %110, label %107

107:                                              ; preds = %101
  %108 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  %109 = bitcast %"class.v8_inspector::String16"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 24, i1 false) #15
  br label %285

110:                                              ; preds = %101
  %111 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i16*, i16** %111, align 8
  %113 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = icmp ult i64 %114, 11
  br i1 %115, label %116, label %121

116:                                              ; preds = %110
  %117 = bitcast %"class.v8_inspector::String16"* %0 to i16*
  %118 = trunc i64 %114 to i8
  %119 = bitcast %"class.v8_inspector::String16"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %119, i64 0, i32 1, i32 1
  store i8 %118, i8* %120, align 1
  br label %138

121:                                              ; preds = %110
  %122 = icmp ugt i64 %114, 9223372036854775791
  br i1 %122, label %123, label %125

123:                                              ; preds = %121
  %124 = bitcast %"class.v8_inspector::String16"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %124) #14
  unreachable

125:                                              ; preds = %121
  %126 = add nuw nsw i64 %114, 8
  %127 = and i64 %126, -8
  %128 = icmp slt i64 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %125
  call void @abort() #14
  unreachable

130:                                              ; preds = %125
  %131 = shl i64 %127, 1
  %132 = call i8* @_Znwm(i64 %131) #16
  %133 = bitcast i8* %132 to i16*
  %134 = bitcast %"class.v8_inspector::String16"* %0 to i8**
  store i8* %132, i8** %134, align 8
  %135 = or i64 %127, -9223372036854775808
  %136 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %114, i64* %137, align 8
  br label %138

138:                                              ; preds = %130, %116
  %139 = phi i16* [ %117, %116 ], [ %133, %130 ]
  %140 = add nuw nsw i64 %114, 1
  %141 = add i64 %114, 1
  %142 = icmp ult i64 %141, 16
  br i1 %142, label %232, label %143

143:                                              ; preds = %138
  %144 = add i64 %114, 1
  %145 = getelementptr i16, i16* %139, i64 %144
  %146 = getelementptr i16, i16* %112, i64 %144
  %147 = icmp ult i16* %139, %146
  %148 = icmp ult i16* %112, %145
  %149 = and i1 %147, %148
  br i1 %149, label %232, label %150

150:                                              ; preds = %143
  %151 = and i64 %141, -16
  %152 = getelementptr i16, i16* %139, i64 %151
  %153 = sub i64 %140, %151
  %154 = getelementptr i16, i16* %112, i64 %151
  %155 = add i64 %151, -16
  %156 = lshr exact i64 %155, 4
  %157 = add nuw nsw i64 %156, 1
  %158 = and i64 %157, 3
  %159 = icmp ult i64 %155, 48
  br i1 %159, label %211, label %160

160:                                              ; preds = %150
  %161 = sub nsw i64 %157, %158
  br label %162

162:                                              ; preds = %162, %160
  %163 = phi i64 [ 0, %160 ], [ %208, %162 ]
  %164 = phi i64 [ %161, %160 ], [ %209, %162 ]
  %165 = getelementptr i16, i16* %139, i64 %163
  %166 = getelementptr i16, i16* %112, i64 %163
  %167 = bitcast i16* %166 to <8 x i16>*
  %168 = load <8 x i16>, <8 x i16>* %167, align 2, !alias.scope !246
  %169 = getelementptr i16, i16* %166, i64 8
  %170 = bitcast i16* %169 to <8 x i16>*
  %171 = load <8 x i16>, <8 x i16>* %170, align 2, !alias.scope !246
  %172 = bitcast i16* %165 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %172, align 2, !alias.scope !249, !noalias !246
  %173 = getelementptr i16, i16* %165, i64 8
  %174 = bitcast i16* %173 to <8 x i16>*
  store <8 x i16> %171, <8 x i16>* %174, align 2, !alias.scope !249, !noalias !246
  %175 = or i64 %163, 16
  %176 = getelementptr i16, i16* %139, i64 %175
  %177 = getelementptr i16, i16* %112, i64 %175
  %178 = bitcast i16* %177 to <8 x i16>*
  %179 = load <8 x i16>, <8 x i16>* %178, align 2, !alias.scope !246
  %180 = getelementptr i16, i16* %177, i64 8
  %181 = bitcast i16* %180 to <8 x i16>*
  %182 = load <8 x i16>, <8 x i16>* %181, align 2, !alias.scope !246
  %183 = bitcast i16* %176 to <8 x i16>*
  store <8 x i16> %179, <8 x i16>* %183, align 2, !alias.scope !249, !noalias !246
  %184 = getelementptr i16, i16* %176, i64 8
  %185 = bitcast i16* %184 to <8 x i16>*
  store <8 x i16> %182, <8 x i16>* %185, align 2, !alias.scope !249, !noalias !246
  %186 = or i64 %163, 32
  %187 = getelementptr i16, i16* %139, i64 %186
  %188 = getelementptr i16, i16* %112, i64 %186
  %189 = bitcast i16* %188 to <8 x i16>*
  %190 = load <8 x i16>, <8 x i16>* %189, align 2, !alias.scope !246
  %191 = getelementptr i16, i16* %188, i64 8
  %192 = bitcast i16* %191 to <8 x i16>*
  %193 = load <8 x i16>, <8 x i16>* %192, align 2, !alias.scope !246
  %194 = bitcast i16* %187 to <8 x i16>*
  store <8 x i16> %190, <8 x i16>* %194, align 2, !alias.scope !249, !noalias !246
  %195 = getelementptr i16, i16* %187, i64 8
  %196 = bitcast i16* %195 to <8 x i16>*
  store <8 x i16> %193, <8 x i16>* %196, align 2, !alias.scope !249, !noalias !246
  %197 = or i64 %163, 48
  %198 = getelementptr i16, i16* %139, i64 %197
  %199 = getelementptr i16, i16* %112, i64 %197
  %200 = bitcast i16* %199 to <8 x i16>*
  %201 = load <8 x i16>, <8 x i16>* %200, align 2, !alias.scope !246
  %202 = getelementptr i16, i16* %199, i64 8
  %203 = bitcast i16* %202 to <8 x i16>*
  %204 = load <8 x i16>, <8 x i16>* %203, align 2, !alias.scope !246
  %205 = bitcast i16* %198 to <8 x i16>*
  store <8 x i16> %201, <8 x i16>* %205, align 2, !alias.scope !249, !noalias !246
  %206 = getelementptr i16, i16* %198, i64 8
  %207 = bitcast i16* %206 to <8 x i16>*
  store <8 x i16> %204, <8 x i16>* %207, align 2, !alias.scope !249, !noalias !246
  %208 = add i64 %163, 64
  %209 = add i64 %164, -4
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %211, label %162, !llvm.loop !251

211:                                              ; preds = %162, %150
  %212 = phi i64 [ 0, %150 ], [ %208, %162 ]
  %213 = icmp eq i64 %158, 0
  br i1 %213, label %230, label %214

214:                                              ; preds = %211, %214
  %215 = phi i64 [ %227, %214 ], [ %212, %211 ]
  %216 = phi i64 [ %228, %214 ], [ %158, %211 ]
  %217 = getelementptr i16, i16* %139, i64 %215
  %218 = getelementptr i16, i16* %112, i64 %215
  %219 = bitcast i16* %218 to <8 x i16>*
  %220 = load <8 x i16>, <8 x i16>* %219, align 2, !alias.scope !246
  %221 = getelementptr i16, i16* %218, i64 8
  %222 = bitcast i16* %221 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2, !alias.scope !246
  %224 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %220, <8 x i16>* %224, align 2, !alias.scope !249, !noalias !246
  %225 = getelementptr i16, i16* %217, i64 8
  %226 = bitcast i16* %225 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %226, align 2, !alias.scope !249, !noalias !246
  %227 = add i64 %215, 16
  %228 = add i64 %216, -1
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %214, !llvm.loop !252

230:                                              ; preds = %214, %211
  %231 = icmp eq i64 %141, %151
  br i1 %231, label %285, label %232

232:                                              ; preds = %230, %143, %138
  %233 = phi i16* [ %139, %143 ], [ %139, %138 ], [ %152, %230 ]
  %234 = phi i64 [ %140, %143 ], [ %140, %138 ], [ %153, %230 ]
  %235 = phi i16* [ %112, %143 ], [ %112, %138 ], [ %154, %230 ]
  %236 = add i64 %234, -1
  %237 = and i64 %234, 7
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %250, label %239

239:                                              ; preds = %232, %239
  %240 = phi i16* [ %246, %239 ], [ %233, %232 ]
  %241 = phi i64 [ %245, %239 ], [ %234, %232 ]
  %242 = phi i16* [ %247, %239 ], [ %235, %232 ]
  %243 = phi i64 [ %248, %239 ], [ %237, %232 ]
  %244 = load i16, i16* %242, align 2
  store i16 %244, i16* %240, align 2
  %245 = add i64 %241, -1
  %246 = getelementptr inbounds i16, i16* %240, i64 1
  %247 = getelementptr inbounds i16, i16* %242, i64 1
  %248 = add i64 %243, -1
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %250, label %239, !llvm.loop !253

250:                                              ; preds = %239, %232
  %251 = phi i16* [ %233, %232 ], [ %246, %239 ]
  %252 = phi i64 [ %234, %232 ], [ %245, %239 ]
  %253 = phi i16* [ %235, %232 ], [ %247, %239 ]
  %254 = icmp ult i64 %236, 7
  br i1 %254, label %285, label %255

255:                                              ; preds = %250, %255
  %256 = phi i16* [ %282, %255 ], [ %251, %250 ]
  %257 = phi i64 [ %281, %255 ], [ %252, %250 ]
  %258 = phi i16* [ %283, %255 ], [ %253, %250 ]
  %259 = load i16, i16* %258, align 2
  store i16 %259, i16* %256, align 2
  %260 = getelementptr inbounds i16, i16* %256, i64 1
  %261 = getelementptr inbounds i16, i16* %258, i64 1
  %262 = load i16, i16* %261, align 2
  store i16 %262, i16* %260, align 2
  %263 = getelementptr inbounds i16, i16* %256, i64 2
  %264 = getelementptr inbounds i16, i16* %258, i64 2
  %265 = load i16, i16* %264, align 2
  store i16 %265, i16* %263, align 2
  %266 = getelementptr inbounds i16, i16* %256, i64 3
  %267 = getelementptr inbounds i16, i16* %258, i64 3
  %268 = load i16, i16* %267, align 2
  store i16 %268, i16* %266, align 2
  %269 = getelementptr inbounds i16, i16* %256, i64 4
  %270 = getelementptr inbounds i16, i16* %258, i64 4
  %271 = load i16, i16* %270, align 2
  store i16 %271, i16* %269, align 2
  %272 = getelementptr inbounds i16, i16* %256, i64 5
  %273 = getelementptr inbounds i16, i16* %258, i64 5
  %274 = load i16, i16* %273, align 2
  store i16 %274, i16* %272, align 2
  %275 = getelementptr inbounds i16, i16* %256, i64 6
  %276 = getelementptr inbounds i16, i16* %258, i64 6
  %277 = load i16, i16* %276, align 2
  store i16 %277, i16* %275, align 2
  %278 = getelementptr inbounds i16, i16* %256, i64 7
  %279 = getelementptr inbounds i16, i16* %258, i64 7
  %280 = load i16, i16* %279, align 2
  store i16 %280, i16* %278, align 2
  %281 = add i64 %257, -8
  %282 = getelementptr inbounds i16, i16* %256, i64 8
  %283 = getelementptr inbounds i16, i16* %258, i64 8
  %284 = icmp eq i64 %281, 0
  br i1 %284, label %285, label %255, !llvm.loop !254

285:                                              ; preds = %250, %255, %230, %107
  %286 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 1
  %287 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %288 = load i64, i64* %287, align 8
  store i64 %288, i64* %286, align 8
  br label %1160

289:                                              ; preds = %96
  br i1 %99, label %290, label %531

290:                                              ; preds = %289
  %291 = bitcast %"class.v8_inspector::String16"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %291) #15
  %292 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %293 = bitcast %"class.v8_inspector::String16"* %9 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %294 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %293, i64 0, i32 1, i32 1
  %295 = load i8, i8* %294, align 1
  %296 = icmp slt i8 %295, 0
  %297 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %298 = load i64, i64* %297, align 8
  %299 = zext i8 %295 to i64
  %300 = select i1 %296, i64 %298, i64 %299
  call void @_ZNK12v8_inspector8String169substringEmm(%"class.v8_inspector::String16"* nonnull sret %13, %"class.v8_inspector::String16"* %292, i64 0, i64 %300)
  %301 = bitcast %"class.v8_inspector::String16"* %13 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %302 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %301, i64 0, i32 1, i32 1
  %303 = load i8, i8* %302, align 1
  %304 = icmp slt i8 %303, 0
  %305 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %306 = load i64, i64* %305, align 8
  %307 = zext i8 %303 to i64
  %308 = select i1 %304, i64 %306, i64 %307
  %309 = load i8, i8* %294, align 1
  %310 = icmp slt i8 %309, 0
  %311 = load i64, i64* %297, align 8
  %312 = zext i8 %309 to i64
  %313 = select i1 %310, i64 %311, i64 %312
  %314 = icmp eq i64 %308, %313
  br i1 %314, label %315, label %338

315:                                              ; preds = %290
  %316 = icmp eq i64 %308, 0
  br i1 %316, label %338, label %317

317:                                              ; preds = %315
  %318 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load i16*, i16** %318, align 8
  %320 = bitcast %"class.v8_inspector::String16"* %9 to i16*
  %321 = select i1 %310, i16* %319, i16* %320
  %322 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load i16*, i16** %322, align 8
  %324 = bitcast %"class.v8_inspector::String16"* %13 to i16*
  %325 = select i1 %304, i16* %323, i16* %324
  br label %326

326:                                              ; preds = %333, %317
  %327 = phi i64 [ %334, %333 ], [ %308, %317 ]
  %328 = phi i16* [ %336, %333 ], [ %321, %317 ]
  %329 = phi i16* [ %335, %333 ], [ %325, %317 ]
  %330 = load i16, i16* %329, align 2
  %331 = load i16, i16* %328, align 2
  %332 = icmp eq i16 %331, %330
  br i1 %332, label %333, label %338

333:                                              ; preds = %326
  %334 = add i64 %327, -1
  %335 = getelementptr inbounds i16, i16* %329, i64 1
  %336 = getelementptr inbounds i16, i16* %328, i64 1
  %337 = icmp eq i64 %334, 0
  br i1 %337, label %338, label %326

338:                                              ; preds = %326, %333, %290, %315
  %339 = phi i1 [ true, %315 ], [ false, %290 ], [ true, %333 ], [ false, %326 ]
  br i1 %304, label %340, label %343

340:                                              ; preds = %338
  %341 = bitcast %"class.v8_inspector::String16"* %13 to i8**
  %342 = load i8*, i8** %341, align 8
  call void @_ZdlPv(i8* %342) #16
  br label %343

343:                                              ; preds = %340, %338
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %291) #15
  br i1 %339, label %344, label %531

344:                                              ; preds = %343
  %345 = bitcast %"class.v8_inspector::String16"* %292 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %346 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %345, i64 0, i32 1, i32 1
  %347 = load i8, i8* %346, align 1
  %348 = icmp slt i8 %347, 0
  br i1 %348, label %352, label %349

349:                                              ; preds = %344
  %350 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  %351 = bitcast %"class.v8_inspector::String16"* %292 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %350, i8* align 8 %351, i64 24, i1 false) #15
  br label %527

352:                                              ; preds = %344
  %353 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %292, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %354 = load i16*, i16** %353, align 8
  %355 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %356 = load i64, i64* %355, align 8
  %357 = icmp ult i64 %356, 11
  br i1 %357, label %358, label %363

358:                                              ; preds = %352
  %359 = bitcast %"class.v8_inspector::String16"* %0 to i16*
  %360 = trunc i64 %356 to i8
  %361 = bitcast %"class.v8_inspector::String16"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %362 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %361, i64 0, i32 1, i32 1
  store i8 %360, i8* %362, align 1
  br label %380

363:                                              ; preds = %352
  %364 = icmp ugt i64 %356, 9223372036854775791
  br i1 %364, label %365, label %367

365:                                              ; preds = %363
  %366 = bitcast %"class.v8_inspector::String16"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %366) #14
  unreachable

367:                                              ; preds = %363
  %368 = add nuw nsw i64 %356, 8
  %369 = and i64 %368, -8
  %370 = icmp slt i64 %369, 0
  br i1 %370, label %371, label %372

371:                                              ; preds = %367
  call void @abort() #14
  unreachable

372:                                              ; preds = %367
  %373 = shl i64 %369, 1
  %374 = call i8* @_Znwm(i64 %373) #16
  %375 = bitcast i8* %374 to i16*
  %376 = bitcast %"class.v8_inspector::String16"* %0 to i8**
  store i8* %374, i8** %376, align 8
  %377 = or i64 %369, -9223372036854775808
  %378 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %377, i64* %378, align 8
  %379 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %356, i64* %379, align 8
  br label %380

380:                                              ; preds = %372, %358
  %381 = phi i16* [ %359, %358 ], [ %375, %372 ]
  %382 = add nuw nsw i64 %356, 1
  %383 = add i64 %356, 1
  %384 = icmp ult i64 %383, 16
  br i1 %384, label %474, label %385

385:                                              ; preds = %380
  %386 = add i64 %356, 1
  %387 = getelementptr i16, i16* %381, i64 %386
  %388 = getelementptr i16, i16* %354, i64 %386
  %389 = icmp ult i16* %381, %388
  %390 = icmp ult i16* %354, %387
  %391 = and i1 %389, %390
  br i1 %391, label %474, label %392

392:                                              ; preds = %385
  %393 = and i64 %383, -16
  %394 = getelementptr i16, i16* %381, i64 %393
  %395 = sub i64 %382, %393
  %396 = getelementptr i16, i16* %354, i64 %393
  %397 = add i64 %393, -16
  %398 = lshr exact i64 %397, 4
  %399 = add nuw nsw i64 %398, 1
  %400 = and i64 %399, 3
  %401 = icmp ult i64 %397, 48
  br i1 %401, label %453, label %402

402:                                              ; preds = %392
  %403 = sub nsw i64 %399, %400
  br label %404

404:                                              ; preds = %404, %402
  %405 = phi i64 [ 0, %402 ], [ %450, %404 ]
  %406 = phi i64 [ %403, %402 ], [ %451, %404 ]
  %407 = getelementptr i16, i16* %381, i64 %405
  %408 = getelementptr i16, i16* %354, i64 %405
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !255
  %411 = getelementptr i16, i16* %408, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !255
  %414 = bitcast i16* %407 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !258, !noalias !255
  %415 = getelementptr i16, i16* %407, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !258, !noalias !255
  %417 = or i64 %405, 16
  %418 = getelementptr i16, i16* %381, i64 %417
  %419 = getelementptr i16, i16* %354, i64 %417
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !255
  %422 = getelementptr i16, i16* %419, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !255
  %425 = bitcast i16* %418 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !258, !noalias !255
  %426 = getelementptr i16, i16* %418, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !258, !noalias !255
  %428 = or i64 %405, 32
  %429 = getelementptr i16, i16* %381, i64 %428
  %430 = getelementptr i16, i16* %354, i64 %428
  %431 = bitcast i16* %430 to <8 x i16>*
  %432 = load <8 x i16>, <8 x i16>* %431, align 2, !alias.scope !255
  %433 = getelementptr i16, i16* %430, i64 8
  %434 = bitcast i16* %433 to <8 x i16>*
  %435 = load <8 x i16>, <8 x i16>* %434, align 2, !alias.scope !255
  %436 = bitcast i16* %429 to <8 x i16>*
  store <8 x i16> %432, <8 x i16>* %436, align 2, !alias.scope !258, !noalias !255
  %437 = getelementptr i16, i16* %429, i64 8
  %438 = bitcast i16* %437 to <8 x i16>*
  store <8 x i16> %435, <8 x i16>* %438, align 2, !alias.scope !258, !noalias !255
  %439 = or i64 %405, 48
  %440 = getelementptr i16, i16* %381, i64 %439
  %441 = getelementptr i16, i16* %354, i64 %439
  %442 = bitcast i16* %441 to <8 x i16>*
  %443 = load <8 x i16>, <8 x i16>* %442, align 2, !alias.scope !255
  %444 = getelementptr i16, i16* %441, i64 8
  %445 = bitcast i16* %444 to <8 x i16>*
  %446 = load <8 x i16>, <8 x i16>* %445, align 2, !alias.scope !255
  %447 = bitcast i16* %440 to <8 x i16>*
  store <8 x i16> %443, <8 x i16>* %447, align 2, !alias.scope !258, !noalias !255
  %448 = getelementptr i16, i16* %440, i64 8
  %449 = bitcast i16* %448 to <8 x i16>*
  store <8 x i16> %446, <8 x i16>* %449, align 2, !alias.scope !258, !noalias !255
  %450 = add i64 %405, 64
  %451 = add i64 %406, -4
  %452 = icmp eq i64 %451, 0
  br i1 %452, label %453, label %404, !llvm.loop !260

453:                                              ; preds = %404, %392
  %454 = phi i64 [ 0, %392 ], [ %450, %404 ]
  %455 = icmp eq i64 %400, 0
  br i1 %455, label %472, label %456

456:                                              ; preds = %453, %456
  %457 = phi i64 [ %469, %456 ], [ %454, %453 ]
  %458 = phi i64 [ %470, %456 ], [ %400, %453 ]
  %459 = getelementptr i16, i16* %381, i64 %457
  %460 = getelementptr i16, i16* %354, i64 %457
  %461 = bitcast i16* %460 to <8 x i16>*
  %462 = load <8 x i16>, <8 x i16>* %461, align 2, !alias.scope !255
  %463 = getelementptr i16, i16* %460, i64 8
  %464 = bitcast i16* %463 to <8 x i16>*
  %465 = load <8 x i16>, <8 x i16>* %464, align 2, !alias.scope !255
  %466 = bitcast i16* %459 to <8 x i16>*
  store <8 x i16> %462, <8 x i16>* %466, align 2, !alias.scope !258, !noalias !255
  %467 = getelementptr i16, i16* %459, i64 8
  %468 = bitcast i16* %467 to <8 x i16>*
  store <8 x i16> %465, <8 x i16>* %468, align 2, !alias.scope !258, !noalias !255
  %469 = add i64 %457, 16
  %470 = add i64 %458, -1
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %472, label %456, !llvm.loop !261

472:                                              ; preds = %456, %453
  %473 = icmp eq i64 %383, %393
  br i1 %473, label %527, label %474

474:                                              ; preds = %472, %385, %380
  %475 = phi i16* [ %381, %385 ], [ %381, %380 ], [ %394, %472 ]
  %476 = phi i64 [ %382, %385 ], [ %382, %380 ], [ %395, %472 ]
  %477 = phi i16* [ %354, %385 ], [ %354, %380 ], [ %396, %472 ]
  %478 = add i64 %476, -1
  %479 = and i64 %476, 7
  %480 = icmp eq i64 %479, 0
  br i1 %480, label %492, label %481

481:                                              ; preds = %474, %481
  %482 = phi i16* [ %488, %481 ], [ %475, %474 ]
  %483 = phi i64 [ %487, %481 ], [ %476, %474 ]
  %484 = phi i16* [ %489, %481 ], [ %477, %474 ]
  %485 = phi i64 [ %490, %481 ], [ %479, %474 ]
  %486 = load i16, i16* %484, align 2
  store i16 %486, i16* %482, align 2
  %487 = add i64 %483, -1
  %488 = getelementptr inbounds i16, i16* %482, i64 1
  %489 = getelementptr inbounds i16, i16* %484, i64 1
  %490 = add i64 %485, -1
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %492, label %481, !llvm.loop !262

492:                                              ; preds = %481, %474
  %493 = phi i16* [ %475, %474 ], [ %488, %481 ]
  %494 = phi i64 [ %476, %474 ], [ %487, %481 ]
  %495 = phi i16* [ %477, %474 ], [ %489, %481 ]
  %496 = icmp ult i64 %478, 7
  br i1 %496, label %527, label %497

497:                                              ; preds = %492, %497
  %498 = phi i16* [ %524, %497 ], [ %493, %492 ]
  %499 = phi i64 [ %523, %497 ], [ %494, %492 ]
  %500 = phi i16* [ %525, %497 ], [ %495, %492 ]
  %501 = load i16, i16* %500, align 2
  store i16 %501, i16* %498, align 2
  %502 = getelementptr inbounds i16, i16* %498, i64 1
  %503 = getelementptr inbounds i16, i16* %500, i64 1
  %504 = load i16, i16* %503, align 2
  store i16 %504, i16* %502, align 2
  %505 = getelementptr inbounds i16, i16* %498, i64 2
  %506 = getelementptr inbounds i16, i16* %500, i64 2
  %507 = load i16, i16* %506, align 2
  store i16 %507, i16* %505, align 2
  %508 = getelementptr inbounds i16, i16* %498, i64 3
  %509 = getelementptr inbounds i16, i16* %500, i64 3
  %510 = load i16, i16* %509, align 2
  store i16 %510, i16* %508, align 2
  %511 = getelementptr inbounds i16, i16* %498, i64 4
  %512 = getelementptr inbounds i16, i16* %500, i64 4
  %513 = load i16, i16* %512, align 2
  store i16 %513, i16* %511, align 2
  %514 = getelementptr inbounds i16, i16* %498, i64 5
  %515 = getelementptr inbounds i16, i16* %500, i64 5
  %516 = load i16, i16* %515, align 2
  store i16 %516, i16* %514, align 2
  %517 = getelementptr inbounds i16, i16* %498, i64 6
  %518 = getelementptr inbounds i16, i16* %500, i64 6
  %519 = load i16, i16* %518, align 2
  store i16 %519, i16* %517, align 2
  %520 = getelementptr inbounds i16, i16* %498, i64 7
  %521 = getelementptr inbounds i16, i16* %500, i64 7
  %522 = load i16, i16* %521, align 2
  store i16 %522, i16* %520, align 2
  %523 = add i64 %499, -8
  %524 = getelementptr inbounds i16, i16* %498, i64 8
  %525 = getelementptr inbounds i16, i16* %500, i64 8
  %526 = icmp eq i64 %523, 0
  br i1 %526, label %527, label %497, !llvm.loop !263

527:                                              ; preds = %492, %497, %472, %349
  %528 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 1
  %529 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %530 = load i64, i64* %529, align 8
  store i64 %530, i64* %528, align 8
  br label %1160

531:                                              ; preds = %100, %289, %343
  %532 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %532) #15
  store i8 0, i8* %532, align 8
  %533 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %14, i64 0, i32 0, i32 0, i32 0, i32 1
  %534 = bitcast %union.anon.595* %533 to i8*
  store i8 0, i8* %534, align 8
  %535 = bitcast %"class.v8_inspector::String16"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %535) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35, i64 0, i64 0)) #15
  %536 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %21, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %15) #15
  %537 = bitcast %"class.v8::String"* %536 to %"class.v8::Value"*
  %538 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %2, %"class.v8::Context"* %1, %"class.v8::Value"* %537) #15
  %539 = icmp eq %"class.v8::Value"* %538, null
  br i1 %539, label %774, label %540

540:                                              ; preds = %531
  %541 = bitcast %"class.v8::Value"* %538 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = and i64 %542, 3
  %544 = icmp eq i64 %543, 1
  br i1 %544, label %545, label %556

545:                                              ; preds = %540
  %546 = add i64 %542, -1
  %547 = inttoptr i64 %546 to i32*
  %548 = load i32, i32* %547, align 4
  %549 = and i64 %542, -4294967296
  %550 = zext i32 %548 to i64
  %551 = or i64 %549, %550
  %552 = add i64 %551, 7
  %553 = inttoptr i64 %552 to i16*
  %554 = load i16, i16* %553, align 2
  %555 = icmp ult i16 %554, 64
  br label %556

556:                                              ; preds = %540, %545
  %557 = phi i1 [ %555, %545 ], [ false, %540 ]
  %558 = bitcast %"class.v8_inspector::String16"* %15 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %559 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %558, i64 0, i32 1, i32 1
  %560 = load i8, i8* %559, align 1
  %561 = icmp slt i8 %560, 0
  br i1 %561, label %562, label %565

562:                                              ; preds = %556
  %563 = bitcast %"class.v8_inspector::String16"* %15 to i8**
  %564 = load i8*, i8** %563, align 8
  call void @_ZdlPv(i8* %564) #16
  br label %565

565:                                              ; preds = %556, %562
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %535) #15
  br i1 %557, label %566, label %784

566:                                              ; preds = %565
  %567 = bitcast %"class.v8_inspector::String16"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %567) #15
  call void @_ZN12v8_inspector29toProtocolStringWithTypeCheckEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8_inspector::String16"* nonnull sret %16, %"class.v8::Isolate"* %21, %"class.v8::Value"* nonnull %538) #15
  %568 = bitcast %"class.v8_inspector::String16"* %16 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %569 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %568, i64 0, i32 1, i32 1
  %570 = load i8, i8* %569, align 1
  %571 = icmp slt i8 %570, 0
  %572 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %573 = load i64, i64* %572, align 8
  %574 = zext i8 %570 to i64
  %575 = select i1 %571, i64 %573, i64 %574
  %576 = icmp eq i64 %575, 0
  br i1 %576, label %768, label %577

577:                                              ; preds = %566
  %578 = load i8, i8* %532, align 8, !range !7
  %579 = icmp eq i8 %578, 0
  br i1 %579, label %587, label %580

580:                                              ; preds = %577
  %581 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %582 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %16, i64 0, i32 0
  %583 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %581, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %582) #15
  %584 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %16, i64 0, i32 1
  %585 = load i64, i64* %584, align 8
  %586 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i64 %585, i64* %586, align 8
  br label %768

587:                                              ; preds = %577
  %588 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %571, label %591, label %589

589:                                              ; preds = %587
  %590 = bitcast %"class.v8_inspector::String16"* %588 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %590, i8* nonnull align 8 %567, i64 24, i1 false) #15
  br label %764

591:                                              ; preds = %587
  %592 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %593 = load i16*, i16** %592, align 8
  %594 = icmp ult i64 %573, 11
  br i1 %594, label %595, label %600

595:                                              ; preds = %591
  %596 = bitcast %"class.v8_inspector::String16"* %588 to i16*
  %597 = trunc i64 %573 to i8
  %598 = bitcast %"class.v8_inspector::String16"* %588 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %599 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %598, i64 0, i32 1, i32 1
  store i8 %597, i8* %599, align 1
  br label %617

600:                                              ; preds = %591
  %601 = icmp ugt i64 %573, 9223372036854775791
  br i1 %601, label %602, label %604

602:                                              ; preds = %600
  %603 = bitcast %"class.v8_inspector::String16"* %588 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %603) #14
  unreachable

604:                                              ; preds = %600
  %605 = add nuw nsw i64 %573, 8
  %606 = and i64 %605, -8
  %607 = icmp slt i64 %606, 0
  br i1 %607, label %608, label %609

608:                                              ; preds = %604
  call void @abort() #14
  unreachable

609:                                              ; preds = %604
  %610 = shl i64 %606, 1
  %611 = call i8* @_Znwm(i64 %610) #16
  %612 = bitcast i8* %611 to i16*
  %613 = bitcast %"class.v8_inspector::String16"* %588 to i8**
  store i8* %611, i8** %613, align 8
  %614 = or i64 %606, -9223372036854775808
  %615 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %614, i64* %615, align 8
  %616 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %573, i64* %616, align 8
  br label %617

617:                                              ; preds = %609, %595
  %618 = phi i16* [ %596, %595 ], [ %612, %609 ]
  %619 = add nuw nsw i64 %573, 1
  %620 = add i64 %573, 1
  %621 = icmp ult i64 %620, 16
  br i1 %621, label %711, label %622

622:                                              ; preds = %617
  %623 = add i64 %573, 1
  %624 = getelementptr i16, i16* %618, i64 %623
  %625 = getelementptr i16, i16* %593, i64 %623
  %626 = icmp ult i16* %618, %625
  %627 = icmp ult i16* %593, %624
  %628 = and i1 %626, %627
  br i1 %628, label %711, label %629

629:                                              ; preds = %622
  %630 = and i64 %620, -16
  %631 = getelementptr i16, i16* %618, i64 %630
  %632 = sub i64 %619, %630
  %633 = getelementptr i16, i16* %593, i64 %630
  %634 = add i64 %630, -16
  %635 = lshr exact i64 %634, 4
  %636 = add nuw nsw i64 %635, 1
  %637 = and i64 %636, 3
  %638 = icmp ult i64 %634, 48
  br i1 %638, label %690, label %639

639:                                              ; preds = %629
  %640 = sub nsw i64 %636, %637
  br label %641

641:                                              ; preds = %641, %639
  %642 = phi i64 [ 0, %639 ], [ %687, %641 ]
  %643 = phi i64 [ %640, %639 ], [ %688, %641 ]
  %644 = getelementptr i16, i16* %618, i64 %642
  %645 = getelementptr i16, i16* %593, i64 %642
  %646 = bitcast i16* %645 to <8 x i16>*
  %647 = load <8 x i16>, <8 x i16>* %646, align 2, !alias.scope !264
  %648 = getelementptr i16, i16* %645, i64 8
  %649 = bitcast i16* %648 to <8 x i16>*
  %650 = load <8 x i16>, <8 x i16>* %649, align 2, !alias.scope !264
  %651 = bitcast i16* %644 to <8 x i16>*
  store <8 x i16> %647, <8 x i16>* %651, align 2, !alias.scope !267, !noalias !264
  %652 = getelementptr i16, i16* %644, i64 8
  %653 = bitcast i16* %652 to <8 x i16>*
  store <8 x i16> %650, <8 x i16>* %653, align 2, !alias.scope !267, !noalias !264
  %654 = or i64 %642, 16
  %655 = getelementptr i16, i16* %618, i64 %654
  %656 = getelementptr i16, i16* %593, i64 %654
  %657 = bitcast i16* %656 to <8 x i16>*
  %658 = load <8 x i16>, <8 x i16>* %657, align 2, !alias.scope !264
  %659 = getelementptr i16, i16* %656, i64 8
  %660 = bitcast i16* %659 to <8 x i16>*
  %661 = load <8 x i16>, <8 x i16>* %660, align 2, !alias.scope !264
  %662 = bitcast i16* %655 to <8 x i16>*
  store <8 x i16> %658, <8 x i16>* %662, align 2, !alias.scope !267, !noalias !264
  %663 = getelementptr i16, i16* %655, i64 8
  %664 = bitcast i16* %663 to <8 x i16>*
  store <8 x i16> %661, <8 x i16>* %664, align 2, !alias.scope !267, !noalias !264
  %665 = or i64 %642, 32
  %666 = getelementptr i16, i16* %618, i64 %665
  %667 = getelementptr i16, i16* %593, i64 %665
  %668 = bitcast i16* %667 to <8 x i16>*
  %669 = load <8 x i16>, <8 x i16>* %668, align 2, !alias.scope !264
  %670 = getelementptr i16, i16* %667, i64 8
  %671 = bitcast i16* %670 to <8 x i16>*
  %672 = load <8 x i16>, <8 x i16>* %671, align 2, !alias.scope !264
  %673 = bitcast i16* %666 to <8 x i16>*
  store <8 x i16> %669, <8 x i16>* %673, align 2, !alias.scope !267, !noalias !264
  %674 = getelementptr i16, i16* %666, i64 8
  %675 = bitcast i16* %674 to <8 x i16>*
  store <8 x i16> %672, <8 x i16>* %675, align 2, !alias.scope !267, !noalias !264
  %676 = or i64 %642, 48
  %677 = getelementptr i16, i16* %618, i64 %676
  %678 = getelementptr i16, i16* %593, i64 %676
  %679 = bitcast i16* %678 to <8 x i16>*
  %680 = load <8 x i16>, <8 x i16>* %679, align 2, !alias.scope !264
  %681 = getelementptr i16, i16* %678, i64 8
  %682 = bitcast i16* %681 to <8 x i16>*
  %683 = load <8 x i16>, <8 x i16>* %682, align 2, !alias.scope !264
  %684 = bitcast i16* %677 to <8 x i16>*
  store <8 x i16> %680, <8 x i16>* %684, align 2, !alias.scope !267, !noalias !264
  %685 = getelementptr i16, i16* %677, i64 8
  %686 = bitcast i16* %685 to <8 x i16>*
  store <8 x i16> %683, <8 x i16>* %686, align 2, !alias.scope !267, !noalias !264
  %687 = add i64 %642, 64
  %688 = add i64 %643, -4
  %689 = icmp eq i64 %688, 0
  br i1 %689, label %690, label %641, !llvm.loop !269

690:                                              ; preds = %641, %629
  %691 = phi i64 [ 0, %629 ], [ %687, %641 ]
  %692 = icmp eq i64 %637, 0
  br i1 %692, label %709, label %693

693:                                              ; preds = %690, %693
  %694 = phi i64 [ %706, %693 ], [ %691, %690 ]
  %695 = phi i64 [ %707, %693 ], [ %637, %690 ]
  %696 = getelementptr i16, i16* %618, i64 %694
  %697 = getelementptr i16, i16* %593, i64 %694
  %698 = bitcast i16* %697 to <8 x i16>*
  %699 = load <8 x i16>, <8 x i16>* %698, align 2, !alias.scope !264
  %700 = getelementptr i16, i16* %697, i64 8
  %701 = bitcast i16* %700 to <8 x i16>*
  %702 = load <8 x i16>, <8 x i16>* %701, align 2, !alias.scope !264
  %703 = bitcast i16* %696 to <8 x i16>*
  store <8 x i16> %699, <8 x i16>* %703, align 2, !alias.scope !267, !noalias !264
  %704 = getelementptr i16, i16* %696, i64 8
  %705 = bitcast i16* %704 to <8 x i16>*
  store <8 x i16> %702, <8 x i16>* %705, align 2, !alias.scope !267, !noalias !264
  %706 = add i64 %694, 16
  %707 = add i64 %695, -1
  %708 = icmp eq i64 %707, 0
  br i1 %708, label %709, label %693, !llvm.loop !270

709:                                              ; preds = %693, %690
  %710 = icmp eq i64 %620, %630
  br i1 %710, label %764, label %711

711:                                              ; preds = %709, %622, %617
  %712 = phi i16* [ %618, %622 ], [ %618, %617 ], [ %631, %709 ]
  %713 = phi i64 [ %619, %622 ], [ %619, %617 ], [ %632, %709 ]
  %714 = phi i16* [ %593, %622 ], [ %593, %617 ], [ %633, %709 ]
  %715 = add i64 %713, -1
  %716 = and i64 %713, 7
  %717 = icmp eq i64 %716, 0
  br i1 %717, label %729, label %718

718:                                              ; preds = %711, %718
  %719 = phi i16* [ %725, %718 ], [ %712, %711 ]
  %720 = phi i64 [ %724, %718 ], [ %713, %711 ]
  %721 = phi i16* [ %726, %718 ], [ %714, %711 ]
  %722 = phi i64 [ %727, %718 ], [ %716, %711 ]
  %723 = load i16, i16* %721, align 2
  store i16 %723, i16* %719, align 2
  %724 = add i64 %720, -1
  %725 = getelementptr inbounds i16, i16* %719, i64 1
  %726 = getelementptr inbounds i16, i16* %721, i64 1
  %727 = add i64 %722, -1
  %728 = icmp eq i64 %727, 0
  br i1 %728, label %729, label %718, !llvm.loop !271

729:                                              ; preds = %718, %711
  %730 = phi i16* [ %712, %711 ], [ %725, %718 ]
  %731 = phi i64 [ %713, %711 ], [ %724, %718 ]
  %732 = phi i16* [ %714, %711 ], [ %726, %718 ]
  %733 = icmp ult i64 %715, 7
  br i1 %733, label %764, label %734

734:                                              ; preds = %729, %734
  %735 = phi i16* [ %761, %734 ], [ %730, %729 ]
  %736 = phi i64 [ %760, %734 ], [ %731, %729 ]
  %737 = phi i16* [ %762, %734 ], [ %732, %729 ]
  %738 = load i16, i16* %737, align 2
  store i16 %738, i16* %735, align 2
  %739 = getelementptr inbounds i16, i16* %735, i64 1
  %740 = getelementptr inbounds i16, i16* %737, i64 1
  %741 = load i16, i16* %740, align 2
  store i16 %741, i16* %739, align 2
  %742 = getelementptr inbounds i16, i16* %735, i64 2
  %743 = getelementptr inbounds i16, i16* %737, i64 2
  %744 = load i16, i16* %743, align 2
  store i16 %744, i16* %742, align 2
  %745 = getelementptr inbounds i16, i16* %735, i64 3
  %746 = getelementptr inbounds i16, i16* %737, i64 3
  %747 = load i16, i16* %746, align 2
  store i16 %747, i16* %745, align 2
  %748 = getelementptr inbounds i16, i16* %735, i64 4
  %749 = getelementptr inbounds i16, i16* %737, i64 4
  %750 = load i16, i16* %749, align 2
  store i16 %750, i16* %748, align 2
  %751 = getelementptr inbounds i16, i16* %735, i64 5
  %752 = getelementptr inbounds i16, i16* %737, i64 5
  %753 = load i16, i16* %752, align 2
  store i16 %753, i16* %751, align 2
  %754 = getelementptr inbounds i16, i16* %735, i64 6
  %755 = getelementptr inbounds i16, i16* %737, i64 6
  %756 = load i16, i16* %755, align 2
  store i16 %756, i16* %754, align 2
  %757 = getelementptr inbounds i16, i16* %735, i64 7
  %758 = getelementptr inbounds i16, i16* %737, i64 7
  %759 = load i16, i16* %758, align 2
  store i16 %759, i16* %757, align 2
  %760 = add i64 %736, -8
  %761 = getelementptr inbounds i16, i16* %735, i64 8
  %762 = getelementptr inbounds i16, i16* %737, i64 8
  %763 = icmp eq i64 %760, 0
  br i1 %763, label %764, label %734, !llvm.loop !272

764:                                              ; preds = %729, %734, %709, %589
  %765 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %766 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %16, i64 0, i32 1
  %767 = load i64, i64* %766, align 8
  store i64 %767, i64* %765, align 8
  store i8 1, i8* %532, align 8
  br label %768

768:                                              ; preds = %764, %580, %566
  %769 = load i8, i8* %569, align 1
  %770 = icmp slt i8 %769, 0
  br i1 %770, label %771, label %782

771:                                              ; preds = %768
  %772 = bitcast %"class.v8_inspector::String16"* %16 to i8**
  %773 = load i8*, i8** %772, align 8
  call void @_ZdlPv(i8* %773) #16
  br label %782

774:                                              ; preds = %531
  %775 = bitcast %"class.v8_inspector::String16"* %15 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %776 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %775, i64 0, i32 1, i32 1
  %777 = load i8, i8* %776, align 1
  %778 = icmp slt i8 %777, 0
  br i1 %778, label %779, label %782

779:                                              ; preds = %774
  %780 = bitcast %"class.v8_inspector::String16"* %15 to i8**
  %781 = load i8*, i8** %780, align 8
  call void @_ZdlPv(i8* %781) #16
  br label %782

782:                                              ; preds = %779, %774, %771, %768
  %783 = phi i8* [ %567, %768 ], [ %567, %771 ], [ %535, %774 ], [ %535, %779 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %783) #15
  br label %784

784:                                              ; preds = %782, %565
  %785 = load i8, i8* %532, align 8, !range !7
  %786 = icmp eq i8 %785, 0
  br i1 %786, label %787, label %978

787:                                              ; preds = %784
  %788 = load i8, i8* %25, align 8, !range !7
  %789 = icmp eq i8 %788, 0
  %790 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %791 = select i1 %789, %"class.v8_inspector::String16"* %9, %"class.v8_inspector::String16"* %790
  %792 = bitcast %"class.v8_inspector::String16"* %791 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %793 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %792, i64 0, i32 1, i32 1
  %794 = load i8, i8* %793, align 1
  %795 = icmp slt i8 %794, 0
  br i1 %795, label %799, label %796

796:                                              ; preds = %787
  %797 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  %798 = bitcast %"class.v8_inspector::String16"* %791 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %797, i8* align 8 %798, i64 24, i1 false) #15
  br label %974

799:                                              ; preds = %787
  %800 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %791, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %801 = load i16*, i16** %800, align 8
  %802 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %791, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %803 = load i64, i64* %802, align 8
  %804 = icmp ult i64 %803, 11
  br i1 %804, label %805, label %810

805:                                              ; preds = %799
  %806 = bitcast %"class.v8_inspector::String16"* %0 to i16*
  %807 = trunc i64 %803 to i8
  %808 = bitcast %"class.v8_inspector::String16"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %809 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %808, i64 0, i32 1, i32 1
  store i8 %807, i8* %809, align 1
  br label %827

810:                                              ; preds = %799
  %811 = icmp ugt i64 %803, 9223372036854775791
  br i1 %811, label %812, label %814

812:                                              ; preds = %810
  %813 = bitcast %"class.v8_inspector::String16"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %813) #14
  unreachable

814:                                              ; preds = %810
  %815 = add nuw nsw i64 %803, 8
  %816 = and i64 %815, -8
  %817 = icmp slt i64 %816, 0
  br i1 %817, label %818, label %819

818:                                              ; preds = %814
  call void @abort() #14
  unreachable

819:                                              ; preds = %814
  %820 = shl i64 %816, 1
  %821 = call i8* @_Znwm(i64 %820) #16
  %822 = bitcast i8* %821 to i16*
  %823 = bitcast %"class.v8_inspector::String16"* %0 to i8**
  store i8* %821, i8** %823, align 8
  %824 = or i64 %816, -9223372036854775808
  %825 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %824, i64* %825, align 8
  %826 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %803, i64* %826, align 8
  br label %827

827:                                              ; preds = %819, %805
  %828 = phi i16* [ %806, %805 ], [ %822, %819 ]
  %829 = add nuw nsw i64 %803, 1
  %830 = add i64 %803, 1
  %831 = icmp ult i64 %830, 16
  br i1 %831, label %921, label %832

832:                                              ; preds = %827
  %833 = add i64 %803, 1
  %834 = getelementptr i16, i16* %828, i64 %833
  %835 = getelementptr i16, i16* %801, i64 %833
  %836 = icmp ult i16* %828, %835
  %837 = icmp ult i16* %801, %834
  %838 = and i1 %836, %837
  br i1 %838, label %921, label %839

839:                                              ; preds = %832
  %840 = and i64 %830, -16
  %841 = getelementptr i16, i16* %828, i64 %840
  %842 = sub i64 %829, %840
  %843 = getelementptr i16, i16* %801, i64 %840
  %844 = add i64 %840, -16
  %845 = lshr exact i64 %844, 4
  %846 = add nuw nsw i64 %845, 1
  %847 = and i64 %846, 3
  %848 = icmp ult i64 %844, 48
  br i1 %848, label %900, label %849

849:                                              ; preds = %839
  %850 = sub nsw i64 %846, %847
  br label %851

851:                                              ; preds = %851, %849
  %852 = phi i64 [ 0, %849 ], [ %897, %851 ]
  %853 = phi i64 [ %850, %849 ], [ %898, %851 ]
  %854 = getelementptr i16, i16* %828, i64 %852
  %855 = getelementptr i16, i16* %801, i64 %852
  %856 = bitcast i16* %855 to <8 x i16>*
  %857 = load <8 x i16>, <8 x i16>* %856, align 2, !alias.scope !273
  %858 = getelementptr i16, i16* %855, i64 8
  %859 = bitcast i16* %858 to <8 x i16>*
  %860 = load <8 x i16>, <8 x i16>* %859, align 2, !alias.scope !273
  %861 = bitcast i16* %854 to <8 x i16>*
  store <8 x i16> %857, <8 x i16>* %861, align 2, !alias.scope !276, !noalias !273
  %862 = getelementptr i16, i16* %854, i64 8
  %863 = bitcast i16* %862 to <8 x i16>*
  store <8 x i16> %860, <8 x i16>* %863, align 2, !alias.scope !276, !noalias !273
  %864 = or i64 %852, 16
  %865 = getelementptr i16, i16* %828, i64 %864
  %866 = getelementptr i16, i16* %801, i64 %864
  %867 = bitcast i16* %866 to <8 x i16>*
  %868 = load <8 x i16>, <8 x i16>* %867, align 2, !alias.scope !273
  %869 = getelementptr i16, i16* %866, i64 8
  %870 = bitcast i16* %869 to <8 x i16>*
  %871 = load <8 x i16>, <8 x i16>* %870, align 2, !alias.scope !273
  %872 = bitcast i16* %865 to <8 x i16>*
  store <8 x i16> %868, <8 x i16>* %872, align 2, !alias.scope !276, !noalias !273
  %873 = getelementptr i16, i16* %865, i64 8
  %874 = bitcast i16* %873 to <8 x i16>*
  store <8 x i16> %871, <8 x i16>* %874, align 2, !alias.scope !276, !noalias !273
  %875 = or i64 %852, 32
  %876 = getelementptr i16, i16* %828, i64 %875
  %877 = getelementptr i16, i16* %801, i64 %875
  %878 = bitcast i16* %877 to <8 x i16>*
  %879 = load <8 x i16>, <8 x i16>* %878, align 2, !alias.scope !273
  %880 = getelementptr i16, i16* %877, i64 8
  %881 = bitcast i16* %880 to <8 x i16>*
  %882 = load <8 x i16>, <8 x i16>* %881, align 2, !alias.scope !273
  %883 = bitcast i16* %876 to <8 x i16>*
  store <8 x i16> %879, <8 x i16>* %883, align 2, !alias.scope !276, !noalias !273
  %884 = getelementptr i16, i16* %876, i64 8
  %885 = bitcast i16* %884 to <8 x i16>*
  store <8 x i16> %882, <8 x i16>* %885, align 2, !alias.scope !276, !noalias !273
  %886 = or i64 %852, 48
  %887 = getelementptr i16, i16* %828, i64 %886
  %888 = getelementptr i16, i16* %801, i64 %886
  %889 = bitcast i16* %888 to <8 x i16>*
  %890 = load <8 x i16>, <8 x i16>* %889, align 2, !alias.scope !273
  %891 = getelementptr i16, i16* %888, i64 8
  %892 = bitcast i16* %891 to <8 x i16>*
  %893 = load <8 x i16>, <8 x i16>* %892, align 2, !alias.scope !273
  %894 = bitcast i16* %887 to <8 x i16>*
  store <8 x i16> %890, <8 x i16>* %894, align 2, !alias.scope !276, !noalias !273
  %895 = getelementptr i16, i16* %887, i64 8
  %896 = bitcast i16* %895 to <8 x i16>*
  store <8 x i16> %893, <8 x i16>* %896, align 2, !alias.scope !276, !noalias !273
  %897 = add i64 %852, 64
  %898 = add i64 %853, -4
  %899 = icmp eq i64 %898, 0
  br i1 %899, label %900, label %851, !llvm.loop !278

900:                                              ; preds = %851, %839
  %901 = phi i64 [ 0, %839 ], [ %897, %851 ]
  %902 = icmp eq i64 %847, 0
  br i1 %902, label %919, label %903

903:                                              ; preds = %900, %903
  %904 = phi i64 [ %916, %903 ], [ %901, %900 ]
  %905 = phi i64 [ %917, %903 ], [ %847, %900 ]
  %906 = getelementptr i16, i16* %828, i64 %904
  %907 = getelementptr i16, i16* %801, i64 %904
  %908 = bitcast i16* %907 to <8 x i16>*
  %909 = load <8 x i16>, <8 x i16>* %908, align 2, !alias.scope !273
  %910 = getelementptr i16, i16* %907, i64 8
  %911 = bitcast i16* %910 to <8 x i16>*
  %912 = load <8 x i16>, <8 x i16>* %911, align 2, !alias.scope !273
  %913 = bitcast i16* %906 to <8 x i16>*
  store <8 x i16> %909, <8 x i16>* %913, align 2, !alias.scope !276, !noalias !273
  %914 = getelementptr i16, i16* %906, i64 8
  %915 = bitcast i16* %914 to <8 x i16>*
  store <8 x i16> %912, <8 x i16>* %915, align 2, !alias.scope !276, !noalias !273
  %916 = add i64 %904, 16
  %917 = add i64 %905, -1
  %918 = icmp eq i64 %917, 0
  br i1 %918, label %919, label %903, !llvm.loop !279

919:                                              ; preds = %903, %900
  %920 = icmp eq i64 %830, %840
  br i1 %920, label %974, label %921

921:                                              ; preds = %919, %832, %827
  %922 = phi i16* [ %828, %832 ], [ %828, %827 ], [ %841, %919 ]
  %923 = phi i64 [ %829, %832 ], [ %829, %827 ], [ %842, %919 ]
  %924 = phi i16* [ %801, %832 ], [ %801, %827 ], [ %843, %919 ]
  %925 = add i64 %923, -1
  %926 = and i64 %923, 7
  %927 = icmp eq i64 %926, 0
  br i1 %927, label %939, label %928

928:                                              ; preds = %921, %928
  %929 = phi i16* [ %935, %928 ], [ %922, %921 ]
  %930 = phi i64 [ %934, %928 ], [ %923, %921 ]
  %931 = phi i16* [ %936, %928 ], [ %924, %921 ]
  %932 = phi i64 [ %937, %928 ], [ %926, %921 ]
  %933 = load i16, i16* %931, align 2
  store i16 %933, i16* %929, align 2
  %934 = add i64 %930, -1
  %935 = getelementptr inbounds i16, i16* %929, i64 1
  %936 = getelementptr inbounds i16, i16* %931, i64 1
  %937 = add i64 %932, -1
  %938 = icmp eq i64 %937, 0
  br i1 %938, label %939, label %928, !llvm.loop !280

939:                                              ; preds = %928, %921
  %940 = phi i16* [ %922, %921 ], [ %935, %928 ]
  %941 = phi i64 [ %923, %921 ], [ %934, %928 ]
  %942 = phi i16* [ %924, %921 ], [ %936, %928 ]
  %943 = icmp ult i64 %925, 7
  br i1 %943, label %974, label %944

944:                                              ; preds = %939, %944
  %945 = phi i16* [ %971, %944 ], [ %940, %939 ]
  %946 = phi i64 [ %970, %944 ], [ %941, %939 ]
  %947 = phi i16* [ %972, %944 ], [ %942, %939 ]
  %948 = load i16, i16* %947, align 2
  store i16 %948, i16* %945, align 2
  %949 = getelementptr inbounds i16, i16* %945, i64 1
  %950 = getelementptr inbounds i16, i16* %947, i64 1
  %951 = load i16, i16* %950, align 2
  store i16 %951, i16* %949, align 2
  %952 = getelementptr inbounds i16, i16* %945, i64 2
  %953 = getelementptr inbounds i16, i16* %947, i64 2
  %954 = load i16, i16* %953, align 2
  store i16 %954, i16* %952, align 2
  %955 = getelementptr inbounds i16, i16* %945, i64 3
  %956 = getelementptr inbounds i16, i16* %947, i64 3
  %957 = load i16, i16* %956, align 2
  store i16 %957, i16* %955, align 2
  %958 = getelementptr inbounds i16, i16* %945, i64 4
  %959 = getelementptr inbounds i16, i16* %947, i64 4
  %960 = load i16, i16* %959, align 2
  store i16 %960, i16* %958, align 2
  %961 = getelementptr inbounds i16, i16* %945, i64 5
  %962 = getelementptr inbounds i16, i16* %947, i64 5
  %963 = load i16, i16* %962, align 2
  store i16 %963, i16* %961, align 2
  %964 = getelementptr inbounds i16, i16* %945, i64 6
  %965 = getelementptr inbounds i16, i16* %947, i64 6
  %966 = load i16, i16* %965, align 2
  store i16 %966, i16* %964, align 2
  %967 = getelementptr inbounds i16, i16* %945, i64 7
  %968 = getelementptr inbounds i16, i16* %947, i64 7
  %969 = load i16, i16* %968, align 2
  store i16 %969, i16* %967, align 2
  %970 = add i64 %946, -8
  %971 = getelementptr inbounds i16, i16* %945, i64 8
  %972 = getelementptr inbounds i16, i16* %947, i64 8
  %973 = icmp eq i64 %970, 0
  br i1 %973, label %974, label %944, !llvm.loop !281

974:                                              ; preds = %939, %944, %919, %796
  %975 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 1
  %976 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %791, i64 0, i32 1
  %977 = load i64, i64* %976, align 8
  store i64 %977, i64* %975, align 8
  br label %1159

978:                                              ; preds = %784
  %979 = bitcast %"class.v8_inspector::String16"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %979) #15
  %980 = bitcast %"class.v8_inspector::String16"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %980) #15
  %981 = bitcast %"class.v8_inspector::String16"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %981) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i64 0, i64 0)) #15
  %982 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %982) #15, !noalias !282
  %983 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %9, i64 0, i32 0
  %984 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %19, i64 0, i32 0
  call void @_ZNSt3__1plItNS_11char_traitsItEENS_9allocatorItEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %983, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %984) #15, !noalias !282
  call void @_ZN12v8_inspector8String16C1EONSt3__112basic_stringItNS1_11char_traitsItEENS1_9allocatorItEEEE(%"class.v8_inspector::String16"* nonnull %18, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #15
  %985 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %986 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %985, i64 0, i32 1, i32 1
  %987 = load i8, i8* %986, align 1, !noalias !282
  %988 = icmp slt i8 %987, 0
  br i1 %988, label %989, label %992

989:                                              ; preds = %978
  %990 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %991 = load i8*, i8** %990, align 8, !noalias !282
  call void @_ZdlPv(i8* %991) #16
  br label %992

992:                                              ; preds = %978, %989
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %982) #15, !noalias !282
  %993 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %994 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %994) #15, !noalias !285
  %995 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %18, i64 0, i32 0
  %996 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %993, i64 0, i32 0
  call void @_ZNSt3__1plItNS_11char_traitsItEENS_9allocatorItEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %995, %"class.std::__1::basic_string"* dereferenceable(24) %996) #15, !noalias !285
  call void @_ZN12v8_inspector8String16C1EONSt3__112basic_stringItNS1_11char_traitsItEENS1_9allocatorItEEEE(%"class.v8_inspector::String16"* nonnull %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #15
  %997 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %998 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %997, i64 0, i32 1, i32 1
  %999 = load i8, i8* %998, align 1, !noalias !285
  %1000 = icmp slt i8 %999, 0
  br i1 %1000, label %1001, label %1004

1001:                                             ; preds = %992
  %1002 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %1003 = load i8*, i8** %1002, align 8, !noalias !285
  call void @_ZdlPv(i8* %1003) #16
  br label %1004

1004:                                             ; preds = %992, %1001
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %994) #15, !noalias !285
  %1005 = bitcast %"class.v8_inspector::String16"* %18 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1006 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1005, i64 0, i32 1, i32 1
  %1007 = load i8, i8* %1006, align 1
  %1008 = icmp slt i8 %1007, 0
  br i1 %1008, label %1009, label %1012

1009:                                             ; preds = %1004
  %1010 = bitcast %"class.v8_inspector::String16"* %18 to i8**
  %1011 = load i8*, i8** %1010, align 8
  call void @_ZdlPv(i8* %1011) #16
  br label %1012

1012:                                             ; preds = %1004, %1009
  %1013 = bitcast %"class.v8_inspector::String16"* %19 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1014 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1013, i64 0, i32 1, i32 1
  %1015 = load i8, i8* %1014, align 1
  %1016 = icmp slt i8 %1015, 0
  br i1 %1016, label %1017, label %1020

1017:                                             ; preds = %1012
  %1018 = bitcast %"class.v8_inspector::String16"* %19 to i8**
  %1019 = load i8*, i8** %1018, align 8
  call void @_ZdlPv(i8* %1019) #16
  br label %1020

1020:                                             ; preds = %1012, %1017
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %981) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %980) #15
  %1021 = load i8, i8* %25, align 8, !range !7
  %1022 = icmp eq i8 %1021, 0
  br i1 %1022, label %1023, label %1028

1023:                                             ; preds = %1020
  %1024 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1024, i8* nonnull align 8 %979, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %979, i8 0, i64 24, i1 false) #15
  %1025 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 1
  %1026 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %17, i64 0, i32 1
  %1027 = load i64, i64* %1026, align 8
  store i64 %1027, i64* %1025, align 8
  br label %1147

1028:                                             ; preds = %1020
  %1029 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1030 = bitcast %"class.v8_inspector::String16"* %1029 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1031 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1030, i64 0, i32 1, i32 1
  %1032 = load i8, i8* %1031, align 1
  %1033 = icmp slt i8 %1032, 0
  %1034 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1029, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1035 = load i16*, i16** %1034, align 8
  %1036 = bitcast %"class.v8_inspector::String16"* %1029 to i16*
  %1037 = select i1 %1033, i16* %1035, i16* %1036
  %1038 = bitcast %"class.v8_inspector::String16"* %993 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1039 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1038, i64 0, i32 1, i32 1
  %1040 = load i8, i8* %1039, align 1
  %1041 = icmp slt i8 %1040, 0
  %1042 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %993, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1043 = load i16*, i16** %1042, align 8
  %1044 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1045 = load i64, i64* %1044, align 8
  %1046 = bitcast %"class.v8_inspector::String16"* %993 to i16*
  %1047 = zext i8 %1040 to i64
  %1048 = select i1 %1041, i16* %1043, i16* %1046
  %1049 = select i1 %1041, i64 %1045, i64 %1047
  %1050 = icmp eq i64 %1049, 0
  br i1 %1050, label %1051, label %1053

1051:                                             ; preds = %1028
  %1052 = bitcast %"class.v8_inspector::String16"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1052) #15
  br label %1113

1053:                                             ; preds = %1028
  %1054 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1055 = load i64, i64* %1054, align 8
  %1056 = zext i8 %1032 to i64
  %1057 = select i1 %1033, i64 %1055, i64 %1056
  %1058 = getelementptr inbounds i16, i16* %1037, i64 %1057
  %1059 = shl nuw i64 %1049, 1
  %1060 = ashr exact i64 %1059, 1
  %1061 = ptrtoint i16* %1058 to i64
  %1062 = ptrtoint i16* %1037 to i64
  %1063 = shl nuw i64 %1057, 1
  %1064 = ashr exact i64 %1063, 1
  %1065 = icmp slt i64 %1064, %1060
  br i1 %1065, label %1107, label %1066

1066:                                             ; preds = %1053
  %1067 = load i16, i16* %1048, align 2
  br label %1068

1068:                                             ; preds = %1097, %1066
  %1069 = phi i64 [ %1101, %1097 ], [ %1064, %1066 ]
  %1070 = phi i16* [ %1098, %1097 ], [ %1037, %1066 ]
  %1071 = sub nsw i64 %1069, %1060
  %1072 = add nsw i64 %1071, 1
  %1073 = icmp eq i64 %1072, 0
  br i1 %1073, label %1107, label %1074

1074:                                             ; preds = %1068, %1079
  %1075 = phi i64 [ %1081, %1079 ], [ %1072, %1068 ]
  %1076 = phi i16* [ %1080, %1079 ], [ %1070, %1068 ]
  %1077 = load i16, i16* %1076, align 2
  %1078 = icmp eq i16 %1077, %1067
  br i1 %1078, label %1083, label %1079

1079:                                             ; preds = %1074
  %1080 = getelementptr inbounds i16, i16* %1076, i64 1
  %1081 = add i64 %1075, -1
  %1082 = icmp eq i64 %1081, 0
  br i1 %1082, label %1107, label %1074

1083:                                             ; preds = %1074
  %1084 = icmp eq i16* %1076, null
  br i1 %1084, label %1107, label %1085

1085:                                             ; preds = %1083, %1092
  %1086 = phi i16* [ %1090, %1092 ], [ %1076, %1083 ]
  %1087 = phi i16* [ %1093, %1092 ], [ %1048, %1083 ]
  %1088 = phi i64 [ %1089, %1092 ], [ %1060, %1083 ]
  %1089 = add i64 %1088, -1
  %1090 = getelementptr inbounds i16, i16* %1086, i64 1
  %1091 = icmp eq i64 %1089, 0
  br i1 %1091, label %1103, label %1092

1092:                                             ; preds = %1085
  %1093 = getelementptr inbounds i16, i16* %1087, i64 1
  %1094 = load i16, i16* %1090, align 2
  %1095 = load i16, i16* %1093, align 2
  %1096 = icmp eq i16 %1095, %1094
  br i1 %1096, label %1085, label %1097

1097:                                             ; preds = %1092
  %1098 = getelementptr inbounds i16, i16* %1076, i64 1
  %1099 = ptrtoint i16* %1098 to i64
  %1100 = sub i64 %1061, %1099
  %1101 = ashr exact i64 %1100, 1
  %1102 = icmp slt i64 %1101, %1060
  br i1 %1102, label %1107, label %1068

1103:                                             ; preds = %1085
  %1104 = ptrtoint i16* %1076 to i64
  %1105 = icmp eq i16* %1076, %1058
  %1106 = sub i64 %1104, %1062
  br i1 %1105, label %1107, label %1109

1107:                                             ; preds = %1097, %1083, %1068, %1079, %1053, %1103
  %1108 = bitcast %"class.v8_inspector::String16"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1108) #15
  br label %1117

1109:                                             ; preds = %1103
  %1110 = ashr exact i64 %1106, 1
  %1111 = bitcast %"class.v8_inspector::String16"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1111) #15
  %1112 = icmp eq i64 %1106, -2
  br i1 %1112, label %1117, label %1113

1113:                                             ; preds = %1051, %1109
  %1114 = phi i8* [ %1052, %1051 ], [ %1111, %1109 ]
  %1115 = phi i64 [ 0, %1051 ], [ %1110, %1109 ]
  %1116 = add i64 %1115, %1049
  call void @_ZNK12v8_inspector8String169substringEmm(%"class.v8_inspector::String16"* nonnull sret %20, %"class.v8_inspector::String16"* %1029, i64 %1116, i64 4294967295)
  br label %1119

1117:                                             ; preds = %1107, %1109
  %1118 = phi i8* [ %1108, %1107 ], [ %1111, %1109 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1118, i8 0, i64 32, i1 false)
  br label %1119

1119:                                             ; preds = %1117, %1113
  %1120 = phi i8* [ %1118, %1117 ], [ %1114, %1113 ]
  %1121 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1121) #15, !noalias !288
  %1122 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %17, i64 0, i32 0
  %1123 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %20, i64 0, i32 0
  call void @_ZNSt3__1plItNS_11char_traitsItEENS_9allocatorItEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %1122, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %1123) #15, !noalias !288
  call void @_ZN12v8_inspector8String16C1EONSt3__112basic_stringItNS1_11char_traitsItEENS1_9allocatorItEEEE(%"class.v8_inspector::String16"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #15
  %1124 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1125 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1124, i64 0, i32 1, i32 1
  %1126 = load i8, i8* %1125, align 1, !noalias !288
  %1127 = icmp slt i8 %1126, 0
  br i1 %1127, label %1128, label %1131

1128:                                             ; preds = %1119
  %1129 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %1130 = load i8*, i8** %1129, align 8, !noalias !288
  call void @_ZdlPv(i8* %1130) #16
  br label %1131

1131:                                             ; preds = %1119, %1128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1121) #15, !noalias !288
  %1132 = bitcast %"class.v8_inspector::String16"* %20 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1133 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1132, i64 0, i32 1, i32 1
  %1134 = load i8, i8* %1133, align 1
  %1135 = icmp slt i8 %1134, 0
  br i1 %1135, label %1136, label %1139

1136:                                             ; preds = %1131
  %1137 = bitcast %"class.v8_inspector::String16"* %20 to i8**
  %1138 = load i8*, i8** %1137, align 8
  call void @_ZdlPv(i8* %1138) #16
  br label %1139

1139:                                             ; preds = %1136, %1131
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1120) #15
  %1140 = bitcast %"class.v8_inspector::String16"* %17 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1141 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1140, i64 0, i32 1, i32 1
  %1142 = load i8, i8* %1141, align 1
  %1143 = icmp slt i8 %1142, 0
  br i1 %1143, label %1144, label %1147

1144:                                             ; preds = %1139
  %1145 = bitcast %"class.v8_inspector::String16"* %17 to i8**
  %1146 = load i8*, i8** %1145, align 8
  call void @_ZdlPv(i8* %1146) #16
  br label %1147

1147:                                             ; preds = %1144, %1139, %1023
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %979) #15
  %1148 = load i8, i8* %532, align 8, !range !7
  %1149 = icmp eq i8 %1148, 0
  br i1 %1149, label %1159, label %1150

1150:                                             ; preds = %1147
  %1151 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1152 = bitcast %"class.v8_inspector::String16"* %1151 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1153 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1152, i64 0, i32 1, i32 1
  %1154 = load i8, i8* %1153, align 1
  %1155 = icmp slt i8 %1154, 0
  br i1 %1155, label %1156, label %1159

1156:                                             ; preds = %1150
  %1157 = bitcast %"class.v8_inspector::String16"* %1151 to i8**
  %1158 = load i8*, i8** %1157, align 8
  call void @_ZdlPv(i8* %1158) #16
  br label %1159

1159:                                             ; preds = %974, %1147, %1150, %1156
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %532) #15
  br label %1160

1160:                                             ; preds = %1159, %527, %285
  %1161 = load i8, i8* %25, align 8, !range !7
  %1162 = icmp eq i8 %1161, 0
  br i1 %1162, label %1172, label %1163

1163:                                             ; preds = %1160
  %1164 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1165 = bitcast %"class.v8_inspector::String16"* %1164 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1166 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1165, i64 0, i32 1, i32 1
  %1167 = load i8, i8* %1166, align 1
  %1168 = icmp slt i8 %1167, 0
  br i1 %1168, label %1169, label %1172

1169:                                             ; preds = %1163
  %1170 = bitcast %"class.v8_inspector::String16"* %1164 to i8**
  %1171 = load i8*, i8** %1170, align 8
  call void @_ZdlPv(i8* %1171) #16
  br label %1172

1172:                                             ; preds = %1160, %1163, %1169
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #15
  %1173 = bitcast %"class.v8_inspector::String16"* %9 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1174 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1173, i64 0, i32 1, i32 1
  %1175 = load i8, i8* %1174, align 1
  %1176 = icmp slt i8 %1175, 0
  br i1 %1176, label %1177, label %1180

1177:                                             ; preds = %1172
  %1178 = bitcast %"class.v8_inspector::String16"* %9 to i8**
  %1179 = load i8*, i8** %1178, align 8
  call void @_ZdlPv(i8* %1179) #16
  br label %1180

1180:                                             ; preds = %1172, %1177
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #15
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %22) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12v8_inspector12_GLOBAL__N_124descriptionForCollectionEPN2v87IsolateENS1_5LocalINS1_6ObjectEEEm(%"class.v8_inspector::String16"* noalias, %"class.v8::Isolate"*, %"class.v8::Object"*, i64) unnamed_addr #2 {
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #15
  %9 = tail call %"class.v8::String"* @_ZN2v86Object18GetConstructorNameEv(%"class.v8::Object"* %2) #15
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::String"* %9) #15
  %10 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %8, i64 24, i1 false) #15
  br label %191

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp ult i64 %20, 11
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = bitcast %"class.v8_inspector::String16"* %6 to i16*
  %24 = trunc i64 %20 to i8
  %25 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %25, i64 0, i32 1, i32 1
  store i8 %24, i8* %26, align 1
  br label %44

27:                                               ; preds = %16
  %28 = icmp ugt i64 %20, 9223372036854775791
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = bitcast %"class.v8_inspector::String16"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %30) #14
  unreachable

31:                                               ; preds = %27
  %32 = add nuw nsw i64 %20, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  call void @abort() #14
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = call i8* @_Znwm(i64 %37) #16
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %20, i64* %43, align 8
  br label %44

44:                                               ; preds = %36, %22
  %45 = phi i16* [ %23, %22 ], [ %39, %36 ]
  %46 = add nuw nsw i64 %20, 1
  %47 = add i64 %20, 1
  %48 = icmp ult i64 %47, 16
  br i1 %48, label %138, label %49

49:                                               ; preds = %44
  %50 = add i64 %20, 1
  %51 = getelementptr i16, i16* %45, i64 %50
  %52 = getelementptr i16, i16* %18, i64 %50
  %53 = icmp ult i16* %45, %52
  %54 = icmp ult i16* %18, %51
  %55 = and i1 %53, %54
  br i1 %55, label %138, label %56

56:                                               ; preds = %49
  %57 = and i64 %47, -16
  %58 = getelementptr i16, i16* %45, i64 %57
  %59 = sub i64 %46, %57
  %60 = getelementptr i16, i16* %18, i64 %57
  %61 = add i64 %57, -16
  %62 = lshr exact i64 %61, 4
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp ult i64 %61, 48
  br i1 %65, label %117, label %66

66:                                               ; preds = %56
  %67 = sub nsw i64 %63, %64
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i64 [ 0, %66 ], [ %114, %68 ]
  %70 = phi i64 [ %67, %66 ], [ %115, %68 ]
  %71 = getelementptr i16, i16* %45, i64 %69
  %72 = getelementptr i16, i16* %18, i64 %69
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !291
  %75 = getelementptr i16, i16* %72, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !291
  %78 = bitcast i16* %71 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %78, align 2, !alias.scope !294, !noalias !291
  %79 = getelementptr i16, i16* %71, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %80, align 2, !alias.scope !294, !noalias !291
  %81 = or i64 %69, 16
  %82 = getelementptr i16, i16* %45, i64 %81
  %83 = getelementptr i16, i16* %18, i64 %81
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !291
  %86 = getelementptr i16, i16* %83, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !291
  %89 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %89, align 2, !alias.scope !294, !noalias !291
  %90 = getelementptr i16, i16* %82, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %91, align 2, !alias.scope !294, !noalias !291
  %92 = or i64 %69, 32
  %93 = getelementptr i16, i16* %45, i64 %92
  %94 = getelementptr i16, i16* %18, i64 %92
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !291
  %97 = getelementptr i16, i16* %94, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !291
  %100 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %100, align 2, !alias.scope !294, !noalias !291
  %101 = getelementptr i16, i16* %93, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %102, align 2, !alias.scope !294, !noalias !291
  %103 = or i64 %69, 48
  %104 = getelementptr i16, i16* %45, i64 %103
  %105 = getelementptr i16, i16* %18, i64 %103
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !291
  %108 = getelementptr i16, i16* %105, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !291
  %111 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %111, align 2, !alias.scope !294, !noalias !291
  %112 = getelementptr i16, i16* %104, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %113, align 2, !alias.scope !294, !noalias !291
  %114 = add i64 %69, 64
  %115 = add i64 %70, -4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %68, !llvm.loop !296

117:                                              ; preds = %68, %56
  %118 = phi i64 [ 0, %56 ], [ %114, %68 ]
  %119 = icmp eq i64 %64, 0
  br i1 %119, label %136, label %120

120:                                              ; preds = %117, %120
  %121 = phi i64 [ %133, %120 ], [ %118, %117 ]
  %122 = phi i64 [ %134, %120 ], [ %64, %117 ]
  %123 = getelementptr i16, i16* %45, i64 %121
  %124 = getelementptr i16, i16* %18, i64 %121
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !291
  %127 = getelementptr i16, i16* %124, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !291
  %130 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %130, align 2, !alias.scope !294, !noalias !291
  %131 = getelementptr i16, i16* %123, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %132, align 2, !alias.scope !294, !noalias !291
  %133 = add i64 %121, 16
  %134 = add i64 %122, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %120, !llvm.loop !297

136:                                              ; preds = %120, %117
  %137 = icmp eq i64 %47, %57
  br i1 %137, label %191, label %138

138:                                              ; preds = %136, %49, %44
  %139 = phi i16* [ %45, %49 ], [ %45, %44 ], [ %58, %136 ]
  %140 = phi i64 [ %46, %49 ], [ %46, %44 ], [ %59, %136 ]
  %141 = phi i16* [ %18, %49 ], [ %18, %44 ], [ %60, %136 ]
  %142 = add i64 %140, -1
  %143 = and i64 %140, 7
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %138, %145
  %146 = phi i16* [ %152, %145 ], [ %139, %138 ]
  %147 = phi i64 [ %151, %145 ], [ %140, %138 ]
  %148 = phi i16* [ %153, %145 ], [ %141, %138 ]
  %149 = phi i64 [ %154, %145 ], [ %143, %138 ]
  %150 = load i16, i16* %148, align 2
  store i16 %150, i16* %146, align 2
  %151 = add i64 %147, -1
  %152 = getelementptr inbounds i16, i16* %146, i64 1
  %153 = getelementptr inbounds i16, i16* %148, i64 1
  %154 = add i64 %149, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %145, !llvm.loop !298

156:                                              ; preds = %145, %138
  %157 = phi i16* [ %139, %138 ], [ %152, %145 ]
  %158 = phi i64 [ %140, %138 ], [ %151, %145 ]
  %159 = phi i16* [ %141, %138 ], [ %153, %145 ]
  %160 = icmp ult i64 %142, 7
  br i1 %160, label %191, label %161

161:                                              ; preds = %156, %161
  %162 = phi i16* [ %188, %161 ], [ %157, %156 ]
  %163 = phi i64 [ %187, %161 ], [ %158, %156 ]
  %164 = phi i16* [ %189, %161 ], [ %159, %156 ]
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %162, align 2
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = getelementptr inbounds i16, i16* %164, i64 1
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %162, i64 2
  %170 = getelementptr inbounds i16, i16* %164, i64 2
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %162, i64 3
  %173 = getelementptr inbounds i16, i16* %164, i64 3
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %162, i64 4
  %176 = getelementptr inbounds i16, i16* %164, i64 4
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %162, i64 5
  %179 = getelementptr inbounds i16, i16* %164, i64 5
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %162, i64 6
  %182 = getelementptr inbounds i16, i16* %164, i64 6
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %162, i64 7
  %185 = getelementptr inbounds i16, i16* %164, i64 7
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %163, -8
  %188 = getelementptr inbounds i16, i16* %162, i64 8
  %189 = getelementptr inbounds i16, i16* %164, i64 8
  %190 = icmp eq i64 %187, 0
  br i1 %190, label %191, label %161, !llvm.loop !299

191:                                              ; preds = %156, %161, %136, %14
  %192 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 1
  %193 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 1
  %194 = load i64, i64* %193, align 8
  store i64 %194, i64* %192, align 8
  call void @_ZN12v8_inspector8String1611fromIntegerEm(%"class.v8_inspector::String16"* nonnull sret %7, i64 %3) #15
  call void @_ZN12v8_inspector8String166concatIJS0_cS0_cEEES0_DpT_(%"class.v8_inspector::String16"* sret %0, %"class.v8_inspector::String16"* nonnull %6, i8 signext 40, %"class.v8_inspector::String16"* nonnull %7, i8 signext 41)
  %195 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %196 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %195, i64 0, i32 1, i32 1
  %197 = load i8, i8* %196, align 1
  %198 = icmp slt i8 %197, 0
  br i1 %198, label %199, label %202

199:                                              ; preds = %191
  %200 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %201 = load i8*, i8** %200, align 8
  call void @_ZdlPv(i8* %201) #16
  br label %202

202:                                              ; preds = %191, %199
  %203 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %203, i64 0, i32 1, i32 1
  %205 = load i8, i8* %204, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %210

207:                                              ; preds = %202
  %208 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %209 = load i8*, i8** %208, align 8
  call void @_ZdlPv(i8* %209) #16
  br label %210

210:                                              ; preds = %202, %207
  %211 = load i8, i8* %11, align 1
  %212 = icmp slt i8 %211, 0
  br i1 %212, label %213, label %216

213:                                              ; preds = %210
  %214 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %215 = load i8*, i8** %214, align 8
  call void @_ZdlPv(i8* %215) #16
  br label %216

216:                                              ; preds = %210, %213
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* @_ZNSt3__111make_uniqueIN12v8_inspector12_GLOBAL__N_120PrimitiveValueMirrorEJRN2v85LocalINS4_5ValueEEERPKcEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.v8::Value"*, i8*) unnamed_addr #7 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = tail call i8* @_Znwm(i64 80) #16
  %5 = bitcast i8* %4 to %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"*
  %6 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %3, i8* %1) #15
  %7 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_120PrimitiveValueMirrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 8
  %9 = bitcast i8* %8 to %"class.v8::Value"**
  store %"class.v8::Value"* %0, %"class.v8::Value"** %9, align 8
  %10 = getelementptr inbounds i8, i8* %4, i64 16
  %11 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* nonnull align 8 %6, i64 24, i1 false) #15
  br label %197

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = bitcast i16* %18 to i8*
  %20 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %21, 11
  br i1 %22, label %23, label %26

23:                                               ; preds = %16
  %24 = trunc i64 %21 to i8
  %25 = getelementptr inbounds i8, i8* %4, i64 39
  store i8 %24, i8* %25, align 1
  br label %44

26:                                               ; preds = %16
  %27 = icmp ugt i64 %21, 9223372036854775791
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast i8* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %29) #14
  unreachable

30:                                               ; preds = %26
  %31 = add nuw nsw i64 %21, 8
  %32 = and i64 %31, -8
  %33 = icmp slt i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  call void @abort() #14
  unreachable

35:                                               ; preds = %30
  %36 = shl i64 %32, 1
  %37 = call i8* @_Znwm(i64 %36) #16
  %38 = bitcast i8* %10 to i8**
  store i8* %37, i8** %38, align 8
  %39 = or i64 %32, -9223372036854775808
  %40 = getelementptr inbounds i8, i8* %4, i64 32
  %41 = bitcast i8* %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %4, i64 24
  %43 = bitcast i8* %42 to i64*
  store i64 %21, i64* %43, align 8
  br label %44

44:                                               ; preds = %35, %23
  %45 = phi i8* [ %10, %23 ], [ %37, %35 ]
  %46 = bitcast i8* %45 to i16*
  %47 = add nuw nsw i64 %21, 1
  %48 = add i64 %21, 1
  %49 = icmp ult i64 %48, 16
  br i1 %49, label %142, label %50

50:                                               ; preds = %44
  %51 = shl i64 %21, 1
  %52 = add i64 %51, 2
  %53 = getelementptr i8, i8* %45, i64 %52
  %54 = add i64 %21, 1
  %55 = getelementptr i16, i16* %18, i64 %54
  %56 = bitcast i16* %55 to i8*
  %57 = icmp ult i8* %45, %56
  %58 = icmp ugt i8* %53, %19
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %50
  %61 = and i64 %48, -16
  %62 = getelementptr i16, i16* %46, i64 %61
  %63 = sub i64 %47, %61
  %64 = getelementptr i16, i16* %18, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %46, i64 %73
  %76 = getelementptr i16, i16* %18, i64 %73
  %77 = bitcast i16* %76 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !300
  %79 = getelementptr i16, i16* %76, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !300
  %82 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !303, !noalias !300
  %83 = getelementptr i16, i16* %75, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !303, !noalias !300
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %46, i64 %85
  %87 = getelementptr i16, i16* %18, i64 %85
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !300
  %90 = getelementptr i16, i16* %87, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !300
  %93 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !303, !noalias !300
  %94 = getelementptr i16, i16* %86, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !303, !noalias !300
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %46, i64 %96
  %98 = getelementptr i16, i16* %18, i64 %96
  %99 = bitcast i16* %98 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !300
  %101 = getelementptr i16, i16* %98, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !300
  %104 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !303, !noalias !300
  %105 = getelementptr i16, i16* %97, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !303, !noalias !300
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %46, i64 %107
  %109 = getelementptr i16, i16* %18, i64 %107
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !300
  %112 = getelementptr i16, i16* %109, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !300
  %115 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !303, !noalias !300
  %116 = getelementptr i16, i16* %108, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !303, !noalias !300
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !305

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %46, i64 %125
  %128 = getelementptr i16, i16* %18, i64 %125
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !300
  %131 = getelementptr i16, i16* %128, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !300
  %134 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !303, !noalias !300
  %135 = getelementptr i16, i16* %127, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !303, !noalias !300
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !306

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %48, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %50, %44
  %143 = phi i16* [ %46, %50 ], [ %46, %44 ], [ %62, %140 ]
  %144 = phi i64 [ %47, %50 ], [ %47, %44 ], [ %63, %140 ]
  %145 = phi i16* [ %18, %50 ], [ %18, %44 ], [ %64, %140 ]
  %146 = add i64 %144, -1
  %147 = and i64 %144, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i16* [ %156, %149 ], [ %143, %142 ]
  %151 = phi i64 [ %155, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %157, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %152, align 2
  store i16 %154, i16* %150, align 2
  %155 = add i64 %151, -1
  %156 = getelementptr inbounds i16, i16* %150, i64 1
  %157 = getelementptr inbounds i16, i16* %152, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !307

160:                                              ; preds = %149, %142
  %161 = phi i16* [ %143, %142 ], [ %156, %149 ]
  %162 = phi i64 [ %144, %142 ], [ %155, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %157, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i16* [ %192, %165 ], [ %161, %160 ]
  %167 = phi i64 [ %191, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %193, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %166, align 2
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = getelementptr inbounds i16, i16* %168, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %166, i64 2
  %174 = getelementptr inbounds i16, i16* %168, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %166, i64 3
  %177 = getelementptr inbounds i16, i16* %168, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %166, i64 4
  %180 = getelementptr inbounds i16, i16* %168, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %166, i64 5
  %183 = getelementptr inbounds i16, i16* %168, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %166, i64 6
  %186 = getelementptr inbounds i16, i16* %168, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %166, i64 7
  %189 = getelementptr inbounds i16, i16* %168, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %167, -8
  %192 = getelementptr inbounds i16, i16* %166, i64 8
  %193 = getelementptr inbounds i16, i16* %168, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !308

195:                                              ; preds = %160, %165, %140
  %196 = load i8, i8* %12, align 1
  br label %197

197:                                              ; preds = %195, %15
  %198 = phi i8 [ %196, %195 ], [ %13, %15 ]
  %199 = getelementptr inbounds i8, i8* %4, i64 40
  %200 = bitcast i8* %199 to i64*
  %201 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %200, align 8
  %203 = getelementptr inbounds i8, i8* %4, i64 48
  call void @llvm.memset.p0i8.i64(i8* align 8 %203, i8 0, i64 32, i1 false) #15
  %204 = icmp slt i8 %198, 0
  br i1 %204, label %205, label %208

205:                                              ; preds = %197
  %206 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %207 = load i8*, i8** %206, align 8
  call void @_ZdlPv(i8* %207) #16
  br label %208

208:                                              ; preds = %197, %205
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #15
  ret %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %5
}

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value8IsBigIntEv(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value8IsRegExpEv(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value7IsProxyEv(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value6IsDateEv(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value9IsPromiseEv(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value13IsNativeErrorEv(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value5IsMapEv(%"class.v8::Value"*) local_unnamed_addr #4

declare i64 @_ZNK2v83Map4SizeEv(%"class.v8::Map"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value5IsSetEv(%"class.v8::Value"*) local_unnamed_addr #4

declare i64 @_ZNK2v83Set4SizeEv(%"class.v8::Set"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value9IsWeakMapEv(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value9IsWeakSetEv(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value13IsMapIteratorEv(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value13IsSetIteratorEv(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value12IsTypedArrayEv(%"class.v8::Value"*) local_unnamed_addr #4

declare i64 @_ZN2v810TypedArray6LengthEv(%"class.v8::TypedArray"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value13IsArrayBufferEv(%"class.v8::Value"*) local_unnamed_addr #4

declare i64 @_ZNK2v811ArrayBuffer10ByteLengthEv(%"class.v8::ArrayBuffer"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value19IsSharedArrayBufferEv(%"class.v8::Value"*) local_unnamed_addr #4

declare i64 @_ZNK2v817SharedArrayBuffer10ByteLengthEv(%"class.v8::SharedArrayBuffer"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value10IsDataViewEv(%"class.v8::Value"*) local_unnamed_addr #4

declare i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value18IsWasmMemoryObjectEv(%"class.v8::Value"*) local_unnamed_addr #4

declare %"class.v8::ArrayBuffer"* @_ZN2v816WasmMemoryObject6BufferEv(%"class.v8::WasmMemoryObject"*) local_unnamed_addr #4

declare zeroext i1 @_ZN2v85debug15WasmValueObject17IsWasmValueObjectENS_5LocalINS_5ValueEEE(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12v8_inspector12_GLOBAL__N_111isArrayLikeEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEEPm(%"class.v8::Context"*, %"class.v8::Value"*, i64* nocapture) unnamed_addr #2 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = alloca %"class.v8::MicrotasksScope", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %1) #15
  br i1 %9, label %10, label %77

10:                                               ; preds = %3
  %11 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #15
  %12 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #15
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %11) #15
  %13 = bitcast %"class.v8::MicrotasksScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #15
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %5, %"class.v8::Isolate"* %11, i32 1) #15
  %14 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %15 = call zeroext i1 @_ZNK2v85Value17IsArgumentsObjectEv(%"class.v8::Value"* %1) #15
  br i1 %15, label %35, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i64 0, i64 0)) #15
  %18 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %11, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %6) #15
  %19 = bitcast %"class.v8::String"* %18 to %"class.v8::Name"*
  %20 = call %"class.v8::Value"* @_ZN2v86Object20GetRealNamedPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"* %14, %"class.v8::Context"* %0, %"class.v8::Name"* %19) #15
  %21 = icmp eq %"class.v8::Value"* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* nonnull %20) #15
  %24 = xor i1 %23, true
  br label %25

25:                                               ; preds = %16, %22
  %26 = phi i1 [ true, %16 ], [ %24, %22 ]
  %27 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %25
  %32 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #16
  br label %34

34:                                               ; preds = %31, %25
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #15
  br i1 %26, label %75, label %35

35:                                               ; preds = %10, %34
  %36 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #15
  %37 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %11, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %7) #15
  %38 = bitcast %"class.v8::String"* %37 to %"class.v8::Name"*
  %39 = call i16 @_ZN2v86Object14HasOwnPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"* %14, %"class.v8::Context"* %0, %"class.v8::Name"* %38) #15
  %40 = trunc i16 %39 to i8
  %41 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %41, i64 0, i32 1, i32 1
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %35
  %46 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #16
  br label %48

48:                                               ; preds = %35, %45
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #15
  %49 = icmp ne i8 %40, 0
  %50 = icmp ugt i16 %39, 255
  %51 = and i1 %50, %49
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #15
  %54 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %11, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %8) #15
  %55 = bitcast %"class.v8::String"* %54 to %"class.v8::Value"*
  %56 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %14, %"class.v8::Context"* %0, %"class.v8::Value"* %55) #15
  %57 = icmp eq %"class.v8::Value"* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %52
  %59 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %56) #15
  %60 = xor i1 %59, true
  br label %61

61:                                               ; preds = %52, %58
  %62 = phi i1 [ true, %52 ], [ %60, %58 ]
  %63 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %63, i64 0, i32 1, i32 1
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %61
  %68 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #16
  br label %70

70:                                               ; preds = %67, %61
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #15
  br i1 %62, label %75, label %71

71:                                               ; preds = %70
  %72 = bitcast %"class.v8::Value"* %56 to %"class.v8::Uint32"*
  %73 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %72) #15
  %74 = zext i32 %73 to i64
  store i64 %74, i64* %2, align 8
  br label %75

75:                                               ; preds = %48, %71, %70, %34
  %76 = phi i1 [ false, %34 ], [ true, %71 ], [ false, %48 ], [ false, %70 ]
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #15
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #15
  br label %77

77:                                               ; preds = %3, %75
  %78 = phi i1 [ %76, %75 ], [ false, %3 ]
  ret i1 %78
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12v8_inspector11ValueMirror20buildPropertyPreviewEN2v85LocalINS1_7ContextEEERKNS_8String16EPNSt3__110unique_ptrINS_8protocol7Runtime15PropertyPreviewENS8_14default_deleteISC_EEEE(%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"* dereferenceable(32), %"class.std::__1::unique_ptr.414"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12v8_inspector11ValueMirror18buildObjectPreviewEN2v85LocalINS1_7ContextEEEbPiS5_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS6_14default_deleteISA_EEEE(%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i1 zeroext, i32*, i32*, %"class.std::__1::unique_ptr.417"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12v8_inspector11ValueMirror17buildEntryPreviewEN2v85LocalINS1_7ContextEEEPiS5_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS6_14default_deleteISA_EEEE(%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*) unnamed_addr #2 comdat align 2 {
  ret void
}

declare i32 @_ZN12v8_inspector16InspectedContext9contextIdEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #4

declare %"class.v8_inspector::InspectedContext"* @_ZNK12v8_inspector15V8InspectorImpl10getContextEi(%"class.v8_inspector::V8InspectorImpl"*, i32) local_unnamed_addr #4

declare i32 @_ZN12v8_inspector16InspectedContext15getInternalTypeEN2v85LocalINS1_6ObjectEEE(%"class.v8_inspector::InspectedContext"*, %"class.v8::Object"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8String166concatIJPKcS0_S3_EEES0_DpT_(%"class.v8_inspector::String16"* noalias sret, i8*, %"class.v8_inspector::String16"*, i8*) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.v8_inspector::String16Builder", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = bitcast %"class.v8_inspector::String16Builder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  call void @_ZN12v8_inspector15String16BuilderC1Ev(%"class.v8_inspector::String16Builder"* nonnull %5) #15
  %8 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %4
  %13 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  %14 = bitcast %"class.v8_inspector::String16"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %14, i64 24, i1 false) #15
  br label %190

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %19, 11
  br i1 %20, label %21, label %26

21:                                               ; preds = %15
  %22 = bitcast %"class.v8_inspector::String16"* %6 to i16*
  %23 = trunc i64 %19 to i8
  %24 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %24, i64 0, i32 1, i32 1
  store i8 %23, i8* %25, align 1
  br label %43

26:                                               ; preds = %15
  %27 = icmp ugt i64 %19, 9223372036854775791
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.v8_inspector::String16"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #14
  unreachable

30:                                               ; preds = %26
  %31 = add nuw nsw i64 %19, 8
  %32 = and i64 %31, -8
  %33 = icmp slt i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  call void @abort() #14
  unreachable

35:                                               ; preds = %30
  %36 = shl i64 %32, 1
  %37 = call i8* @_Znwm(i64 %36) #16
  %38 = bitcast i8* %37 to i16*
  %39 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  store i8* %37, i8** %39, align 8
  %40 = or i64 %32, -9223372036854775808
  %41 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %42, align 8
  br label %43

43:                                               ; preds = %35, %21
  %44 = phi i16* [ %22, %21 ], [ %38, %35 ]
  %45 = add nuw nsw i64 %19, 1
  %46 = add i64 %19, 1
  %47 = icmp ult i64 %46, 16
  br i1 %47, label %137, label %48

48:                                               ; preds = %43
  %49 = add i64 %19, 1
  %50 = getelementptr i16, i16* %44, i64 %49
  %51 = getelementptr i16, i16* %17, i64 %49
  %52 = icmp ult i16* %44, %51
  %53 = icmp ult i16* %17, %50
  %54 = and i1 %52, %53
  br i1 %54, label %137, label %55

55:                                               ; preds = %48
  %56 = and i64 %46, -16
  %57 = getelementptr i16, i16* %44, i64 %56
  %58 = sub i64 %45, %56
  %59 = getelementptr i16, i16* %17, i64 %56
  %60 = add i64 %56, -16
  %61 = lshr exact i64 %60, 4
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 3
  %64 = icmp ult i64 %60, 48
  br i1 %64, label %116, label %65

65:                                               ; preds = %55
  %66 = sub nsw i64 %62, %63
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i64 [ 0, %65 ], [ %113, %67 ]
  %69 = phi i64 [ %66, %65 ], [ %114, %67 ]
  %70 = getelementptr i16, i16* %44, i64 %68
  %71 = getelementptr i16, i16* %17, i64 %68
  %72 = bitcast i16* %71 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !309
  %74 = getelementptr i16, i16* %71, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !309
  %77 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %77, align 2, !alias.scope !312, !noalias !309
  %78 = getelementptr i16, i16* %70, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %79, align 2, !alias.scope !312, !noalias !309
  %80 = or i64 %68, 16
  %81 = getelementptr i16, i16* %44, i64 %80
  %82 = getelementptr i16, i16* %17, i64 %80
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !309
  %85 = getelementptr i16, i16* %82, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !309
  %88 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %88, align 2, !alias.scope !312, !noalias !309
  %89 = getelementptr i16, i16* %81, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %90, align 2, !alias.scope !312, !noalias !309
  %91 = or i64 %68, 32
  %92 = getelementptr i16, i16* %44, i64 %91
  %93 = getelementptr i16, i16* %17, i64 %91
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !309
  %96 = getelementptr i16, i16* %93, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !309
  %99 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %99, align 2, !alias.scope !312, !noalias !309
  %100 = getelementptr i16, i16* %92, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %101, align 2, !alias.scope !312, !noalias !309
  %102 = or i64 %68, 48
  %103 = getelementptr i16, i16* %44, i64 %102
  %104 = getelementptr i16, i16* %17, i64 %102
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !309
  %107 = getelementptr i16, i16* %104, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !309
  %110 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %110, align 2, !alias.scope !312, !noalias !309
  %111 = getelementptr i16, i16* %103, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !312, !noalias !309
  %113 = add i64 %68, 64
  %114 = add i64 %69, -4
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %67, !llvm.loop !314

116:                                              ; preds = %67, %55
  %117 = phi i64 [ 0, %55 ], [ %113, %67 ]
  %118 = icmp eq i64 %63, 0
  br i1 %118, label %135, label %119

119:                                              ; preds = %116, %119
  %120 = phi i64 [ %132, %119 ], [ %117, %116 ]
  %121 = phi i64 [ %133, %119 ], [ %63, %116 ]
  %122 = getelementptr i16, i16* %44, i64 %120
  %123 = getelementptr i16, i16* %17, i64 %120
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !309
  %126 = getelementptr i16, i16* %123, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !309
  %129 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %129, align 2, !alias.scope !312, !noalias !309
  %130 = getelementptr i16, i16* %122, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %131, align 2, !alias.scope !312, !noalias !309
  %132 = add i64 %120, 16
  %133 = add i64 %121, -1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %119, !llvm.loop !315

135:                                              ; preds = %119, %116
  %136 = icmp eq i64 %46, %56
  br i1 %136, label %190, label %137

137:                                              ; preds = %135, %48, %43
  %138 = phi i16* [ %44, %48 ], [ %44, %43 ], [ %57, %135 ]
  %139 = phi i64 [ %45, %48 ], [ %45, %43 ], [ %58, %135 ]
  %140 = phi i16* [ %17, %48 ], [ %17, %43 ], [ %59, %135 ]
  %141 = add i64 %139, -1
  %142 = and i64 %139, 7
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %155, label %144

144:                                              ; preds = %137, %144
  %145 = phi i16* [ %151, %144 ], [ %138, %137 ]
  %146 = phi i64 [ %150, %144 ], [ %139, %137 ]
  %147 = phi i16* [ %152, %144 ], [ %140, %137 ]
  %148 = phi i64 [ %153, %144 ], [ %142, %137 ]
  %149 = load i16, i16* %147, align 2
  store i16 %149, i16* %145, align 2
  %150 = add i64 %146, -1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = getelementptr inbounds i16, i16* %147, i64 1
  %153 = add i64 %148, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %144, !llvm.loop !316

155:                                              ; preds = %144, %137
  %156 = phi i16* [ %138, %137 ], [ %151, %144 ]
  %157 = phi i64 [ %139, %137 ], [ %150, %144 ]
  %158 = phi i16* [ %140, %137 ], [ %152, %144 ]
  %159 = icmp ult i64 %141, 7
  br i1 %159, label %190, label %160

160:                                              ; preds = %155, %160
  %161 = phi i16* [ %187, %160 ], [ %156, %155 ]
  %162 = phi i64 [ %186, %160 ], [ %157, %155 ]
  %163 = phi i16* [ %188, %160 ], [ %158, %155 ]
  %164 = load i16, i16* %163, align 2
  store i16 %164, i16* %161, align 2
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = getelementptr inbounds i16, i16* %163, i64 1
  %167 = load i16, i16* %166, align 2
  store i16 %167, i16* %165, align 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = getelementptr inbounds i16, i16* %163, i64 2
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = getelementptr inbounds i16, i16* %163, i64 3
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = getelementptr inbounds i16, i16* %163, i64 4
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = getelementptr inbounds i16, i16* %163, i64 5
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = getelementptr inbounds i16, i16* %163, i64 6
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = getelementptr inbounds i16, i16* %163, i64 7
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = add i64 %162, -8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = getelementptr inbounds i16, i16* %163, i64 8
  %189 = icmp eq i64 %186, 0
  br i1 %189, label %190, label %160, !llvm.loop !317

190:                                              ; preds = %155, %160, %135, %12
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 1
  %192 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 1
  %193 = load i64, i64* %192, align 8
  store i64 %193, i64* %191, align 8
  call void @_ZN12v8_inspector15String16Builder9appendAllIPKcJNS_8String16ES3_EEEvT_DpT0_(%"class.v8_inspector::String16Builder"* nonnull %5, i8* %1, %"class.v8_inspector::String16"* nonnull %6, i8* %3)
  %194 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %194, i64 0, i32 1, i32 1
  %196 = load i8, i8* %195, align 1
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %198, label %201

198:                                              ; preds = %190
  %199 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %200 = load i8*, i8** %199, align 8
  call void @_ZdlPv(i8* %200) #16
  br label %201

201:                                              ; preds = %190, %198
  call void @_ZN12v8_inspector15String16Builder8toStringEv(%"class.v8_inspector::String16"* sret %0, %"class.v8_inspector::String16Builder"* nonnull %5) #15
  %202 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %5, i64 0, i32 0, i32 0, i32 0
  %203 = load i16*, i16** %202, align 8
  %204 = icmp eq i16* %203, null
  br i1 %204, label %210, label %205

205:                                              ; preds = %201
  %206 = ptrtoint i16* %203 to i64
  %207 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %5, i64 0, i32 0, i32 0, i32 1
  %208 = bitcast i16** %207 to i64*
  store i64 %206, i64* %208, align 8
  %209 = bitcast i16* %203 to i8*
  call void @_ZdlPv(i8* %209) #16
  br label %210

210:                                              ; preds = %201, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret void
}

declare %"class.v8::Value"* @_ZNK2v86Symbol11DescriptionEPNS_7IsolateE(%"class.v8::Symbol"*, %"class.v8::Isolate"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector15String16Builder9appendAllIPKcJNS_8String16ES3_EEEvT_DpT0_(%"class.v8_inspector::String16Builder"*, i8*, %"class.v8_inspector::String16"*, i8*) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %6, i8* %1) #15
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %0, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %6) #15
  %9 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %4
  %14 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %15 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %15) #16
  br label %16

16:                                               ; preds = %4, %13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #15
  %17 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  %23 = bitcast %"class.v8_inspector::String16"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 %23, i64 24, i1 false) #15
  br label %199

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i16*, i16** %25, align 8
  %27 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp ult i64 %28, 11
  br i1 %29, label %30, label %35

30:                                               ; preds = %24
  %31 = bitcast %"class.v8_inspector::String16"* %7 to i16*
  %32 = trunc i64 %28 to i8
  %33 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %33, i64 0, i32 1, i32 1
  store i8 %32, i8* %34, align 1
  br label %52

35:                                               ; preds = %24
  %36 = icmp ugt i64 %28, 9223372036854775791
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = bitcast %"class.v8_inspector::String16"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %38) #14
  unreachable

39:                                               ; preds = %35
  %40 = add nuw nsw i64 %28, 8
  %41 = and i64 %40, -8
  %42 = icmp slt i64 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  call void @abort() #14
  unreachable

44:                                               ; preds = %39
  %45 = shl i64 %41, 1
  %46 = call i8* @_Znwm(i64 %45) #16
  %47 = bitcast i8* %46 to i16*
  %48 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  store i8* %46, i8** %48, align 8
  %49 = or i64 %41, -9223372036854775808
  %50 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %28, i64* %51, align 8
  br label %52

52:                                               ; preds = %44, %30
  %53 = phi i16* [ %31, %30 ], [ %47, %44 ]
  %54 = add nuw nsw i64 %28, 1
  %55 = add i64 %28, 1
  %56 = icmp ult i64 %55, 16
  br i1 %56, label %146, label %57

57:                                               ; preds = %52
  %58 = add i64 %28, 1
  %59 = getelementptr i16, i16* %53, i64 %58
  %60 = getelementptr i16, i16* %26, i64 %58
  %61 = icmp ult i16* %53, %60
  %62 = icmp ult i16* %26, %59
  %63 = and i1 %61, %62
  br i1 %63, label %146, label %64

64:                                               ; preds = %57
  %65 = and i64 %55, -16
  %66 = getelementptr i16, i16* %53, i64 %65
  %67 = sub i64 %54, %65
  %68 = getelementptr i16, i16* %26, i64 %65
  %69 = add i64 %65, -16
  %70 = lshr exact i64 %69, 4
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 3
  %73 = icmp ult i64 %69, 48
  br i1 %73, label %125, label %74

74:                                               ; preds = %64
  %75 = sub nsw i64 %71, %72
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i64 [ 0, %74 ], [ %122, %76 ]
  %78 = phi i64 [ %75, %74 ], [ %123, %76 ]
  %79 = getelementptr i16, i16* %53, i64 %77
  %80 = getelementptr i16, i16* %26, i64 %77
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !318
  %83 = getelementptr i16, i16* %80, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !318
  %86 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !321, !noalias !318
  %87 = getelementptr i16, i16* %79, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !321, !noalias !318
  %89 = or i64 %77, 16
  %90 = getelementptr i16, i16* %53, i64 %89
  %91 = getelementptr i16, i16* %26, i64 %89
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !318
  %94 = getelementptr i16, i16* %91, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !318
  %97 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !321, !noalias !318
  %98 = getelementptr i16, i16* %90, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !321, !noalias !318
  %100 = or i64 %77, 32
  %101 = getelementptr i16, i16* %53, i64 %100
  %102 = getelementptr i16, i16* %26, i64 %100
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !318
  %105 = getelementptr i16, i16* %102, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !318
  %108 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !321, !noalias !318
  %109 = getelementptr i16, i16* %101, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !321, !noalias !318
  %111 = or i64 %77, 48
  %112 = getelementptr i16, i16* %53, i64 %111
  %113 = getelementptr i16, i16* %26, i64 %111
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !318
  %116 = getelementptr i16, i16* %113, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  %118 = load <8 x i16>, <8 x i16>* %117, align 2, !alias.scope !318
  %119 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %119, align 2, !alias.scope !321, !noalias !318
  %120 = getelementptr i16, i16* %112, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %118, <8 x i16>* %121, align 2, !alias.scope !321, !noalias !318
  %122 = add i64 %77, 64
  %123 = add i64 %78, -4
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %76, !llvm.loop !323

125:                                              ; preds = %76, %64
  %126 = phi i64 [ 0, %64 ], [ %122, %76 ]
  %127 = icmp eq i64 %72, 0
  br i1 %127, label %144, label %128

128:                                              ; preds = %125, %128
  %129 = phi i64 [ %141, %128 ], [ %126, %125 ]
  %130 = phi i64 [ %142, %128 ], [ %72, %125 ]
  %131 = getelementptr i16, i16* %53, i64 %129
  %132 = getelementptr i16, i16* %26, i64 %129
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !318
  %135 = getelementptr i16, i16* %132, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !318
  %138 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !321, !noalias !318
  %139 = getelementptr i16, i16* %131, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !321, !noalias !318
  %141 = add i64 %129, 16
  %142 = add i64 %130, -1
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %128, !llvm.loop !324

144:                                              ; preds = %128, %125
  %145 = icmp eq i64 %55, %65
  br i1 %145, label %199, label %146

146:                                              ; preds = %144, %57, %52
  %147 = phi i16* [ %53, %57 ], [ %53, %52 ], [ %66, %144 ]
  %148 = phi i64 [ %54, %57 ], [ %54, %52 ], [ %67, %144 ]
  %149 = phi i16* [ %26, %57 ], [ %26, %52 ], [ %68, %144 ]
  %150 = add i64 %148, -1
  %151 = and i64 %148, 7
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %164, label %153

153:                                              ; preds = %146, %153
  %154 = phi i16* [ %160, %153 ], [ %147, %146 ]
  %155 = phi i64 [ %159, %153 ], [ %148, %146 ]
  %156 = phi i16* [ %161, %153 ], [ %149, %146 ]
  %157 = phi i64 [ %162, %153 ], [ %151, %146 ]
  %158 = load i16, i16* %156, align 2
  store i16 %158, i16* %154, align 2
  %159 = add i64 %155, -1
  %160 = getelementptr inbounds i16, i16* %154, i64 1
  %161 = getelementptr inbounds i16, i16* %156, i64 1
  %162 = add i64 %157, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %153, !llvm.loop !325

164:                                              ; preds = %153, %146
  %165 = phi i16* [ %147, %146 ], [ %160, %153 ]
  %166 = phi i64 [ %148, %146 ], [ %159, %153 ]
  %167 = phi i16* [ %149, %146 ], [ %161, %153 ]
  %168 = icmp ult i64 %150, 7
  br i1 %168, label %199, label %169

169:                                              ; preds = %164, %169
  %170 = phi i16* [ %196, %169 ], [ %165, %164 ]
  %171 = phi i64 [ %195, %169 ], [ %166, %164 ]
  %172 = phi i16* [ %197, %169 ], [ %167, %164 ]
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %170, align 2
  %174 = getelementptr inbounds i16, i16* %170, i64 1
  %175 = getelementptr inbounds i16, i16* %172, i64 1
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %170, i64 2
  %178 = getelementptr inbounds i16, i16* %172, i64 2
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %170, i64 3
  %181 = getelementptr inbounds i16, i16* %172, i64 3
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %170, i64 4
  %184 = getelementptr inbounds i16, i16* %172, i64 4
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %170, i64 5
  %187 = getelementptr inbounds i16, i16* %172, i64 5
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %170, i64 6
  %190 = getelementptr inbounds i16, i16* %172, i64 6
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %170, i64 7
  %193 = getelementptr inbounds i16, i16* %172, i64 7
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = add i64 %171, -8
  %196 = getelementptr inbounds i16, i16* %170, i64 8
  %197 = getelementptr inbounds i16, i16* %172, i64 8
  %198 = icmp eq i64 %195, 0
  br i1 %198, label %199, label %169, !llvm.loop !326

199:                                              ; preds = %164, %169, %144, %21
  %200 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 1
  %201 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 1
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %200, align 8
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %0, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %7) #15
  %203 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %203) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %5, i8* %3) #15
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %0, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %5) #15
  %204 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %204, i64 0, i32 1, i32 1
  %206 = load i8, i8* %205, align 1
  %207 = icmp slt i8 %206, 0
  br i1 %207, label %208, label %211

208:                                              ; preds = %199
  %209 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %210 = load i8*, i8** %209, align 8
  call void @_ZdlPv(i8* %210) #16
  br label %211

211:                                              ; preds = %199, %208
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %203) #15
  %212 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %212, i64 0, i32 1, i32 1
  %214 = load i8, i8* %213, align 1
  %215 = icmp slt i8 %214, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %211
  %217 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %218 = load i8*, i8** %217, align 8
  call void @_ZdlPv(i8* %218) #16
  br label %219

219:                                              ; preds = %211, %216
  ret void
}

declare void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #4

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #4

declare i16 @_ZN2v86Object3SetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEES5_(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Value"*) local_unnamed_addr #4

declare %"class.v8::Function"* @_ZN2v88Function3NewENS_5LocalINS_7ContextEEEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS1_IS5_EEiNS_19ConstructorBehaviorENS_14SideEffectTypeE(%"class.v8::Context"*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::Value"*, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12v8_inspector12_GLOBAL__N_120nativeGetterCallbackERKN2v820FunctionCallbackInfoINS1_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #2 {
  %2 = alloca %"class.v8_inspector::String16", align 8
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 4
  %7 = bitcast i64* %6 to %"class.v8::Object"*
  %8 = getelementptr inbounds i64, i64* %5, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %10) #15
  %12 = bitcast %"class.v8_inspector::String16"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #15
  %13 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %10, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %2) #15
  %14 = bitcast %"class.v8::String"* %13 to %"class.v8::Name"*
  %15 = call %"class.v8::Value"* @_ZN2v86Object20GetRealNamedPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"* %7, %"class.v8::Context"* %11, %"class.v8::Name"* %14) #15
  %16 = icmp eq %"class.v8::Value"* %15, null
  %17 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %1
  %22 = bitcast %"class.v8_inspector::String16"* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #16
  br label %24

24:                                               ; preds = %1, %21
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #15
  br i1 %16, label %59, label %25

25:                                               ; preds = %24
  %26 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #15
  %27 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %10, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %3) #15
  %28 = bitcast %"class.v8::String"* %27 to %"class.v8::Name"*
  %29 = call %"class.v8::Value"* @_ZN2v86Object20GetRealNamedPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"* %7, %"class.v8::Context"* %11, %"class.v8::Name"* %28) #15
  %30 = icmp eq %"class.v8::Value"* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %25
  %32 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %29) #15
  %33 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %33, i64 0, i32 1, i32 1
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #16
  br label %40

40:                                               ; preds = %31, %37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #15
  br i1 %32, label %50, label %59

41:                                               ; preds = %25
  %42 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %42, i64 0, i32 1, i32 1
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %48 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %48) #16
  br label %49

49:                                               ; preds = %41, %46
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #15
  br label %59

50:                                               ; preds = %40
  %51 = bitcast %"class.v8::Value"* %29 to %"class.v8::Object"*
  %52 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %51, %"class.v8::Context"* %11, %"class.v8::Value"* nonnull %15) #15
  %53 = icmp eq %"class.v8::Value"* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = load i64*, i64** %4, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 3
  %57 = bitcast %"class.v8::Value"* %52 to i64*
  %58 = load i64, i64* %57, align 8
  store i64 %58, i64* %56, align 8
  br label %59

59:                                               ; preds = %50, %24, %40, %49, %54
  ret void
}

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #4

declare %"class.v8::Value"* @_ZN2v86Object20GetRealNamedPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12v8_inspector12_GLOBAL__N_120nativeSetterCallbackERKN2v820FunctionCallbackInfoINS1_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #2 {
  %2 = alloca %"class.v8_inspector::String16", align 8
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %71, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 4
  %11 = bitcast i64* %10 to %"class.v8::Object"*
  %12 = getelementptr inbounds i64, i64* %9, i64 1
  %13 = bitcast i64* %12 to %"class.v8::Isolate"**
  %14 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  %15 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %14) #15
  %16 = bitcast %"class.v8_inspector::String16"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #15
  %17 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %14, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %2) #15
  %18 = bitcast %"class.v8::String"* %17 to %"class.v8::Name"*
  %19 = call %"class.v8::Value"* @_ZN2v86Object20GetRealNamedPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"* %11, %"class.v8::Context"* %15, %"class.v8::Name"* %18) #15
  %20 = icmp eq %"class.v8::Value"* %19, null
  %21 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %7
  %26 = bitcast %"class.v8_inspector::String16"* %2 to i8**
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #16
  br label %28

28:                                               ; preds = %7, %25
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #15
  br i1 %20, label %71, label %29

29:                                               ; preds = %28
  %30 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #15
  %31 = call %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"* %14, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %3) #15
  %32 = bitcast %"class.v8::String"* %31 to %"class.v8::Name"*
  %33 = call %"class.v8::Value"* @_ZN2v86Object20GetRealNamedPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"* %11, %"class.v8::Context"* %15, %"class.v8::Name"* %32) #15
  %34 = icmp eq %"class.v8::Value"* %33, null
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %33) #15
  %37 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %35
  %42 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #16
  br label %44

44:                                               ; preds = %35, %41
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #15
  br i1 %36, label %54, label %71

45:                                               ; preds = %29
  %46 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %46, i64 0, i32 1, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #16
  br label %53

53:                                               ; preds = %45, %50
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #15
  br label %71

54:                                               ; preds = %44
  %55 = bitcast %"class.v8::Value"* %33 to %"class.v8::Object"*
  %56 = load i32, i32* %4, align 8
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %64, label %58

58:                                               ; preds = %54
  %59 = load i64*, i64** %8, align 8
  %60 = getelementptr inbounds i64, i64* %59, i64 1
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, 160
  %63 = inttoptr i64 %62 to %"class.v8::Value"*
  br label %68

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %66 = bitcast i64** %65 to %"class.v8::Value"**
  %67 = load %"class.v8::Value"*, %"class.v8::Value"** %66, align 8
  br label %68

68:                                               ; preds = %58, %64
  %69 = phi %"class.v8::Value"* [ %63, %58 ], [ %67, %64 ]
  %70 = call i16 @_ZN2v86Object3SetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEES5_(%"class.v8::Object"* nonnull %55, %"class.v8::Context"* %15, %"class.v8::Value"* nonnull %19, %"class.v8::Value"* %69) #15
  br label %71

71:                                               ; preds = %28, %53, %44, %68, %1
  ret void
}

declare zeroext i1 @_ZNK2v86String12StringEqualsENS_5LocalIS0_EE(%"class.v8::String"*, %"class.v8::String"*) local_unnamed_addr #4

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #4

declare i16 @_ZN2v85Value10InstanceOfENS_5LocalINS_7ContextEEENS1_INS_6ObjectEEE(%"class.v8::Value"*, %"class.v8::Context"*, %"class.v8::Object"*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare i32 @_ZNK2v88Function19GetScriptLineNumberEv(%"class.v8::Function"*) local_unnamed_addr #4

declare i32 @_ZNK2v88Function21GetScriptColumnNumberEv(%"class.v8::Function"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12v8_inspector12_GLOBAL__N_114LocationMirrorD0Ev(%"class.v8_inspector::(anonymous namespace)::LocationMirror"*) unnamed_addr #7 align 2 {
  %2 = bitcast %"class.v8_inspector::(anonymous namespace)::LocationMirror"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_114LocationMirror17buildRemoteObjectEN2v85LocalINS2_7ContextEEENS_8WrapModeEPNSt3__110unique_ptrINS_8protocol7Runtime12RemoteObjectENS7_14default_deleteISB_EEEE(%"class.v8_crdtp::DispatchResponse"* noalias sret, %"class.v8_inspector::(anonymous namespace)::LocationMirror"* nocapture readonly, %"class.v8::Context"* nocapture readnone, i32, %"class.std::__1::unique_ptr.515"* nocapture) unnamed_addr #2 align 2 {
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = alloca %"class.v8_inspector::String16", align 8
  %10 = alloca %"class.v8_inspector::String16", align 8
  %11 = alloca %"class.v8_inspector::String16", align 8
  %12 = alloca %"class.v8_inspector::String16", align 8
  %13 = tail call i8* @_Znwm(i64 80) #16
  %14 = bitcast i8* %13 to %"class.v8_inspector::protocol::DictionaryValue"*
  tail call void @_ZN12v8_inspector8protocol15DictionaryValueC1Ev(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %14) #15
  %15 = ptrtoint i8* %13 to i64
  %16 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0)) #15
  %17 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::LocationMirror", %"class.v8_inspector::(anonymous namespace)::LocationMirror"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  call void @_ZN12v8_inspector8String1611fromIntegerEi(%"class.v8_inspector::String16"* nonnull sret %7, i32 %19) #15
  call void @_ZN12v8_inspector8protocol15DictionaryValue9setStringERKNS_8String16ES4_(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %14, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %6, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %7) #15
  %20 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %20, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %5
  %25 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #16
  br label %27

27:                                               ; preds = %5, %24
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #15
  %28 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #16
  br label %35

35:                                               ; preds = %27, %32
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #15
  %36 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0)) #15
  %37 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::LocationMirror", %"class.v8_inspector::(anonymous namespace)::LocationMirror"* %1, i64 0, i32 3
  %38 = load i32, i32* %37, align 4
  call void @_ZN12v8_inspector8protocol15DictionaryValue10setIntegerERKNS_8String16Ei(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %14, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %8, i32 %38) #15
  %39 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %39, i64 0, i32 1, i32 1
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %35
  %44 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #16
  br label %46

46:                                               ; preds = %35, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #15
  %47 = bitcast %"class.v8_inspector::String16"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %47) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0)) #15
  %48 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::LocationMirror", %"class.v8_inspector::(anonymous namespace)::LocationMirror"* %1, i64 0, i32 4
  %49 = load i32, i32* %48, align 8
  call void @_ZN12v8_inspector8protocol15DictionaryValue10setIntegerERKNS_8String16Ei(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %14, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %9, i32 %49) #15
  %50 = bitcast %"class.v8_inspector::String16"* %9 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %50, i64 0, i32 1, i32 1
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %46
  %55 = bitcast %"class.v8_inspector::String16"* %9 to i8**
  %56 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %56) #16
  br label %57

57:                                               ; preds = %46, %54
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #15
  %58 = call i8* @_Znwm(i64 272) #16
  %59 = bitcast i8* %58 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %59, align 8
  %60 = getelementptr inbounds i8, i8* %58, i64 16
  %61 = getelementptr inbounds i8, i8* %58, i64 56
  %62 = getelementptr inbounds i8, i8* %58, i64 96
  %63 = getelementptr inbounds i8, i8* %58, i64 144
  %64 = getelementptr inbounds i8, i8* %58, i64 184
  %65 = getelementptr inbounds i8, i8* %58, i64 224
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 41, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 48, i1 false) #15
  %66 = bitcast i8* %58 to %"class.v8_inspector::protocol::Runtime::RemoteObject"*
  %67 = bitcast %"class.v8_inspector::String16"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #15
  %68 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6ObjectE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %10, i8* %68) #15
  %69 = bitcast i8* %60 to %"class.std::__1::basic_string"*
  %70 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %10, i64 0, i32 0
  %71 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %69, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %70) #15
  %72 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %10, i64 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds i8, i8* %58, i64 40
  %75 = bitcast i8* %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = bitcast %"class.v8_inspector::String16"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %11, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i64 0, i64 0)) #15
  call void @_ZN12v8_inspector8protocol7Runtime12RemoteObject10setSubtypeERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %66, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %11) #15
  %77 = bitcast %"class.v8_inspector::String16"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %77) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #15
  call void @_ZN12v8_inspector8protocol7Runtime12RemoteObject14setDescriptionERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %66, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %12) #15
  %78 = getelementptr inbounds i8, i8* %58, i64 128
  %79 = bitcast i8* %78 to %"class.v8_inspector::protocol::Value"**
  %80 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %79, align 8
  %81 = bitcast i8* %78 to i64*
  store i64 %15, i64* %81, align 8
  %82 = icmp eq %"class.v8_inspector::protocol::Value"* %80, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %57
  %84 = bitcast %"class.v8_inspector::protocol::Value"* %80 to void (%"class.v8_inspector::protocol::Value"*)***
  %85 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %85, i64 2
  %87 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %86, align 8
  call void %87(%"class.v8_inspector::protocol::Value"* nonnull %80) #15
  br label %88

88:                                               ; preds = %57, %83
  %89 = ptrtoint i8* %58 to i64
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.515", %"class.std::__1::unique_ptr.515"* %4, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %90, align 8
  %92 = bitcast %"class.std::__1::unique_ptr.515"* %4 to i64*
  store i64 %89, i64* %92, align 8
  %93 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %91, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %88
  %95 = bitcast %"class.v8_inspector::protocol::Runtime::RemoteObject"* %91 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %96 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %96, i64 2
  %98 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %97, align 8
  call void %98(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %91) #15
  br label %99

99:                                               ; preds = %94, %88
  %100 = bitcast %"class.v8_inspector::String16"* %12 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %100, i64 0, i32 1, i32 1
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %99
  %105 = bitcast %"class.v8_inspector::String16"* %12 to i8**
  %106 = load i8*, i8** %105, align 8
  call void @_ZdlPv(i8* %106) #16
  br label %107

107:                                              ; preds = %99, %104
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %77) #15
  %108 = bitcast %"class.v8_inspector::String16"* %11 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %108, i64 0, i32 1, i32 1
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %107
  %113 = bitcast %"class.v8_inspector::String16"* %11 to i8**
  %114 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %114) #16
  br label %115

115:                                              ; preds = %107, %112
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76) #15
  %116 = bitcast %"class.v8_inspector::String16"* %10 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %116, i64 0, i32 1, i32 1
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %115
  %121 = bitcast %"class.v8_inspector::String16"* %10 to i8**
  %122 = load i8*, i8** %121, align 8
  call void @_ZdlPv(i8* %122) #16
  br label %123

123:                                              ; preds = %115, %120
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #15
  call void @_ZN8v8_crdtp16DispatchResponse7SuccessEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %"class.v8::Value"* @_ZNK12v8_inspector12_GLOBAL__N_114LocationMirror7v8ValueEv(%"class.v8_inspector::(anonymous namespace)::LocationMirror"* nocapture readonly) unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::LocationMirror", %"class.v8_inspector::(anonymous namespace)::LocationMirror"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  ret %"class.v8::Value"* %3
}

declare void @_ZN12v8_inspector8protocol15DictionaryValue9setStringERKNS_8String16ES4_(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #4

declare void @_ZN12v8_inspector8String1611fromIntegerEi(%"class.v8_inspector::String16"* sret, i32) local_unnamed_addr #4

declare void @_ZN12v8_inspector8protocol15DictionaryValue10setIntegerERKNS_8String16Ei(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), i32) local_unnamed_addr #4

declare void @_ZN8v8_crdtp16DispatchResponse7SuccessEv(%"class.v8_crdtp::DispatchResponse"* sret) local_unnamed_addr #4

declare void @_ZN12v8_inspector8protocol15DictionaryValueC1Ev(%"class.v8_inspector::protocol::DictionaryValue"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = getelementptr i16, i16* %25, i64 %39
  %41 = sub i64 %22, %39
  %42 = getelementptr i16, i16* %19, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %25, i64 %51
  %54 = getelementptr i16, i16* %19, i64 %51
  %55 = bitcast i16* %54 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !327
  %57 = getelementptr i16, i16* %54, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !327
  %60 = bitcast i16* %53 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !330, !noalias !327
  %61 = getelementptr i16, i16* %53, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !330, !noalias !327
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %25, i64 %63
  %65 = getelementptr i16, i16* %19, i64 %63
  %66 = bitcast i16* %65 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !327
  %68 = getelementptr i16, i16* %65, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !327
  %71 = bitcast i16* %64 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !330, !noalias !327
  %72 = getelementptr i16, i16* %64, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !330, !noalias !327
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %25, i64 %74
  %76 = getelementptr i16, i16* %19, i64 %74
  %77 = bitcast i16* %76 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !327
  %79 = getelementptr i16, i16* %76, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !327
  %82 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !330, !noalias !327
  %83 = getelementptr i16, i16* %75, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !330, !noalias !327
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %25, i64 %85
  %87 = getelementptr i16, i16* %19, i64 %85
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !327
  %90 = getelementptr i16, i16* %87, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !327
  %93 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !330, !noalias !327
  %94 = getelementptr i16, i16* %86, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !330, !noalias !327
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !332

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %25, i64 %103
  %106 = getelementptr i16, i16* %19, i64 %103
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !327
  %109 = getelementptr i16, i16* %106, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !327
  %112 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !330, !noalias !327
  %113 = getelementptr i16, i16* %105, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !330, !noalias !327
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !333

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %40, %118 ]
  %122 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %42, %118 ]
  %124 = add i64 %122, -1
  %125 = and i64 %122, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i16* [ %134, %127 ], [ %121, %120 ]
  %129 = phi i64 [ %133, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %135, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %130, align 2
  store i16 %132, i16* %128, align 2
  %133 = add i64 %129, -1
  %134 = getelementptr inbounds i16, i16* %128, i64 1
  %135 = getelementptr inbounds i16, i16* %130, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !334

138:                                              ; preds = %127, %120
  %139 = phi i16* [ %121, %120 ], [ %134, %127 ]
  %140 = phi i64 [ %122, %120 ], [ %133, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %135, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i16* [ %170, %143 ], [ %139, %138 ]
  %145 = phi i64 [ %169, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %171, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %146, align 2
  store i16 %147, i16* %144, align 2
  %148 = getelementptr inbounds i16, i16* %144, i64 1
  %149 = getelementptr inbounds i16, i16* %146, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %144, i64 2
  %152 = getelementptr inbounds i16, i16* %146, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %144, i64 3
  %155 = getelementptr inbounds i16, i16* %146, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %144, i64 4
  %158 = getelementptr inbounds i16, i16* %146, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %144, i64 5
  %161 = getelementptr inbounds i16, i16* %146, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %144, i64 6
  %164 = getelementptr inbounds i16, i16* %146, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %144, i64 7
  %167 = getelementptr inbounds i16, i16* %146, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %145, -8
  %170 = getelementptr inbounds i16, i16* %144, i64 8
  %171 = getelementptr inbounds i16, i16* %146, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !335

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #14
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #14
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #16
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = getelementptr i16, i16* %190, i64 %201
  %203 = sub i64 %22, %201
  %204 = getelementptr i16, i16* %19, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %190, i64 %213
  %216 = getelementptr i16, i16* %19, i64 %213
  %217 = bitcast i16* %216 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !336
  %219 = getelementptr i16, i16* %216, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !336
  %222 = bitcast i16* %215 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !339, !noalias !336
  %223 = getelementptr i16, i16* %215, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !339, !noalias !336
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %190, i64 %225
  %227 = getelementptr i16, i16* %19, i64 %225
  %228 = bitcast i16* %227 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !336
  %230 = getelementptr i16, i16* %227, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !336
  %233 = bitcast i16* %226 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !339, !noalias !336
  %234 = getelementptr i16, i16* %226, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !339, !noalias !336
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %190, i64 %236
  %238 = getelementptr i16, i16* %19, i64 %236
  %239 = bitcast i16* %238 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !336
  %241 = getelementptr i16, i16* %238, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !336
  %244 = bitcast i16* %237 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !339, !noalias !336
  %245 = getelementptr i16, i16* %237, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !339, !noalias !336
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %190, i64 %247
  %249 = getelementptr i16, i16* %19, i64 %247
  %250 = bitcast i16* %249 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !336
  %252 = getelementptr i16, i16* %249, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !336
  %255 = bitcast i16* %248 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !339, !noalias !336
  %256 = getelementptr i16, i16* %248, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !339, !noalias !336
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !341

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %190, i64 %265
  %268 = getelementptr i16, i16* %19, i64 %265
  %269 = bitcast i16* %268 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !336
  %271 = getelementptr i16, i16* %268, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !336
  %274 = bitcast i16* %267 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !339, !noalias !336
  %275 = getelementptr i16, i16* %267, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !339, !noalias !336
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !342

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %202, %280 ]
  %284 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %204, %280 ]
  %286 = add i64 %284, -1
  %287 = and i64 %284, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i16* [ %296, %289 ], [ %283, %282 ]
  %291 = phi i64 [ %295, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %297, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %292, align 2
  store i16 %294, i16* %290, align 2
  %295 = add i64 %291, -1
  %296 = getelementptr inbounds i16, i16* %290, i64 1
  %297 = getelementptr inbounds i16, i16* %292, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !343

300:                                              ; preds = %289, %282
  %301 = phi i16* [ %283, %282 ], [ %296, %289 ]
  %302 = phi i64 [ %284, %282 ], [ %295, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %297, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i16* [ %332, %305 ], [ %301, %300 ]
  %307 = phi i64 [ %331, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %333, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %308, align 2
  store i16 %309, i16* %306, align 2
  %310 = getelementptr inbounds i16, i16* %306, i64 1
  %311 = getelementptr inbounds i16, i16* %308, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %306, i64 2
  %314 = getelementptr inbounds i16, i16* %308, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %306, i64 3
  %317 = getelementptr inbounds i16, i16* %308, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %306, i64 4
  %320 = getelementptr inbounds i16, i16* %308, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %306, i64 5
  %323 = getelementptr inbounds i16, i16* %308, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %306, i64 6
  %326 = getelementptr inbounds i16, i16* %308, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %306, i64 7
  %329 = getelementptr inbounds i16, i16* %308, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %307, -8
  %332 = getelementptr inbounds i16, i16* %306, i64 8
  %333 = getelementptr inbounds i16, i16* %308, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !344

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = getelementptr i16, i16* %356, i64 %368
  %370 = sub i64 %349, %368
  %371 = getelementptr i16, i16* %348, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %356, i64 %380
  %383 = getelementptr i16, i16* %348, i64 %380
  %384 = bitcast i16* %383 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !345
  %386 = getelementptr i16, i16* %383, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !345
  %389 = bitcast i16* %382 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !348, !noalias !345
  %390 = getelementptr i16, i16* %382, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !348, !noalias !345
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %356, i64 %392
  %394 = getelementptr i16, i16* %348, i64 %392
  %395 = bitcast i16* %394 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !345
  %397 = getelementptr i16, i16* %394, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !345
  %400 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !348, !noalias !345
  %401 = getelementptr i16, i16* %393, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !348, !noalias !345
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %356, i64 %403
  %405 = getelementptr i16, i16* %348, i64 %403
  %406 = bitcast i16* %405 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !345
  %408 = getelementptr i16, i16* %405, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !345
  %411 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !348, !noalias !345
  %412 = getelementptr i16, i16* %404, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !348, !noalias !345
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %356, i64 %414
  %416 = getelementptr i16, i16* %348, i64 %414
  %417 = bitcast i16* %416 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !345
  %419 = getelementptr i16, i16* %416, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !345
  %422 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !348, !noalias !345
  %423 = getelementptr i16, i16* %415, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !348, !noalias !345
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !350

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %356, i64 %432
  %435 = getelementptr i16, i16* %348, i64 %432
  %436 = bitcast i16* %435 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !345
  %438 = getelementptr i16, i16* %435, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !345
  %441 = bitcast i16* %434 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !348, !noalias !345
  %442 = getelementptr i16, i16* %434, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !348, !noalias !345
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !351

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %369, %447 ]
  %451 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %371, %447 ]
  %453 = add i64 %451, -1
  %454 = and i64 %451, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i16* [ %463, %456 ], [ %450, %449 ]
  %458 = phi i64 [ %462, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %464, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %459, align 2
  store i16 %461, i16* %457, align 2
  %462 = add i64 %458, -1
  %463 = getelementptr inbounds i16, i16* %457, i64 1
  %464 = getelementptr inbounds i16, i16* %459, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !352

467:                                              ; preds = %456, %449
  %468 = phi i16* [ %450, %449 ], [ %463, %456 ]
  %469 = phi i64 [ %451, %449 ], [ %462, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %464, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i16* [ %499, %472 ], [ %468, %467 ]
  %474 = phi i64 [ %498, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %500, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %475, align 2
  store i16 %476, i16* %473, align 2
  %477 = getelementptr inbounds i16, i16* %473, i64 1
  %478 = getelementptr inbounds i16, i16* %475, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %473, i64 2
  %481 = getelementptr inbounds i16, i16* %475, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %473, i64 3
  %484 = getelementptr inbounds i16, i16* %475, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %473, i64 4
  %487 = getelementptr inbounds i16, i16* %475, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %473, i64 5
  %490 = getelementptr inbounds i16, i16* %475, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %473, i64 6
  %493 = getelementptr inbounds i16, i16* %475, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %473, i64 7
  %496 = getelementptr inbounds i16, i16* %475, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %474, -8
  %499 = getelementptr inbounds i16, i16* %473, i64 8
  %500 = getelementptr inbounds i16, i16* %475, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !353

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE21__grow_by_and_replaceEmmmmmmPKt(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #15
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE21__grow_by_and_replaceEmmmmmmPKt(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #2 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #14
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #14
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #16
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = getelementptr i16, i16* %42, i64 %55
  %57 = sub i64 %4, %55
  %58 = getelementptr i16, i16* %24, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %42, i64 %67
  %70 = getelementptr i16, i16* %24, i64 %67
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !354
  %73 = getelementptr i16, i16* %70, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !354
  %76 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !357, !noalias !354
  %77 = getelementptr i16, i16* %69, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !357, !noalias !354
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %42, i64 %79
  %81 = getelementptr i16, i16* %24, i64 %79
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !354
  %84 = getelementptr i16, i16* %81, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !354
  %87 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !357, !noalias !354
  %88 = getelementptr i16, i16* %80, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !357, !noalias !354
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %42, i64 %90
  %92 = getelementptr i16, i16* %24, i64 %90
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !354
  %95 = getelementptr i16, i16* %92, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !354
  %98 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !357, !noalias !354
  %99 = getelementptr i16, i16* %91, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !357, !noalias !354
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %42, i64 %101
  %103 = getelementptr i16, i16* %24, i64 %101
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !354
  %106 = getelementptr i16, i16* %103, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !354
  %109 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !357, !noalias !354
  %110 = getelementptr i16, i16* %102, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !357, !noalias !354
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !359

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %42, i64 %119
  %122 = getelementptr i16, i16* %24, i64 %119
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !354
  %125 = getelementptr i16, i16* %122, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !354
  %128 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !357, !noalias !354
  %129 = getelementptr i16, i16* %121, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !357, !noalias !354
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !360

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %56, %134 ]
  %138 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %58, %134 ]
  %140 = add i64 %138, -1
  %141 = and i64 %138, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i16* [ %150, %143 ], [ %137, %136 ]
  %145 = phi i64 [ %149, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %151, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %146, align 2
  store i16 %148, i16* %144, align 2
  %149 = add i64 %145, -1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = getelementptr inbounds i16, i16* %146, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !361

154:                                              ; preds = %143, %136
  %155 = phi i16* [ %137, %136 ], [ %150, %143 ]
  %156 = phi i64 [ %138, %136 ], [ %149, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %151, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i16* [ %186, %159 ], [ %155, %154 ]
  %161 = phi i64 [ %185, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %187, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %160, align 2
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = getelementptr inbounds i16, i16* %162, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = getelementptr inbounds i16, i16* %162, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = getelementptr inbounds i16, i16* %162, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = getelementptr inbounds i16, i16* %162, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = getelementptr inbounds i16, i16* %162, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = getelementptr inbounds i16, i16* %162, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = getelementptr inbounds i16, i16* %162, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %161, -8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = getelementptr inbounds i16, i16* %162, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !362

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = getelementptr i16, i16* %192, i64 %195
  %197 = sub i64 %6, %195
  %198 = getelementptr i16, i16* %7, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %192, i64 %207
  %210 = getelementptr i16, i16* %7, i64 %207
  %211 = bitcast i16* %210 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %210, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %209 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %209, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %192, i64 %219
  %221 = getelementptr i16, i16* %7, i64 %219
  %222 = bitcast i16* %221 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %221, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %220 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %220, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %192, i64 %230
  %232 = getelementptr i16, i16* %7, i64 %230
  %233 = bitcast i16* %232 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %232, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %231 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %231, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %192, i64 %241
  %243 = getelementptr i16, i16* %7, i64 %241
  %244 = bitcast i16* %243 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %243, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %242 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %242, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !363

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %192, i64 %259
  %262 = getelementptr i16, i16* %7, i64 %259
  %263 = bitcast i16* %262 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %262, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %261, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !364

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i16* [ %192, %191 ], [ %196, %274 ]
  %278 = phi i64 [ %6, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %7, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i16* [ %286, %280 ], [ %277, %276 ]
  %282 = phi i64 [ %285, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %287, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %283, align 2
  store i16 %284, i16* %281, align 2
  %285 = add i64 %282, -1
  %286 = getelementptr inbounds i16, i16* %281, i64 1
  %287 = getelementptr inbounds i16, i16* %283, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !365

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = getelementptr i16, i16* %295, i64 %314
  %316 = sub i64 %291, %314
  %317 = getelementptr i16, i16* %297, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %295, i64 %326
  %329 = getelementptr i16, i16* %297, i64 %326
  %330 = bitcast i16* %329 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !367
  %332 = getelementptr i16, i16* %329, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !367
  %335 = bitcast i16* %328 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !370, !noalias !367
  %336 = getelementptr i16, i16* %328, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !370, !noalias !367
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %295, i64 %338
  %340 = getelementptr i16, i16* %297, i64 %338
  %341 = bitcast i16* %340 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !367
  %343 = getelementptr i16, i16* %340, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !367
  %346 = bitcast i16* %339 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !370, !noalias !367
  %347 = getelementptr i16, i16* %339, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !370, !noalias !367
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %295, i64 %349
  %351 = getelementptr i16, i16* %297, i64 %349
  %352 = bitcast i16* %351 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !367
  %354 = getelementptr i16, i16* %351, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !367
  %357 = bitcast i16* %350 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !370, !noalias !367
  %358 = getelementptr i16, i16* %350, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !370, !noalias !367
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %295, i64 %360
  %362 = getelementptr i16, i16* %297, i64 %360
  %363 = bitcast i16* %362 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !367
  %365 = getelementptr i16, i16* %362, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !367
  %368 = bitcast i16* %361 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !370, !noalias !367
  %369 = getelementptr i16, i16* %361, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !370, !noalias !367
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !372

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %295, i64 %378
  %381 = getelementptr i16, i16* %297, i64 %378
  %382 = bitcast i16* %381 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !367
  %384 = getelementptr i16, i16* %381, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !367
  %387 = bitcast i16* %380 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !370, !noalias !367
  %388 = getelementptr i16, i16* %380, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !370, !noalias !367
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !373

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %315, %393 ]
  %397 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %317, %393 ]
  %399 = add i64 %397, -1
  %400 = and i64 %397, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i16* [ %409, %402 ], [ %396, %395 ]
  %404 = phi i64 [ %408, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %410, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %405, align 2
  store i16 %407, i16* %403, align 2
  %408 = add i64 %404, -1
  %409 = getelementptr inbounds i16, i16* %403, i64 1
  %410 = getelementptr inbounds i16, i16* %405, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !374

413:                                              ; preds = %402, %395
  %414 = phi i16* [ %396, %395 ], [ %409, %402 ]
  %415 = phi i64 [ %397, %395 ], [ %408, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %410, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i16* [ %445, %418 ], [ %414, %413 ]
  %420 = phi i64 [ %444, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %446, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %421, align 2
  store i16 %422, i16* %419, align 2
  %423 = getelementptr inbounds i16, i16* %419, i64 1
  %424 = getelementptr inbounds i16, i16* %421, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %419, i64 2
  %427 = getelementptr inbounds i16, i16* %421, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %419, i64 3
  %430 = getelementptr inbounds i16, i16* %421, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %419, i64 4
  %433 = getelementptr inbounds i16, i16* %421, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %419, i64 5
  %436 = getelementptr inbounds i16, i16* %421, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %419, i64 6
  %439 = getelementptr inbounds i16, i16* %421, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %419, i64 7
  %442 = getelementptr inbounds i16, i16* %421, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %420, -8
  %445 = getelementptr inbounds i16, i16* %419, i64 8
  %446 = getelementptr inbounds i16, i16* %421, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !375

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #16
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol7Runtime12RemoteObject10setSubtypeERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  %10 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 24, i1 false) #15
  br label %186

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 11
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = bitcast %"class.v8_inspector::String16"* %3 to i16*
  %19 = trunc i64 %15 to i8
  %20 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %20, i64 0, i32 1, i32 1
  store i8 %19, i8* %21, align 1
  br label %39

22:                                               ; preds = %11
  %23 = icmp ugt i64 %15, 9223372036854775791
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.v8_inspector::String16"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #14
  unreachable

26:                                               ; preds = %22
  %27 = add nuw nsw i64 %15, 8
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #16
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  %37 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %17
  %40 = phi i16* [ %18, %17 ], [ %34, %31 ]
  %41 = add nuw nsw i64 %15, 1
  %42 = add i64 %15, 1
  %43 = icmp ult i64 %42, 16
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  %45 = add i64 %15, 1
  %46 = getelementptr i16, i16* %40, i64 %45
  %47 = getelementptr i16, i16* %13, i64 %45
  %48 = icmp ult i16* %40, %47
  %49 = icmp ult i16* %13, %46
  %50 = and i1 %48, %49
  br i1 %50, label %133, label %51

51:                                               ; preds = %44
  %52 = and i64 %42, -16
  %53 = getelementptr i16, i16* %40, i64 %52
  %54 = sub i64 %41, %52
  %55 = getelementptr i16, i16* %13, i64 %52
  %56 = add i64 %52, -16
  %57 = lshr exact i64 %56, 4
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 48
  br i1 %60, label %112, label %61

61:                                               ; preds = %51
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr i16, i16* %40, i64 %64
  %67 = getelementptr i16, i16* %13, i64 %64
  %68 = bitcast i16* %67 to <8 x i16>*
  %69 = load <8 x i16>, <8 x i16>* %68, align 2, !alias.scope !376
  %70 = getelementptr i16, i16* %67, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !376
  %73 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %73, align 2, !alias.scope !379, !noalias !376
  %74 = getelementptr i16, i16* %66, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %75, align 2, !alias.scope !379, !noalias !376
  %76 = or i64 %64, 16
  %77 = getelementptr i16, i16* %40, i64 %76
  %78 = getelementptr i16, i16* %13, i64 %76
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !376
  %81 = getelementptr i16, i16* %78, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !376
  %84 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !379, !noalias !376
  %85 = getelementptr i16, i16* %77, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !379, !noalias !376
  %87 = or i64 %64, 32
  %88 = getelementptr i16, i16* %40, i64 %87
  %89 = getelementptr i16, i16* %13, i64 %87
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !376
  %92 = getelementptr i16, i16* %89, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !376
  %95 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !379, !noalias !376
  %96 = getelementptr i16, i16* %88, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !379, !noalias !376
  %98 = or i64 %64, 48
  %99 = getelementptr i16, i16* %40, i64 %98
  %100 = getelementptr i16, i16* %13, i64 %98
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !376
  %103 = getelementptr i16, i16* %100, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !376
  %106 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !379, !noalias !376
  %107 = getelementptr i16, i16* %99, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !379, !noalias !376
  %109 = add i64 %64, 64
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !381

112:                                              ; preds = %63, %51
  %113 = phi i64 [ 0, %51 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr i16, i16* %40, i64 %116
  %119 = getelementptr i16, i16* %13, i64 %116
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !376
  %122 = getelementptr i16, i16* %119, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !376
  %125 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !379, !noalias !376
  %126 = getelementptr i16, i16* %118, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !379, !noalias !376
  %128 = add i64 %116, 16
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !382

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %42, %52
  br i1 %132, label %186, label %133

133:                                              ; preds = %131, %44, %39
  %134 = phi i16* [ %40, %44 ], [ %40, %39 ], [ %53, %131 ]
  %135 = phi i64 [ %41, %44 ], [ %41, %39 ], [ %54, %131 ]
  %136 = phi i16* [ %13, %44 ], [ %13, %39 ], [ %55, %131 ]
  %137 = add i64 %135, -1
  %138 = and i64 %135, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133, %140
  %141 = phi i16* [ %147, %140 ], [ %134, %133 ]
  %142 = phi i64 [ %146, %140 ], [ %135, %133 ]
  %143 = phi i16* [ %148, %140 ], [ %136, %133 ]
  %144 = phi i64 [ %149, %140 ], [ %138, %133 ]
  %145 = load i16, i16* %143, align 2
  store i16 %145, i16* %141, align 2
  %146 = add i64 %142, -1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = getelementptr inbounds i16, i16* %143, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !383

151:                                              ; preds = %140, %133
  %152 = phi i16* [ %134, %133 ], [ %147, %140 ]
  %153 = phi i64 [ %135, %133 ], [ %146, %140 ]
  %154 = phi i16* [ %136, %133 ], [ %148, %140 ]
  %155 = icmp ult i64 %137, 7
  br i1 %155, label %186, label %156

156:                                              ; preds = %151, %156
  %157 = phi i16* [ %183, %156 ], [ %152, %151 ]
  %158 = phi i64 [ %182, %156 ], [ %153, %151 ]
  %159 = phi i16* [ %184, %156 ], [ %154, %151 ]
  %160 = load i16, i16* %159, align 2
  store i16 %160, i16* %157, align 2
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %159, i64 1
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = getelementptr inbounds i16, i16* %159, i64 2
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = getelementptr inbounds i16, i16* %159, i64 3
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = getelementptr inbounds i16, i16* %159, i64 4
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = getelementptr inbounds i16, i16* %159, i64 5
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = getelementptr inbounds i16, i16* %159, i64 6
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = getelementptr inbounds i16, i16* %159, i64 7
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = add i64 %158, -8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = getelementptr inbounds i16, i16* %159, i64 8
  %185 = icmp eq i64 %182, 0
  br i1 %185, label %186, label %156, !llvm.loop !384

186:                                              ; preds = %151, %156, %131, %8
  %187 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %188 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %189 = load i64, i64* %188, align 8
  store i64 %189, i64* %187, align 8
  %190 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::RemoteObject", %"class.v8_inspector::protocol::Runtime::RemoteObject"* %0, i64 0, i32 3, i32 1, i32 0
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0
  %192 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %190, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %191) #15
  %193 = load i64, i64* %187, align 8
  %194 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::RemoteObject", %"class.v8_inspector::protocol::Runtime::RemoteObject"* %0, i64 0, i32 3, i32 1, i32 1
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::RemoteObject", %"class.v8_inspector::protocol::Runtime::RemoteObject"* %0, i64 0, i32 3, i32 0
  store i8 1, i8* %195, align 8
  %196 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %196, i64 0, i32 1, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %186
  %201 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #16
  br label %203

203:                                              ; preds = %186, %200
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol7Runtime12RemoteObject14setDescriptionERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  %10 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 24, i1 false) #15
  br label %186

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 11
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = bitcast %"class.v8_inspector::String16"* %3 to i16*
  %19 = trunc i64 %15 to i8
  %20 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %20, i64 0, i32 1, i32 1
  store i8 %19, i8* %21, align 1
  br label %39

22:                                               ; preds = %11
  %23 = icmp ugt i64 %15, 9223372036854775791
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.v8_inspector::String16"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #14
  unreachable

26:                                               ; preds = %22
  %27 = add nuw nsw i64 %15, 8
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #16
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  %37 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %17
  %40 = phi i16* [ %18, %17 ], [ %34, %31 ]
  %41 = add nuw nsw i64 %15, 1
  %42 = add i64 %15, 1
  %43 = icmp ult i64 %42, 16
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  %45 = add i64 %15, 1
  %46 = getelementptr i16, i16* %40, i64 %45
  %47 = getelementptr i16, i16* %13, i64 %45
  %48 = icmp ult i16* %40, %47
  %49 = icmp ult i16* %13, %46
  %50 = and i1 %48, %49
  br i1 %50, label %133, label %51

51:                                               ; preds = %44
  %52 = and i64 %42, -16
  %53 = getelementptr i16, i16* %40, i64 %52
  %54 = sub i64 %41, %52
  %55 = getelementptr i16, i16* %13, i64 %52
  %56 = add i64 %52, -16
  %57 = lshr exact i64 %56, 4
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 48
  br i1 %60, label %112, label %61

61:                                               ; preds = %51
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr i16, i16* %40, i64 %64
  %67 = getelementptr i16, i16* %13, i64 %64
  %68 = bitcast i16* %67 to <8 x i16>*
  %69 = load <8 x i16>, <8 x i16>* %68, align 2, !alias.scope !385
  %70 = getelementptr i16, i16* %67, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !385
  %73 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %73, align 2, !alias.scope !388, !noalias !385
  %74 = getelementptr i16, i16* %66, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %75, align 2, !alias.scope !388, !noalias !385
  %76 = or i64 %64, 16
  %77 = getelementptr i16, i16* %40, i64 %76
  %78 = getelementptr i16, i16* %13, i64 %76
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !385
  %81 = getelementptr i16, i16* %78, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !385
  %84 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !388, !noalias !385
  %85 = getelementptr i16, i16* %77, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !388, !noalias !385
  %87 = or i64 %64, 32
  %88 = getelementptr i16, i16* %40, i64 %87
  %89 = getelementptr i16, i16* %13, i64 %87
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !385
  %92 = getelementptr i16, i16* %89, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !385
  %95 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !388, !noalias !385
  %96 = getelementptr i16, i16* %88, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !388, !noalias !385
  %98 = or i64 %64, 48
  %99 = getelementptr i16, i16* %40, i64 %98
  %100 = getelementptr i16, i16* %13, i64 %98
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !385
  %103 = getelementptr i16, i16* %100, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !385
  %106 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !388, !noalias !385
  %107 = getelementptr i16, i16* %99, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !388, !noalias !385
  %109 = add i64 %64, 64
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !390

112:                                              ; preds = %63, %51
  %113 = phi i64 [ 0, %51 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr i16, i16* %40, i64 %116
  %119 = getelementptr i16, i16* %13, i64 %116
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !385
  %122 = getelementptr i16, i16* %119, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !385
  %125 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !388, !noalias !385
  %126 = getelementptr i16, i16* %118, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !388, !noalias !385
  %128 = add i64 %116, 16
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !391

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %42, %52
  br i1 %132, label %186, label %133

133:                                              ; preds = %131, %44, %39
  %134 = phi i16* [ %40, %44 ], [ %40, %39 ], [ %53, %131 ]
  %135 = phi i64 [ %41, %44 ], [ %41, %39 ], [ %54, %131 ]
  %136 = phi i16* [ %13, %44 ], [ %13, %39 ], [ %55, %131 ]
  %137 = add i64 %135, -1
  %138 = and i64 %135, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133, %140
  %141 = phi i16* [ %147, %140 ], [ %134, %133 ]
  %142 = phi i64 [ %146, %140 ], [ %135, %133 ]
  %143 = phi i16* [ %148, %140 ], [ %136, %133 ]
  %144 = phi i64 [ %149, %140 ], [ %138, %133 ]
  %145 = load i16, i16* %143, align 2
  store i16 %145, i16* %141, align 2
  %146 = add i64 %142, -1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = getelementptr inbounds i16, i16* %143, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !392

151:                                              ; preds = %140, %133
  %152 = phi i16* [ %134, %133 ], [ %147, %140 ]
  %153 = phi i64 [ %135, %133 ], [ %146, %140 ]
  %154 = phi i16* [ %136, %133 ], [ %148, %140 ]
  %155 = icmp ult i64 %137, 7
  br i1 %155, label %186, label %156

156:                                              ; preds = %151, %156
  %157 = phi i16* [ %183, %156 ], [ %152, %151 ]
  %158 = phi i64 [ %182, %156 ], [ %153, %151 ]
  %159 = phi i16* [ %184, %156 ], [ %154, %151 ]
  %160 = load i16, i16* %159, align 2
  store i16 %160, i16* %157, align 2
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %159, i64 1
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = getelementptr inbounds i16, i16* %159, i64 2
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = getelementptr inbounds i16, i16* %159, i64 3
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = getelementptr inbounds i16, i16* %159, i64 4
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = getelementptr inbounds i16, i16* %159, i64 5
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = getelementptr inbounds i16, i16* %159, i64 6
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = getelementptr inbounds i16, i16* %159, i64 7
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = add i64 %158, -8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = getelementptr inbounds i16, i16* %159, i64 8
  %185 = icmp eq i64 %182, 0
  br i1 %185, label %186, label %156, !llvm.loop !393

186:                                              ; preds = %151, %156, %131, %8
  %187 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %188 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %189 = load i64, i64* %188, align 8
  store i64 %189, i64* %187, align 8
  %190 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::RemoteObject", %"class.v8_inspector::protocol::Runtime::RemoteObject"* %0, i64 0, i32 7, i32 1, i32 0
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0
  %192 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %190, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %191) #15
  %193 = load i64, i64* %187, align 8
  %194 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::RemoteObject", %"class.v8_inspector::protocol::Runtime::RemoteObject"* %0, i64 0, i32 7, i32 1, i32 1
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::RemoteObject", %"class.v8_inspector::protocol::Runtime::RemoteObject"* %0, i64 0, i32 7, i32 0
  store i8 1, i8* %195, align 8
  %196 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %196, i64 0, i32 1, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %186
  %201 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #16
  br label %203

203:                                              ; preds = %186, %200
  ret void
}

declare %"class.v8::debug::GeneratorObject"* @_ZN2v85debug15GeneratorObject4CastENS_5LocalINS_5ValueEEE(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZN2v85debug15GeneratorObject11IsSuspendedEv(%"class.v8::debug::GeneratorObject"*) local_unnamed_addr #4

declare %"class.v8::Function"* @_ZN2v85debug15GeneratorObject8FunctionEv(%"class.v8::debug::GeneratorObject"*) local_unnamed_addr #4

declare %"class.v8::debug::Script"* @_ZN2v85debug15GeneratorObject6ScriptEv(%"class.v8::debug::GeneratorObject"*) local_unnamed_addr #4

declare { i64, i8 } @_ZN2v85debug15GeneratorObject17SuspendedLocationEv(%"class.v8::debug::GeneratorObject"*) local_unnamed_addr #4

declare i32 @_ZNK2v85debug6Script2IdEv(%"class.v8::debug::Script"*) local_unnamed_addr #4

declare i32 @_ZNK2v85debug8Location13GetLineNumberEv(%"class.v8::debug::Location"*) local_unnamed_addr #4

declare i32 @_ZNK2v85debug8Location15GetColumnNumberEv(%"class.v8::debug::Location"*) local_unnamed_addr #4

declare %"class.v8::String"* @_ZN2v86Object18GetConstructorNameEv(%"class.v8::Object"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12v8_inspector8String169substringEmm(%"class.v8_inspector::String16"* noalias sret, %"class.v8_inspector::String16"*, i64, i64) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1, !noalias !394
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8, !noalias !394
  %13 = zext i8 %9 to i64
  %14 = select i1 %10, i64 %12, i64 %13
  %15 = icmp ult i64 %14, %2
  br i1 %15, label %16, label %18

16:                                               ; preds = %4
  %17 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* nonnull %17) #14
  unreachable

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8, !noalias !394
  %21 = bitcast %"class.v8_inspector::String16"* %1 to i16*
  %22 = select i1 %10, i16* %20, i16* %21
  %23 = getelementptr inbounds i16, i16* %22, i64 %2
  %24 = sub i64 %14, %2
  %25 = icmp ult i64 %24, %3
  %26 = select i1 %25, i64 %24, i64 %3
  %27 = icmp ugt i64 %26, 9223372036854775791
  br i1 %27, label %28, label %30

28:                                               ; preds = %18
  %29 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #14
  unreachable

30:                                               ; preds = %18
  %31 = icmp ult i64 %26, 11
  br i1 %31, label %45, label %32

32:                                               ; preds = %30
  %33 = add nuw nsw i64 %26, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #14
  unreachable

37:                                               ; preds = %32
  %38 = shl i64 %34, 1
  %39 = tail call i8* @_Znwm(i64 %38) #16
  %40 = bitcast i8* %39 to i16*
  %41 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  store i8* %39, i8** %41, align 8, !alias.scope !394
  %42 = or i64 %34, -9223372036854775808
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %42, i64* %43, align 8, !alias.scope !394
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %44, align 8, !alias.scope !394
  br label %51

45:                                               ; preds = %30
  %46 = trunc i64 %26 to i8
  %47 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %47, i64 0, i32 1, i32 1
  store i8 %46, i8* %48, align 1, !alias.scope !394
  %49 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %50 = icmp eq i64 %26, 0
  br i1 %50, label %198, label %51

51:                                               ; preds = %45, %37
  %52 = phi i16* [ %40, %37 ], [ %49, %45 ]
  %53 = icmp ult i64 %26, 16
  br i1 %53, label %143, label %54

54:                                               ; preds = %51
  %55 = getelementptr i16, i16* %52, i64 %26
  %56 = add i64 %26, %2
  %57 = getelementptr i16, i16* %22, i64 %56
  %58 = icmp ult i16* %52, %57
  %59 = icmp ult i16* %23, %55
  %60 = and i1 %58, %59
  br i1 %60, label %143, label %61

61:                                               ; preds = %54
  %62 = and i64 %26, -16
  %63 = getelementptr i16, i16* %52, i64 %62
  %64 = sub i64 %26, %62
  %65 = getelementptr i16, i16* %23, i64 %62
  %66 = add i64 %62, -16
  %67 = lshr exact i64 %66, 4
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 48
  br i1 %70, label %122, label %71

71:                                               ; preds = %61
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i16, i16* %52, i64 %74
  %77 = getelementptr i16, i16* %23, i64 %74
  %78 = bitcast i16* %77 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !397
  %80 = getelementptr i16, i16* %77, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !397
  %83 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !400, !noalias !397
  %84 = getelementptr i16, i16* %76, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !400, !noalias !397
  %86 = or i64 %74, 16
  %87 = getelementptr i16, i16* %52, i64 %86
  %88 = getelementptr i16, i16* %23, i64 %86
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !397
  %91 = getelementptr i16, i16* %88, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !397
  %94 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !400, !noalias !397
  %95 = getelementptr i16, i16* %87, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !400, !noalias !397
  %97 = or i64 %74, 32
  %98 = getelementptr i16, i16* %52, i64 %97
  %99 = getelementptr i16, i16* %23, i64 %97
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !397
  %102 = getelementptr i16, i16* %99, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !397
  %105 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !400, !noalias !397
  %106 = getelementptr i16, i16* %98, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !400, !noalias !397
  %108 = or i64 %74, 48
  %109 = getelementptr i16, i16* %52, i64 %108
  %110 = getelementptr i16, i16* %23, i64 %108
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !397
  %113 = getelementptr i16, i16* %110, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !397
  %116 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !400, !noalias !397
  %117 = getelementptr i16, i16* %109, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !400, !noalias !397
  %119 = add i64 %74, 64
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !402

122:                                              ; preds = %73, %61
  %123 = phi i64 [ 0, %61 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i16, i16* %52, i64 %126
  %129 = getelementptr i16, i16* %23, i64 %126
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !397
  %132 = getelementptr i16, i16* %129, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !397
  %135 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !400, !noalias !397
  %136 = getelementptr i16, i16* %128, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !400, !noalias !397
  %138 = add i64 %126, 16
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !403

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %26, %62
  br i1 %142, label %196, label %143

143:                                              ; preds = %141, %54, %51
  %144 = phi i16* [ %52, %54 ], [ %52, %51 ], [ %63, %141 ]
  %145 = phi i64 [ %26, %54 ], [ %26, %51 ], [ %64, %141 ]
  %146 = phi i16* [ %23, %54 ], [ %23, %51 ], [ %65, %141 ]
  %147 = add i64 %145, -1
  %148 = and i64 %145, 7
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %143, %150
  %151 = phi i16* [ %157, %150 ], [ %144, %143 ]
  %152 = phi i64 [ %156, %150 ], [ %145, %143 ]
  %153 = phi i16* [ %158, %150 ], [ %146, %143 ]
  %154 = phi i64 [ %159, %150 ], [ %148, %143 ]
  %155 = load i16, i16* %153, align 2
  store i16 %155, i16* %151, align 2
  %156 = add i64 %152, -1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = getelementptr inbounds i16, i16* %153, i64 1
  %159 = add i64 %154, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %150, !llvm.loop !404

161:                                              ; preds = %150, %143
  %162 = phi i16* [ %144, %143 ], [ %157, %150 ]
  %163 = phi i64 [ %145, %143 ], [ %156, %150 ]
  %164 = phi i16* [ %146, %143 ], [ %158, %150 ]
  %165 = icmp ult i64 %147, 7
  br i1 %165, label %196, label %166

166:                                              ; preds = %161, %166
  %167 = phi i16* [ %193, %166 ], [ %162, %161 ]
  %168 = phi i64 [ %192, %166 ], [ %163, %161 ]
  %169 = phi i16* [ %194, %166 ], [ %164, %161 ]
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %167, align 2
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = getelementptr inbounds i16, i16* %169, i64 1
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = getelementptr inbounds i16, i16* %169, i64 2
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = getelementptr inbounds i16, i16* %169, i64 3
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = getelementptr inbounds i16, i16* %169, i64 4
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = getelementptr inbounds i16, i16* %169, i64 5
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = getelementptr inbounds i16, i16* %169, i64 6
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = getelementptr inbounds i16, i16* %169, i64 7
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = add i64 %168, -8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = getelementptr inbounds i16, i16* %169, i64 8
  %195 = icmp eq i64 %192, 0
  br i1 %195, label %196, label %166, !llvm.loop !405

196:                                              ; preds = %161, %166, %141
  %197 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  br label %198

198:                                              ; preds = %196, %45
  %199 = phi %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* [ %197, %196 ], [ %47, %45 ]
  %200 = phi i16* [ %52, %196 ], [ %49, %45 ]
  %201 = getelementptr inbounds i16, i16* %200, i64 %26
  store i16 0, i16* %201, align 2
  call void @_ZN12v8_inspector8String16C1EONSt3__112basic_stringItNS1_11char_traitsItEENS1_9allocatorItEEEE(%"class.v8_inspector::String16"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #15
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %199, i64 0, i32 1, i32 1
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %208

205:                                              ; preds = %198
  %206 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %207 = load i8*, i8** %206, align 8
  call void @_ZdlPv(i8* %207) #16
  br label %208

208:                                              ; preds = %198, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret void
}

declare void @_ZN12v8_inspector8String16C1EONSt3__112basic_stringItNS1_11char_traitsItEENS1_9allocatorItEEEE(%"class.v8_inspector::String16"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plItNS_11char_traitsItEENS_9allocatorItEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #15
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i16*, i16** %21, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %24 = select i1 %8, i16* %22, i16* %23
  %25 = add i64 %20, %12
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %3
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #14
  unreachable

29:                                               ; preds = %3
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %31, label %36

31:                                               ; preds = %29
  %32 = trunc i64 %12 to i8
  %33 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %33, i64 0, i32 1, i32 1
  store i8 %32, i8* %34, align 1
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %49

36:                                               ; preds = %29
  %37 = add nuw nsw i64 %25, 8
  %38 = and i64 %37, -8
  %39 = icmp slt i64 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %36
  tail call void @abort() #14
  unreachable

41:                                               ; preds = %36
  %42 = shl i64 %38, 1
  %43 = tail call i8* @_Znwm(i64 %42) #16
  %44 = bitcast i8* %43 to i16*
  %45 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %43, i8** %45, align 8
  %46 = or i64 %38, -9223372036854775808
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %12, i64* %48, align 8
  br label %49

49:                                               ; preds = %41, %31
  %50 = phi i16* [ %35, %31 ], [ %44, %41 ]
  %51 = icmp eq i64 %12, 0
  br i1 %51, label %197, label %52

52:                                               ; preds = %49
  %53 = icmp ult i64 %12, 16
  br i1 %53, label %142, label %54

54:                                               ; preds = %52
  %55 = getelementptr i16, i16* %50, i64 %12
  %56 = getelementptr i16, i16* %24, i64 %12
  %57 = icmp ult i16* %50, %56
  %58 = icmp ult i16* %24, %55
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %54
  %61 = and i64 %12, -16
  %62 = getelementptr i16, i16* %50, i64 %61
  %63 = sub i64 %12, %61
  %64 = getelementptr i16, i16* %24, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %50, i64 %73
  %76 = getelementptr i16, i16* %24, i64 %73
  %77 = bitcast i16* %76 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !406
  %79 = getelementptr i16, i16* %76, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !406
  %82 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !409, !noalias !406
  %83 = getelementptr i16, i16* %75, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !409, !noalias !406
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %50, i64 %85
  %87 = getelementptr i16, i16* %24, i64 %85
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !406
  %90 = getelementptr i16, i16* %87, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !406
  %93 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !409, !noalias !406
  %94 = getelementptr i16, i16* %86, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !409, !noalias !406
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %50, i64 %96
  %98 = getelementptr i16, i16* %24, i64 %96
  %99 = bitcast i16* %98 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !406
  %101 = getelementptr i16, i16* %98, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !406
  %104 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !409, !noalias !406
  %105 = getelementptr i16, i16* %97, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !409, !noalias !406
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %50, i64 %107
  %109 = getelementptr i16, i16* %24, i64 %107
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !406
  %112 = getelementptr i16, i16* %109, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !406
  %115 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !409, !noalias !406
  %116 = getelementptr i16, i16* %108, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !409, !noalias !406
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !411

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %50, i64 %125
  %128 = getelementptr i16, i16* %24, i64 %125
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !406
  %131 = getelementptr i16, i16* %128, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !406
  %134 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !409, !noalias !406
  %135 = getelementptr i16, i16* %127, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !409, !noalias !406
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !412

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %12, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %54, %52
  %143 = phi i16* [ %50, %54 ], [ %50, %52 ], [ %62, %140 ]
  %144 = phi i64 [ %12, %54 ], [ %12, %52 ], [ %63, %140 ]
  %145 = phi i16* [ %24, %54 ], [ %24, %52 ], [ %64, %140 ]
  %146 = add i64 %144, -1
  %147 = and i64 %144, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i16* [ %156, %149 ], [ %143, %142 ]
  %151 = phi i64 [ %155, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %157, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %152, align 2
  store i16 %154, i16* %150, align 2
  %155 = add i64 %151, -1
  %156 = getelementptr inbounds i16, i16* %150, i64 1
  %157 = getelementptr inbounds i16, i16* %152, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !413

160:                                              ; preds = %149, %142
  %161 = phi i16* [ %143, %142 ], [ %156, %149 ]
  %162 = phi i64 [ %144, %142 ], [ %155, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %157, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i16* [ %192, %165 ], [ %161, %160 ]
  %167 = phi i64 [ %191, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %193, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %166, align 2
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = getelementptr inbounds i16, i16* %168, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %166, i64 2
  %174 = getelementptr inbounds i16, i16* %168, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %166, i64 3
  %177 = getelementptr inbounds i16, i16* %168, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %166, i64 4
  %180 = getelementptr inbounds i16, i16* %168, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %166, i64 5
  %183 = getelementptr inbounds i16, i16* %168, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %166, i64 6
  %186 = getelementptr inbounds i16, i16* %168, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %166, i64 7
  %189 = getelementptr inbounds i16, i16* %168, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %167, -8
  %192 = getelementptr inbounds i16, i16* %166, i64 8
  %193 = getelementptr inbounds i16, i16* %168, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !414

195:                                              ; preds = %160, %165, %140
  %196 = load i8, i8* %14, align 1
  br label %197

197:                                              ; preds = %195, %49
  %198 = phi i8 [ %196, %195 ], [ %15, %49 ]
  %199 = getelementptr inbounds i16, i16* %50, i64 %12
  store i16 0, i16* %199, align 2
  %200 = icmp slt i8 %198, 0
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load i16*, i16** %201, align 8
  %203 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %204 = select i1 %200, i16* %202, i16* %203
  %205 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %206 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %205, i64 0, i32 1, i32 1
  %207 = load i8, i8* %206, align 1
  %208 = icmp slt i8 %207, 0
  br i1 %208, label %209, label %216

209:                                              ; preds = %197
  %210 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %211 = load i64, i64* %210, align 8
  %212 = and i64 %211, 9223372036854775807
  %213 = add nsw i64 %212, -1
  %214 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %215 = load i64, i64* %214, align 8
  br label %218

216:                                              ; preds = %197
  %217 = zext i8 %207 to i64
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i64 [ %213, %209 ], [ 10, %216 ]
  %220 = phi i64 [ %215, %209 ], [ %217, %216 ]
  %221 = sub i64 %219, %220
  %222 = icmp ult i64 %221, %20
  br i1 %222, label %384, label %223

223:                                              ; preds = %218
  %224 = icmp eq i64 %20, 0
  br i1 %224, label %387, label %225

225:                                              ; preds = %223
  %226 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load i16*, i16** %226, align 8
  %228 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %229 = select i1 %208, i16* %227, i16* %228
  %230 = getelementptr inbounds i16, i16* %229, i64 %220
  %231 = icmp ult i64 %20, 16
  br i1 %231, label %321, label %232

232:                                              ; preds = %225
  %233 = add i64 %20, %220
  %234 = getelementptr i16, i16* %229, i64 %233
  %235 = getelementptr i16, i16* %204, i64 %20
  %236 = icmp ult i16* %230, %235
  %237 = icmp ult i16* %204, %234
  %238 = and i1 %236, %237
  br i1 %238, label %321, label %239

239:                                              ; preds = %232
  %240 = and i64 %20, -16
  %241 = getelementptr i16, i16* %230, i64 %240
  %242 = sub i64 %20, %240
  %243 = getelementptr i16, i16* %204, i64 %240
  %244 = add i64 %240, -16
  %245 = lshr exact i64 %244, 4
  %246 = add nuw nsw i64 %245, 1
  %247 = and i64 %246, 3
  %248 = icmp ult i64 %244, 48
  br i1 %248, label %300, label %249

249:                                              ; preds = %239
  %250 = sub nsw i64 %246, %247
  br label %251

251:                                              ; preds = %251, %249
  %252 = phi i64 [ 0, %249 ], [ %297, %251 ]
  %253 = phi i64 [ %250, %249 ], [ %298, %251 ]
  %254 = getelementptr i16, i16* %230, i64 %252
  %255 = getelementptr i16, i16* %204, i64 %252
  %256 = bitcast i16* %255 to <8 x i16>*
  %257 = load <8 x i16>, <8 x i16>* %256, align 2, !alias.scope !415
  %258 = getelementptr i16, i16* %255, i64 8
  %259 = bitcast i16* %258 to <8 x i16>*
  %260 = load <8 x i16>, <8 x i16>* %259, align 2, !alias.scope !415
  %261 = bitcast i16* %254 to <8 x i16>*
  store <8 x i16> %257, <8 x i16>* %261, align 2, !alias.scope !418, !noalias !415
  %262 = getelementptr i16, i16* %254, i64 8
  %263 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %260, <8 x i16>* %263, align 2, !alias.scope !418, !noalias !415
  %264 = or i64 %252, 16
  %265 = getelementptr i16, i16* %230, i64 %264
  %266 = getelementptr i16, i16* %204, i64 %264
  %267 = bitcast i16* %266 to <8 x i16>*
  %268 = load <8 x i16>, <8 x i16>* %267, align 2, !alias.scope !415
  %269 = getelementptr i16, i16* %266, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !415
  %272 = bitcast i16* %265 to <8 x i16>*
  store <8 x i16> %268, <8 x i16>* %272, align 2, !alias.scope !418, !noalias !415
  %273 = getelementptr i16, i16* %265, i64 8
  %274 = bitcast i16* %273 to <8 x i16>*
  store <8 x i16> %271, <8 x i16>* %274, align 2, !alias.scope !418, !noalias !415
  %275 = or i64 %252, 32
  %276 = getelementptr i16, i16* %230, i64 %275
  %277 = getelementptr i16, i16* %204, i64 %275
  %278 = bitcast i16* %277 to <8 x i16>*
  %279 = load <8 x i16>, <8 x i16>* %278, align 2, !alias.scope !415
  %280 = getelementptr i16, i16* %277, i64 8
  %281 = bitcast i16* %280 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !415
  %283 = bitcast i16* %276 to <8 x i16>*
  store <8 x i16> %279, <8 x i16>* %283, align 2, !alias.scope !418, !noalias !415
  %284 = getelementptr i16, i16* %276, i64 8
  %285 = bitcast i16* %284 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %285, align 2, !alias.scope !418, !noalias !415
  %286 = or i64 %252, 48
  %287 = getelementptr i16, i16* %230, i64 %286
  %288 = getelementptr i16, i16* %204, i64 %286
  %289 = bitcast i16* %288 to <8 x i16>*
  %290 = load <8 x i16>, <8 x i16>* %289, align 2, !alias.scope !415
  %291 = getelementptr i16, i16* %288, i64 8
  %292 = bitcast i16* %291 to <8 x i16>*
  %293 = load <8 x i16>, <8 x i16>* %292, align 2, !alias.scope !415
  %294 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %290, <8 x i16>* %294, align 2, !alias.scope !418, !noalias !415
  %295 = getelementptr i16, i16* %287, i64 8
  %296 = bitcast i16* %295 to <8 x i16>*
  store <8 x i16> %293, <8 x i16>* %296, align 2, !alias.scope !418, !noalias !415
  %297 = add i64 %252, 64
  %298 = add i64 %253, -4
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %251, !llvm.loop !420

300:                                              ; preds = %251, %239
  %301 = phi i64 [ 0, %239 ], [ %297, %251 ]
  %302 = icmp eq i64 %247, 0
  br i1 %302, label %319, label %303

303:                                              ; preds = %300, %303
  %304 = phi i64 [ %316, %303 ], [ %301, %300 ]
  %305 = phi i64 [ %317, %303 ], [ %247, %300 ]
  %306 = getelementptr i16, i16* %230, i64 %304
  %307 = getelementptr i16, i16* %204, i64 %304
  %308 = bitcast i16* %307 to <8 x i16>*
  %309 = load <8 x i16>, <8 x i16>* %308, align 2, !alias.scope !415
  %310 = getelementptr i16, i16* %307, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  %312 = load <8 x i16>, <8 x i16>* %311, align 2, !alias.scope !415
  %313 = bitcast i16* %306 to <8 x i16>*
  store <8 x i16> %309, <8 x i16>* %313, align 2, !alias.scope !418, !noalias !415
  %314 = getelementptr i16, i16* %306, i64 8
  %315 = bitcast i16* %314 to <8 x i16>*
  store <8 x i16> %312, <8 x i16>* %315, align 2, !alias.scope !418, !noalias !415
  %316 = add i64 %304, 16
  %317 = add i64 %305, -1
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %319, label %303, !llvm.loop !421

319:                                              ; preds = %303, %300
  %320 = icmp eq i64 %20, %240
  br i1 %320, label %374, label %321

321:                                              ; preds = %319, %232, %225
  %322 = phi i16* [ %230, %232 ], [ %230, %225 ], [ %241, %319 ]
  %323 = phi i64 [ %20, %232 ], [ %20, %225 ], [ %242, %319 ]
  %324 = phi i16* [ %204, %232 ], [ %204, %225 ], [ %243, %319 ]
  %325 = add i64 %323, -1
  %326 = and i64 %323, 7
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %339, label %328

328:                                              ; preds = %321, %328
  %329 = phi i16* [ %335, %328 ], [ %322, %321 ]
  %330 = phi i64 [ %334, %328 ], [ %323, %321 ]
  %331 = phi i16* [ %336, %328 ], [ %324, %321 ]
  %332 = phi i64 [ %337, %328 ], [ %326, %321 ]
  %333 = load i16, i16* %331, align 2
  store i16 %333, i16* %329, align 2
  %334 = add i64 %330, -1
  %335 = getelementptr inbounds i16, i16* %329, i64 1
  %336 = getelementptr inbounds i16, i16* %331, i64 1
  %337 = add i64 %332, -1
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %339, label %328, !llvm.loop !422

339:                                              ; preds = %328, %321
  %340 = phi i16* [ %322, %321 ], [ %335, %328 ]
  %341 = phi i64 [ %323, %321 ], [ %334, %328 ]
  %342 = phi i16* [ %324, %321 ], [ %336, %328 ]
  %343 = icmp ult i64 %325, 7
  br i1 %343, label %374, label %344

344:                                              ; preds = %339, %344
  %345 = phi i16* [ %371, %344 ], [ %340, %339 ]
  %346 = phi i64 [ %370, %344 ], [ %341, %339 ]
  %347 = phi i16* [ %372, %344 ], [ %342, %339 ]
  %348 = load i16, i16* %347, align 2
  store i16 %348, i16* %345, align 2
  %349 = getelementptr inbounds i16, i16* %345, i64 1
  %350 = getelementptr inbounds i16, i16* %347, i64 1
  %351 = load i16, i16* %350, align 2
  store i16 %351, i16* %349, align 2
  %352 = getelementptr inbounds i16, i16* %345, i64 2
  %353 = getelementptr inbounds i16, i16* %347, i64 2
  %354 = load i16, i16* %353, align 2
  store i16 %354, i16* %352, align 2
  %355 = getelementptr inbounds i16, i16* %345, i64 3
  %356 = getelementptr inbounds i16, i16* %347, i64 3
  %357 = load i16, i16* %356, align 2
  store i16 %357, i16* %355, align 2
  %358 = getelementptr inbounds i16, i16* %345, i64 4
  %359 = getelementptr inbounds i16, i16* %347, i64 4
  %360 = load i16, i16* %359, align 2
  store i16 %360, i16* %358, align 2
  %361 = getelementptr inbounds i16, i16* %345, i64 5
  %362 = getelementptr inbounds i16, i16* %347, i64 5
  %363 = load i16, i16* %362, align 2
  store i16 %363, i16* %361, align 2
  %364 = getelementptr inbounds i16, i16* %345, i64 6
  %365 = getelementptr inbounds i16, i16* %347, i64 6
  %366 = load i16, i16* %365, align 2
  store i16 %366, i16* %364, align 2
  %367 = getelementptr inbounds i16, i16* %345, i64 7
  %368 = getelementptr inbounds i16, i16* %347, i64 7
  %369 = load i16, i16* %368, align 2
  store i16 %369, i16* %367, align 2
  %370 = add i64 %346, -8
  %371 = getelementptr inbounds i16, i16* %345, i64 8
  %372 = getelementptr inbounds i16, i16* %347, i64 8
  %373 = icmp eq i64 %370, 0
  br i1 %373, label %374, label %344, !llvm.loop !423

374:                                              ; preds = %339, %344, %319
  %375 = add i64 %220, %20
  %376 = load i8, i8* %206, align 1
  %377 = icmp slt i8 %376, 0
  br i1 %377, label %378, label %380

378:                                              ; preds = %374
  %379 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %375, i64* %379, align 8
  br label %382

380:                                              ; preds = %374
  %381 = trunc i64 %375 to i8
  store i8 %381, i8* %206, align 1
  br label %382

382:                                              ; preds = %380, %378
  %383 = getelementptr inbounds i16, i16* %229, i64 %375
  store i16 0, i16* %383, align 2
  br label %387

384:                                              ; preds = %218
  %385 = add i64 %220, %20
  %386 = sub i64 %385, %219
  tail call void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE21__grow_by_and_replaceEmmmmmmPKt(%"class.std::__1::basic_string"* %0, i64 %219, i64 %386, i64 %220, i64 %220, i64 0, i64 %20, i16* %204) #15
  br label %387

387:                                              ; preds = %223, %382, %384
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8String166concatIJS0_cS0_cEEES0_DpT_(%"class.v8_inspector::String16"* noalias sret, %"class.v8_inspector::String16"*, i8 signext, %"class.v8_inspector::String16"*, i8 signext) local_unnamed_addr #2 comdat align 2 {
  %6 = alloca %"class.v8_inspector::String16Builder", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = bitcast %"class.v8_inspector::String16Builder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #15
  call void @_ZN12v8_inspector15String16BuilderC1Ev(%"class.v8_inspector::String16Builder"* nonnull %6) #15
  %10 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %5
  %15 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  %16 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %16, i64 24, i1 false) #15
  br label %192

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %21, 11
  br i1 %22, label %23, label %28

23:                                               ; preds = %17
  %24 = bitcast %"class.v8_inspector::String16"* %7 to i16*
  %25 = trunc i64 %21 to i8
  %26 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %26, i64 0, i32 1, i32 1
  store i8 %25, i8* %27, align 1
  br label %45

28:                                               ; preds = %17
  %29 = icmp ugt i64 %21, 9223372036854775791
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast %"class.v8_inspector::String16"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %31) #14
  unreachable

32:                                               ; preds = %28
  %33 = add nuw nsw i64 %21, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  call void @abort() #14
  unreachable

37:                                               ; preds = %32
  %38 = shl i64 %34, 1
  %39 = call i8* @_Znwm(i64 %38) #16
  %40 = bitcast i8* %39 to i16*
  %41 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  store i8* %39, i8** %41, align 8
  %42 = or i64 %34, -9223372036854775808
  %43 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %21, i64* %44, align 8
  br label %45

45:                                               ; preds = %37, %23
  %46 = phi i16* [ %24, %23 ], [ %40, %37 ]
  %47 = add nuw nsw i64 %21, 1
  %48 = add i64 %21, 1
  %49 = icmp ult i64 %48, 16
  br i1 %49, label %139, label %50

50:                                               ; preds = %45
  %51 = add i64 %21, 1
  %52 = getelementptr i16, i16* %46, i64 %51
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = icmp ult i16* %46, %53
  %55 = icmp ult i16* %19, %52
  %56 = and i1 %54, %55
  br i1 %56, label %139, label %57

57:                                               ; preds = %50
  %58 = and i64 %48, -16
  %59 = getelementptr i16, i16* %46, i64 %58
  %60 = sub i64 %47, %58
  %61 = getelementptr i16, i16* %19, i64 %58
  %62 = add i64 %58, -16
  %63 = lshr exact i64 %62, 4
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 48
  br i1 %66, label %118, label %67

67:                                               ; preds = %57
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i16, i16* %46, i64 %70
  %73 = getelementptr i16, i16* %19, i64 %70
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !424
  %76 = getelementptr i16, i16* %73, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !424
  %79 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %79, align 2, !alias.scope !427, !noalias !424
  %80 = getelementptr i16, i16* %72, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %81, align 2, !alias.scope !427, !noalias !424
  %82 = or i64 %70, 16
  %83 = getelementptr i16, i16* %46, i64 %82
  %84 = getelementptr i16, i16* %19, i64 %82
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !424
  %87 = getelementptr i16, i16* %84, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !424
  %90 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %90, align 2, !alias.scope !427, !noalias !424
  %91 = getelementptr i16, i16* %83, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %92, align 2, !alias.scope !427, !noalias !424
  %93 = or i64 %70, 32
  %94 = getelementptr i16, i16* %46, i64 %93
  %95 = getelementptr i16, i16* %19, i64 %93
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !424
  %98 = getelementptr i16, i16* %95, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !424
  %101 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %101, align 2, !alias.scope !427, !noalias !424
  %102 = getelementptr i16, i16* %94, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %103, align 2, !alias.scope !427, !noalias !424
  %104 = or i64 %70, 48
  %105 = getelementptr i16, i16* %46, i64 %104
  %106 = getelementptr i16, i16* %19, i64 %104
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !424
  %109 = getelementptr i16, i16* %106, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !424
  %112 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !427, !noalias !424
  %113 = getelementptr i16, i16* %105, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !427, !noalias !424
  %115 = add i64 %70, 64
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !429

118:                                              ; preds = %69, %57
  %119 = phi i64 [ 0, %57 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i16, i16* %46, i64 %122
  %125 = getelementptr i16, i16* %19, i64 %122
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !424
  %128 = getelementptr i16, i16* %125, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !424
  %131 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %131, align 2, !alias.scope !427, !noalias !424
  %132 = getelementptr i16, i16* %124, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %133, align 2, !alias.scope !427, !noalias !424
  %134 = add i64 %122, 16
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !430

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %48, %58
  br i1 %138, label %192, label %139

139:                                              ; preds = %137, %50, %45
  %140 = phi i16* [ %46, %50 ], [ %46, %45 ], [ %59, %137 ]
  %141 = phi i64 [ %47, %50 ], [ %47, %45 ], [ %60, %137 ]
  %142 = phi i16* [ %19, %50 ], [ %19, %45 ], [ %61, %137 ]
  %143 = add i64 %141, -1
  %144 = and i64 %141, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %139, %146
  %147 = phi i16* [ %153, %146 ], [ %140, %139 ]
  %148 = phi i64 [ %152, %146 ], [ %141, %139 ]
  %149 = phi i16* [ %154, %146 ], [ %142, %139 ]
  %150 = phi i64 [ %155, %146 ], [ %144, %139 ]
  %151 = load i16, i16* %149, align 2
  store i16 %151, i16* %147, align 2
  %152 = add i64 %148, -1
  %153 = getelementptr inbounds i16, i16* %147, i64 1
  %154 = getelementptr inbounds i16, i16* %149, i64 1
  %155 = add i64 %150, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %146, !llvm.loop !431

157:                                              ; preds = %146, %139
  %158 = phi i16* [ %140, %139 ], [ %153, %146 ]
  %159 = phi i64 [ %141, %139 ], [ %152, %146 ]
  %160 = phi i16* [ %142, %139 ], [ %154, %146 ]
  %161 = icmp ult i64 %143, 7
  br i1 %161, label %192, label %162

162:                                              ; preds = %157, %162
  %163 = phi i16* [ %189, %162 ], [ %158, %157 ]
  %164 = phi i64 [ %188, %162 ], [ %159, %157 ]
  %165 = phi i16* [ %190, %162 ], [ %160, %157 ]
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %163, align 2
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = getelementptr inbounds i16, i16* %165, i64 1
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %163, i64 2
  %171 = getelementptr inbounds i16, i16* %165, i64 2
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %163, i64 3
  %174 = getelementptr inbounds i16, i16* %165, i64 3
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %163, i64 4
  %177 = getelementptr inbounds i16, i16* %165, i64 4
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %163, i64 5
  %180 = getelementptr inbounds i16, i16* %165, i64 5
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %163, i64 6
  %183 = getelementptr inbounds i16, i16* %165, i64 6
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %163, i64 7
  %186 = getelementptr inbounds i16, i16* %165, i64 7
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = add i64 %164, -8
  %189 = getelementptr inbounds i16, i16* %163, i64 8
  %190 = getelementptr inbounds i16, i16* %165, i64 8
  %191 = icmp eq i64 %188, 0
  br i1 %191, label %192, label %162, !llvm.loop !432

192:                                              ; preds = %157, %162, %137, %14
  %193 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 1
  %194 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %195 = load i64, i64* %194, align 8
  store i64 %195, i64* %193, align 8
  %196 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %196, i64 0, i32 1, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %203, label %200

200:                                              ; preds = %192
  %201 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  %202 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %201, i8* align 8 %202, i64 24, i1 false) #15
  br label %378

203:                                              ; preds = %192
  %204 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load i16*, i16** %204, align 8
  %206 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %207 = load i64, i64* %206, align 8
  %208 = icmp ult i64 %207, 11
  br i1 %208, label %209, label %214

209:                                              ; preds = %203
  %210 = bitcast %"class.v8_inspector::String16"* %8 to i16*
  %211 = trunc i64 %207 to i8
  %212 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %212, i64 0, i32 1, i32 1
  store i8 %211, i8* %213, align 1
  br label %231

214:                                              ; preds = %203
  %215 = icmp ugt i64 %207, 9223372036854775791
  br i1 %215, label %216, label %218

216:                                              ; preds = %214
  %217 = bitcast %"class.v8_inspector::String16"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %217) #14
  unreachable

218:                                              ; preds = %214
  %219 = add nuw nsw i64 %207, 8
  %220 = and i64 %219, -8
  %221 = icmp slt i64 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %218
  call void @abort() #14
  unreachable

223:                                              ; preds = %218
  %224 = shl i64 %220, 1
  %225 = call i8* @_Znwm(i64 %224) #16
  %226 = bitcast i8* %225 to i16*
  %227 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  store i8* %225, i8** %227, align 8
  %228 = or i64 %220, -9223372036854775808
  %229 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %228, i64* %229, align 8
  %230 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %207, i64* %230, align 8
  br label %231

231:                                              ; preds = %223, %209
  %232 = phi i16* [ %210, %209 ], [ %226, %223 ]
  %233 = add nuw nsw i64 %207, 1
  %234 = add i64 %207, 1
  %235 = icmp ult i64 %234, 16
  br i1 %235, label %325, label %236

236:                                              ; preds = %231
  %237 = add i64 %207, 1
  %238 = getelementptr i16, i16* %232, i64 %237
  %239 = getelementptr i16, i16* %205, i64 %237
  %240 = icmp ult i16* %232, %239
  %241 = icmp ult i16* %205, %238
  %242 = and i1 %240, %241
  br i1 %242, label %325, label %243

243:                                              ; preds = %236
  %244 = and i64 %234, -16
  %245 = getelementptr i16, i16* %232, i64 %244
  %246 = sub i64 %233, %244
  %247 = getelementptr i16, i16* %205, i64 %244
  %248 = add i64 %244, -16
  %249 = lshr exact i64 %248, 4
  %250 = add nuw nsw i64 %249, 1
  %251 = and i64 %250, 3
  %252 = icmp ult i64 %248, 48
  br i1 %252, label %304, label %253

253:                                              ; preds = %243
  %254 = sub nsw i64 %250, %251
  br label %255

255:                                              ; preds = %255, %253
  %256 = phi i64 [ 0, %253 ], [ %301, %255 ]
  %257 = phi i64 [ %254, %253 ], [ %302, %255 ]
  %258 = getelementptr i16, i16* %232, i64 %256
  %259 = getelementptr i16, i16* %205, i64 %256
  %260 = bitcast i16* %259 to <8 x i16>*
  %261 = load <8 x i16>, <8 x i16>* %260, align 2, !alias.scope !433
  %262 = getelementptr i16, i16* %259, i64 8
  %263 = bitcast i16* %262 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2, !alias.scope !433
  %265 = bitcast i16* %258 to <8 x i16>*
  store <8 x i16> %261, <8 x i16>* %265, align 2, !alias.scope !436, !noalias !433
  %266 = getelementptr i16, i16* %258, i64 8
  %267 = bitcast i16* %266 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %267, align 2, !alias.scope !436, !noalias !433
  %268 = or i64 %256, 16
  %269 = getelementptr i16, i16* %232, i64 %268
  %270 = getelementptr i16, i16* %205, i64 %268
  %271 = bitcast i16* %270 to <8 x i16>*
  %272 = load <8 x i16>, <8 x i16>* %271, align 2, !alias.scope !433
  %273 = getelementptr i16, i16* %270, i64 8
  %274 = bitcast i16* %273 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !433
  %276 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %272, <8 x i16>* %276, align 2, !alias.scope !436, !noalias !433
  %277 = getelementptr i16, i16* %269, i64 8
  %278 = bitcast i16* %277 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %278, align 2, !alias.scope !436, !noalias !433
  %279 = or i64 %256, 32
  %280 = getelementptr i16, i16* %232, i64 %279
  %281 = getelementptr i16, i16* %205, i64 %279
  %282 = bitcast i16* %281 to <8 x i16>*
  %283 = load <8 x i16>, <8 x i16>* %282, align 2, !alias.scope !433
  %284 = getelementptr i16, i16* %281, i64 8
  %285 = bitcast i16* %284 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !433
  %287 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %283, <8 x i16>* %287, align 2, !alias.scope !436, !noalias !433
  %288 = getelementptr i16, i16* %280, i64 8
  %289 = bitcast i16* %288 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %289, align 2, !alias.scope !436, !noalias !433
  %290 = or i64 %256, 48
  %291 = getelementptr i16, i16* %232, i64 %290
  %292 = getelementptr i16, i16* %205, i64 %290
  %293 = bitcast i16* %292 to <8 x i16>*
  %294 = load <8 x i16>, <8 x i16>* %293, align 2, !alias.scope !433
  %295 = getelementptr i16, i16* %292, i64 8
  %296 = bitcast i16* %295 to <8 x i16>*
  %297 = load <8 x i16>, <8 x i16>* %296, align 2, !alias.scope !433
  %298 = bitcast i16* %291 to <8 x i16>*
  store <8 x i16> %294, <8 x i16>* %298, align 2, !alias.scope !436, !noalias !433
  %299 = getelementptr i16, i16* %291, i64 8
  %300 = bitcast i16* %299 to <8 x i16>*
  store <8 x i16> %297, <8 x i16>* %300, align 2, !alias.scope !436, !noalias !433
  %301 = add i64 %256, 64
  %302 = add i64 %257, -4
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %304, label %255, !llvm.loop !438

304:                                              ; preds = %255, %243
  %305 = phi i64 [ 0, %243 ], [ %301, %255 ]
  %306 = icmp eq i64 %251, 0
  br i1 %306, label %323, label %307

307:                                              ; preds = %304, %307
  %308 = phi i64 [ %320, %307 ], [ %305, %304 ]
  %309 = phi i64 [ %321, %307 ], [ %251, %304 ]
  %310 = getelementptr i16, i16* %232, i64 %308
  %311 = getelementptr i16, i16* %205, i64 %308
  %312 = bitcast i16* %311 to <8 x i16>*
  %313 = load <8 x i16>, <8 x i16>* %312, align 2, !alias.scope !433
  %314 = getelementptr i16, i16* %311, i64 8
  %315 = bitcast i16* %314 to <8 x i16>*
  %316 = load <8 x i16>, <8 x i16>* %315, align 2, !alias.scope !433
  %317 = bitcast i16* %310 to <8 x i16>*
  store <8 x i16> %313, <8 x i16>* %317, align 2, !alias.scope !436, !noalias !433
  %318 = getelementptr i16, i16* %310, i64 8
  %319 = bitcast i16* %318 to <8 x i16>*
  store <8 x i16> %316, <8 x i16>* %319, align 2, !alias.scope !436, !noalias !433
  %320 = add i64 %308, 16
  %321 = add i64 %309, -1
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %323, label %307, !llvm.loop !439

323:                                              ; preds = %307, %304
  %324 = icmp eq i64 %234, %244
  br i1 %324, label %378, label %325

325:                                              ; preds = %323, %236, %231
  %326 = phi i16* [ %232, %236 ], [ %232, %231 ], [ %245, %323 ]
  %327 = phi i64 [ %233, %236 ], [ %233, %231 ], [ %246, %323 ]
  %328 = phi i16* [ %205, %236 ], [ %205, %231 ], [ %247, %323 ]
  %329 = add i64 %327, -1
  %330 = and i64 %327, 7
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %343, label %332

332:                                              ; preds = %325, %332
  %333 = phi i16* [ %339, %332 ], [ %326, %325 ]
  %334 = phi i64 [ %338, %332 ], [ %327, %325 ]
  %335 = phi i16* [ %340, %332 ], [ %328, %325 ]
  %336 = phi i64 [ %341, %332 ], [ %330, %325 ]
  %337 = load i16, i16* %335, align 2
  store i16 %337, i16* %333, align 2
  %338 = add i64 %334, -1
  %339 = getelementptr inbounds i16, i16* %333, i64 1
  %340 = getelementptr inbounds i16, i16* %335, i64 1
  %341 = add i64 %336, -1
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %343, label %332, !llvm.loop !440

343:                                              ; preds = %332, %325
  %344 = phi i16* [ %326, %325 ], [ %339, %332 ]
  %345 = phi i64 [ %327, %325 ], [ %338, %332 ]
  %346 = phi i16* [ %328, %325 ], [ %340, %332 ]
  %347 = icmp ult i64 %329, 7
  br i1 %347, label %378, label %348

348:                                              ; preds = %343, %348
  %349 = phi i16* [ %375, %348 ], [ %344, %343 ]
  %350 = phi i64 [ %374, %348 ], [ %345, %343 ]
  %351 = phi i16* [ %376, %348 ], [ %346, %343 ]
  %352 = load i16, i16* %351, align 2
  store i16 %352, i16* %349, align 2
  %353 = getelementptr inbounds i16, i16* %349, i64 1
  %354 = getelementptr inbounds i16, i16* %351, i64 1
  %355 = load i16, i16* %354, align 2
  store i16 %355, i16* %353, align 2
  %356 = getelementptr inbounds i16, i16* %349, i64 2
  %357 = getelementptr inbounds i16, i16* %351, i64 2
  %358 = load i16, i16* %357, align 2
  store i16 %358, i16* %356, align 2
  %359 = getelementptr inbounds i16, i16* %349, i64 3
  %360 = getelementptr inbounds i16, i16* %351, i64 3
  %361 = load i16, i16* %360, align 2
  store i16 %361, i16* %359, align 2
  %362 = getelementptr inbounds i16, i16* %349, i64 4
  %363 = getelementptr inbounds i16, i16* %351, i64 4
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %362, align 2
  %365 = getelementptr inbounds i16, i16* %349, i64 5
  %366 = getelementptr inbounds i16, i16* %351, i64 5
  %367 = load i16, i16* %366, align 2
  store i16 %367, i16* %365, align 2
  %368 = getelementptr inbounds i16, i16* %349, i64 6
  %369 = getelementptr inbounds i16, i16* %351, i64 6
  %370 = load i16, i16* %369, align 2
  store i16 %370, i16* %368, align 2
  %371 = getelementptr inbounds i16, i16* %349, i64 7
  %372 = getelementptr inbounds i16, i16* %351, i64 7
  %373 = load i16, i16* %372, align 2
  store i16 %373, i16* %371, align 2
  %374 = add i64 %350, -8
  %375 = getelementptr inbounds i16, i16* %349, i64 8
  %376 = getelementptr inbounds i16, i16* %351, i64 8
  %377 = icmp eq i64 %374, 0
  br i1 %377, label %378, label %348, !llvm.loop !441

378:                                              ; preds = %343, %348, %323, %200
  %379 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 1
  %380 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %381 = load i64, i64* %380, align 8
  store i64 %381, i64* %379, align 8
  call void @_ZN12v8_inspector15String16Builder9appendAllINS_8String16EJcS2_cEEEvT_DpT0_(%"class.v8_inspector::String16Builder"* nonnull %6, %"class.v8_inspector::String16"* nonnull %7, i8 signext %2, %"class.v8_inspector::String16"* nonnull %8, i8 signext %4)
  %382 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %383 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %382, i64 0, i32 1, i32 1
  %384 = load i8, i8* %383, align 1
  %385 = icmp slt i8 %384, 0
  br i1 %385, label %386, label %389

386:                                              ; preds = %378
  %387 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %388 = load i8*, i8** %387, align 8
  call void @_ZdlPv(i8* %388) #16
  br label %389

389:                                              ; preds = %378, %386
  %390 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %391 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %390, i64 0, i32 1, i32 1
  %392 = load i8, i8* %391, align 1
  %393 = icmp slt i8 %392, 0
  br i1 %393, label %394, label %397

394:                                              ; preds = %389
  %395 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %396 = load i8*, i8** %395, align 8
  call void @_ZdlPv(i8* %396) #16
  br label %397

397:                                              ; preds = %389, %394
  call void @_ZN12v8_inspector15String16Builder8toStringEv(%"class.v8_inspector::String16"* sret %0, %"class.v8_inspector::String16Builder"* nonnull %6) #15
  %398 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %6, i64 0, i32 0, i32 0, i32 0
  %399 = load i16*, i16** %398, align 8
  %400 = icmp eq i16* %399, null
  br i1 %400, label %406, label %401

401:                                              ; preds = %397
  %402 = ptrtoint i16* %399 to i64
  %403 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %6, i64 0, i32 0, i32 0, i32 1
  %404 = bitcast i16** %403 to i64*
  store i64 %402, i64* %404, align 8
  %405 = bitcast i16* %399 to i8*
  call void @_ZdlPv(i8* %405) #16
  br label %406

406:                                              ; preds = %397, %401
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #15
  ret void
}

declare void @_ZN12v8_inspector8String1611fromIntegerEm(%"class.v8_inspector::String16"* sret, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector15String16Builder9appendAllINS_8String16EJcS2_cEEEvT_DpT0_(%"class.v8_inspector::String16Builder"*, %"class.v8_inspector::String16"*, i8 signext, %"class.v8_inspector::String16"*, i8 signext) local_unnamed_addr #2 comdat align 2 {
  %6 = alloca %"class.v8_inspector::String16", align 8
  tail call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %0, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  %7 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  %13 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %13, i64 24, i1 false) #15
  br label %189

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.v8_inspector::String16"* %6 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.v8_inspector::String16"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %28) #14
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @abort() #14
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = tail call i8* @_Znwm(i64 %35) #16
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = getelementptr i16, i16* %43, i64 %55
  %57 = sub i64 %44, %55
  %58 = getelementptr i16, i16* %16, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %43, i64 %67
  %70 = getelementptr i16, i16* %16, i64 %67
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !442
  %73 = getelementptr i16, i16* %70, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !442
  %76 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !445, !noalias !442
  %77 = getelementptr i16, i16* %69, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !445, !noalias !442
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %43, i64 %79
  %81 = getelementptr i16, i16* %16, i64 %79
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !442
  %84 = getelementptr i16, i16* %81, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !442
  %87 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !445, !noalias !442
  %88 = getelementptr i16, i16* %80, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !445, !noalias !442
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %43, i64 %90
  %92 = getelementptr i16, i16* %16, i64 %90
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !442
  %95 = getelementptr i16, i16* %92, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !442
  %98 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !445, !noalias !442
  %99 = getelementptr i16, i16* %91, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !445, !noalias !442
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %43, i64 %101
  %103 = getelementptr i16, i16* %16, i64 %101
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !442
  %106 = getelementptr i16, i16* %103, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !442
  %109 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !445, !noalias !442
  %110 = getelementptr i16, i16* %102, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !445, !noalias !442
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !447

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %43, i64 %119
  %122 = getelementptr i16, i16* %16, i64 %119
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !442
  %125 = getelementptr i16, i16* %122, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !442
  %128 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !445, !noalias !442
  %129 = getelementptr i16, i16* %121, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !445, !noalias !442
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !448

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %56, %134 ]
  %138 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %58, %134 ]
  %140 = add i64 %138, -1
  %141 = and i64 %138, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i16* [ %150, %143 ], [ %137, %136 ]
  %145 = phi i64 [ %149, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %151, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %146, align 2
  store i16 %148, i16* %144, align 2
  %149 = add i64 %145, -1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = getelementptr inbounds i16, i16* %146, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !449

154:                                              ; preds = %143, %136
  %155 = phi i16* [ %137, %136 ], [ %150, %143 ]
  %156 = phi i64 [ %138, %136 ], [ %149, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %151, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i16* [ %186, %159 ], [ %155, %154 ]
  %161 = phi i64 [ %185, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %187, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %160, align 2
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = getelementptr inbounds i16, i16* %162, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = getelementptr inbounds i16, i16* %162, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = getelementptr inbounds i16, i16* %162, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = getelementptr inbounds i16, i16* %162, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = getelementptr inbounds i16, i16* %162, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = getelementptr inbounds i16, i16* %162, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = getelementptr inbounds i16, i16* %162, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %161, -8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = getelementptr inbounds i16, i16* %162, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !450

189:                                              ; preds = %154, %159, %134, %11
  %190 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 1
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* %190, align 8
  call void @_ZN12v8_inspector15String16Builder9appendAllIcJNS_8String16EcEEEvT_DpT0_(%"class.v8_inspector::String16Builder"* %0, i8 signext %2, %"class.v8_inspector::String16"* nonnull %6, i8 signext %4)
  %193 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %193, i64 0, i32 1, i32 1
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %200

197:                                              ; preds = %189
  %198 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %199 = load i8*, i8** %198, align 8
  call void @_ZdlPv(i8* %199) #16
  br label %200

200:                                              ; preds = %189, %197
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector15String16Builder9appendAllIcJNS_8String16EcEEEvT_DpT0_(%"class.v8_inspector::String16Builder"*, i8 signext, %"class.v8_inspector::String16"*, i8 signext) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.v8_inspector::String16", align 8
  tail call void @_ZN12v8_inspector15String16Builder6appendEc(%"class.v8_inspector::String16Builder"* %0, i8 signext %1) #15
  %6 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  %12 = bitcast %"class.v8_inspector::String16"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %12, i64 24, i1 false) #15
  br label %188

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, 11
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.v8_inspector::String16"* %5 to i16*
  %21 = trunc i64 %17 to i8
  %22 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %22, i64 0, i32 1, i32 1
  store i8 %21, i8* %23, align 1
  br label %41

24:                                               ; preds = %13
  %25 = icmp ugt i64 %17, 9223372036854775791
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.v8_inspector::String16"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %27) #14
  unreachable

28:                                               ; preds = %24
  %29 = add nuw nsw i64 %17, 8
  %30 = and i64 %29, -8
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  tail call void @abort() #14
  unreachable

33:                                               ; preds = %28
  %34 = shl i64 %30, 1
  %35 = tail call i8* @_Znwm(i64 %34) #16
  %36 = bitcast i8* %35 to i16*
  %37 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  store i8* %35, i8** %37, align 8
  %38 = or i64 %30, -9223372036854775808
  %39 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  br label %41

41:                                               ; preds = %33, %19
  %42 = phi i16* [ %20, %19 ], [ %36, %33 ]
  %43 = add nuw nsw i64 %17, 1
  %44 = add i64 %17, 1
  %45 = icmp ult i64 %44, 16
  br i1 %45, label %135, label %46

46:                                               ; preds = %41
  %47 = add i64 %17, 1
  %48 = getelementptr i16, i16* %42, i64 %47
  %49 = getelementptr i16, i16* %15, i64 %47
  %50 = icmp ult i16* %42, %49
  %51 = icmp ult i16* %15, %48
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %46
  %54 = and i64 %44, -16
  %55 = getelementptr i16, i16* %42, i64 %54
  %56 = sub i64 %43, %54
  %57 = getelementptr i16, i16* %15, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %42, i64 %66
  %69 = getelementptr i16, i16* %15, i64 %66
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !451
  %72 = getelementptr i16, i16* %69, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !451
  %75 = bitcast i16* %68 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !454, !noalias !451
  %76 = getelementptr i16, i16* %68, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !454, !noalias !451
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %42, i64 %78
  %80 = getelementptr i16, i16* %15, i64 %78
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !451
  %83 = getelementptr i16, i16* %80, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !451
  %86 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !454, !noalias !451
  %87 = getelementptr i16, i16* %79, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !454, !noalias !451
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %42, i64 %89
  %91 = getelementptr i16, i16* %15, i64 %89
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !451
  %94 = getelementptr i16, i16* %91, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !451
  %97 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !454, !noalias !451
  %98 = getelementptr i16, i16* %90, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !454, !noalias !451
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %42, i64 %100
  %102 = getelementptr i16, i16* %15, i64 %100
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !451
  %105 = getelementptr i16, i16* %102, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !451
  %108 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !454, !noalias !451
  %109 = getelementptr i16, i16* %101, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !454, !noalias !451
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !456

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %42, i64 %118
  %121 = getelementptr i16, i16* %15, i64 %118
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !451
  %124 = getelementptr i16, i16* %121, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !451
  %127 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !454, !noalias !451
  %128 = getelementptr i16, i16* %120, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !454, !noalias !451
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !457

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %44, %54
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %46, %41
  %136 = phi i16* [ %42, %46 ], [ %42, %41 ], [ %55, %133 ]
  %137 = phi i64 [ %43, %46 ], [ %43, %41 ], [ %56, %133 ]
  %138 = phi i16* [ %15, %46 ], [ %15, %41 ], [ %57, %133 ]
  %139 = add i64 %137, -1
  %140 = and i64 %137, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i16* [ %149, %142 ], [ %136, %135 ]
  %144 = phi i64 [ %148, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %150, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %143, align 2
  %148 = add i64 %144, -1
  %149 = getelementptr inbounds i16, i16* %143, i64 1
  %150 = getelementptr inbounds i16, i16* %145, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !458

153:                                              ; preds = %142, %135
  %154 = phi i16* [ %136, %135 ], [ %149, %142 ]
  %155 = phi i64 [ %137, %135 ], [ %148, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %150, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i16* [ %185, %158 ], [ %154, %153 ]
  %160 = phi i64 [ %184, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %186, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %159, align 2
  %163 = getelementptr inbounds i16, i16* %159, i64 1
  %164 = getelementptr inbounds i16, i16* %161, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %159, i64 2
  %167 = getelementptr inbounds i16, i16* %161, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %159, i64 3
  %170 = getelementptr inbounds i16, i16* %161, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %159, i64 4
  %173 = getelementptr inbounds i16, i16* %161, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %159, i64 5
  %176 = getelementptr inbounds i16, i16* %161, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %159, i64 6
  %179 = getelementptr inbounds i16, i16* %161, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %159, i64 7
  %182 = getelementptr inbounds i16, i16* %161, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %160, -8
  %185 = getelementptr inbounds i16, i16* %159, i64 8
  %186 = getelementptr inbounds i16, i16* %161, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !459

188:                                              ; preds = %153, %158, %133, %10
  %189 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 1
  %190 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 1
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %189, align 8
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %0, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %5) #15
  call void @_ZN12v8_inspector15String16Builder6appendEc(%"class.v8_inspector::String16Builder"* %0, i8 signext %3) #15
  %192 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %192, i64 0, i32 1, i32 1
  %194 = load i8, i8* %193, align 1
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %196, label %199

196:                                              ; preds = %188
  %197 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %198 = load i8*, i8** %197, align 8
  call void @_ZdlPv(i8* %198) #16
  br label %199

199:                                              ; preds = %188, %196
  ret void
}

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #4

declare %"class.v8::String"* @_ZNK2v85debug15WasmValueObject4typeEv(%"class.v8::debug::WasmValueObject"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8String166concatIJcS0_cEEES0_DpT_(%"class.v8_inspector::String16"* noalias sret, i8 signext, %"class.v8_inspector::String16"*, i8 signext) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.v8_inspector::String16Builder", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = bitcast %"class.v8_inspector::String16Builder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  call void @_ZN12v8_inspector15String16BuilderC1Ev(%"class.v8_inspector::String16Builder"* nonnull %5) #15
  %8 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %4
  %13 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  %14 = bitcast %"class.v8_inspector::String16"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %14, i64 24, i1 false) #15
  br label %190

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %19, 11
  br i1 %20, label %21, label %26

21:                                               ; preds = %15
  %22 = bitcast %"class.v8_inspector::String16"* %6 to i16*
  %23 = trunc i64 %19 to i8
  %24 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %24, i64 0, i32 1, i32 1
  store i8 %23, i8* %25, align 1
  br label %43

26:                                               ; preds = %15
  %27 = icmp ugt i64 %19, 9223372036854775791
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.v8_inspector::String16"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #14
  unreachable

30:                                               ; preds = %26
  %31 = add nuw nsw i64 %19, 8
  %32 = and i64 %31, -8
  %33 = icmp slt i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  call void @abort() #14
  unreachable

35:                                               ; preds = %30
  %36 = shl i64 %32, 1
  %37 = call i8* @_Znwm(i64 %36) #16
  %38 = bitcast i8* %37 to i16*
  %39 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  store i8* %37, i8** %39, align 8
  %40 = or i64 %32, -9223372036854775808
  %41 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %42, align 8
  br label %43

43:                                               ; preds = %35, %21
  %44 = phi i16* [ %22, %21 ], [ %38, %35 ]
  %45 = add nuw nsw i64 %19, 1
  %46 = add i64 %19, 1
  %47 = icmp ult i64 %46, 16
  br i1 %47, label %137, label %48

48:                                               ; preds = %43
  %49 = add i64 %19, 1
  %50 = getelementptr i16, i16* %44, i64 %49
  %51 = getelementptr i16, i16* %17, i64 %49
  %52 = icmp ult i16* %44, %51
  %53 = icmp ult i16* %17, %50
  %54 = and i1 %52, %53
  br i1 %54, label %137, label %55

55:                                               ; preds = %48
  %56 = and i64 %46, -16
  %57 = getelementptr i16, i16* %44, i64 %56
  %58 = sub i64 %45, %56
  %59 = getelementptr i16, i16* %17, i64 %56
  %60 = add i64 %56, -16
  %61 = lshr exact i64 %60, 4
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 3
  %64 = icmp ult i64 %60, 48
  br i1 %64, label %116, label %65

65:                                               ; preds = %55
  %66 = sub nsw i64 %62, %63
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i64 [ 0, %65 ], [ %113, %67 ]
  %69 = phi i64 [ %66, %65 ], [ %114, %67 ]
  %70 = getelementptr i16, i16* %44, i64 %68
  %71 = getelementptr i16, i16* %17, i64 %68
  %72 = bitcast i16* %71 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !460
  %74 = getelementptr i16, i16* %71, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !460
  %77 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %77, align 2, !alias.scope !463, !noalias !460
  %78 = getelementptr i16, i16* %70, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %79, align 2, !alias.scope !463, !noalias !460
  %80 = or i64 %68, 16
  %81 = getelementptr i16, i16* %44, i64 %80
  %82 = getelementptr i16, i16* %17, i64 %80
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !460
  %85 = getelementptr i16, i16* %82, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !460
  %88 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %88, align 2, !alias.scope !463, !noalias !460
  %89 = getelementptr i16, i16* %81, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %90, align 2, !alias.scope !463, !noalias !460
  %91 = or i64 %68, 32
  %92 = getelementptr i16, i16* %44, i64 %91
  %93 = getelementptr i16, i16* %17, i64 %91
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !460
  %96 = getelementptr i16, i16* %93, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !460
  %99 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %99, align 2, !alias.scope !463, !noalias !460
  %100 = getelementptr i16, i16* %92, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %101, align 2, !alias.scope !463, !noalias !460
  %102 = or i64 %68, 48
  %103 = getelementptr i16, i16* %44, i64 %102
  %104 = getelementptr i16, i16* %17, i64 %102
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !460
  %107 = getelementptr i16, i16* %104, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !460
  %110 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %110, align 2, !alias.scope !463, !noalias !460
  %111 = getelementptr i16, i16* %103, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !463, !noalias !460
  %113 = add i64 %68, 64
  %114 = add i64 %69, -4
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %67, !llvm.loop !465

116:                                              ; preds = %67, %55
  %117 = phi i64 [ 0, %55 ], [ %113, %67 ]
  %118 = icmp eq i64 %63, 0
  br i1 %118, label %135, label %119

119:                                              ; preds = %116, %119
  %120 = phi i64 [ %132, %119 ], [ %117, %116 ]
  %121 = phi i64 [ %133, %119 ], [ %63, %116 ]
  %122 = getelementptr i16, i16* %44, i64 %120
  %123 = getelementptr i16, i16* %17, i64 %120
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !460
  %126 = getelementptr i16, i16* %123, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !460
  %129 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %129, align 2, !alias.scope !463, !noalias !460
  %130 = getelementptr i16, i16* %122, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %131, align 2, !alias.scope !463, !noalias !460
  %132 = add i64 %120, 16
  %133 = add i64 %121, -1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %119, !llvm.loop !466

135:                                              ; preds = %119, %116
  %136 = icmp eq i64 %46, %56
  br i1 %136, label %190, label %137

137:                                              ; preds = %135, %48, %43
  %138 = phi i16* [ %44, %48 ], [ %44, %43 ], [ %57, %135 ]
  %139 = phi i64 [ %45, %48 ], [ %45, %43 ], [ %58, %135 ]
  %140 = phi i16* [ %17, %48 ], [ %17, %43 ], [ %59, %135 ]
  %141 = add i64 %139, -1
  %142 = and i64 %139, 7
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %155, label %144

144:                                              ; preds = %137, %144
  %145 = phi i16* [ %151, %144 ], [ %138, %137 ]
  %146 = phi i64 [ %150, %144 ], [ %139, %137 ]
  %147 = phi i16* [ %152, %144 ], [ %140, %137 ]
  %148 = phi i64 [ %153, %144 ], [ %142, %137 ]
  %149 = load i16, i16* %147, align 2
  store i16 %149, i16* %145, align 2
  %150 = add i64 %146, -1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = getelementptr inbounds i16, i16* %147, i64 1
  %153 = add i64 %148, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %144, !llvm.loop !467

155:                                              ; preds = %144, %137
  %156 = phi i16* [ %138, %137 ], [ %151, %144 ]
  %157 = phi i64 [ %139, %137 ], [ %150, %144 ]
  %158 = phi i16* [ %140, %137 ], [ %152, %144 ]
  %159 = icmp ult i64 %141, 7
  br i1 %159, label %190, label %160

160:                                              ; preds = %155, %160
  %161 = phi i16* [ %187, %160 ], [ %156, %155 ]
  %162 = phi i64 [ %186, %160 ], [ %157, %155 ]
  %163 = phi i16* [ %188, %160 ], [ %158, %155 ]
  %164 = load i16, i16* %163, align 2
  store i16 %164, i16* %161, align 2
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = getelementptr inbounds i16, i16* %163, i64 1
  %167 = load i16, i16* %166, align 2
  store i16 %167, i16* %165, align 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = getelementptr inbounds i16, i16* %163, i64 2
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = getelementptr inbounds i16, i16* %163, i64 3
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = getelementptr inbounds i16, i16* %163, i64 4
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = getelementptr inbounds i16, i16* %163, i64 5
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = getelementptr inbounds i16, i16* %163, i64 6
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = getelementptr inbounds i16, i16* %163, i64 7
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = add i64 %162, -8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = getelementptr inbounds i16, i16* %163, i64 8
  %189 = icmp eq i64 %186, 0
  br i1 %189, label %190, label %160, !llvm.loop !468

190:                                              ; preds = %155, %160, %135, %12
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 1
  %192 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 1
  %193 = load i64, i64* %192, align 8
  store i64 %193, i64* %191, align 8
  call void @_ZN12v8_inspector15String16Builder9appendAllIcJNS_8String16EcEEEvT_DpT0_(%"class.v8_inspector::String16Builder"* nonnull %5, i8 signext %1, %"class.v8_inspector::String16"* nonnull %6, i8 signext %3)
  %194 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %194, i64 0, i32 1, i32 1
  %196 = load i8, i8* %195, align 1
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %198, label %201

198:                                              ; preds = %190
  %199 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %200 = load i8*, i8** %199, align 8
  call void @_ZdlPv(i8* %200) #16
  br label %201

201:                                              ; preds = %190, %198
  call void @_ZN12v8_inspector15String16Builder8toStringEv(%"class.v8_inspector::String16"* sret %0, %"class.v8_inspector::String16Builder"* nonnull %5) #15
  %202 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %5, i64 0, i32 0, i32 0, i32 0
  %203 = load i16*, i16** %202, align 8
  %204 = icmp eq i16* %203, null
  br i1 %204, label %210, label %205

205:                                              ; preds = %201
  %206 = ptrtoint i16* %203 to i64
  %207 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %5, i64 0, i32 0, i32 0, i32 1
  %208 = bitcast i16** %207 to i64*
  store i64 %206, i64* %208, align 8
  %209 = bitcast i16* %203 to i8*
  call void @_ZdlPv(i8* %209) #16
  br label %210

210:                                              ; preds = %201, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret void
}

declare zeroext i1 @_ZNK2v85Value17IsArgumentsObjectEv(%"class.v8::Value"*) local_unnamed_addr #4

declare i16 @_ZN2v86Object14HasOwnPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #4

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector15String16Builder9appendAllIPKcJNS_8String16EcEEEvT_DpT0_(%"class.v8_inspector::String16Builder"*, i8*, %"class.v8_inspector::String16"*, i8 signext) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %5, i8* %1) #15
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %0, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %5) #15
  %8 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %4
  %13 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #16
  br label %15

15:                                               ; preds = %4, %12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #15
  %16 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  %22 = bitcast %"class.v8_inspector::String16"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %22, i64 24, i1 false) #15
  br label %198

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, 11
  br i1 %28, label %29, label %34

29:                                               ; preds = %23
  %30 = bitcast %"class.v8_inspector::String16"* %6 to i16*
  %31 = trunc i64 %27 to i8
  %32 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %32, i64 0, i32 1, i32 1
  store i8 %31, i8* %33, align 1
  br label %51

34:                                               ; preds = %23
  %35 = icmp ugt i64 %27, 9223372036854775791
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = bitcast %"class.v8_inspector::String16"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %37) #14
  unreachable

38:                                               ; preds = %34
  %39 = add nuw nsw i64 %27, 8
  %40 = and i64 %39, -8
  %41 = icmp slt i64 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  call void @abort() #14
  unreachable

43:                                               ; preds = %38
  %44 = shl i64 %40, 1
  %45 = call i8* @_Znwm(i64 %44) #16
  %46 = bitcast i8* %45 to i16*
  %47 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  store i8* %45, i8** %47, align 8
  %48 = or i64 %40, -9223372036854775808
  %49 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %27, i64* %50, align 8
  br label %51

51:                                               ; preds = %43, %29
  %52 = phi i16* [ %30, %29 ], [ %46, %43 ]
  %53 = add nuw nsw i64 %27, 1
  %54 = add i64 %27, 1
  %55 = icmp ult i64 %54, 16
  br i1 %55, label %145, label %56

56:                                               ; preds = %51
  %57 = add i64 %27, 1
  %58 = getelementptr i16, i16* %52, i64 %57
  %59 = getelementptr i16, i16* %25, i64 %57
  %60 = icmp ult i16* %52, %59
  %61 = icmp ult i16* %25, %58
  %62 = and i1 %60, %61
  br i1 %62, label %145, label %63

63:                                               ; preds = %56
  %64 = and i64 %54, -16
  %65 = getelementptr i16, i16* %52, i64 %64
  %66 = sub i64 %53, %64
  %67 = getelementptr i16, i16* %25, i64 %64
  %68 = add i64 %64, -16
  %69 = lshr exact i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp ult i64 %68, 48
  br i1 %72, label %124, label %73

73:                                               ; preds = %63
  %74 = sub nsw i64 %70, %71
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i64 [ 0, %73 ], [ %121, %75 ]
  %77 = phi i64 [ %74, %73 ], [ %122, %75 ]
  %78 = getelementptr i16, i16* %52, i64 %76
  %79 = getelementptr i16, i16* %25, i64 %76
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !469
  %82 = getelementptr i16, i16* %79, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !469
  %85 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %85, align 2, !alias.scope !472, !noalias !469
  %86 = getelementptr i16, i16* %78, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %87, align 2, !alias.scope !472, !noalias !469
  %88 = or i64 %76, 16
  %89 = getelementptr i16, i16* %52, i64 %88
  %90 = getelementptr i16, i16* %25, i64 %88
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !469
  %93 = getelementptr i16, i16* %90, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !469
  %96 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !472, !noalias !469
  %97 = getelementptr i16, i16* %89, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !472, !noalias !469
  %99 = or i64 %76, 32
  %100 = getelementptr i16, i16* %52, i64 %99
  %101 = getelementptr i16, i16* %25, i64 %99
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !469
  %104 = getelementptr i16, i16* %101, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !469
  %107 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !472, !noalias !469
  %108 = getelementptr i16, i16* %100, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !472, !noalias !469
  %110 = or i64 %76, 48
  %111 = getelementptr i16, i16* %52, i64 %110
  %112 = getelementptr i16, i16* %25, i64 %110
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !469
  %115 = getelementptr i16, i16* %112, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !469
  %118 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %118, align 2, !alias.scope !472, !noalias !469
  %119 = getelementptr i16, i16* %111, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %120, align 2, !alias.scope !472, !noalias !469
  %121 = add i64 %76, 64
  %122 = add i64 %77, -4
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %75, !llvm.loop !474

124:                                              ; preds = %75, %63
  %125 = phi i64 [ 0, %63 ], [ %121, %75 ]
  %126 = icmp eq i64 %71, 0
  br i1 %126, label %143, label %127

127:                                              ; preds = %124, %127
  %128 = phi i64 [ %140, %127 ], [ %125, %124 ]
  %129 = phi i64 [ %141, %127 ], [ %71, %124 ]
  %130 = getelementptr i16, i16* %52, i64 %128
  %131 = getelementptr i16, i16* %25, i64 %128
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !469
  %134 = getelementptr i16, i16* %131, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !469
  %137 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %137, align 2, !alias.scope !472, !noalias !469
  %138 = getelementptr i16, i16* %130, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %139, align 2, !alias.scope !472, !noalias !469
  %140 = add i64 %128, 16
  %141 = add i64 %129, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %127, !llvm.loop !475

143:                                              ; preds = %127, %124
  %144 = icmp eq i64 %54, %64
  br i1 %144, label %198, label %145

145:                                              ; preds = %143, %56, %51
  %146 = phi i16* [ %52, %56 ], [ %52, %51 ], [ %65, %143 ]
  %147 = phi i64 [ %53, %56 ], [ %53, %51 ], [ %66, %143 ]
  %148 = phi i16* [ %25, %56 ], [ %25, %51 ], [ %67, %143 ]
  %149 = add i64 %147, -1
  %150 = and i64 %147, 7
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %163, label %152

152:                                              ; preds = %145, %152
  %153 = phi i16* [ %159, %152 ], [ %146, %145 ]
  %154 = phi i64 [ %158, %152 ], [ %147, %145 ]
  %155 = phi i16* [ %160, %152 ], [ %148, %145 ]
  %156 = phi i64 [ %161, %152 ], [ %150, %145 ]
  %157 = load i16, i16* %155, align 2
  store i16 %157, i16* %153, align 2
  %158 = add i64 %154, -1
  %159 = getelementptr inbounds i16, i16* %153, i64 1
  %160 = getelementptr inbounds i16, i16* %155, i64 1
  %161 = add i64 %156, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %152, !llvm.loop !476

163:                                              ; preds = %152, %145
  %164 = phi i16* [ %146, %145 ], [ %159, %152 ]
  %165 = phi i64 [ %147, %145 ], [ %158, %152 ]
  %166 = phi i16* [ %148, %145 ], [ %160, %152 ]
  %167 = icmp ult i64 %149, 7
  br i1 %167, label %198, label %168

168:                                              ; preds = %163, %168
  %169 = phi i16* [ %195, %168 ], [ %164, %163 ]
  %170 = phi i64 [ %194, %168 ], [ %165, %163 ]
  %171 = phi i16* [ %196, %168 ], [ %166, %163 ]
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %169, align 2
  %173 = getelementptr inbounds i16, i16* %169, i64 1
  %174 = getelementptr inbounds i16, i16* %171, i64 1
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %169, i64 2
  %177 = getelementptr inbounds i16, i16* %171, i64 2
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %169, i64 3
  %180 = getelementptr inbounds i16, i16* %171, i64 3
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %169, i64 4
  %183 = getelementptr inbounds i16, i16* %171, i64 4
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %169, i64 5
  %186 = getelementptr inbounds i16, i16* %171, i64 5
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %169, i64 6
  %189 = getelementptr inbounds i16, i16* %171, i64 6
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %169, i64 7
  %192 = getelementptr inbounds i16, i16* %171, i64 7
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = add i64 %170, -8
  %195 = getelementptr inbounds i16, i16* %169, i64 8
  %196 = getelementptr inbounds i16, i16* %171, i64 8
  %197 = icmp eq i64 %194, 0
  br i1 %197, label %198, label %168, !llvm.loop !477

198:                                              ; preds = %163, %168, %143, %20
  %199 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 1
  %200 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 1
  %201 = load i64, i64* %200, align 8
  store i64 %201, i64* %199, align 8
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %0, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %6) #15
  call void @_ZN12v8_inspector15String16Builder6appendEc(%"class.v8_inspector::String16Builder"* %0, i8 signext %3) #15
  %202 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %203 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %202, i64 0, i32 1, i32 1
  %204 = load i8, i8* %203, align 1
  %205 = icmp slt i8 %204, 0
  br i1 %205, label %206, label %209

206:                                              ; preds = %198
  %207 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %208 = load i8*, i8** %207, align 8
  call void @_ZdlPv(i8* %208) #16
  br label %209

209:                                              ; preds = %198, %206
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN12v8_inspector22InternalPropertyMirrorENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector"*, %"struct.v8_inspector::InternalPropertyMirror"* dereferenceable(40)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.v8_inspector::InternalPropertyMirror"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 461168601842738790
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.v8_inspector::InternalPropertyMirror"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 40
  %20 = icmp ult i64 %19, 230584300921369395
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 461168601842738790, %14 ]
  %28 = mul i64 %27, 40
  %29 = tail call i8* @_Znwm(i64 %28) #16
  %30 = bitcast i8* %29 to %"struct.v8_inspector::InternalPropertyMirror"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.v8_inspector::InternalPropertyMirror"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %33, i64 %32
  %36 = ptrtoint %"struct.v8_inspector::InternalPropertyMirror"* %35 to i64
  %37 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %34 to i8*
  %38 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #15
  %39 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %33, i64 %9, i32 0, i32 1
  %40 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %1, i64 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %33, i64 %9, i32 1
  %43 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %1, i64 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr.10"* %43 to i64*
  %46 = load i64, i64* %45, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %44, align 8
  %47 = bitcast %"class.std::__1::unique_ptr.10"* %42 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %34, i64 1
  %49 = ptrtoint %"struct.v8_inspector::InternalPropertyMirror"* %48 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %51 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %50, align 8
  %52 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %3, align 8
  %53 = icmp eq %"struct.v8_inspector::InternalPropertyMirror"* %52, %51
  br i1 %53, label %54, label %56

54:                                               ; preds = %31
  %55 = ptrtoint %"struct.v8_inspector::InternalPropertyMirror"* %51 to i64
  br label %76

56:                                               ; preds = %31, %56
  %57 = phi %"struct.v8_inspector::InternalPropertyMirror"* [ %59, %56 ], [ %34, %31 ]
  %58 = phi %"struct.v8_inspector::InternalPropertyMirror"* [ %60, %56 ], [ %52, %31 ]
  %59 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %57, i64 -1
  %60 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %58, i64 -1
  %61 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %59 to i8*
  %62 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #15
  %63 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %57, i64 -1, i32 0, i32 1
  %64 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %58, i64 -1, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %63, align 8
  %66 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %57, i64 -1, i32 1
  %67 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %58, i64 -1, i32 1
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.std::__1::unique_ptr.10"* %67 to i64*
  %70 = load i64, i64* %69, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %68, align 8
  %71 = bitcast %"class.std::__1::unique_ptr.10"* %66 to i64*
  store i64 %70, i64* %71, align 8
  %72 = icmp eq %"struct.v8_inspector::InternalPropertyMirror"* %60, %51
  br i1 %72, label %73, label %56

73:                                               ; preds = %56
  %74 = load i64, i64* %6, align 8
  %75 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %3, align 8
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi %"struct.v8_inspector::InternalPropertyMirror"* [ %51, %54 ], [ %75, %73 ]
  %78 = phi %"struct.v8_inspector::InternalPropertyMirror"* [ %34, %54 ], [ %59, %73 ]
  %79 = phi i64 [ %55, %54 ], [ %74, %73 ]
  %80 = ptrtoint %"struct.v8_inspector::InternalPropertyMirror"* %78 to i64
  store i64 %80, i64* %6, align 8
  store i64 %49, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %81 = inttoptr i64 %79 to %"struct.v8_inspector::InternalPropertyMirror"*
  %82 = icmp eq %"struct.v8_inspector::InternalPropertyMirror"* %77, %81
  br i1 %82, label %104, label %83

83:                                               ; preds = %76, %102
  %84 = phi %"struct.v8_inspector::InternalPropertyMirror"* [ %85, %102 ], [ %77, %76 ]
  %85 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %84, i64 -1
  %86 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %84, i64 -1, i32 1, i32 0, i32 0, i32 0
  %87 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %86, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %86, align 8
  %88 = icmp eq %"class.v8_inspector::ValueMirror"* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %83
  %90 = bitcast %"class.v8_inspector::ValueMirror"* %87 to void (%"class.v8_inspector::ValueMirror"*)***
  %91 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %91, i64 1
  %93 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %92, align 8
  tail call void %93(%"class.v8_inspector::ValueMirror"* nonnull %87) #15
  br label %94

94:                                               ; preds = %89, %83
  %95 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %85 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %95, i64 0, i32 1, i32 1
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %94
  %100 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %85 to i8**
  %101 = load i8*, i8** %100, align 8
  tail call void @_ZdlPv(i8* %101) #16
  br label %102

102:                                              ; preds = %99, %94
  %103 = icmp eq %"struct.v8_inspector::InternalPropertyMirror"* %85, %81
  br i1 %103, label %104, label %83

104:                                              ; preds = %102, %76
  %105 = icmp eq i64 %79, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = inttoptr i64 %79 to i8*
  tail call void @_ZdlPv(i8* %107) #16
  br label %108

108:                                              ; preds = %104, %106
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN12v8_inspector21PrivatePropertyMirrorENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.339"*, %"struct.v8_inspector::PrivatePropertyMirror"* dereferenceable(56)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.339", %"class.std::__1::vector.339"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.v8_inspector::PrivatePropertyMirror"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.339"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 56
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 329406144173384850
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.339"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.339", %"class.std::__1::vector.339"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.v8_inspector::PrivatePropertyMirror"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 56
  %20 = icmp ult i64 %19, 164703072086692425
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 329406144173384850, %14 ]
  %28 = mul i64 %27, 56
  %29 = tail call i8* @_Znwm(i64 %28) #16
  %30 = bitcast i8* %29 to %"struct.v8_inspector::PrivatePropertyMirror"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.v8_inspector::PrivatePropertyMirror"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %33, i64 %32
  %36 = ptrtoint %"struct.v8_inspector::PrivatePropertyMirror"* %35 to i64
  %37 = bitcast %"struct.v8_inspector::PrivatePropertyMirror"* %34 to i8*
  %38 = bitcast %"struct.v8_inspector::PrivatePropertyMirror"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #15
  %39 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %33, i64 %9, i32 0, i32 1
  %40 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %1, i64 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %33, i64 %9, i32 1
  %43 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %1, i64 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr.10"* %43 to i64*
  %46 = load i64, i64* %45, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %44, align 8
  %47 = bitcast %"class.std::__1::unique_ptr.10"* %42 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %33, i64 %9, i32 2
  %49 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %1, i64 0, i32 2
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.10"* %49 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.10"* %48 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %33, i64 %9, i32 3
  %55 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %1, i64 0, i32 3
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.10"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %56, align 8
  %59 = bitcast %"class.std::__1::unique_ptr.10"* %54 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %34, i64 1
  %61 = ptrtoint %"struct.v8_inspector::PrivatePropertyMirror"* %60 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.339", %"class.std::__1::vector.339"* %0, i64 0, i32 0, i32 0
  %63 = load %"struct.v8_inspector::PrivatePropertyMirror"*, %"struct.v8_inspector::PrivatePropertyMirror"** %62, align 8
  %64 = load %"struct.v8_inspector::PrivatePropertyMirror"*, %"struct.v8_inspector::PrivatePropertyMirror"** %3, align 8
  %65 = icmp eq %"struct.v8_inspector::PrivatePropertyMirror"* %64, %63
  br i1 %65, label %66, label %68

66:                                               ; preds = %31
  %67 = ptrtoint %"struct.v8_inspector::PrivatePropertyMirror"* %63 to i64
  br label %100

68:                                               ; preds = %31, %68
  %69 = phi %"struct.v8_inspector::PrivatePropertyMirror"* [ %71, %68 ], [ %34, %31 ]
  %70 = phi %"struct.v8_inspector::PrivatePropertyMirror"* [ %72, %68 ], [ %64, %31 ]
  %71 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %69, i64 -1
  %72 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %70, i64 -1
  %73 = bitcast %"struct.v8_inspector::PrivatePropertyMirror"* %71 to i8*
  %74 = bitcast %"struct.v8_inspector::PrivatePropertyMirror"* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #15
  %75 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %69, i64 -1, i32 0, i32 1
  %76 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %70, i64 -1, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %75, align 8
  %78 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %69, i64 -1, i32 1
  %79 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %70, i64 -1, i32 1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = bitcast %"class.std::__1::unique_ptr.10"* %79 to i64*
  %82 = load i64, i64* %81, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %80, align 8
  %83 = bitcast %"class.std::__1::unique_ptr.10"* %78 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %69, i64 -1, i32 2
  %85 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %70, i64 -1, i32 2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = bitcast %"class.std::__1::unique_ptr.10"* %85 to i64*
  %88 = load i64, i64* %87, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %86, align 8
  %89 = bitcast %"class.std::__1::unique_ptr.10"* %84 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %69, i64 -1, i32 3
  %91 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %70, i64 -1, i32 3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.std::__1::unique_ptr.10"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %92, align 8
  %95 = bitcast %"class.std::__1::unique_ptr.10"* %90 to i64*
  store i64 %94, i64* %95, align 8
  %96 = icmp eq %"struct.v8_inspector::PrivatePropertyMirror"* %72, %63
  br i1 %96, label %97, label %68

97:                                               ; preds = %68
  %98 = load i64, i64* %6, align 8
  %99 = load %"struct.v8_inspector::PrivatePropertyMirror"*, %"struct.v8_inspector::PrivatePropertyMirror"** %3, align 8
  br label %100

100:                                              ; preds = %66, %97
  %101 = phi %"struct.v8_inspector::PrivatePropertyMirror"* [ %63, %66 ], [ %99, %97 ]
  %102 = phi %"struct.v8_inspector::PrivatePropertyMirror"* [ %34, %66 ], [ %71, %97 ]
  %103 = phi i64 [ %67, %66 ], [ %98, %97 ]
  %104 = ptrtoint %"struct.v8_inspector::PrivatePropertyMirror"* %102 to i64
  store i64 %104, i64* %6, align 8
  store i64 %61, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %105 = inttoptr i64 %103 to %"struct.v8_inspector::PrivatePropertyMirror"*
  %106 = icmp eq %"struct.v8_inspector::PrivatePropertyMirror"* %101, %105
  br i1 %106, label %146, label %107

107:                                              ; preds = %100, %144
  %108 = phi %"struct.v8_inspector::PrivatePropertyMirror"* [ %109, %144 ], [ %101, %100 ]
  %109 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %108, i64 -1
  %110 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %108, i64 -1, i32 3, i32 0, i32 0, i32 0
  %111 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %110, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %110, align 8
  %112 = icmp eq %"class.v8_inspector::ValueMirror"* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %107
  %114 = bitcast %"class.v8_inspector::ValueMirror"* %111 to void (%"class.v8_inspector::ValueMirror"*)***
  %115 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %115, i64 1
  %117 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %116, align 8
  tail call void %117(%"class.v8_inspector::ValueMirror"* nonnull %111) #15
  br label %118

118:                                              ; preds = %113, %107
  %119 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %108, i64 -1, i32 2, i32 0, i32 0, i32 0
  %120 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %119, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %119, align 8
  %121 = icmp eq %"class.v8_inspector::ValueMirror"* %120, null
  br i1 %121, label %127, label %122

122:                                              ; preds = %118
  %123 = bitcast %"class.v8_inspector::ValueMirror"* %120 to void (%"class.v8_inspector::ValueMirror"*)***
  %124 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %124, i64 1
  %126 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %125, align 8
  tail call void %126(%"class.v8_inspector::ValueMirror"* nonnull %120) #15
  br label %127

127:                                              ; preds = %122, %118
  %128 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %108, i64 -1, i32 1, i32 0, i32 0, i32 0
  %129 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %128, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %128, align 8
  %130 = icmp eq %"class.v8_inspector::ValueMirror"* %129, null
  br i1 %130, label %136, label %131

131:                                              ; preds = %127
  %132 = bitcast %"class.v8_inspector::ValueMirror"* %129 to void (%"class.v8_inspector::ValueMirror"*)***
  %133 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %133, i64 1
  %135 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %134, align 8
  tail call void %135(%"class.v8_inspector::ValueMirror"* nonnull %129) #15
  br label %136

136:                                              ; preds = %131, %127
  %137 = bitcast %"struct.v8_inspector::PrivatePropertyMirror"* %109 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %137, i64 0, i32 1, i32 1
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %136
  %142 = bitcast %"struct.v8_inspector::PrivatePropertyMirror"* %109 to i8**
  %143 = load i8*, i8** %142, align 8
  tail call void @_ZdlPv(i8* %143) #16
  br label %144

144:                                              ; preds = %141, %136
  %145 = icmp eq %"struct.v8_inspector::PrivatePropertyMirror"* %109, %105
  br i1 %145, label %146, label %107

146:                                              ; preds = %144, %100
  %147 = icmp eq i64 %103, 0
  br i1 %147, label %150, label %148

148:                                              ; preds = %146
  %149 = inttoptr i64 %103 to i8*
  tail call void @_ZdlPv(i8* %149) #16
  br label %150

150:                                              ; preds = %146, %148
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector15String16Builder9appendAllINS_8String16EJcS2_EEEvT_DpT0_(%"class.v8_inspector::String16Builder"*, %"class.v8_inspector::String16"*, i8 signext, %"class.v8_inspector::String16"*) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.v8_inspector::String16", align 8
  tail call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %0, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  %6 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  %12 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %12, i64 24, i1 false) #15
  br label %188

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, 11
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.v8_inspector::String16"* %5 to i16*
  %21 = trunc i64 %17 to i8
  %22 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %22, i64 0, i32 1, i32 1
  store i8 %21, i8* %23, align 1
  br label %41

24:                                               ; preds = %13
  %25 = icmp ugt i64 %17, 9223372036854775791
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.v8_inspector::String16"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %27) #14
  unreachable

28:                                               ; preds = %24
  %29 = add nuw nsw i64 %17, 8
  %30 = and i64 %29, -8
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  tail call void @abort() #14
  unreachable

33:                                               ; preds = %28
  %34 = shl i64 %30, 1
  %35 = tail call i8* @_Znwm(i64 %34) #16
  %36 = bitcast i8* %35 to i16*
  %37 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  store i8* %35, i8** %37, align 8
  %38 = or i64 %30, -9223372036854775808
  %39 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  br label %41

41:                                               ; preds = %33, %19
  %42 = phi i16* [ %20, %19 ], [ %36, %33 ]
  %43 = add nuw nsw i64 %17, 1
  %44 = add i64 %17, 1
  %45 = icmp ult i64 %44, 16
  br i1 %45, label %135, label %46

46:                                               ; preds = %41
  %47 = add i64 %17, 1
  %48 = getelementptr i16, i16* %42, i64 %47
  %49 = getelementptr i16, i16* %15, i64 %47
  %50 = icmp ult i16* %42, %49
  %51 = icmp ult i16* %15, %48
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %46
  %54 = and i64 %44, -16
  %55 = getelementptr i16, i16* %42, i64 %54
  %56 = sub i64 %43, %54
  %57 = getelementptr i16, i16* %15, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %42, i64 %66
  %69 = getelementptr i16, i16* %15, i64 %66
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !478
  %72 = getelementptr i16, i16* %69, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !478
  %75 = bitcast i16* %68 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !481, !noalias !478
  %76 = getelementptr i16, i16* %68, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !481, !noalias !478
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %42, i64 %78
  %80 = getelementptr i16, i16* %15, i64 %78
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !478
  %83 = getelementptr i16, i16* %80, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !478
  %86 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !481, !noalias !478
  %87 = getelementptr i16, i16* %79, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !481, !noalias !478
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %42, i64 %89
  %91 = getelementptr i16, i16* %15, i64 %89
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !478
  %94 = getelementptr i16, i16* %91, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !478
  %97 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !481, !noalias !478
  %98 = getelementptr i16, i16* %90, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !481, !noalias !478
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %42, i64 %100
  %102 = getelementptr i16, i16* %15, i64 %100
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !478
  %105 = getelementptr i16, i16* %102, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !478
  %108 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !481, !noalias !478
  %109 = getelementptr i16, i16* %101, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !481, !noalias !478
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !483

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %42, i64 %118
  %121 = getelementptr i16, i16* %15, i64 %118
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !478
  %124 = getelementptr i16, i16* %121, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !478
  %127 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !481, !noalias !478
  %128 = getelementptr i16, i16* %120, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !481, !noalias !478
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !484

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %44, %54
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %46, %41
  %136 = phi i16* [ %42, %46 ], [ %42, %41 ], [ %55, %133 ]
  %137 = phi i64 [ %43, %46 ], [ %43, %41 ], [ %56, %133 ]
  %138 = phi i16* [ %15, %46 ], [ %15, %41 ], [ %57, %133 ]
  %139 = add i64 %137, -1
  %140 = and i64 %137, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i16* [ %149, %142 ], [ %136, %135 ]
  %144 = phi i64 [ %148, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %150, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %143, align 2
  %148 = add i64 %144, -1
  %149 = getelementptr inbounds i16, i16* %143, i64 1
  %150 = getelementptr inbounds i16, i16* %145, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !485

153:                                              ; preds = %142, %135
  %154 = phi i16* [ %136, %135 ], [ %149, %142 ]
  %155 = phi i64 [ %137, %135 ], [ %148, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %150, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i16* [ %185, %158 ], [ %154, %153 ]
  %160 = phi i64 [ %184, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %186, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %159, align 2
  %163 = getelementptr inbounds i16, i16* %159, i64 1
  %164 = getelementptr inbounds i16, i16* %161, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %159, i64 2
  %167 = getelementptr inbounds i16, i16* %161, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %159, i64 3
  %170 = getelementptr inbounds i16, i16* %161, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %159, i64 4
  %173 = getelementptr inbounds i16, i16* %161, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %159, i64 5
  %176 = getelementptr inbounds i16, i16* %161, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %159, i64 6
  %179 = getelementptr inbounds i16, i16* %161, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %159, i64 7
  %182 = getelementptr inbounds i16, i16* %161, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %160, -8
  %185 = getelementptr inbounds i16, i16* %159, i64 8
  %186 = getelementptr inbounds i16, i16* %161, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !486

188:                                              ; preds = %153, %158, %133, %10
  %189 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 1
  %190 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %189, align 8
  call void @_ZN12v8_inspector15String16Builder9appendAllIcJNS_8String16EEEEvT_DpT0_(%"class.v8_inspector::String16Builder"* %0, i8 signext %2, %"class.v8_inspector::String16"* nonnull %5)
  %192 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %192, i64 0, i32 1, i32 1
  %194 = load i8, i8* %193, align 1
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %196, label %199

196:                                              ; preds = %188
  %197 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %198 = load i8*, i8** %197, align 8
  call void @_ZdlPv(i8* %198) #16
  br label %199

199:                                              ; preds = %188, %196
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector15String16Builder9appendAllIcJNS_8String16EEEEvT_DpT0_(%"class.v8_inspector::String16Builder"*, i8 signext, %"class.v8_inspector::String16"*) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.v8_inspector::String16", align 8
  tail call void @_ZN12v8_inspector15String16Builder6appendEc(%"class.v8_inspector::String16Builder"* %0, i8 signext %1) #15
  %5 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.v8_inspector::String16"* %4 to i8*
  %11 = bitcast %"class.v8_inspector::String16"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %11, i64 24, i1 false) #15
  br label %187

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i16*, i16** %13, align 8
  %15 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %16, 11
  br i1 %17, label %18, label %23

18:                                               ; preds = %12
  %19 = bitcast %"class.v8_inspector::String16"* %4 to i16*
  %20 = trunc i64 %16 to i8
  %21 = bitcast %"class.v8_inspector::String16"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %21, i64 0, i32 1, i32 1
  store i8 %20, i8* %22, align 1
  br label %40

23:                                               ; preds = %12
  %24 = icmp ugt i64 %16, 9223372036854775791
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = bitcast %"class.v8_inspector::String16"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %26) #14
  unreachable

27:                                               ; preds = %23
  %28 = add nuw nsw i64 %16, 8
  %29 = and i64 %28, -8
  %30 = icmp slt i64 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  tail call void @abort() #14
  unreachable

32:                                               ; preds = %27
  %33 = shl i64 %29, 1
  %34 = tail call i8* @_Znwm(i64 %33) #16
  %35 = bitcast i8* %34 to i16*
  %36 = bitcast %"class.v8_inspector::String16"* %4 to i8**
  store i8* %34, i8** %36, align 8
  %37 = or i64 %29, -9223372036854775808
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %16, i64* %39, align 8
  br label %40

40:                                               ; preds = %32, %18
  %41 = phi i16* [ %19, %18 ], [ %35, %32 ]
  %42 = add nuw nsw i64 %16, 1
  %43 = add i64 %16, 1
  %44 = icmp ult i64 %43, 16
  br i1 %44, label %134, label %45

45:                                               ; preds = %40
  %46 = add i64 %16, 1
  %47 = getelementptr i16, i16* %41, i64 %46
  %48 = getelementptr i16, i16* %14, i64 %46
  %49 = icmp ult i16* %41, %48
  %50 = icmp ult i16* %14, %47
  %51 = and i1 %49, %50
  br i1 %51, label %134, label %52

52:                                               ; preds = %45
  %53 = and i64 %43, -16
  %54 = getelementptr i16, i16* %41, i64 %53
  %55 = sub i64 %42, %53
  %56 = getelementptr i16, i16* %14, i64 %53
  %57 = add i64 %53, -16
  %58 = lshr exact i64 %57, 4
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 3
  %61 = icmp ult i64 %57, 48
  br i1 %61, label %113, label %62

62:                                               ; preds = %52
  %63 = sub nsw i64 %59, %60
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %110, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %111, %64 ]
  %67 = getelementptr i16, i16* %41, i64 %65
  %68 = getelementptr i16, i16* %14, i64 %65
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !487
  %71 = getelementptr i16, i16* %68, i64 8
  %72 = bitcast i16* %71 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !487
  %74 = bitcast i16* %67 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %74, align 2, !alias.scope !490, !noalias !487
  %75 = getelementptr i16, i16* %67, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %76, align 2, !alias.scope !490, !noalias !487
  %77 = or i64 %65, 16
  %78 = getelementptr i16, i16* %41, i64 %77
  %79 = getelementptr i16, i16* %14, i64 %77
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !487
  %82 = getelementptr i16, i16* %79, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !487
  %85 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %85, align 2, !alias.scope !490, !noalias !487
  %86 = getelementptr i16, i16* %78, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %87, align 2, !alias.scope !490, !noalias !487
  %88 = or i64 %65, 32
  %89 = getelementptr i16, i16* %41, i64 %88
  %90 = getelementptr i16, i16* %14, i64 %88
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !487
  %93 = getelementptr i16, i16* %90, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !487
  %96 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !490, !noalias !487
  %97 = getelementptr i16, i16* %89, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !490, !noalias !487
  %99 = or i64 %65, 48
  %100 = getelementptr i16, i16* %41, i64 %99
  %101 = getelementptr i16, i16* %14, i64 %99
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !487
  %104 = getelementptr i16, i16* %101, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !487
  %107 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !490, !noalias !487
  %108 = getelementptr i16, i16* %100, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !490, !noalias !487
  %110 = add i64 %65, 64
  %111 = add i64 %66, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %64, !llvm.loop !492

113:                                              ; preds = %64, %52
  %114 = phi i64 [ 0, %52 ], [ %110, %64 ]
  %115 = icmp eq i64 %60, 0
  br i1 %115, label %132, label %116

116:                                              ; preds = %113, %116
  %117 = phi i64 [ %129, %116 ], [ %114, %113 ]
  %118 = phi i64 [ %130, %116 ], [ %60, %113 ]
  %119 = getelementptr i16, i16* %41, i64 %117
  %120 = getelementptr i16, i16* %14, i64 %117
  %121 = bitcast i16* %120 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !487
  %123 = getelementptr i16, i16* %120, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !487
  %126 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !490, !noalias !487
  %127 = getelementptr i16, i16* %119, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !490, !noalias !487
  %129 = add i64 %117, 16
  %130 = add i64 %118, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %116, !llvm.loop !493

132:                                              ; preds = %116, %113
  %133 = icmp eq i64 %43, %53
  br i1 %133, label %187, label %134

134:                                              ; preds = %132, %45, %40
  %135 = phi i16* [ %41, %45 ], [ %41, %40 ], [ %54, %132 ]
  %136 = phi i64 [ %42, %45 ], [ %42, %40 ], [ %55, %132 ]
  %137 = phi i16* [ %14, %45 ], [ %14, %40 ], [ %56, %132 ]
  %138 = add i64 %136, -1
  %139 = and i64 %136, 7
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %152, label %141

141:                                              ; preds = %134, %141
  %142 = phi i16* [ %148, %141 ], [ %135, %134 ]
  %143 = phi i64 [ %147, %141 ], [ %136, %134 ]
  %144 = phi i16* [ %149, %141 ], [ %137, %134 ]
  %145 = phi i64 [ %150, %141 ], [ %139, %134 ]
  %146 = load i16, i16* %144, align 2
  store i16 %146, i16* %142, align 2
  %147 = add i64 %143, -1
  %148 = getelementptr inbounds i16, i16* %142, i64 1
  %149 = getelementptr inbounds i16, i16* %144, i64 1
  %150 = add i64 %145, -1
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %141, !llvm.loop !494

152:                                              ; preds = %141, %134
  %153 = phi i16* [ %135, %134 ], [ %148, %141 ]
  %154 = phi i64 [ %136, %134 ], [ %147, %141 ]
  %155 = phi i16* [ %137, %134 ], [ %149, %141 ]
  %156 = icmp ult i64 %138, 7
  br i1 %156, label %187, label %157

157:                                              ; preds = %152, %157
  %158 = phi i16* [ %184, %157 ], [ %153, %152 ]
  %159 = phi i64 [ %183, %157 ], [ %154, %152 ]
  %160 = phi i16* [ %185, %157 ], [ %155, %152 ]
  %161 = load i16, i16* %160, align 2
  store i16 %161, i16* %158, align 2
  %162 = getelementptr inbounds i16, i16* %158, i64 1
  %163 = getelementptr inbounds i16, i16* %160, i64 1
  %164 = load i16, i16* %163, align 2
  store i16 %164, i16* %162, align 2
  %165 = getelementptr inbounds i16, i16* %158, i64 2
  %166 = getelementptr inbounds i16, i16* %160, i64 2
  %167 = load i16, i16* %166, align 2
  store i16 %167, i16* %165, align 2
  %168 = getelementptr inbounds i16, i16* %158, i64 3
  %169 = getelementptr inbounds i16, i16* %160, i64 3
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %158, i64 4
  %172 = getelementptr inbounds i16, i16* %160, i64 4
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %158, i64 5
  %175 = getelementptr inbounds i16, i16* %160, i64 5
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %158, i64 6
  %178 = getelementptr inbounds i16, i16* %160, i64 6
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %158, i64 7
  %181 = getelementptr inbounds i16, i16* %160, i64 7
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = add i64 %159, -8
  %184 = getelementptr inbounds i16, i16* %158, i64 8
  %185 = getelementptr inbounds i16, i16* %160, i64 8
  %186 = icmp eq i64 %183, 0
  br i1 %186, label %187, label %157, !llvm.loop !495

187:                                              ; preds = %152, %157, %132, %9
  %188 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 1
  %189 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 1
  %190 = load i64, i64* %189, align 8
  store i64 %190, i64* %188, align 8
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %0, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %4) #15
  %191 = bitcast %"class.v8_inspector::String16"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %191, i64 0, i32 1, i32 1
  %193 = load i8, i8* %192, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %195, label %198

195:                                              ; preds = %187
  %196 = bitcast %"class.v8_inspector::String16"* %4 to i8**
  %197 = load i8*, i8** %196, align 8
  call void @_ZdlPv(i8* %197) #16
  br label %198

198:                                              ; preds = %187, %195
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorC2EN2v85LocalINS2_5ValueEEERKNS_8String16ES8_(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"*, %"class.v8::Value"*, %"class.v8_inspector::String16"* nocapture readonly dereferenceable(32), %"class.v8_inspector::String16"* nocapture readonly dereferenceable(32)) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_112ObjectMirrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 1, i32 0
  %7 = bitcast %"class.v8::Object"** %6 to %"class.v8::Value"**
  store %"class.v8::Value"* %1, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 2
  %9 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  %15 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #15
  br label %191

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp ult i64 %20, 11
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = bitcast %"class.v8_inspector::String16"* %8 to i16*
  %24 = trunc i64 %20 to i8
  %25 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %25, i64 0, i32 1, i32 1
  store i8 %24, i8* %26, align 1
  br label %44

27:                                               ; preds = %16
  %28 = icmp ugt i64 %20, 9223372036854775791
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = bitcast %"class.v8_inspector::String16"* %8 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %30) #14
  unreachable

31:                                               ; preds = %27
  %32 = add nuw nsw i64 %20, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #14
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #16
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %20, i64* %43, align 8
  br label %44

44:                                               ; preds = %36, %22
  %45 = phi i16* [ %23, %22 ], [ %39, %36 ]
  %46 = add nuw nsw i64 %20, 1
  %47 = add i64 %20, 1
  %48 = icmp ult i64 %47, 16
  br i1 %48, label %138, label %49

49:                                               ; preds = %44
  %50 = add i64 %20, 1
  %51 = getelementptr i16, i16* %45, i64 %50
  %52 = getelementptr i16, i16* %18, i64 %50
  %53 = icmp ult i16* %45, %52
  %54 = icmp ult i16* %18, %51
  %55 = and i1 %53, %54
  br i1 %55, label %138, label %56

56:                                               ; preds = %49
  %57 = and i64 %47, -16
  %58 = getelementptr i16, i16* %45, i64 %57
  %59 = sub i64 %46, %57
  %60 = getelementptr i16, i16* %18, i64 %57
  %61 = add i64 %57, -16
  %62 = lshr exact i64 %61, 4
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp ult i64 %61, 48
  br i1 %65, label %117, label %66

66:                                               ; preds = %56
  %67 = sub nsw i64 %63, %64
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i64 [ 0, %66 ], [ %114, %68 ]
  %70 = phi i64 [ %67, %66 ], [ %115, %68 ]
  %71 = getelementptr i16, i16* %45, i64 %69
  %72 = getelementptr i16, i16* %18, i64 %69
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !496
  %75 = getelementptr i16, i16* %72, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !496
  %78 = bitcast i16* %71 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %78, align 2, !alias.scope !499, !noalias !496
  %79 = getelementptr i16, i16* %71, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %80, align 2, !alias.scope !499, !noalias !496
  %81 = or i64 %69, 16
  %82 = getelementptr i16, i16* %45, i64 %81
  %83 = getelementptr i16, i16* %18, i64 %81
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !496
  %86 = getelementptr i16, i16* %83, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !496
  %89 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %89, align 2, !alias.scope !499, !noalias !496
  %90 = getelementptr i16, i16* %82, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %91, align 2, !alias.scope !499, !noalias !496
  %92 = or i64 %69, 32
  %93 = getelementptr i16, i16* %45, i64 %92
  %94 = getelementptr i16, i16* %18, i64 %92
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !496
  %97 = getelementptr i16, i16* %94, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !496
  %100 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %100, align 2, !alias.scope !499, !noalias !496
  %101 = getelementptr i16, i16* %93, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %102, align 2, !alias.scope !499, !noalias !496
  %103 = or i64 %69, 48
  %104 = getelementptr i16, i16* %45, i64 %103
  %105 = getelementptr i16, i16* %18, i64 %103
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !496
  %108 = getelementptr i16, i16* %105, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !496
  %111 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %111, align 2, !alias.scope !499, !noalias !496
  %112 = getelementptr i16, i16* %104, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %113, align 2, !alias.scope !499, !noalias !496
  %114 = add i64 %69, 64
  %115 = add i64 %70, -4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %68, !llvm.loop !501

117:                                              ; preds = %68, %56
  %118 = phi i64 [ 0, %56 ], [ %114, %68 ]
  %119 = icmp eq i64 %64, 0
  br i1 %119, label %136, label %120

120:                                              ; preds = %117, %120
  %121 = phi i64 [ %133, %120 ], [ %118, %117 ]
  %122 = phi i64 [ %134, %120 ], [ %64, %117 ]
  %123 = getelementptr i16, i16* %45, i64 %121
  %124 = getelementptr i16, i16* %18, i64 %121
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !496
  %127 = getelementptr i16, i16* %124, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !496
  %130 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %130, align 2, !alias.scope !499, !noalias !496
  %131 = getelementptr i16, i16* %123, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %132, align 2, !alias.scope !499, !noalias !496
  %133 = add i64 %121, 16
  %134 = add i64 %122, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %120, !llvm.loop !502

136:                                              ; preds = %120, %117
  %137 = icmp eq i64 %47, %57
  br i1 %137, label %191, label %138

138:                                              ; preds = %136, %49, %44
  %139 = phi i16* [ %45, %49 ], [ %45, %44 ], [ %58, %136 ]
  %140 = phi i64 [ %46, %49 ], [ %46, %44 ], [ %59, %136 ]
  %141 = phi i16* [ %18, %49 ], [ %18, %44 ], [ %60, %136 ]
  %142 = add i64 %140, -1
  %143 = and i64 %140, 7
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %138, %145
  %146 = phi i16* [ %152, %145 ], [ %139, %138 ]
  %147 = phi i64 [ %151, %145 ], [ %140, %138 ]
  %148 = phi i16* [ %153, %145 ], [ %141, %138 ]
  %149 = phi i64 [ %154, %145 ], [ %143, %138 ]
  %150 = load i16, i16* %148, align 2
  store i16 %150, i16* %146, align 2
  %151 = add i64 %147, -1
  %152 = getelementptr inbounds i16, i16* %146, i64 1
  %153 = getelementptr inbounds i16, i16* %148, i64 1
  %154 = add i64 %149, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %145, !llvm.loop !503

156:                                              ; preds = %145, %138
  %157 = phi i16* [ %139, %138 ], [ %152, %145 ]
  %158 = phi i64 [ %140, %138 ], [ %151, %145 ]
  %159 = phi i16* [ %141, %138 ], [ %153, %145 ]
  %160 = icmp ult i64 %142, 7
  br i1 %160, label %191, label %161

161:                                              ; preds = %156, %161
  %162 = phi i16* [ %188, %161 ], [ %157, %156 ]
  %163 = phi i64 [ %187, %161 ], [ %158, %156 ]
  %164 = phi i16* [ %189, %161 ], [ %159, %156 ]
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %162, align 2
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = getelementptr inbounds i16, i16* %164, i64 1
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %162, i64 2
  %170 = getelementptr inbounds i16, i16* %164, i64 2
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %162, i64 3
  %173 = getelementptr inbounds i16, i16* %164, i64 3
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %162, i64 4
  %176 = getelementptr inbounds i16, i16* %164, i64 4
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %162, i64 5
  %179 = getelementptr inbounds i16, i16* %164, i64 5
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %162, i64 6
  %182 = getelementptr inbounds i16, i16* %164, i64 6
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %162, i64 7
  %185 = getelementptr inbounds i16, i16* %164, i64 7
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %163, -8
  %188 = getelementptr inbounds i16, i16* %162, i64 8
  %189 = getelementptr inbounds i16, i16* %164, i64 8
  %190 = icmp eq i64 %187, 0
  br i1 %190, label %191, label %161, !llvm.loop !504

191:                                              ; preds = %156, %161, %136, %13
  %192 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 2, i32 1
  %193 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %194 = load i64, i64* %193, align 8
  store i64 %194, i64* %192, align 8
  %195 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 3
  store i8 1, i8* %195, align 8
  %196 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 4
  %197 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %197, i64 0, i32 1, i32 1
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, 0
  br i1 %200, label %204, label %201

201:                                              ; preds = %191
  %202 = bitcast %"class.v8_inspector::String16"* %196 to i8*
  %203 = bitcast %"class.v8_inspector::String16"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %202, i8* align 8 %203, i64 24, i1 false) #15
  br label %379

204:                                              ; preds = %191
  %205 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load i16*, i16** %205, align 8
  %207 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %208 = load i64, i64* %207, align 8
  %209 = icmp ult i64 %208, 11
  br i1 %209, label %210, label %215

210:                                              ; preds = %204
  %211 = bitcast %"class.v8_inspector::String16"* %196 to i16*
  %212 = trunc i64 %208 to i8
  %213 = bitcast %"class.v8_inspector::String16"* %196 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %213, i64 0, i32 1, i32 1
  store i8 %212, i8* %214, align 1
  br label %232

215:                                              ; preds = %204
  %216 = icmp ugt i64 %208, 9223372036854775791
  br i1 %216, label %217, label %219

217:                                              ; preds = %215
  %218 = bitcast %"class.v8_inspector::String16"* %196 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %218) #14
  unreachable

219:                                              ; preds = %215
  %220 = add nuw nsw i64 %208, 8
  %221 = and i64 %220, -8
  %222 = icmp slt i64 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %219
  tail call void @abort() #14
  unreachable

224:                                              ; preds = %219
  %225 = shl i64 %221, 1
  %226 = tail call i8* @_Znwm(i64 %225) #16
  %227 = bitcast i8* %226 to i16*
  %228 = bitcast %"class.v8_inspector::String16"* %196 to i8**
  store i8* %226, i8** %228, align 8
  %229 = or i64 %221, -9223372036854775808
  %230 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %229, i64* %230, align 8
  %231 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %208, i64* %231, align 8
  br label %232

232:                                              ; preds = %224, %210
  %233 = phi i16* [ %211, %210 ], [ %227, %224 ]
  %234 = add nuw nsw i64 %208, 1
  %235 = add i64 %208, 1
  %236 = icmp ult i64 %235, 16
  br i1 %236, label %326, label %237

237:                                              ; preds = %232
  %238 = add i64 %208, 1
  %239 = getelementptr i16, i16* %233, i64 %238
  %240 = getelementptr i16, i16* %206, i64 %238
  %241 = icmp ult i16* %233, %240
  %242 = icmp ult i16* %206, %239
  %243 = and i1 %241, %242
  br i1 %243, label %326, label %244

244:                                              ; preds = %237
  %245 = and i64 %235, -16
  %246 = getelementptr i16, i16* %233, i64 %245
  %247 = sub i64 %234, %245
  %248 = getelementptr i16, i16* %206, i64 %245
  %249 = add i64 %245, -16
  %250 = lshr exact i64 %249, 4
  %251 = add nuw nsw i64 %250, 1
  %252 = and i64 %251, 3
  %253 = icmp ult i64 %249, 48
  br i1 %253, label %305, label %254

254:                                              ; preds = %244
  %255 = sub nsw i64 %251, %252
  br label %256

256:                                              ; preds = %256, %254
  %257 = phi i64 [ 0, %254 ], [ %302, %256 ]
  %258 = phi i64 [ %255, %254 ], [ %303, %256 ]
  %259 = getelementptr i16, i16* %233, i64 %257
  %260 = getelementptr i16, i16* %206, i64 %257
  %261 = bitcast i16* %260 to <8 x i16>*
  %262 = load <8 x i16>, <8 x i16>* %261, align 2, !alias.scope !505
  %263 = getelementptr i16, i16* %260, i64 8
  %264 = bitcast i16* %263 to <8 x i16>*
  %265 = load <8 x i16>, <8 x i16>* %264, align 2, !alias.scope !505
  %266 = bitcast i16* %259 to <8 x i16>*
  store <8 x i16> %262, <8 x i16>* %266, align 2, !alias.scope !508, !noalias !505
  %267 = getelementptr i16, i16* %259, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  store <8 x i16> %265, <8 x i16>* %268, align 2, !alias.scope !508, !noalias !505
  %269 = or i64 %257, 16
  %270 = getelementptr i16, i16* %233, i64 %269
  %271 = getelementptr i16, i16* %206, i64 %269
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !505
  %274 = getelementptr i16, i16* %271, i64 8
  %275 = bitcast i16* %274 to <8 x i16>*
  %276 = load <8 x i16>, <8 x i16>* %275, align 2, !alias.scope !505
  %277 = bitcast i16* %270 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %277, align 2, !alias.scope !508, !noalias !505
  %278 = getelementptr i16, i16* %270, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  store <8 x i16> %276, <8 x i16>* %279, align 2, !alias.scope !508, !noalias !505
  %280 = or i64 %257, 32
  %281 = getelementptr i16, i16* %233, i64 %280
  %282 = getelementptr i16, i16* %206, i64 %280
  %283 = bitcast i16* %282 to <8 x i16>*
  %284 = load <8 x i16>, <8 x i16>* %283, align 2, !alias.scope !505
  %285 = getelementptr i16, i16* %282, i64 8
  %286 = bitcast i16* %285 to <8 x i16>*
  %287 = load <8 x i16>, <8 x i16>* %286, align 2, !alias.scope !505
  %288 = bitcast i16* %281 to <8 x i16>*
  store <8 x i16> %284, <8 x i16>* %288, align 2, !alias.scope !508, !noalias !505
  %289 = getelementptr i16, i16* %281, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  store <8 x i16> %287, <8 x i16>* %290, align 2, !alias.scope !508, !noalias !505
  %291 = or i64 %257, 48
  %292 = getelementptr i16, i16* %233, i64 %291
  %293 = getelementptr i16, i16* %206, i64 %291
  %294 = bitcast i16* %293 to <8 x i16>*
  %295 = load <8 x i16>, <8 x i16>* %294, align 2, !alias.scope !505
  %296 = getelementptr i16, i16* %293, i64 8
  %297 = bitcast i16* %296 to <8 x i16>*
  %298 = load <8 x i16>, <8 x i16>* %297, align 2, !alias.scope !505
  %299 = bitcast i16* %292 to <8 x i16>*
  store <8 x i16> %295, <8 x i16>* %299, align 2, !alias.scope !508, !noalias !505
  %300 = getelementptr i16, i16* %292, i64 8
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %298, <8 x i16>* %301, align 2, !alias.scope !508, !noalias !505
  %302 = add i64 %257, 64
  %303 = add i64 %258, -4
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %305, label %256, !llvm.loop !510

305:                                              ; preds = %256, %244
  %306 = phi i64 [ 0, %244 ], [ %302, %256 ]
  %307 = icmp eq i64 %252, 0
  br i1 %307, label %324, label %308

308:                                              ; preds = %305, %308
  %309 = phi i64 [ %321, %308 ], [ %306, %305 ]
  %310 = phi i64 [ %322, %308 ], [ %252, %305 ]
  %311 = getelementptr i16, i16* %233, i64 %309
  %312 = getelementptr i16, i16* %206, i64 %309
  %313 = bitcast i16* %312 to <8 x i16>*
  %314 = load <8 x i16>, <8 x i16>* %313, align 2, !alias.scope !505
  %315 = getelementptr i16, i16* %312, i64 8
  %316 = bitcast i16* %315 to <8 x i16>*
  %317 = load <8 x i16>, <8 x i16>* %316, align 2, !alias.scope !505
  %318 = bitcast i16* %311 to <8 x i16>*
  store <8 x i16> %314, <8 x i16>* %318, align 2, !alias.scope !508, !noalias !505
  %319 = getelementptr i16, i16* %311, i64 8
  %320 = bitcast i16* %319 to <8 x i16>*
  store <8 x i16> %317, <8 x i16>* %320, align 2, !alias.scope !508, !noalias !505
  %321 = add i64 %309, 16
  %322 = add i64 %310, -1
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %324, label %308, !llvm.loop !511

324:                                              ; preds = %308, %305
  %325 = icmp eq i64 %235, %245
  br i1 %325, label %379, label %326

326:                                              ; preds = %324, %237, %232
  %327 = phi i16* [ %233, %237 ], [ %233, %232 ], [ %246, %324 ]
  %328 = phi i64 [ %234, %237 ], [ %234, %232 ], [ %247, %324 ]
  %329 = phi i16* [ %206, %237 ], [ %206, %232 ], [ %248, %324 ]
  %330 = add i64 %328, -1
  %331 = and i64 %328, 7
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %344, label %333

333:                                              ; preds = %326, %333
  %334 = phi i16* [ %340, %333 ], [ %327, %326 ]
  %335 = phi i64 [ %339, %333 ], [ %328, %326 ]
  %336 = phi i16* [ %341, %333 ], [ %329, %326 ]
  %337 = phi i64 [ %342, %333 ], [ %331, %326 ]
  %338 = load i16, i16* %336, align 2
  store i16 %338, i16* %334, align 2
  %339 = add i64 %335, -1
  %340 = getelementptr inbounds i16, i16* %334, i64 1
  %341 = getelementptr inbounds i16, i16* %336, i64 1
  %342 = add i64 %337, -1
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %344, label %333, !llvm.loop !512

344:                                              ; preds = %333, %326
  %345 = phi i16* [ %327, %326 ], [ %340, %333 ]
  %346 = phi i64 [ %328, %326 ], [ %339, %333 ]
  %347 = phi i16* [ %329, %326 ], [ %341, %333 ]
  %348 = icmp ult i64 %330, 7
  br i1 %348, label %379, label %349

349:                                              ; preds = %344, %349
  %350 = phi i16* [ %376, %349 ], [ %345, %344 ]
  %351 = phi i64 [ %375, %349 ], [ %346, %344 ]
  %352 = phi i16* [ %377, %349 ], [ %347, %344 ]
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %350, align 2
  %354 = getelementptr inbounds i16, i16* %350, i64 1
  %355 = getelementptr inbounds i16, i16* %352, i64 1
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %350, i64 2
  %358 = getelementptr inbounds i16, i16* %352, i64 2
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %350, i64 3
  %361 = getelementptr inbounds i16, i16* %352, i64 3
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %350, i64 4
  %364 = getelementptr inbounds i16, i16* %352, i64 4
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = getelementptr inbounds i16, i16* %350, i64 5
  %367 = getelementptr inbounds i16, i16* %352, i64 5
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = getelementptr inbounds i16, i16* %350, i64 6
  %370 = getelementptr inbounds i16, i16* %352, i64 6
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %350, i64 7
  %373 = getelementptr inbounds i16, i16* %352, i64 7
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = add i64 %351, -8
  %376 = getelementptr inbounds i16, i16* %350, i64 8
  %377 = getelementptr inbounds i16, i16* %352, i64 8
  %378 = icmp eq i64 %375, 0
  br i1 %378, label %379, label %349, !llvm.loop !513

379:                                              ; preds = %344, %349, %324, %201
  %380 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 4, i32 1
  %381 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 1
  %382 = load i64, i64* %381, align 8
  store i64 %382, i64* %380, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorD2Ev(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_112ObjectMirrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 4
  %4 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 2
  %13 = bitcast %"class.v8_inspector::String16"* %12 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = bitcast %"class.v8_inspector::String16"* %12 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #16
  br label %20

20:                                               ; preds = %11, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12v8_inspector12_GLOBAL__N_112ObjectMirrorD0Ev(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"*) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_112ObjectMirrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 4
  %4 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 2
  %13 = bitcast %"class.v8_inspector::String16"* %12 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = bitcast %"class.v8_inspector::String16"* %12 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #16
  br label %20

20:                                               ; preds = %11, %17
  %21 = bitcast %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_112ObjectMirror17buildRemoteObjectEN2v85LocalINS2_7ContextEEENS_8WrapModeEPNSt3__110unique_ptrINS_8protocol7Runtime12RemoteObjectENS7_14default_deleteISB_EEEE(%"class.v8_crdtp::DispatchResponse"* noalias sret, %"class.v8_inspector::(anonymous namespace)::ObjectMirror"*, %"class.v8::Context"*, i32, %"class.std::__1::unique_ptr.515"* nocapture) unnamed_addr #2 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.522", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = alloca %"class.v8_inspector::String16", align 8
  %10 = alloca %"class.std::__1::unique_ptr.417", align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = icmp eq i32 %3, 0
  br i1 %13, label %14, label %116

14:                                               ; preds = %5
  %15 = bitcast %"class.std::__1::unique_ptr.522"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #15
  %16 = bitcast %"class.std::__1::unique_ptr.522"* %6 to i64*
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %1, i64 0, i32 1, i32 0
  %18 = bitcast %"class.v8::Object"** %17 to %"class.v8::Value"**
  %19 = load %"class.v8::Value"*, %"class.v8::Value"** %18, align 8
  %20 = bitcast %"class.v8::Value"* %19 to i64*
  %21 = load i64, i64* %20, align 8, !noalias !514
  %22 = and i64 %21, 3
  %23 = icmp eq i64 %22, 1
  br i1 %23, label %24, label %42

24:                                               ; preds = %14
  %25 = add i64 %21, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i64 %21, -4294967296
  %29 = zext i32 %27 to i64
  %30 = or i64 %28, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = icmp eq i16 %33, 67
  br i1 %34, label %35, label %42

35:                                               ; preds = %24
  %36 = add i64 %21, 23
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, -2
  %40 = icmp eq i32 %39, 10
  br i1 %40, label %41, label %42

41:                                               ; preds = %35
  tail call void @_ZN8v8_crdtp16DispatchResponse7SuccessEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  br label %43

42:                                               ; preds = %35, %24, %14
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_115toProtocolValueEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEEiPNSt3__110unique_ptrINS_8protocol5ValueENS7_14default_deleteISA_EEEE(%"class.v8_crdtp::DispatchResponse"* noalias %0, %"class.v8::Context"* %2, %"class.v8::Value"* %19, i32 1000, %"class.std::__1::unique_ptr.522"* nonnull %6) #15
  br label %43

43:                                               ; preds = %41, %42
  %44 = getelementptr inbounds %"class.v8_crdtp::DispatchResponse", %"class.v8_crdtp::DispatchResponse"* %0, i64 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %105

47:                                               ; preds = %43
  %48 = tail call i8* @_Znwm(i64 272) #16
  %49 = bitcast i8* %48 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %49, align 8
  %50 = getelementptr inbounds i8, i8* %48, i64 16
  %51 = getelementptr inbounds i8, i8* %48, i64 56
  %52 = getelementptr inbounds i8, i8* %48, i64 96
  %53 = getelementptr inbounds i8, i8* %48, i64 144
  %54 = getelementptr inbounds i8, i8* %48, i64 184
  %55 = getelementptr inbounds i8, i8* %48, i64 224
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 41, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 48, i1 false) #15
  %56 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #15
  %57 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6ObjectE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %7, i8* %57) #15
  %58 = bitcast i8* %50 to %"class.std::__1::basic_string"*
  %59 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0
  %60 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %58, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %59) #15
  %61 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds i8, i8* %48, i64 40
  %64 = bitcast i8* %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.522"* %6, i64 0, i32 0, i32 0, i32 0
  %66 = load i64, i64* %16, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %65, align 8
  %67 = getelementptr inbounds i8, i8* %48, i64 128
  %68 = bitcast i8* %67 to %"class.v8_inspector::protocol::Value"**
  %69 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %68, align 8
  %70 = bitcast i8* %67 to i64*
  store i64 %66, i64* %70, align 8
  %71 = icmp eq %"class.v8_inspector::protocol::Value"* %69, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %47
  %73 = bitcast %"class.v8_inspector::protocol::Value"* %69 to void (%"class.v8_inspector::protocol::Value"*)***
  %74 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %74, i64 2
  %76 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %75, align 8
  call void %76(%"class.v8_inspector::protocol::Value"* nonnull %69) #15
  br label %77

77:                                               ; preds = %47, %72
  %78 = ptrtoint i8* %48 to i64
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.515", %"class.std::__1::unique_ptr.515"* %4, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %79, align 8
  %81 = bitcast %"class.std::__1::unique_ptr.515"* %4 to i64*
  store i64 %78, i64* %81, align 8
  %82 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %80, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %77
  %84 = bitcast %"class.v8_inspector::protocol::Runtime::RemoteObject"* %80 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %85 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %85, i64 2
  %87 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %86, align 8
  call void %87(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %80) #15
  br label %88

88:                                               ; preds = %83, %77
  %89 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %89, i64 0, i32 1, i32 1
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #16
  br label %96

96:                                               ; preds = %93, %88
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #15
  %97 = getelementptr inbounds %"class.v8_crdtp::DispatchResponse", %"class.v8_crdtp::DispatchResponse"* %0, i64 0, i32 1
  %98 = bitcast %"class.std::__1::basic_string.541"* %97 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %195

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.std::__1::basic_string.541", %"class.std::__1::basic_string.541"* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  call void @_ZdlPv(i8* %104) #16
  br label %195

105:                                              ; preds = %43
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.522"* %6, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %106, align 8
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.522"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %108, align 8
  %109 = icmp eq %"class.v8_inspector::protocol::Value"* %107, null
  br i1 %109, label %115, label %110

110:                                              ; preds = %105
  %111 = bitcast %"class.v8_inspector::protocol::Value"* %107 to void (%"class.v8_inspector::protocol::Value"*)***
  %112 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %112, i64 2
  %114 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %113, align 8
  call void %114(%"class.v8_inspector::protocol::Value"* nonnull %107) #15
  br label %115

115:                                              ; preds = %105, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #15
  br label %198

116:                                              ; preds = %5
  %117 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %2) #15
  %118 = tail call i8* @_Znwm(i64 272) #16
  %119 = bitcast i8* %118 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %119, align 8
  %120 = getelementptr inbounds i8, i8* %118, i64 16
  %121 = getelementptr inbounds i8, i8* %118, i64 56
  %122 = getelementptr inbounds i8, i8* %118, i64 96
  %123 = getelementptr inbounds i8, i8* %118, i64 144
  %124 = getelementptr inbounds i8, i8* %118, i64 184
  %125 = getelementptr inbounds i8, i8* %118, i64 224
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 41, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 48, i1 false) #15
  %126 = bitcast i8* %118 to %"class.v8_inspector::protocol::Runtime::RemoteObject"*
  %127 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %127) #15
  %128 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6ObjectE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %8, i8* %128) #15
  %129 = bitcast i8* %120 to %"class.std::__1::basic_string"*
  %130 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 0
  %131 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %129, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %130) #15
  %132 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 1
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds i8, i8* %118, i64 40
  %135 = bitcast i8* %134 to i64*
  store i64 %133, i64* %135, align 8
  %136 = bitcast %"class.v8_inspector::String16"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %136) #15
  %137 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %1, i64 0, i32 1, i32 0
  %138 = load %"class.v8::Object"*, %"class.v8::Object"** %137, align 8
  %139 = call %"class.v8::String"* @_ZN2v86Object18GetConstructorNameEv(%"class.v8::Object"* %138) #15
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %9, %"class.v8::Isolate"* %117, %"class.v8::String"* %139) #15
  call void @_ZN12v8_inspector8protocol7Runtime12RemoteObject12setClassNameERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %126, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %9) #15
  %140 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %1, i64 0, i32 2
  call void @_ZN12v8_inspector8protocol7Runtime12RemoteObject14setDescriptionERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %126, %"class.v8_inspector::String16"* dereferenceable(32) %140) #15
  %141 = ptrtoint i8* %118 to i64
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.515", %"class.std::__1::unique_ptr.515"* %4, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %142, align 8
  %144 = bitcast %"class.std::__1::unique_ptr.515"* %4 to i64*
  store i64 %141, i64* %144, align 8
  %145 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %143, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %116
  %147 = bitcast %"class.v8_inspector::protocol::Runtime::RemoteObject"* %143 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %148 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %148, i64 2
  %150 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %149, align 8
  call void %150(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %143) #15
  br label %151

151:                                              ; preds = %146, %116
  %152 = bitcast %"class.v8_inspector::String16"* %9 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %152, i64 0, i32 1, i32 1
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %151
  %157 = bitcast %"class.v8_inspector::String16"* %9 to i8**
  %158 = load i8*, i8** %157, align 8
  call void @_ZdlPv(i8* %158) #16
  br label %159

159:                                              ; preds = %151, %156
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %136) #15
  %160 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %160, i64 0, i32 1, i32 1
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %159
  %165 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %166 = load i8*, i8** %165, align 8
  call void @_ZdlPv(i8* %166) #16
  br label %167

167:                                              ; preds = %164, %159
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %127) #15
  %168 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %1, i64 0, i32 3
  %169 = load i8, i8* %168, align 8, !range !7
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %174, label %171

171:                                              ; preds = %167
  %172 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %142, align 8
  %173 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %1, i64 0, i32 4
  call void @_ZN12v8_inspector8protocol7Runtime12RemoteObject10setSubtypeERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::RemoteObject"* %172, %"class.v8_inspector::String16"* dereferenceable(32) %173)
  br label %174

174:                                              ; preds = %167, %171
  %175 = icmp eq i32 %3, 2
  br i1 %175, label %176, label %197

176:                                              ; preds = %174
  %177 = bitcast %"class.std::__1::unique_ptr.417"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #15
  %178 = bitcast %"class.std::__1::unique_ptr.417"* %10 to i64*
  store i64 0, i64* %178, align 8
  %179 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %179) #15
  store i32 5, i32* %11, align 4
  %180 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %180) #15
  store i32 100, i32* %12, align 4
  call fastcc void @_ZNK12v8_inspector12_GLOBAL__N_112ObjectMirror26buildObjectPreviewInternalEN2v85LocalINS2_7ContextEEEbbPiS6_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS7_14default_deleteISB_EEEE(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %1, %"class.v8::Context"* %2, i1 zeroext false, i1 zeroext false, i32* nonnull %11, i32* nonnull %12, %"class.std::__1::unique_ptr.417"* nonnull %10) #15
  %181 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %142, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.417"* %10, i64 0, i32 0, i32 0, i32 0
  %183 = load i64, i64* %178, align 8
  store %"class.v8_inspector::protocol::Runtime::ObjectPreview"* null, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %182, align 8
  %184 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::RemoteObject", %"class.v8_inspector::protocol::Runtime::RemoteObject"* %181, i64 0, i32 9
  %185 = getelementptr inbounds %"class.v8_crdtp::detail::PtrMaybe", %"class.v8_crdtp::detail::PtrMaybe"* %184, i64 0, i32 0, i32 0, i32 0, i32 0
  %186 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %185, align 8
  %187 = bitcast %"class.v8_crdtp::detail::PtrMaybe"* %184 to i64*
  store i64 %183, i64* %187, align 8
  %188 = icmp eq %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %186, null
  br i1 %188, label %194, label %189

189:                                              ; preds = %176
  %190 = bitcast %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %186 to void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)***
  %191 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*** %190, align 8
  %192 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %191, i64 2
  %193 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %192, align 8
  call void %193(%"class.v8_inspector::protocol::Runtime::ObjectPreview"* nonnull %186) #15
  br label %194

194:                                              ; preds = %189, %176
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %180) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %179) #15
  br label %195

195:                                              ; preds = %102, %96, %194
  %196 = phi i8* [ %177, %194 ], [ %15, %96 ], [ %15, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #15
  br label %197

197:                                              ; preds = %195, %174
  call void @_ZN8v8_crdtp16DispatchResponse7SuccessEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  br label %198

198:                                              ; preds = %115, %197
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_112ObjectMirror20buildPropertyPreviewEN2v85LocalINS2_7ContextEEERKNS_8String16EPNSt3__110unique_ptrINS_8protocol7Runtime15PropertyPreviewENS9_14default_deleteISD_EEEE(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"*, %"class.v8::Context"* nocapture readnone, %"class.v8_inspector::String16"* dereferenceable(32), %"class.std::__1::unique_ptr.414"* nocapture) unnamed_addr #2 align 2 {
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = tail call i8* @_Znwm(i64 160) #16
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime15PropertyPreviewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = getelementptr inbounds i8, i8* %8, i64 80
  %12 = getelementptr inbounds i8, i8* %8, i64 128
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 65, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 41, i1 false) #15
  %13 = bitcast i8* %8 to %"class.v8_inspector::protocol::Runtime::PropertyPreview"*
  %14 = bitcast i8* %10 to %"class.std::__1::basic_string"*
  %15 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0
  %16 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %14, %"class.std::__1::basic_string"* dereferenceable(24) %15) #15
  %17 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %8, i64 32
  %20 = bitcast i8* %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #15
  %22 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6ObjectE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %5, i8* %22) #15
  %23 = getelementptr inbounds i8, i8* %8, i64 40
  %24 = bitcast i8* %23 to %"class.std::__1::basic_string"*
  %25 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 0
  %26 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %25) #15
  %27 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %8, i64 64
  %30 = bitcast i8* %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 4
  %34 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #15
  %35 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum6RegexpE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %7, i8* %35) #15
  %36 = bitcast %"class.v8_inspector::String16"* %33 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = zext i8 %38 to i64
  %43 = select i1 %39, i64 %41, i64 %42
  %44 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  %48 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = zext i8 %46 to i64
  %51 = select i1 %47, i64 %49, i64 %50
  %52 = icmp eq i64 %43, %51
  br i1 %52, label %53, label %76

53:                                               ; preds = %4
  %54 = icmp eq i64 %43, 0
  br i1 %54, label %76, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i16*, i16** %56, align 8
  %58 = bitcast %"class.v8_inspector::String16"* %7 to i16*
  %59 = select i1 %47, i16* %57, i16* %58
  %60 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i16*, i16** %60, align 8
  %62 = bitcast %"class.v8_inspector::String16"* %33 to i16*
  %63 = select i1 %39, i16* %61, i16* %62
  br label %64

64:                                               ; preds = %71, %55
  %65 = phi i64 [ %72, %71 ], [ %43, %55 ]
  %66 = phi i16* [ %74, %71 ], [ %59, %55 ]
  %67 = phi i16* [ %73, %71 ], [ %63, %55 ]
  %68 = load i16, i16* %67, align 2
  %69 = load i16, i16* %66, align 2
  %70 = icmp eq i16 %69, %68
  br i1 %70, label %71, label %76

71:                                               ; preds = %64
  %72 = add i64 %65, -1
  %73 = getelementptr inbounds i16, i16* %67, i64 1
  %74 = getelementptr inbounds i16, i16* %66, i64 1
  %75 = icmp eq i64 %72, 0
  br i1 %75, label %76, label %64

76:                                               ; preds = %64, %71, %4, %53
  %77 = phi i32 [ 1, %4 ], [ 0, %53 ], [ 1, %64 ], [ 0, %71 ]
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_116abbreviateStringERKNS_8String16ENS0_14AbbreviateModeE(%"class.v8_inspector::String16"* noalias nonnull %6, %"class.v8_inspector::String16"* dereferenceable(32) %32, i32 %77)
  call void @_ZN12v8_inspector8protocol7Runtime15PropertyPreview8setValueERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %13, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %6) #15
  %78 = ptrtoint i8* %8 to i64
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %3, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %79, align 8
  %81 = bitcast %"class.std::__1::unique_ptr.414"* %3 to i64*
  store i64 %78, i64* %81, align 8
  %82 = icmp eq %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %80, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %76
  %84 = bitcast %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %80 to void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)***
  %85 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %85, i64 2
  %87 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %86, align 8
  call void %87(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %80) #15
  br label %88

88:                                               ; preds = %83, %76
  %89 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %89, i64 0, i32 1, i32 1
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #16
  br label %96

96:                                               ; preds = %88, %93
  %97 = load i8, i8* %45, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %96
  %100 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %101 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %101) #16
  br label %102

102:                                              ; preds = %96, %99
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #15
  %103 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %103, i64 0, i32 1, i32 1
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %102
  %108 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %109 = load i8*, i8** %108, align 8
  call void @_ZdlPv(i8* %109) #16
  br label %110

110:                                              ; preds = %107, %102
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #15
  %111 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 3
  %112 = load i8, i8* %111, align 8, !range !7
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %110
  %115 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %79, align 8
  call void @_ZN12v8_inspector8protocol7Runtime15PropertyPreview10setSubtypeERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* %115, %"class.v8_inspector::String16"* dereferenceable(32) %33)
  br label %116

116:                                              ; preds = %110, %114
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_112ObjectMirror18buildObjectPreviewEN2v85LocalINS2_7ContextEEEbPiS6_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS7_14default_deleteISB_EEEE(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"*, %"class.v8::Context"*, i1 zeroext, i32*, i32*, %"class.std::__1::unique_ptr.417"* nocapture) unnamed_addr #2 align 2 {
  tail call fastcc void @_ZNK12v8_inspector12_GLOBAL__N_112ObjectMirror26buildObjectPreviewInternalEN2v85LocalINS2_7ContextEEEbbPiS6_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS7_14default_deleteISB_EEEE(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, %"class.v8::Context"* %1, i1 zeroext false, i1 zeroext %2, i32* %3, i32* %4, %"class.std::__1::unique_ptr.417"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_112ObjectMirror17buildEntryPreviewEN2v85LocalINS2_7ContextEEEPiS6_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS7_14default_deleteISB_EEEE(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"* nocapture) unnamed_addr #2 align 2 {
  tail call fastcc void @_ZNK12v8_inspector12_GLOBAL__N_112ObjectMirror26buildObjectPreviewInternalEN2v85LocalINS2_7ContextEEEbbPiS6_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS7_14default_deleteISB_EEEE(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, %"class.v8::Context"* %1, i1 zeroext true, i1 zeroext false, i32* %2, i32* %3, %"class.std::__1::unique_ptr.417"* %4)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %"class.v8::Value"* @_ZNK12v8_inspector12_GLOBAL__N_112ObjectMirror7v8ValueEv(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"* nocapture readonly) unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 1, i32 0
  %3 = bitcast %"class.v8::Object"** %2 to %"class.v8::Value"**
  %4 = load %"class.v8::Value"*, %"class.v8::Value"** %3, align 8
  ret %"class.v8::Value"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12v8_inspector12_GLOBAL__N_115toProtocolValueEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEEiPNSt3__110unique_ptrINS_8protocol5ValueENS7_14default_deleteISA_EEEE(%"class.v8_crdtp::DispatchResponse"* noalias, %"class.v8::Context"*, %"class.v8::Value"*, i32, %"class.std::__1::unique_ptr.522"* nocapture) unnamed_addr #2 {
  %6 = alloca %"class.std::__1::basic_string.541", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = alloca %"class.std::__1::unique_ptr.522", align 8
  %9 = alloca %"class.v8_crdtp::DispatchResponse", align 8
  %10 = alloca %"class.std::__1::unique_ptr.522", align 8
  %11 = alloca %"class.v8_crdtp::DispatchResponse", align 8
  %12 = alloca %"class.v8_inspector::String16", align 8
  %13 = alloca %"class.std::__1::basic_string.541", align 8
  %14 = icmp eq i32 %3, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %5
  %16 = tail call i8* @_Znwm(i64 48) #16
  %17 = getelementptr inbounds %"class.std::__1::basic_string.541", %"class.std::__1::basic_string.541"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string.541", %"class.std::__1::basic_string.541"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast i64* %18 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %19, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %16, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.44, i64 0, i64 0), i64 34, i1 false) #15
  %20 = getelementptr inbounds i8, i8* %16, i64 34
  store i8 0, i8* %20, align 1
  call void @_ZN8v8_crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.v8_crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string.541"* nonnull %6) #15
  %21 = bitcast %"class.std::__1::basic_string.541"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %592

25:                                               ; preds = %15
  %26 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %26) #16
  br label %592

27:                                               ; preds = %5
  %28 = add nsw i32 %3, -1
  %29 = bitcast %"class.v8::Value"* %2 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, 3
  %32 = icmp eq i64 %31, 1
  br i1 %32, label %33, label %72

33:                                               ; preds = %27
  %34 = add i64 %30, -1
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = and i64 %30, -4294967296
  %38 = zext i32 %36 to i64
  %39 = or i64 %37, %38
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i16*
  %42 = load i16, i16* %41, align 2
  %43 = icmp eq i16 %42, 67
  br i1 %43, label %44, label %72

44:                                               ; preds = %33
  %45 = add i64 %30, 23
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %47, -2
  %49 = icmp eq i32 %48, 6
  br i1 %49, label %56, label %50

50:                                               ; preds = %44
  %51 = add i64 %30, 23
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, -2
  %55 = icmp eq i32 %54, 10
  br i1 %55, label %56, label %72

56:                                               ; preds = %50, %44
  %57 = tail call i8* @_Znwm(i64 16) #16
  %58 = bitcast i8* %57 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol5ValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds i8, i8* %57, i64 8
  %60 = bitcast i8* %59 to i32*
  store i32 0, i32* %60, align 8
  %61 = ptrtoint i8* %57 to i64
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.522"* %4, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %62, align 8
  %64 = bitcast %"class.std::__1::unique_ptr.522"* %4 to i64*
  store i64 %61, i64* %64, align 8
  %65 = icmp eq %"class.v8_inspector::protocol::Value"* %63, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %56
  %67 = bitcast %"class.v8_inspector::protocol::Value"* %63 to void (%"class.v8_inspector::protocol::Value"*)***
  %68 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %68, i64 2
  %70 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %69, align 8
  tail call void %70(%"class.v8_inspector::protocol::Value"* nonnull %63) #15
  br label %71

71:                                               ; preds = %66, %56
  tail call void @_ZN8v8_crdtp16DispatchResponse7SuccessEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  br label %592

72:                                               ; preds = %33, %27, %50
  %73 = tail call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %2) #15
  br i1 %73, label %74, label %94

74:                                               ; preds = %72
  %75 = bitcast %"class.v8::Value"* %2 to %"class.v8::Boolean"*
  %76 = tail call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %75) #15
  %77 = tail call i8* @_Znwm(i64 24) #16
  %78 = zext i1 %76 to i8
  %79 = bitcast i8* %77 to i32 (...)***
  %80 = getelementptr inbounds i8, i8* %77, i64 8
  %81 = bitcast i8* %80 to i32*
  store i32 1, i32* %81, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %79, align 8
  %82 = getelementptr inbounds i8, i8* %77, i64 16
  store i8 %78, i8* %82, align 8
  %83 = ptrtoint i8* %77 to i64
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.522"* %4, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %84, align 8
  %86 = bitcast %"class.std::__1::unique_ptr.522"* %4 to i64*
  store i64 %83, i64* %86, align 8
  %87 = icmp eq %"class.v8_inspector::protocol::Value"* %85, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %74
  %89 = bitcast %"class.v8_inspector::protocol::Value"* %85 to void (%"class.v8_inspector::protocol::Value"*)***
  %90 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %90, i64 2
  %92 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %91, align 8
  tail call void %92(%"class.v8_inspector::protocol::Value"* nonnull %85) #15
  br label %93

93:                                               ; preds = %88, %74
  tail call void @_ZN8v8_crdtp16DispatchResponse7SuccessEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  br label %592

94:                                               ; preds = %72
  %95 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %2) #15
  br i1 %95, label %96, label %145

96:                                               ; preds = %94
  %97 = bitcast %"class.v8::Value"* %2 to %"class.v8::Number"*
  %98 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %97) #15
  %99 = bitcast double %98 to i64
  %100 = fcmp ult double %98, 0xC1E0000000000000
  %101 = fcmp ugt double %98, 0x41DFFFFFFFC00000
  %102 = or i1 %100, %101
  %103 = icmp eq i64 %99, -9223372036854775808
  %104 = or i1 %102, %103
  br i1 %104, label %127, label %105

105:                                              ; preds = %96
  %106 = fptosi double %98 to i32
  %107 = sitofp i32 %106 to double
  %108 = fcmp oeq double %98, %107
  br i1 %108, label %109, label %127

109:                                              ; preds = %105
  %110 = tail call i8* @_Znwm(i64 24) #16
  %111 = bitcast i8* %110 to i32 (...)***
  %112 = getelementptr inbounds i8, i8* %110, i64 8
  %113 = bitcast i8* %112 to i32*
  store i32 2, i32* %113, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %111, align 8
  %114 = getelementptr inbounds i8, i8* %110, i64 16
  %115 = bitcast i8* %114 to i32*
  store i32 %106, i32* %115, align 8
  %116 = ptrtoint i8* %110 to i64
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.522"* %4, i64 0, i32 0, i32 0, i32 0
  %118 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %117, align 8
  %119 = bitcast %"class.std::__1::unique_ptr.522"* %4 to i64*
  store i64 %116, i64* %119, align 8
  %120 = icmp eq %"class.v8_inspector::protocol::Value"* %118, null
  br i1 %120, label %126, label %121

121:                                              ; preds = %109
  %122 = bitcast %"class.v8_inspector::protocol::Value"* %118 to void (%"class.v8_inspector::protocol::Value"*)***
  %123 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %123, i64 2
  %125 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %124, align 8
  tail call void %125(%"class.v8_inspector::protocol::Value"* nonnull %118) #15
  br label %126

126:                                              ; preds = %121, %109
  tail call void @_ZN8v8_crdtp16DispatchResponse7SuccessEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  br label %592

127:                                              ; preds = %96, %105
  %128 = tail call i8* @_Znwm(i64 24) #16
  %129 = bitcast i8* %128 to i32 (...)***
  %130 = getelementptr inbounds i8, i8* %128, i64 8
  %131 = bitcast i8* %130 to i32*
  store i32 3, i32* %131, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %129, align 8
  %132 = getelementptr inbounds i8, i8* %128, i64 16
  %133 = bitcast i8* %132 to double*
  store double %98, double* %133, align 8
  %134 = ptrtoint i8* %128 to i64
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.522"* %4, i64 0, i32 0, i32 0, i32 0
  %136 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %135, align 8
  %137 = bitcast %"class.std::__1::unique_ptr.522"* %4 to i64*
  store i64 %134, i64* %137, align 8
  %138 = icmp eq %"class.v8_inspector::protocol::Value"* %136, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %127
  %140 = bitcast %"class.v8_inspector::protocol::Value"* %136 to void (%"class.v8_inspector::protocol::Value"*)***
  %141 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %141, i64 2
  %143 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %142, align 8
  tail call void %143(%"class.v8_inspector::protocol::Value"* nonnull %136) #15
  br label %144

144:                                              ; preds = %139, %127
  tail call void @_ZN8v8_crdtp16DispatchResponse7SuccessEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  br label %592

145:                                              ; preds = %94
  %146 = load i64, i64* %29, align 8
  %147 = and i64 %146, 3
  %148 = icmp eq i64 %147, 1
  br i1 %148, label %149, label %375

149:                                              ; preds = %145
  %150 = add i64 %146, -1
  %151 = inttoptr i64 %150 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = and i64 %146, -4294967296
  %154 = zext i32 %152 to i64
  %155 = or i64 %153, %154
  %156 = add i64 %155, 7
  %157 = inttoptr i64 %156 to i16*
  %158 = load i16, i16* %157, align 2
  %159 = icmp ult i16 %158, 64
  br i1 %159, label %160, label %375

160:                                              ; preds = %149
  %161 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %161) #15
  %162 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %1) #15
  %163 = bitcast %"class.v8::Value"* %2 to %"class.v8::String"*
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %7, %"class.v8::Isolate"* %162, %"class.v8::String"* %163) #15
  %164 = call i8* @_Znwm(i64 48) #16
  %165 = bitcast i8* %164 to i32 (...)***
  %166 = getelementptr inbounds i8, i8* %164, i64 8
  %167 = bitcast i8* %166 to i32*
  store i32 4, i32* %167, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %165, align 8
  %168 = getelementptr inbounds i8, i8* %164, i64 16
  %169 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %170 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %169, i64 0, i32 1, i32 1
  %171 = load i8, i8* %170, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %174, label %173

173:                                              ; preds = %160
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* nonnull align 8 %161, i64 24, i1 false) #15
  br label %353

174:                                              ; preds = %160
  %175 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load i16*, i16** %175, align 8
  %177 = bitcast i16* %176 to i8*
  %178 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %179 = load i64, i64* %178, align 8
  %180 = icmp ult i64 %179, 11
  br i1 %180, label %181, label %184

181:                                              ; preds = %174
  %182 = trunc i64 %179 to i8
  %183 = getelementptr inbounds i8, i8* %164, i64 39
  store i8 %182, i8* %183, align 1
  br label %202

184:                                              ; preds = %174
  %185 = icmp ugt i64 %179, 9223372036854775791
  br i1 %185, label %186, label %188

186:                                              ; preds = %184
  %187 = bitcast i8* %168 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %187) #14
  unreachable

188:                                              ; preds = %184
  %189 = add nuw nsw i64 %179, 8
  %190 = and i64 %189, -8
  %191 = icmp slt i64 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %188
  call void @abort() #14
  unreachable

193:                                              ; preds = %188
  %194 = shl i64 %190, 1
  %195 = call i8* @_Znwm(i64 %194) #16
  %196 = bitcast i8* %168 to i8**
  store i8* %195, i8** %196, align 8
  %197 = or i64 %190, -9223372036854775808
  %198 = getelementptr inbounds i8, i8* %164, i64 32
  %199 = bitcast i8* %198 to i64*
  store i64 %197, i64* %199, align 8
  %200 = getelementptr inbounds i8, i8* %164, i64 24
  %201 = bitcast i8* %200 to i64*
  store i64 %179, i64* %201, align 8
  br label %202

202:                                              ; preds = %193, %181
  %203 = phi i8* [ %168, %181 ], [ %195, %193 ]
  %204 = bitcast i8* %203 to i16*
  %205 = add nuw nsw i64 %179, 1
  %206 = add i64 %179, 1
  %207 = icmp ult i64 %206, 16
  br i1 %207, label %300, label %208

208:                                              ; preds = %202
  %209 = shl i64 %179, 1
  %210 = add i64 %209, 2
  %211 = getelementptr i8, i8* %203, i64 %210
  %212 = add i64 %179, 1
  %213 = getelementptr i16, i16* %176, i64 %212
  %214 = bitcast i16* %213 to i8*
  %215 = icmp ult i8* %203, %214
  %216 = icmp ugt i8* %211, %177
  %217 = and i1 %215, %216
  br i1 %217, label %300, label %218

218:                                              ; preds = %208
  %219 = and i64 %206, -16
  %220 = getelementptr i16, i16* %204, i64 %219
  %221 = sub i64 %205, %219
  %222 = getelementptr i16, i16* %176, i64 %219
  %223 = add i64 %219, -16
  %224 = lshr exact i64 %223, 4
  %225 = add nuw nsw i64 %224, 1
  %226 = and i64 %225, 3
  %227 = icmp ult i64 %223, 48
  br i1 %227, label %279, label %228

228:                                              ; preds = %218
  %229 = sub nsw i64 %225, %226
  br label %230

230:                                              ; preds = %230, %228
  %231 = phi i64 [ 0, %228 ], [ %276, %230 ]
  %232 = phi i64 [ %229, %228 ], [ %277, %230 ]
  %233 = getelementptr i16, i16* %204, i64 %231
  %234 = getelementptr i16, i16* %176, i64 %231
  %235 = bitcast i16* %234 to <8 x i16>*
  %236 = load <8 x i16>, <8 x i16>* %235, align 2, !alias.scope !517
  %237 = getelementptr i16, i16* %234, i64 8
  %238 = bitcast i16* %237 to <8 x i16>*
  %239 = load <8 x i16>, <8 x i16>* %238, align 2, !alias.scope !517
  %240 = bitcast i16* %233 to <8 x i16>*
  store <8 x i16> %236, <8 x i16>* %240, align 2, !alias.scope !520, !noalias !517
  %241 = getelementptr i16, i16* %233, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  store <8 x i16> %239, <8 x i16>* %242, align 2, !alias.scope !520, !noalias !517
  %243 = or i64 %231, 16
  %244 = getelementptr i16, i16* %204, i64 %243
  %245 = getelementptr i16, i16* %176, i64 %243
  %246 = bitcast i16* %245 to <8 x i16>*
  %247 = load <8 x i16>, <8 x i16>* %246, align 2, !alias.scope !517
  %248 = getelementptr i16, i16* %245, i64 8
  %249 = bitcast i16* %248 to <8 x i16>*
  %250 = load <8 x i16>, <8 x i16>* %249, align 2, !alias.scope !517
  %251 = bitcast i16* %244 to <8 x i16>*
  store <8 x i16> %247, <8 x i16>* %251, align 2, !alias.scope !520, !noalias !517
  %252 = getelementptr i16, i16* %244, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  store <8 x i16> %250, <8 x i16>* %253, align 2, !alias.scope !520, !noalias !517
  %254 = or i64 %231, 32
  %255 = getelementptr i16, i16* %204, i64 %254
  %256 = getelementptr i16, i16* %176, i64 %254
  %257 = bitcast i16* %256 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2, !alias.scope !517
  %259 = getelementptr i16, i16* %256, i64 8
  %260 = bitcast i16* %259 to <8 x i16>*
  %261 = load <8 x i16>, <8 x i16>* %260, align 2, !alias.scope !517
  %262 = bitcast i16* %255 to <8 x i16>*
  store <8 x i16> %258, <8 x i16>* %262, align 2, !alias.scope !520, !noalias !517
  %263 = getelementptr i16, i16* %255, i64 8
  %264 = bitcast i16* %263 to <8 x i16>*
  store <8 x i16> %261, <8 x i16>* %264, align 2, !alias.scope !520, !noalias !517
  %265 = or i64 %231, 48
  %266 = getelementptr i16, i16* %204, i64 %265
  %267 = getelementptr i16, i16* %176, i64 %265
  %268 = bitcast i16* %267 to <8 x i16>*
  %269 = load <8 x i16>, <8 x i16>* %268, align 2, !alias.scope !517
  %270 = getelementptr i16, i16* %267, i64 8
  %271 = bitcast i16* %270 to <8 x i16>*
  %272 = load <8 x i16>, <8 x i16>* %271, align 2, !alias.scope !517
  %273 = bitcast i16* %266 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %273, align 2, !alias.scope !520, !noalias !517
  %274 = getelementptr i16, i16* %266, i64 8
  %275 = bitcast i16* %274 to <8 x i16>*
  store <8 x i16> %272, <8 x i16>* %275, align 2, !alias.scope !520, !noalias !517
  %276 = add i64 %231, 64
  %277 = add i64 %232, -4
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %279, label %230, !llvm.loop !522

279:                                              ; preds = %230, %218
  %280 = phi i64 [ 0, %218 ], [ %276, %230 ]
  %281 = icmp eq i64 %226, 0
  br i1 %281, label %298, label %282

282:                                              ; preds = %279, %282
  %283 = phi i64 [ %295, %282 ], [ %280, %279 ]
  %284 = phi i64 [ %296, %282 ], [ %226, %279 ]
  %285 = getelementptr i16, i16* %204, i64 %283
  %286 = getelementptr i16, i16* %176, i64 %283
  %287 = bitcast i16* %286 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !517
  %289 = getelementptr i16, i16* %286, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !517
  %292 = bitcast i16* %285 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %292, align 2, !alias.scope !520, !noalias !517
  %293 = getelementptr i16, i16* %285, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %294, align 2, !alias.scope !520, !noalias !517
  %295 = add i64 %283, 16
  %296 = add i64 %284, -1
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %282, !llvm.loop !523

298:                                              ; preds = %282, %279
  %299 = icmp eq i64 %206, %219
  br i1 %299, label %353, label %300

300:                                              ; preds = %298, %208, %202
  %301 = phi i16* [ %204, %208 ], [ %204, %202 ], [ %220, %298 ]
  %302 = phi i64 [ %205, %208 ], [ %205, %202 ], [ %221, %298 ]
  %303 = phi i16* [ %176, %208 ], [ %176, %202 ], [ %222, %298 ]
  %304 = add i64 %302, -1
  %305 = and i64 %302, 7
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %318, label %307

307:                                              ; preds = %300, %307
  %308 = phi i16* [ %314, %307 ], [ %301, %300 ]
  %309 = phi i64 [ %313, %307 ], [ %302, %300 ]
  %310 = phi i16* [ %315, %307 ], [ %303, %300 ]
  %311 = phi i64 [ %316, %307 ], [ %305, %300 ]
  %312 = load i16, i16* %310, align 2
  store i16 %312, i16* %308, align 2
  %313 = add i64 %309, -1
  %314 = getelementptr inbounds i16, i16* %308, i64 1
  %315 = getelementptr inbounds i16, i16* %310, i64 1
  %316 = add i64 %311, -1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %318, label %307, !llvm.loop !524

318:                                              ; preds = %307, %300
  %319 = phi i16* [ %301, %300 ], [ %314, %307 ]
  %320 = phi i64 [ %302, %300 ], [ %313, %307 ]
  %321 = phi i16* [ %303, %300 ], [ %315, %307 ]
  %322 = icmp ult i64 %304, 7
  br i1 %322, label %353, label %323

323:                                              ; preds = %318, %323
  %324 = phi i16* [ %350, %323 ], [ %319, %318 ]
  %325 = phi i64 [ %349, %323 ], [ %320, %318 ]
  %326 = phi i16* [ %351, %323 ], [ %321, %318 ]
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %324, align 2
  %328 = getelementptr inbounds i16, i16* %324, i64 1
  %329 = getelementptr inbounds i16, i16* %326, i64 1
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %324, i64 2
  %332 = getelementptr inbounds i16, i16* %326, i64 2
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %324, i64 3
  %335 = getelementptr inbounds i16, i16* %326, i64 3
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %324, i64 4
  %338 = getelementptr inbounds i16, i16* %326, i64 4
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %324, i64 5
  %341 = getelementptr inbounds i16, i16* %326, i64 5
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = getelementptr inbounds i16, i16* %324, i64 6
  %344 = getelementptr inbounds i16, i16* %326, i64 6
  %345 = load i16, i16* %344, align 2
  store i16 %345, i16* %343, align 2
  %346 = getelementptr inbounds i16, i16* %324, i64 7
  %347 = getelementptr inbounds i16, i16* %326, i64 7
  %348 = load i16, i16* %347, align 2
  store i16 %348, i16* %346, align 2
  %349 = add i64 %325, -8
  %350 = getelementptr inbounds i16, i16* %324, i64 8
  %351 = getelementptr inbounds i16, i16* %326, i64 8
  %352 = icmp eq i64 %349, 0
  br i1 %352, label %353, label %323, !llvm.loop !525

353:                                              ; preds = %318, %323, %298, %173
  %354 = getelementptr inbounds i8, i8* %164, i64 40
  %355 = bitcast i8* %354 to i64*
  %356 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 1
  %357 = load i64, i64* %356, align 8
  store i64 %357, i64* %355, align 8
  %358 = ptrtoint i8* %164 to i64
  %359 = getelementptr inbounds %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.522"* %4, i64 0, i32 0, i32 0, i32 0
  %360 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %359, align 8
  %361 = bitcast %"class.std::__1::unique_ptr.522"* %4 to i64*
  store i64 %358, i64* %361, align 8
  %362 = icmp eq %"class.v8_inspector::protocol::Value"* %360, null
  br i1 %362, label %368, label %363

363:                                              ; preds = %353
  %364 = bitcast %"class.v8_inspector::protocol::Value"* %360 to void (%"class.v8_inspector::protocol::Value"*)***
  %365 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %364, align 8
  %366 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %365, i64 2
  %367 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %366, align 8
  call void %367(%"class.v8_inspector::protocol::Value"* nonnull %360) #15
  br label %368

368:                                              ; preds = %363, %353
  %369 = load i8, i8* %170, align 1
  %370 = icmp slt i8 %369, 0
  br i1 %370, label %371, label %374

371:                                              ; preds = %368
  %372 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %373 = load i8*, i8** %372, align 8
  call void @_ZdlPv(i8* %373) #16
  br label %374

374:                                              ; preds = %368, %371
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %161) #15
  call void @_ZN8v8_crdtp16DispatchResponse7SuccessEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  br label %592

375:                                              ; preds = %145, %149
  %376 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #15
  br i1 %376, label %377, label %445

377:                                              ; preds = %375
  %378 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  %379 = tail call i8* @_Znwm(i64 40) #16
  %380 = bitcast i8* %379 to %"class.v8_inspector::protocol::ListValue"*
  tail call void @_ZN12v8_inspector8protocol9ListValueC1Ev(%"class.v8_inspector::protocol::ListValue"* nonnull %380) #15
  %381 = ptrtoint i8* %379 to i64
  %382 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %378) #15
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %429, label %384

384:                                              ; preds = %377
  %385 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %386 = bitcast %"class.std::__1::unique_ptr.522"* %8 to i8*
  %387 = bitcast %"class.std::__1::unique_ptr.522"* %8 to i64*
  %388 = bitcast %"class.v8_crdtp::DispatchResponse"* %9 to i8*
  %389 = getelementptr inbounds %"class.v8_crdtp::DispatchResponse", %"class.v8_crdtp::DispatchResponse"* %9, i64 0, i32 0
  %390 = getelementptr inbounds %"class.v8_crdtp::DispatchResponse", %"class.v8_crdtp::DispatchResponse"* %0, i64 0, i32 0
  %391 = getelementptr inbounds %"class.v8_crdtp::DispatchResponse", %"class.v8_crdtp::DispatchResponse"* %0, i64 0, i32 1
  %392 = getelementptr inbounds %"class.v8_crdtp::DispatchResponse", %"class.v8_crdtp::DispatchResponse"* %9, i64 0, i32 1
  %393 = bitcast %"class.std::__1::basic_string.541"* %391 to i8*
  %394 = bitcast %"class.std::__1::basic_string.541"* %392 to i8*
  %395 = getelementptr inbounds %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.522"* %8, i64 0, i32 0, i32 0, i32 0
  %396 = bitcast %"class.std::__1::basic_string.541"* %392 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %397 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %396, i64 0, i32 1, i32 0
  %398 = getelementptr inbounds %"class.std::__1::basic_string.541", %"class.std::__1::basic_string.541"* %392, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %402

399:                                              ; preds = %415, %427
  %400 = add nuw i32 %403, 1
  %401 = icmp eq i32 %400, %382
  br i1 %401, label %429, label %402

402:                                              ; preds = %399, %384
  %403 = phi i32 [ 0, %384 ], [ %400, %399 ]
  %404 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %385, %"class.v8::Context"* %1, i32 %403) #15
  %405 = icmp eq %"class.v8::Value"* %404, null
  br i1 %405, label %406, label %407

406:                                              ; preds = %402
  call void @_ZN8v8_crdtp16DispatchResponse13InternalErrorEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  br label %440

407:                                              ; preds = %402
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %386) #15
  store i64 0, i64* %387, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %388) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_115toProtocolValueEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEEiPNSt3__110unique_ptrINS_8protocol5ValueENS7_14default_deleteISA_EEEE(%"class.v8_crdtp::DispatchResponse"* noalias nonnull %9, %"class.v8::Context"* %1, %"class.v8::Value"* nonnull %404, i32 %28, %"class.std::__1::unique_ptr.522"* nonnull %8)
  %408 = load i32, i32* %389, align 8
  %409 = icmp eq i32 %408, 1
  br i1 %409, label %411, label %410

410:                                              ; preds = %407
  store i32 %408, i32* %390, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %393, i8* align 8 %394, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %394, i8 0, i64 24, i1 false) #15
  br label %418

411:                                              ; preds = %407
  %412 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %395, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %395, align 8
  call void @_ZN12v8_inspector8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.v8_inspector::protocol::ListValue"* nonnull %380, %"class.v8_inspector::protocol::Value"* %412) #15
  %413 = load i8, i8* %397, align 1
  %414 = icmp slt i8 %413, 0
  br i1 %414, label %416, label %415

415:                                              ; preds = %411
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %388) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %386) #15
  br label %399

416:                                              ; preds = %411
  %417 = load i8*, i8** %398, align 8
  call void @_ZdlPv(i8* %417) #16
  br label %418

418:                                              ; preds = %410, %416
  %419 = phi i32 [ 0, %416 ], [ 1, %410 ]
  %420 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %395, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %388) #15
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %395, align 8
  %421 = icmp eq %"class.v8_inspector::protocol::Value"* %420, null
  br i1 %421, label %427, label %422

422:                                              ; preds = %418
  %423 = bitcast %"class.v8_inspector::protocol::Value"* %420 to void (%"class.v8_inspector::protocol::Value"*)***
  %424 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %423, align 8
  %425 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %424, i64 2
  %426 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %425, align 8
  call void %426(%"class.v8_inspector::protocol::Value"* nonnull %420) #15
  br label %427

427:                                              ; preds = %422, %418
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %386) #15
  %428 = icmp eq i32 %419, 0
  br i1 %428, label %399, label %440

429:                                              ; preds = %399, %377
  %430 = getelementptr inbounds %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.522"* %4, i64 0, i32 0, i32 0, i32 0
  %431 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %430, align 8
  %432 = bitcast %"class.std::__1::unique_ptr.522"* %4 to i64*
  store i64 %381, i64* %432, align 8
  %433 = icmp eq %"class.v8_inspector::protocol::Value"* %431, null
  br i1 %433, label %439, label %434

434:                                              ; preds = %429
  %435 = bitcast %"class.v8_inspector::protocol::Value"* %431 to void (%"class.v8_inspector::protocol::Value"*)***
  %436 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %435, align 8
  %437 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %436, i64 2
  %438 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %437, align 8
  call void %438(%"class.v8_inspector::protocol::Value"* nonnull %431) #15
  br label %439

439:                                              ; preds = %434, %429
  call void @_ZN8v8_crdtp16DispatchResponse7SuccessEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  br label %592

440:                                              ; preds = %427, %406
  %441 = bitcast i8* %379 to void (%"class.v8_inspector::protocol::ListValue"*)***
  %442 = load void (%"class.v8_inspector::protocol::ListValue"*)**, void (%"class.v8_inspector::protocol::ListValue"*)*** %441, align 8
  %443 = getelementptr inbounds void (%"class.v8_inspector::protocol::ListValue"*)*, void (%"class.v8_inspector::protocol::ListValue"*)** %442, i64 2
  %444 = load void (%"class.v8_inspector::protocol::ListValue"*)*, void (%"class.v8_inspector::protocol::ListValue"*)** %443, align 8
  call void %444(%"class.v8_inspector::protocol::ListValue"* nonnull %380) #15
  br label %592

445:                                              ; preds = %375
  %446 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #15
  br i1 %446, label %447, label %580

447:                                              ; preds = %445
  %448 = tail call i8* @_Znwm(i64 80) #16
  %449 = bitcast i8* %448 to %"class.v8_inspector::protocol::DictionaryValue"*
  tail call void @_ZN12v8_inspector8protocol15DictionaryValueC1Ev(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %449) #15
  %450 = ptrtoint i8* %448 to i64
  %451 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %452 = tail call %"class.v8::Array"* @_ZN2v86Object16GetPropertyNamesENS_5LocalINS_7ContextEEE(%"class.v8::Object"* %451, %"class.v8::Context"* %1) #15
  %453 = icmp eq %"class.v8::Array"* %452, null
  br i1 %453, label %454, label %455

454:                                              ; preds = %447
  tail call void @_ZN8v8_crdtp16DispatchResponse13InternalErrorEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  br label %575

455:                                              ; preds = %447
  %456 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* nonnull %452) #15
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %564, label %458

458:                                              ; preds = %455
  %459 = bitcast %"class.v8::Array"* %452 to %"class.v8::Object"*
  %460 = bitcast %"class.std::__1::unique_ptr.522"* %10 to i8*
  %461 = bitcast %"class.std::__1::unique_ptr.522"* %10 to i64*
  %462 = bitcast %"class.v8_crdtp::DispatchResponse"* %11 to i8*
  %463 = getelementptr inbounds %"class.v8_crdtp::DispatchResponse", %"class.v8_crdtp::DispatchResponse"* %11, i64 0, i32 0
  %464 = getelementptr inbounds %"class.v8_crdtp::DispatchResponse", %"class.v8_crdtp::DispatchResponse"* %0, i64 0, i32 0
  %465 = getelementptr inbounds %"class.v8_crdtp::DispatchResponse", %"class.v8_crdtp::DispatchResponse"* %0, i64 0, i32 1
  %466 = getelementptr inbounds %"class.v8_crdtp::DispatchResponse", %"class.v8_crdtp::DispatchResponse"* %11, i64 0, i32 1
  %467 = bitcast %"class.std::__1::basic_string.541"* %465 to i8*
  %468 = bitcast %"class.std::__1::basic_string.541"* %466 to i8*
  %469 = bitcast %"class.v8_inspector::String16"* %12 to i8*
  %470 = getelementptr inbounds %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.522"* %10, i64 0, i32 0, i32 0, i32 0
  %471 = bitcast %"class.v8_inspector::String16"* %12 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %472 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %471, i64 0, i32 1, i32 1
  %473 = bitcast %"class.v8_inspector::String16"* %12 to i8**
  %474 = bitcast %"class.std::__1::basic_string.541"* %466 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %475 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %474, i64 0, i32 1, i32 0
  %476 = getelementptr inbounds %"class.std::__1::basic_string.541", %"class.std::__1::basic_string.541"* %466, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %477

477:                                              ; preds = %561, %458
  %478 = phi i32 [ 0, %458 ], [ %562, %561 ]
  %479 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* nonnull %459, %"class.v8::Context"* %1, i32 %478) #15
  %480 = icmp eq %"class.v8::Value"* %479, null
  br i1 %480, label %481, label %482

481:                                              ; preds = %477
  call void @_ZN8v8_crdtp16DispatchResponse13InternalErrorEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  br label %575

482:                                              ; preds = %477
  %483 = bitcast %"class.v8::Value"* %479 to i64*
  %484 = load i64, i64* %483, align 8
  %485 = and i64 %484, 3
  %486 = icmp eq i64 %485, 1
  br i1 %486, label %487, label %505

487:                                              ; preds = %482
  %488 = add i64 %484, -1
  %489 = inttoptr i64 %488 to i32*
  %490 = load i32, i32* %489, align 4
  %491 = and i64 %484, -4294967296
  %492 = zext i32 %490 to i64
  %493 = or i64 %491, %492
  %494 = add i64 %493, 7
  %495 = inttoptr i64 %494 to i16*
  %496 = load i16, i16* %495, align 2
  %497 = icmp ult i16 %496, 64
  br i1 %497, label %498, label %505

498:                                              ; preds = %487
  %499 = bitcast %"class.v8::Value"* %479 to %"class.v8::Name"*
  %500 = call i16 @_ZN2v86Object20HasRealNamedPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"* %451, %"class.v8::Context"* %1, %"class.v8::Name"* nonnull %499) #15
  %501 = trunc i16 %500 to i8
  %502 = icmp ne i8 %501, 0
  %503 = icmp ugt i16 %500, 255
  %504 = and i1 %503, %502
  br i1 %504, label %505, label %561

505:                                              ; preds = %498, %482, %487
  %506 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* nonnull %479, %"class.v8::Context"* %1) #15
  %507 = icmp eq %"class.v8::String"* %506, null
  br i1 %507, label %561, label %508

508:                                              ; preds = %505
  %509 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %451, %"class.v8::Context"* %1, %"class.v8::Value"* nonnull %479) #15
  %510 = icmp eq %"class.v8::Value"* %509, null
  br i1 %510, label %511, label %512

511:                                              ; preds = %508
  call void @_ZN8v8_crdtp16DispatchResponse13InternalErrorEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  br label %575

512:                                              ; preds = %508
  %513 = bitcast %"class.v8::Value"* %509 to i64*
  %514 = load i64, i64* %513, align 8
  %515 = and i64 %514, 3
  %516 = icmp eq i64 %515, 1
  br i1 %516, label %517, label %534

517:                                              ; preds = %512
  %518 = add i64 %514, -1
  %519 = inttoptr i64 %518 to i32*
  %520 = load i32, i32* %519, align 4
  %521 = and i64 %514, -4294967296
  %522 = zext i32 %520 to i64
  %523 = or i64 %521, %522
  %524 = add i64 %523, 7
  %525 = inttoptr i64 %524 to i16*
  %526 = load i16, i16* %525, align 2
  %527 = icmp eq i16 %526, 67
  br i1 %527, label %528, label %534

528:                                              ; preds = %517
  %529 = add i64 %514, 23
  %530 = inttoptr i64 %529 to i32*
  %531 = load i32, i32* %530, align 4
  %532 = and i32 %531, -2
  %533 = icmp eq i32 %532, 10
  br i1 %533, label %561, label %534

534:                                              ; preds = %517, %512, %528
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %460) #15
  store i64 0, i64* %461, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %462) #15
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_115toProtocolValueEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEEiPNSt3__110unique_ptrINS_8protocol5ValueENS7_14default_deleteISA_EEEE(%"class.v8_crdtp::DispatchResponse"* noalias nonnull %11, %"class.v8::Context"* %1, %"class.v8::Value"* nonnull %509, i32 %28, %"class.std::__1::unique_ptr.522"* nonnull %10)
  %535 = load i32, i32* %463, align 8
  %536 = icmp eq i32 %535, 1
  br i1 %536, label %538, label %537

537:                                              ; preds = %534
  store i32 %535, i32* %464, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %467, i8* align 8 %468, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %468, i8 0, i64 24, i1 false) #15
  br label %550

538:                                              ; preds = %534
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %469) #15
  %539 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %1) #15
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %12, %"class.v8::Isolate"* %539, %"class.v8::String"* nonnull %506) #15
  %540 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %470, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %470, align 8
  call void @_ZN12v8_inspector8protocol15DictionaryValue8setValueERKNS_8String16ENSt3__110unique_ptrINS0_5ValueENS5_14default_deleteIS7_EEEE(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %449, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %12, %"class.v8_inspector::protocol::Value"* %540) #15
  %541 = load i8, i8* %472, align 1
  %542 = icmp slt i8 %541, 0
  br i1 %542, label %543, label %545

543:                                              ; preds = %538
  %544 = load i8*, i8** %473, align 8
  call void @_ZdlPv(i8* %544) #16
  br label %545

545:                                              ; preds = %543, %538
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %469) #15
  %546 = load i8, i8* %475, align 1
  %547 = icmp slt i8 %546, 0
  br i1 %547, label %548, label %550

548:                                              ; preds = %545
  %549 = load i8*, i8** %476, align 8
  call void @_ZdlPv(i8* %549) #16
  br label %550

550:                                              ; preds = %537, %545, %548
  %551 = phi i32 [ 1, %537 ], [ 0, %545 ], [ 0, %548 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %462) #15
  %552 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %470, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %470, align 8
  %553 = icmp eq %"class.v8_inspector::protocol::Value"* %552, null
  br i1 %553, label %559, label %554

554:                                              ; preds = %550
  %555 = bitcast %"class.v8_inspector::protocol::Value"* %552 to void (%"class.v8_inspector::protocol::Value"*)***
  %556 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %555, align 8
  %557 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %556, i64 2
  %558 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %557, align 8
  call void %558(%"class.v8_inspector::protocol::Value"* nonnull %552) #15
  br label %559

559:                                              ; preds = %554, %550
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %460) #15
  %560 = icmp eq i32 %551, 0
  br i1 %560, label %561, label %575

561:                                              ; preds = %505, %498, %559, %528
  %562 = add nuw i32 %478, 1
  %563 = icmp eq i32 %562, %456
  br i1 %563, label %564, label %477

564:                                              ; preds = %561, %455
  %565 = getelementptr inbounds %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.522"* %4, i64 0, i32 0, i32 0, i32 0
  %566 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %565, align 8
  %567 = bitcast %"class.std::__1::unique_ptr.522"* %4 to i64*
  store i64 %450, i64* %567, align 8
  %568 = icmp eq %"class.v8_inspector::protocol::Value"* %566, null
  br i1 %568, label %574, label %569

569:                                              ; preds = %564
  %570 = bitcast %"class.v8_inspector::protocol::Value"* %566 to void (%"class.v8_inspector::protocol::Value"*)***
  %571 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %570, align 8
  %572 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %571, i64 2
  %573 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %572, align 8
  call void %573(%"class.v8_inspector::protocol::Value"* nonnull %566) #15
  br label %574

574:                                              ; preds = %569, %564
  call void @_ZN8v8_crdtp16DispatchResponse7SuccessEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  br label %592

575:                                              ; preds = %559, %454, %481, %511
  %576 = bitcast i8* %448 to void (%"class.v8_inspector::protocol::DictionaryValue"*)***
  %577 = load void (%"class.v8_inspector::protocol::DictionaryValue"*)**, void (%"class.v8_inspector::protocol::DictionaryValue"*)*** %576, align 8
  %578 = getelementptr inbounds void (%"class.v8_inspector::protocol::DictionaryValue"*)*, void (%"class.v8_inspector::protocol::DictionaryValue"*)** %577, i64 2
  %579 = load void (%"class.v8_inspector::protocol::DictionaryValue"*)*, void (%"class.v8_inspector::protocol::DictionaryValue"*)** %578, align 8
  call void %579(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %449) #15
  br label %592

580:                                              ; preds = %445
  %581 = tail call i8* @_Znwm(i64 48) #16
  %582 = getelementptr inbounds %"class.std::__1::basic_string.541", %"class.std::__1::basic_string.541"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %581, i8** %582, align 8
  %583 = getelementptr inbounds %"class.std::__1::basic_string.541", %"class.std::__1::basic_string.541"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %584 = bitcast i64* %583 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %584, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %581, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.45, i64 0, i64 0), i64 36, i1 false) #15
  %585 = getelementptr inbounds i8, i8* %581, i64 36
  store i8 0, i8* %585, align 1
  call void @_ZN8v8_crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.v8_crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string.541"* nonnull %13) #15
  %586 = bitcast %"class.std::__1::basic_string.541"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %587 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %586, i64 0, i32 1, i32 0
  %588 = load i8, i8* %587, align 1
  %589 = icmp slt i8 %588, 0
  br i1 %589, label %590, label %592

590:                                              ; preds = %580
  %591 = load i8*, i8** %582, align 8
  call void @_ZdlPv(i8* %591) #16
  br label %592

592:                                              ; preds = %590, %580, %575, %574, %440, %439, %144, %126, %25, %15, %374, %93, %71
  ret void
}

declare void @_ZN8v8_crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.v8_crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string.541"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #4

declare double @_ZNK2v86Number5ValueEv(%"class.v8::Number"*) local_unnamed_addr #4

declare void @_ZN8v8_crdtp16DispatchResponse13InternalErrorEv(%"class.v8_crdtp::DispatchResponse"* sret) local_unnamed_addr #4

declare void @_ZN12v8_inspector8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.v8_inspector::protocol::ListValue"*, %"class.v8_inspector::protocol::Value"*) local_unnamed_addr #4

declare %"class.v8::Array"* @_ZN2v86Object16GetPropertyNamesENS_5LocalINS_7ContextEEE(%"class.v8::Object"*, %"class.v8::Context"*) local_unnamed_addr #4

declare i16 @_ZN2v86Object20HasRealNamedPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*) local_unnamed_addr #4

declare void @_ZN12v8_inspector8protocol15DictionaryValue8setValueERKNS_8String16ENSt3__110unique_ptrINS0_5ValueENS5_14default_deleteIS7_EEEE(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), %"class.v8_inspector::protocol::Value"*) local_unnamed_addr #4

declare void @_ZN12v8_inspector8protocol9ListValueC1Ev(%"class.v8_inspector::protocol::ListValue"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol7Runtime12RemoteObject12setClassNameERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  %10 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 24, i1 false) #15
  br label %186

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 11
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = bitcast %"class.v8_inspector::String16"* %3 to i16*
  %19 = trunc i64 %15 to i8
  %20 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %20, i64 0, i32 1, i32 1
  store i8 %19, i8* %21, align 1
  br label %39

22:                                               ; preds = %11
  %23 = icmp ugt i64 %15, 9223372036854775791
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.v8_inspector::String16"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #14
  unreachable

26:                                               ; preds = %22
  %27 = add nuw nsw i64 %15, 8
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #16
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  %37 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %17
  %40 = phi i16* [ %18, %17 ], [ %34, %31 ]
  %41 = add nuw nsw i64 %15, 1
  %42 = add i64 %15, 1
  %43 = icmp ult i64 %42, 16
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  %45 = add i64 %15, 1
  %46 = getelementptr i16, i16* %40, i64 %45
  %47 = getelementptr i16, i16* %13, i64 %45
  %48 = icmp ult i16* %40, %47
  %49 = icmp ult i16* %13, %46
  %50 = and i1 %48, %49
  br i1 %50, label %133, label %51

51:                                               ; preds = %44
  %52 = and i64 %42, -16
  %53 = getelementptr i16, i16* %40, i64 %52
  %54 = sub i64 %41, %52
  %55 = getelementptr i16, i16* %13, i64 %52
  %56 = add i64 %52, -16
  %57 = lshr exact i64 %56, 4
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 48
  br i1 %60, label %112, label %61

61:                                               ; preds = %51
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr i16, i16* %40, i64 %64
  %67 = getelementptr i16, i16* %13, i64 %64
  %68 = bitcast i16* %67 to <8 x i16>*
  %69 = load <8 x i16>, <8 x i16>* %68, align 2, !alias.scope !526
  %70 = getelementptr i16, i16* %67, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !526
  %73 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %73, align 2, !alias.scope !529, !noalias !526
  %74 = getelementptr i16, i16* %66, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %75, align 2, !alias.scope !529, !noalias !526
  %76 = or i64 %64, 16
  %77 = getelementptr i16, i16* %40, i64 %76
  %78 = getelementptr i16, i16* %13, i64 %76
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !526
  %81 = getelementptr i16, i16* %78, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !526
  %84 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !529, !noalias !526
  %85 = getelementptr i16, i16* %77, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !529, !noalias !526
  %87 = or i64 %64, 32
  %88 = getelementptr i16, i16* %40, i64 %87
  %89 = getelementptr i16, i16* %13, i64 %87
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !526
  %92 = getelementptr i16, i16* %89, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !526
  %95 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !529, !noalias !526
  %96 = getelementptr i16, i16* %88, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !529, !noalias !526
  %98 = or i64 %64, 48
  %99 = getelementptr i16, i16* %40, i64 %98
  %100 = getelementptr i16, i16* %13, i64 %98
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !526
  %103 = getelementptr i16, i16* %100, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !526
  %106 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !529, !noalias !526
  %107 = getelementptr i16, i16* %99, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !529, !noalias !526
  %109 = add i64 %64, 64
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !531

112:                                              ; preds = %63, %51
  %113 = phi i64 [ 0, %51 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr i16, i16* %40, i64 %116
  %119 = getelementptr i16, i16* %13, i64 %116
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !526
  %122 = getelementptr i16, i16* %119, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !526
  %125 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !529, !noalias !526
  %126 = getelementptr i16, i16* %118, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !529, !noalias !526
  %128 = add i64 %116, 16
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !532

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %42, %52
  br i1 %132, label %186, label %133

133:                                              ; preds = %131, %44, %39
  %134 = phi i16* [ %40, %44 ], [ %40, %39 ], [ %53, %131 ]
  %135 = phi i64 [ %41, %44 ], [ %41, %39 ], [ %54, %131 ]
  %136 = phi i16* [ %13, %44 ], [ %13, %39 ], [ %55, %131 ]
  %137 = add i64 %135, -1
  %138 = and i64 %135, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133, %140
  %141 = phi i16* [ %147, %140 ], [ %134, %133 ]
  %142 = phi i64 [ %146, %140 ], [ %135, %133 ]
  %143 = phi i16* [ %148, %140 ], [ %136, %133 ]
  %144 = phi i64 [ %149, %140 ], [ %138, %133 ]
  %145 = load i16, i16* %143, align 2
  store i16 %145, i16* %141, align 2
  %146 = add i64 %142, -1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = getelementptr inbounds i16, i16* %143, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !533

151:                                              ; preds = %140, %133
  %152 = phi i16* [ %134, %133 ], [ %147, %140 ]
  %153 = phi i64 [ %135, %133 ], [ %146, %140 ]
  %154 = phi i16* [ %136, %133 ], [ %148, %140 ]
  %155 = icmp ult i64 %137, 7
  br i1 %155, label %186, label %156

156:                                              ; preds = %151, %156
  %157 = phi i16* [ %183, %156 ], [ %152, %151 ]
  %158 = phi i64 [ %182, %156 ], [ %153, %151 ]
  %159 = phi i16* [ %184, %156 ], [ %154, %151 ]
  %160 = load i16, i16* %159, align 2
  store i16 %160, i16* %157, align 2
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %159, i64 1
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = getelementptr inbounds i16, i16* %159, i64 2
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = getelementptr inbounds i16, i16* %159, i64 3
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = getelementptr inbounds i16, i16* %159, i64 4
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = getelementptr inbounds i16, i16* %159, i64 5
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = getelementptr inbounds i16, i16* %159, i64 6
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = getelementptr inbounds i16, i16* %159, i64 7
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = add i64 %158, -8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = getelementptr inbounds i16, i16* %159, i64 8
  %185 = icmp eq i64 %182, 0
  br i1 %185, label %186, label %156, !llvm.loop !534

186:                                              ; preds = %151, %156, %131, %8
  %187 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %188 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %189 = load i64, i64* %188, align 8
  store i64 %189, i64* %187, align 8
  %190 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::RemoteObject", %"class.v8_inspector::protocol::Runtime::RemoteObject"* %0, i64 0, i32 4, i32 1, i32 0
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0
  %192 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %190, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %191) #15
  %193 = load i64, i64* %187, align 8
  %194 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::RemoteObject", %"class.v8_inspector::protocol::Runtime::RemoteObject"* %0, i64 0, i32 4, i32 1, i32 1
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::RemoteObject", %"class.v8_inspector::protocol::Runtime::RemoteObject"* %0, i64 0, i32 4, i32 0
  store i8 1, i8* %195, align 8
  %196 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %196, i64 0, i32 1, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %186
  %201 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #16
  br label %203

203:                                              ; preds = %186, %200
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12v8_inspector12_GLOBAL__N_116abbreviateStringERKNS_8String16ENS0_14AbbreviateModeE(%"class.v8_inspector::String16"* noalias, %"class.v8_inspector::String16"* dereferenceable(32), i32) unnamed_addr #2 {
  %4 = alloca i16, align 2
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %11 to i64
  %16 = select i1 %12, i64 %14, i64 %15
  %17 = icmp ult i64 %16, 101
  br i1 %17, label %18, label %199

18:                                               ; preds = %3
  br i1 %12, label %22, label %19

19:                                               ; preds = %18
  %20 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  %21 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #15
  br label %195

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = icmp ult i64 %14, 11
  br i1 %25, label %26, label %31

26:                                               ; preds = %22
  %27 = bitcast %"class.v8_inspector::String16"* %0 to i16*
  %28 = trunc i64 %14 to i8
  %29 = bitcast %"class.v8_inspector::String16"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %29, i64 0, i32 1, i32 1
  store i8 %28, i8* %30, align 1
  br label %48

31:                                               ; preds = %22
  %32 = icmp ugt i64 %14, 9223372036854775791
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast %"class.v8_inspector::String16"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %34) #14
  unreachable

35:                                               ; preds = %31
  %36 = add nuw nsw i64 %14, 8
  %37 = and i64 %36, -8
  %38 = icmp slt i64 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @abort() #14
  unreachable

40:                                               ; preds = %35
  %41 = shl i64 %37, 1
  %42 = tail call i8* @_Znwm(i64 %41) #16
  %43 = bitcast i8* %42 to i16*
  %44 = bitcast %"class.v8_inspector::String16"* %0 to i8**
  store i8* %42, i8** %44, align 8
  %45 = or i64 %37, -9223372036854775808
  %46 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %47, align 8
  br label %48

48:                                               ; preds = %40, %26
  %49 = phi i16* [ %27, %26 ], [ %43, %40 ]
  %50 = add nuw nsw i64 %14, 1
  %51 = add i64 %14, 1
  %52 = icmp ult i64 %51, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %48
  %54 = add i64 %14, 1
  %55 = getelementptr i16, i16* %49, i64 %54
  %56 = getelementptr i16, i16* %24, i64 %54
  %57 = icmp ult i16* %49, %56
  %58 = icmp ult i16* %24, %55
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %51, -16
  %62 = getelementptr i16, i16* %49, i64 %61
  %63 = sub i64 %50, %61
  %64 = getelementptr i16, i16* %24, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %49, i64 %73
  %76 = getelementptr i16, i16* %24, i64 %73
  %77 = bitcast i16* %76 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !535
  %79 = getelementptr i16, i16* %76, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !535
  %82 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !538, !noalias !535
  %83 = getelementptr i16, i16* %75, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !538, !noalias !535
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %49, i64 %85
  %87 = getelementptr i16, i16* %24, i64 %85
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !535
  %90 = getelementptr i16, i16* %87, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !535
  %93 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !538, !noalias !535
  %94 = getelementptr i16, i16* %86, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !538, !noalias !535
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %49, i64 %96
  %98 = getelementptr i16, i16* %24, i64 %96
  %99 = bitcast i16* %98 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !535
  %101 = getelementptr i16, i16* %98, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !535
  %104 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !538, !noalias !535
  %105 = getelementptr i16, i16* %97, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !538, !noalias !535
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %49, i64 %107
  %109 = getelementptr i16, i16* %24, i64 %107
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !535
  %112 = getelementptr i16, i16* %109, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !535
  %115 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !538, !noalias !535
  %116 = getelementptr i16, i16* %108, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !538, !noalias !535
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !540

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %49, i64 %125
  %128 = getelementptr i16, i16* %24, i64 %125
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !535
  %131 = getelementptr i16, i16* %128, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !535
  %134 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !538, !noalias !535
  %135 = getelementptr i16, i16* %127, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !538, !noalias !535
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !541

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %51, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %48
  %143 = phi i16* [ %49, %53 ], [ %49, %48 ], [ %62, %140 ]
  %144 = phi i64 [ %50, %53 ], [ %50, %48 ], [ %63, %140 ]
  %145 = phi i16* [ %24, %53 ], [ %24, %48 ], [ %64, %140 ]
  %146 = add i64 %144, -1
  %147 = and i64 %144, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i16* [ %156, %149 ], [ %143, %142 ]
  %151 = phi i64 [ %155, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %157, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %152, align 2
  store i16 %154, i16* %150, align 2
  %155 = add i64 %151, -1
  %156 = getelementptr inbounds i16, i16* %150, i64 1
  %157 = getelementptr inbounds i16, i16* %152, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !542

160:                                              ; preds = %149, %142
  %161 = phi i16* [ %143, %142 ], [ %156, %149 ]
  %162 = phi i64 [ %144, %142 ], [ %155, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %157, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i16* [ %192, %165 ], [ %161, %160 ]
  %167 = phi i64 [ %191, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %193, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %166, align 2
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = getelementptr inbounds i16, i16* %168, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %166, i64 2
  %174 = getelementptr inbounds i16, i16* %168, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %166, i64 3
  %177 = getelementptr inbounds i16, i16* %168, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %166, i64 4
  %180 = getelementptr inbounds i16, i16* %168, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %166, i64 5
  %183 = getelementptr inbounds i16, i16* %168, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %166, i64 6
  %186 = getelementptr inbounds i16, i16* %168, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %166, i64 7
  %189 = getelementptr inbounds i16, i16* %168, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %167, -8
  %192 = getelementptr inbounds i16, i16* %166, i64 8
  %193 = getelementptr inbounds i16, i16* %168, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !543

195:                                              ; preds = %160, %165, %140, %19
  %196 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 1
  %197 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  br label %242

199:                                              ; preds = %3
  %200 = bitcast i16* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %200) #15
  store i16 8230, i16* %4, align 2
  %201 = icmp eq i32 %2, 0
  br i1 %201, label %202, label %232

202:                                              ; preds = %199
  call void @_ZNK12v8_inspector8String169substringEmm(%"class.v8_inspector::String16"* nonnull sret %5, %"class.v8_inspector::String16"* %1, i64 0, i64 50)
  call void @_ZN12v8_inspector8String16C1EPKtm(%"class.v8_inspector::String16"* nonnull %6, i16* nonnull %4, i64 1) #15
  %203 = load i8, i8* %10, align 1
  %204 = icmp slt i8 %203, 0
  %205 = load i64, i64* %13, align 8
  %206 = zext i8 %203 to i64
  %207 = select i1 %204, i64 %205, i64 %206
  %208 = add i64 %207, -49
  call void @_ZNK12v8_inspector8String169substringEmm(%"class.v8_inspector::String16"* nonnull sret %7, %"class.v8_inspector::String16"* %1, i64 %208, i64 4294967295)
  call void @_ZN12v8_inspector8String166concatIJS0_S0_S0_EEES0_DpT_(%"class.v8_inspector::String16"* sret %0, %"class.v8_inspector::String16"* nonnull %5, %"class.v8_inspector::String16"* nonnull %6, %"class.v8_inspector::String16"* nonnull %7)
  %209 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %209, i64 0, i32 1, i32 1
  %211 = load i8, i8* %210, align 1
  %212 = icmp slt i8 %211, 0
  br i1 %212, label %213, label %216

213:                                              ; preds = %202
  %214 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %215 = load i8*, i8** %214, align 8
  call void @_ZdlPv(i8* %215) #16
  br label %216

216:                                              ; preds = %202, %213
  %217 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %218 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %217, i64 0, i32 1, i32 1
  %219 = load i8, i8* %218, align 1
  %220 = icmp slt i8 %219, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %216
  %222 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %223 = load i8*, i8** %222, align 8
  call void @_ZdlPv(i8* %223) #16
  br label %224

224:                                              ; preds = %216, %221
  %225 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %226 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %225, i64 0, i32 1, i32 1
  %227 = load i8, i8* %226, align 1
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %229, label %241

229:                                              ; preds = %224
  %230 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %231 = load i8*, i8** %230, align 8
  call void @_ZdlPv(i8* %231) #16
  br label %241

232:                                              ; preds = %199
  call void @_ZNK12v8_inspector8String169substringEmm(%"class.v8_inspector::String16"* nonnull sret %8, %"class.v8_inspector::String16"* %1, i64 0, i64 99)
  %233 = load i16, i16* %4, align 2
  call void @_ZN12v8_inspector8String166concatIJS0_tEEES0_DpT_(%"class.v8_inspector::String16"* sret %0, %"class.v8_inspector::String16"* nonnull %8, i16 zeroext %233)
  %234 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %234, i64 0, i32 1, i32 1
  %236 = load i8, i8* %235, align 1
  %237 = icmp slt i8 %236, 0
  br i1 %237, label %238, label %241

238:                                              ; preds = %232
  %239 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %240 = load i8*, i8** %239, align 8
  call void @_ZdlPv(i8* %240) #16
  br label %241

241:                                              ; preds = %238, %232, %229, %224
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %200) #15
  br label %242

242:                                              ; preds = %241, %195
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol7Runtime15PropertyPreview10setSubtypeERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  %10 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 24, i1 false) #15
  br label %186

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 11
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = bitcast %"class.v8_inspector::String16"* %3 to i16*
  %19 = trunc i64 %15 to i8
  %20 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %20, i64 0, i32 1, i32 1
  store i8 %19, i8* %21, align 1
  br label %39

22:                                               ; preds = %11
  %23 = icmp ugt i64 %15, 9223372036854775791
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.v8_inspector::String16"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #14
  unreachable

26:                                               ; preds = %22
  %27 = add nuw nsw i64 %15, 8
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #16
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  %37 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %17
  %40 = phi i16* [ %18, %17 ], [ %34, %31 ]
  %41 = add nuw nsw i64 %15, 1
  %42 = add i64 %15, 1
  %43 = icmp ult i64 %42, 16
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  %45 = add i64 %15, 1
  %46 = getelementptr i16, i16* %40, i64 %45
  %47 = getelementptr i16, i16* %13, i64 %45
  %48 = icmp ult i16* %40, %47
  %49 = icmp ult i16* %13, %46
  %50 = and i1 %48, %49
  br i1 %50, label %133, label %51

51:                                               ; preds = %44
  %52 = and i64 %42, -16
  %53 = getelementptr i16, i16* %40, i64 %52
  %54 = sub i64 %41, %52
  %55 = getelementptr i16, i16* %13, i64 %52
  %56 = add i64 %52, -16
  %57 = lshr exact i64 %56, 4
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 48
  br i1 %60, label %112, label %61

61:                                               ; preds = %51
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr i16, i16* %40, i64 %64
  %67 = getelementptr i16, i16* %13, i64 %64
  %68 = bitcast i16* %67 to <8 x i16>*
  %69 = load <8 x i16>, <8 x i16>* %68, align 2, !alias.scope !544
  %70 = getelementptr i16, i16* %67, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !544
  %73 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %73, align 2, !alias.scope !547, !noalias !544
  %74 = getelementptr i16, i16* %66, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %75, align 2, !alias.scope !547, !noalias !544
  %76 = or i64 %64, 16
  %77 = getelementptr i16, i16* %40, i64 %76
  %78 = getelementptr i16, i16* %13, i64 %76
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !544
  %81 = getelementptr i16, i16* %78, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !544
  %84 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !547, !noalias !544
  %85 = getelementptr i16, i16* %77, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !547, !noalias !544
  %87 = or i64 %64, 32
  %88 = getelementptr i16, i16* %40, i64 %87
  %89 = getelementptr i16, i16* %13, i64 %87
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !544
  %92 = getelementptr i16, i16* %89, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !544
  %95 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !547, !noalias !544
  %96 = getelementptr i16, i16* %88, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !547, !noalias !544
  %98 = or i64 %64, 48
  %99 = getelementptr i16, i16* %40, i64 %98
  %100 = getelementptr i16, i16* %13, i64 %98
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !544
  %103 = getelementptr i16, i16* %100, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !544
  %106 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !547, !noalias !544
  %107 = getelementptr i16, i16* %99, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !547, !noalias !544
  %109 = add i64 %64, 64
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !549

112:                                              ; preds = %63, %51
  %113 = phi i64 [ 0, %51 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr i16, i16* %40, i64 %116
  %119 = getelementptr i16, i16* %13, i64 %116
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !544
  %122 = getelementptr i16, i16* %119, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !544
  %125 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !547, !noalias !544
  %126 = getelementptr i16, i16* %118, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !547, !noalias !544
  %128 = add i64 %116, 16
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !550

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %42, %52
  br i1 %132, label %186, label %133

133:                                              ; preds = %131, %44, %39
  %134 = phi i16* [ %40, %44 ], [ %40, %39 ], [ %53, %131 ]
  %135 = phi i64 [ %41, %44 ], [ %41, %39 ], [ %54, %131 ]
  %136 = phi i16* [ %13, %44 ], [ %13, %39 ], [ %55, %131 ]
  %137 = add i64 %135, -1
  %138 = and i64 %135, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133, %140
  %141 = phi i16* [ %147, %140 ], [ %134, %133 ]
  %142 = phi i64 [ %146, %140 ], [ %135, %133 ]
  %143 = phi i16* [ %148, %140 ], [ %136, %133 ]
  %144 = phi i64 [ %149, %140 ], [ %138, %133 ]
  %145 = load i16, i16* %143, align 2
  store i16 %145, i16* %141, align 2
  %146 = add i64 %142, -1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = getelementptr inbounds i16, i16* %143, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !551

151:                                              ; preds = %140, %133
  %152 = phi i16* [ %134, %133 ], [ %147, %140 ]
  %153 = phi i64 [ %135, %133 ], [ %146, %140 ]
  %154 = phi i16* [ %136, %133 ], [ %148, %140 ]
  %155 = icmp ult i64 %137, 7
  br i1 %155, label %186, label %156

156:                                              ; preds = %151, %156
  %157 = phi i16* [ %183, %156 ], [ %152, %151 ]
  %158 = phi i64 [ %182, %156 ], [ %153, %151 ]
  %159 = phi i16* [ %184, %156 ], [ %154, %151 ]
  %160 = load i16, i16* %159, align 2
  store i16 %160, i16* %157, align 2
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %159, i64 1
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = getelementptr inbounds i16, i16* %159, i64 2
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = getelementptr inbounds i16, i16* %159, i64 3
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = getelementptr inbounds i16, i16* %159, i64 4
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = getelementptr inbounds i16, i16* %159, i64 5
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = getelementptr inbounds i16, i16* %159, i64 6
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = getelementptr inbounds i16, i16* %159, i64 7
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = add i64 %158, -8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = getelementptr inbounds i16, i16* %159, i64 8
  %185 = icmp eq i64 %182, 0
  br i1 %185, label %186, label %156, !llvm.loop !552

186:                                              ; preds = %151, %156, %131, %8
  %187 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %188 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %189 = load i64, i64* %188, align 8
  store i64 %189, i64* %187, align 8
  %190 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::PropertyPreview", %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %0, i64 0, i32 5, i32 1, i32 0
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0
  %192 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %190, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %191) #15
  %193 = load i64, i64* %187, align 8
  %194 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::PropertyPreview", %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %0, i64 0, i32 5, i32 1, i32 1
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::PropertyPreview", %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %0, i64 0, i32 5, i32 0
  store i8 1, i8* %195, align 8
  %196 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %196, i64 0, i32 1, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %186
  %201 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #16
  br label %203

203:                                              ; preds = %186, %200
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol7Runtime15PropertyPreview8setValueERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  %10 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 24, i1 false) #15
  br label %186

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 11
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = bitcast %"class.v8_inspector::String16"* %3 to i16*
  %19 = trunc i64 %15 to i8
  %20 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %20, i64 0, i32 1, i32 1
  store i8 %19, i8* %21, align 1
  br label %39

22:                                               ; preds = %11
  %23 = icmp ugt i64 %15, 9223372036854775791
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.v8_inspector::String16"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #14
  unreachable

26:                                               ; preds = %22
  %27 = add nuw nsw i64 %15, 8
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #16
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  %37 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %17
  %40 = phi i16* [ %18, %17 ], [ %34, %31 ]
  %41 = add nuw nsw i64 %15, 1
  %42 = add i64 %15, 1
  %43 = icmp ult i64 %42, 16
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  %45 = add i64 %15, 1
  %46 = getelementptr i16, i16* %40, i64 %45
  %47 = getelementptr i16, i16* %13, i64 %45
  %48 = icmp ult i16* %40, %47
  %49 = icmp ult i16* %13, %46
  %50 = and i1 %48, %49
  br i1 %50, label %133, label %51

51:                                               ; preds = %44
  %52 = and i64 %42, -16
  %53 = getelementptr i16, i16* %40, i64 %52
  %54 = sub i64 %41, %52
  %55 = getelementptr i16, i16* %13, i64 %52
  %56 = add i64 %52, -16
  %57 = lshr exact i64 %56, 4
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 48
  br i1 %60, label %112, label %61

61:                                               ; preds = %51
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr i16, i16* %40, i64 %64
  %67 = getelementptr i16, i16* %13, i64 %64
  %68 = bitcast i16* %67 to <8 x i16>*
  %69 = load <8 x i16>, <8 x i16>* %68, align 2, !alias.scope !553
  %70 = getelementptr i16, i16* %67, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !553
  %73 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %73, align 2, !alias.scope !556, !noalias !553
  %74 = getelementptr i16, i16* %66, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %75, align 2, !alias.scope !556, !noalias !553
  %76 = or i64 %64, 16
  %77 = getelementptr i16, i16* %40, i64 %76
  %78 = getelementptr i16, i16* %13, i64 %76
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !553
  %81 = getelementptr i16, i16* %78, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !553
  %84 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !556, !noalias !553
  %85 = getelementptr i16, i16* %77, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !556, !noalias !553
  %87 = or i64 %64, 32
  %88 = getelementptr i16, i16* %40, i64 %87
  %89 = getelementptr i16, i16* %13, i64 %87
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !553
  %92 = getelementptr i16, i16* %89, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !553
  %95 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !556, !noalias !553
  %96 = getelementptr i16, i16* %88, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !556, !noalias !553
  %98 = or i64 %64, 48
  %99 = getelementptr i16, i16* %40, i64 %98
  %100 = getelementptr i16, i16* %13, i64 %98
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !553
  %103 = getelementptr i16, i16* %100, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !553
  %106 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !556, !noalias !553
  %107 = getelementptr i16, i16* %99, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !556, !noalias !553
  %109 = add i64 %64, 64
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !558

112:                                              ; preds = %63, %51
  %113 = phi i64 [ 0, %51 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr i16, i16* %40, i64 %116
  %119 = getelementptr i16, i16* %13, i64 %116
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !553
  %122 = getelementptr i16, i16* %119, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !553
  %125 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !556, !noalias !553
  %126 = getelementptr i16, i16* %118, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !556, !noalias !553
  %128 = add i64 %116, 16
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !559

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %42, %52
  br i1 %132, label %186, label %133

133:                                              ; preds = %131, %44, %39
  %134 = phi i16* [ %40, %44 ], [ %40, %39 ], [ %53, %131 ]
  %135 = phi i64 [ %41, %44 ], [ %41, %39 ], [ %54, %131 ]
  %136 = phi i16* [ %13, %44 ], [ %13, %39 ], [ %55, %131 ]
  %137 = add i64 %135, -1
  %138 = and i64 %135, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133, %140
  %141 = phi i16* [ %147, %140 ], [ %134, %133 ]
  %142 = phi i64 [ %146, %140 ], [ %135, %133 ]
  %143 = phi i16* [ %148, %140 ], [ %136, %133 ]
  %144 = phi i64 [ %149, %140 ], [ %138, %133 ]
  %145 = load i16, i16* %143, align 2
  store i16 %145, i16* %141, align 2
  %146 = add i64 %142, -1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = getelementptr inbounds i16, i16* %143, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !560

151:                                              ; preds = %140, %133
  %152 = phi i16* [ %134, %133 ], [ %147, %140 ]
  %153 = phi i64 [ %135, %133 ], [ %146, %140 ]
  %154 = phi i16* [ %136, %133 ], [ %148, %140 ]
  %155 = icmp ult i64 %137, 7
  br i1 %155, label %186, label %156

156:                                              ; preds = %151, %156
  %157 = phi i16* [ %183, %156 ], [ %152, %151 ]
  %158 = phi i64 [ %182, %156 ], [ %153, %151 ]
  %159 = phi i16* [ %184, %156 ], [ %154, %151 ]
  %160 = load i16, i16* %159, align 2
  store i16 %160, i16* %157, align 2
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %159, i64 1
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = getelementptr inbounds i16, i16* %159, i64 2
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = getelementptr inbounds i16, i16* %159, i64 3
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = getelementptr inbounds i16, i16* %159, i64 4
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = getelementptr inbounds i16, i16* %159, i64 5
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = getelementptr inbounds i16, i16* %159, i64 6
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = getelementptr inbounds i16, i16* %159, i64 7
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = add i64 %158, -8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = getelementptr inbounds i16, i16* %159, i64 8
  %185 = icmp eq i64 %182, 0
  br i1 %185, label %186, label %156, !llvm.loop !561

186:                                              ; preds = %151, %156, %131, %8
  %187 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %188 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %189 = load i64, i64* %188, align 8
  store i64 %189, i64* %187, align 8
  %190 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::PropertyPreview", %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %0, i64 0, i32 3, i32 1, i32 0
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0
  %192 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %190, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %191) #15
  %193 = load i64, i64* %187, align 8
  %194 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::PropertyPreview", %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %0, i64 0, i32 3, i32 1, i32 1
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::PropertyPreview", %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %0, i64 0, i32 3, i32 0
  store i8 1, i8* %195, align 8
  %196 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %196, i64 0, i32 1, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %186
  %201 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #16
  br label %203

203:                                              ; preds = %186, %200
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8String166concatIJS0_S0_S0_EEES0_DpT_(%"class.v8_inspector::String16"* noalias sret, %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"*) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.v8_inspector::String16Builder", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = bitcast %"class.v8_inspector::String16Builder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #15
  call void @_ZN12v8_inspector15String16BuilderC1Ev(%"class.v8_inspector::String16Builder"* nonnull %5) #15
  %10 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  %16 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %16, i64 24, i1 false) #15
  br label %192

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %21, 11
  br i1 %22, label %23, label %28

23:                                               ; preds = %17
  %24 = bitcast %"class.v8_inspector::String16"* %6 to i16*
  %25 = trunc i64 %21 to i8
  %26 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %26, i64 0, i32 1, i32 1
  store i8 %25, i8* %27, align 1
  br label %45

28:                                               ; preds = %17
  %29 = icmp ugt i64 %21, 9223372036854775791
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast %"class.v8_inspector::String16"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %31) #14
  unreachable

32:                                               ; preds = %28
  %33 = add nuw nsw i64 %21, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  call void @abort() #14
  unreachable

37:                                               ; preds = %32
  %38 = shl i64 %34, 1
  %39 = call i8* @_Znwm(i64 %38) #16
  %40 = bitcast i8* %39 to i16*
  %41 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  store i8* %39, i8** %41, align 8
  %42 = or i64 %34, -9223372036854775808
  %43 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %21, i64* %44, align 8
  br label %45

45:                                               ; preds = %37, %23
  %46 = phi i16* [ %24, %23 ], [ %40, %37 ]
  %47 = add nuw nsw i64 %21, 1
  %48 = add i64 %21, 1
  %49 = icmp ult i64 %48, 16
  br i1 %49, label %139, label %50

50:                                               ; preds = %45
  %51 = add i64 %21, 1
  %52 = getelementptr i16, i16* %46, i64 %51
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = icmp ult i16* %46, %53
  %55 = icmp ult i16* %19, %52
  %56 = and i1 %54, %55
  br i1 %56, label %139, label %57

57:                                               ; preds = %50
  %58 = and i64 %48, -16
  %59 = getelementptr i16, i16* %46, i64 %58
  %60 = sub i64 %47, %58
  %61 = getelementptr i16, i16* %19, i64 %58
  %62 = add i64 %58, -16
  %63 = lshr exact i64 %62, 4
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 48
  br i1 %66, label %118, label %67

67:                                               ; preds = %57
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i16, i16* %46, i64 %70
  %73 = getelementptr i16, i16* %19, i64 %70
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !562
  %76 = getelementptr i16, i16* %73, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !562
  %79 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %79, align 2, !alias.scope !565, !noalias !562
  %80 = getelementptr i16, i16* %72, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %81, align 2, !alias.scope !565, !noalias !562
  %82 = or i64 %70, 16
  %83 = getelementptr i16, i16* %46, i64 %82
  %84 = getelementptr i16, i16* %19, i64 %82
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !562
  %87 = getelementptr i16, i16* %84, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !562
  %90 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %90, align 2, !alias.scope !565, !noalias !562
  %91 = getelementptr i16, i16* %83, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %92, align 2, !alias.scope !565, !noalias !562
  %93 = or i64 %70, 32
  %94 = getelementptr i16, i16* %46, i64 %93
  %95 = getelementptr i16, i16* %19, i64 %93
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !562
  %98 = getelementptr i16, i16* %95, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !562
  %101 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %101, align 2, !alias.scope !565, !noalias !562
  %102 = getelementptr i16, i16* %94, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %103, align 2, !alias.scope !565, !noalias !562
  %104 = or i64 %70, 48
  %105 = getelementptr i16, i16* %46, i64 %104
  %106 = getelementptr i16, i16* %19, i64 %104
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !562
  %109 = getelementptr i16, i16* %106, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !562
  %112 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !565, !noalias !562
  %113 = getelementptr i16, i16* %105, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !565, !noalias !562
  %115 = add i64 %70, 64
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !567

118:                                              ; preds = %69, %57
  %119 = phi i64 [ 0, %57 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i16, i16* %46, i64 %122
  %125 = getelementptr i16, i16* %19, i64 %122
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !562
  %128 = getelementptr i16, i16* %125, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !562
  %131 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %131, align 2, !alias.scope !565, !noalias !562
  %132 = getelementptr i16, i16* %124, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %133, align 2, !alias.scope !565, !noalias !562
  %134 = add i64 %122, 16
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !568

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %48, %58
  br i1 %138, label %192, label %139

139:                                              ; preds = %137, %50, %45
  %140 = phi i16* [ %46, %50 ], [ %46, %45 ], [ %59, %137 ]
  %141 = phi i64 [ %47, %50 ], [ %47, %45 ], [ %60, %137 ]
  %142 = phi i16* [ %19, %50 ], [ %19, %45 ], [ %61, %137 ]
  %143 = add i64 %141, -1
  %144 = and i64 %141, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %139, %146
  %147 = phi i16* [ %153, %146 ], [ %140, %139 ]
  %148 = phi i64 [ %152, %146 ], [ %141, %139 ]
  %149 = phi i16* [ %154, %146 ], [ %142, %139 ]
  %150 = phi i64 [ %155, %146 ], [ %144, %139 ]
  %151 = load i16, i16* %149, align 2
  store i16 %151, i16* %147, align 2
  %152 = add i64 %148, -1
  %153 = getelementptr inbounds i16, i16* %147, i64 1
  %154 = getelementptr inbounds i16, i16* %149, i64 1
  %155 = add i64 %150, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %146, !llvm.loop !569

157:                                              ; preds = %146, %139
  %158 = phi i16* [ %140, %139 ], [ %153, %146 ]
  %159 = phi i64 [ %141, %139 ], [ %152, %146 ]
  %160 = phi i16* [ %142, %139 ], [ %154, %146 ]
  %161 = icmp ult i64 %143, 7
  br i1 %161, label %192, label %162

162:                                              ; preds = %157, %162
  %163 = phi i16* [ %189, %162 ], [ %158, %157 ]
  %164 = phi i64 [ %188, %162 ], [ %159, %157 ]
  %165 = phi i16* [ %190, %162 ], [ %160, %157 ]
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %163, align 2
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = getelementptr inbounds i16, i16* %165, i64 1
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %163, i64 2
  %171 = getelementptr inbounds i16, i16* %165, i64 2
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %163, i64 3
  %174 = getelementptr inbounds i16, i16* %165, i64 3
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %163, i64 4
  %177 = getelementptr inbounds i16, i16* %165, i64 4
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %163, i64 5
  %180 = getelementptr inbounds i16, i16* %165, i64 5
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %163, i64 6
  %183 = getelementptr inbounds i16, i16* %165, i64 6
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %163, i64 7
  %186 = getelementptr inbounds i16, i16* %165, i64 7
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = add i64 %164, -8
  %189 = getelementptr inbounds i16, i16* %163, i64 8
  %190 = getelementptr inbounds i16, i16* %165, i64 8
  %191 = icmp eq i64 %188, 0
  br i1 %191, label %192, label %162, !llvm.loop !570

192:                                              ; preds = %157, %162, %137, %14
  %193 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 1
  %194 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %195 = load i64, i64* %194, align 8
  store i64 %195, i64* %193, align 8
  %196 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %196, i64 0, i32 1, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %203, label %200

200:                                              ; preds = %192
  %201 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  %202 = bitcast %"class.v8_inspector::String16"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %201, i8* align 8 %202, i64 24, i1 false) #15
  br label %378

203:                                              ; preds = %192
  %204 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load i16*, i16** %204, align 8
  %206 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %207 = load i64, i64* %206, align 8
  %208 = icmp ult i64 %207, 11
  br i1 %208, label %209, label %214

209:                                              ; preds = %203
  %210 = bitcast %"class.v8_inspector::String16"* %7 to i16*
  %211 = trunc i64 %207 to i8
  %212 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %212, i64 0, i32 1, i32 1
  store i8 %211, i8* %213, align 1
  br label %231

214:                                              ; preds = %203
  %215 = icmp ugt i64 %207, 9223372036854775791
  br i1 %215, label %216, label %218

216:                                              ; preds = %214
  %217 = bitcast %"class.v8_inspector::String16"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %217) #14
  unreachable

218:                                              ; preds = %214
  %219 = add nuw nsw i64 %207, 8
  %220 = and i64 %219, -8
  %221 = icmp slt i64 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %218
  call void @abort() #14
  unreachable

223:                                              ; preds = %218
  %224 = shl i64 %220, 1
  %225 = call i8* @_Znwm(i64 %224) #16
  %226 = bitcast i8* %225 to i16*
  %227 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  store i8* %225, i8** %227, align 8
  %228 = or i64 %220, -9223372036854775808
  %229 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %228, i64* %229, align 8
  %230 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %207, i64* %230, align 8
  br label %231

231:                                              ; preds = %223, %209
  %232 = phi i16* [ %210, %209 ], [ %226, %223 ]
  %233 = add nuw nsw i64 %207, 1
  %234 = add i64 %207, 1
  %235 = icmp ult i64 %234, 16
  br i1 %235, label %325, label %236

236:                                              ; preds = %231
  %237 = add i64 %207, 1
  %238 = getelementptr i16, i16* %232, i64 %237
  %239 = getelementptr i16, i16* %205, i64 %237
  %240 = icmp ult i16* %232, %239
  %241 = icmp ult i16* %205, %238
  %242 = and i1 %240, %241
  br i1 %242, label %325, label %243

243:                                              ; preds = %236
  %244 = and i64 %234, -16
  %245 = getelementptr i16, i16* %232, i64 %244
  %246 = sub i64 %233, %244
  %247 = getelementptr i16, i16* %205, i64 %244
  %248 = add i64 %244, -16
  %249 = lshr exact i64 %248, 4
  %250 = add nuw nsw i64 %249, 1
  %251 = and i64 %250, 3
  %252 = icmp ult i64 %248, 48
  br i1 %252, label %304, label %253

253:                                              ; preds = %243
  %254 = sub nsw i64 %250, %251
  br label %255

255:                                              ; preds = %255, %253
  %256 = phi i64 [ 0, %253 ], [ %301, %255 ]
  %257 = phi i64 [ %254, %253 ], [ %302, %255 ]
  %258 = getelementptr i16, i16* %232, i64 %256
  %259 = getelementptr i16, i16* %205, i64 %256
  %260 = bitcast i16* %259 to <8 x i16>*
  %261 = load <8 x i16>, <8 x i16>* %260, align 2, !alias.scope !571
  %262 = getelementptr i16, i16* %259, i64 8
  %263 = bitcast i16* %262 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2, !alias.scope !571
  %265 = bitcast i16* %258 to <8 x i16>*
  store <8 x i16> %261, <8 x i16>* %265, align 2, !alias.scope !574, !noalias !571
  %266 = getelementptr i16, i16* %258, i64 8
  %267 = bitcast i16* %266 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %267, align 2, !alias.scope !574, !noalias !571
  %268 = or i64 %256, 16
  %269 = getelementptr i16, i16* %232, i64 %268
  %270 = getelementptr i16, i16* %205, i64 %268
  %271 = bitcast i16* %270 to <8 x i16>*
  %272 = load <8 x i16>, <8 x i16>* %271, align 2, !alias.scope !571
  %273 = getelementptr i16, i16* %270, i64 8
  %274 = bitcast i16* %273 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !571
  %276 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %272, <8 x i16>* %276, align 2, !alias.scope !574, !noalias !571
  %277 = getelementptr i16, i16* %269, i64 8
  %278 = bitcast i16* %277 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %278, align 2, !alias.scope !574, !noalias !571
  %279 = or i64 %256, 32
  %280 = getelementptr i16, i16* %232, i64 %279
  %281 = getelementptr i16, i16* %205, i64 %279
  %282 = bitcast i16* %281 to <8 x i16>*
  %283 = load <8 x i16>, <8 x i16>* %282, align 2, !alias.scope !571
  %284 = getelementptr i16, i16* %281, i64 8
  %285 = bitcast i16* %284 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !571
  %287 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %283, <8 x i16>* %287, align 2, !alias.scope !574, !noalias !571
  %288 = getelementptr i16, i16* %280, i64 8
  %289 = bitcast i16* %288 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %289, align 2, !alias.scope !574, !noalias !571
  %290 = or i64 %256, 48
  %291 = getelementptr i16, i16* %232, i64 %290
  %292 = getelementptr i16, i16* %205, i64 %290
  %293 = bitcast i16* %292 to <8 x i16>*
  %294 = load <8 x i16>, <8 x i16>* %293, align 2, !alias.scope !571
  %295 = getelementptr i16, i16* %292, i64 8
  %296 = bitcast i16* %295 to <8 x i16>*
  %297 = load <8 x i16>, <8 x i16>* %296, align 2, !alias.scope !571
  %298 = bitcast i16* %291 to <8 x i16>*
  store <8 x i16> %294, <8 x i16>* %298, align 2, !alias.scope !574, !noalias !571
  %299 = getelementptr i16, i16* %291, i64 8
  %300 = bitcast i16* %299 to <8 x i16>*
  store <8 x i16> %297, <8 x i16>* %300, align 2, !alias.scope !574, !noalias !571
  %301 = add i64 %256, 64
  %302 = add i64 %257, -4
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %304, label %255, !llvm.loop !576

304:                                              ; preds = %255, %243
  %305 = phi i64 [ 0, %243 ], [ %301, %255 ]
  %306 = icmp eq i64 %251, 0
  br i1 %306, label %323, label %307

307:                                              ; preds = %304, %307
  %308 = phi i64 [ %320, %307 ], [ %305, %304 ]
  %309 = phi i64 [ %321, %307 ], [ %251, %304 ]
  %310 = getelementptr i16, i16* %232, i64 %308
  %311 = getelementptr i16, i16* %205, i64 %308
  %312 = bitcast i16* %311 to <8 x i16>*
  %313 = load <8 x i16>, <8 x i16>* %312, align 2, !alias.scope !571
  %314 = getelementptr i16, i16* %311, i64 8
  %315 = bitcast i16* %314 to <8 x i16>*
  %316 = load <8 x i16>, <8 x i16>* %315, align 2, !alias.scope !571
  %317 = bitcast i16* %310 to <8 x i16>*
  store <8 x i16> %313, <8 x i16>* %317, align 2, !alias.scope !574, !noalias !571
  %318 = getelementptr i16, i16* %310, i64 8
  %319 = bitcast i16* %318 to <8 x i16>*
  store <8 x i16> %316, <8 x i16>* %319, align 2, !alias.scope !574, !noalias !571
  %320 = add i64 %308, 16
  %321 = add i64 %309, -1
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %323, label %307, !llvm.loop !577

323:                                              ; preds = %307, %304
  %324 = icmp eq i64 %234, %244
  br i1 %324, label %378, label %325

325:                                              ; preds = %323, %236, %231
  %326 = phi i16* [ %232, %236 ], [ %232, %231 ], [ %245, %323 ]
  %327 = phi i64 [ %233, %236 ], [ %233, %231 ], [ %246, %323 ]
  %328 = phi i16* [ %205, %236 ], [ %205, %231 ], [ %247, %323 ]
  %329 = add i64 %327, -1
  %330 = and i64 %327, 7
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %343, label %332

332:                                              ; preds = %325, %332
  %333 = phi i16* [ %339, %332 ], [ %326, %325 ]
  %334 = phi i64 [ %338, %332 ], [ %327, %325 ]
  %335 = phi i16* [ %340, %332 ], [ %328, %325 ]
  %336 = phi i64 [ %341, %332 ], [ %330, %325 ]
  %337 = load i16, i16* %335, align 2
  store i16 %337, i16* %333, align 2
  %338 = add i64 %334, -1
  %339 = getelementptr inbounds i16, i16* %333, i64 1
  %340 = getelementptr inbounds i16, i16* %335, i64 1
  %341 = add i64 %336, -1
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %343, label %332, !llvm.loop !578

343:                                              ; preds = %332, %325
  %344 = phi i16* [ %326, %325 ], [ %339, %332 ]
  %345 = phi i64 [ %327, %325 ], [ %338, %332 ]
  %346 = phi i16* [ %328, %325 ], [ %340, %332 ]
  %347 = icmp ult i64 %329, 7
  br i1 %347, label %378, label %348

348:                                              ; preds = %343, %348
  %349 = phi i16* [ %375, %348 ], [ %344, %343 ]
  %350 = phi i64 [ %374, %348 ], [ %345, %343 ]
  %351 = phi i16* [ %376, %348 ], [ %346, %343 ]
  %352 = load i16, i16* %351, align 2
  store i16 %352, i16* %349, align 2
  %353 = getelementptr inbounds i16, i16* %349, i64 1
  %354 = getelementptr inbounds i16, i16* %351, i64 1
  %355 = load i16, i16* %354, align 2
  store i16 %355, i16* %353, align 2
  %356 = getelementptr inbounds i16, i16* %349, i64 2
  %357 = getelementptr inbounds i16, i16* %351, i64 2
  %358 = load i16, i16* %357, align 2
  store i16 %358, i16* %356, align 2
  %359 = getelementptr inbounds i16, i16* %349, i64 3
  %360 = getelementptr inbounds i16, i16* %351, i64 3
  %361 = load i16, i16* %360, align 2
  store i16 %361, i16* %359, align 2
  %362 = getelementptr inbounds i16, i16* %349, i64 4
  %363 = getelementptr inbounds i16, i16* %351, i64 4
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %362, align 2
  %365 = getelementptr inbounds i16, i16* %349, i64 5
  %366 = getelementptr inbounds i16, i16* %351, i64 5
  %367 = load i16, i16* %366, align 2
  store i16 %367, i16* %365, align 2
  %368 = getelementptr inbounds i16, i16* %349, i64 6
  %369 = getelementptr inbounds i16, i16* %351, i64 6
  %370 = load i16, i16* %369, align 2
  store i16 %370, i16* %368, align 2
  %371 = getelementptr inbounds i16, i16* %349, i64 7
  %372 = getelementptr inbounds i16, i16* %351, i64 7
  %373 = load i16, i16* %372, align 2
  store i16 %373, i16* %371, align 2
  %374 = add i64 %350, -8
  %375 = getelementptr inbounds i16, i16* %349, i64 8
  %376 = getelementptr inbounds i16, i16* %351, i64 8
  %377 = icmp eq i64 %374, 0
  br i1 %377, label %378, label %348, !llvm.loop !579

378:                                              ; preds = %343, %348, %323, %200
  %379 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 1
  %380 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 1
  %381 = load i64, i64* %380, align 8
  store i64 %381, i64* %379, align 8
  %382 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %383 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %382, i64 0, i32 1, i32 1
  %384 = load i8, i8* %383, align 1
  %385 = icmp slt i8 %384, 0
  br i1 %385, label %389, label %386

386:                                              ; preds = %378
  %387 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  %388 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %387, i8* align 8 %388, i64 24, i1 false) #15
  br label %564

389:                                              ; preds = %378
  %390 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %391 = load i16*, i16** %390, align 8
  %392 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %393 = load i64, i64* %392, align 8
  %394 = icmp ult i64 %393, 11
  br i1 %394, label %395, label %400

395:                                              ; preds = %389
  %396 = bitcast %"class.v8_inspector::String16"* %8 to i16*
  %397 = trunc i64 %393 to i8
  %398 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %399 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %398, i64 0, i32 1, i32 1
  store i8 %397, i8* %399, align 1
  br label %417

400:                                              ; preds = %389
  %401 = icmp ugt i64 %393, 9223372036854775791
  br i1 %401, label %402, label %404

402:                                              ; preds = %400
  %403 = bitcast %"class.v8_inspector::String16"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %403) #14
  unreachable

404:                                              ; preds = %400
  %405 = add nuw nsw i64 %393, 8
  %406 = and i64 %405, -8
  %407 = icmp slt i64 %406, 0
  br i1 %407, label %408, label %409

408:                                              ; preds = %404
  call void @abort() #14
  unreachable

409:                                              ; preds = %404
  %410 = shl i64 %406, 1
  %411 = call i8* @_Znwm(i64 %410) #16
  %412 = bitcast i8* %411 to i16*
  %413 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  store i8* %411, i8** %413, align 8
  %414 = or i64 %406, -9223372036854775808
  %415 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %414, i64* %415, align 8
  %416 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %393, i64* %416, align 8
  br label %417

417:                                              ; preds = %409, %395
  %418 = phi i16* [ %396, %395 ], [ %412, %409 ]
  %419 = add nuw nsw i64 %393, 1
  %420 = add i64 %393, 1
  %421 = icmp ult i64 %420, 16
  br i1 %421, label %511, label %422

422:                                              ; preds = %417
  %423 = add i64 %393, 1
  %424 = getelementptr i16, i16* %418, i64 %423
  %425 = getelementptr i16, i16* %391, i64 %423
  %426 = icmp ult i16* %418, %425
  %427 = icmp ult i16* %391, %424
  %428 = and i1 %426, %427
  br i1 %428, label %511, label %429

429:                                              ; preds = %422
  %430 = and i64 %420, -16
  %431 = getelementptr i16, i16* %418, i64 %430
  %432 = sub i64 %419, %430
  %433 = getelementptr i16, i16* %391, i64 %430
  %434 = add i64 %430, -16
  %435 = lshr exact i64 %434, 4
  %436 = add nuw nsw i64 %435, 1
  %437 = and i64 %436, 3
  %438 = icmp ult i64 %434, 48
  br i1 %438, label %490, label %439

439:                                              ; preds = %429
  %440 = sub nsw i64 %436, %437
  br label %441

441:                                              ; preds = %441, %439
  %442 = phi i64 [ 0, %439 ], [ %487, %441 ]
  %443 = phi i64 [ %440, %439 ], [ %488, %441 ]
  %444 = getelementptr i16, i16* %418, i64 %442
  %445 = getelementptr i16, i16* %391, i64 %442
  %446 = bitcast i16* %445 to <8 x i16>*
  %447 = load <8 x i16>, <8 x i16>* %446, align 2, !alias.scope !580
  %448 = getelementptr i16, i16* %445, i64 8
  %449 = bitcast i16* %448 to <8 x i16>*
  %450 = load <8 x i16>, <8 x i16>* %449, align 2, !alias.scope !580
  %451 = bitcast i16* %444 to <8 x i16>*
  store <8 x i16> %447, <8 x i16>* %451, align 2, !alias.scope !583, !noalias !580
  %452 = getelementptr i16, i16* %444, i64 8
  %453 = bitcast i16* %452 to <8 x i16>*
  store <8 x i16> %450, <8 x i16>* %453, align 2, !alias.scope !583, !noalias !580
  %454 = or i64 %442, 16
  %455 = getelementptr i16, i16* %418, i64 %454
  %456 = getelementptr i16, i16* %391, i64 %454
  %457 = bitcast i16* %456 to <8 x i16>*
  %458 = load <8 x i16>, <8 x i16>* %457, align 2, !alias.scope !580
  %459 = getelementptr i16, i16* %456, i64 8
  %460 = bitcast i16* %459 to <8 x i16>*
  %461 = load <8 x i16>, <8 x i16>* %460, align 2, !alias.scope !580
  %462 = bitcast i16* %455 to <8 x i16>*
  store <8 x i16> %458, <8 x i16>* %462, align 2, !alias.scope !583, !noalias !580
  %463 = getelementptr i16, i16* %455, i64 8
  %464 = bitcast i16* %463 to <8 x i16>*
  store <8 x i16> %461, <8 x i16>* %464, align 2, !alias.scope !583, !noalias !580
  %465 = or i64 %442, 32
  %466 = getelementptr i16, i16* %418, i64 %465
  %467 = getelementptr i16, i16* %391, i64 %465
  %468 = bitcast i16* %467 to <8 x i16>*
  %469 = load <8 x i16>, <8 x i16>* %468, align 2, !alias.scope !580
  %470 = getelementptr i16, i16* %467, i64 8
  %471 = bitcast i16* %470 to <8 x i16>*
  %472 = load <8 x i16>, <8 x i16>* %471, align 2, !alias.scope !580
  %473 = bitcast i16* %466 to <8 x i16>*
  store <8 x i16> %469, <8 x i16>* %473, align 2, !alias.scope !583, !noalias !580
  %474 = getelementptr i16, i16* %466, i64 8
  %475 = bitcast i16* %474 to <8 x i16>*
  store <8 x i16> %472, <8 x i16>* %475, align 2, !alias.scope !583, !noalias !580
  %476 = or i64 %442, 48
  %477 = getelementptr i16, i16* %418, i64 %476
  %478 = getelementptr i16, i16* %391, i64 %476
  %479 = bitcast i16* %478 to <8 x i16>*
  %480 = load <8 x i16>, <8 x i16>* %479, align 2, !alias.scope !580
  %481 = getelementptr i16, i16* %478, i64 8
  %482 = bitcast i16* %481 to <8 x i16>*
  %483 = load <8 x i16>, <8 x i16>* %482, align 2, !alias.scope !580
  %484 = bitcast i16* %477 to <8 x i16>*
  store <8 x i16> %480, <8 x i16>* %484, align 2, !alias.scope !583, !noalias !580
  %485 = getelementptr i16, i16* %477, i64 8
  %486 = bitcast i16* %485 to <8 x i16>*
  store <8 x i16> %483, <8 x i16>* %486, align 2, !alias.scope !583, !noalias !580
  %487 = add i64 %442, 64
  %488 = add i64 %443, -4
  %489 = icmp eq i64 %488, 0
  br i1 %489, label %490, label %441, !llvm.loop !585

490:                                              ; preds = %441, %429
  %491 = phi i64 [ 0, %429 ], [ %487, %441 ]
  %492 = icmp eq i64 %437, 0
  br i1 %492, label %509, label %493

493:                                              ; preds = %490, %493
  %494 = phi i64 [ %506, %493 ], [ %491, %490 ]
  %495 = phi i64 [ %507, %493 ], [ %437, %490 ]
  %496 = getelementptr i16, i16* %418, i64 %494
  %497 = getelementptr i16, i16* %391, i64 %494
  %498 = bitcast i16* %497 to <8 x i16>*
  %499 = load <8 x i16>, <8 x i16>* %498, align 2, !alias.scope !580
  %500 = getelementptr i16, i16* %497, i64 8
  %501 = bitcast i16* %500 to <8 x i16>*
  %502 = load <8 x i16>, <8 x i16>* %501, align 2, !alias.scope !580
  %503 = bitcast i16* %496 to <8 x i16>*
  store <8 x i16> %499, <8 x i16>* %503, align 2, !alias.scope !583, !noalias !580
  %504 = getelementptr i16, i16* %496, i64 8
  %505 = bitcast i16* %504 to <8 x i16>*
  store <8 x i16> %502, <8 x i16>* %505, align 2, !alias.scope !583, !noalias !580
  %506 = add i64 %494, 16
  %507 = add i64 %495, -1
  %508 = icmp eq i64 %507, 0
  br i1 %508, label %509, label %493, !llvm.loop !586

509:                                              ; preds = %493, %490
  %510 = icmp eq i64 %420, %430
  br i1 %510, label %564, label %511

511:                                              ; preds = %509, %422, %417
  %512 = phi i16* [ %418, %422 ], [ %418, %417 ], [ %431, %509 ]
  %513 = phi i64 [ %419, %422 ], [ %419, %417 ], [ %432, %509 ]
  %514 = phi i16* [ %391, %422 ], [ %391, %417 ], [ %433, %509 ]
  %515 = add i64 %513, -1
  %516 = and i64 %513, 7
  %517 = icmp eq i64 %516, 0
  br i1 %517, label %529, label %518

518:                                              ; preds = %511, %518
  %519 = phi i16* [ %525, %518 ], [ %512, %511 ]
  %520 = phi i64 [ %524, %518 ], [ %513, %511 ]
  %521 = phi i16* [ %526, %518 ], [ %514, %511 ]
  %522 = phi i64 [ %527, %518 ], [ %516, %511 ]
  %523 = load i16, i16* %521, align 2
  store i16 %523, i16* %519, align 2
  %524 = add i64 %520, -1
  %525 = getelementptr inbounds i16, i16* %519, i64 1
  %526 = getelementptr inbounds i16, i16* %521, i64 1
  %527 = add i64 %522, -1
  %528 = icmp eq i64 %527, 0
  br i1 %528, label %529, label %518, !llvm.loop !587

529:                                              ; preds = %518, %511
  %530 = phi i16* [ %512, %511 ], [ %525, %518 ]
  %531 = phi i64 [ %513, %511 ], [ %524, %518 ]
  %532 = phi i16* [ %514, %511 ], [ %526, %518 ]
  %533 = icmp ult i64 %515, 7
  br i1 %533, label %564, label %534

534:                                              ; preds = %529, %534
  %535 = phi i16* [ %561, %534 ], [ %530, %529 ]
  %536 = phi i64 [ %560, %534 ], [ %531, %529 ]
  %537 = phi i16* [ %562, %534 ], [ %532, %529 ]
  %538 = load i16, i16* %537, align 2
  store i16 %538, i16* %535, align 2
  %539 = getelementptr inbounds i16, i16* %535, i64 1
  %540 = getelementptr inbounds i16, i16* %537, i64 1
  %541 = load i16, i16* %540, align 2
  store i16 %541, i16* %539, align 2
  %542 = getelementptr inbounds i16, i16* %535, i64 2
  %543 = getelementptr inbounds i16, i16* %537, i64 2
  %544 = load i16, i16* %543, align 2
  store i16 %544, i16* %542, align 2
  %545 = getelementptr inbounds i16, i16* %535, i64 3
  %546 = getelementptr inbounds i16, i16* %537, i64 3
  %547 = load i16, i16* %546, align 2
  store i16 %547, i16* %545, align 2
  %548 = getelementptr inbounds i16, i16* %535, i64 4
  %549 = getelementptr inbounds i16, i16* %537, i64 4
  %550 = load i16, i16* %549, align 2
  store i16 %550, i16* %548, align 2
  %551 = getelementptr inbounds i16, i16* %535, i64 5
  %552 = getelementptr inbounds i16, i16* %537, i64 5
  %553 = load i16, i16* %552, align 2
  store i16 %553, i16* %551, align 2
  %554 = getelementptr inbounds i16, i16* %535, i64 6
  %555 = getelementptr inbounds i16, i16* %537, i64 6
  %556 = load i16, i16* %555, align 2
  store i16 %556, i16* %554, align 2
  %557 = getelementptr inbounds i16, i16* %535, i64 7
  %558 = getelementptr inbounds i16, i16* %537, i64 7
  %559 = load i16, i16* %558, align 2
  store i16 %559, i16* %557, align 2
  %560 = add i64 %536, -8
  %561 = getelementptr inbounds i16, i16* %535, i64 8
  %562 = getelementptr inbounds i16, i16* %537, i64 8
  %563 = icmp eq i64 %560, 0
  br i1 %563, label %564, label %534, !llvm.loop !588

564:                                              ; preds = %529, %534, %509, %386
  %565 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 1
  %566 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %567 = load i64, i64* %566, align 8
  store i64 %567, i64* %565, align 8
  call void @_ZN12v8_inspector15String16Builder9appendAllINS_8String16EJS2_S2_EEEvT_DpT0_(%"class.v8_inspector::String16Builder"* nonnull %5, %"class.v8_inspector::String16"* nonnull %6, %"class.v8_inspector::String16"* nonnull %7, %"class.v8_inspector::String16"* nonnull %8)
  %568 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %569 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %568, i64 0, i32 1, i32 1
  %570 = load i8, i8* %569, align 1
  %571 = icmp slt i8 %570, 0
  br i1 %571, label %572, label %575

572:                                              ; preds = %564
  %573 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %574 = load i8*, i8** %573, align 8
  call void @_ZdlPv(i8* %574) #16
  br label %575

575:                                              ; preds = %564, %572
  %576 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %577 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %576, i64 0, i32 1, i32 1
  %578 = load i8, i8* %577, align 1
  %579 = icmp slt i8 %578, 0
  br i1 %579, label %580, label %583

580:                                              ; preds = %575
  %581 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %582 = load i8*, i8** %581, align 8
  call void @_ZdlPv(i8* %582) #16
  br label %583

583:                                              ; preds = %575, %580
  %584 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %585 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %584, i64 0, i32 1, i32 1
  %586 = load i8, i8* %585, align 1
  %587 = icmp slt i8 %586, 0
  br i1 %587, label %588, label %591

588:                                              ; preds = %583
  %589 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %590 = load i8*, i8** %589, align 8
  call void @_ZdlPv(i8* %590) #16
  br label %591

591:                                              ; preds = %583, %588
  call void @_ZN12v8_inspector15String16Builder8toStringEv(%"class.v8_inspector::String16"* sret %0, %"class.v8_inspector::String16Builder"* nonnull %5) #15
  %592 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %5, i64 0, i32 0, i32 0, i32 0
  %593 = load i16*, i16** %592, align 8
  %594 = icmp eq i16* %593, null
  br i1 %594, label %600, label %595

595:                                              ; preds = %591
  %596 = ptrtoint i16* %593 to i64
  %597 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %5, i64 0, i32 0, i32 0, i32 1
  %598 = bitcast i16** %597 to i64*
  store i64 %596, i64* %598, align 8
  %599 = bitcast i16* %593 to i8*
  call void @_ZdlPv(i8* %599) #16
  br label %600

600:                                              ; preds = %591, %595
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #15
  ret void
}

declare void @_ZN12v8_inspector8String16C1EPKtm(%"class.v8_inspector::String16"*, i16*, i64) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8String166concatIJS0_tEEES0_DpT_(%"class.v8_inspector::String16"* noalias sret, %"class.v8_inspector::String16"*, i16 zeroext) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.v8_inspector::String16Builder", align 8
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = bitcast %"class.v8_inspector::String16Builder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  call void @_ZN12v8_inspector15String16BuilderC1Ev(%"class.v8_inspector::String16Builder"* nonnull %4) #15
  %7 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  %13 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %13, i64 24, i1 false) #15
  br label %189

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.v8_inspector::String16"* %5 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.v8_inspector::String16"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %28) #14
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @abort() #14
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = call i8* @_Znwm(i64 %35) #16
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = getelementptr i16, i16* %43, i64 %55
  %57 = sub i64 %44, %55
  %58 = getelementptr i16, i16* %16, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %43, i64 %67
  %70 = getelementptr i16, i16* %16, i64 %67
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !589
  %73 = getelementptr i16, i16* %70, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !589
  %76 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !592, !noalias !589
  %77 = getelementptr i16, i16* %69, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !592, !noalias !589
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %43, i64 %79
  %81 = getelementptr i16, i16* %16, i64 %79
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !589
  %84 = getelementptr i16, i16* %81, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !589
  %87 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !592, !noalias !589
  %88 = getelementptr i16, i16* %80, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !592, !noalias !589
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %43, i64 %90
  %92 = getelementptr i16, i16* %16, i64 %90
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !589
  %95 = getelementptr i16, i16* %92, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !589
  %98 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !592, !noalias !589
  %99 = getelementptr i16, i16* %91, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !592, !noalias !589
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %43, i64 %101
  %103 = getelementptr i16, i16* %16, i64 %101
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !589
  %106 = getelementptr i16, i16* %103, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !589
  %109 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !592, !noalias !589
  %110 = getelementptr i16, i16* %102, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !592, !noalias !589
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !594

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %43, i64 %119
  %122 = getelementptr i16, i16* %16, i64 %119
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !589
  %125 = getelementptr i16, i16* %122, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !589
  %128 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !592, !noalias !589
  %129 = getelementptr i16, i16* %121, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !592, !noalias !589
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !595

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %56, %134 ]
  %138 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %58, %134 ]
  %140 = add i64 %138, -1
  %141 = and i64 %138, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i16* [ %150, %143 ], [ %137, %136 ]
  %145 = phi i64 [ %149, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %151, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %146, align 2
  store i16 %148, i16* %144, align 2
  %149 = add i64 %145, -1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = getelementptr inbounds i16, i16* %146, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !596

154:                                              ; preds = %143, %136
  %155 = phi i16* [ %137, %136 ], [ %150, %143 ]
  %156 = phi i64 [ %138, %136 ], [ %149, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %151, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i16* [ %186, %159 ], [ %155, %154 ]
  %161 = phi i64 [ %185, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %187, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %160, align 2
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = getelementptr inbounds i16, i16* %162, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = getelementptr inbounds i16, i16* %162, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = getelementptr inbounds i16, i16* %162, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = getelementptr inbounds i16, i16* %162, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = getelementptr inbounds i16, i16* %162, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = getelementptr inbounds i16, i16* %162, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = getelementptr inbounds i16, i16* %162, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %161, -8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = getelementptr inbounds i16, i16* %162, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !597

189:                                              ; preds = %154, %159, %134, %11
  %190 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 1
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* %190, align 8
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* nonnull %4, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %5) #15
  call void @_ZN12v8_inspector15String16Builder6appendEt(%"class.v8_inspector::String16Builder"* nonnull %4, i16 zeroext %2) #15
  %193 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %193, i64 0, i32 1, i32 1
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %200

197:                                              ; preds = %189
  %198 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %199 = load i8*, i8** %198, align 8
  call void @_ZdlPv(i8* %199) #16
  br label %200

200:                                              ; preds = %189, %197
  call void @_ZN12v8_inspector15String16Builder8toStringEv(%"class.v8_inspector::String16"* sret %0, %"class.v8_inspector::String16Builder"* nonnull %4) #15
  %201 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %4, i64 0, i32 0, i32 0, i32 0
  %202 = load i16*, i16** %201, align 8
  %203 = icmp eq i16* %202, null
  br i1 %203, label %209, label %204

204:                                              ; preds = %200
  %205 = ptrtoint i16* %202 to i64
  %206 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %4, i64 0, i32 0, i32 0, i32 1
  %207 = bitcast i16** %206 to i64*
  store i64 %205, i64* %207, align 8
  %208 = bitcast i16* %202 to i8*
  call void @_ZdlPv(i8* %208) #16
  br label %209

209:                                              ; preds = %200, %204
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector15String16Builder9appendAllINS_8String16EJS2_S2_EEEvT_DpT0_(%"class.v8_inspector::String16Builder"*, %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"*) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  tail call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %0, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  %7 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  %13 = bitcast %"class.v8_inspector::String16"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %13, i64 24, i1 false) #15
  br label %189

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.v8_inspector::String16"* %5 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.v8_inspector::String16"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %28) #14
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @abort() #14
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = tail call i8* @_Znwm(i64 %35) #16
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = getelementptr i16, i16* %43, i64 %55
  %57 = sub i64 %44, %55
  %58 = getelementptr i16, i16* %16, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %43, i64 %67
  %70 = getelementptr i16, i16* %16, i64 %67
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !598
  %73 = getelementptr i16, i16* %70, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !598
  %76 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !601, !noalias !598
  %77 = getelementptr i16, i16* %69, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !601, !noalias !598
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %43, i64 %79
  %81 = getelementptr i16, i16* %16, i64 %79
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !598
  %84 = getelementptr i16, i16* %81, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !598
  %87 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !601, !noalias !598
  %88 = getelementptr i16, i16* %80, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !601, !noalias !598
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %43, i64 %90
  %92 = getelementptr i16, i16* %16, i64 %90
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !598
  %95 = getelementptr i16, i16* %92, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !598
  %98 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !601, !noalias !598
  %99 = getelementptr i16, i16* %91, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !601, !noalias !598
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %43, i64 %101
  %103 = getelementptr i16, i16* %16, i64 %101
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !598
  %106 = getelementptr i16, i16* %103, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !598
  %109 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !601, !noalias !598
  %110 = getelementptr i16, i16* %102, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !601, !noalias !598
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !603

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %43, i64 %119
  %122 = getelementptr i16, i16* %16, i64 %119
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !598
  %125 = getelementptr i16, i16* %122, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !598
  %128 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !601, !noalias !598
  %129 = getelementptr i16, i16* %121, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !601, !noalias !598
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !604

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %56, %134 ]
  %138 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %58, %134 ]
  %140 = add i64 %138, -1
  %141 = and i64 %138, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i16* [ %150, %143 ], [ %137, %136 ]
  %145 = phi i64 [ %149, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %151, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %146, align 2
  store i16 %148, i16* %144, align 2
  %149 = add i64 %145, -1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = getelementptr inbounds i16, i16* %146, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !605

154:                                              ; preds = %143, %136
  %155 = phi i16* [ %137, %136 ], [ %150, %143 ]
  %156 = phi i64 [ %138, %136 ], [ %149, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %151, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i16* [ %186, %159 ], [ %155, %154 ]
  %161 = phi i64 [ %185, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %187, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %160, align 2
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = getelementptr inbounds i16, i16* %162, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = getelementptr inbounds i16, i16* %162, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = getelementptr inbounds i16, i16* %162, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = getelementptr inbounds i16, i16* %162, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = getelementptr inbounds i16, i16* %162, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = getelementptr inbounds i16, i16* %162, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = getelementptr inbounds i16, i16* %162, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %161, -8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = getelementptr inbounds i16, i16* %162, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !606

189:                                              ; preds = %154, %159, %134, %11
  %190 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 1
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 1
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* %190, align 8
  %193 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %193, i64 0, i32 1, i32 1
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %200, label %197

197:                                              ; preds = %189
  %198 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  %199 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %198, i8* align 8 %199, i64 24, i1 false) #15
  br label %375

200:                                              ; preds = %189
  %201 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load i16*, i16** %201, align 8
  %203 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %204 = load i64, i64* %203, align 8
  %205 = icmp ult i64 %204, 11
  br i1 %205, label %206, label %211

206:                                              ; preds = %200
  %207 = bitcast %"class.v8_inspector::String16"* %6 to i16*
  %208 = trunc i64 %204 to i8
  %209 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %209, i64 0, i32 1, i32 1
  store i8 %208, i8* %210, align 1
  br label %228

211:                                              ; preds = %200
  %212 = icmp ugt i64 %204, 9223372036854775791
  br i1 %212, label %213, label %215

213:                                              ; preds = %211
  %214 = bitcast %"class.v8_inspector::String16"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %214) #14
  unreachable

215:                                              ; preds = %211
  %216 = add nuw nsw i64 %204, 8
  %217 = and i64 %216, -8
  %218 = icmp slt i64 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %215
  tail call void @abort() #14
  unreachable

220:                                              ; preds = %215
  %221 = shl i64 %217, 1
  %222 = tail call i8* @_Znwm(i64 %221) #16
  %223 = bitcast i8* %222 to i16*
  %224 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  store i8* %222, i8** %224, align 8
  %225 = or i64 %217, -9223372036854775808
  %226 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %225, i64* %226, align 8
  %227 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %204, i64* %227, align 8
  br label %228

228:                                              ; preds = %220, %206
  %229 = phi i16* [ %207, %206 ], [ %223, %220 ]
  %230 = add nuw nsw i64 %204, 1
  %231 = add i64 %204, 1
  %232 = icmp ult i64 %231, 16
  br i1 %232, label %322, label %233

233:                                              ; preds = %228
  %234 = add i64 %204, 1
  %235 = getelementptr i16, i16* %229, i64 %234
  %236 = getelementptr i16, i16* %202, i64 %234
  %237 = icmp ult i16* %229, %236
  %238 = icmp ult i16* %202, %235
  %239 = and i1 %237, %238
  br i1 %239, label %322, label %240

240:                                              ; preds = %233
  %241 = and i64 %231, -16
  %242 = getelementptr i16, i16* %229, i64 %241
  %243 = sub i64 %230, %241
  %244 = getelementptr i16, i16* %202, i64 %241
  %245 = add i64 %241, -16
  %246 = lshr exact i64 %245, 4
  %247 = add nuw nsw i64 %246, 1
  %248 = and i64 %247, 3
  %249 = icmp ult i64 %245, 48
  br i1 %249, label %301, label %250

250:                                              ; preds = %240
  %251 = sub nsw i64 %247, %248
  br label %252

252:                                              ; preds = %252, %250
  %253 = phi i64 [ 0, %250 ], [ %298, %252 ]
  %254 = phi i64 [ %251, %250 ], [ %299, %252 ]
  %255 = getelementptr i16, i16* %229, i64 %253
  %256 = getelementptr i16, i16* %202, i64 %253
  %257 = bitcast i16* %256 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2, !alias.scope !607
  %259 = getelementptr i16, i16* %256, i64 8
  %260 = bitcast i16* %259 to <8 x i16>*
  %261 = load <8 x i16>, <8 x i16>* %260, align 2, !alias.scope !607
  %262 = bitcast i16* %255 to <8 x i16>*
  store <8 x i16> %258, <8 x i16>* %262, align 2, !alias.scope !610, !noalias !607
  %263 = getelementptr i16, i16* %255, i64 8
  %264 = bitcast i16* %263 to <8 x i16>*
  store <8 x i16> %261, <8 x i16>* %264, align 2, !alias.scope !610, !noalias !607
  %265 = or i64 %253, 16
  %266 = getelementptr i16, i16* %229, i64 %265
  %267 = getelementptr i16, i16* %202, i64 %265
  %268 = bitcast i16* %267 to <8 x i16>*
  %269 = load <8 x i16>, <8 x i16>* %268, align 2, !alias.scope !607
  %270 = getelementptr i16, i16* %267, i64 8
  %271 = bitcast i16* %270 to <8 x i16>*
  %272 = load <8 x i16>, <8 x i16>* %271, align 2, !alias.scope !607
  %273 = bitcast i16* %266 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %273, align 2, !alias.scope !610, !noalias !607
  %274 = getelementptr i16, i16* %266, i64 8
  %275 = bitcast i16* %274 to <8 x i16>*
  store <8 x i16> %272, <8 x i16>* %275, align 2, !alias.scope !610, !noalias !607
  %276 = or i64 %253, 32
  %277 = getelementptr i16, i16* %229, i64 %276
  %278 = getelementptr i16, i16* %202, i64 %276
  %279 = bitcast i16* %278 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !607
  %281 = getelementptr i16, i16* %278, i64 8
  %282 = bitcast i16* %281 to <8 x i16>*
  %283 = load <8 x i16>, <8 x i16>* %282, align 2, !alias.scope !607
  %284 = bitcast i16* %277 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %284, align 2, !alias.scope !610, !noalias !607
  %285 = getelementptr i16, i16* %277, i64 8
  %286 = bitcast i16* %285 to <8 x i16>*
  store <8 x i16> %283, <8 x i16>* %286, align 2, !alias.scope !610, !noalias !607
  %287 = or i64 %253, 48
  %288 = getelementptr i16, i16* %229, i64 %287
  %289 = getelementptr i16, i16* %202, i64 %287
  %290 = bitcast i16* %289 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !607
  %292 = getelementptr i16, i16* %289, i64 8
  %293 = bitcast i16* %292 to <8 x i16>*
  %294 = load <8 x i16>, <8 x i16>* %293, align 2, !alias.scope !607
  %295 = bitcast i16* %288 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %295, align 2, !alias.scope !610, !noalias !607
  %296 = getelementptr i16, i16* %288, i64 8
  %297 = bitcast i16* %296 to <8 x i16>*
  store <8 x i16> %294, <8 x i16>* %297, align 2, !alias.scope !610, !noalias !607
  %298 = add i64 %253, 64
  %299 = add i64 %254, -4
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %301, label %252, !llvm.loop !612

301:                                              ; preds = %252, %240
  %302 = phi i64 [ 0, %240 ], [ %298, %252 ]
  %303 = icmp eq i64 %248, 0
  br i1 %303, label %320, label %304

304:                                              ; preds = %301, %304
  %305 = phi i64 [ %317, %304 ], [ %302, %301 ]
  %306 = phi i64 [ %318, %304 ], [ %248, %301 ]
  %307 = getelementptr i16, i16* %229, i64 %305
  %308 = getelementptr i16, i16* %202, i64 %305
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !607
  %311 = getelementptr i16, i16* %308, i64 8
  %312 = bitcast i16* %311 to <8 x i16>*
  %313 = load <8 x i16>, <8 x i16>* %312, align 2, !alias.scope !607
  %314 = bitcast i16* %307 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %314, align 2, !alias.scope !610, !noalias !607
  %315 = getelementptr i16, i16* %307, i64 8
  %316 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %313, <8 x i16>* %316, align 2, !alias.scope !610, !noalias !607
  %317 = add i64 %305, 16
  %318 = add i64 %306, -1
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %320, label %304, !llvm.loop !613

320:                                              ; preds = %304, %301
  %321 = icmp eq i64 %231, %241
  br i1 %321, label %375, label %322

322:                                              ; preds = %320, %233, %228
  %323 = phi i16* [ %229, %233 ], [ %229, %228 ], [ %242, %320 ]
  %324 = phi i64 [ %230, %233 ], [ %230, %228 ], [ %243, %320 ]
  %325 = phi i16* [ %202, %233 ], [ %202, %228 ], [ %244, %320 ]
  %326 = add i64 %324, -1
  %327 = and i64 %324, 7
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %340, label %329

329:                                              ; preds = %322, %329
  %330 = phi i16* [ %336, %329 ], [ %323, %322 ]
  %331 = phi i64 [ %335, %329 ], [ %324, %322 ]
  %332 = phi i16* [ %337, %329 ], [ %325, %322 ]
  %333 = phi i64 [ %338, %329 ], [ %327, %322 ]
  %334 = load i16, i16* %332, align 2
  store i16 %334, i16* %330, align 2
  %335 = add i64 %331, -1
  %336 = getelementptr inbounds i16, i16* %330, i64 1
  %337 = getelementptr inbounds i16, i16* %332, i64 1
  %338 = add i64 %333, -1
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %329, !llvm.loop !614

340:                                              ; preds = %329, %322
  %341 = phi i16* [ %323, %322 ], [ %336, %329 ]
  %342 = phi i64 [ %324, %322 ], [ %335, %329 ]
  %343 = phi i16* [ %325, %322 ], [ %337, %329 ]
  %344 = icmp ult i64 %326, 7
  br i1 %344, label %375, label %345

345:                                              ; preds = %340, %345
  %346 = phi i16* [ %372, %345 ], [ %341, %340 ]
  %347 = phi i64 [ %371, %345 ], [ %342, %340 ]
  %348 = phi i16* [ %373, %345 ], [ %343, %340 ]
  %349 = load i16, i16* %348, align 2
  store i16 %349, i16* %346, align 2
  %350 = getelementptr inbounds i16, i16* %346, i64 1
  %351 = getelementptr inbounds i16, i16* %348, i64 1
  %352 = load i16, i16* %351, align 2
  store i16 %352, i16* %350, align 2
  %353 = getelementptr inbounds i16, i16* %346, i64 2
  %354 = getelementptr inbounds i16, i16* %348, i64 2
  %355 = load i16, i16* %354, align 2
  store i16 %355, i16* %353, align 2
  %356 = getelementptr inbounds i16, i16* %346, i64 3
  %357 = getelementptr inbounds i16, i16* %348, i64 3
  %358 = load i16, i16* %357, align 2
  store i16 %358, i16* %356, align 2
  %359 = getelementptr inbounds i16, i16* %346, i64 4
  %360 = getelementptr inbounds i16, i16* %348, i64 4
  %361 = load i16, i16* %360, align 2
  store i16 %361, i16* %359, align 2
  %362 = getelementptr inbounds i16, i16* %346, i64 5
  %363 = getelementptr inbounds i16, i16* %348, i64 5
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %362, align 2
  %365 = getelementptr inbounds i16, i16* %346, i64 6
  %366 = getelementptr inbounds i16, i16* %348, i64 6
  %367 = load i16, i16* %366, align 2
  store i16 %367, i16* %365, align 2
  %368 = getelementptr inbounds i16, i16* %346, i64 7
  %369 = getelementptr inbounds i16, i16* %348, i64 7
  %370 = load i16, i16* %369, align 2
  store i16 %370, i16* %368, align 2
  %371 = add i64 %347, -8
  %372 = getelementptr inbounds i16, i16* %346, i64 8
  %373 = getelementptr inbounds i16, i16* %348, i64 8
  %374 = icmp eq i64 %371, 0
  br i1 %374, label %375, label %345, !llvm.loop !615

375:                                              ; preds = %340, %345, %320, %197
  %376 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 1
  %377 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %378 = load i64, i64* %377, align 8
  store i64 %378, i64* %376, align 8
  call void @_ZN12v8_inspector15String16Builder9appendAllINS_8String16EJS2_EEEvT_DpT0_(%"class.v8_inspector::String16Builder"* %0, %"class.v8_inspector::String16"* nonnull %5, %"class.v8_inspector::String16"* nonnull %6)
  %379 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %380 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %379, i64 0, i32 1, i32 1
  %381 = load i8, i8* %380, align 1
  %382 = icmp slt i8 %381, 0
  br i1 %382, label %383, label %386

383:                                              ; preds = %375
  %384 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %385 = load i8*, i8** %384, align 8
  call void @_ZdlPv(i8* %385) #16
  br label %386

386:                                              ; preds = %375, %383
  %387 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %388 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %387, i64 0, i32 1, i32 1
  %389 = load i8, i8* %388, align 1
  %390 = icmp slt i8 %389, 0
  br i1 %390, label %391, label %394

391:                                              ; preds = %386
  %392 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %393 = load i8*, i8** %392, align 8
  call void @_ZdlPv(i8* %393) #16
  br label %394

394:                                              ; preds = %386, %391
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector15String16Builder9appendAllINS_8String16EJS2_EEEvT_DpT0_(%"class.v8_inspector::String16Builder"*, %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"*) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.v8_inspector::String16", align 8
  tail call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %0, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  %5 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.v8_inspector::String16"* %4 to i8*
  %11 = bitcast %"class.v8_inspector::String16"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %11, i64 24, i1 false) #15
  br label %187

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i16*, i16** %13, align 8
  %15 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %16, 11
  br i1 %17, label %18, label %23

18:                                               ; preds = %12
  %19 = bitcast %"class.v8_inspector::String16"* %4 to i16*
  %20 = trunc i64 %16 to i8
  %21 = bitcast %"class.v8_inspector::String16"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %21, i64 0, i32 1, i32 1
  store i8 %20, i8* %22, align 1
  br label %40

23:                                               ; preds = %12
  %24 = icmp ugt i64 %16, 9223372036854775791
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = bitcast %"class.v8_inspector::String16"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %26) #14
  unreachable

27:                                               ; preds = %23
  %28 = add nuw nsw i64 %16, 8
  %29 = and i64 %28, -8
  %30 = icmp slt i64 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  tail call void @abort() #14
  unreachable

32:                                               ; preds = %27
  %33 = shl i64 %29, 1
  %34 = tail call i8* @_Znwm(i64 %33) #16
  %35 = bitcast i8* %34 to i16*
  %36 = bitcast %"class.v8_inspector::String16"* %4 to i8**
  store i8* %34, i8** %36, align 8
  %37 = or i64 %29, -9223372036854775808
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %16, i64* %39, align 8
  br label %40

40:                                               ; preds = %32, %18
  %41 = phi i16* [ %19, %18 ], [ %35, %32 ]
  %42 = add nuw nsw i64 %16, 1
  %43 = add i64 %16, 1
  %44 = icmp ult i64 %43, 16
  br i1 %44, label %134, label %45

45:                                               ; preds = %40
  %46 = add i64 %16, 1
  %47 = getelementptr i16, i16* %41, i64 %46
  %48 = getelementptr i16, i16* %14, i64 %46
  %49 = icmp ult i16* %41, %48
  %50 = icmp ult i16* %14, %47
  %51 = and i1 %49, %50
  br i1 %51, label %134, label %52

52:                                               ; preds = %45
  %53 = and i64 %43, -16
  %54 = getelementptr i16, i16* %41, i64 %53
  %55 = sub i64 %42, %53
  %56 = getelementptr i16, i16* %14, i64 %53
  %57 = add i64 %53, -16
  %58 = lshr exact i64 %57, 4
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 3
  %61 = icmp ult i64 %57, 48
  br i1 %61, label %113, label %62

62:                                               ; preds = %52
  %63 = sub nsw i64 %59, %60
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %110, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %111, %64 ]
  %67 = getelementptr i16, i16* %41, i64 %65
  %68 = getelementptr i16, i16* %14, i64 %65
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !616
  %71 = getelementptr i16, i16* %68, i64 8
  %72 = bitcast i16* %71 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !616
  %74 = bitcast i16* %67 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %74, align 2, !alias.scope !619, !noalias !616
  %75 = getelementptr i16, i16* %67, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %76, align 2, !alias.scope !619, !noalias !616
  %77 = or i64 %65, 16
  %78 = getelementptr i16, i16* %41, i64 %77
  %79 = getelementptr i16, i16* %14, i64 %77
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !616
  %82 = getelementptr i16, i16* %79, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !616
  %85 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %85, align 2, !alias.scope !619, !noalias !616
  %86 = getelementptr i16, i16* %78, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %87, align 2, !alias.scope !619, !noalias !616
  %88 = or i64 %65, 32
  %89 = getelementptr i16, i16* %41, i64 %88
  %90 = getelementptr i16, i16* %14, i64 %88
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !616
  %93 = getelementptr i16, i16* %90, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !616
  %96 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !619, !noalias !616
  %97 = getelementptr i16, i16* %89, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !619, !noalias !616
  %99 = or i64 %65, 48
  %100 = getelementptr i16, i16* %41, i64 %99
  %101 = getelementptr i16, i16* %14, i64 %99
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !616
  %104 = getelementptr i16, i16* %101, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !616
  %107 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !619, !noalias !616
  %108 = getelementptr i16, i16* %100, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !619, !noalias !616
  %110 = add i64 %65, 64
  %111 = add i64 %66, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %64, !llvm.loop !621

113:                                              ; preds = %64, %52
  %114 = phi i64 [ 0, %52 ], [ %110, %64 ]
  %115 = icmp eq i64 %60, 0
  br i1 %115, label %132, label %116

116:                                              ; preds = %113, %116
  %117 = phi i64 [ %129, %116 ], [ %114, %113 ]
  %118 = phi i64 [ %130, %116 ], [ %60, %113 ]
  %119 = getelementptr i16, i16* %41, i64 %117
  %120 = getelementptr i16, i16* %14, i64 %117
  %121 = bitcast i16* %120 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !616
  %123 = getelementptr i16, i16* %120, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !616
  %126 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !619, !noalias !616
  %127 = getelementptr i16, i16* %119, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !619, !noalias !616
  %129 = add i64 %117, 16
  %130 = add i64 %118, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %116, !llvm.loop !622

132:                                              ; preds = %116, %113
  %133 = icmp eq i64 %43, %53
  br i1 %133, label %187, label %134

134:                                              ; preds = %132, %45, %40
  %135 = phi i16* [ %41, %45 ], [ %41, %40 ], [ %54, %132 ]
  %136 = phi i64 [ %42, %45 ], [ %42, %40 ], [ %55, %132 ]
  %137 = phi i16* [ %14, %45 ], [ %14, %40 ], [ %56, %132 ]
  %138 = add i64 %136, -1
  %139 = and i64 %136, 7
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %152, label %141

141:                                              ; preds = %134, %141
  %142 = phi i16* [ %148, %141 ], [ %135, %134 ]
  %143 = phi i64 [ %147, %141 ], [ %136, %134 ]
  %144 = phi i16* [ %149, %141 ], [ %137, %134 ]
  %145 = phi i64 [ %150, %141 ], [ %139, %134 ]
  %146 = load i16, i16* %144, align 2
  store i16 %146, i16* %142, align 2
  %147 = add i64 %143, -1
  %148 = getelementptr inbounds i16, i16* %142, i64 1
  %149 = getelementptr inbounds i16, i16* %144, i64 1
  %150 = add i64 %145, -1
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %141, !llvm.loop !623

152:                                              ; preds = %141, %134
  %153 = phi i16* [ %135, %134 ], [ %148, %141 ]
  %154 = phi i64 [ %136, %134 ], [ %147, %141 ]
  %155 = phi i16* [ %137, %134 ], [ %149, %141 ]
  %156 = icmp ult i64 %138, 7
  br i1 %156, label %187, label %157

157:                                              ; preds = %152, %157
  %158 = phi i16* [ %184, %157 ], [ %153, %152 ]
  %159 = phi i64 [ %183, %157 ], [ %154, %152 ]
  %160 = phi i16* [ %185, %157 ], [ %155, %152 ]
  %161 = load i16, i16* %160, align 2
  store i16 %161, i16* %158, align 2
  %162 = getelementptr inbounds i16, i16* %158, i64 1
  %163 = getelementptr inbounds i16, i16* %160, i64 1
  %164 = load i16, i16* %163, align 2
  store i16 %164, i16* %162, align 2
  %165 = getelementptr inbounds i16, i16* %158, i64 2
  %166 = getelementptr inbounds i16, i16* %160, i64 2
  %167 = load i16, i16* %166, align 2
  store i16 %167, i16* %165, align 2
  %168 = getelementptr inbounds i16, i16* %158, i64 3
  %169 = getelementptr inbounds i16, i16* %160, i64 3
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %158, i64 4
  %172 = getelementptr inbounds i16, i16* %160, i64 4
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %158, i64 5
  %175 = getelementptr inbounds i16, i16* %160, i64 5
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %158, i64 6
  %178 = getelementptr inbounds i16, i16* %160, i64 6
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %158, i64 7
  %181 = getelementptr inbounds i16, i16* %160, i64 7
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = add i64 %159, -8
  %184 = getelementptr inbounds i16, i16* %158, i64 8
  %185 = getelementptr inbounds i16, i16* %160, i64 8
  %186 = icmp eq i64 %183, 0
  br i1 %186, label %187, label %157, !llvm.loop !624

187:                                              ; preds = %152, %157, %132, %9
  %188 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 1
  %189 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 1
  %190 = load i64, i64* %189, align 8
  store i64 %190, i64* %188, align 8
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %0, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %4) #15
  %191 = bitcast %"class.v8_inspector::String16"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %191, i64 0, i32 1, i32 1
  %193 = load i8, i8* %192, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %195, label %198

195:                                              ; preds = %187
  %196 = bitcast %"class.v8_inspector::String16"* %4 to i8**
  %197 = load i8*, i8** %196, align 8
  call void @_ZdlPv(i8* %197) #16
  br label %198

198:                                              ; preds = %187, %195
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNK12v8_inspector12_GLOBAL__N_112ObjectMirror26buildObjectPreviewInternalEN2v85LocalINS2_7ContextEEEbbPiS6_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS7_14default_deleteISB_EEEE(%"class.v8_inspector::(anonymous namespace)::ObjectMirror"*, %"class.v8::Context"*, i1 zeroext, i1 zeroext, i32*, i32*, %"class.std::__1::unique_ptr.417"* nocapture) unnamed_addr #2 align 2 {
  %8 = alloca i8, align 1
  %9 = alloca %"class.std::__1::vector.580", align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.v8_inspector::String16", align 8
  %12 = alloca %"class.v8_inspector::String16", align 8
  %13 = alloca %"class.v8_inspector::String16", align 8
  %14 = alloca %"class.v8_inspector::StringView", align 8
  %15 = alloca %"class.v8_inspector::String16", align 8
  %16 = alloca %"class.v8_inspector::String16", align 8
  %17 = alloca %"class.v8_inspector::String16", align 8
  %18 = alloca %"class.v8_inspector::String16", align 8
  %19 = alloca %"class.v8_inspector::String16", align 8
  %20 = alloca %"class.v8_inspector::String16", align 8
  %21 = alloca %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", align 8
  %22 = alloca %"class.std::__1::vector.339", align 8
  %23 = alloca %"class.std::__1::unique_ptr.414", align 8
  %24 = alloca %"class.v8_inspector::String16", align 8
  %25 = alloca %"class.std::__1::vector", align 8
  %26 = alloca %"class.std::__1::vector.580", align 8
  %27 = alloca i8, align 1
  %28 = alloca %"class.std::__1::vector", align 8
  %29 = alloca %"class.std::__1::unique_ptr.414", align 8
  %30 = alloca %"class.std::__1::vector.632", align 8
  %31 = alloca %"class.std::__1::unique_ptr.414", align 8
  %32 = alloca %"class.std::__1::unique_ptr.417", align 8
  %33 = alloca i32, align 4
  %34 = alloca %"class.v8_inspector::String16", align 8
  %35 = alloca %"class.std::__1::vector.639", align 8
  %36 = alloca %"class.std::__1::unique_ptr.417", align 8
  %37 = alloca %"class.std::__1::unique_ptr.417", align 8
  %38 = alloca %"class.std::__1::unique_ptr.442", align 8
  %39 = alloca %"class.v8_inspector::String16", align 8
  %40 = tail call i8* @_Znwm(i64 24) #16
  %41 = bitcast i8* %40 to %"class.std::__1::vector.426"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 24, i1 false) #15
  %42 = ptrtoint i8* %40 to i64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %27) #15
  store i8 0, i8* %27, align 1
  %43 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 1, i32 0
  %44 = bitcast %"class.v8::Object"** %43 to %"class.v8::Value"**
  %45 = load %"class.v8::Value"*, %"class.v8::Value"** %44, align 8
  %46 = tail call zeroext i1 @_ZNK2v85Value7IsProxyEv(%"class.v8::Value"* %45) #15
  br i1 %46, label %47, label %52

47:                                               ; preds = %7, %47
  %48 = phi %"class.v8::Value"* [ %50, %47 ], [ %45, %7 ]
  %49 = bitcast %"class.v8::Value"* %48 to %"class.v8::Proxy"*
  %50 = tail call %"class.v8::Value"* @_ZN2v85Proxy9GetTargetEv(%"class.v8::Proxy"* %49) #15
  %51 = tail call zeroext i1 @_ZNK2v85Value7IsProxyEv(%"class.v8::Value"* %50) #15
  br i1 %51, label %47, label %52

52:                                               ; preds = %47, %7
  %53 = phi %"class.v8::Value"* [ %45, %7 ], [ %50, %47 ]
  %54 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %53) #15
  br i1 %54, label %55, label %1657

55:                                               ; preds = %52
  %56 = tail call zeroext i1 @_ZNK2v85Value7IsProxyEv(%"class.v8::Value"* %53) #15
  br i1 %56, label %1657, label %57

57:                                               ; preds = %55
  %58 = bitcast %"class.v8::Value"* %53 to %"class.v8::Object"*
  %59 = bitcast %"class.std::__1::vector"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #15
  %60 = bitcast %"class.std::__1::vector"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 24, i1 false) #15
  call void @_ZN12v8_inspector11ValueMirror21getInternalPropertiesEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEEPNSt3__16vectorINS_22InternalPropertyMirrorENS7_9allocatorIS9_EEEE(%"class.v8::Context"* %1, %"class.v8::Object"* %58, %"class.std::__1::vector"* nonnull %25) #15
  %61 = bitcast %"class.std::__1::vector.580"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 24, i1 false) #15
  %62 = call zeroext i1 @_ZNK2v85Value15IsBooleanObjectEv(%"class.v8::Value"* %53) #15
  br i1 %62, label %71, label %63

63:                                               ; preds = %57
  %64 = call zeroext i1 @_ZNK2v85Value14IsNumberObjectEv(%"class.v8::Value"* %53) #15
  br i1 %64, label %71, label %65

65:                                               ; preds = %63
  %66 = call zeroext i1 @_ZNK2v85Value14IsStringObjectEv(%"class.v8::Value"* %53) #15
  br i1 %66, label %71, label %67

67:                                               ; preds = %65
  %68 = call zeroext i1 @_ZNK2v85Value14IsSymbolObjectEv(%"class.v8::Value"* %53) #15
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = call zeroext i1 @_ZNK2v85Value14IsBigIntObjectEv(%"class.v8::Value"* %53) #15
  br i1 %70, label %71, label %82

71:                                               ; preds = %69, %67, %65, %63, %57
  %72 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %26, i64 0, i32 0, i32 1
  %73 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %26, i64 0, i32 0, i32 2, i32 0, i32 0
  %75 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %74, align 8
  %76 = icmp ult %"class.v8_inspector::String16"* %73, %75
  br i1 %76, label %77, label %81

77:                                               ; preds = %71
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* %73, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i64 0, i64 0)) #15
  %78 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %73, i64 1
  %79 = ptrtoint %"class.v8_inspector::String16"* %78 to i64
  %80 = bitcast %"class.v8_inspector::String16"** %72 to i64*
  store i64 %79, i64* %80, align 8
  br label %118

81:                                               ; preds = %71
  call void @_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA19_KcEEEvDpOT_(%"class.std::__1::vector.580"* nonnull %26, [19 x i8]* nonnull dereferenceable(19) @.str.46) #15
  br label %118

82:                                               ; preds = %69
  %83 = call zeroext i1 @_ZNK2v85Value9IsPromiseEv(%"class.v8::Value"* %53) #15
  br i1 %83, label %84, label %105

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %26, i64 0, i32 0, i32 1
  %86 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %26, i64 0, i32 0, i32 2, i32 0, i32 0
  %88 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %87, align 8
  %89 = icmp ult %"class.v8_inspector::String16"* %86, %88
  br i1 %89, label %90, label %94

90:                                               ; preds = %84
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* %86, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.47, i64 0, i64 0)) #15
  %91 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %86, i64 1
  %92 = ptrtoint %"class.v8_inspector::String16"* %91 to i64
  %93 = bitcast %"class.v8_inspector::String16"** %85 to i64*
  store i64 %92, i64* %93, align 8
  br label %96

94:                                               ; preds = %84
  call void @_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA17_KcEEEvDpOT_(%"class.std::__1::vector.580"* nonnull %26, [17 x i8]* nonnull dereferenceable(17) @.str.47) #15
  %95 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %85, align 8
  br label %96

96:                                               ; preds = %94, %90
  %97 = phi %"class.v8_inspector::String16"* [ %91, %90 ], [ %95, %94 ]
  %98 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %87, align 8
  %99 = icmp ult %"class.v8_inspector::String16"* %97, %98
  br i1 %99, label %100, label %104

100:                                              ; preds = %96
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* %97, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0)) #15
  %101 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %97, i64 1
  %102 = ptrtoint %"class.v8_inspector::String16"* %101 to i64
  %103 = bitcast %"class.v8_inspector::String16"** %85 to i64*
  store i64 %102, i64* %103, align 8
  br label %118

104:                                              ; preds = %96
  call void @_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA18_KcEEEvDpOT_(%"class.std::__1::vector.580"* nonnull %26, [18 x i8]* nonnull dereferenceable(18) @.str.48) #15
  br label %118

105:                                              ; preds = %82
  %106 = call zeroext i1 @_ZNK2v85Value17IsGeneratorObjectEv(%"class.v8::Value"* %53) #15
  br i1 %106, label %107, label %118

107:                                              ; preds = %105
  %108 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %26, i64 0, i32 0, i32 1
  %109 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %108, align 8
  %110 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %26, i64 0, i32 0, i32 2, i32 0, i32 0
  %111 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %110, align 8
  %112 = icmp ult %"class.v8_inspector::String16"* %109, %111
  br i1 %112, label %113, label %117

113:                                              ; preds = %107
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* %109, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.49, i64 0, i64 0)) #15
  %114 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %109, i64 1
  %115 = ptrtoint %"class.v8_inspector::String16"* %114 to i64
  %116 = bitcast %"class.v8_inspector::String16"** %108 to i64*
  store i64 %115, i64* %116, align 8
  br label %118

117:                                              ; preds = %107
  call void @_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA19_KcEEEvDpOT_(%"class.std::__1::vector.580"* nonnull %26, [19 x i8]* nonnull dereferenceable(19) @.str.49) #15
  br label %118

118:                                              ; preds = %117, %113, %105, %104, %100, %81, %77
  %119 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %120 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %119, align 8
  %121 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 1
  %122 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %121, align 8
  %123 = icmp eq %"struct.v8_inspector::InternalPropertyMirror"* %120, %122
  br i1 %123, label %224, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %26, i64 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %26, i64 0, i32 0, i32 1
  %127 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %28, i64 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %28, i64 0, i32 0, i32 2, i32 0, i32 0
  %129 = bitcast %"struct.v8_inspector::InternalPropertyMirror"** %127 to i64*
  br label %130

130:                                              ; preds = %221, %124
  %131 = phi %"struct.v8_inspector::InternalPropertyMirror"* [ %120, %124 ], [ %222, %221 ]
  %132 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %125, align 8
  %133 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %126, align 8
  %134 = icmp eq %"class.v8_inspector::String16"* %132, %133
  br i1 %134, label %194, label %135

135:                                              ; preds = %130
  %136 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %131 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %136, i64 0, i32 1, i32 1
  %138 = load i8, i8* %137, align 1
  %139 = icmp slt i8 %138, 0
  %140 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = zext i8 %138 to i64
  %143 = select i1 %139, i64 %141, i64 %142
  %144 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i16*, i16** %144, align 8
  %146 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %131 to i16*
  %147 = select i1 %139, i16* %145, i16* %146
  %148 = icmp eq i64 %143, 0
  br i1 %148, label %149, label %163

149:                                              ; preds = %135, %160
  %150 = phi %"class.v8_inspector::String16"* [ %161, %160 ], [ %132, %135 ]
  %151 = bitcast %"class.v8_inspector::String16"* %150 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %152 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %151, i64 0, i32 1, i32 1
  %153 = load i8, i8* %152, align 1
  %154 = icmp slt i8 %153, 0
  %155 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = zext i8 %153 to i64
  %158 = select i1 %154, i64 %156, i64 %157
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %194, label %160

160:                                              ; preds = %149
  %161 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %150, i64 1
  %162 = icmp eq %"class.v8_inspector::String16"* %161, %133
  br i1 %162, label %221, label %149

163:                                              ; preds = %135, %191
  %164 = phi %"class.v8_inspector::String16"* [ %192, %191 ], [ %132, %135 ]
  %165 = bitcast %"class.v8_inspector::String16"* %164 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %165, i64 0, i32 1, i32 1
  %167 = load i8, i8* %166, align 1
  %168 = icmp slt i8 %167, 0
  %169 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %170 = load i64, i64* %169, align 8
  %171 = zext i8 %167 to i64
  %172 = select i1 %168, i64 %170, i64 %171
  %173 = icmp eq i64 %172, %143
  br i1 %173, label %174, label %191

174:                                              ; preds = %163
  %175 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load i16*, i16** %175, align 8
  %177 = bitcast %"class.v8_inspector::String16"* %164 to i16*
  %178 = select i1 %168, i16* %176, i16* %177
  br label %179

179:                                              ; preds = %186, %174
  %180 = phi i64 [ %187, %186 ], [ %143, %174 ]
  %181 = phi i16* [ %189, %186 ], [ %147, %174 ]
  %182 = phi i16* [ %188, %186 ], [ %178, %174 ]
  %183 = load i16, i16* %182, align 2
  %184 = load i16, i16* %181, align 2
  %185 = icmp eq i16 %184, %183
  br i1 %185, label %186, label %191

186:                                              ; preds = %179
  %187 = add i64 %180, -1
  %188 = getelementptr inbounds i16, i16* %182, i64 1
  %189 = getelementptr inbounds i16, i16* %181, i64 1
  %190 = icmp eq i64 %187, 0
  br i1 %190, label %194, label %179

191:                                              ; preds = %179, %163
  %192 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %164, i64 1
  %193 = icmp eq %"class.v8_inspector::String16"* %192, %133
  br i1 %193, label %221, label %163

194:                                              ; preds = %149, %186, %130
  %195 = phi %"class.v8_inspector::String16"* [ %132, %130 ], [ %164, %186 ], [ %150, %149 ]
  %196 = icmp eq %"class.v8_inspector::String16"* %195, %133
  br i1 %196, label %221, label %197

197:                                              ; preds = %194
  %198 = load i32, i32* %4, align 4
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %220, label %200

200:                                              ; preds = %197
  %201 = add nsw i32 %198, -1
  store i32 %201, i32* %4, align 4
  %202 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %127, align 8
  %203 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %128, align 8
  %204 = icmp ult %"struct.v8_inspector::InternalPropertyMirror"* %202, %203
  br i1 %204, label %205, label %219

205:                                              ; preds = %200
  %206 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %202 to i8*
  %207 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %206, i8* align 8 %207, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %207, i8 0, i64 24, i1 false) #15
  %208 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %202, i64 0, i32 0, i32 1
  %209 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %131, i64 0, i32 0, i32 1
  %210 = load i64, i64* %209, align 8
  store i64 %210, i64* %208, align 8
  %211 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %202, i64 0, i32 1
  %212 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %131, i64 0, i32 1
  %213 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %212, i64 0, i32 0, i32 0, i32 0
  %214 = bitcast %"class.std::__1::unique_ptr.10"* %212 to i64*
  %215 = load i64, i64* %214, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %213, align 8
  %216 = bitcast %"class.std::__1::unique_ptr.10"* %211 to i64*
  store i64 %215, i64* %216, align 8
  %217 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %202, i64 1
  %218 = ptrtoint %"struct.v8_inspector::InternalPropertyMirror"* %217 to i64
  store i64 %218, i64* %129, align 8
  br label %221

219:                                              ; preds = %200
  call void @_ZNSt3__16vectorIN12v8_inspector22InternalPropertyMirrorENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* nonnull %28, %"struct.v8_inspector::InternalPropertyMirror"* dereferenceable(40) %131) #15
  br label %221

220:                                              ; preds = %197
  store i8 1, i8* %27, align 1
  br label %224

221:                                              ; preds = %191, %160, %219, %205, %194
  %222 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %131, i64 1
  %223 = icmp eq %"struct.v8_inspector::InternalPropertyMirror"* %222, %122
  br i1 %223, label %224, label %130

224:                                              ; preds = %221, %220, %118
  %225 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %26, i64 0, i32 0, i32 0
  %226 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %225, align 8
  %227 = icmp eq %"class.v8_inspector::String16"* %226, null
  br i1 %227, label %250, label %228

228:                                              ; preds = %224
  %229 = bitcast %"class.v8_inspector::String16"* %226 to i8*
  %230 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %26, i64 0, i32 0, i32 1
  %231 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %230, align 8
  %232 = icmp eq %"class.v8_inspector::String16"* %231, %226
  br i1 %232, label %248, label %233

233:                                              ; preds = %228, %243
  %234 = phi %"class.v8_inspector::String16"* [ %235, %243 ], [ %231, %228 ]
  %235 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %234, i64 -1
  %236 = bitcast %"class.v8_inspector::String16"* %235 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %237 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %236, i64 0, i32 1, i32 1
  %238 = load i8, i8* %237, align 1
  %239 = icmp slt i8 %238, 0
  br i1 %239, label %240, label %243

240:                                              ; preds = %233
  %241 = bitcast %"class.v8_inspector::String16"* %235 to i8**
  %242 = load i8*, i8** %241, align 8
  call void @_ZdlPv(i8* %242) #16
  br label %243

243:                                              ; preds = %240, %233
  %244 = icmp eq %"class.v8_inspector::String16"* %235, %226
  br i1 %244, label %245, label %233

245:                                              ; preds = %243
  %246 = bitcast %"class.std::__1::vector.580"* %26 to i8**
  %247 = load i8*, i8** %246, align 8
  br label %248

248:                                              ; preds = %245, %228
  %249 = phi i8* [ %247, %245 ], [ %229, %228 ]
  store %"class.v8_inspector::String16"* %226, %"class.v8_inspector::String16"** %230, align 8
  call void @_ZdlPv(i8* %249) #16
  br label %250

250:                                              ; preds = %248, %224
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #15
  %251 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %119, align 8
  %252 = icmp eq %"struct.v8_inspector::InternalPropertyMirror"* %251, null
  br i1 %252, label %283, label %253

253:                                              ; preds = %250
  %254 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %251 to i8*
  %255 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %121, align 8
  %256 = icmp eq %"struct.v8_inspector::InternalPropertyMirror"* %255, %251
  br i1 %256, label %281, label %257

257:                                              ; preds = %253, %276
  %258 = phi %"struct.v8_inspector::InternalPropertyMirror"* [ %259, %276 ], [ %255, %253 ]
  %259 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %258, i64 -1
  %260 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %258, i64 -1, i32 1, i32 0, i32 0, i32 0
  %261 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %260, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %260, align 8
  %262 = icmp eq %"class.v8_inspector::ValueMirror"* %261, null
  br i1 %262, label %268, label %263

263:                                              ; preds = %257
  %264 = bitcast %"class.v8_inspector::ValueMirror"* %261 to void (%"class.v8_inspector::ValueMirror"*)***
  %265 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %264, align 8
  %266 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %265, i64 1
  %267 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %266, align 8
  call void %267(%"class.v8_inspector::ValueMirror"* nonnull %261) #15
  br label %268

268:                                              ; preds = %263, %257
  %269 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %259 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %270 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %269, i64 0, i32 1, i32 1
  %271 = load i8, i8* %270, align 1
  %272 = icmp slt i8 %271, 0
  br i1 %272, label %273, label %276

273:                                              ; preds = %268
  %274 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %259 to i8**
  %275 = load i8*, i8** %274, align 8
  call void @_ZdlPv(i8* %275) #16
  br label %276

276:                                              ; preds = %273, %268
  %277 = icmp eq %"struct.v8_inspector::InternalPropertyMirror"* %259, %251
  br i1 %277, label %278, label %257

278:                                              ; preds = %276
  %279 = bitcast %"class.std::__1::vector"* %25 to i8**
  %280 = load i8*, i8** %279, align 8
  br label %281

281:                                              ; preds = %278, %253
  %282 = phi i8* [ %280, %278 ], [ %254, %253 ]
  store %"struct.v8_inspector::InternalPropertyMirror"* %251, %"struct.v8_inspector::InternalPropertyMirror"** %121, align 8
  call void @_ZdlPv(i8* %282) #16
  br label %283

283:                                              ; preds = %250, %281
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #15
  %284 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %28, i64 0, i32 0, i32 1
  %285 = bitcast %"struct.v8_inspector::InternalPropertyMirror"** %284 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = bitcast %"class.std::__1::vector"* %28 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = icmp eq i64 %286, %288
  br i1 %289, label %299, label %290

290:                                              ; preds = %283
  %291 = bitcast %"class.std::__1::unique_ptr.414"* %29 to i8*
  %292 = bitcast %"class.std::__1::unique_ptr.414"* %29 to i64*
  %293 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %29, i64 0, i32 0, i32 0, i32 0
  %294 = getelementptr inbounds i8, i8* %40, i64 8
  %295 = bitcast i8* %294 to %"class.std::__1::unique_ptr.414"**
  %296 = getelementptr inbounds i8, i8* %40, i64 16
  %297 = bitcast i8* %296 to %"class.std::__1::unique_ptr.414"**
  %298 = bitcast i8* %294 to i64*
  br label %1026

299:                                              ; preds = %1058, %283
  %300 = bitcast %"class.std::__1::vector.339"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %300) #15
  call void @_ZN12v8_inspector11ValueMirror20getPrivatePropertiesEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEE(%"class.std::__1::vector.339"* nonnull sret %22, %"class.v8::Context"* %1, %"class.v8::Object"* %58) #15
  %301 = getelementptr inbounds %"class.std::__1::vector.339", %"class.std::__1::vector.339"* %22, i64 0, i32 0, i32 0
  %302 = load %"struct.v8_inspector::PrivatePropertyMirror"*, %"struct.v8_inspector::PrivatePropertyMirror"** %301, align 8
  %303 = getelementptr inbounds %"class.std::__1::vector.339", %"class.std::__1::vector.339"* %22, i64 0, i32 0, i32 1
  %304 = load %"struct.v8_inspector::PrivatePropertyMirror"*, %"struct.v8_inspector::PrivatePropertyMirror"** %303, align 8
  %305 = icmp eq %"struct.v8_inspector::PrivatePropertyMirror"* %302, %304
  br i1 %305, label %401, label %306

306:                                              ; preds = %299
  %307 = bitcast %"class.std::__1::unique_ptr.414"* %23 to i8*
  %308 = bitcast %"class.std::__1::unique_ptr.414"* %23 to i64*
  %309 = bitcast %"class.v8_inspector::String16"* %24 to i8*
  %310 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %24, i64 0, i32 0
  %311 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %24, i64 0, i32 1
  %312 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %23, i64 0, i32 0, i32 0, i32 0
  %313 = bitcast %"class.v8_inspector::String16"* %24 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %314 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %313, i64 0, i32 1, i32 1
  %315 = bitcast %"class.v8_inspector::String16"* %24 to i8**
  %316 = getelementptr inbounds i8, i8* %40, i64 8
  %317 = bitcast i8* %316 to %"class.std::__1::unique_ptr.414"**
  %318 = getelementptr inbounds i8, i8* %40, i64 16
  %319 = bitcast i8* %318 to %"class.std::__1::unique_ptr.414"**
  %320 = bitcast i8* %316 to i64*
  br label %321

321:                                              ; preds = %396, %306
  %322 = phi %"struct.v8_inspector::PrivatePropertyMirror"* [ %302, %306 ], [ %397, %396 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %307) #15
  store i64 0, i64* %308, align 8
  %323 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %322, i64 0, i32 1, i32 0, i32 0, i32 0
  %324 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %323, align 8
  %325 = icmp eq %"class.v8_inspector::ValueMirror"* %324, null
  br i1 %325, label %332, label %326

326:                                              ; preds = %321
  %327 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %322, i64 0, i32 0
  %328 = bitcast %"class.v8_inspector::ValueMirror"* %324 to void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)***
  %329 = load void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)**, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)*** %328, align 8
  %330 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)*, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)** %329, i64 3
  %331 = load void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)*, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)** %330, align 8
  call void %331(%"class.v8_inspector::ValueMirror"* nonnull %324, %"class.v8::Context"* %1, %"class.v8_inspector::String16"* dereferenceable(32) %327, %"class.std::__1::unique_ptr.414"* nonnull %23) #15
  br label %366

332:                                              ; preds = %321
  %333 = call i8* @_Znwm(i64 160) #16
  %334 = bitcast i8* %333 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime15PropertyPreviewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %334, align 8
  %335 = getelementptr inbounds i8, i8* %333, i64 8
  %336 = getelementptr inbounds i8, i8* %333, i64 80
  %337 = getelementptr inbounds i8, i8* %333, i64 128
  call void @llvm.memset.p0i8.i64(i8* align 8 %337, i8 0, i64 32, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %335, i8 0, i64 65, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %336, i8 0, i64 41, i1 false) #15
  %338 = bitcast i8* %335 to %"class.std::__1::basic_string"*
  %339 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %322, i64 0, i32 0, i32 0
  %340 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %338, %"class.std::__1::basic_string"* dereferenceable(24) %339) #15
  %341 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %322, i64 0, i32 0, i32 1
  %342 = load i64, i64* %341, align 8
  %343 = getelementptr inbounds i8, i8* %333, i64 32
  %344 = bitcast i8* %343 to i64*
  store i64 %342, i64* %344, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %309) #15
  %345 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime15PropertyPreview8TypeEnum8AccessorE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %24, i8* %345) #15
  %346 = getelementptr inbounds i8, i8* %333, i64 40
  %347 = bitcast i8* %346 to %"class.std::__1::basic_string"*
  %348 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %347, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %310) #15
  %349 = load i64, i64* %311, align 8
  %350 = getelementptr inbounds i8, i8* %333, i64 64
  %351 = bitcast i8* %350 to i64*
  store i64 %349, i64* %351, align 8
  %352 = ptrtoint i8* %333 to i64
  %353 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %312, align 8
  store i64 %352, i64* %308, align 8
  %354 = icmp eq %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %353, null
  br i1 %354, label %360, label %355

355:                                              ; preds = %332
  %356 = bitcast %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %353 to void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)***
  %357 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*** %356, align 8
  %358 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %357, i64 2
  %359 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %358, align 8
  call void %359(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %353) #15
  br label %360

360:                                              ; preds = %355, %332
  %361 = load i8, i8* %314, align 1
  %362 = icmp slt i8 %361, 0
  br i1 %362, label %363, label %365

363:                                              ; preds = %360
  %364 = load i8*, i8** %315, align 8
  call void @_ZdlPv(i8* %364) #16
  br label %365

365:                                              ; preds = %363, %360
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %309) #15
  br label %366

366:                                              ; preds = %365, %326
  %367 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %312, align 8
  %368 = icmp eq %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %367, null
  %369 = ptrtoint %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %367 to i64
  br i1 %368, label %370, label %371

370:                                              ; preds = %366
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %307) #15
  br label %396

371:                                              ; preds = %366
  %372 = load i32, i32* %4, align 4
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %375

374:                                              ; preds = %371
  store i8 1, i8* %27, align 1
  br label %385

375:                                              ; preds = %371
  %376 = add nsw i32 %372, -1
  store i32 %376, i32* %4, align 4
  %377 = load %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"** %317, align 8
  %378 = load %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"** %319, align 8
  %379 = icmp ult %"class.std::__1::unique_ptr.414"* %377, %378
  br i1 %379, label %380, label %384

380:                                              ; preds = %375
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %312, align 8
  %381 = bitcast %"class.std::__1::unique_ptr.414"* %377 to i64*
  store i64 %369, i64* %381, align 8
  %382 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %377, i64 1
  %383 = ptrtoint %"class.std::__1::unique_ptr.414"* %382 to i64
  store i64 %383, i64* %320, align 8
  br label %385

384:                                              ; preds = %375
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime15PropertyPreviewENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.426"* nonnull %41, %"class.std::__1::unique_ptr.414"* nonnull dereferenceable(8) %23) #15
  br label %385

385:                                              ; preds = %384, %380, %374
  %386 = phi i32 [ 0, %384 ], [ 0, %380 ], [ 1, %374 ]
  %387 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %312, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %312, align 8
  %388 = icmp eq %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %387, null
  br i1 %388, label %394, label %389

389:                                              ; preds = %385
  %390 = bitcast %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %387 to void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)***
  %391 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*** %390, align 8
  %392 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %391, i64 2
  %393 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %392, align 8
  call void %393(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %387) #15
  br label %394

394:                                              ; preds = %389, %385
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %307) #15
  %395 = icmp eq i32 %386, 0
  br i1 %395, label %396, label %399

396:                                              ; preds = %394, %370
  %397 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %322, i64 1
  %398 = icmp eq %"struct.v8_inspector::PrivatePropertyMirror"* %397, %304
  br i1 %398, label %399, label %321

399:                                              ; preds = %396, %394
  %400 = load %"struct.v8_inspector::PrivatePropertyMirror"*, %"struct.v8_inspector::PrivatePropertyMirror"** %301, align 8
  br label %401

401:                                              ; preds = %399, %299
  %402 = phi %"struct.v8_inspector::PrivatePropertyMirror"* [ %400, %399 ], [ %302, %299 ]
  %403 = icmp eq %"struct.v8_inspector::PrivatePropertyMirror"* %402, null
  br i1 %403, label %452, label %404

404:                                              ; preds = %401
  %405 = bitcast %"struct.v8_inspector::PrivatePropertyMirror"* %402 to i8*
  %406 = load %"struct.v8_inspector::PrivatePropertyMirror"*, %"struct.v8_inspector::PrivatePropertyMirror"** %303, align 8
  %407 = icmp eq %"struct.v8_inspector::PrivatePropertyMirror"* %406, %402
  br i1 %407, label %450, label %408

408:                                              ; preds = %404, %445
  %409 = phi %"struct.v8_inspector::PrivatePropertyMirror"* [ %410, %445 ], [ %406, %404 ]
  %410 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %409, i64 -1
  %411 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %409, i64 -1, i32 3, i32 0, i32 0, i32 0
  %412 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %411, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %411, align 8
  %413 = icmp eq %"class.v8_inspector::ValueMirror"* %412, null
  br i1 %413, label %419, label %414

414:                                              ; preds = %408
  %415 = bitcast %"class.v8_inspector::ValueMirror"* %412 to void (%"class.v8_inspector::ValueMirror"*)***
  %416 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %415, align 8
  %417 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %416, i64 1
  %418 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %417, align 8
  call void %418(%"class.v8_inspector::ValueMirror"* nonnull %412) #15
  br label %419

419:                                              ; preds = %414, %408
  %420 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %409, i64 -1, i32 2, i32 0, i32 0, i32 0
  %421 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %420, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %420, align 8
  %422 = icmp eq %"class.v8_inspector::ValueMirror"* %421, null
  br i1 %422, label %428, label %423

423:                                              ; preds = %419
  %424 = bitcast %"class.v8_inspector::ValueMirror"* %421 to void (%"class.v8_inspector::ValueMirror"*)***
  %425 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %424, align 8
  %426 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %425, i64 1
  %427 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %426, align 8
  call void %427(%"class.v8_inspector::ValueMirror"* nonnull %421) #15
  br label %428

428:                                              ; preds = %423, %419
  %429 = getelementptr inbounds %"struct.v8_inspector::PrivatePropertyMirror", %"struct.v8_inspector::PrivatePropertyMirror"* %409, i64 -1, i32 1, i32 0, i32 0, i32 0
  %430 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %429, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %429, align 8
  %431 = icmp eq %"class.v8_inspector::ValueMirror"* %430, null
  br i1 %431, label %437, label %432

432:                                              ; preds = %428
  %433 = bitcast %"class.v8_inspector::ValueMirror"* %430 to void (%"class.v8_inspector::ValueMirror"*)***
  %434 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %433, align 8
  %435 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %434, i64 1
  %436 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %435, align 8
  call void %436(%"class.v8_inspector::ValueMirror"* nonnull %430) #15
  br label %437

437:                                              ; preds = %432, %428
  %438 = bitcast %"struct.v8_inspector::PrivatePropertyMirror"* %410 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %439 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %438, i64 0, i32 1, i32 1
  %440 = load i8, i8* %439, align 1
  %441 = icmp slt i8 %440, 0
  br i1 %441, label %442, label %445

442:                                              ; preds = %437
  %443 = bitcast %"struct.v8_inspector::PrivatePropertyMirror"* %410 to i8**
  %444 = load i8*, i8** %443, align 8
  call void @_ZdlPv(i8* %444) #16
  br label %445

445:                                              ; preds = %442, %437
  %446 = icmp eq %"struct.v8_inspector::PrivatePropertyMirror"* %410, %402
  br i1 %446, label %447, label %408

447:                                              ; preds = %445
  %448 = bitcast %"class.std::__1::vector.339"* %22 to i8**
  %449 = load i8*, i8** %448, align 8
  br label %450

450:                                              ; preds = %447, %404
  %451 = phi i8* [ %449, %447 ], [ %405, %404 ]
  store %"struct.v8_inspector::PrivatePropertyMirror"* %402, %"struct.v8_inspector::PrivatePropertyMirror"** %303, align 8
  call void @_ZdlPv(i8* %451) #16
  br label %452

452:                                              ; preds = %401, %450
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %300) #15
  %453 = bitcast %"class.std::__1::vector.632"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %453) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %453, i8 0, i64 24, i1 false) #15
  %454 = bitcast %"class.std::__1::vector.580"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %454) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %454, i8 0, i64 24, i1 false) #15
  %455 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %455) #15
  store i64 0, i64* %10, align 8
  %456 = call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %53) #15
  br i1 %456, label %461, label %457

457:                                              ; preds = %452
  %458 = call fastcc zeroext i1 @_ZN12v8_inspector12_GLOBAL__N_111isArrayLikeEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEEPm(%"class.v8::Context"* %1, %"class.v8::Value"* %53, i64* nonnull %10) #15
  br i1 %458, label %461, label %459

459:                                              ; preds = %457
  %460 = call zeroext i1 @_ZNK2v85Value14IsStringObjectEv(%"class.v8::Value"* %53) #15
  br i1 %460, label %461, label %485

461:                                              ; preds = %459, %457, %452
  %462 = bitcast %"class.v8_inspector::String16"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %462) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #15
  %463 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %9, i64 0, i32 0, i32 1
  %464 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %463, align 8
  %465 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %466 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %465, align 8
  %467 = icmp ult %"class.v8_inspector::String16"* %464, %466
  br i1 %467, label %468, label %476

468:                                              ; preds = %461
  %469 = bitcast %"class.v8_inspector::String16"* %464 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %469, i8* nonnull align 8 %462, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %462, i8 0, i64 24, i1 false) #15
  %470 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %464, i64 0, i32 1
  %471 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %11, i64 0, i32 1
  %472 = load i64, i64* %471, align 8
  store i64 %472, i64* %470, align 8
  %473 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %464, i64 1
  %474 = ptrtoint %"class.v8_inspector::String16"* %473 to i64
  %475 = bitcast %"class.v8_inspector::String16"** %463 to i64*
  store i64 %474, i64* %475, align 8
  br label %484

476:                                              ; preds = %461
  call void @_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.580"* nonnull %9, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %11) #15
  %477 = bitcast %"class.v8_inspector::String16"* %11 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %478 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %477, i64 0, i32 1, i32 1
  %479 = load i8, i8* %478, align 1
  %480 = icmp slt i8 %479, 0
  br i1 %480, label %481, label %484

481:                                              ; preds = %476
  %482 = bitcast %"class.v8_inspector::String16"* %11 to i8**
  %483 = load i8*, i8** %482, align 8
  call void @_ZdlPv(i8* %483) #16
  br label %484

484:                                              ; preds = %481, %476, %468
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %462) #15
  br label %614

485:                                              ; preds = %459
  %486 = call zeroext i1 @_ZN2v85debug15WasmValueObject17IsWasmValueObjectENS_5LocalINS_5ValueEEE(%"class.v8::Value"* %53) #15
  br i1 %486, label %487, label %511

487:                                              ; preds = %485
  %488 = bitcast %"class.v8_inspector::String16"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %488) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0)) #15
  %489 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %9, i64 0, i32 0, i32 1
  %490 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %489, align 8
  %491 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %492 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %491, align 8
  %493 = icmp ult %"class.v8_inspector::String16"* %490, %492
  br i1 %493, label %494, label %502

494:                                              ; preds = %487
  %495 = bitcast %"class.v8_inspector::String16"* %490 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %495, i8* nonnull align 8 %488, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %488, i8 0, i64 24, i1 false) #15
  %496 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %490, i64 0, i32 1
  %497 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %12, i64 0, i32 1
  %498 = load i64, i64* %497, align 8
  store i64 %498, i64* %496, align 8
  %499 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %490, i64 1
  %500 = ptrtoint %"class.v8_inspector::String16"* %499 to i64
  %501 = bitcast %"class.v8_inspector::String16"** %489 to i64*
  store i64 %500, i64* %501, align 8
  br label %510

502:                                              ; preds = %487
  call void @_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.580"* nonnull %9, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %12) #15
  %503 = bitcast %"class.v8_inspector::String16"* %12 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %504 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %503, i64 0, i32 1, i32 1
  %505 = load i8, i8* %504, align 1
  %506 = icmp slt i8 %505, 0
  br i1 %506, label %507, label %510

507:                                              ; preds = %502
  %508 = bitcast %"class.v8_inspector::String16"* %12 to i8**
  %509 = load i8*, i8** %508, align 8
  call void @_ZdlPv(i8* %509) #16
  br label %510

510:                                              ; preds = %507, %502, %494
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %488) #15
  br label %614

511:                                              ; preds = %485
  %512 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %1) #15
  %513 = call %"class.v8_inspector::V8Inspector"* @_ZN2v85debug12GetInspectorEPNS_7IsolateE(%"class.v8::Isolate"* %512) #15
  %514 = getelementptr inbounds %"class.v8_inspector::V8Inspector", %"class.v8_inspector::V8Inspector"* %513, i64 2
  %515 = bitcast %"class.v8_inspector::V8Inspector"* %514 to %"class.v8_inspector::V8InspectorClient"**
  %516 = load %"class.v8_inspector::V8InspectorClient"*, %"class.v8_inspector::V8InspectorClient"** %515, align 8
  %517 = bitcast %"class.v8_inspector::V8InspectorClient"* %516 to %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)***
  %518 = load %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)**, %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)*** %517, align 8
  %519 = getelementptr inbounds %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)*, %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)** %518, i64 9
  %520 = load %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)*, %"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Value"*)** %519, align 8
  %521 = call %"class.v8_inspector::StringBuffer"* %520(%"class.v8_inspector::V8InspectorClient"* %516, %"class.v8::Value"* %53) #15
  %522 = icmp eq %"class.v8_inspector::StringBuffer"* %521, null
  %523 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %523) #15
  br i1 %522, label %583, label %524

524:                                              ; preds = %511
  %525 = bitcast %"class.v8_inspector::String16"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %525) #15
  %526 = bitcast %"class.v8_inspector::StringBuffer"* %521 to void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)***
  %527 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)**, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)*** %526, align 8
  %528 = getelementptr inbounds void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)** %527, i64 2
  %529 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)** %528, align 8
  call void %529(%"class.v8_inspector::StringView"* nonnull sret %14, %"class.v8_inspector::StringBuffer"* nonnull %521) #15
  call void @_ZN12v8_inspector10toString16ERKNS_10StringViewE(%"class.v8_inspector::String16"* nonnull sret %13, %"class.v8_inspector::StringView"* nonnull dereferenceable(24) %14) #15
  %530 = bitcast %"class.v8_inspector::String16"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %530) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0)) #15
  %531 = bitcast %"class.v8_inspector::String16"* %13 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %532 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %531, i64 0, i32 1, i32 1
  %533 = load i8, i8* %532, align 1
  %534 = icmp slt i8 %533, 0
  %535 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %536 = load i64, i64* %535, align 8
  %537 = zext i8 %533 to i64
  %538 = select i1 %534, i64 %536, i64 %537
  %539 = bitcast %"class.v8_inspector::String16"* %15 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %540 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %539, i64 0, i32 1, i32 1
  %541 = load i8, i8* %540, align 1
  %542 = icmp slt i8 %541, 0
  %543 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %544 = load i64, i64* %543, align 8
  %545 = zext i8 %541 to i64
  %546 = select i1 %542, i64 %544, i64 %545
  %547 = icmp eq i64 %538, %546
  br i1 %547, label %548, label %571

548:                                              ; preds = %524
  %549 = icmp eq i64 %538, 0
  br i1 %549, label %571, label %550

550:                                              ; preds = %548
  %551 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %552 = load i16*, i16** %551, align 8
  %553 = bitcast %"class.v8_inspector::String16"* %15 to i16*
  %554 = select i1 %542, i16* %552, i16* %553
  %555 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %556 = load i16*, i16** %555, align 8
  %557 = bitcast %"class.v8_inspector::String16"* %13 to i16*
  %558 = select i1 %534, i16* %556, i16* %557
  br label %559

559:                                              ; preds = %566, %550
  %560 = phi i64 [ %567, %566 ], [ %538, %550 ]
  %561 = phi i16* [ %569, %566 ], [ %554, %550 ]
  %562 = phi i16* [ %568, %566 ], [ %558, %550 ]
  %563 = load i16, i16* %562, align 2
  %564 = load i16, i16* %561, align 2
  %565 = icmp eq i16 %564, %563
  br i1 %565, label %566, label %571

566:                                              ; preds = %559
  %567 = add i64 %560, -1
  %568 = getelementptr inbounds i16, i16* %562, i64 1
  %569 = getelementptr inbounds i16, i16* %561, i64 1
  %570 = icmp eq i64 %567, 0
  br i1 %570, label %571, label %559

571:                                              ; preds = %566, %559, %548, %524
  %572 = phi i1 [ true, %548 ], [ false, %524 ], [ false, %559 ], [ true, %566 ]
  br i1 %542, label %573, label %577

573:                                              ; preds = %571
  %574 = bitcast %"class.v8_inspector::String16"* %15 to i8**
  %575 = load i8*, i8** %574, align 8
  call void @_ZdlPv(i8* %575) #16
  %576 = load i8, i8* %532, align 1
  br label %577

577:                                              ; preds = %573, %571
  %578 = phi i8 [ %533, %571 ], [ %576, %573 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %530) #15
  %579 = icmp slt i8 %578, 0
  br i1 %579, label %580, label %584

580:                                              ; preds = %577
  %581 = bitcast %"class.v8_inspector::String16"* %13 to i8**
  %582 = load i8*, i8** %581, align 8
  call void @_ZdlPv(i8* %582) #16
  br label %584

583:                                              ; preds = %511
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %523) #15
  br label %614

584:                                              ; preds = %580, %577
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %523) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %525) #15
  br i1 %572, label %585, label %609

585:                                              ; preds = %584
  %586 = bitcast %"class.v8_inspector::String16"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %586) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %16, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #15
  %587 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %9, i64 0, i32 0, i32 1
  %588 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %587, align 8
  %589 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %590 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %589, align 8
  %591 = icmp ult %"class.v8_inspector::String16"* %588, %590
  br i1 %591, label %592, label %600

592:                                              ; preds = %585
  %593 = bitcast %"class.v8_inspector::String16"* %588 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %593, i8* nonnull align 8 %586, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %586, i8 0, i64 24, i1 false) #15
  %594 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %588, i64 0, i32 1
  %595 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %16, i64 0, i32 1
  %596 = load i64, i64* %595, align 8
  store i64 %596, i64* %594, align 8
  %597 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %588, i64 1
  %598 = ptrtoint %"class.v8_inspector::String16"* %597 to i64
  %599 = bitcast %"class.v8_inspector::String16"** %587 to i64*
  store i64 %598, i64* %599, align 8
  br label %608

600:                                              ; preds = %585
  call void @_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.580"* nonnull %9, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %16) #15
  %601 = bitcast %"class.v8_inspector::String16"* %16 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %602 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %601, i64 0, i32 1, i32 1
  %603 = load i8, i8* %602, align 1
  %604 = icmp slt i8 %603, 0
  br i1 %604, label %605, label %608

605:                                              ; preds = %600
  %606 = bitcast %"class.v8_inspector::String16"* %16 to i8**
  %607 = load i8*, i8** %606, align 8
  call void @_ZdlPv(i8* %607) #16
  br label %608

608:                                              ; preds = %605, %600, %592
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %586) #15
  br label %609

609:                                              ; preds = %608, %584
  %610 = bitcast %"class.v8_inspector::StringBuffer"* %521 to void (%"class.v8_inspector::StringBuffer"*)***
  %611 = load void (%"class.v8_inspector::StringBuffer"*)**, void (%"class.v8_inspector::StringBuffer"*)*** %610, align 8
  %612 = getelementptr inbounds void (%"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringBuffer"*)** %611, i64 1
  %613 = load void (%"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringBuffer"*)** %612, align 8
  call void %613(%"class.v8_inspector::StringBuffer"* nonnull %521) #15
  br label %614

614:                                              ; preds = %609, %583, %510, %484
  %615 = call zeroext i1 @_ZNK2v85Value13IsArrayBufferEv(%"class.v8::Value"* %53) #15
  br i1 %615, label %618, label %616

616:                                              ; preds = %614
  %617 = call zeroext i1 @_ZNK2v85Value19IsSharedArrayBufferEv(%"class.v8::Value"* %53) #15
  br i1 %617, label %618, label %705

618:                                              ; preds = %616, %614
  %619 = bitcast %"class.v8_inspector::String16"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %619) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %17, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.51, i64 0, i64 0)) #15
  %620 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %9, i64 0, i32 0, i32 1
  %621 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %620, align 8
  %622 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %623 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %622, align 8
  %624 = icmp ult %"class.v8_inspector::String16"* %621, %623
  br i1 %624, label %625, label %633

625:                                              ; preds = %618
  %626 = bitcast %"class.v8_inspector::String16"* %621 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %626, i8* nonnull align 8 %619, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %619, i8 0, i64 24, i1 false) #15
  %627 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %621, i64 0, i32 1
  %628 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %17, i64 0, i32 1
  %629 = load i64, i64* %628, align 8
  store i64 %629, i64* %627, align 8
  %630 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %621, i64 1
  %631 = ptrtoint %"class.v8_inspector::String16"* %630 to i64
  %632 = bitcast %"class.v8_inspector::String16"** %620 to i64*
  store i64 %631, i64* %632, align 8
  br label %641

633:                                              ; preds = %618
  call void @_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.580"* nonnull %9, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %17) #15
  %634 = bitcast %"class.v8_inspector::String16"* %17 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %635 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %634, i64 0, i32 1, i32 1
  %636 = load i8, i8* %635, align 1
  %637 = icmp slt i8 %636, 0
  br i1 %637, label %638, label %641

638:                                              ; preds = %633
  %639 = bitcast %"class.v8_inspector::String16"* %17 to i8**
  %640 = load i8*, i8** %639, align 8
  call void @_ZdlPv(i8* %640) #16
  br label %641

641:                                              ; preds = %638, %633, %625
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %619) #15
  %642 = bitcast %"class.v8_inspector::String16"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %642) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i64 0, i64 0)) #15
  %643 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %620, align 8
  %644 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %622, align 8
  %645 = icmp ult %"class.v8_inspector::String16"* %643, %644
  br i1 %645, label %646, label %654

646:                                              ; preds = %641
  %647 = bitcast %"class.v8_inspector::String16"* %643 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %647, i8* nonnull align 8 %642, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %642, i8 0, i64 24, i1 false) #15
  %648 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %643, i64 0, i32 1
  %649 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %18, i64 0, i32 1
  %650 = load i64, i64* %649, align 8
  store i64 %650, i64* %648, align 8
  %651 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %643, i64 1
  %652 = ptrtoint %"class.v8_inspector::String16"* %651 to i64
  %653 = bitcast %"class.v8_inspector::String16"** %620 to i64*
  store i64 %652, i64* %653, align 8
  br label %662

654:                                              ; preds = %641
  call void @_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.580"* nonnull %9, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %18) #15
  %655 = bitcast %"class.v8_inspector::String16"* %18 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %656 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %655, i64 0, i32 1, i32 1
  %657 = load i8, i8* %656, align 1
  %658 = icmp slt i8 %657, 0
  br i1 %658, label %659, label %662

659:                                              ; preds = %654
  %660 = bitcast %"class.v8_inspector::String16"* %18 to i8**
  %661 = load i8*, i8** %660, align 8
  call void @_ZdlPv(i8* %661) #16
  br label %662

662:                                              ; preds = %659, %654, %646
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %642) #15
  %663 = bitcast %"class.v8_inspector::String16"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %663) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.53, i64 0, i64 0)) #15
  %664 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %620, align 8
  %665 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %622, align 8
  %666 = icmp ult %"class.v8_inspector::String16"* %664, %665
  br i1 %666, label %667, label %675

667:                                              ; preds = %662
  %668 = bitcast %"class.v8_inspector::String16"* %664 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %668, i8* nonnull align 8 %663, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %663, i8 0, i64 24, i1 false) #15
  %669 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %664, i64 0, i32 1
  %670 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %19, i64 0, i32 1
  %671 = load i64, i64* %670, align 8
  store i64 %671, i64* %669, align 8
  %672 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %664, i64 1
  %673 = ptrtoint %"class.v8_inspector::String16"* %672 to i64
  %674 = bitcast %"class.v8_inspector::String16"** %620 to i64*
  store i64 %673, i64* %674, align 8
  br label %683

675:                                              ; preds = %662
  call void @_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.580"* nonnull %9, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %19) #15
  %676 = bitcast %"class.v8_inspector::String16"* %19 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %677 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %676, i64 0, i32 1, i32 1
  %678 = load i8, i8* %677, align 1
  %679 = icmp slt i8 %678, 0
  br i1 %679, label %680, label %683

680:                                              ; preds = %675
  %681 = bitcast %"class.v8_inspector::String16"* %19 to i8**
  %682 = load i8*, i8** %681, align 8
  call void @_ZdlPv(i8* %682) #16
  br label %683

683:                                              ; preds = %680, %675, %667
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %663) #15
  %684 = bitcast %"class.v8_inspector::String16"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %684) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i64 0, i64 0)) #15
  %685 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %620, align 8
  %686 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %622, align 8
  %687 = icmp ult %"class.v8_inspector::String16"* %685, %686
  br i1 %687, label %688, label %696

688:                                              ; preds = %683
  %689 = bitcast %"class.v8_inspector::String16"* %685 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %689, i8* nonnull align 8 %684, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %684, i8 0, i64 24, i1 false) #15
  %690 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %685, i64 0, i32 1
  %691 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %20, i64 0, i32 1
  %692 = load i64, i64* %691, align 8
  store i64 %692, i64* %690, align 8
  %693 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %685, i64 1
  %694 = ptrtoint %"class.v8_inspector::String16"* %693 to i64
  %695 = bitcast %"class.v8_inspector::String16"** %620 to i64*
  store i64 %694, i64* %695, align 8
  br label %704

696:                                              ; preds = %683
  call void @_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.580"* nonnull %9, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %20) #15
  %697 = bitcast %"class.v8_inspector::String16"* %20 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %698 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %697, i64 0, i32 1, i32 1
  %699 = load i8, i8* %698, align 1
  %700 = icmp slt i8 %699, 0
  br i1 %700, label %701, label %704

701:                                              ; preds = %696
  %702 = bitcast %"class.v8_inspector::String16"* %20 to i8**
  %703 = load i8*, i8** %702, align 8
  call void @_ZdlPv(i8* %703) #16
  br label %704

704:                                              ; preds = %701, %696, %688
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %684) #15
  br label %705

705:                                              ; preds = %704, %616
  %706 = call zeroext i1 @_ZNK2v85Value14IsStringObjectEv(%"class.v8::Value"* %53) #15
  br i1 %706, label %707, label %712

707:                                              ; preds = %705
  %708 = bitcast %"class.v8::Value"* %53 to %"class.v8::StringObject"*
  %709 = call %"class.v8::String"* @_ZNK2v812StringObject7ValueOfEv(%"class.v8::StringObject"* %708) #15
  %710 = call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* %709) #15
  %711 = add nsw i32 %710, 1
  br label %712

712:                                              ; preds = %707, %705
  %713 = phi i32 [ %711, %707 ], [ -1, %705 ]
  %714 = bitcast %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %714) #15
  %715 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %21, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_126PreviewPropertyAccumulatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %715, align 8
  %716 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %21, i64 0, i32 1
  %717 = bitcast %"class.std::__1::vector.580"* %716 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %717, i8 0, i64 24, i1 false) #15
  %718 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %9, i64 0, i32 0, i32 1
  %719 = bitcast %"class.v8_inspector::String16"** %718 to i64*
  %720 = load i64, i64* %719, align 8
  %721 = bitcast %"class.std::__1::vector.580"* %9 to i64*
  %722 = load i64, i64* %721, align 8
  %723 = sub i64 %720, %722
  %724 = ashr exact i64 %723, 5
  %725 = icmp eq i64 %723, 0
  %726 = inttoptr i64 %722 to %"class.v8_inspector::String16"*
  %727 = inttoptr i64 %720 to %"class.v8_inspector::String16"*
  br i1 %725, label %940, label %728

728:                                              ; preds = %712
  %729 = icmp ugt i64 %724, 576460752303423487
  br i1 %729, label %730, label %732

730:                                              ; preds = %728
  %731 = bitcast %"class.std::__1::vector.580"* %716 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %731) #14
  unreachable

732:                                              ; preds = %728
  %733 = call i8* @_Znwm(i64 %723) #16
  %734 = bitcast i8* %733 to %"class.v8_inspector::String16"*
  %735 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %21, i64 0, i32 1, i32 0, i32 1
  %736 = bitcast %"class.v8_inspector::String16"** %735 to i8**
  store i8* %733, i8** %736, align 8
  %737 = bitcast %"class.std::__1::vector.580"* %716 to i8**
  store i8* %733, i8** %737, align 8
  %738 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %734, i64 %724
  %739 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %21, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.v8_inspector::String16"* %738, %"class.v8_inspector::String16"** %739, align 8
  %740 = bitcast %"class.v8_inspector::String16"** %735 to i64*
  %741 = ptrtoint i8* %733 to i64
  %742 = icmp eq %"class.v8_inspector::String16"* %726, %727
  br i1 %742, label %938, label %743

743:                                              ; preds = %732, %929
  %744 = phi %"class.v8_inspector::String16"* [ %934, %929 ], [ %734, %732 ]
  %745 = phi %"class.v8_inspector::String16"* [ %933, %929 ], [ %726, %732 ]
  %746 = bitcast %"class.v8_inspector::String16"* %745 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %747 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %746, i64 0, i32 1, i32 1
  %748 = load i8, i8* %747, align 1
  %749 = icmp slt i8 %748, 0
  br i1 %749, label %753, label %750

750:                                              ; preds = %743
  %751 = bitcast %"class.v8_inspector::String16"* %744 to i8*
  %752 = bitcast %"class.v8_inspector::String16"* %745 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %751, i8* align 8 %752, i64 24, i1 false) #15
  br label %929

753:                                              ; preds = %743
  %754 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %745, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %755 = load i16*, i16** %754, align 8
  %756 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %745, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %757 = load i64, i64* %756, align 8
  %758 = icmp ult i64 %757, 11
  br i1 %758, label %759, label %764

759:                                              ; preds = %753
  %760 = bitcast %"class.v8_inspector::String16"* %744 to i16*
  %761 = trunc i64 %757 to i8
  %762 = bitcast %"class.v8_inspector::String16"* %744 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %763 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %762, i64 0, i32 1, i32 1
  store i8 %761, i8* %763, align 1
  br label %781

764:                                              ; preds = %753
  %765 = icmp ugt i64 %757, 9223372036854775791
  br i1 %765, label %766, label %768

766:                                              ; preds = %764
  %767 = bitcast %"class.v8_inspector::String16"* %744 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %767) #14
  unreachable

768:                                              ; preds = %764
  %769 = add nuw nsw i64 %757, 8
  %770 = and i64 %769, -8
  %771 = icmp slt i64 %770, 0
  br i1 %771, label %772, label %773

772:                                              ; preds = %768
  call void @abort() #14
  unreachable

773:                                              ; preds = %768
  %774 = shl i64 %770, 1
  %775 = call i8* @_Znwm(i64 %774) #16
  %776 = bitcast i8* %775 to i16*
  %777 = bitcast %"class.v8_inspector::String16"* %744 to i8**
  store i8* %775, i8** %777, align 8
  %778 = or i64 %770, -9223372036854775808
  %779 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %744, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %778, i64* %779, align 8
  %780 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %744, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %757, i64* %780, align 8
  br label %781

781:                                              ; preds = %773, %759
  %782 = phi i16* [ %760, %759 ], [ %776, %773 ]
  %783 = add nuw nsw i64 %757, 1
  %784 = add i64 %757, 1
  %785 = icmp ult i64 %784, 16
  br i1 %785, label %876, label %786

786:                                              ; preds = %781
  %787 = getelementptr i16, i16* %782, i64 1
  %788 = getelementptr i16, i16* %787, i64 %757
  %789 = getelementptr i16, i16* %755, i64 1
  %790 = getelementptr i16, i16* %789, i64 %757
  %791 = icmp ult i16* %782, %790
  %792 = icmp ult i16* %755, %788
  %793 = and i1 %791, %792
  br i1 %793, label %876, label %794

794:                                              ; preds = %786
  %795 = and i64 %784, -16
  %796 = getelementptr i16, i16* %782, i64 %795
  %797 = sub i64 %783, %795
  %798 = getelementptr i16, i16* %755, i64 %795
  %799 = add i64 %795, -16
  %800 = lshr exact i64 %799, 4
  %801 = add nuw nsw i64 %800, 1
  %802 = and i64 %801, 3
  %803 = icmp ult i64 %799, 48
  br i1 %803, label %855, label %804

804:                                              ; preds = %794
  %805 = sub nsw i64 %801, %802
  br label %806

806:                                              ; preds = %806, %804
  %807 = phi i64 [ 0, %804 ], [ %852, %806 ]
  %808 = phi i64 [ %805, %804 ], [ %853, %806 ]
  %809 = getelementptr i16, i16* %782, i64 %807
  %810 = getelementptr i16, i16* %755, i64 %807
  %811 = bitcast i16* %810 to <8 x i16>*
  %812 = load <8 x i16>, <8 x i16>* %811, align 2, !alias.scope !625
  %813 = getelementptr i16, i16* %810, i64 8
  %814 = bitcast i16* %813 to <8 x i16>*
  %815 = load <8 x i16>, <8 x i16>* %814, align 2, !alias.scope !625
  %816 = bitcast i16* %809 to <8 x i16>*
  store <8 x i16> %812, <8 x i16>* %816, align 2, !alias.scope !628, !noalias !625
  %817 = getelementptr i16, i16* %809, i64 8
  %818 = bitcast i16* %817 to <8 x i16>*
  store <8 x i16> %815, <8 x i16>* %818, align 2, !alias.scope !628, !noalias !625
  %819 = or i64 %807, 16
  %820 = getelementptr i16, i16* %782, i64 %819
  %821 = getelementptr i16, i16* %755, i64 %819
  %822 = bitcast i16* %821 to <8 x i16>*
  %823 = load <8 x i16>, <8 x i16>* %822, align 2, !alias.scope !625
  %824 = getelementptr i16, i16* %821, i64 8
  %825 = bitcast i16* %824 to <8 x i16>*
  %826 = load <8 x i16>, <8 x i16>* %825, align 2, !alias.scope !625
  %827 = bitcast i16* %820 to <8 x i16>*
  store <8 x i16> %823, <8 x i16>* %827, align 2, !alias.scope !628, !noalias !625
  %828 = getelementptr i16, i16* %820, i64 8
  %829 = bitcast i16* %828 to <8 x i16>*
  store <8 x i16> %826, <8 x i16>* %829, align 2, !alias.scope !628, !noalias !625
  %830 = or i64 %807, 32
  %831 = getelementptr i16, i16* %782, i64 %830
  %832 = getelementptr i16, i16* %755, i64 %830
  %833 = bitcast i16* %832 to <8 x i16>*
  %834 = load <8 x i16>, <8 x i16>* %833, align 2, !alias.scope !625
  %835 = getelementptr i16, i16* %832, i64 8
  %836 = bitcast i16* %835 to <8 x i16>*
  %837 = load <8 x i16>, <8 x i16>* %836, align 2, !alias.scope !625
  %838 = bitcast i16* %831 to <8 x i16>*
  store <8 x i16> %834, <8 x i16>* %838, align 2, !alias.scope !628, !noalias !625
  %839 = getelementptr i16, i16* %831, i64 8
  %840 = bitcast i16* %839 to <8 x i16>*
  store <8 x i16> %837, <8 x i16>* %840, align 2, !alias.scope !628, !noalias !625
  %841 = or i64 %807, 48
  %842 = getelementptr i16, i16* %782, i64 %841
  %843 = getelementptr i16, i16* %755, i64 %841
  %844 = bitcast i16* %843 to <8 x i16>*
  %845 = load <8 x i16>, <8 x i16>* %844, align 2, !alias.scope !625
  %846 = getelementptr i16, i16* %843, i64 8
  %847 = bitcast i16* %846 to <8 x i16>*
  %848 = load <8 x i16>, <8 x i16>* %847, align 2, !alias.scope !625
  %849 = bitcast i16* %842 to <8 x i16>*
  store <8 x i16> %845, <8 x i16>* %849, align 2, !alias.scope !628, !noalias !625
  %850 = getelementptr i16, i16* %842, i64 8
  %851 = bitcast i16* %850 to <8 x i16>*
  store <8 x i16> %848, <8 x i16>* %851, align 2, !alias.scope !628, !noalias !625
  %852 = add i64 %807, 64
  %853 = add i64 %808, -4
  %854 = icmp eq i64 %853, 0
  br i1 %854, label %855, label %806, !llvm.loop !630

855:                                              ; preds = %806, %794
  %856 = phi i64 [ 0, %794 ], [ %852, %806 ]
  %857 = icmp eq i64 %802, 0
  br i1 %857, label %874, label %858

858:                                              ; preds = %855, %858
  %859 = phi i64 [ %871, %858 ], [ %856, %855 ]
  %860 = phi i64 [ %872, %858 ], [ %802, %855 ]
  %861 = getelementptr i16, i16* %782, i64 %859
  %862 = getelementptr i16, i16* %755, i64 %859
  %863 = bitcast i16* %862 to <8 x i16>*
  %864 = load <8 x i16>, <8 x i16>* %863, align 2, !alias.scope !625
  %865 = getelementptr i16, i16* %862, i64 8
  %866 = bitcast i16* %865 to <8 x i16>*
  %867 = load <8 x i16>, <8 x i16>* %866, align 2, !alias.scope !625
  %868 = bitcast i16* %861 to <8 x i16>*
  store <8 x i16> %864, <8 x i16>* %868, align 2, !alias.scope !628, !noalias !625
  %869 = getelementptr i16, i16* %861, i64 8
  %870 = bitcast i16* %869 to <8 x i16>*
  store <8 x i16> %867, <8 x i16>* %870, align 2, !alias.scope !628, !noalias !625
  %871 = add i64 %859, 16
  %872 = add i64 %860, -1
  %873 = icmp eq i64 %872, 0
  br i1 %873, label %874, label %858, !llvm.loop !631

874:                                              ; preds = %858, %855
  %875 = icmp eq i64 %784, %795
  br i1 %875, label %929, label %876

876:                                              ; preds = %874, %786, %781
  %877 = phi i16* [ %782, %786 ], [ %782, %781 ], [ %796, %874 ]
  %878 = phi i64 [ %783, %786 ], [ %783, %781 ], [ %797, %874 ]
  %879 = phi i16* [ %755, %786 ], [ %755, %781 ], [ %798, %874 ]
  %880 = add i64 %878, -1
  %881 = and i64 %878, 7
  %882 = icmp eq i64 %881, 0
  br i1 %882, label %894, label %883

883:                                              ; preds = %876, %883
  %884 = phi i16* [ %890, %883 ], [ %877, %876 ]
  %885 = phi i64 [ %889, %883 ], [ %878, %876 ]
  %886 = phi i16* [ %891, %883 ], [ %879, %876 ]
  %887 = phi i64 [ %892, %883 ], [ %881, %876 ]
  %888 = load i16, i16* %886, align 2
  store i16 %888, i16* %884, align 2
  %889 = add i64 %885, -1
  %890 = getelementptr inbounds i16, i16* %884, i64 1
  %891 = getelementptr inbounds i16, i16* %886, i64 1
  %892 = add i64 %887, -1
  %893 = icmp eq i64 %892, 0
  br i1 %893, label %894, label %883, !llvm.loop !632

894:                                              ; preds = %883, %876
  %895 = phi i16* [ %877, %876 ], [ %890, %883 ]
  %896 = phi i64 [ %878, %876 ], [ %889, %883 ]
  %897 = phi i16* [ %879, %876 ], [ %891, %883 ]
  %898 = icmp ult i64 %880, 7
  br i1 %898, label %929, label %899

899:                                              ; preds = %894, %899
  %900 = phi i16* [ %926, %899 ], [ %895, %894 ]
  %901 = phi i64 [ %925, %899 ], [ %896, %894 ]
  %902 = phi i16* [ %927, %899 ], [ %897, %894 ]
  %903 = load i16, i16* %902, align 2
  store i16 %903, i16* %900, align 2
  %904 = getelementptr inbounds i16, i16* %900, i64 1
  %905 = getelementptr inbounds i16, i16* %902, i64 1
  %906 = load i16, i16* %905, align 2
  store i16 %906, i16* %904, align 2
  %907 = getelementptr inbounds i16, i16* %900, i64 2
  %908 = getelementptr inbounds i16, i16* %902, i64 2
  %909 = load i16, i16* %908, align 2
  store i16 %909, i16* %907, align 2
  %910 = getelementptr inbounds i16, i16* %900, i64 3
  %911 = getelementptr inbounds i16, i16* %902, i64 3
  %912 = load i16, i16* %911, align 2
  store i16 %912, i16* %910, align 2
  %913 = getelementptr inbounds i16, i16* %900, i64 4
  %914 = getelementptr inbounds i16, i16* %902, i64 4
  %915 = load i16, i16* %914, align 2
  store i16 %915, i16* %913, align 2
  %916 = getelementptr inbounds i16, i16* %900, i64 5
  %917 = getelementptr inbounds i16, i16* %902, i64 5
  %918 = load i16, i16* %917, align 2
  store i16 %918, i16* %916, align 2
  %919 = getelementptr inbounds i16, i16* %900, i64 6
  %920 = getelementptr inbounds i16, i16* %902, i64 6
  %921 = load i16, i16* %920, align 2
  store i16 %921, i16* %919, align 2
  %922 = getelementptr inbounds i16, i16* %900, i64 7
  %923 = getelementptr inbounds i16, i16* %902, i64 7
  %924 = load i16, i16* %923, align 2
  store i16 %924, i16* %922, align 2
  %925 = add i64 %901, -8
  %926 = getelementptr inbounds i16, i16* %900, i64 8
  %927 = getelementptr inbounds i16, i16* %902, i64 8
  %928 = icmp eq i64 %925, 0
  br i1 %928, label %929, label %899, !llvm.loop !633

929:                                              ; preds = %894, %899, %874, %750
  %930 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %744, i64 0, i32 1
  %931 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %745, i64 0, i32 1
  %932 = load i64, i64* %931, align 8
  store i64 %932, i64* %930, align 8
  %933 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %745, i64 1
  %934 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %744, i64 1
  %935 = icmp eq %"class.v8_inspector::String16"* %933, %727
  br i1 %935, label %936, label %743

936:                                              ; preds = %929
  %937 = ptrtoint %"class.v8_inspector::String16"* %934 to i64
  br label %938

938:                                              ; preds = %936, %732
  %939 = phi i64 [ %741, %732 ], [ %937, %936 ]
  store i64 %939, i64* %740, align 8
  br label %940

940:                                              ; preds = %938, %712
  %941 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %21, i64 0, i32 2
  store i32 %713, i32* %941, align 8
  %942 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %21, i64 0, i32 3
  store i32* %4, i32** %942, align 8
  %943 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %21, i64 0, i32 4
  store i32* %5, i32** %943, align 8
  %944 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %21, i64 0, i32 5
  store i8* %27, i8** %944, align 8
  %945 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %21, i64 0, i32 6
  store %"class.std::__1::vector.632"* %30, %"class.std::__1::vector.632"** %945, align 8
  %946 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %21, i64 0, i32 0
  %947 = call zeroext i1 @_ZN12v8_inspector11ValueMirror13getPropertiesEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEEbbPNS0_19PropertyAccumulatorE(%"class.v8::Context"* %1, %"class.v8::Object"* %58, i1 zeroext false, i1 zeroext false, %"class.v8_inspector::ValueMirror::PropertyAccumulator"* nonnull %946) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_126PreviewPropertyAccumulatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %715, align 8
  %948 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %716, i64 0, i32 0, i32 0
  %949 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %948, align 8
  %950 = icmp eq %"class.v8_inspector::String16"* %949, null
  br i1 %950, label %973, label %951

951:                                              ; preds = %940
  %952 = bitcast %"class.v8_inspector::String16"* %949 to i8*
  %953 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %21, i64 0, i32 1, i32 0, i32 1
  %954 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %953, align 8
  %955 = icmp eq %"class.v8_inspector::String16"* %954, %949
  br i1 %955, label %971, label %956

956:                                              ; preds = %951, %966
  %957 = phi %"class.v8_inspector::String16"* [ %958, %966 ], [ %954, %951 ]
  %958 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %957, i64 -1
  %959 = bitcast %"class.v8_inspector::String16"* %958 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %960 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %959, i64 0, i32 1, i32 1
  %961 = load i8, i8* %960, align 1
  %962 = icmp slt i8 %961, 0
  br i1 %962, label %963, label %966

963:                                              ; preds = %956
  %964 = bitcast %"class.v8_inspector::String16"* %958 to i8**
  %965 = load i8*, i8** %964, align 8
  call void @_ZdlPv(i8* %965) #16
  br label %966

966:                                              ; preds = %963, %956
  %967 = icmp eq %"class.v8_inspector::String16"* %958, %949
  br i1 %967, label %968, label %956

968:                                              ; preds = %966
  %969 = bitcast %"class.std::__1::vector.580"* %716 to i8**
  %970 = load i8*, i8** %969, align 8
  br label %971

971:                                              ; preds = %968, %951
  %972 = phi i8* [ %970, %968 ], [ %952, %951 ]
  store %"class.v8_inspector::String16"* %949, %"class.v8_inspector::String16"** %953, align 8
  call void @_ZdlPv(i8* %972) #16
  br label %973

973:                                              ; preds = %971, %940
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %714) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %455) #15
  %974 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %9, i64 0, i32 0, i32 0
  %975 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %974, align 8
  %976 = icmp eq %"class.v8_inspector::String16"* %975, null
  br i1 %976, label %998, label %977

977:                                              ; preds = %973
  %978 = bitcast %"class.v8_inspector::String16"* %975 to i8*
  %979 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %718, align 8
  %980 = icmp eq %"class.v8_inspector::String16"* %979, %975
  br i1 %980, label %996, label %981

981:                                              ; preds = %977, %991
  %982 = phi %"class.v8_inspector::String16"* [ %983, %991 ], [ %979, %977 ]
  %983 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %982, i64 -1
  %984 = bitcast %"class.v8_inspector::String16"* %983 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %985 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %984, i64 0, i32 1, i32 1
  %986 = load i8, i8* %985, align 1
  %987 = icmp slt i8 %986, 0
  br i1 %987, label %988, label %991

988:                                              ; preds = %981
  %989 = bitcast %"class.v8_inspector::String16"* %983 to i8**
  %990 = load i8*, i8** %989, align 8
  call void @_ZdlPv(i8* %990) #16
  br label %991

991:                                              ; preds = %988, %981
  %992 = icmp eq %"class.v8_inspector::String16"* %983, %975
  br i1 %992, label %993, label %981

993:                                              ; preds = %991
  %994 = bitcast %"class.std::__1::vector.580"* %9 to i8**
  %995 = load i8*, i8** %994, align 8
  br label %996

996:                                              ; preds = %993, %977
  %997 = phi i8* [ %995, %993 ], [ %978, %977 ]
  store %"class.v8_inspector::String16"* %975, %"class.v8_inspector::String16"** %718, align 8
  call void @_ZdlPv(i8* %997) #16
  br label %998

998:                                              ; preds = %973, %996
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %454) #15
  br i1 %947, label %999, label %1170

999:                                              ; preds = %998
  %1000 = getelementptr inbounds %"class.std::__1::vector.632", %"class.std::__1::vector.632"* %30, i64 0, i32 0, i32 1
  %1001 = bitcast %"struct.v8_inspector::PropertyMirror"** %1000 to i64*
  %1002 = load i64, i64* %1001, align 8
  %1003 = bitcast %"class.std::__1::vector.632"* %30 to i64*
  %1004 = load i64, i64* %1003, align 8
  %1005 = icmp eq i64 %1002, %1004
  br i1 %1005, label %1170, label %1006

1006:                                             ; preds = %999
  %1007 = bitcast %"class.std::__1::unique_ptr.414"* %31 to i8*
  %1008 = bitcast %"class.std::__1::unique_ptr.414"* %31 to i64*
  %1009 = bitcast %"class.std::__1::unique_ptr.417"* %32 to i8*
  %1010 = bitcast %"class.std::__1::unique_ptr.417"* %32 to i64*
  %1011 = getelementptr inbounds %"class.std::__1::vector.632", %"class.std::__1::vector.632"* %30, i64 0, i32 0, i32 0
  %1012 = bitcast i32* %33 to i8*
  %1013 = bitcast %"class.v8_inspector::String16"* %34 to i8*
  %1014 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %34, i64 0, i32 0
  %1015 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %34, i64 0, i32 1
  %1016 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %31, i64 0, i32 0, i32 0, i32 0
  %1017 = bitcast %"class.v8_inspector::String16"* %34 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1018 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1017, i64 0, i32 1, i32 1
  %1019 = bitcast %"class.v8_inspector::String16"* %34 to i8**
  %1020 = getelementptr inbounds %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.417"* %32, i64 0, i32 0, i32 0, i32 0
  %1021 = getelementptr inbounds i8, i8* %40, i64 8
  %1022 = bitcast i8* %1021 to %"class.std::__1::unique_ptr.414"**
  %1023 = getelementptr inbounds i8, i8* %40, i64 16
  %1024 = bitcast i8* %1023 to %"class.std::__1::unique_ptr.414"**
  %1025 = bitcast i8* %1021 to i64*
  br label %1065

1026:                                             ; preds = %290, %1058
  %1027 = phi i64 [ %288, %290 ], [ %1061, %1058 ]
  %1028 = phi i64 [ 0, %290 ], [ %1059, %1058 ]
  %1029 = inttoptr i64 %1027 to %"struct.v8_inspector::InternalPropertyMirror"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %291) #15
  store i64 0, i64* %292, align 8
  %1030 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %1029, i64 %1028, i32 1, i32 0, i32 0, i32 0
  %1031 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %1030, align 8
  %1032 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %1029, i64 %1028, i32 0
  %1033 = bitcast %"class.v8_inspector::ValueMirror"* %1031 to void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)***
  %1034 = load void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)**, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)*** %1033, align 8
  %1035 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)*, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)** %1034, i64 3
  %1036 = load void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)*, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)** %1035, align 8
  call void %1036(%"class.v8_inspector::ValueMirror"* %1031, %"class.v8::Context"* %1, %"class.v8_inspector::String16"* dereferenceable(32) %1032, %"class.std::__1::unique_ptr.414"* nonnull %29) #15
  %1037 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %293, align 8
  %1038 = icmp eq %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %1037, null
  %1039 = ptrtoint %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %1037 to i64
  br i1 %1038, label %1040, label %1041

1040:                                             ; preds = %1026
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %293, align 8
  br label %1058

1041:                                             ; preds = %1026
  %1042 = load %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"** %295, align 8
  %1043 = load %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"** %297, align 8
  %1044 = icmp ult %"class.std::__1::unique_ptr.414"* %1042, %1043
  br i1 %1044, label %1045, label %1049

1045:                                             ; preds = %1041
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %293, align 8
  %1046 = bitcast %"class.std::__1::unique_ptr.414"* %1042 to i64*
  store i64 %1039, i64* %1046, align 8
  %1047 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %1042, i64 1
  %1048 = ptrtoint %"class.std::__1::unique_ptr.414"* %1047 to i64
  store i64 %1048, i64* %298, align 8
  br label %1050

1049:                                             ; preds = %1041
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime15PropertyPreviewENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.426"* nonnull %41, %"class.std::__1::unique_ptr.414"* nonnull dereferenceable(8) %29) #15
  br label %1050

1050:                                             ; preds = %1049, %1045
  %1051 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %293, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %293, align 8
  %1052 = icmp eq %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %1051, null
  br i1 %1052, label %1058, label %1053

1053:                                             ; preds = %1050
  %1054 = bitcast %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %1051 to void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)***
  %1055 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*** %1054, align 8
  %1056 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %1055, i64 2
  %1057 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %1056, align 8
  call void %1057(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %1051) #15
  br label %1058

1058:                                             ; preds = %1040, %1050, %1053
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %291) #15
  %1059 = add nuw i64 %1028, 1
  %1060 = load i64, i64* %285, align 8
  %1061 = load i64, i64* %287, align 8
  %1062 = sub i64 %1060, %1061
  %1063 = sdiv exact i64 %1062, 40
  %1064 = icmp ult i64 %1059, %1063
  br i1 %1064, label %1026, label %299

1065:                                             ; preds = %1006, %1163
  %1066 = phi i64 [ %1004, %1006 ], [ %1166, %1163 ]
  %1067 = phi i64 [ 0, %1006 ], [ %1164, %1163 ]
  %1068 = inttoptr i64 %1066 to %"struct.v8_inspector::PropertyMirror"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1007) #15
  store i64 0, i64* %1008, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1009) #15
  store i64 0, i64* %1010, align 8
  %1069 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1068, i64 %1067
  %1070 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1068, i64 %1067, i32 6, i32 0, i32 0, i32 0
  %1071 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %1070, align 8
  %1072 = icmp eq %"class.v8_inspector::ValueMirror"* %1071, null
  br i1 %1072, label %1087, label %1073

1073:                                             ; preds = %1065
  %1074 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1069, i64 0, i32 0
  %1075 = bitcast %"class.v8_inspector::ValueMirror"* %1071 to void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)***
  %1076 = load void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)**, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)*** %1075, align 8
  %1077 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)*, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)** %1076, i64 3
  %1078 = load void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)*, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"*, %"class.std::__1::unique_ptr.414"*)** %1077, align 8
  call void %1078(%"class.v8_inspector::ValueMirror"* nonnull %1071, %"class.v8::Context"* %1, %"class.v8_inspector::String16"* dereferenceable(32) %1074, %"class.std::__1::unique_ptr.414"* nonnull %31) #15
  br i1 %3, label %1079, label %1121

1079:                                             ; preds = %1073
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1012) #15
  store i32 1000, i32* %33, align 4
  %1080 = load %"struct.v8_inspector::PropertyMirror"*, %"struct.v8_inspector::PropertyMirror"** %1011, align 8
  %1081 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1080, i64 %1067, i32 6, i32 0, i32 0, i32 0
  %1082 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %1081, align 8
  %1083 = bitcast %"class.v8_inspector::ValueMirror"* %1082 to void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i1, i32*, i32*, %"class.std::__1::unique_ptr.417"*)***
  %1084 = load void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i1, i32*, i32*, %"class.std::__1::unique_ptr.417"*)**, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i1, i32*, i32*, %"class.std::__1::unique_ptr.417"*)*** %1083, align 8
  %1085 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i1, i32*, i32*, %"class.std::__1::unique_ptr.417"*)*, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i1, i32*, i32*, %"class.std::__1::unique_ptr.417"*)** %1084, i64 4
  %1086 = load void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i1, i32*, i32*, %"class.std::__1::unique_ptr.417"*)*, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i1, i32*, i32*, %"class.std::__1::unique_ptr.417"*)** %1085, align 8
  call void %1086(%"class.v8_inspector::ValueMirror"* %1082, %"class.v8::Context"* %1, i1 zeroext false, i32* nonnull %33, i32* nonnull %33, %"class.std::__1::unique_ptr.417"* nonnull %32) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1012) #15
  br label %1121

1087:                                             ; preds = %1065
  %1088 = call i8* @_Znwm(i64 160) #16
  %1089 = bitcast i8* %1088 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime15PropertyPreviewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1089, align 8
  %1090 = getelementptr inbounds i8, i8* %1088, i64 8
  %1091 = getelementptr inbounds i8, i8* %1088, i64 80
  %1092 = getelementptr inbounds i8, i8* %1088, i64 128
  call void @llvm.memset.p0i8.i64(i8* align 8 %1092, i8 0, i64 32, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %1090, i8 0, i64 65, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %1091, i8 0, i64 41, i1 false) #15
  %1093 = bitcast i8* %1090 to %"class.std::__1::basic_string"*
  %1094 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1069, i64 0, i32 0, i32 0
  %1095 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %1093, %"class.std::__1::basic_string"* dereferenceable(24) %1094) #15
  %1096 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1068, i64 %1067, i32 0, i32 1
  %1097 = load i64, i64* %1096, align 8
  %1098 = getelementptr inbounds i8, i8* %1088, i64 32
  %1099 = bitcast i8* %1098 to i64*
  store i64 %1097, i64* %1099, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1013) #15
  %1100 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime15PropertyPreview8TypeEnum8AccessorE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %34, i8* %1100) #15
  %1101 = getelementptr inbounds i8, i8* %1088, i64 40
  %1102 = bitcast i8* %1101 to %"class.std::__1::basic_string"*
  %1103 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %1102, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %1014) #15
  %1104 = load i64, i64* %1015, align 8
  %1105 = getelementptr inbounds i8, i8* %1088, i64 64
  %1106 = bitcast i8* %1105 to i64*
  store i64 %1104, i64* %1106, align 8
  %1107 = ptrtoint i8* %1088 to i64
  %1108 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %1016, align 8
  store i64 %1107, i64* %1008, align 8
  %1109 = icmp eq %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %1108, null
  br i1 %1109, label %1115, label %1110

1110:                                             ; preds = %1087
  %1111 = bitcast %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %1108 to void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)***
  %1112 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*** %1111, align 8
  %1113 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %1112, i64 2
  %1114 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %1113, align 8
  call void %1114(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %1108) #15
  br label %1115

1115:                                             ; preds = %1110, %1087
  %1116 = load i8, i8* %1018, align 1
  %1117 = icmp slt i8 %1116, 0
  br i1 %1117, label %1118, label %1120

1118:                                             ; preds = %1115
  %1119 = load i8*, i8** %1019, align 8
  call void @_ZdlPv(i8* %1119) #16
  br label %1120

1120:                                             ; preds = %1118, %1115
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1013) #15
  br label %1121

1121:                                             ; preds = %1073, %1079, %1120
  %1122 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1020, align 8
  %1123 = icmp eq %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1122, null
  br i1 %1123, label %1137, label %1124

1124:                                             ; preds = %1121
  %1125 = ptrtoint %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1122 to i64
  %1126 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %1016, align 8
  store %"class.v8_inspector::protocol::Runtime::ObjectPreview"* null, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1020, align 8
  %1127 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::PropertyPreview", %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %1126, i64 0, i32 4
  %1128 = getelementptr inbounds %"class.v8_crdtp::detail::PtrMaybe", %"class.v8_crdtp::detail::PtrMaybe"* %1127, i64 0, i32 0, i32 0, i32 0, i32 0
  %1129 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1128, align 8
  %1130 = bitcast %"class.v8_crdtp::detail::PtrMaybe"* %1127 to i64*
  store i64 %1125, i64* %1130, align 8
  %1131 = icmp eq %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1129, null
  br i1 %1131, label %1137, label %1132

1132:                                             ; preds = %1124
  %1133 = bitcast %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1129 to void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)***
  %1134 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*** %1133, align 8
  %1135 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %1134, i64 2
  %1136 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %1135, align 8
  call void %1136(%"class.v8_inspector::protocol::Runtime::ObjectPreview"* nonnull %1129) #15
  br label %1137

1137:                                             ; preds = %1121, %1132, %1124
  %1138 = load %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"** %1022, align 8
  %1139 = load %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"** %1024, align 8
  %1140 = icmp ult %"class.std::__1::unique_ptr.414"* %1138, %1139
  br i1 %1140, label %1141, label %1146

1141:                                             ; preds = %1137
  %1142 = load i64, i64* %1008, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %1016, align 8
  %1143 = bitcast %"class.std::__1::unique_ptr.414"* %1138 to i64*
  store i64 %1142, i64* %1143, align 8
  %1144 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %1138, i64 1
  %1145 = ptrtoint %"class.std::__1::unique_ptr.414"* %1144 to i64
  store i64 %1145, i64* %1025, align 8
  br label %1147

1146:                                             ; preds = %1137
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime15PropertyPreviewENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.426"* nonnull %41, %"class.std::__1::unique_ptr.414"* nonnull dereferenceable(8) %31) #15
  br label %1147

1147:                                             ; preds = %1141, %1146
  %1148 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1020, align 8
  store %"class.v8_inspector::protocol::Runtime::ObjectPreview"* null, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1020, align 8
  %1149 = icmp eq %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1148, null
  br i1 %1149, label %1155, label %1150

1150:                                             ; preds = %1147
  %1151 = bitcast %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1148 to void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)***
  %1152 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*** %1151, align 8
  %1153 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %1152, i64 2
  %1154 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %1153, align 8
  call void %1154(%"class.v8_inspector::protocol::Runtime::ObjectPreview"* nonnull %1148) #15
  br label %1155

1155:                                             ; preds = %1147, %1150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1009) #15
  %1156 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %1016, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %1016, align 8
  %1157 = icmp eq %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %1156, null
  br i1 %1157, label %1163, label %1158

1158:                                             ; preds = %1155
  %1159 = bitcast %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %1156 to void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)***
  %1160 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*** %1159, align 8
  %1161 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %1160, i64 2
  %1162 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %1161, align 8
  call void %1162(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %1156) #15
  br label %1163

1163:                                             ; preds = %1155, %1158
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1007) #15
  %1164 = add nuw i64 %1067, 1
  %1165 = load i64, i64* %1001, align 8
  %1166 = load i64, i64* %1003, align 8
  %1167 = sub i64 %1165, %1166
  %1168 = sdiv exact i64 %1167, 80
  %1169 = icmp ult i64 %1164, %1168
  br i1 %1169, label %1065, label %1170

1170:                                             ; preds = %1163, %999, %998
  %1171 = bitcast %"class.std::__1::vector.639"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1171) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1171, i8 0, i64 24, i1 false) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #15
  store i8 0, i8* %8, align 1
  %1172 = call %"class.v8::Array"* @_ZN2v86Object14PreviewEntriesEPb(%"class.v8::Object"* %58, i8* nonnull %8) #15
  %1173 = icmp eq %"class.v8::Array"* %1172, null
  br i1 %1173, label %1174, label %1175

1174:                                             ; preds = %1170
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #15
  br label %1514

1175:                                             ; preds = %1170
  %1176 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* nonnull %1172) #15
  %1177 = icmp eq i32 %1176, 0
  br i1 %1177, label %1178, label %1179

1178:                                             ; preds = %1175
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #15
  br label %1514

1179:                                             ; preds = %1175
  %1180 = bitcast %"class.v8::Array"* %1172 to %"class.v8::Object"*
  %1181 = getelementptr inbounds %"class.std::__1::vector.639", %"class.std::__1::vector.639"* %35, i64 0, i32 0, i32 1
  %1182 = bitcast %"struct.v8_inspector::(anonymous namespace)::EntryMirror"** %1181 to i64*
  %1183 = bitcast %"class.std::__1::vector.639"* %35 to i64*
  %1184 = getelementptr inbounds %"class.std::__1::vector.639", %"class.std::__1::vector.639"* %35, i64 0, i32 0, i32 2, i32 0, i32 0
  %1185 = bitcast %"struct.v8_inspector::(anonymous namespace)::EntryMirror"** %1184 to i64*
  br label %1186

1186:                                             ; preds = %1399, %1179
  %1187 = phi i32 [ 0, %1179 ], [ %1403, %1399 ]
  %1188 = load i8, i8* %8, align 1, !range !7
  %1189 = icmp eq i8 %1188, 0
  br i1 %1189, label %1196, label %1190

1190:                                             ; preds = %1186
  %1191 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* nonnull %1180, %"class.v8::Context"* %1, i32 %1187) #15
  %1192 = icmp eq %"class.v8::Value"* %1191, null
  br i1 %1192, label %1196, label %1193

1193:                                             ; preds = %1190
  %1194 = call %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector11ValueMirror6createEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8::Context"* %1, %"class.v8::Value"* nonnull %1191) #15
  %1195 = ptrtoint %"class.v8_inspector::ValueMirror"* %1194 to i64
  br label %1196

1196:                                             ; preds = %1193, %1190, %1186
  %1197 = phi i64 [ %1195, %1193 ], [ 0, %1190 ], [ 0, %1186 ]
  %1198 = load i8, i8* %8, align 1, !range !7
  %1199 = zext i8 %1198 to i32
  %1200 = add nuw i32 %1187, %1199
  %1201 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* nonnull %1180, %"class.v8::Context"* %1, i32 %1200) #15
  %1202 = icmp eq %"class.v8::Value"* %1201, null
  br i1 %1202, label %1387, label %1203

1203:                                             ; preds = %1196
  %1204 = call %"class.v8_inspector::ValueMirror"* @_ZN12v8_inspector11ValueMirror6createEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8::Context"* %1, %"class.v8::Value"* nonnull %1201) #15
  %1205 = ptrtoint %"class.v8_inspector::ValueMirror"* %1204 to i64
  %1206 = load i64, i64* %1182, align 8
  %1207 = load i64, i64* %1183, align 8
  %1208 = sub i64 %1206, %1207
  %1209 = icmp eq i64 %1208, 80
  %1210 = inttoptr i64 %1206 to %"struct.v8_inspector::(anonymous namespace)::EntryMirror"*
  %1211 = inttoptr i64 %1207 to %"struct.v8_inspector::(anonymous namespace)::EntryMirror"*
  br i1 %1209, label %1380, label %1212

1212:                                             ; preds = %1203
  %1213 = load %"struct.v8_inspector::(anonymous namespace)::EntryMirror"*, %"struct.v8_inspector::(anonymous namespace)::EntryMirror"** %1184, align 8
  %1214 = icmp ugt %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1213, %1210
  %1215 = ptrtoint %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1213 to i64
  br i1 %1214, label %1216, label %1222

1216:                                             ; preds = %1212
  %1217 = inttoptr i64 %1206 to i64*
  store i64 %1197, i64* %1217, align 8
  %1218 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1210, i64 0, i32 1
  %1219 = bitcast %"class.std::__1::unique_ptr.10"* %1218 to i64*
  store i64 %1205, i64* %1219, align 8
  %1220 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1210, i64 1
  %1221 = ptrtoint %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1220 to i64
  store i64 %1221, i64* %1182, align 8
  br label %1399

1222:                                             ; preds = %1212
  %1223 = ashr exact i64 %1208, 4
  %1224 = add nsw i64 %1223, 1
  %1225 = icmp ugt i64 %1224, 1152921504606846975
  br i1 %1225, label %1226, label %1228

1226:                                             ; preds = %1222
  %1227 = bitcast %"class.std::__1::vector.639"* %35 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1227) #14
  unreachable

1228:                                             ; preds = %1222
  %1229 = sub i64 %1215, %1207
  %1230 = ashr exact i64 %1229, 4
  %1231 = icmp ult i64 %1230, 576460752303423487
  br i1 %1231, label %1232, label %1240

1232:                                             ; preds = %1228
  %1233 = ashr exact i64 %1229, 3
  %1234 = icmp ult i64 %1233, %1224
  %1235 = select i1 %1234, i64 %1224, i64 %1233
  %1236 = icmp eq i64 %1235, 0
  br i1 %1236, label %1245, label %1237

1237:                                             ; preds = %1232
  %1238 = icmp ugt i64 %1235, 1152921504606846975
  br i1 %1238, label %1239, label %1240

1239:                                             ; preds = %1237
  call void @abort() #14
  unreachable

1240:                                             ; preds = %1237, %1228
  %1241 = phi i64 [ %1235, %1237 ], [ 1152921504606846975, %1228 ]
  %1242 = shl i64 %1241, 4
  %1243 = call i8* @_Znwm(i64 %1242) #16
  %1244 = bitcast i8* %1243 to %"struct.v8_inspector::(anonymous namespace)::EntryMirror"*
  br label %1245

1245:                                             ; preds = %1240, %1232
  %1246 = phi i64 [ %1241, %1240 ], [ 0, %1232 ]
  %1247 = phi %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* [ %1244, %1240 ], [ null, %1232 ]
  %1248 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1247, i64 %1223
  %1249 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1247, i64 %1246
  %1250 = ptrtoint %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1249 to i64
  %1251 = bitcast %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1248 to i64*
  store i64 %1197, i64* %1251, align 8
  %1252 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1247, i64 %1223, i32 1
  %1253 = bitcast %"class.std::__1::unique_ptr.10"* %1252 to i64*
  store i64 %1205, i64* %1253, align 8
  %1254 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1248, i64 1
  %1255 = ptrtoint %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1254 to i64
  %1256 = icmp eq %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1210, %1211
  br i1 %1256, label %1347, label %1257

1257:                                             ; preds = %1245
  %1258 = getelementptr %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1210, i64 -1
  %1259 = bitcast %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1258 to i8*
  %1260 = sub i64 0, %1207
  %1261 = getelementptr i8, i8* %1259, i64 %1260
  %1262 = ptrtoint i8* %1261 to i64
  %1263 = lshr i64 %1262, 4
  %1264 = add nuw nsw i64 %1263, 1
  %1265 = and i64 %1264, 3
  %1266 = icmp eq i64 %1265, 0
  br i1 %1266, label %1285, label %1267

1267:                                             ; preds = %1257, %1267
  %1268 = phi %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* [ %1271, %1267 ], [ %1248, %1257 ]
  %1269 = phi %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* [ %1272, %1267 ], [ %1210, %1257 ]
  %1270 = phi i64 [ %1283, %1267 ], [ %1265, %1257 ]
  %1271 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1268, i64 -1
  %1272 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1269, i64 -1
  %1273 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1272, i64 0, i32 0, i32 0, i32 0, i32 0
  %1274 = bitcast %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1272 to i64*
  %1275 = load i64, i64* %1274, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1273, align 8
  %1276 = bitcast %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1271 to i64*
  store i64 %1275, i64* %1276, align 8
  %1277 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1268, i64 -1, i32 1
  %1278 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1269, i64 -1, i32 1
  %1279 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %1278, i64 0, i32 0, i32 0, i32 0
  %1280 = bitcast %"class.std::__1::unique_ptr.10"* %1278 to i64*
  %1281 = load i64, i64* %1280, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1279, align 8
  %1282 = bitcast %"class.std::__1::unique_ptr.10"* %1277 to i64*
  store i64 %1281, i64* %1282, align 8
  %1283 = add i64 %1270, -1
  %1284 = icmp eq i64 %1283, 0
  br i1 %1284, label %1285, label %1267, !llvm.loop !634

1285:                                             ; preds = %1267, %1257
  %1286 = phi %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* [ undef, %1257 ], [ %1271, %1267 ]
  %1287 = phi %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* [ %1248, %1257 ], [ %1271, %1267 ]
  %1288 = phi %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* [ %1210, %1257 ], [ %1272, %1267 ]
  %1289 = icmp ult i8* %1261, inttoptr (i64 48 to i8*)
  br i1 %1289, label %1342, label %1290

1290:                                             ; preds = %1285, %1290
  %1291 = phi %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* [ %1329, %1290 ], [ %1287, %1285 ]
  %1292 = phi %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* [ %1330, %1290 ], [ %1288, %1285 ]
  %1293 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1291, i64 -1
  %1294 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1292, i64 -1
  %1295 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1294, i64 0, i32 0, i32 0, i32 0, i32 0
  %1296 = bitcast %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1294 to i64*
  %1297 = load i64, i64* %1296, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1295, align 8
  %1298 = bitcast %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1293 to i64*
  store i64 %1297, i64* %1298, align 8
  %1299 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1291, i64 -1, i32 1
  %1300 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1292, i64 -1, i32 1
  %1301 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %1300, i64 0, i32 0, i32 0, i32 0
  %1302 = bitcast %"class.std::__1::unique_ptr.10"* %1300 to i64*
  %1303 = load i64, i64* %1302, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1301, align 8
  %1304 = bitcast %"class.std::__1::unique_ptr.10"* %1299 to i64*
  store i64 %1303, i64* %1304, align 8
  %1305 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1291, i64 -2
  %1306 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1292, i64 -2
  %1307 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1306, i64 0, i32 0, i32 0, i32 0, i32 0
  %1308 = bitcast %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1306 to i64*
  %1309 = load i64, i64* %1308, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1307, align 8
  %1310 = bitcast %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1305 to i64*
  store i64 %1309, i64* %1310, align 8
  %1311 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1291, i64 -2, i32 1
  %1312 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1292, i64 -2, i32 1
  %1313 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %1312, i64 0, i32 0, i32 0, i32 0
  %1314 = bitcast %"class.std::__1::unique_ptr.10"* %1312 to i64*
  %1315 = load i64, i64* %1314, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1313, align 8
  %1316 = bitcast %"class.std::__1::unique_ptr.10"* %1311 to i64*
  store i64 %1315, i64* %1316, align 8
  %1317 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1291, i64 -3
  %1318 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1292, i64 -3
  %1319 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1318, i64 0, i32 0, i32 0, i32 0, i32 0
  %1320 = bitcast %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1318 to i64*
  %1321 = load i64, i64* %1320, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1319, align 8
  %1322 = bitcast %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1317 to i64*
  store i64 %1321, i64* %1322, align 8
  %1323 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1291, i64 -3, i32 1
  %1324 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1292, i64 -3, i32 1
  %1325 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %1324, i64 0, i32 0, i32 0, i32 0
  %1326 = bitcast %"class.std::__1::unique_ptr.10"* %1324 to i64*
  %1327 = load i64, i64* %1326, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1325, align 8
  %1328 = bitcast %"class.std::__1::unique_ptr.10"* %1323 to i64*
  store i64 %1327, i64* %1328, align 8
  %1329 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1291, i64 -4
  %1330 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1292, i64 -4
  %1331 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1330, i64 0, i32 0, i32 0, i32 0, i32 0
  %1332 = bitcast %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1330 to i64*
  %1333 = load i64, i64* %1332, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1331, align 8
  %1334 = bitcast %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1329 to i64*
  store i64 %1333, i64* %1334, align 8
  %1335 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1291, i64 -4, i32 1
  %1336 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1292, i64 -4, i32 1
  %1337 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %1336, i64 0, i32 0, i32 0, i32 0
  %1338 = bitcast %"class.std::__1::unique_ptr.10"* %1336 to i64*
  %1339 = load i64, i64* %1338, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1337, align 8
  %1340 = bitcast %"class.std::__1::unique_ptr.10"* %1335 to i64*
  store i64 %1339, i64* %1340, align 8
  %1341 = icmp eq %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1330, %1211
  br i1 %1341, label %1342, label %1290

1342:                                             ; preds = %1290, %1285
  %1343 = phi %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* [ %1286, %1285 ], [ %1329, %1290 ]
  %1344 = load i64, i64* %1183, align 8
  %1345 = load %"struct.v8_inspector::(anonymous namespace)::EntryMirror"*, %"struct.v8_inspector::(anonymous namespace)::EntryMirror"** %1181, align 8
  %1346 = inttoptr i64 %1344 to %"struct.v8_inspector::(anonymous namespace)::EntryMirror"*
  br label %1347

1347:                                             ; preds = %1245, %1342
  %1348 = phi %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* [ %1346, %1342 ], [ %1211, %1245 ]
  %1349 = phi %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* [ %1345, %1342 ], [ %1210, %1245 ]
  %1350 = phi %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* [ %1343, %1342 ], [ %1248, %1245 ]
  %1351 = phi i64 [ %1344, %1342 ], [ %1207, %1245 ]
  %1352 = ptrtoint %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1350 to i64
  store i64 %1352, i64* %1183, align 8
  store i64 %1255, i64* %1182, align 8
  store i64 %1250, i64* %1185, align 8
  %1353 = icmp eq %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1349, %1348
  br i1 %1353, label %1376, label %1354

1354:                                             ; preds = %1347, %1374
  %1355 = phi %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* [ %1356, %1374 ], [ %1349, %1347 ]
  %1356 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1355, i64 -1
  %1357 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1355, i64 -1, i32 1, i32 0, i32 0, i32 0
  %1358 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %1357, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1357, align 8
  %1359 = icmp eq %"class.v8_inspector::ValueMirror"* %1358, null
  br i1 %1359, label %1365, label %1360

1360:                                             ; preds = %1354
  %1361 = bitcast %"class.v8_inspector::ValueMirror"* %1358 to void (%"class.v8_inspector::ValueMirror"*)***
  %1362 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %1361, align 8
  %1363 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1362, i64 1
  %1364 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1363, align 8
  call void %1364(%"class.v8_inspector::ValueMirror"* nonnull %1358) #15
  br label %1365

1365:                                             ; preds = %1360, %1354
  %1366 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1356, i64 0, i32 0, i32 0, i32 0, i32 0
  %1367 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %1366, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1366, align 8
  %1368 = icmp eq %"class.v8_inspector::ValueMirror"* %1367, null
  br i1 %1368, label %1374, label %1369

1369:                                             ; preds = %1365
  %1370 = bitcast %"class.v8_inspector::ValueMirror"* %1367 to void (%"class.v8_inspector::ValueMirror"*)***
  %1371 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %1370, align 8
  %1372 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1371, i64 1
  %1373 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1372, align 8
  call void %1373(%"class.v8_inspector::ValueMirror"* nonnull %1367) #15
  br label %1374

1374:                                             ; preds = %1369, %1365
  %1375 = icmp eq %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1356, %1348
  br i1 %1375, label %1376, label %1354

1376:                                             ; preds = %1374, %1347
  %1377 = icmp eq i64 %1351, 0
  br i1 %1377, label %1399, label %1378

1378:                                             ; preds = %1376
  %1379 = inttoptr i64 %1351 to i8*
  call void @_ZdlPv(i8* %1379) #16
  br label %1399

1380:                                             ; preds = %1203
  store i8 1, i8* %27, align 1
  %1381 = icmp eq %"class.v8_inspector::ValueMirror"* %1204, null
  br i1 %1381, label %1387, label %1382

1382:                                             ; preds = %1380
  %1383 = bitcast %"class.v8_inspector::ValueMirror"* %1204 to void (%"class.v8_inspector::ValueMirror"*)***
  %1384 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %1383, align 8
  %1385 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1384, i64 1
  %1386 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1385, align 8
  call void %1386(%"class.v8_inspector::ValueMirror"* nonnull %1204) #15
  br label %1387

1387:                                             ; preds = %1382, %1380, %1196
  %1388 = phi i32 [ 1, %1380 ], [ 1, %1382 ], [ 4, %1196 ]
  %1389 = icmp eq i64 %1197, 0
  br i1 %1389, label %1396, label %1390

1390:                                             ; preds = %1387
  %1391 = inttoptr i64 %1197 to %"class.v8_inspector::ValueMirror"*
  %1392 = inttoptr i64 %1197 to void (%"class.v8_inspector::ValueMirror"*)***
  %1393 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %1392, align 8
  %1394 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1393, i64 1
  %1395 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1394, align 8
  call void %1395(%"class.v8_inspector::ValueMirror"* nonnull %1391) #15
  br label %1396

1396:                                             ; preds = %1390, %1387
  %1397 = icmp eq i32 %1388, 4
  br i1 %1397, label %1399, label %1398

1398:                                             ; preds = %1396
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #15
  br label %1410

1399:                                             ; preds = %1396, %1378, %1376, %1216
  %1400 = load i8, i8* %8, align 1, !range !7
  %1401 = icmp eq i8 %1400, 0
  %1402 = select i1 %1401, i32 1, i32 2
  %1403 = add i32 %1402, %1187
  %1404 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* nonnull %1172) #15
  %1405 = icmp ult i32 %1403, %1404
  br i1 %1405, label %1186, label %1406

1406:                                             ; preds = %1399
  %1407 = load i64, i64* %1182, align 8
  %1408 = load i64, i64* %1183, align 8
  %1409 = icmp eq i64 %1407, %1408
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #15
  br i1 %1409, label %1514, label %1410

1410:                                             ; preds = %1406, %1398
  br i1 %2, label %1411, label %1412

1411:                                             ; preds = %1410
  store i8 1, i8* %27, align 1
  br label %1514

1412:                                             ; preds = %1410
  %1413 = call i8* @_Znwm(i64 24) #16
  %1414 = bitcast i8* %1413 to %"class.std::__1::vector.440"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1413, i8 0, i64 24, i1 false) #15
  %1415 = ptrtoint i8* %1413 to i64
  %1416 = getelementptr inbounds %"class.std::__1::vector.639", %"class.std::__1::vector.639"* %35, i64 0, i32 0, i32 0
  %1417 = load %"struct.v8_inspector::(anonymous namespace)::EntryMirror"*, %"struct.v8_inspector::(anonymous namespace)::EntryMirror"** %1416, align 8
  %1418 = getelementptr inbounds %"class.std::__1::vector.639", %"class.std::__1::vector.639"* %35, i64 0, i32 0, i32 1
  %1419 = load %"struct.v8_inspector::(anonymous namespace)::EntryMirror"*, %"struct.v8_inspector::(anonymous namespace)::EntryMirror"** %1418, align 8
  %1420 = icmp eq %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1417, %1419
  br i1 %1420, label %1514, label %1421

1421:                                             ; preds = %1412
  %1422 = bitcast %"class.std::__1::unique_ptr.417"* %36 to i8*
  %1423 = bitcast %"class.std::__1::unique_ptr.417"* %36 to i64*
  %1424 = getelementptr inbounds %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.417"* %36, i64 0, i32 0, i32 0, i32 0
  %1425 = bitcast %"class.std::__1::unique_ptr.417"* %37 to i8*
  %1426 = bitcast %"class.std::__1::unique_ptr.417"* %37 to i64*
  %1427 = getelementptr inbounds %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.417"* %37, i64 0, i32 0, i32 0, i32 0
  %1428 = bitcast %"class.std::__1::unique_ptr.442"* %38 to i8*
  %1429 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %38, i64 0, i32 0, i32 0, i32 0
  %1430 = bitcast %"class.std::__1::unique_ptr.442"* %38 to i8**
  %1431 = getelementptr inbounds i8, i8* %1413, i64 8
  %1432 = bitcast i8* %1431 to %"class.std::__1::unique_ptr.442"**
  %1433 = getelementptr inbounds i8, i8* %1413, i64 16
  %1434 = bitcast i8* %1433 to %"class.std::__1::unique_ptr.442"**
  %1435 = bitcast i8* %1431 to i64*
  br label %1436

1436:                                             ; preds = %1421, %1511
  %1437 = phi %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* [ %1417, %1421 ], [ %1512, %1511 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1422) #15
  store i64 0, i64* %1423, align 8
  %1438 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1437, i64 0, i32 1, i32 0, i32 0, i32 0
  %1439 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %1438, align 8
  %1440 = bitcast %"class.v8_inspector::ValueMirror"* %1439 to void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)***
  %1441 = load void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)**, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)*** %1440, align 8
  %1442 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)*, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)** %1441, i64 5
  %1443 = load void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)*, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)** %1442, align 8
  call void %1443(%"class.v8_inspector::ValueMirror"* %1439, %"class.v8::Context"* %1, i32* %4, i32* %5, %"class.std::__1::unique_ptr.417"* nonnull %36) #15
  %1444 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1424, align 8
  %1445 = icmp eq %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1444, null
  br i1 %1445, label %1446, label %1447

1446:                                             ; preds = %1436
  store %"class.v8_inspector::protocol::Runtime::ObjectPreview"* null, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1424, align 8
  br label %1511

1447:                                             ; preds = %1436
  %1448 = ptrtoint %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1444 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1425) #15
  store i64 0, i64* %1426, align 8
  %1449 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1437, i64 0, i32 0, i32 0, i32 0, i32 0
  %1450 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %1449, align 8
  %1451 = icmp eq %"class.v8_inspector::ValueMirror"* %1450, null
  br i1 %1451, label %1463, label %1452

1452:                                             ; preds = %1447
  %1453 = bitcast %"class.v8_inspector::ValueMirror"* %1450 to void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)***
  %1454 = load void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)**, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)*** %1453, align 8
  %1455 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)*, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)** %1454, i64 5
  %1456 = load void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)*, void (%"class.v8_inspector::ValueMirror"*, %"class.v8::Context"*, i32*, i32*, %"class.std::__1::unique_ptr.417"*)** %1455, align 8
  call void %1456(%"class.v8_inspector::ValueMirror"* nonnull %1450, %"class.v8::Context"* %1, i32* %4, i32* %5, %"class.std::__1::unique_ptr.417"* nonnull %37) #15
  %1457 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1427, align 8
  %1458 = icmp eq %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1457, null
  br i1 %1458, label %1459, label %1460

1459:                                             ; preds = %1452
  store %"class.v8_inspector::protocol::Runtime::ObjectPreview"* null, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1427, align 8
  br label %1503

1460:                                             ; preds = %1452
  %1461 = ptrtoint %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1457 to i64
  %1462 = load i64, i64* %1423, align 8
  br label %1463

1463:                                             ; preds = %1447, %1460
  %1464 = phi i64 [ %1461, %1460 ], [ 0, %1447 ]
  %1465 = phi %"class.v8_inspector::protocol::Runtime::ObjectPreview"* [ %1457, %1460 ], [ null, %1447 ]
  %1466 = phi i64 [ %1462, %1460 ], [ %1448, %1447 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1428) #15
  %1467 = call i8* @_Znwm(i64 24) #16
  %1468 = bitcast i8* %1467 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12EntryPreviewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1468, align 8
  %1469 = getelementptr inbounds i8, i8* %1467, i64 8
  %1470 = bitcast i8* %1469 to i64*
  store i64 0, i64* %1470, align 8
  store %"class.v8_inspector::protocol::Runtime::ObjectPreview"* null, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1424, align 8
  %1471 = getelementptr inbounds i8, i8* %1467, i64 16
  %1472 = bitcast i8* %1471 to i64*
  store i64 %1466, i64* %1472, align 8
  store i8* %1467, i8** %1430, align 8
  %1473 = icmp eq %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1465, null
  %1474 = ptrtoint i8* %1467 to i64
  br i1 %1473, label %1478, label %1475

1475:                                             ; preds = %1463
  store %"class.v8_inspector::protocol::Runtime::ObjectPreview"* null, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1427, align 8
  %1476 = getelementptr inbounds i8, i8* %1467, i64 8
  %1477 = bitcast i8* %1476 to i64*
  store i64 %1464, i64* %1477, align 8
  br label %1478

1478:                                             ; preds = %1475, %1463
  %1479 = load %"class.std::__1::unique_ptr.442"*, %"class.std::__1::unique_ptr.442"** %1432, align 8
  %1480 = load %"class.std::__1::unique_ptr.442"*, %"class.std::__1::unique_ptr.442"** %1434, align 8
  %1481 = icmp ult %"class.std::__1::unique_ptr.442"* %1479, %1480
  br i1 %1481, label %1482, label %1486

1482:                                             ; preds = %1478
  store %"class.v8_inspector::protocol::Runtime::EntryPreview"* null, %"class.v8_inspector::protocol::Runtime::EntryPreview"** %1429, align 8
  %1483 = bitcast %"class.std::__1::unique_ptr.442"* %1479 to i64*
  store i64 %1474, i64* %1483, align 8
  %1484 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %1479, i64 1
  %1485 = ptrtoint %"class.std::__1::unique_ptr.442"* %1484 to i64
  store i64 %1485, i64* %1435, align 8
  br label %1487

1486:                                             ; preds = %1478
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime12EntryPreviewENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.440"* nonnull %1414, %"class.std::__1::unique_ptr.442"* nonnull dereferenceable(8) %38) #15
  br label %1487

1487:                                             ; preds = %1482, %1486
  %1488 = load %"class.v8_inspector::protocol::Runtime::EntryPreview"*, %"class.v8_inspector::protocol::Runtime::EntryPreview"** %1429, align 8
  store %"class.v8_inspector::protocol::Runtime::EntryPreview"* null, %"class.v8_inspector::protocol::Runtime::EntryPreview"** %1429, align 8
  %1489 = icmp eq %"class.v8_inspector::protocol::Runtime::EntryPreview"* %1488, null
  br i1 %1489, label %1495, label %1490

1490:                                             ; preds = %1487
  %1491 = bitcast %"class.v8_inspector::protocol::Runtime::EntryPreview"* %1488 to void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)***
  %1492 = load void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)*** %1491, align 8
  %1493 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)** %1492, i64 2
  %1494 = load void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)** %1493, align 8
  call void %1494(%"class.v8_inspector::protocol::Runtime::EntryPreview"* nonnull %1488) #15
  br label %1495

1495:                                             ; preds = %1490, %1487
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1428) #15
  %1496 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1427, align 8
  store %"class.v8_inspector::protocol::Runtime::ObjectPreview"* null, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1427, align 8
  %1497 = icmp eq %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1496, null
  br i1 %1497, label %1503, label %1498

1498:                                             ; preds = %1495
  %1499 = bitcast %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1496 to void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)***
  %1500 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*** %1499, align 8
  %1501 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %1500, i64 2
  %1502 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %1501, align 8
  call void %1502(%"class.v8_inspector::protocol::Runtime::ObjectPreview"* nonnull %1496) #15
  br label %1503

1503:                                             ; preds = %1459, %1498, %1495
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1425) #15
  %1504 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1424, align 8
  store %"class.v8_inspector::protocol::Runtime::ObjectPreview"* null, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1424, align 8
  %1505 = icmp eq %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1504, null
  br i1 %1505, label %1511, label %1506

1506:                                             ; preds = %1503
  %1507 = bitcast %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1504 to void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)***
  %1508 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*** %1507, align 8
  %1509 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %1508, i64 2
  %1510 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %1509, align 8
  call void %1510(%"class.v8_inspector::protocol::Runtime::ObjectPreview"* nonnull %1504) #15
  br label %1511

1511:                                             ; preds = %1446, %1503, %1506
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1422) #15
  %1512 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1437, i64 1
  %1513 = icmp eq %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1512, %1419
  br i1 %1513, label %1514, label %1436

1514:                                             ; preds = %1511, %1178, %1412, %1406, %1174, %1411
  %1515 = phi i64 [ 0, %1411 ], [ 0, %1406 ], [ 0, %1174 ], [ %1415, %1412 ], [ 0, %1178 ], [ %1415, %1511 ]
  %1516 = getelementptr inbounds %"class.std::__1::vector.639", %"class.std::__1::vector.639"* %35, i64 0, i32 0, i32 0
  %1517 = load %"struct.v8_inspector::(anonymous namespace)::EntryMirror"*, %"struct.v8_inspector::(anonymous namespace)::EntryMirror"** %1516, align 8
  %1518 = icmp eq %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1517, null
  br i1 %1518, label %1551, label %1519

1519:                                             ; preds = %1514
  %1520 = bitcast %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1517 to i8*
  %1521 = getelementptr inbounds %"class.std::__1::vector.639", %"class.std::__1::vector.639"* %35, i64 0, i32 0, i32 1
  %1522 = load %"struct.v8_inspector::(anonymous namespace)::EntryMirror"*, %"struct.v8_inspector::(anonymous namespace)::EntryMirror"** %1521, align 8
  %1523 = icmp eq %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1522, %1517
  br i1 %1523, label %1549, label %1524

1524:                                             ; preds = %1519, %1544
  %1525 = phi %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* [ %1526, %1544 ], [ %1522, %1519 ]
  %1526 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1525, i64 -1
  %1527 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1525, i64 -1, i32 1, i32 0, i32 0, i32 0
  %1528 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %1527, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1527, align 8
  %1529 = icmp eq %"class.v8_inspector::ValueMirror"* %1528, null
  br i1 %1529, label %1535, label %1530

1530:                                             ; preds = %1524
  %1531 = bitcast %"class.v8_inspector::ValueMirror"* %1528 to void (%"class.v8_inspector::ValueMirror"*)***
  %1532 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %1531, align 8
  %1533 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1532, i64 1
  %1534 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1533, align 8
  call void %1534(%"class.v8_inspector::ValueMirror"* nonnull %1528) #15
  br label %1535

1535:                                             ; preds = %1530, %1524
  %1536 = getelementptr inbounds %"struct.v8_inspector::(anonymous namespace)::EntryMirror", %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1526, i64 0, i32 0, i32 0, i32 0, i32 0
  %1537 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %1536, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1536, align 8
  %1538 = icmp eq %"class.v8_inspector::ValueMirror"* %1537, null
  br i1 %1538, label %1544, label %1539

1539:                                             ; preds = %1535
  %1540 = bitcast %"class.v8_inspector::ValueMirror"* %1537 to void (%"class.v8_inspector::ValueMirror"*)***
  %1541 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %1540, align 8
  %1542 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1541, i64 1
  %1543 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1542, align 8
  call void %1543(%"class.v8_inspector::ValueMirror"* nonnull %1537) #15
  br label %1544

1544:                                             ; preds = %1539, %1535
  %1545 = icmp eq %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1526, %1517
  br i1 %1545, label %1546, label %1524

1546:                                             ; preds = %1544
  %1547 = bitcast %"class.std::__1::vector.639"* %35 to i8**
  %1548 = load i8*, i8** %1547, align 8
  br label %1549

1549:                                             ; preds = %1546, %1519
  %1550 = phi i8* [ %1548, %1546 ], [ %1520, %1519 ]
  store %"struct.v8_inspector::(anonymous namespace)::EntryMirror"* %1517, %"struct.v8_inspector::(anonymous namespace)::EntryMirror"** %1521, align 8
  call void @_ZdlPv(i8* %1550) #16
  br label %1551

1551:                                             ; preds = %1514, %1549
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1171) #15
  %1552 = getelementptr inbounds %"class.std::__1::vector.632", %"class.std::__1::vector.632"* %30, i64 0, i32 0, i32 0
  %1553 = load %"struct.v8_inspector::PropertyMirror"*, %"struct.v8_inspector::PropertyMirror"** %1552, align 8
  %1554 = icmp eq %"struct.v8_inspector::PropertyMirror"* %1553, null
  br i1 %1554, label %1622, label %1555

1555:                                             ; preds = %1551
  %1556 = bitcast %"struct.v8_inspector::PropertyMirror"* %1553 to i8*
  %1557 = getelementptr inbounds %"class.std::__1::vector.632", %"class.std::__1::vector.632"* %30, i64 0, i32 0, i32 1
  %1558 = load %"struct.v8_inspector::PropertyMirror"*, %"struct.v8_inspector::PropertyMirror"** %1557, align 8
  %1559 = icmp eq %"struct.v8_inspector::PropertyMirror"* %1558, %1553
  br i1 %1559, label %1620, label %1560

1560:                                             ; preds = %1555, %1615
  %1561 = phi %"struct.v8_inspector::PropertyMirror"* [ %1562, %1615 ], [ %1558, %1555 ]
  %1562 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1561, i64 -1
  %1563 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1561, i64 -1, i32 10, i32 0, i32 0, i32 0
  %1564 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %1563, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1563, align 8
  %1565 = icmp eq %"class.v8_inspector::ValueMirror"* %1564, null
  br i1 %1565, label %1571, label %1566

1566:                                             ; preds = %1560
  %1567 = bitcast %"class.v8_inspector::ValueMirror"* %1564 to void (%"class.v8_inspector::ValueMirror"*)***
  %1568 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %1567, align 8
  %1569 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1568, i64 1
  %1570 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1569, align 8
  call void %1570(%"class.v8_inspector::ValueMirror"* nonnull %1564) #15
  br label %1571

1571:                                             ; preds = %1566, %1560
  %1572 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1561, i64 -1, i32 9, i32 0, i32 0, i32 0
  %1573 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %1572, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1572, align 8
  %1574 = icmp eq %"class.v8_inspector::ValueMirror"* %1573, null
  br i1 %1574, label %1580, label %1575

1575:                                             ; preds = %1571
  %1576 = bitcast %"class.v8_inspector::ValueMirror"* %1573 to void (%"class.v8_inspector::ValueMirror"*)***
  %1577 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %1576, align 8
  %1578 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1577, i64 1
  %1579 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1578, align 8
  call void %1579(%"class.v8_inspector::ValueMirror"* nonnull %1573) #15
  br label %1580

1580:                                             ; preds = %1575, %1571
  %1581 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1561, i64 -1, i32 8, i32 0, i32 0, i32 0
  %1582 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %1581, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1581, align 8
  %1583 = icmp eq %"class.v8_inspector::ValueMirror"* %1582, null
  br i1 %1583, label %1589, label %1584

1584:                                             ; preds = %1580
  %1585 = bitcast %"class.v8_inspector::ValueMirror"* %1582 to void (%"class.v8_inspector::ValueMirror"*)***
  %1586 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %1585, align 8
  %1587 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1586, i64 1
  %1588 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1587, align 8
  call void %1588(%"class.v8_inspector::ValueMirror"* nonnull %1582) #15
  br label %1589

1589:                                             ; preds = %1584, %1580
  %1590 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1561, i64 -1, i32 7, i32 0, i32 0, i32 0
  %1591 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %1590, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1590, align 8
  %1592 = icmp eq %"class.v8_inspector::ValueMirror"* %1591, null
  br i1 %1592, label %1598, label %1593

1593:                                             ; preds = %1589
  %1594 = bitcast %"class.v8_inspector::ValueMirror"* %1591 to void (%"class.v8_inspector::ValueMirror"*)***
  %1595 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %1594, align 8
  %1596 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1595, i64 1
  %1597 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1596, align 8
  call void %1597(%"class.v8_inspector::ValueMirror"* nonnull %1591) #15
  br label %1598

1598:                                             ; preds = %1593, %1589
  %1599 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1561, i64 -1, i32 6, i32 0, i32 0, i32 0
  %1600 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %1599, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1599, align 8
  %1601 = icmp eq %"class.v8_inspector::ValueMirror"* %1600, null
  br i1 %1601, label %1607, label %1602

1602:                                             ; preds = %1598
  %1603 = bitcast %"class.v8_inspector::ValueMirror"* %1600 to void (%"class.v8_inspector::ValueMirror"*)***
  %1604 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %1603, align 8
  %1605 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1604, i64 1
  %1606 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1605, align 8
  call void %1606(%"class.v8_inspector::ValueMirror"* nonnull %1600) #15
  br label %1607

1607:                                             ; preds = %1602, %1598
  %1608 = bitcast %"struct.v8_inspector::PropertyMirror"* %1562 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1609 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1608, i64 0, i32 1, i32 1
  %1610 = load i8, i8* %1609, align 1
  %1611 = icmp slt i8 %1610, 0
  br i1 %1611, label %1612, label %1615

1612:                                             ; preds = %1607
  %1613 = bitcast %"struct.v8_inspector::PropertyMirror"* %1562 to i8**
  %1614 = load i8*, i8** %1613, align 8
  call void @_ZdlPv(i8* %1614) #16
  br label %1615

1615:                                             ; preds = %1612, %1607
  %1616 = icmp eq %"struct.v8_inspector::PropertyMirror"* %1562, %1553
  br i1 %1616, label %1617, label %1560

1617:                                             ; preds = %1615
  %1618 = bitcast %"class.std::__1::vector.632"* %30 to i8**
  %1619 = load i8*, i8** %1618, align 8
  br label %1620

1620:                                             ; preds = %1555, %1617
  %1621 = phi i8* [ %1619, %1617 ], [ %1556, %1555 ]
  store %"struct.v8_inspector::PropertyMirror"* %1553, %"struct.v8_inspector::PropertyMirror"** %1557, align 8
  call void @_ZdlPv(i8* %1621) #16
  br label %1622

1622:                                             ; preds = %1551, %1620
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %453) #15
  %1623 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %28, i64 0, i32 0, i32 0
  %1624 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %1623, align 8
  %1625 = icmp eq %"struct.v8_inspector::InternalPropertyMirror"* %1624, null
  br i1 %1625, label %1656, label %1626

1626:                                             ; preds = %1622
  %1627 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %1624 to i8*
  %1628 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %284, align 8
  %1629 = icmp eq %"struct.v8_inspector::InternalPropertyMirror"* %1628, %1624
  br i1 %1629, label %1654, label %1630

1630:                                             ; preds = %1626, %1649
  %1631 = phi %"struct.v8_inspector::InternalPropertyMirror"* [ %1632, %1649 ], [ %1628, %1626 ]
  %1632 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %1631, i64 -1
  %1633 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %1631, i64 -1, i32 1, i32 0, i32 0, i32 0
  %1634 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %1633, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %1633, align 8
  %1635 = icmp eq %"class.v8_inspector::ValueMirror"* %1634, null
  br i1 %1635, label %1641, label %1636

1636:                                             ; preds = %1630
  %1637 = bitcast %"class.v8_inspector::ValueMirror"* %1634 to void (%"class.v8_inspector::ValueMirror"*)***
  %1638 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %1637, align 8
  %1639 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1638, i64 1
  %1640 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %1639, align 8
  call void %1640(%"class.v8_inspector::ValueMirror"* nonnull %1634) #15
  br label %1641

1641:                                             ; preds = %1636, %1630
  %1642 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %1632 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1643 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1642, i64 0, i32 1, i32 1
  %1644 = load i8, i8* %1643, align 1
  %1645 = icmp slt i8 %1644, 0
  br i1 %1645, label %1646, label %1649

1646:                                             ; preds = %1641
  %1647 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %1632 to i8**
  %1648 = load i8*, i8** %1647, align 8
  call void @_ZdlPv(i8* %1648) #16
  br label %1649

1649:                                             ; preds = %1646, %1641
  %1650 = icmp eq %"struct.v8_inspector::InternalPropertyMirror"* %1632, %1624
  br i1 %1650, label %1651, label %1630

1651:                                             ; preds = %1649
  %1652 = bitcast %"class.std::__1::vector"* %28 to i8**
  %1653 = load i8*, i8** %1652, align 8
  br label %1654

1654:                                             ; preds = %1651, %1626
  %1655 = phi i8* [ %1653, %1651 ], [ %1627, %1626 ]
  store %"struct.v8_inspector::InternalPropertyMirror"* %1624, %"struct.v8_inspector::InternalPropertyMirror"** %284, align 8
  call void @_ZdlPv(i8* %1655) #16
  br label %1656

1656:                                             ; preds = %1622, %1654
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #15
  br label %1657

1657:                                             ; preds = %1656, %55, %52
  %1658 = phi i64 [ 0, %55 ], [ %1515, %1656 ], [ 0, %52 ]
  %1659 = call i8* @_Znwm(i64 144) #16
  %1660 = bitcast i8* %1659 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime13ObjectPreviewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1660, align 8
  %1661 = getelementptr inbounds i8, i8* %1659, i64 8
  %1662 = getelementptr inbounds i8, i8* %1659, i64 48
  %1663 = getelementptr inbounds i8, i8* %1659, i64 88
  %1664 = getelementptr inbounds i8, i8* %1659, i64 128
  call void @llvm.memset.p0i8.i64(i8* align 8 %1661, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %1662, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %1663, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %1664, i8 0, i64 16, i1 false) #15
  %1665 = bitcast i8* %1659 to %"class.v8_inspector::protocol::Runtime::ObjectPreview"*
  %1666 = bitcast %"class.v8_inspector::String16"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1666) #15
  %1667 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6ObjectE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %39, i8* %1667) #15
  %1668 = bitcast i8* %1661 to %"class.std::__1::basic_string"*
  %1669 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %39, i64 0, i32 0
  %1670 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %1668, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %1669) #15
  %1671 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %39, i64 0, i32 1
  %1672 = load i64, i64* %1671, align 8
  %1673 = getelementptr inbounds i8, i8* %1659, i64 32
  %1674 = bitcast i8* %1673 to i64*
  store i64 %1672, i64* %1674, align 8
  %1675 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 2
  call void @_ZN12v8_inspector8protocol7Runtime13ObjectPreview14setDescriptionERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::ObjectPreview"* nonnull %1665, %"class.v8_inspector::String16"* dereferenceable(32) %1675) #15
  %1676 = load i8, i8* %27, align 1, !range !7
  %1677 = getelementptr inbounds i8, i8* %1659, i64 120
  store i8 %1676, i8* %1677, align 8
  %1678 = bitcast i8* %1664 to %"class.std::__1::vector.426"**
  %1679 = load %"class.std::__1::vector.426"*, %"class.std::__1::vector.426"** %1678, align 8
  %1680 = bitcast i8* %1664 to i64*
  store i64 %42, i64* %1680, align 8
  %1681 = icmp eq %"class.std::__1::vector.426"* %1679, null
  br i1 %1681, label %1711, label %1682

1682:                                             ; preds = %1657
  %1683 = getelementptr inbounds %"class.std::__1::vector.426", %"class.std::__1::vector.426"* %1679, i64 0, i32 0, i32 0
  %1684 = load %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"** %1683, align 8
  %1685 = icmp eq %"class.std::__1::unique_ptr.414"* %1684, null
  br i1 %1685, label %1709, label %1686

1686:                                             ; preds = %1682
  %1687 = bitcast %"class.std::__1::unique_ptr.414"* %1684 to i8*
  %1688 = getelementptr inbounds %"class.std::__1::vector.426", %"class.std::__1::vector.426"* %1679, i64 0, i32 0, i32 1
  %1689 = load %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"** %1688, align 8
  %1690 = icmp eq %"class.std::__1::unique_ptr.414"* %1689, %1684
  br i1 %1690, label %1707, label %1691

1691:                                             ; preds = %1686, %1702
  %1692 = phi %"class.std::__1::unique_ptr.414"* [ %1693, %1702 ], [ %1689, %1686 ]
  %1693 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %1692, i64 -1
  %1694 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %1693, i64 0, i32 0, i32 0, i32 0
  %1695 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %1694, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %1694, align 8
  %1696 = icmp eq %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %1695, null
  br i1 %1696, label %1702, label %1697

1697:                                             ; preds = %1691
  %1698 = bitcast %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %1695 to void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)***
  %1699 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*** %1698, align 8
  %1700 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %1699, i64 2
  %1701 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %1700, align 8
  call void %1701(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %1695) #15
  br label %1702

1702:                                             ; preds = %1697, %1691
  %1703 = icmp eq %"class.std::__1::unique_ptr.414"* %1693, %1684
  br i1 %1703, label %1704, label %1691

1704:                                             ; preds = %1702
  %1705 = bitcast %"class.std::__1::vector.426"* %1679 to i8**
  %1706 = load i8*, i8** %1705, align 8
  br label %1707

1707:                                             ; preds = %1704, %1686
  %1708 = phi i8* [ %1706, %1704 ], [ %1687, %1686 ]
  store %"class.std::__1::unique_ptr.414"* %1684, %"class.std::__1::unique_ptr.414"** %1688, align 8
  call void @_ZdlPv(i8* %1708) #16
  br label %1709

1709:                                             ; preds = %1707, %1682
  %1710 = bitcast %"class.std::__1::vector.426"* %1679 to i8*
  call void @_ZdlPv(i8* %1710) #16
  br label %1711

1711:                                             ; preds = %1657, %1709
  %1712 = ptrtoint i8* %1659 to i64
  %1713 = getelementptr inbounds %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.417"* %6, i64 0, i32 0, i32 0, i32 0
  %1714 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1713, align 8
  %1715 = bitcast %"class.std::__1::unique_ptr.417"* %6 to i64*
  store i64 %1712, i64* %1715, align 8
  %1716 = icmp eq %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1714, null
  br i1 %1716, label %1722, label %1717

1717:                                             ; preds = %1711
  %1718 = bitcast %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1714 to void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)***
  %1719 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*** %1718, align 8
  %1720 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %1719, i64 2
  %1721 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %1720, align 8
  call void %1721(%"class.v8_inspector::protocol::Runtime::ObjectPreview"* nonnull %1714) #15
  br label %1722

1722:                                             ; preds = %1717, %1711
  %1723 = bitcast %"class.v8_inspector::String16"* %39 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %1724 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %1723, i64 0, i32 1, i32 1
  %1725 = load i8, i8* %1724, align 1
  %1726 = icmp slt i8 %1725, 0
  br i1 %1726, label %1727, label %1730

1727:                                             ; preds = %1722
  %1728 = bitcast %"class.v8_inspector::String16"* %39 to i8**
  %1729 = load i8*, i8** %1728, align 8
  call void @_ZdlPv(i8* %1729) #16
  br label %1730

1730:                                             ; preds = %1727, %1722
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1666) #15
  %1731 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 3
  %1732 = load i8, i8* %1731, align 8, !range !7
  %1733 = icmp eq i8 %1732, 0
  br i1 %1733, label %1737, label %1734

1734:                                             ; preds = %1730
  %1735 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1713, align 8
  %1736 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::ObjectMirror", %"class.v8_inspector::(anonymous namespace)::ObjectMirror"* %0, i64 0, i32 4
  call void @_ZN12v8_inspector8protocol7Runtime13ObjectPreview10setSubtypeERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1735, %"class.v8_inspector::String16"* dereferenceable(32) %1736)
  br label %1737

1737:                                             ; preds = %1730, %1734
  %1738 = icmp eq i64 %1658, 0
  br i1 %1738, label %1775, label %1739

1739:                                             ; preds = %1737
  %1740 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %1713, align 8
  %1741 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ObjectPreview", %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %1740, i64 0, i32 6
  %1742 = getelementptr inbounds %"class.v8_crdtp::detail::PtrMaybe.436", %"class.v8_crdtp::detail::PtrMaybe.436"* %1741, i64 0, i32 0, i32 0, i32 0, i32 0
  %1743 = load %"class.std::__1::vector.440"*, %"class.std::__1::vector.440"** %1742, align 8
  %1744 = bitcast %"class.v8_crdtp::detail::PtrMaybe.436"* %1741 to i64*
  store i64 %1658, i64* %1744, align 8
  %1745 = icmp eq %"class.std::__1::vector.440"* %1743, null
  br i1 %1745, label %1775, label %1746

1746:                                             ; preds = %1739
  %1747 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %1743, i64 0, i32 0, i32 0
  %1748 = load %"class.std::__1::unique_ptr.442"*, %"class.std::__1::unique_ptr.442"** %1747, align 8
  %1749 = icmp eq %"class.std::__1::unique_ptr.442"* %1748, null
  br i1 %1749, label %1773, label %1750

1750:                                             ; preds = %1746
  %1751 = bitcast %"class.std::__1::unique_ptr.442"* %1748 to i8*
  %1752 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %1743, i64 0, i32 0, i32 1
  %1753 = load %"class.std::__1::unique_ptr.442"*, %"class.std::__1::unique_ptr.442"** %1752, align 8
  %1754 = icmp eq %"class.std::__1::unique_ptr.442"* %1753, %1748
  br i1 %1754, label %1771, label %1755

1755:                                             ; preds = %1750, %1766
  %1756 = phi %"class.std::__1::unique_ptr.442"* [ %1757, %1766 ], [ %1753, %1750 ]
  %1757 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %1756, i64 -1
  %1758 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %1757, i64 0, i32 0, i32 0, i32 0
  %1759 = load %"class.v8_inspector::protocol::Runtime::EntryPreview"*, %"class.v8_inspector::protocol::Runtime::EntryPreview"** %1758, align 8
  store %"class.v8_inspector::protocol::Runtime::EntryPreview"* null, %"class.v8_inspector::protocol::Runtime::EntryPreview"** %1758, align 8
  %1760 = icmp eq %"class.v8_inspector::protocol::Runtime::EntryPreview"* %1759, null
  br i1 %1760, label %1766, label %1761

1761:                                             ; preds = %1755
  %1762 = bitcast %"class.v8_inspector::protocol::Runtime::EntryPreview"* %1759 to void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)***
  %1763 = load void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)*** %1762, align 8
  %1764 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)** %1763, i64 2
  %1765 = load void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)** %1764, align 8
  call void %1765(%"class.v8_inspector::protocol::Runtime::EntryPreview"* nonnull %1759) #15
  br label %1766

1766:                                             ; preds = %1761, %1755
  %1767 = icmp eq %"class.std::__1::unique_ptr.442"* %1757, %1748
  br i1 %1767, label %1768, label %1755

1768:                                             ; preds = %1766
  %1769 = bitcast %"class.std::__1::vector.440"* %1743 to i8**
  %1770 = load i8*, i8** %1769, align 8
  br label %1771

1771:                                             ; preds = %1768, %1750
  %1772 = phi i8* [ %1770, %1768 ], [ %1751, %1750 ]
  store %"class.std::__1::unique_ptr.442"* %1748, %"class.std::__1::unique_ptr.442"** %1752, align 8
  call void @_ZdlPv(i8* %1772) #16
  br label %1773

1773:                                             ; preds = %1771, %1746
  %1774 = bitcast %"class.std::__1::vector.440"* %1743 to i8*
  call void @_ZdlPv(i8* %1774) #16
  br label %1775

1775:                                             ; preds = %1737, %1773, %1739
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %27) #15
  ret void
}

declare %"class.v8::Value"* @_ZN2v85Proxy9GetTargetEv(%"class.v8::Proxy"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol7Runtime13ObjectPreview10setSubtypeERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  %10 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 24, i1 false) #15
  br label %186

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 11
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = bitcast %"class.v8_inspector::String16"* %3 to i16*
  %19 = trunc i64 %15 to i8
  %20 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %20, i64 0, i32 1, i32 1
  store i8 %19, i8* %21, align 1
  br label %39

22:                                               ; preds = %11
  %23 = icmp ugt i64 %15, 9223372036854775791
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.v8_inspector::String16"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #14
  unreachable

26:                                               ; preds = %22
  %27 = add nuw nsw i64 %15, 8
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #16
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  %37 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %17
  %40 = phi i16* [ %18, %17 ], [ %34, %31 ]
  %41 = add nuw nsw i64 %15, 1
  %42 = add i64 %15, 1
  %43 = icmp ult i64 %42, 16
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  %45 = add i64 %15, 1
  %46 = getelementptr i16, i16* %40, i64 %45
  %47 = getelementptr i16, i16* %13, i64 %45
  %48 = icmp ult i16* %40, %47
  %49 = icmp ult i16* %13, %46
  %50 = and i1 %48, %49
  br i1 %50, label %133, label %51

51:                                               ; preds = %44
  %52 = and i64 %42, -16
  %53 = getelementptr i16, i16* %40, i64 %52
  %54 = sub i64 %41, %52
  %55 = getelementptr i16, i16* %13, i64 %52
  %56 = add i64 %52, -16
  %57 = lshr exact i64 %56, 4
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 48
  br i1 %60, label %112, label %61

61:                                               ; preds = %51
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr i16, i16* %40, i64 %64
  %67 = getelementptr i16, i16* %13, i64 %64
  %68 = bitcast i16* %67 to <8 x i16>*
  %69 = load <8 x i16>, <8 x i16>* %68, align 2, !alias.scope !635
  %70 = getelementptr i16, i16* %67, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !635
  %73 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %73, align 2, !alias.scope !638, !noalias !635
  %74 = getelementptr i16, i16* %66, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %75, align 2, !alias.scope !638, !noalias !635
  %76 = or i64 %64, 16
  %77 = getelementptr i16, i16* %40, i64 %76
  %78 = getelementptr i16, i16* %13, i64 %76
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !635
  %81 = getelementptr i16, i16* %78, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !635
  %84 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !638, !noalias !635
  %85 = getelementptr i16, i16* %77, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !638, !noalias !635
  %87 = or i64 %64, 32
  %88 = getelementptr i16, i16* %40, i64 %87
  %89 = getelementptr i16, i16* %13, i64 %87
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !635
  %92 = getelementptr i16, i16* %89, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !635
  %95 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !638, !noalias !635
  %96 = getelementptr i16, i16* %88, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !638, !noalias !635
  %98 = or i64 %64, 48
  %99 = getelementptr i16, i16* %40, i64 %98
  %100 = getelementptr i16, i16* %13, i64 %98
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !635
  %103 = getelementptr i16, i16* %100, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !635
  %106 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !638, !noalias !635
  %107 = getelementptr i16, i16* %99, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !638, !noalias !635
  %109 = add i64 %64, 64
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !640

112:                                              ; preds = %63, %51
  %113 = phi i64 [ 0, %51 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr i16, i16* %40, i64 %116
  %119 = getelementptr i16, i16* %13, i64 %116
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !635
  %122 = getelementptr i16, i16* %119, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !635
  %125 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !638, !noalias !635
  %126 = getelementptr i16, i16* %118, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !638, !noalias !635
  %128 = add i64 %116, 16
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !641

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %42, %52
  br i1 %132, label %186, label %133

133:                                              ; preds = %131, %44, %39
  %134 = phi i16* [ %40, %44 ], [ %40, %39 ], [ %53, %131 ]
  %135 = phi i64 [ %41, %44 ], [ %41, %39 ], [ %54, %131 ]
  %136 = phi i16* [ %13, %44 ], [ %13, %39 ], [ %55, %131 ]
  %137 = add i64 %135, -1
  %138 = and i64 %135, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133, %140
  %141 = phi i16* [ %147, %140 ], [ %134, %133 ]
  %142 = phi i64 [ %146, %140 ], [ %135, %133 ]
  %143 = phi i16* [ %148, %140 ], [ %136, %133 ]
  %144 = phi i64 [ %149, %140 ], [ %138, %133 ]
  %145 = load i16, i16* %143, align 2
  store i16 %145, i16* %141, align 2
  %146 = add i64 %142, -1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = getelementptr inbounds i16, i16* %143, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !642

151:                                              ; preds = %140, %133
  %152 = phi i16* [ %134, %133 ], [ %147, %140 ]
  %153 = phi i64 [ %135, %133 ], [ %146, %140 ]
  %154 = phi i16* [ %136, %133 ], [ %148, %140 ]
  %155 = icmp ult i64 %137, 7
  br i1 %155, label %186, label %156

156:                                              ; preds = %151, %156
  %157 = phi i16* [ %183, %156 ], [ %152, %151 ]
  %158 = phi i64 [ %182, %156 ], [ %153, %151 ]
  %159 = phi i16* [ %184, %156 ], [ %154, %151 ]
  %160 = load i16, i16* %159, align 2
  store i16 %160, i16* %157, align 2
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %159, i64 1
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = getelementptr inbounds i16, i16* %159, i64 2
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = getelementptr inbounds i16, i16* %159, i64 3
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = getelementptr inbounds i16, i16* %159, i64 4
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = getelementptr inbounds i16, i16* %159, i64 5
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = getelementptr inbounds i16, i16* %159, i64 6
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = getelementptr inbounds i16, i16* %159, i64 7
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = add i64 %158, -8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = getelementptr inbounds i16, i16* %159, i64 8
  %185 = icmp eq i64 %182, 0
  br i1 %185, label %186, label %156, !llvm.loop !643

186:                                              ; preds = %151, %156, %131, %8
  %187 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %188 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %189 = load i64, i64* %188, align 8
  store i64 %189, i64* %187, align 8
  %190 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ObjectPreview", %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %0, i64 0, i32 2, i32 1, i32 0
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0
  %192 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %190, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %191) #15
  %193 = load i64, i64* %187, align 8
  %194 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ObjectPreview", %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %0, i64 0, i32 2, i32 1, i32 1
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ObjectPreview", %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %0, i64 0, i32 2, i32 0
  store i8 1, i8* %195, align 8
  %196 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %196, i64 0, i32 1, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %186
  %201 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #16
  br label %203

203:                                              ; preds = %186, %200
  ret void
}

declare zeroext i1 @_ZNK2v85Value15IsBooleanObjectEv(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value14IsNumberObjectEv(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value14IsStringObjectEv(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value14IsSymbolObjectEv(%"class.v8::Value"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v85Value14IsBigIntObjectEv(%"class.v8::Value"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA19_KcEEEvDpOT_(%"class.std::__1::vector.580"*, [19 x i8]* dereferenceable(19)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.v8_inspector::String16"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.580"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.580"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8_inspector::String16"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.v8_inspector::String16"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.v8_inspector::String16"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %36, i64 %9
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %36, i64 %35
  %39 = ptrtoint %"class.v8_inspector::String16"* %38 to i64
  %40 = getelementptr inbounds [19 x i8], [19 x i8]* %1, i64 0, i64 0
  tail call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* %37, i8* %40) #15
  %41 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %37, i64 1
  %42 = ptrtoint %"class.v8_inspector::String16"* %41 to i64
  %43 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %0, i64 0, i32 0, i32 0
  %44 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %43, align 8
  %45 = ptrtoint %"class.v8_inspector::String16"* %44 to i64
  %46 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %3, align 8
  %47 = icmp eq %"class.v8_inspector::String16"* %46, %44
  br i1 %47, label %89, label %48

48:                                               ; preds = %34
  %49 = getelementptr %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %46, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = ptrtoint i16** %49 to i64
  %51 = sub i64 %50, %45
  %52 = and i64 %51, 32
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %62

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %37, i64 -1
  %56 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %46, i64 -1
  %57 = bitcast %"class.v8_inspector::String16"* %55 to i8*
  %58 = bitcast %"class.v8_inspector::String16"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #15
  %59 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %37, i64 -1, i32 1
  %60 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %46, i64 -1, i32 1
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %59, align 8
  br label %62

62:                                               ; preds = %54, %48
  %63 = phi %"class.v8_inspector::String16"* [ undef, %48 ], [ %55, %54 ]
  %64 = phi %"class.v8_inspector::String16"* [ %37, %48 ], [ %55, %54 ]
  %65 = phi %"class.v8_inspector::String16"* [ %46, %48 ], [ %56, %54 ]
  %66 = icmp ult i64 %51, 32
  br i1 %66, label %85, label %67

67:                                               ; preds = %62, %67
  %68 = phi %"class.v8_inspector::String16"* [ %77, %67 ], [ %64, %62 ]
  %69 = phi %"class.v8_inspector::String16"* [ %78, %67 ], [ %65, %62 ]
  %70 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %68, i64 -1
  %71 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %69, i64 -1
  %72 = bitcast %"class.v8_inspector::String16"* %70 to i8*
  %73 = bitcast %"class.v8_inspector::String16"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #15
  %74 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %68, i64 -1, i32 1
  %75 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %69, i64 -1, i32 1
  %76 = load i64, i64* %75, align 8
  store i64 %76, i64* %74, align 8
  %77 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %68, i64 -2
  %78 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %69, i64 -2
  %79 = bitcast %"class.v8_inspector::String16"* %77 to i8*
  %80 = bitcast %"class.v8_inspector::String16"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #15
  %81 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %68, i64 -2, i32 1
  %82 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %69, i64 -2, i32 1
  %83 = load i64, i64* %82, align 8
  store i64 %83, i64* %81, align 8
  %84 = icmp eq %"class.v8_inspector::String16"* %78, %44
  br i1 %84, label %85, label %67

85:                                               ; preds = %67, %62
  %86 = phi %"class.v8_inspector::String16"* [ %63, %62 ], [ %77, %67 ]
  %87 = load i64, i64* %6, align 8
  %88 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %3, align 8
  br label %89

89:                                               ; preds = %34, %85
  %90 = phi %"class.v8_inspector::String16"* [ %88, %85 ], [ %44, %34 ]
  %91 = phi %"class.v8_inspector::String16"* [ %86, %85 ], [ %37, %34 ]
  %92 = phi i64 [ %87, %85 ], [ %45, %34 ]
  %93 = ptrtoint %"class.v8_inspector::String16"* %91 to i64
  store i64 %93, i64* %6, align 8
  store i64 %42, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %94 = inttoptr i64 %92 to %"class.v8_inspector::String16"*
  %95 = icmp eq %"class.v8_inspector::String16"* %90, %94
  br i1 %95, label %108, label %96

96:                                               ; preds = %89, %106
  %97 = phi %"class.v8_inspector::String16"* [ %98, %106 ], [ %90, %89 ]
  %98 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %97, i64 -1
  %99 = bitcast %"class.v8_inspector::String16"* %98 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %99, i64 0, i32 1, i32 1
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %96
  %104 = bitcast %"class.v8_inspector::String16"* %98 to i8**
  %105 = load i8*, i8** %104, align 8
  tail call void @_ZdlPv(i8* %105) #16
  br label %106

106:                                              ; preds = %103, %96
  %107 = icmp eq %"class.v8_inspector::String16"* %98, %94
  br i1 %107, label %108, label %96

108:                                              ; preds = %106, %89
  %109 = icmp eq i64 %92, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %108
  %111 = inttoptr i64 %92 to i8*
  tail call void @_ZdlPv(i8* %111) #16
  br label %112

112:                                              ; preds = %108, %110
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA17_KcEEEvDpOT_(%"class.std::__1::vector.580"*, [17 x i8]* dereferenceable(17)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.v8_inspector::String16"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.580"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.580"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8_inspector::String16"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.v8_inspector::String16"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.v8_inspector::String16"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %36, i64 %9
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %36, i64 %35
  %39 = ptrtoint %"class.v8_inspector::String16"* %38 to i64
  %40 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 0
  tail call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* %37, i8* %40) #15
  %41 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %37, i64 1
  %42 = ptrtoint %"class.v8_inspector::String16"* %41 to i64
  %43 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %0, i64 0, i32 0, i32 0
  %44 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %43, align 8
  %45 = ptrtoint %"class.v8_inspector::String16"* %44 to i64
  %46 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %3, align 8
  %47 = icmp eq %"class.v8_inspector::String16"* %46, %44
  br i1 %47, label %89, label %48

48:                                               ; preds = %34
  %49 = getelementptr %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %46, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = ptrtoint i16** %49 to i64
  %51 = sub i64 %50, %45
  %52 = and i64 %51, 32
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %62

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %37, i64 -1
  %56 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %46, i64 -1
  %57 = bitcast %"class.v8_inspector::String16"* %55 to i8*
  %58 = bitcast %"class.v8_inspector::String16"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #15
  %59 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %37, i64 -1, i32 1
  %60 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %46, i64 -1, i32 1
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %59, align 8
  br label %62

62:                                               ; preds = %54, %48
  %63 = phi %"class.v8_inspector::String16"* [ undef, %48 ], [ %55, %54 ]
  %64 = phi %"class.v8_inspector::String16"* [ %37, %48 ], [ %55, %54 ]
  %65 = phi %"class.v8_inspector::String16"* [ %46, %48 ], [ %56, %54 ]
  %66 = icmp ult i64 %51, 32
  br i1 %66, label %85, label %67

67:                                               ; preds = %62, %67
  %68 = phi %"class.v8_inspector::String16"* [ %77, %67 ], [ %64, %62 ]
  %69 = phi %"class.v8_inspector::String16"* [ %78, %67 ], [ %65, %62 ]
  %70 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %68, i64 -1
  %71 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %69, i64 -1
  %72 = bitcast %"class.v8_inspector::String16"* %70 to i8*
  %73 = bitcast %"class.v8_inspector::String16"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #15
  %74 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %68, i64 -1, i32 1
  %75 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %69, i64 -1, i32 1
  %76 = load i64, i64* %75, align 8
  store i64 %76, i64* %74, align 8
  %77 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %68, i64 -2
  %78 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %69, i64 -2
  %79 = bitcast %"class.v8_inspector::String16"* %77 to i8*
  %80 = bitcast %"class.v8_inspector::String16"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #15
  %81 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %68, i64 -2, i32 1
  %82 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %69, i64 -2, i32 1
  %83 = load i64, i64* %82, align 8
  store i64 %83, i64* %81, align 8
  %84 = icmp eq %"class.v8_inspector::String16"* %78, %44
  br i1 %84, label %85, label %67

85:                                               ; preds = %67, %62
  %86 = phi %"class.v8_inspector::String16"* [ %63, %62 ], [ %77, %67 ]
  %87 = load i64, i64* %6, align 8
  %88 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %3, align 8
  br label %89

89:                                               ; preds = %34, %85
  %90 = phi %"class.v8_inspector::String16"* [ %88, %85 ], [ %44, %34 ]
  %91 = phi %"class.v8_inspector::String16"* [ %86, %85 ], [ %37, %34 ]
  %92 = phi i64 [ %87, %85 ], [ %45, %34 ]
  %93 = ptrtoint %"class.v8_inspector::String16"* %91 to i64
  store i64 %93, i64* %6, align 8
  store i64 %42, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %94 = inttoptr i64 %92 to %"class.v8_inspector::String16"*
  %95 = icmp eq %"class.v8_inspector::String16"* %90, %94
  br i1 %95, label %108, label %96

96:                                               ; preds = %89, %106
  %97 = phi %"class.v8_inspector::String16"* [ %98, %106 ], [ %90, %89 ]
  %98 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %97, i64 -1
  %99 = bitcast %"class.v8_inspector::String16"* %98 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %99, i64 0, i32 1, i32 1
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %96
  %104 = bitcast %"class.v8_inspector::String16"* %98 to i8**
  %105 = load i8*, i8** %104, align 8
  tail call void @_ZdlPv(i8* %105) #16
  br label %106

106:                                              ; preds = %103, %96
  %107 = icmp eq %"class.v8_inspector::String16"* %98, %94
  br i1 %107, label %108, label %96

108:                                              ; preds = %106, %89
  %109 = icmp eq i64 %92, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %108
  %111 = inttoptr i64 %92 to i8*
  tail call void @_ZdlPv(i8* %111) #16
  br label %112

112:                                              ; preds = %108, %110
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA18_KcEEEvDpOT_(%"class.std::__1::vector.580"*, [18 x i8]* dereferenceable(18)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.v8_inspector::String16"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.580"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.580"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8_inspector::String16"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.v8_inspector::String16"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.v8_inspector::String16"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %36, i64 %9
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %36, i64 %35
  %39 = ptrtoint %"class.v8_inspector::String16"* %38 to i64
  %40 = getelementptr inbounds [18 x i8], [18 x i8]* %1, i64 0, i64 0
  tail call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* %37, i8* %40) #15
  %41 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %37, i64 1
  %42 = ptrtoint %"class.v8_inspector::String16"* %41 to i64
  %43 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %0, i64 0, i32 0, i32 0
  %44 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %43, align 8
  %45 = ptrtoint %"class.v8_inspector::String16"* %44 to i64
  %46 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %3, align 8
  %47 = icmp eq %"class.v8_inspector::String16"* %46, %44
  br i1 %47, label %89, label %48

48:                                               ; preds = %34
  %49 = getelementptr %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %46, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = ptrtoint i16** %49 to i64
  %51 = sub i64 %50, %45
  %52 = and i64 %51, 32
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %62

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %37, i64 -1
  %56 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %46, i64 -1
  %57 = bitcast %"class.v8_inspector::String16"* %55 to i8*
  %58 = bitcast %"class.v8_inspector::String16"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #15
  %59 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %37, i64 -1, i32 1
  %60 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %46, i64 -1, i32 1
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %59, align 8
  br label %62

62:                                               ; preds = %54, %48
  %63 = phi %"class.v8_inspector::String16"* [ undef, %48 ], [ %55, %54 ]
  %64 = phi %"class.v8_inspector::String16"* [ %37, %48 ], [ %55, %54 ]
  %65 = phi %"class.v8_inspector::String16"* [ %46, %48 ], [ %56, %54 ]
  %66 = icmp ult i64 %51, 32
  br i1 %66, label %85, label %67

67:                                               ; preds = %62, %67
  %68 = phi %"class.v8_inspector::String16"* [ %77, %67 ], [ %64, %62 ]
  %69 = phi %"class.v8_inspector::String16"* [ %78, %67 ], [ %65, %62 ]
  %70 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %68, i64 -1
  %71 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %69, i64 -1
  %72 = bitcast %"class.v8_inspector::String16"* %70 to i8*
  %73 = bitcast %"class.v8_inspector::String16"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #15
  %74 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %68, i64 -1, i32 1
  %75 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %69, i64 -1, i32 1
  %76 = load i64, i64* %75, align 8
  store i64 %76, i64* %74, align 8
  %77 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %68, i64 -2
  %78 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %69, i64 -2
  %79 = bitcast %"class.v8_inspector::String16"* %77 to i8*
  %80 = bitcast %"class.v8_inspector::String16"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #15
  %81 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %68, i64 -2, i32 1
  %82 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %69, i64 -2, i32 1
  %83 = load i64, i64* %82, align 8
  store i64 %83, i64* %81, align 8
  %84 = icmp eq %"class.v8_inspector::String16"* %78, %44
  br i1 %84, label %85, label %67

85:                                               ; preds = %67, %62
  %86 = phi %"class.v8_inspector::String16"* [ %63, %62 ], [ %77, %67 ]
  %87 = load i64, i64* %6, align 8
  %88 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %3, align 8
  br label %89

89:                                               ; preds = %34, %85
  %90 = phi %"class.v8_inspector::String16"* [ %88, %85 ], [ %44, %34 ]
  %91 = phi %"class.v8_inspector::String16"* [ %86, %85 ], [ %37, %34 ]
  %92 = phi i64 [ %87, %85 ], [ %45, %34 ]
  %93 = ptrtoint %"class.v8_inspector::String16"* %91 to i64
  store i64 %93, i64* %6, align 8
  store i64 %42, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %94 = inttoptr i64 %92 to %"class.v8_inspector::String16"*
  %95 = icmp eq %"class.v8_inspector::String16"* %90, %94
  br i1 %95, label %108, label %96

96:                                               ; preds = %89, %106
  %97 = phi %"class.v8_inspector::String16"* [ %98, %106 ], [ %90, %89 ]
  %98 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %97, i64 -1
  %99 = bitcast %"class.v8_inspector::String16"* %98 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %99, i64 0, i32 1, i32 1
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %96
  %104 = bitcast %"class.v8_inspector::String16"* %98 to i8**
  %105 = load i8*, i8** %104, align 8
  tail call void @_ZdlPv(i8* %105) #16
  br label %106

106:                                              ; preds = %103, %96
  %107 = icmp eq %"class.v8_inspector::String16"* %98, %94
  br i1 %107, label %108, label %96

108:                                              ; preds = %106, %89
  %109 = icmp eq i64 %92, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %108
  %111 = inttoptr i64 %92 to i8*
  tail call void @_ZdlPv(i8* %111) #16
  br label %112

112:                                              ; preds = %108, %110
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN12v8_inspector22InternalPropertyMirrorENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"struct.v8_inspector::InternalPropertyMirror"* dereferenceable(40)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.v8_inspector::InternalPropertyMirror"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 461168601842738790
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.v8_inspector::InternalPropertyMirror"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 40
  %20 = icmp ult i64 %19, 230584300921369395
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 461168601842738790, %14 ]
  %28 = mul i64 %27, 40
  %29 = tail call i8* @_Znwm(i64 %28) #16
  %30 = bitcast i8* %29 to %"struct.v8_inspector::InternalPropertyMirror"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.v8_inspector::InternalPropertyMirror"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %33, i64 %32
  %36 = ptrtoint %"struct.v8_inspector::InternalPropertyMirror"* %35 to i64
  %37 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %34 to i8*
  %38 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #15
  %39 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %33, i64 %9, i32 0, i32 1
  %40 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %1, i64 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %33, i64 %9, i32 1
  %43 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %1, i64 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr.10"* %43 to i64*
  %46 = load i64, i64* %45, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %44, align 8
  %47 = bitcast %"class.std::__1::unique_ptr.10"* %42 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %34, i64 1
  %49 = ptrtoint %"struct.v8_inspector::InternalPropertyMirror"* %48 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %51 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %50, align 8
  %52 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %3, align 8
  %53 = icmp eq %"struct.v8_inspector::InternalPropertyMirror"* %52, %51
  br i1 %53, label %54, label %56

54:                                               ; preds = %31
  %55 = ptrtoint %"struct.v8_inspector::InternalPropertyMirror"* %51 to i64
  br label %76

56:                                               ; preds = %31, %56
  %57 = phi %"struct.v8_inspector::InternalPropertyMirror"* [ %59, %56 ], [ %34, %31 ]
  %58 = phi %"struct.v8_inspector::InternalPropertyMirror"* [ %60, %56 ], [ %52, %31 ]
  %59 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %57, i64 -1
  %60 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %58, i64 -1
  %61 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %59 to i8*
  %62 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #15
  %63 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %57, i64 -1, i32 0, i32 1
  %64 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %58, i64 -1, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %63, align 8
  %66 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %57, i64 -1, i32 1
  %67 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %58, i64 -1, i32 1
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.std::__1::unique_ptr.10"* %67 to i64*
  %70 = load i64, i64* %69, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %68, align 8
  %71 = bitcast %"class.std::__1::unique_ptr.10"* %66 to i64*
  store i64 %70, i64* %71, align 8
  %72 = icmp eq %"struct.v8_inspector::InternalPropertyMirror"* %60, %51
  br i1 %72, label %73, label %56

73:                                               ; preds = %56
  %74 = load i64, i64* %6, align 8
  %75 = load %"struct.v8_inspector::InternalPropertyMirror"*, %"struct.v8_inspector::InternalPropertyMirror"** %3, align 8
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi %"struct.v8_inspector::InternalPropertyMirror"* [ %51, %54 ], [ %75, %73 ]
  %78 = phi %"struct.v8_inspector::InternalPropertyMirror"* [ %34, %54 ], [ %59, %73 ]
  %79 = phi i64 [ %55, %54 ], [ %74, %73 ]
  %80 = ptrtoint %"struct.v8_inspector::InternalPropertyMirror"* %78 to i64
  store i64 %80, i64* %6, align 8
  store i64 %49, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %81 = inttoptr i64 %79 to %"struct.v8_inspector::InternalPropertyMirror"*
  %82 = icmp eq %"struct.v8_inspector::InternalPropertyMirror"* %77, %81
  br i1 %82, label %104, label %83

83:                                               ; preds = %76, %102
  %84 = phi %"struct.v8_inspector::InternalPropertyMirror"* [ %85, %102 ], [ %77, %76 ]
  %85 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %84, i64 -1
  %86 = getelementptr inbounds %"struct.v8_inspector::InternalPropertyMirror", %"struct.v8_inspector::InternalPropertyMirror"* %84, i64 -1, i32 1, i32 0, i32 0, i32 0
  %87 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %86, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %86, align 8
  %88 = icmp eq %"class.v8_inspector::ValueMirror"* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %83
  %90 = bitcast %"class.v8_inspector::ValueMirror"* %87 to void (%"class.v8_inspector::ValueMirror"*)***
  %91 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %91, i64 1
  %93 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %92, align 8
  tail call void %93(%"class.v8_inspector::ValueMirror"* nonnull %87) #15
  br label %94

94:                                               ; preds = %89, %83
  %95 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %85 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %95, i64 0, i32 1, i32 1
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %94
  %100 = bitcast %"struct.v8_inspector::InternalPropertyMirror"* %85 to i8**
  %101 = load i8*, i8** %100, align 8
  tail call void @_ZdlPv(i8* %101) #16
  br label %102

102:                                              ; preds = %99, %94
  %103 = icmp eq %"struct.v8_inspector::InternalPropertyMirror"* %85, %81
  br i1 %103, label %104, label %83

104:                                              ; preds = %102, %76
  %105 = icmp eq i64 %79, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = inttoptr i64 %79 to i8*
  tail call void @_ZdlPv(i8* %107) #16
  br label %108

108:                                              ; preds = %104, %106
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime15PropertyPreviewENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.426"*, %"class.std::__1::unique_ptr.414"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.426", %"class.std::__1::vector.426"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.414"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.426"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.426"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.426", %"class.std::__1::vector.426"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.414"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.414"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.414"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.414"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.414"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.414"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.414"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.426", %"class.std::__1::vector.426"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.414"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.414"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.414"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.414"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.414"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.414"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !644

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.414"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.414"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.414"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.414"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.414"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.414"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.414"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.414"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.414"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.414"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.414"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.414"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.414"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.414"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.414"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.414"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.414"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.414"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.414"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.414"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.414"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.414"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.414"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.414"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.414"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.414"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.414"*
  %138 = icmp eq %"class.std::__1::unique_ptr.414"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.414"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %142, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %142, align 8
  %144 = icmp eq %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %143 to void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)***
  %147 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %147, i64 2
  %149 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %148, align 8
  tail call void %149(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %143) #15
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.414"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #16
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

declare %"class.v8::String"* @_ZNK2v812StringObject7ValueOfEv(%"class.v8::StringObject"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12v8_inspector12_GLOBAL__N_126PreviewPropertyAccumulatorD2Ev(%"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_126PreviewPropertyAccumulatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %4, align 8
  %6 = icmp eq %"class.v8_inspector::String16"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  %9 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %9, align 8
  %11 = icmp eq %"class.v8_inspector::String16"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"class.v8_inspector::String16"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %13, i64 -1
  %15 = bitcast %"class.v8_inspector::String16"* %14 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = bitcast %"class.v8_inspector::String16"* %14 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #16
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"class.v8_inspector::String16"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.580"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"class.v8_inspector::String16"* %5, %"class.v8_inspector::String16"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #16
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.580"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.v8_inspector::String16"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.580"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.580"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8_inspector::String16"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.v8_inspector::String16"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.v8_inspector::String16"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %36, i64 %9
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %36, i64 %35
  %39 = ptrtoint %"class.v8_inspector::String16"* %38 to i64
  %40 = bitcast %"class.v8_inspector::String16"* %37 to i8*
  %41 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #15
  %42 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %36, i64 %9, i32 1
  %43 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %42, align 8
  %45 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %37, i64 1
  %46 = ptrtoint %"class.v8_inspector::String16"* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %0, i64 0, i32 0, i32 0
  %48 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %47, align 8
  %49 = ptrtoint %"class.v8_inspector::String16"* %48 to i64
  %50 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %3, align 8
  %51 = icmp eq %"class.v8_inspector::String16"* %50, %48
  br i1 %51, label %93, label %52

52:                                               ; preds = %34
  %53 = getelementptr %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %50, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = ptrtoint i16** %53 to i64
  %55 = sub i64 %54, %49
  %56 = and i64 %55, 32
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %66

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %37, i64 -1
  %60 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %50, i64 -1
  %61 = bitcast %"class.v8_inspector::String16"* %59 to i8*
  %62 = bitcast %"class.v8_inspector::String16"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #15
  %63 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %37, i64 -1, i32 1
  %64 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %50, i64 -1, i32 1
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %58, %52
  %67 = phi %"class.v8_inspector::String16"* [ undef, %52 ], [ %59, %58 ]
  %68 = phi %"class.v8_inspector::String16"* [ %37, %52 ], [ %59, %58 ]
  %69 = phi %"class.v8_inspector::String16"* [ %50, %52 ], [ %60, %58 ]
  %70 = icmp ult i64 %55, 32
  br i1 %70, label %89, label %71

71:                                               ; preds = %66, %71
  %72 = phi %"class.v8_inspector::String16"* [ %81, %71 ], [ %68, %66 ]
  %73 = phi %"class.v8_inspector::String16"* [ %82, %71 ], [ %69, %66 ]
  %74 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %72, i64 -1
  %75 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %73, i64 -1
  %76 = bitcast %"class.v8_inspector::String16"* %74 to i8*
  %77 = bitcast %"class.v8_inspector::String16"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #15
  %78 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %72, i64 -1, i32 1
  %79 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %73, i64 -1, i32 1
  %80 = load i64, i64* %79, align 8
  store i64 %80, i64* %78, align 8
  %81 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %72, i64 -2
  %82 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %73, i64 -2
  %83 = bitcast %"class.v8_inspector::String16"* %81 to i8*
  %84 = bitcast %"class.v8_inspector::String16"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #15
  %85 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %72, i64 -2, i32 1
  %86 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %73, i64 -2, i32 1
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %85, align 8
  %88 = icmp eq %"class.v8_inspector::String16"* %82, %48
  br i1 %88, label %89, label %71

89:                                               ; preds = %71, %66
  %90 = phi %"class.v8_inspector::String16"* [ %67, %66 ], [ %81, %71 ]
  %91 = load i64, i64* %6, align 8
  %92 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %3, align 8
  br label %93

93:                                               ; preds = %34, %89
  %94 = phi %"class.v8_inspector::String16"* [ %92, %89 ], [ %48, %34 ]
  %95 = phi %"class.v8_inspector::String16"* [ %90, %89 ], [ %37, %34 ]
  %96 = phi i64 [ %91, %89 ], [ %49, %34 ]
  %97 = ptrtoint %"class.v8_inspector::String16"* %95 to i64
  store i64 %97, i64* %6, align 8
  store i64 %46, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %98 = inttoptr i64 %96 to %"class.v8_inspector::String16"*
  %99 = icmp eq %"class.v8_inspector::String16"* %94, %98
  br i1 %99, label %112, label %100

100:                                              ; preds = %93, %110
  %101 = phi %"class.v8_inspector::String16"* [ %102, %110 ], [ %94, %93 ]
  %102 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %101, i64 -1
  %103 = bitcast %"class.v8_inspector::String16"* %102 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %103, i64 0, i32 1, i32 1
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %100
  %108 = bitcast %"class.v8_inspector::String16"* %102 to i8**
  %109 = load i8*, i8** %108, align 8
  tail call void @_ZdlPv(i8* %109) #16
  br label %110

110:                                              ; preds = %107, %100
  %111 = icmp eq %"class.v8_inspector::String16"* %102, %98
  br i1 %111, label %112, label %100

112:                                              ; preds = %110, %93
  %113 = icmp eq i64 %96, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %112
  %115 = inttoptr i64 %96 to i8*
  tail call void @_ZdlPv(i8* %115) #16
  br label %116

116:                                              ; preds = %112, %114
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12v8_inspector12_GLOBAL__N_126PreviewPropertyAccumulatorD0Ev(%"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"*) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_126PreviewPropertyAccumulatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.580", %"class.std::__1::vector.580"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %4, align 8
  %6 = icmp eq %"class.v8_inspector::String16"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  %9 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %9, align 8
  %11 = icmp eq %"class.v8_inspector::String16"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"class.v8_inspector::String16"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %13, i64 -1
  %15 = bitcast %"class.v8_inspector::String16"* %14 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = bitcast %"class.v8_inspector::String16"* %14 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #16
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"class.v8_inspector::String16"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.580"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"class.v8_inspector::String16"* %5, %"class.v8_inspector::String16"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #16
  br label %29

29:                                               ; preds = %1, %27
  %30 = bitcast %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN12v8_inspector12_GLOBAL__N_126PreviewPropertyAccumulator3AddENS_14PropertyMirrorE(%"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* nocapture, %"struct.v8_inspector::PropertyMirror"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1, i64 0, i32 10
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %4, align 8
  %6 = icmp eq %"class.v8_inspector::ValueMirror"* %5, null
  br i1 %6, label %7, label %169

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1, i64 0, i32 7
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %9, align 8
  %11 = icmp eq %"class.v8_inspector::ValueMirror"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.v8_inspector::ValueMirror"* %10 to %"class.v8::Value"* (%"class.v8_inspector::ValueMirror"*)***
  %14 = load %"class.v8::Value"* (%"class.v8_inspector::ValueMirror"*)**, %"class.v8::Value"* (%"class.v8_inspector::ValueMirror"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.v8::Value"* (%"class.v8_inspector::ValueMirror"*)*, %"class.v8::Value"* (%"class.v8_inspector::ValueMirror"*)** %14, i64 6
  %16 = load %"class.v8::Value"* (%"class.v8_inspector::ValueMirror"*)*, %"class.v8::Value"* (%"class.v8_inspector::ValueMirror"*)** %15, align 8
  %17 = tail call %"class.v8::Value"* %16(%"class.v8_inspector::ValueMirror"* nonnull %10) #15
  %18 = tail call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %17) #15
  br i1 %18, label %23, label %19

19:                                               ; preds = %7, %12
  %20 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %21 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %20, align 8
  %22 = icmp eq %"class.v8_inspector::ValueMirror"* %21, null
  br i1 %22, label %169, label %23

23:                                               ; preds = %19, %12
  %24 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1, i64 0, i32 4
  %25 = load i8, i8* %24, align 1, !range !7
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %169, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %0, i64 0, i32 1, i32 0, i32 0
  %29 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %28, align 8
  %30 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %0, i64 0, i32 1, i32 0, i32 1
  %31 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %30, align 8
  %32 = icmp eq %"class.v8_inspector::String16"* %29, %31
  br i1 %32, label %92, label %33

33:                                               ; preds = %27
  %34 = bitcast %"struct.v8_inspector::PropertyMirror"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %34, i64 0, i32 1, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %36 to i64
  %41 = select i1 %37, i64 %39, i64 %40
  %42 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i16*, i16** %42, align 8
  %44 = bitcast %"struct.v8_inspector::PropertyMirror"* %1 to i16*
  %45 = select i1 %37, i16* %43, i16* %44
  %46 = icmp eq i64 %41, 0
  br i1 %46, label %47, label %61

47:                                               ; preds = %33, %58
  %48 = phi %"class.v8_inspector::String16"* [ %59, %58 ], [ %29, %33 ]
  %49 = bitcast %"class.v8_inspector::String16"* %48 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %49, i64 0, i32 1, i32 1
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = zext i8 %51 to i64
  %56 = select i1 %52, i64 %54, i64 %55
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %92, label %58

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %48, i64 1
  %60 = icmp eq %"class.v8_inspector::String16"* %59, %31
  br i1 %60, label %95, label %47

61:                                               ; preds = %33, %89
  %62 = phi %"class.v8_inspector::String16"* [ %90, %89 ], [ %29, %33 ]
  %63 = bitcast %"class.v8_inspector::String16"* %62 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %63, i64 0, i32 1, i32 1
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = zext i8 %65 to i64
  %70 = select i1 %66, i64 %68, i64 %69
  %71 = icmp eq i64 %70, %41
  br i1 %71, label %72, label %89

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i16*, i16** %73, align 8
  %75 = bitcast %"class.v8_inspector::String16"* %62 to i16*
  %76 = select i1 %66, i16* %74, i16* %75
  br label %77

77:                                               ; preds = %84, %72
  %78 = phi i64 [ %85, %84 ], [ %41, %72 ]
  %79 = phi i16* [ %87, %84 ], [ %45, %72 ]
  %80 = phi i16* [ %86, %84 ], [ %76, %72 ]
  %81 = load i16, i16* %80, align 2
  %82 = load i16, i16* %79, align 2
  %83 = icmp eq i16 %82, %81
  br i1 %83, label %84, label %89

84:                                               ; preds = %77
  %85 = add i64 %78, -1
  %86 = getelementptr inbounds i16, i16* %80, i64 1
  %87 = getelementptr inbounds i16, i16* %79, i64 1
  %88 = icmp eq i64 %85, 0
  br i1 %88, label %92, label %77

89:                                               ; preds = %77, %61
  %90 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %62, i64 1
  %91 = icmp eq %"class.v8_inspector::String16"* %90, %31
  br i1 %91, label %95, label %61

92:                                               ; preds = %84, %47, %27
  %93 = phi %"class.v8_inspector::String16"* [ %29, %27 ], [ %48, %47 ], [ %62, %84 ]
  %94 = icmp eq %"class.v8_inspector::String16"* %93, %31
  br i1 %94, label %95, label %169

95:                                               ; preds = %89, %58, %92
  %96 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1, i64 0, i32 5
  %97 = load i8, i8* %96, align 4, !range !7
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %112, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %0, i64 0, i32 2
  %101 = load i32, i32* %100, align 8
  %102 = icmp sgt i32 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %0, i64 0, i32 4
  br label %114

105:                                              ; preds = %99
  %106 = add nsw i32 %101, -1
  store i32 %106, i32* %100, align 8
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %169, label %108

108:                                              ; preds = %105
  %109 = load i8, i8* %96, align 4, !range !7
  %110 = icmp eq i8 %109, 0
  %111 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %0, i64 0, i32 4
  br i1 %110, label %112, label %114

112:                                              ; preds = %95, %108
  %113 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %0, i64 0, i32 3
  br label %114

114:                                              ; preds = %103, %108, %112
  %115 = phi i32** [ %113, %112 ], [ %111, %108 ], [ %104, %103 ]
  %116 = load i32*, i32** %115, align 8
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %0, i64 0, i32 5
  %121 = load i8*, i8** %120, align 8
  store i8 1, i8* %121, align 1
  br label %169

122:                                              ; preds = %114
  %123 = add nsw i32 %117, -1
  store i32 %123, i32* %116, align 4
  %124 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator", %"class.v8_inspector::(anonymous namespace)::PreviewPropertyAccumulator"* %0, i64 0, i32 6
  %125 = load %"class.std::__1::vector.632"*, %"class.std::__1::vector.632"** %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::vector.632", %"class.std::__1::vector.632"* %125, i64 0, i32 0, i32 1
  %127 = load %"struct.v8_inspector::PropertyMirror"*, %"struct.v8_inspector::PropertyMirror"** %126, align 8
  %128 = getelementptr inbounds %"class.std::__1::vector.632", %"class.std::__1::vector.632"* %125, i64 0, i32 0, i32 2, i32 0, i32 0
  %129 = load %"struct.v8_inspector::PropertyMirror"*, %"struct.v8_inspector::PropertyMirror"** %128, align 8
  %130 = icmp ult %"struct.v8_inspector::PropertyMirror"* %127, %129
  br i1 %130, label %131, label %168

131:                                              ; preds = %122
  %132 = bitcast %"struct.v8_inspector::PropertyMirror"* %127 to i8*
  %133 = bitcast %"struct.v8_inspector::PropertyMirror"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 24, i1 false) #15
  %134 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %127, i64 0, i32 0, i32 1
  %135 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1, i64 0, i32 0, i32 1
  %136 = load i64, i64* %135, align 8
  store i64 %136, i64* %134, align 8
  %137 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %127, i64 0, i32 1
  %138 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 8 %138, i64 5, i1 false) #15
  %139 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %127, i64 0, i32 6
  %140 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1, i64 0, i32 6
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %140, i64 0, i32 0, i32 0, i32 0
  %142 = bitcast %"class.std::__1::unique_ptr.10"* %140 to i64*
  %143 = load i64, i64* %142, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %141, align 8
  %144 = bitcast %"class.std::__1::unique_ptr.10"* %139 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %127, i64 0, i32 7
  %146 = bitcast %"class.std::__1::unique_ptr.10"* %8 to i64*
  %147 = load i64, i64* %146, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %9, align 8
  %148 = bitcast %"class.std::__1::unique_ptr.10"* %145 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %127, i64 0, i32 8
  %150 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1, i64 0, i32 8
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %150, i64 0, i32 0, i32 0, i32 0
  %152 = bitcast %"class.std::__1::unique_ptr.10"* %150 to i64*
  %153 = load i64, i64* %152, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %151, align 8
  %154 = bitcast %"class.std::__1::unique_ptr.10"* %149 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %127, i64 0, i32 9
  %156 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1, i64 0, i32 9
  %157 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %156, i64 0, i32 0, i32 0, i32 0
  %158 = bitcast %"class.std::__1::unique_ptr.10"* %156 to i64*
  %159 = load i64, i64* %158, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %157, align 8
  %160 = bitcast %"class.std::__1::unique_ptr.10"* %155 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %127, i64 0, i32 10
  %162 = bitcast %"class.std::__1::unique_ptr.10"* %3 to i64*
  %163 = load i64, i64* %162, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %4, align 8
  %164 = bitcast %"class.std::__1::unique_ptr.10"* %161 to i64*
  store i64 %163, i64* %164, align 8
  %165 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %127, i64 1
  %166 = ptrtoint %"struct.v8_inspector::PropertyMirror"* %165 to i64
  %167 = bitcast %"struct.v8_inspector::PropertyMirror"** %126 to i64*
  store i64 %166, i64* %167, align 8
  br label %169

168:                                              ; preds = %122
  tail call void @_ZNSt3__16vectorIN12v8_inspector14PropertyMirrorENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.632"* %125, %"struct.v8_inspector::PropertyMirror"* dereferenceable(80) %1) #15
  br label %169

169:                                              ; preds = %92, %19, %2, %168, %131, %119, %105, %23
  %170 = phi i1 [ true, %2 ], [ true, %19 ], [ true, %23 ], [ true, %92 ], [ true, %105 ], [ false, %119 ], [ true, %131 ], [ true, %168 ]
  ret i1 %170
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN12v8_inspector14PropertyMirrorENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.632"*, %"struct.v8_inspector::PropertyMirror"* dereferenceable(80)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.632", %"class.std::__1::vector.632"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.v8_inspector::PropertyMirror"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.632"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 80
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 230584300921369395
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.632"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.632", %"class.std::__1::vector.632"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.v8_inspector::PropertyMirror"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 80
  %20 = icmp ult i64 %19, 115292150460684697
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 230584300921369395, %14 ]
  %28 = mul i64 %27, 80
  %29 = tail call i8* @_Znwm(i64 %28) #16
  %30 = bitcast i8* %29 to %"struct.v8_inspector::PropertyMirror"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.v8_inspector::PropertyMirror"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %33, i64 %32
  %36 = ptrtoint %"struct.v8_inspector::PropertyMirror"* %35 to i64
  %37 = bitcast %"struct.v8_inspector::PropertyMirror"* %34 to i8*
  %38 = bitcast %"struct.v8_inspector::PropertyMirror"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #15
  %39 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %33, i64 %9, i32 0, i32 1
  %40 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1, i64 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %33, i64 %9, i32 1
  %43 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 5, i1 false) #15
  %44 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %33, i64 %9, i32 6
  %45 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1, i64 0, i32 6
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::unique_ptr.10"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %46, align 8
  %49 = bitcast %"class.std::__1::unique_ptr.10"* %44 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %33, i64 %9, i32 7
  %51 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1, i64 0, i32 7
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = bitcast %"class.std::__1::unique_ptr.10"* %51 to i64*
  %54 = load i64, i64* %53, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %52, align 8
  %55 = bitcast %"class.std::__1::unique_ptr.10"* %50 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %33, i64 %9, i32 8
  %57 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1, i64 0, i32 8
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.std::__1::unique_ptr.10"* %57 to i64*
  %60 = load i64, i64* %59, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %58, align 8
  %61 = bitcast %"class.std::__1::unique_ptr.10"* %56 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %33, i64 %9, i32 9
  %63 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1, i64 0, i32 9
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.std::__1::unique_ptr.10"* %63 to i64*
  %66 = load i64, i64* %65, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %64, align 8
  %67 = bitcast %"class.std::__1::unique_ptr.10"* %62 to i64*
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %33, i64 %9, i32 10
  %69 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %1, i64 0, i32 10
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = bitcast %"class.std::__1::unique_ptr.10"* %69 to i64*
  %72 = load i64, i64* %71, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %70, align 8
  %73 = bitcast %"class.std::__1::unique_ptr.10"* %68 to i64*
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %34, i64 1
  %75 = ptrtoint %"struct.v8_inspector::PropertyMirror"* %74 to i64
  %76 = getelementptr inbounds %"class.std::__1::vector.632", %"class.std::__1::vector.632"* %0, i64 0, i32 0, i32 0
  %77 = load %"struct.v8_inspector::PropertyMirror"*, %"struct.v8_inspector::PropertyMirror"** %76, align 8
  %78 = load %"struct.v8_inspector::PropertyMirror"*, %"struct.v8_inspector::PropertyMirror"** %3, align 8
  %79 = icmp eq %"struct.v8_inspector::PropertyMirror"* %78, %77
  br i1 %79, label %80, label %82

80:                                               ; preds = %31
  %81 = ptrtoint %"struct.v8_inspector::PropertyMirror"* %77 to i64
  br label %128

82:                                               ; preds = %31, %82
  %83 = phi %"struct.v8_inspector::PropertyMirror"* [ %85, %82 ], [ %34, %31 ]
  %84 = phi %"struct.v8_inspector::PropertyMirror"* [ %86, %82 ], [ %78, %31 ]
  %85 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %83, i64 -1
  %86 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %84, i64 -1
  %87 = bitcast %"struct.v8_inspector::PropertyMirror"* %85 to i8*
  %88 = bitcast %"struct.v8_inspector::PropertyMirror"* %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #15
  %89 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %83, i64 -1, i32 0, i32 1
  %90 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %84, i64 -1, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %89, align 8
  %92 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %83, i64 -1, i32 1
  %93 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %84, i64 -1, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 5, i1 false) #15
  %94 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %83, i64 -1, i32 6
  %95 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %84, i64 -1, i32 6
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %95, i64 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.std::__1::unique_ptr.10"* %95 to i64*
  %98 = load i64, i64* %97, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %96, align 8
  %99 = bitcast %"class.std::__1::unique_ptr.10"* %94 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %83, i64 -1, i32 7
  %101 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %84, i64 -1, i32 7
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.std::__1::unique_ptr.10"* %101 to i64*
  %104 = load i64, i64* %103, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %102, align 8
  %105 = bitcast %"class.std::__1::unique_ptr.10"* %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %83, i64 -1, i32 8
  %107 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %84, i64 -1, i32 8
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.std::__1::unique_ptr.10"* %107 to i64*
  %110 = load i64, i64* %109, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %108, align 8
  %111 = bitcast %"class.std::__1::unique_ptr.10"* %106 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %83, i64 -1, i32 9
  %113 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %84, i64 -1, i32 9
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.std::__1::unique_ptr.10"* %113 to i64*
  %116 = load i64, i64* %115, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %114, align 8
  %117 = bitcast %"class.std::__1::unique_ptr.10"* %112 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %83, i64 -1, i32 10
  %119 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %84, i64 -1, i32 10
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.std::__1::unique_ptr.10"* %119 to i64*
  %122 = load i64, i64* %121, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %120, align 8
  %123 = bitcast %"class.std::__1::unique_ptr.10"* %118 to i64*
  store i64 %122, i64* %123, align 8
  %124 = icmp eq %"struct.v8_inspector::PropertyMirror"* %86, %77
  br i1 %124, label %125, label %82

125:                                              ; preds = %82
  %126 = load i64, i64* %6, align 8
  %127 = load %"struct.v8_inspector::PropertyMirror"*, %"struct.v8_inspector::PropertyMirror"** %3, align 8
  br label %128

128:                                              ; preds = %80, %125
  %129 = phi %"struct.v8_inspector::PropertyMirror"* [ %77, %80 ], [ %127, %125 ]
  %130 = phi %"struct.v8_inspector::PropertyMirror"* [ %34, %80 ], [ %85, %125 ]
  %131 = phi i64 [ %81, %80 ], [ %126, %125 ]
  %132 = ptrtoint %"struct.v8_inspector::PropertyMirror"* %130 to i64
  store i64 %132, i64* %6, align 8
  store i64 %75, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %133 = inttoptr i64 %131 to %"struct.v8_inspector::PropertyMirror"*
  %134 = icmp eq %"struct.v8_inspector::PropertyMirror"* %129, %133
  br i1 %134, label %192, label %135

135:                                              ; preds = %128, %190
  %136 = phi %"struct.v8_inspector::PropertyMirror"* [ %137, %190 ], [ %129, %128 ]
  %137 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %136, i64 -1
  %138 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %136, i64 -1, i32 10, i32 0, i32 0, i32 0
  %139 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %138, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %138, align 8
  %140 = icmp eq %"class.v8_inspector::ValueMirror"* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %135
  %142 = bitcast %"class.v8_inspector::ValueMirror"* %139 to void (%"class.v8_inspector::ValueMirror"*)***
  %143 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %143, i64 1
  %145 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %144, align 8
  tail call void %145(%"class.v8_inspector::ValueMirror"* nonnull %139) #15
  br label %146

146:                                              ; preds = %141, %135
  %147 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %136, i64 -1, i32 9, i32 0, i32 0, i32 0
  %148 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %147, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %147, align 8
  %149 = icmp eq %"class.v8_inspector::ValueMirror"* %148, null
  br i1 %149, label %155, label %150

150:                                              ; preds = %146
  %151 = bitcast %"class.v8_inspector::ValueMirror"* %148 to void (%"class.v8_inspector::ValueMirror"*)***
  %152 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %152, i64 1
  %154 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %153, align 8
  tail call void %154(%"class.v8_inspector::ValueMirror"* nonnull %148) #15
  br label %155

155:                                              ; preds = %150, %146
  %156 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %136, i64 -1, i32 8, i32 0, i32 0, i32 0
  %157 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %156, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %156, align 8
  %158 = icmp eq %"class.v8_inspector::ValueMirror"* %157, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %155
  %160 = bitcast %"class.v8_inspector::ValueMirror"* %157 to void (%"class.v8_inspector::ValueMirror"*)***
  %161 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %160, align 8
  %162 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %161, i64 1
  %163 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %162, align 8
  tail call void %163(%"class.v8_inspector::ValueMirror"* nonnull %157) #15
  br label %164

164:                                              ; preds = %159, %155
  %165 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %136, i64 -1, i32 7, i32 0, i32 0, i32 0
  %166 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %165, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %165, align 8
  %167 = icmp eq %"class.v8_inspector::ValueMirror"* %166, null
  br i1 %167, label %173, label %168

168:                                              ; preds = %164
  %169 = bitcast %"class.v8_inspector::ValueMirror"* %166 to void (%"class.v8_inspector::ValueMirror"*)***
  %170 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %169, align 8
  %171 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %170, i64 1
  %172 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %171, align 8
  tail call void %172(%"class.v8_inspector::ValueMirror"* nonnull %166) #15
  br label %173

173:                                              ; preds = %168, %164
  %174 = getelementptr inbounds %"struct.v8_inspector::PropertyMirror", %"struct.v8_inspector::PropertyMirror"* %136, i64 -1, i32 6, i32 0, i32 0, i32 0
  %175 = load %"class.v8_inspector::ValueMirror"*, %"class.v8_inspector::ValueMirror"** %174, align 8
  store %"class.v8_inspector::ValueMirror"* null, %"class.v8_inspector::ValueMirror"** %174, align 8
  %176 = icmp eq %"class.v8_inspector::ValueMirror"* %175, null
  br i1 %176, label %182, label %177

177:                                              ; preds = %173
  %178 = bitcast %"class.v8_inspector::ValueMirror"* %175 to void (%"class.v8_inspector::ValueMirror"*)***
  %179 = load void (%"class.v8_inspector::ValueMirror"*)**, void (%"class.v8_inspector::ValueMirror"*)*** %178, align 8
  %180 = getelementptr inbounds void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %179, i64 1
  %181 = load void (%"class.v8_inspector::ValueMirror"*)*, void (%"class.v8_inspector::ValueMirror"*)** %180, align 8
  tail call void %181(%"class.v8_inspector::ValueMirror"* nonnull %175) #15
  br label %182

182:                                              ; preds = %177, %173
  %183 = bitcast %"struct.v8_inspector::PropertyMirror"* %137 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %184 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %183, i64 0, i32 1, i32 1
  %185 = load i8, i8* %184, align 1
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %190

187:                                              ; preds = %182
  %188 = bitcast %"struct.v8_inspector::PropertyMirror"* %137 to i8**
  %189 = load i8*, i8** %188, align 8
  tail call void @_ZdlPv(i8* %189) #16
  br label %190

190:                                              ; preds = %187, %182
  %191 = icmp eq %"struct.v8_inspector::PropertyMirror"* %137, %133
  br i1 %191, label %192, label %135

192:                                              ; preds = %190, %128
  %193 = icmp eq i64 %131, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %192
  %195 = inttoptr i64 %131 to i8*
  tail call void @_ZdlPv(i8* %195) #16
  br label %196

196:                                              ; preds = %192, %194
  ret void
}

declare %"class.v8::Array"* @_ZN2v86Object14PreviewEntriesEPb(%"class.v8::Object"*, i8*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime12EntryPreviewENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.440"*, %"class.std::__1::unique_ptr.442"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.442"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.440"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.440"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.442"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.442"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.442"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.442"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.442"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.v8_inspector::protocol::Runtime::EntryPreview"* null, %"class.v8_inspector::protocol::Runtime::EntryPreview"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.442"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.442"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.440", %"class.std::__1::vector.440"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.442"*, %"class.std::__1::unique_ptr.442"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.442"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.442"*, %"class.std::__1::unique_ptr.442"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.442"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.v8_inspector::protocol::Runtime::EntryPreview"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.442"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.442"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.442"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.v8_inspector::protocol::Runtime::EntryPreview"* null, %"class.v8_inspector::protocol::Runtime::EntryPreview"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.442"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !645

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.442"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.442"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.442"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.442"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.442"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.442"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.v8_inspector::protocol::Runtime::EntryPreview"* null, %"class.v8_inspector::protocol::Runtime::EntryPreview"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.442"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.442"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.v8_inspector::protocol::Runtime::EntryPreview"* null, %"class.v8_inspector::protocol::Runtime::EntryPreview"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.442"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.442"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.v8_inspector::protocol::Runtime::EntryPreview"* null, %"class.v8_inspector::protocol::Runtime::EntryPreview"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.442"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.442"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.v8_inspector::protocol::Runtime::EntryPreview"* null, %"class.v8_inspector::protocol::Runtime::EntryPreview"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.442"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.442"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.v8_inspector::protocol::Runtime::EntryPreview"* null, %"class.v8_inspector::protocol::Runtime::EntryPreview"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.442"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.442"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.v8_inspector::protocol::Runtime::EntryPreview"* null, %"class.v8_inspector::protocol::Runtime::EntryPreview"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.442"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.442"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.v8_inspector::protocol::Runtime::EntryPreview"* null, %"class.v8_inspector::protocol::Runtime::EntryPreview"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.442"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.442"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.v8_inspector::protocol::Runtime::EntryPreview"* null, %"class.v8_inspector::protocol::Runtime::EntryPreview"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.442"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.442"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.442"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.442"*, %"class.std::__1::unique_ptr.442"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.442"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.442"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.442"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.442"*
  %138 = icmp eq %"class.std::__1::unique_ptr.442"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.442"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.442"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.v8_inspector::protocol::Runtime::EntryPreview"*, %"class.v8_inspector::protocol::Runtime::EntryPreview"** %142, align 8
  store %"class.v8_inspector::protocol::Runtime::EntryPreview"* null, %"class.v8_inspector::protocol::Runtime::EntryPreview"** %142, align 8
  %144 = icmp eq %"class.v8_inspector::protocol::Runtime::EntryPreview"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.v8_inspector::protocol::Runtime::EntryPreview"* %143 to void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)***
  %147 = load void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)** %147, i64 2
  %149 = load void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::EntryPreview"*)** %148, align 8
  tail call void %149(%"class.v8_inspector::protocol::Runtime::EntryPreview"* nonnull %143) #15
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.442"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #16
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol7Runtime13ObjectPreview14setDescriptionERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  %10 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 24, i1 false) #15
  br label %186

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 11
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = bitcast %"class.v8_inspector::String16"* %3 to i16*
  %19 = trunc i64 %15 to i8
  %20 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %20, i64 0, i32 1, i32 1
  store i8 %19, i8* %21, align 1
  br label %39

22:                                               ; preds = %11
  %23 = icmp ugt i64 %15, 9223372036854775791
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.v8_inspector::String16"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #14
  unreachable

26:                                               ; preds = %22
  %27 = add nuw nsw i64 %15, 8
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #16
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  %37 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %17
  %40 = phi i16* [ %18, %17 ], [ %34, %31 ]
  %41 = add nuw nsw i64 %15, 1
  %42 = add i64 %15, 1
  %43 = icmp ult i64 %42, 16
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  %45 = add i64 %15, 1
  %46 = getelementptr i16, i16* %40, i64 %45
  %47 = getelementptr i16, i16* %13, i64 %45
  %48 = icmp ult i16* %40, %47
  %49 = icmp ult i16* %13, %46
  %50 = and i1 %48, %49
  br i1 %50, label %133, label %51

51:                                               ; preds = %44
  %52 = and i64 %42, -16
  %53 = getelementptr i16, i16* %40, i64 %52
  %54 = sub i64 %41, %52
  %55 = getelementptr i16, i16* %13, i64 %52
  %56 = add i64 %52, -16
  %57 = lshr exact i64 %56, 4
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 48
  br i1 %60, label %112, label %61

61:                                               ; preds = %51
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr i16, i16* %40, i64 %64
  %67 = getelementptr i16, i16* %13, i64 %64
  %68 = bitcast i16* %67 to <8 x i16>*
  %69 = load <8 x i16>, <8 x i16>* %68, align 2, !alias.scope !646
  %70 = getelementptr i16, i16* %67, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !646
  %73 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %73, align 2, !alias.scope !649, !noalias !646
  %74 = getelementptr i16, i16* %66, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %75, align 2, !alias.scope !649, !noalias !646
  %76 = or i64 %64, 16
  %77 = getelementptr i16, i16* %40, i64 %76
  %78 = getelementptr i16, i16* %13, i64 %76
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !646
  %81 = getelementptr i16, i16* %78, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !646
  %84 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !649, !noalias !646
  %85 = getelementptr i16, i16* %77, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !649, !noalias !646
  %87 = or i64 %64, 32
  %88 = getelementptr i16, i16* %40, i64 %87
  %89 = getelementptr i16, i16* %13, i64 %87
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !646
  %92 = getelementptr i16, i16* %89, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !646
  %95 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !649, !noalias !646
  %96 = getelementptr i16, i16* %88, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !649, !noalias !646
  %98 = or i64 %64, 48
  %99 = getelementptr i16, i16* %40, i64 %98
  %100 = getelementptr i16, i16* %13, i64 %98
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !646
  %103 = getelementptr i16, i16* %100, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !646
  %106 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !649, !noalias !646
  %107 = getelementptr i16, i16* %99, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !649, !noalias !646
  %109 = add i64 %64, 64
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !651

112:                                              ; preds = %63, %51
  %113 = phi i64 [ 0, %51 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr i16, i16* %40, i64 %116
  %119 = getelementptr i16, i16* %13, i64 %116
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !646
  %122 = getelementptr i16, i16* %119, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !646
  %125 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !649, !noalias !646
  %126 = getelementptr i16, i16* %118, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !649, !noalias !646
  %128 = add i64 %116, 16
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !652

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %42, %52
  br i1 %132, label %186, label %133

133:                                              ; preds = %131, %44, %39
  %134 = phi i16* [ %40, %44 ], [ %40, %39 ], [ %53, %131 ]
  %135 = phi i64 [ %41, %44 ], [ %41, %39 ], [ %54, %131 ]
  %136 = phi i16* [ %13, %44 ], [ %13, %39 ], [ %55, %131 ]
  %137 = add i64 %135, -1
  %138 = and i64 %135, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133, %140
  %141 = phi i16* [ %147, %140 ], [ %134, %133 ]
  %142 = phi i64 [ %146, %140 ], [ %135, %133 ]
  %143 = phi i16* [ %148, %140 ], [ %136, %133 ]
  %144 = phi i64 [ %149, %140 ], [ %138, %133 ]
  %145 = load i16, i16* %143, align 2
  store i16 %145, i16* %141, align 2
  %146 = add i64 %142, -1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = getelementptr inbounds i16, i16* %143, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !653

151:                                              ; preds = %140, %133
  %152 = phi i16* [ %134, %133 ], [ %147, %140 ]
  %153 = phi i64 [ %135, %133 ], [ %146, %140 ]
  %154 = phi i16* [ %136, %133 ], [ %148, %140 ]
  %155 = icmp ult i64 %137, 7
  br i1 %155, label %186, label %156

156:                                              ; preds = %151, %156
  %157 = phi i16* [ %183, %156 ], [ %152, %151 ]
  %158 = phi i64 [ %182, %156 ], [ %153, %151 ]
  %159 = phi i16* [ %184, %156 ], [ %154, %151 ]
  %160 = load i16, i16* %159, align 2
  store i16 %160, i16* %157, align 2
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %159, i64 1
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = getelementptr inbounds i16, i16* %159, i64 2
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = getelementptr inbounds i16, i16* %159, i64 3
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = getelementptr inbounds i16, i16* %159, i64 4
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = getelementptr inbounds i16, i16* %159, i64 5
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = getelementptr inbounds i16, i16* %159, i64 6
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = getelementptr inbounds i16, i16* %159, i64 7
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = add i64 %158, -8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = getelementptr inbounds i16, i16* %159, i64 8
  %185 = icmp eq i64 %182, 0
  br i1 %185, label %186, label %156, !llvm.loop !654

186:                                              ; preds = %151, %156, %131, %8
  %187 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %188 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %189 = load i64, i64* %188, align 8
  store i64 %189, i64* %187, align 8
  %190 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ObjectPreview", %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %0, i64 0, i32 3, i32 1, i32 0
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0
  %192 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %190, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %191) #15
  %193 = load i64, i64* %187, align 8
  %194 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ObjectPreview", %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %0, i64 0, i32 3, i32 1, i32 1
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ObjectPreview", %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %0, i64 0, i32 3, i32 0
  store i8 1, i8* %195, align 8
  %196 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %196, i64 0, i32 1, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %186
  %201 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #16
  br label %203

203:                                              ; preds = %186, %200
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12v8_inspector12_GLOBAL__N_120PrimitiveValueMirrorD2Ev(%"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror", %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_120PrimitiveValueMirrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror", %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %0, i64 0, i32 3
  %4 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror", %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %0, i64 0, i32 2
  %13 = bitcast %"class.v8_inspector::String16"* %12 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = bitcast %"class.v8_inspector::String16"* %12 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #16
  br label %20

20:                                               ; preds = %11, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12v8_inspector12_GLOBAL__N_120PrimitiveValueMirrorD0Ev(%"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"*) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror", %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_120PrimitiveValueMirrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror", %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %0, i64 0, i32 3
  %4 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror", %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %0, i64 0, i32 2
  %13 = bitcast %"class.v8_inspector::String16"* %12 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = bitcast %"class.v8_inspector::String16"* %12 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #16
  br label %20

20:                                               ; preds = %11, %17
  %21 = bitcast %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_120PrimitiveValueMirror17buildRemoteObjectEN2v85LocalINS2_7ContextEEENS_8WrapModeEPNSt3__110unique_ptrINS_8protocol7Runtime12RemoteObjectENS7_14default_deleteISB_EEEE(%"class.v8_crdtp::DispatchResponse"* noalias sret, %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"*, %"class.v8::Context"*, i32, %"class.std::__1::unique_ptr.515"* nocapture) unnamed_addr #2 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.522", align 8
  %7 = alloca %"class.v8_crdtp::DispatchResponse", align 8
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = bitcast %"class.std::__1::unique_ptr.522"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = bitcast %"class.std::__1::unique_ptr.522"* %6 to i64*
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror", %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %1, i64 0, i32 1, i32 0
  %12 = load %"class.v8::Value"*, %"class.v8::Value"** %11, align 8
  %13 = bitcast %"class.v8::Value"* %12 to i64*
  %14 = load i64, i64* %13, align 8, !noalias !655
  %15 = and i64 %14, 3
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %17, label %35

17:                                               ; preds = %5
  %18 = add i64 %14, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = and i64 %14, -4294967296
  %22 = zext i32 %20 to i64
  %23 = or i64 %21, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load i16, i16* %25, align 2
  %27 = icmp eq i16 %26, 67
  br i1 %27, label %28, label %35

28:                                               ; preds = %17
  %29 = add i64 %14, 23
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, -2
  %33 = icmp eq i32 %32, 10
  br i1 %33, label %34, label %35

34:                                               ; preds = %28
  call void @_ZN8v8_crdtp16DispatchResponse7SuccessEv(%"class.v8_crdtp::DispatchResponse"* nonnull sret %7) #15
  br label %36

35:                                               ; preds = %28, %17, %5
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_115toProtocolValueEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEEiPNSt3__110unique_ptrINS_8protocol5ValueENS7_14default_deleteISA_EEEE(%"class.v8_crdtp::DispatchResponse"* noalias nonnull %7, %"class.v8::Context"* %2, %"class.v8::Value"* %12, i32 1000, %"class.std::__1::unique_ptr.522"* nonnull %6) #15
  br label %36

36:                                               ; preds = %34, %35
  %37 = getelementptr inbounds %"class.v8_crdtp::DispatchResponse", %"class.v8_crdtp::DispatchResponse"* %7, i64 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string.541"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.std::__1::basic_string.541", %"class.std::__1::basic_string.541"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #16
  br label %45

45:                                               ; preds = %36, %42
  %46 = call i8* @_Znwm(i64 272) #16
  %47 = bitcast i8* %46 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %47, align 8
  %48 = getelementptr inbounds i8, i8* %46, i64 16
  %49 = getelementptr inbounds i8, i8* %46, i64 56
  %50 = getelementptr inbounds i8, i8* %46, i64 96
  %51 = getelementptr inbounds i8, i8* %46, i64 144
  %52 = getelementptr inbounds i8, i8* %46, i64 184
  %53 = getelementptr inbounds i8, i8* %46, i64 224
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 41, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 48, i1 false) #15
  %54 = bitcast i8* %48 to %"class.std::__1::basic_string"*
  %55 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror", %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %1, i64 0, i32 2, i32 0
  %56 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %54, %"class.std::__1::basic_string"* dereferenceable(24) %55) #15
  %57 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror", %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %1, i64 0, i32 2, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds i8, i8* %46, i64 40
  %60 = bitcast i8* %59 to i64*
  store i64 %58, i64* %60, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.522"* %6, i64 0, i32 0, i32 0, i32 0
  %62 = load i64, i64* %10, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %61, align 8
  %63 = getelementptr inbounds i8, i8* %46, i64 128
  %64 = bitcast i8* %63 to %"class.v8_inspector::protocol::Value"**
  %65 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %64, align 8
  %66 = bitcast i8* %63 to i64*
  store i64 %62, i64* %66, align 8
  %67 = icmp eq %"class.v8_inspector::protocol::Value"* %65, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %45
  %69 = bitcast %"class.v8_inspector::protocol::Value"* %65 to void (%"class.v8_inspector::protocol::Value"*)***
  %70 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %70, i64 2
  %72 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %71, align 8
  call void %72(%"class.v8_inspector::protocol::Value"* nonnull %65) #15
  br label %73

73:                                               ; preds = %45, %68
  %74 = ptrtoint i8* %46 to i64
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.515", %"class.std::__1::unique_ptr.515"* %4, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %75, align 8
  %77 = bitcast %"class.std::__1::unique_ptr.515"* %4 to i64*
  store i64 %74, i64* %77, align 8
  %78 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %76, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %73
  %80 = bitcast %"class.v8_inspector::protocol::Runtime::RemoteObject"* %76 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %81 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %81, i64 2
  %83 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %82, align 8
  call void %83(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %76) #15
  br label %84

84:                                               ; preds = %73, %79
  %85 = bitcast %"class.v8::Value"** %11 to i64**
  %86 = load i64*, i64** %85, align 8
  %87 = load i64, i64* %86, align 8
  %88 = and i64 %87, 3
  %89 = icmp eq i64 %88, 1
  br i1 %89, label %90, label %119

90:                                               ; preds = %84
  %91 = add i64 %87, -1
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = and i64 %87, -4294967296
  %95 = zext i32 %93 to i64
  %96 = or i64 %94, %95
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i16*
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %99, 67
  br i1 %100, label %101, label %119

101:                                              ; preds = %90
  %102 = add i64 %87, 23
  %103 = inttoptr i64 %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = and i32 %104, -2
  %106 = icmp eq i32 %105, 6
  br i1 %106, label %107, label %119

107:                                              ; preds = %101
  %108 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %75, align 8
  %109 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109) #15
  %110 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum4NullE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %8, i8* %110) #15
  call void @_ZN12v8_inspector8protocol7Runtime12RemoteObject10setSubtypeERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::RemoteObject"* %108, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %8)
  %111 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %111, i64 0, i32 1, i32 1
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %107
  %116 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %117 = load i8*, i8** %116, align 8
  call void @_ZdlPv(i8* %117) #16
  br label %118

118:                                              ; preds = %107, %115
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #15
  br label %119

119:                                              ; preds = %90, %84, %101, %118
  call void @_ZN8v8_crdtp16DispatchResponse7SuccessEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_120PrimitiveValueMirror20buildPropertyPreviewEN2v85LocalINS2_7ContextEEERKNS_8String16EPNSt3__110unique_ptrINS_8protocol7Runtime15PropertyPreviewENS9_14default_deleteISD_EEEE(%"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"*, %"class.v8::Context"*, %"class.v8_inspector::String16"* dereferenceable(32), %"class.std::__1::unique_ptr.414"* nocapture) unnamed_addr #2 align 2 {
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = tail call i8* @_Znwm(i64 160) #16
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime15PropertyPreviewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = getelementptr inbounds i8, i8* %8, i64 80
  %12 = getelementptr inbounds i8, i8* %8, i64 128
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 65, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 41, i1 false) #15
  %13 = bitcast i8* %8 to %"class.v8_inspector::protocol::Runtime::PropertyPreview"*
  %14 = bitcast i8* %10 to %"class.std::__1::basic_string"*
  %15 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0
  %16 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %14, %"class.std::__1::basic_string"* dereferenceable(24) %15) #15
  %17 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %8, i64 32
  %20 = bitcast i8* %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #15
  %22 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #15
  %23 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror", %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %0, i64 0, i32 1, i32 0
  %24 = load %"class.v8::Value"*, %"class.v8::Value"** %23, align 8
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_127descriptionForPrimitiveTypeEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8_inspector::String16"* noalias nonnull %6, %"class.v8::Context"* %1, %"class.v8::Value"* %24)
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_116abbreviateStringERKNS_8String16ENS0_14AbbreviateModeE(%"class.v8_inspector::String16"* noalias nonnull %5, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %6, i32 0)
  call void @_ZN12v8_inspector8protocol7Runtime15PropertyPreview8setValueERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %13, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %5) #15
  %25 = getelementptr inbounds i8, i8* %8, i64 40
  %26 = bitcast i8* %25 to %"class.std::__1::basic_string"*
  %27 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror", %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %0, i64 0, i32 2, i32 0
  %28 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %26, %"class.std::__1::basic_string"* dereferenceable(24) %27) #15
  %29 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror", %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %0, i64 0, i32 2, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds i8, i8* %8, i64 64
  %32 = bitcast i8* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = ptrtoint i8* %8 to i64
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %3, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %34, align 8
  %36 = bitcast %"class.std::__1::unique_ptr.414"* %3 to i64*
  store i64 %33, i64* %36, align 8
  %37 = icmp eq %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %35, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %4
  %39 = bitcast %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %35 to void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)***
  %40 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %40, i64 2
  %42 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %41, align 8
  call void %42(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %35) #15
  br label %43

43:                                               ; preds = %38, %4
  %44 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #16
  br label %51

51:                                               ; preds = %43, %48
  %52 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %52, i64 0, i32 1, i32 1
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %58 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %58) #16
  br label %59

59:                                               ; preds = %56, %51
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #15
  %60 = bitcast %"class.v8::Value"** %23 to i64**
  %61 = load i64*, i64** %60, align 8
  %62 = load i64, i64* %61, align 8
  %63 = and i64 %62, 3
  %64 = icmp eq i64 %63, 1
  br i1 %64, label %65, label %94

65:                                               ; preds = %59
  %66 = add i64 %62, -1
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = and i64 %62, -4294967296
  %70 = zext i32 %68 to i64
  %71 = or i64 %69, %70
  %72 = add i64 %71, 7
  %73 = inttoptr i64 %72 to i16*
  %74 = load i16, i16* %73, align 2
  %75 = icmp eq i16 %74, 67
  br i1 %75, label %76, label %94

76:                                               ; preds = %65
  %77 = add i64 %62, 23
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = and i32 %79, -2
  %81 = icmp eq i32 %80, 6
  br i1 %81, label %82, label %94

82:                                               ; preds = %76
  %83 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %34, align 8
  %84 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %84) #15
  %85 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum4NullE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %7, i8* %85) #15
  call void @_ZN12v8_inspector8protocol7Runtime15PropertyPreview10setSubtypeERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* %83, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %7)
  %86 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %86, i64 0, i32 1, i32 1
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %82
  %91 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %92 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %92) #16
  br label %93

93:                                               ; preds = %82, %90
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %84) #15
  br label %94

94:                                               ; preds = %65, %59, %93, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_120PrimitiveValueMirror17buildEntryPreviewEN2v85LocalINS2_7ContextEEEPiS6_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS7_14default_deleteISB_EEEE(%"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"*, %"class.v8::Context"*, i32* nocapture readnone, i32* nocapture readnone, %"class.std::__1::unique_ptr.417"* nocapture) unnamed_addr #2 align 2 {
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = tail call i8* @_Znwm(i64 144) #16
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime13ObjectPreviewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = getelementptr inbounds i8, i8* %8, i64 48
  %12 = getelementptr inbounds i8, i8* %8, i64 88
  %13 = getelementptr inbounds i8, i8* %8, i64 128
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #15
  %14 = bitcast i8* %8 to %"class.v8_inspector::protocol::Runtime::ObjectPreview"*
  %15 = bitcast i8* %10 to %"class.std::__1::basic_string"*
  %16 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror", %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %0, i64 0, i32 2, i32 0
  %17 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %15, %"class.std::__1::basic_string"* dereferenceable(24) %16) #15
  %18 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror", %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %0, i64 0, i32 2, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %8, i64 32
  %21 = bitcast i8* %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #15
  %23 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror", %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %0, i64 0, i32 1, i32 0
  %24 = load %"class.v8::Value"*, %"class.v8::Value"** %23, align 8
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_127descriptionForPrimitiveTypeEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8_inspector::String16"* noalias nonnull %6, %"class.v8::Context"* %1, %"class.v8::Value"* %24)
  call void @_ZN12v8_inspector8protocol7Runtime13ObjectPreview14setDescriptionERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::ObjectPreview"* nonnull %14, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %6) #15
  %25 = getelementptr inbounds i8, i8* %8, i64 120
  store i8 0, i8* %25, align 8
  %26 = call i8* @_Znwm(i64 24) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #15
  %27 = ptrtoint i8* %26 to i64
  %28 = bitcast i8* %13 to %"class.std::__1::vector.426"**
  %29 = load %"class.std::__1::vector.426"*, %"class.std::__1::vector.426"** %28, align 8
  %30 = bitcast i8* %13 to i64*
  store i64 %27, i64* %30, align 8
  %31 = icmp eq %"class.std::__1::vector.426"* %29, null
  br i1 %31, label %61, label %32

32:                                               ; preds = %5
  %33 = getelementptr inbounds %"class.std::__1::vector.426", %"class.std::__1::vector.426"* %29, i64 0, i32 0, i32 0
  %34 = load %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"** %33, align 8
  %35 = icmp eq %"class.std::__1::unique_ptr.414"* %34, null
  br i1 %35, label %59, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.std::__1::unique_ptr.414"* %34 to i8*
  %38 = getelementptr inbounds %"class.std::__1::vector.426", %"class.std::__1::vector.426"* %29, i64 0, i32 0, i32 1
  %39 = load %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"** %38, align 8
  %40 = icmp eq %"class.std::__1::unique_ptr.414"* %39, %34
  br i1 %40, label %57, label %41

41:                                               ; preds = %36, %52
  %42 = phi %"class.std::__1::unique_ptr.414"* [ %43, %52 ], [ %39, %36 ]
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %42, i64 -1
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %44, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %44, align 8
  %46 = icmp eq %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %41
  %48 = bitcast %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %45 to void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)***
  %49 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %49, i64 2
  %51 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %50, align 8
  call void %51(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %45) #15
  br label %52

52:                                               ; preds = %47, %41
  %53 = icmp eq %"class.std::__1::unique_ptr.414"* %43, %34
  br i1 %53, label %54, label %41

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector.426"* %29 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %36
  %58 = phi i8* [ %56, %54 ], [ %37, %36 ]
  store %"class.std::__1::unique_ptr.414"* %34, %"class.std::__1::unique_ptr.414"** %38, align 8
  call void @_ZdlPv(i8* %58) #16
  br label %59

59:                                               ; preds = %57, %32
  %60 = bitcast %"class.std::__1::vector.426"* %29 to i8*
  call void @_ZdlPv(i8* %60) #16
  br label %61

61:                                               ; preds = %5, %59
  %62 = ptrtoint i8* %8 to i64
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.417"* %4, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %63, align 8
  %65 = bitcast %"class.std::__1::unique_ptr.417"* %4 to i64*
  store i64 %62, i64* %65, align 8
  %66 = icmp eq %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %64, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %61
  %68 = bitcast %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %64 to void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)***
  %69 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %69, i64 2
  %71 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %70, align 8
  call void %71(%"class.v8_inspector::protocol::Runtime::ObjectPreview"* nonnull %64) #15
  br label %72

72:                                               ; preds = %67, %61
  %73 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %73, i64 0, i32 1, i32 1
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %72
  %78 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %79 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %79) #16
  br label %80

80:                                               ; preds = %77, %72
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #15
  %81 = bitcast %"class.v8::Value"** %23 to i64**
  %82 = load i64*, i64** %81, align 8
  %83 = load i64, i64* %82, align 8
  %84 = and i64 %83, 3
  %85 = icmp eq i64 %84, 1
  br i1 %85, label %86, label %115

86:                                               ; preds = %80
  %87 = add i64 %83, -1
  %88 = inttoptr i64 %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = and i64 %83, -4294967296
  %91 = zext i32 %89 to i64
  %92 = or i64 %90, %91
  %93 = add i64 %92, 7
  %94 = inttoptr i64 %93 to i16*
  %95 = load i16, i16* %94, align 2
  %96 = icmp eq i16 %95, 67
  br i1 %96, label %97, label %115

97:                                               ; preds = %86
  %98 = add i64 %83, 23
  %99 = inttoptr i64 %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = and i32 %100, -2
  %102 = icmp eq i32 %101, 6
  br i1 %102, label %103, label %115

103:                                              ; preds = %97
  %104 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %63, align 8
  %105 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %105) #15
  %106 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum4NullE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %7, i8* %106) #15
  call void @_ZN12v8_inspector8protocol7Runtime13ObjectPreview10setSubtypeERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::ObjectPreview"* %104, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %7)
  %107 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %107, i64 0, i32 1, i32 1
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %103
  %112 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %113 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %113) #16
  br label %114

114:                                              ; preds = %103, %111
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %105) #15
  br label %115

115:                                              ; preds = %86, %80, %114, %97
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %"class.v8::Value"* @_ZNK12v8_inspector12_GLOBAL__N_120PrimitiveValueMirror7v8ValueEv(%"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* nocapture readonly) unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror", %"class.v8_inspector::(anonymous namespace)::PrimitiveValueMirror"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  ret %"class.v8::Value"* %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12v8_inspector12_GLOBAL__N_127descriptionForPrimitiveTypeEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.v8_inspector::String16"* noalias, %"class.v8::Context"*, %"class.v8::Value"*) unnamed_addr #2 {
  %4 = bitcast %"class.v8::Value"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 3
  %7 = icmp eq i64 %6, 1
  br i1 %7, label %8, label %35

8:                                                ; preds = %3
  %9 = add i64 %5, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i64 %5, -4294967296
  %13 = zext i32 %11 to i64
  %14 = or i64 %12, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load i16, i16* %16, align 2
  %18 = icmp eq i16 %17, 67
  br i1 %18, label %19, label %35

19:                                               ; preds = %8
  %20 = add i64 %5, 23
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, -2
  %24 = icmp eq i32 %23, 10
  br i1 %24, label %25, label %27

25:                                               ; preds = %19
  %26 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum9UndefinedE, align 8
  tail call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* %0, i8* %26) #15
  br label %60

27:                                               ; preds = %19
  %28 = add i64 %5, 23
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, -2
  %32 = icmp eq i32 %31, 6
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject11SubtypeEnum4NullE, align 8
  tail call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* %0, i8* %34) #15
  br label %60

35:                                               ; preds = %8, %3, %27
  %36 = tail call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %2) #15
  br i1 %36, label %37, label %41

37:                                               ; preds = %35
  %38 = bitcast %"class.v8::Value"* %2 to %"class.v8::Boolean"*
  %39 = tail call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %38) #15
  %40 = select i1 %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i64 0, i64 0)
  tail call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* %0, i8* %40) #15
  br label %60

41:                                               ; preds = %35
  %42 = load i64, i64* %4, align 8
  %43 = and i64 %42, 3
  %44 = icmp eq i64 %43, 1
  br i1 %44, label %45, label %59

45:                                               ; preds = %41
  %46 = add i64 %42, -1
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = and i64 %42, -4294967296
  %50 = zext i32 %48 to i64
  %51 = or i64 %49, %50
  %52 = add i64 %51, 7
  %53 = inttoptr i64 %52 to i16*
  %54 = load i16, i16* %53, align 2
  %55 = icmp ult i16 %54, 64
  br i1 %55, label %56, label %59

56:                                               ; preds = %45
  %57 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %1) #15
  %58 = bitcast %"class.v8::Value"* %2 to %"class.v8::String"*
  tail call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* sret %0, %"class.v8::Isolate"* %57, %"class.v8::String"* %58) #15
  br label %60

59:                                               ; preds = %41, %45
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0)) #14
  unreachable

60:                                               ; preds = %56, %37, %33, %25
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12v8_inspector12_GLOBAL__N_112NumberMirrorD0Ev(%"class.v8_inspector::(anonymous namespace)::NumberMirror"*) unnamed_addr #7 align 2 {
  %2 = bitcast %"class.v8_inspector::(anonymous namespace)::NumberMirror"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_112NumberMirror17buildRemoteObjectEN2v85LocalINS2_7ContextEEENS_8WrapModeEPNSt3__110unique_ptrINS_8protocol7Runtime12RemoteObjectENS7_14default_deleteISB_EEEE(%"class.v8_crdtp::DispatchResponse"* noalias sret, %"class.v8_inspector::(anonymous namespace)::NumberMirror"* nocapture readonly, %"class.v8::Context"* nocapture readnone, i32, %"class.std::__1::unique_ptr.515"* nocapture) unnamed_addr #2 align 2 {
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::NumberMirror", %"class.v8_inspector::(anonymous namespace)::NumberMirror"* %1, i64 0, i32 1, i32 0
  %10 = load %"class.v8::Number"*, %"class.v8::Number"** %9, align 8, !noalias !658
  %11 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %10) #15, !noalias !658
  %12 = fcmp uno double %11, 0.000000e+00
  br i1 %12, label %13, label %14

13:                                               ; preds = %5
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58, i64 0, i64 0)) #15
  br label %26

14:                                               ; preds = %5
  %15 = fcmp oeq double %11, 0.000000e+00
  %16 = bitcast double %11 to i64
  %17 = icmp slt i64 %16, 0
  %18 = and i1 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i64 0, i64 0)) #15
  br label %26

20:                                               ; preds = %14
  %21 = tail call double @llvm.fabs.f64(double %11) #17
  %22 = fcmp oeq double %21, 0x7FF0000000000000
  br i1 %22, label %23, label %25

23:                                               ; preds = %20
  %24 = select i1 %17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i64 0, i64 0)
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %6, i8* %24) #15
  br label %26

25:                                               ; preds = %20
  call void @_ZN12v8_inspector8String1610fromDoubleEd(%"class.v8_inspector::String16"* nonnull sret %6, double %11) #15
  br label %26

26:                                               ; preds = %13, %19, %23, %25
  %27 = phi i8 [ 1, %13 ], [ 1, %19 ], [ 1, %23 ], [ 0, %25 ]
  %28 = call i8* @_Znwm(i64 272) #16
  %29 = bitcast i8* %28 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %29, align 8
  %30 = getelementptr inbounds i8, i8* %28, i64 16
  %31 = getelementptr inbounds i8, i8* %28, i64 56
  %32 = getelementptr inbounds i8, i8* %28, i64 96
  %33 = getelementptr inbounds i8, i8* %28, i64 144
  %34 = getelementptr inbounds i8, i8* %28, i64 184
  %35 = getelementptr inbounds i8, i8* %28, i64 224
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 41, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 48, i1 false) #15
  %36 = bitcast i8* %28 to %"class.v8_inspector::protocol::Runtime::RemoteObject"*
  %37 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #15
  %38 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6NumberE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %7, i8* %38) #15
  %39 = bitcast i8* %30 to %"class.std::__1::basic_string"*
  %40 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0
  %41 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %39, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %40) #15
  %42 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds i8, i8* %28, i64 40
  %45 = bitcast i8* %44 to i64*
  store i64 %43, i64* %45, align 8
  call void @_ZN12v8_inspector8protocol7Runtime12RemoteObject14setDescriptionERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %36, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %6) #15
  %46 = ptrtoint i8* %28 to i64
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.515", %"class.std::__1::unique_ptr.515"* %4, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %47, align 8
  %49 = bitcast %"class.std::__1::unique_ptr.515"* %4 to i64*
  store i64 %46, i64* %49, align 8
  %50 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %48, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %26
  %52 = bitcast %"class.v8_inspector::protocol::Runtime::RemoteObject"* %48 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %53 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %53, i64 2
  %55 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %54, align 8
  call void %55(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %48) #15
  br label %56

56:                                               ; preds = %51, %26
  %57 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %57, i64 0, i32 1, i32 1
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %56
  %62 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #16
  br label %64

64:                                               ; preds = %61, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #15
  %65 = icmp eq i8 %27, 0
  %66 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %47, align 8
  br i1 %65, label %68, label %67

67:                                               ; preds = %64
  call void @_ZN12v8_inspector8protocol7Runtime12RemoteObject22setUnserializableValueERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::RemoteObject"* %66, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %6)
  br label %88

68:                                               ; preds = %64
  %69 = load %"class.v8::Number"*, %"class.v8::Number"** %9, align 8
  %70 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %69) #15
  %71 = call i8* @_Znwm(i64 24) #16
  %72 = bitcast i8* %71 to i32 (...)***
  %73 = getelementptr inbounds i8, i8* %71, i64 8
  %74 = bitcast i8* %73 to i32*
  store i32 3, i32* %74, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %72, align 8
  %75 = getelementptr inbounds i8, i8* %71, i64 16
  %76 = bitcast i8* %75 to double*
  store double %70, double* %76, align 8
  %77 = ptrtoint i8* %71 to i64
  %78 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::RemoteObject", %"class.v8_inspector::protocol::Runtime::RemoteObject"* %66, i64 0, i32 5
  %79 = getelementptr inbounds %"class.v8_crdtp::detail::PtrMaybe.521", %"class.v8_crdtp::detail::PtrMaybe.521"* %78, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %79, align 8
  %81 = bitcast %"class.v8_crdtp::detail::PtrMaybe.521"* %78 to i64*
  store i64 %77, i64* %81, align 8
  %82 = icmp eq %"class.v8_inspector::protocol::Value"* %80, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %68
  %84 = bitcast %"class.v8_inspector::protocol::Value"* %80 to void (%"class.v8_inspector::protocol::Value"*)***
  %85 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %85, i64 2
  %87 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %86, align 8
  call void %87(%"class.v8_inspector::protocol::Value"* nonnull %80) #15
  br label %88

88:                                               ; preds = %68, %83, %67
  call void @_ZN8v8_crdtp16DispatchResponse7SuccessEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  %89 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %89, i64 0, i32 1, i32 1
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #16
  br label %96

96:                                               ; preds = %88, %93
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_112NumberMirror20buildPropertyPreviewEN2v85LocalINS2_7ContextEEERKNS_8String16EPNSt3__110unique_ptrINS_8protocol7Runtime15PropertyPreviewENS9_14default_deleteISD_EEEE(%"class.v8_inspector::(anonymous namespace)::NumberMirror"* nocapture readonly, %"class.v8::Context"* nocapture readnone, %"class.v8_inspector::String16"* dereferenceable(32), %"class.std::__1::unique_ptr.414"* nocapture) unnamed_addr #2 align 2 {
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = tail call i8* @_Znwm(i64 160) #16
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime15PropertyPreviewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = getelementptr inbounds i8, i8* %7, i64 80
  %11 = getelementptr inbounds i8, i8* %7, i64 128
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 65, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 41, i1 false) #15
  %12 = bitcast i8* %7 to %"class.v8_inspector::protocol::Runtime::PropertyPreview"*
  %13 = bitcast i8* %9 to %"class.std::__1::basic_string"*
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0
  %15 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %13, %"class.std::__1::basic_string"* dereferenceable(24) %14) #15
  %16 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %7, i64 32
  %19 = bitcast i8* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #15
  %21 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6NumberE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %5, i8* %21) #15
  %22 = getelementptr inbounds i8, i8* %7, i64 40
  %23 = bitcast i8* %22 to %"class.std::__1::basic_string"*
  %24 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 0
  %25 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %23, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %24) #15
  %26 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %7, i64 64
  %29 = bitcast i8* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #15
  %31 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::NumberMirror", %"class.v8_inspector::(anonymous namespace)::NumberMirror"* %0, i64 0, i32 1, i32 0
  %32 = load %"class.v8::Number"*, %"class.v8::Number"** %31, align 8, !noalias !661
  %33 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %32) #15, !noalias !661
  %34 = fcmp uno double %33, 0.000000e+00
  br i1 %34, label %35, label %36

35:                                               ; preds = %4
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58, i64 0, i64 0)) #15
  br label %48

36:                                               ; preds = %4
  %37 = fcmp oeq double %33, 0.000000e+00
  %38 = bitcast double %33 to i64
  %39 = icmp slt i64 %38, 0
  %40 = and i1 %37, %39
  br i1 %40, label %41, label %42

41:                                               ; preds = %36
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i64 0, i64 0)) #15
  br label %48

42:                                               ; preds = %36
  %43 = call double @llvm.fabs.f64(double %33) #17
  %44 = fcmp oeq double %43, 0x7FF0000000000000
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  %46 = select i1 %39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i64 0, i64 0)
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %6, i8* %46) #15
  br label %48

47:                                               ; preds = %42
  call void @_ZN12v8_inspector8String1610fromDoubleEd(%"class.v8_inspector::String16"* nonnull sret %6, double %33) #15
  br label %48

48:                                               ; preds = %35, %41, %45, %47
  call void @_ZN12v8_inspector8protocol7Runtime15PropertyPreview8setValueERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %12, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %6) #15
  %49 = ptrtoint i8* %7 to i64
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %3, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %50, align 8
  %52 = bitcast %"class.std::__1::unique_ptr.414"* %3 to i64*
  store i64 %49, i64* %52, align 8
  %53 = icmp eq %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %51, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %48
  %55 = bitcast %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %51 to void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)***
  %56 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %56, i64 2
  %58 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %57, align 8
  call void %58(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %51) #15
  br label %59

59:                                               ; preds = %54, %48
  %60 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %60, i64 0, i32 1, i32 1
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %66 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %66) #16
  br label %67

67:                                               ; preds = %59, %64
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #15
  %68 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %68, i64 0, i32 1, i32 1
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %67
  %73 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #16
  br label %75

75:                                               ; preds = %72, %67
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_112NumberMirror17buildEntryPreviewEN2v85LocalINS2_7ContextEEEPiS6_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS7_14default_deleteISB_EEEE(%"class.v8_inspector::(anonymous namespace)::NumberMirror"* nocapture readonly, %"class.v8::Context"* nocapture readnone, i32* nocapture readnone, i32* nocapture readnone, %"class.std::__1::unique_ptr.417"* nocapture) unnamed_addr #2 align 2 {
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = tail call i8* @_Znwm(i64 144) #16
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime13ObjectPreviewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = getelementptr inbounds i8, i8* %8, i64 48
  %12 = getelementptr inbounds i8, i8* %8, i64 88
  %13 = getelementptr inbounds i8, i8* %8, i64 128
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #15
  %14 = bitcast i8* %8 to %"class.v8_inspector::protocol::Runtime::ObjectPreview"*
  %15 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #15
  %16 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6NumberE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %6, i8* %16) #15
  %17 = bitcast i8* %10 to %"class.std::__1::basic_string"*
  %18 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0
  %19 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %18) #15
  %20 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds i8, i8* %8, i64 32
  %23 = bitcast i8* %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #15
  %25 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::NumberMirror", %"class.v8_inspector::(anonymous namespace)::NumberMirror"* %0, i64 0, i32 1, i32 0
  %26 = load %"class.v8::Number"*, %"class.v8::Number"** %25, align 8, !noalias !664
  %27 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %26) #15, !noalias !664
  %28 = fcmp uno double %27, 0.000000e+00
  br i1 %28, label %29, label %30

29:                                               ; preds = %5
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58, i64 0, i64 0)) #15
  br label %42

30:                                               ; preds = %5
  %31 = fcmp oeq double %27, 0.000000e+00
  %32 = bitcast double %27 to i64
  %33 = icmp slt i64 %32, 0
  %34 = and i1 %31, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i64 0, i64 0)) #15
  br label %42

36:                                               ; preds = %30
  %37 = call double @llvm.fabs.f64(double %27) #17
  %38 = fcmp oeq double %37, 0x7FF0000000000000
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = select i1 %33, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i64 0, i64 0)
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %7, i8* %40) #15
  br label %42

41:                                               ; preds = %36
  call void @_ZN12v8_inspector8String1610fromDoubleEd(%"class.v8_inspector::String16"* nonnull sret %7, double %27) #15
  br label %42

42:                                               ; preds = %29, %35, %39, %41
  call void @_ZN12v8_inspector8protocol7Runtime13ObjectPreview14setDescriptionERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::ObjectPreview"* nonnull %14, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %7) #15
  %43 = getelementptr inbounds i8, i8* %8, i64 120
  store i8 0, i8* %43, align 8
  %44 = call i8* @_Znwm(i64 24) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #15
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast i8* %13 to %"class.std::__1::vector.426"**
  %47 = load %"class.std::__1::vector.426"*, %"class.std::__1::vector.426"** %46, align 8
  %48 = bitcast i8* %13 to i64*
  store i64 %45, i64* %48, align 8
  %49 = icmp eq %"class.std::__1::vector.426"* %47, null
  br i1 %49, label %79, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.std::__1::vector.426", %"class.std::__1::vector.426"* %47, i64 0, i32 0, i32 0
  %52 = load %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"** %51, align 8
  %53 = icmp eq %"class.std::__1::unique_ptr.414"* %52, null
  br i1 %53, label %77, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.std::__1::unique_ptr.414"* %52 to i8*
  %56 = getelementptr inbounds %"class.std::__1::vector.426", %"class.std::__1::vector.426"* %47, i64 0, i32 0, i32 1
  %57 = load %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"** %56, align 8
  %58 = icmp eq %"class.std::__1::unique_ptr.414"* %57, %52
  br i1 %58, label %75, label %59

59:                                               ; preds = %54, %70
  %60 = phi %"class.std::__1::unique_ptr.414"* [ %61, %70 ], [ %57, %54 ]
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %60, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %62, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %62, align 8
  %64 = icmp eq %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %63 to void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)***
  %67 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %67, i64 2
  %69 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %68, align 8
  call void %69(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %63) #15
  br label %70

70:                                               ; preds = %65, %59
  %71 = icmp eq %"class.std::__1::unique_ptr.414"* %61, %52
  br i1 %71, label %72, label %59

72:                                               ; preds = %70
  %73 = bitcast %"class.std::__1::vector.426"* %47 to i8**
  %74 = load i8*, i8** %73, align 8
  br label %75

75:                                               ; preds = %72, %54
  %76 = phi i8* [ %74, %72 ], [ %55, %54 ]
  store %"class.std::__1::unique_ptr.414"* %52, %"class.std::__1::unique_ptr.414"** %56, align 8
  call void @_ZdlPv(i8* %76) #16
  br label %77

77:                                               ; preds = %75, %50
  %78 = bitcast %"class.std::__1::vector.426"* %47 to i8*
  call void @_ZdlPv(i8* %78) #16
  br label %79

79:                                               ; preds = %42, %77
  %80 = ptrtoint i8* %8 to i64
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.417"* %4, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %81, align 8
  %83 = bitcast %"class.std::__1::unique_ptr.417"* %4 to i64*
  store i64 %80, i64* %83, align 8
  %84 = icmp eq %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %82, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %79
  %86 = bitcast %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %82 to void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)***
  %87 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %87, i64 2
  %89 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %88, align 8
  call void %89(%"class.v8_inspector::protocol::Runtime::ObjectPreview"* nonnull %82) #15
  br label %90

90:                                               ; preds = %85, %79
  %91 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %91, i64 0, i32 1, i32 1
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %90
  %96 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %97 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %97) #16
  br label %98

98:                                               ; preds = %90, %95
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #15
  %99 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %99, i64 0, i32 1, i32 1
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %98
  %104 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %105 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %105) #16
  br label %106

106:                                              ; preds = %103, %98
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %"class.v8::Value"* @_ZNK12v8_inspector12_GLOBAL__N_112NumberMirror7v8ValueEv(%"class.v8_inspector::(anonymous namespace)::NumberMirror"* nocapture readonly) unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::NumberMirror", %"class.v8_inspector::(anonymous namespace)::NumberMirror"* %0, i64 0, i32 1, i32 0
  %3 = bitcast %"class.v8::Number"** %2 to %"class.v8::Value"**
  %4 = load %"class.v8::Value"*, %"class.v8::Value"** %3, align 8
  ret %"class.v8::Value"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol7Runtime12RemoteObject22setUnserializableValueERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  %10 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 24, i1 false) #15
  br label %186

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 11
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = bitcast %"class.v8_inspector::String16"* %3 to i16*
  %19 = trunc i64 %15 to i8
  %20 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %20, i64 0, i32 1, i32 1
  store i8 %19, i8* %21, align 1
  br label %39

22:                                               ; preds = %11
  %23 = icmp ugt i64 %15, 9223372036854775791
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.v8_inspector::String16"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #14
  unreachable

26:                                               ; preds = %22
  %27 = add nuw nsw i64 %15, 8
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #16
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  %37 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %17
  %40 = phi i16* [ %18, %17 ], [ %34, %31 ]
  %41 = add nuw nsw i64 %15, 1
  %42 = add i64 %15, 1
  %43 = icmp ult i64 %42, 16
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  %45 = add i64 %15, 1
  %46 = getelementptr i16, i16* %40, i64 %45
  %47 = getelementptr i16, i16* %13, i64 %45
  %48 = icmp ult i16* %40, %47
  %49 = icmp ult i16* %13, %46
  %50 = and i1 %48, %49
  br i1 %50, label %133, label %51

51:                                               ; preds = %44
  %52 = and i64 %42, -16
  %53 = getelementptr i16, i16* %40, i64 %52
  %54 = sub i64 %41, %52
  %55 = getelementptr i16, i16* %13, i64 %52
  %56 = add i64 %52, -16
  %57 = lshr exact i64 %56, 4
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 48
  br i1 %60, label %112, label %61

61:                                               ; preds = %51
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr i16, i16* %40, i64 %64
  %67 = getelementptr i16, i16* %13, i64 %64
  %68 = bitcast i16* %67 to <8 x i16>*
  %69 = load <8 x i16>, <8 x i16>* %68, align 2, !alias.scope !667
  %70 = getelementptr i16, i16* %67, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !667
  %73 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %73, align 2, !alias.scope !670, !noalias !667
  %74 = getelementptr i16, i16* %66, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %75, align 2, !alias.scope !670, !noalias !667
  %76 = or i64 %64, 16
  %77 = getelementptr i16, i16* %40, i64 %76
  %78 = getelementptr i16, i16* %13, i64 %76
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !667
  %81 = getelementptr i16, i16* %78, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !667
  %84 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !670, !noalias !667
  %85 = getelementptr i16, i16* %77, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !670, !noalias !667
  %87 = or i64 %64, 32
  %88 = getelementptr i16, i16* %40, i64 %87
  %89 = getelementptr i16, i16* %13, i64 %87
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !667
  %92 = getelementptr i16, i16* %89, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !667
  %95 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !670, !noalias !667
  %96 = getelementptr i16, i16* %88, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !670, !noalias !667
  %98 = or i64 %64, 48
  %99 = getelementptr i16, i16* %40, i64 %98
  %100 = getelementptr i16, i16* %13, i64 %98
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !667
  %103 = getelementptr i16, i16* %100, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !667
  %106 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !670, !noalias !667
  %107 = getelementptr i16, i16* %99, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !670, !noalias !667
  %109 = add i64 %64, 64
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !672

112:                                              ; preds = %63, %51
  %113 = phi i64 [ 0, %51 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr i16, i16* %40, i64 %116
  %119 = getelementptr i16, i16* %13, i64 %116
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !667
  %122 = getelementptr i16, i16* %119, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !667
  %125 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !670, !noalias !667
  %126 = getelementptr i16, i16* %118, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !670, !noalias !667
  %128 = add i64 %116, 16
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !673

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %42, %52
  br i1 %132, label %186, label %133

133:                                              ; preds = %131, %44, %39
  %134 = phi i16* [ %40, %44 ], [ %40, %39 ], [ %53, %131 ]
  %135 = phi i64 [ %41, %44 ], [ %41, %39 ], [ %54, %131 ]
  %136 = phi i16* [ %13, %44 ], [ %13, %39 ], [ %55, %131 ]
  %137 = add i64 %135, -1
  %138 = and i64 %135, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133, %140
  %141 = phi i16* [ %147, %140 ], [ %134, %133 ]
  %142 = phi i64 [ %146, %140 ], [ %135, %133 ]
  %143 = phi i16* [ %148, %140 ], [ %136, %133 ]
  %144 = phi i64 [ %149, %140 ], [ %138, %133 ]
  %145 = load i16, i16* %143, align 2
  store i16 %145, i16* %141, align 2
  %146 = add i64 %142, -1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = getelementptr inbounds i16, i16* %143, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !674

151:                                              ; preds = %140, %133
  %152 = phi i16* [ %134, %133 ], [ %147, %140 ]
  %153 = phi i64 [ %135, %133 ], [ %146, %140 ]
  %154 = phi i16* [ %136, %133 ], [ %148, %140 ]
  %155 = icmp ult i64 %137, 7
  br i1 %155, label %186, label %156

156:                                              ; preds = %151, %156
  %157 = phi i16* [ %183, %156 ], [ %152, %151 ]
  %158 = phi i64 [ %182, %156 ], [ %153, %151 ]
  %159 = phi i16* [ %184, %156 ], [ %154, %151 ]
  %160 = load i16, i16* %159, align 2
  store i16 %160, i16* %157, align 2
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %159, i64 1
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = getelementptr inbounds i16, i16* %159, i64 2
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = getelementptr inbounds i16, i16* %159, i64 3
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = getelementptr inbounds i16, i16* %159, i64 4
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = getelementptr inbounds i16, i16* %159, i64 5
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = getelementptr inbounds i16, i16* %159, i64 6
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = getelementptr inbounds i16, i16* %159, i64 7
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = add i64 %158, -8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = getelementptr inbounds i16, i16* %159, i64 8
  %185 = icmp eq i64 %182, 0
  br i1 %185, label %186, label %156, !llvm.loop !675

186:                                              ; preds = %151, %156, %131, %8
  %187 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %188 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %189 = load i64, i64* %188, align 8
  store i64 %189, i64* %187, align 8
  %190 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::RemoteObject", %"class.v8_inspector::protocol::Runtime::RemoteObject"* %0, i64 0, i32 6, i32 1, i32 0
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0
  %192 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %190, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %191) #15
  %193 = load i64, i64* %187, align 8
  %194 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::RemoteObject", %"class.v8_inspector::protocol::Runtime::RemoteObject"* %0, i64 0, i32 6, i32 1, i32 1
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::RemoteObject", %"class.v8_inspector::protocol::Runtime::RemoteObject"* %0, i64 0, i32 6, i32 0
  store i8 1, i8* %195, align 8
  %196 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %196, i64 0, i32 1, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %186
  %201 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #16
  br label %203

203:                                              ; preds = %186, %200
  ret void
}

declare void @_ZN12v8_inspector8String1610fromDoubleEd(%"class.v8_inspector::String16"* sret, double) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #12

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12v8_inspector12_GLOBAL__N_112BigIntMirrorD0Ev(%"class.v8_inspector::(anonymous namespace)::BigIntMirror"*) unnamed_addr #7 align 2 {
  %2 = bitcast %"class.v8_inspector::(anonymous namespace)::BigIntMirror"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_112BigIntMirror17buildRemoteObjectEN2v85LocalINS2_7ContextEEENS_8WrapModeEPNSt3__110unique_ptrINS_8protocol7Runtime12RemoteObjectENS7_14default_deleteISB_EEEE(%"class.v8_crdtp::DispatchResponse"* noalias sret, %"class.v8_inspector::(anonymous namespace)::BigIntMirror"* nocapture readonly, %"class.v8::Context"*, i32, %"class.std::__1::unique_ptr.515"* nocapture) unnamed_addr #2 align 2 {
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::BigIntMirror", %"class.v8_inspector::(anonymous namespace)::BigIntMirror"* %1, i64 0, i32 1, i32 0
  %10 = load %"class.v8::BigInt"*, %"class.v8::BigInt"** %9, align 8
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_120descriptionForBigIntEN2v85LocalINS1_7ContextEEENS2_INS1_6BigIntEEE(%"class.v8_inspector::String16"* noalias nonnull %6, %"class.v8::Context"* %2, %"class.v8::BigInt"* %10)
  %11 = call i8* @_Znwm(i64 272) #16
  %12 = bitcast i8* %11 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %12, align 8
  %13 = getelementptr inbounds i8, i8* %11, i64 16
  %14 = getelementptr inbounds i8, i8* %11, i64 56
  %15 = getelementptr inbounds i8, i8* %11, i64 96
  %16 = getelementptr inbounds i8, i8* %11, i64 144
  %17 = getelementptr inbounds i8, i8* %11, i64 184
  %18 = getelementptr inbounds i8, i8* %11, i64 224
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 41, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 48, i1 false) #15
  %19 = bitcast i8* %11 to %"class.v8_inspector::protocol::Runtime::RemoteObject"*
  %20 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #15
  %21 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6BigintE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %7, i8* %21) #15
  %22 = bitcast i8* %13 to %"class.std::__1::basic_string"*
  %23 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0
  %24 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %22, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %23) #15
  %25 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %11, i64 40
  %28 = bitcast i8* %27 to i64*
  store i64 %26, i64* %28, align 8
  call void @_ZN12v8_inspector8protocol7Runtime12RemoteObject22setUnserializableValueERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %19, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %6) #15
  call void @_ZN12v8_inspector8protocol7Runtime12RemoteObject14setDescriptionERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %19, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %6) #15
  %29 = ptrtoint i8* %11 to i64
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.515", %"class.std::__1::unique_ptr.515"* %4, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.515"* %4 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %31, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %5
  %35 = bitcast %"class.v8_inspector::protocol::Runtime::RemoteObject"* %31 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %36 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %36, i64 2
  %38 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %37, align 8
  call void %38(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %31) #15
  br label %39

39:                                               ; preds = %34, %5
  %40 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #16
  br label %47

47:                                               ; preds = %44, %39
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #15
  call void @_ZN8v8_crdtp16DispatchResponse7SuccessEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  %48 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %48, i64 0, i32 1, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #16
  br label %55

55:                                               ; preds = %47, %52
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_112BigIntMirror20buildPropertyPreviewEN2v85LocalINS2_7ContextEEERKNS_8String16EPNSt3__110unique_ptrINS_8protocol7Runtime15PropertyPreviewENS9_14default_deleteISD_EEEE(%"class.v8_inspector::(anonymous namespace)::BigIntMirror"* nocapture readonly, %"class.v8::Context"*, %"class.v8_inspector::String16"* dereferenceable(32), %"class.std::__1::unique_ptr.414"* nocapture) unnamed_addr #2 align 2 {
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = tail call i8* @_Znwm(i64 160) #16
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime15PropertyPreviewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = getelementptr inbounds i8, i8* %8, i64 80
  %12 = getelementptr inbounds i8, i8* %8, i64 128
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 65, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 41, i1 false) #15
  %13 = bitcast i8* %8 to %"class.v8_inspector::protocol::Runtime::PropertyPreview"*
  %14 = bitcast i8* %10 to %"class.std::__1::basic_string"*
  %15 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0
  %16 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %14, %"class.std::__1::basic_string"* dereferenceable(24) %15) #15
  %17 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %8, i64 32
  %20 = bitcast i8* %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #15
  %22 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6BigintE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %5, i8* %22) #15
  %23 = getelementptr inbounds i8, i8* %8, i64 40
  %24 = bitcast i8* %23 to %"class.std::__1::basic_string"*
  %25 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 0
  %26 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %25) #15
  %27 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %8, i64 64
  %30 = bitcast i8* %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #15
  %32 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #15
  %33 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::BigIntMirror", %"class.v8_inspector::(anonymous namespace)::BigIntMirror"* %0, i64 0, i32 1, i32 0
  %34 = load %"class.v8::BigInt"*, %"class.v8::BigInt"** %33, align 8
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_120descriptionForBigIntEN2v85LocalINS1_7ContextEEENS2_INS1_6BigIntEEE(%"class.v8_inspector::String16"* noalias nonnull %7, %"class.v8::Context"* %1, %"class.v8::BigInt"* %34)
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_116abbreviateStringERKNS_8String16ENS0_14AbbreviateModeE(%"class.v8_inspector::String16"* noalias nonnull %6, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %7, i32 0)
  call void @_ZN12v8_inspector8protocol7Runtime15PropertyPreview8setValueERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %13, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %6) #15
  %35 = ptrtoint i8* %8 to i64
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %3, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %36, align 8
  %38 = bitcast %"class.std::__1::unique_ptr.414"* %3 to i64*
  store i64 %35, i64* %38, align 8
  %39 = icmp eq %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %37, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %4
  %41 = bitcast %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %37 to void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)***
  %42 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %42, i64 2
  %44 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %43, align 8
  call void %44(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %37) #15
  br label %45

45:                                               ; preds = %40, %4
  %46 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %46, i64 0, i32 1, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #16
  br label %53

53:                                               ; preds = %45, %50
  %54 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %54, i64 0, i32 1, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #16
  br label %61

61:                                               ; preds = %53, %58
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #15
  %62 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %62, i64 0, i32 1, i32 1
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %61
  %67 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #16
  br label %69

69:                                               ; preds = %66, %61
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_112BigIntMirror17buildEntryPreviewEN2v85LocalINS2_7ContextEEEPiS6_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS7_14default_deleteISB_EEEE(%"class.v8_inspector::(anonymous namespace)::BigIntMirror"* nocapture readonly, %"class.v8::Context"*, i32* nocapture readnone, i32* nocapture readnone, %"class.std::__1::unique_ptr.417"* nocapture) unnamed_addr #2 align 2 {
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = tail call i8* @_Znwm(i64 144) #16
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime13ObjectPreviewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = getelementptr inbounds i8, i8* %8, i64 48
  %12 = getelementptr inbounds i8, i8* %8, i64 88
  %13 = getelementptr inbounds i8, i8* %8, i64 128
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #15
  %14 = bitcast i8* %8 to %"class.v8_inspector::protocol::Runtime::ObjectPreview"*
  %15 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #15
  %16 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6BigintE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %6, i8* %16) #15
  %17 = bitcast i8* %10 to %"class.std::__1::basic_string"*
  %18 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0
  %19 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %18) #15
  %20 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds i8, i8* %8, i64 32
  %23 = bitcast i8* %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #15
  %25 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::BigIntMirror", %"class.v8_inspector::(anonymous namespace)::BigIntMirror"* %0, i64 0, i32 1, i32 0
  %26 = load %"class.v8::BigInt"*, %"class.v8::BigInt"** %25, align 8
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_120descriptionForBigIntEN2v85LocalINS1_7ContextEEENS2_INS1_6BigIntEEE(%"class.v8_inspector::String16"* noalias nonnull %7, %"class.v8::Context"* %1, %"class.v8::BigInt"* %26)
  call void @_ZN12v8_inspector8protocol7Runtime13ObjectPreview14setDescriptionERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::ObjectPreview"* nonnull %14, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %7) #15
  %27 = getelementptr inbounds i8, i8* %8, i64 120
  store i8 0, i8* %27, align 8
  %28 = call i8* @_Znwm(i64 24) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #15
  %29 = ptrtoint i8* %28 to i64
  %30 = bitcast i8* %13 to %"class.std::__1::vector.426"**
  %31 = load %"class.std::__1::vector.426"*, %"class.std::__1::vector.426"** %30, align 8
  %32 = bitcast i8* %13 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.std::__1::vector.426"* %31, null
  br i1 %33, label %63, label %34

34:                                               ; preds = %5
  %35 = getelementptr inbounds %"class.std::__1::vector.426", %"class.std::__1::vector.426"* %31, i64 0, i32 0, i32 0
  %36 = load %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"** %35, align 8
  %37 = icmp eq %"class.std::__1::unique_ptr.414"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.std::__1::unique_ptr.414"* %36 to i8*
  %40 = getelementptr inbounds %"class.std::__1::vector.426", %"class.std::__1::vector.426"* %31, i64 0, i32 0, i32 1
  %41 = load %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"** %40, align 8
  %42 = icmp eq %"class.std::__1::unique_ptr.414"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.std::__1::unique_ptr.414"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %44, i64 -1
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %46, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %46, align 8
  %48 = icmp eq %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %47 to void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)***
  %51 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %51, i64 2
  %53 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %52, align 8
  call void %53(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %47) #15
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.std::__1::unique_ptr.414"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.426"* %31 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.std::__1::unique_ptr.414"* %36, %"class.std::__1::unique_ptr.414"** %40, align 8
  call void @_ZdlPv(i8* %60) #16
  br label %61

61:                                               ; preds = %59, %34
  %62 = bitcast %"class.std::__1::vector.426"* %31 to i8*
  call void @_ZdlPv(i8* %62) #16
  br label %63

63:                                               ; preds = %5, %61
  %64 = ptrtoint i8* %8 to i64
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.417"* %4, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %65, align 8
  %67 = bitcast %"class.std::__1::unique_ptr.417"* %4 to i64*
  store i64 %64, i64* %67, align 8
  %68 = icmp eq %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %66, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %63
  %70 = bitcast %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %66 to void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)***
  %71 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %71, i64 2
  %73 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %72, align 8
  call void %73(%"class.v8_inspector::protocol::Runtime::ObjectPreview"* nonnull %66) #15
  br label %74

74:                                               ; preds = %69, %63
  %75 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %75, i64 0, i32 1, i32 1
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %81 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %81) #16
  br label %82

82:                                               ; preds = %74, %79
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #15
  %83 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %83, i64 0, i32 1, i32 1
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %82
  %88 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %89 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %89) #16
  br label %90

90:                                               ; preds = %87, %82
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %"class.v8::Value"* @_ZNK12v8_inspector12_GLOBAL__N_112BigIntMirror7v8ValueEv(%"class.v8_inspector::(anonymous namespace)::BigIntMirror"* nocapture readonly) unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::BigIntMirror", %"class.v8_inspector::(anonymous namespace)::BigIntMirror"* %0, i64 0, i32 1, i32 0
  %3 = bitcast %"class.v8::BigInt"** %2 to %"class.v8::Value"**
  %4 = load %"class.v8::Value"*, %"class.v8::Value"** %3, align 8
  ret %"class.v8::Value"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12v8_inspector12_GLOBAL__N_120descriptionForBigIntEN2v85LocalINS1_7ContextEEENS2_INS1_6BigIntEEE(%"class.v8_inspector::String16"* noalias, %"class.v8::Context"*, %"class.v8::BigInt"*) unnamed_addr #2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %1) #15
  %9 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #15
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %8) #15
  %10 = bitcast %"class.v8::BigInt"* %2 to %"class.v8::Value"*
  %11 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %10, %"class.v8::Context"* %1) #15
  %12 = icmp eq %"class.v8::String"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false)
  br label %45

15:                                               ; preds = %3
  %16 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #15
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %6, %"class.v8::Isolate"* %8, %"class.v8::String"* nonnull %11) #15
  %17 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #15
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.62, i64 0, i64 0)) #15
  %18 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #15, !noalias !676
  %19 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0
  %20 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0
  call void @_ZNSt3__1plItNS_11char_traitsItEENS_9allocatorItEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %19, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %20) #15, !noalias !676
  call void @_ZN12v8_inspector8String16C1EONSt3__112basic_stringItNS1_11char_traitsItEENS1_9allocatorItEEEE(%"class.v8_inspector::String16"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #15
  %21 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1, !noalias !676
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %15
  %26 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %27 = load i8*, i8** %26, align 8, !noalias !676
  call void @_ZdlPv(i8* %27) #16
  br label %28

28:                                               ; preds = %15, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #15, !noalias !676
  %29 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #16
  br label %36

36:                                               ; preds = %28, %33
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #15
  %37 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #16
  br label %44

44:                                               ; preds = %36, %41
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #15
  br label %45

45:                                               ; preds = %44, %13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN12v8_inspector11ValueMirrorD2Ev(%"class.v8_inspector::ValueMirror"* nocapture) unnamed_addr #13 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12v8_inspector12_GLOBAL__N_112SymbolMirrorD0Ev(%"class.v8_inspector::(anonymous namespace)::SymbolMirror"*) unnamed_addr #7 align 2 {
  %2 = bitcast %"class.v8_inspector::(anonymous namespace)::SymbolMirror"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_112SymbolMirror17buildRemoteObjectEN2v85LocalINS2_7ContextEEENS_8WrapModeEPNSt3__110unique_ptrINS_8protocol7Runtime12RemoteObjectENS7_14default_deleteISB_EEEE(%"class.v8_crdtp::DispatchResponse"* noalias sret, %"class.v8_inspector::(anonymous namespace)::SymbolMirror"* nocapture readonly, %"class.v8::Context"*, i32, %"class.std::__1::unique_ptr.515"* nocapture) unnamed_addr #2 align 2 {
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.std::__1::basic_string.541", align 8
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = alloca %"class.v8_inspector::String16", align 8
  %10 = icmp eq i32 %3, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %5
  %12 = tail call i8* @_Znwm(i64 48) #16
  %13 = getelementptr inbounds %"class.std::__1::basic_string.541", %"class.std::__1::basic_string.541"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string.541", %"class.std::__1::basic_string.541"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast i64* %14 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %15, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.45, i64 0, i64 0), i64 36, i1 false) #15
  %16 = getelementptr inbounds i8, i8* %12, i64 36
  store i8 0, i8* %16, align 1
  call void @_ZN8v8_crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.v8_crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string.541"* nonnull %7) #15
  %17 = bitcast %"class.std::__1::basic_string.541"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %83

21:                                               ; preds = %11
  %22 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %22) #16
  br label %83

23:                                               ; preds = %5
  %24 = tail call i8* @_Znwm(i64 272) #16
  %25 = bitcast i8* %24 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %25, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 16
  %27 = getelementptr inbounds i8, i8* %24, i64 56
  %28 = getelementptr inbounds i8, i8* %24, i64 96
  %29 = getelementptr inbounds i8, i8* %24, i64 144
  %30 = getelementptr inbounds i8, i8* %24, i64 184
  %31 = getelementptr inbounds i8, i8* %24, i64 224
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 41, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 48, i1 false) #15
  %32 = bitcast i8* %24 to %"class.v8_inspector::protocol::Runtime::RemoteObject"*
  %33 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #15
  %34 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6SymbolE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %8, i8* %34) #15
  %35 = bitcast i8* %26 to %"class.std::__1::basic_string"*
  %36 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 0
  %37 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %35, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %36) #15
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds i8, i8* %24, i64 40
  %41 = bitcast i8* %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = bitcast %"class.v8_inspector::String16"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #15
  %43 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::SymbolMirror", %"class.v8_inspector::(anonymous namespace)::SymbolMirror"* %1, i64 0, i32 1, i32 0
  %44 = load %"class.v8::Symbol"*, %"class.v8::Symbol"** %43, align 8
  %45 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45)
  %46 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %2) #15, !noalias !679
  %47 = call %"class.v8::Value"* @_ZNK2v86Symbol11DescriptionEPNS_7IsolateE(%"class.v8::Symbol"* %44, %"class.v8::Isolate"* %46) #15, !noalias !679
  call void @_ZN12v8_inspector29toProtocolStringWithTypeCheckEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8_inspector::String16"* nonnull sret %6, %"class.v8::Isolate"* %46, %"class.v8::Value"* %47) #15, !noalias !679
  call void @_ZN12v8_inspector8String166concatIJPKcS0_S3_EEES0_DpT_(%"class.v8_inspector::String16"* nonnull sret %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), %"class.v8_inspector::String16"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0)) #15
  %48 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %48, i64 0, i32 1, i32 1
  %50 = load i8, i8* %49, align 1, !noalias !679
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %23
  %53 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %54 = load i8*, i8** %53, align 8, !noalias !679
  call void @_ZdlPv(i8* %54) #16
  br label %55

55:                                               ; preds = %23, %52
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45)
  call void @_ZN12v8_inspector8protocol7Runtime12RemoteObject14setDescriptionERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %32, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %9) #15
  %56 = ptrtoint i8* %24 to i64
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.515", %"class.std::__1::unique_ptr.515"* %4, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %57, align 8
  %59 = bitcast %"class.std::__1::unique_ptr.515"* %4 to i64*
  store i64 %56, i64* %59, align 8
  %60 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %58, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %55
  %62 = bitcast %"class.v8_inspector::protocol::Runtime::RemoteObject"* %58 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %63 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %63, i64 2
  %65 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %64, align 8
  call void %65(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %58) #15
  br label %66

66:                                               ; preds = %61, %55
  %67 = bitcast %"class.v8_inspector::String16"* %9 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %67, i64 0, i32 1, i32 1
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = bitcast %"class.v8_inspector::String16"* %9 to i8**
  %73 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %73) #16
  br label %74

74:                                               ; preds = %66, %71
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #15
  %75 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %75, i64 0, i32 1, i32 1
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %81 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %81) #16
  br label %82

82:                                               ; preds = %79, %74
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #15
  call void @_ZN8v8_crdtp16DispatchResponse7SuccessEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  br label %83

83:                                               ; preds = %21, %11, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_112SymbolMirror20buildPropertyPreviewEN2v85LocalINS2_7ContextEEERKNS_8String16EPNSt3__110unique_ptrINS_8protocol7Runtime15PropertyPreviewENS9_14default_deleteISD_EEEE(%"class.v8_inspector::(anonymous namespace)::SymbolMirror"* nocapture readonly, %"class.v8::Context"*, %"class.v8_inspector::String16"* dereferenceable(32), %"class.std::__1::unique_ptr.414"* nocapture) unnamed_addr #2 align 2 {
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = tail call i8* @_Znwm(i64 160) #16
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime15PropertyPreviewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = getelementptr inbounds i8, i8* %9, i64 80
  %13 = getelementptr inbounds i8, i8* %9, i64 128
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 65, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 41, i1 false) #15
  %14 = bitcast i8* %9 to %"class.v8_inspector::protocol::Runtime::PropertyPreview"*
  %15 = bitcast i8* %11 to %"class.std::__1::basic_string"*
  %16 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0
  %17 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %15, %"class.std::__1::basic_string"* dereferenceable(24) %16) #15
  %18 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %9, i64 32
  %21 = bitcast i8* %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #15
  %23 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6SymbolE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %6, i8* %23) #15
  %24 = getelementptr inbounds i8, i8* %9, i64 40
  %25 = bitcast i8* %24 to %"class.std::__1::basic_string"*
  %26 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0
  %27 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %25, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %26) #15
  %28 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %9, i64 64
  %31 = bitcast i8* %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #15
  %33 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #15
  %34 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::SymbolMirror", %"class.v8_inspector::(anonymous namespace)::SymbolMirror"* %0, i64 0, i32 1, i32 0
  %35 = load %"class.v8::Symbol"*, %"class.v8::Symbol"** %34, align 8
  %36 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36)
  %37 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %1) #15, !noalias !682
  %38 = call %"class.v8::Value"* @_ZNK2v86Symbol11DescriptionEPNS_7IsolateE(%"class.v8::Symbol"* %35, %"class.v8::Isolate"* %37) #15, !noalias !682
  call void @_ZN12v8_inspector29toProtocolStringWithTypeCheckEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8_inspector::String16"* nonnull sret %5, %"class.v8::Isolate"* %37, %"class.v8::Value"* %38) #15, !noalias !682
  call void @_ZN12v8_inspector8String166concatIJPKcS0_S3_EEES0_DpT_(%"class.v8_inspector::String16"* nonnull sret %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), %"class.v8_inspector::String16"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0)) #15
  %39 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %39, i64 0, i32 1, i32 1
  %41 = load i8, i8* %40, align 1, !noalias !682
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %4
  %44 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %45 = load i8*, i8** %44, align 8, !noalias !682
  call void @_ZdlPv(i8* %45) #16
  br label %46

46:                                               ; preds = %4, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36)
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_116abbreviateStringERKNS_8String16ENS0_14AbbreviateModeE(%"class.v8_inspector::String16"* noalias nonnull %7, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %8, i32 1)
  call void @_ZN12v8_inspector8protocol7Runtime15PropertyPreview8setValueERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %14, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %7) #15
  %47 = ptrtoint i8* %9 to i64
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %3, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %48, align 8
  %50 = bitcast %"class.std::__1::unique_ptr.414"* %3 to i64*
  store i64 %47, i64* %50, align 8
  %51 = icmp eq %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %49, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %46
  %53 = bitcast %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %49 to void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)***
  %54 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %54, i64 2
  %56 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %55, align 8
  call void %56(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %49) #15
  br label %57

57:                                               ; preds = %52, %46
  %58 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %58, i64 0, i32 1, i32 1
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #16
  br label %65

65:                                               ; preds = %57, %62
  %66 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %66, i64 0, i32 1, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %65
  %71 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %72 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %72) #16
  br label %73

73:                                               ; preds = %65, %70
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #15
  %74 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %74, i64 0, i32 1, i32 1
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %73
  %79 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %80 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %80) #16
  br label %81

81:                                               ; preds = %78, %73
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %"class.v8::Value"* @_ZNK12v8_inspector12_GLOBAL__N_112SymbolMirror7v8ValueEv(%"class.v8_inspector::(anonymous namespace)::SymbolMirror"* nocapture readonly) unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::SymbolMirror", %"class.v8_inspector::(anonymous namespace)::SymbolMirror"* %0, i64 0, i32 1, i32 0
  %3 = bitcast %"class.v8::Symbol"** %2 to %"class.v8::Value"**
  %4 = load %"class.v8::Value"*, %"class.v8::Value"** %3, align 8
  ret %"class.v8::Value"* %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12v8_inspector12_GLOBAL__N_114FunctionMirrorD0Ev(%"class.v8_inspector::(anonymous namespace)::FunctionMirror"*) unnamed_addr #7 align 2 {
  %2 = bitcast %"class.v8_inspector::(anonymous namespace)::FunctionMirror"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_114FunctionMirror17buildRemoteObjectEN2v85LocalINS2_7ContextEEENS_8WrapModeEPNSt3__110unique_ptrINS_8protocol7Runtime12RemoteObjectENS7_14default_deleteISB_EEEE(%"class.v8_crdtp::DispatchResponse"* noalias sret, %"class.v8_inspector::(anonymous namespace)::FunctionMirror"* nocapture readonly, %"class.v8::Context"*, i32, %"class.std::__1::unique_ptr.515"* nocapture) unnamed_addr #2 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.522", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = alloca %"class.v8_inspector::String16", align 8
  %10 = alloca %"class.v8_inspector::String16", align 8
  %11 = icmp eq i32 %3, 0
  br i1 %11, label %12, label %115

12:                                               ; preds = %5
  %13 = bitcast %"class.std::__1::unique_ptr.522"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  %14 = bitcast %"class.std::__1::unique_ptr.522"* %6 to i64*
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::FunctionMirror", %"class.v8_inspector::(anonymous namespace)::FunctionMirror"* %1, i64 0, i32 1, i32 0
  %16 = bitcast %"class.v8::Function"** %15 to %"class.v8::Value"**
  %17 = load %"class.v8::Value"*, %"class.v8::Value"** %16, align 8
  %18 = bitcast %"class.v8::Value"* %17 to i64*
  %19 = load i64, i64* %18, align 8, !noalias !685
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 1
  br i1 %21, label %22, label %40

22:                                               ; preds = %12
  %23 = add i64 %19, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %19, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  %32 = icmp eq i16 %31, 67
  br i1 %32, label %33, label %40

33:                                               ; preds = %22
  %34 = add i64 %19, 23
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, -2
  %38 = icmp eq i32 %37, 10
  br i1 %38, label %39, label %40

39:                                               ; preds = %33
  tail call void @_ZN8v8_crdtp16DispatchResponse7SuccessEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  br label %41

40:                                               ; preds = %33, %22, %12
  call fastcc void @_ZN12v8_inspector12_GLOBAL__N_115toProtocolValueEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEEiPNSt3__110unique_ptrINS_8protocol5ValueENS7_14default_deleteISA_EEEE(%"class.v8_crdtp::DispatchResponse"* noalias %0, %"class.v8::Context"* %2, %"class.v8::Value"* %17, i32 1000, %"class.std::__1::unique_ptr.522"* nonnull %6) #15
  br label %41

41:                                               ; preds = %39, %40
  %42 = getelementptr inbounds %"class.v8_crdtp::DispatchResponse", %"class.v8_crdtp::DispatchResponse"* %0, i64 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %103

45:                                               ; preds = %41
  %46 = tail call i8* @_Znwm(i64 272) #16
  %47 = bitcast i8* %46 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %47, align 8
  %48 = getelementptr inbounds i8, i8* %46, i64 16
  %49 = getelementptr inbounds i8, i8* %46, i64 56
  %50 = getelementptr inbounds i8, i8* %46, i64 96
  %51 = getelementptr inbounds i8, i8* %46, i64 144
  %52 = getelementptr inbounds i8, i8* %46, i64 184
  %53 = getelementptr inbounds i8, i8* %46, i64 224
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 41, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 48, i1 false) #15
  %54 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #15
  %55 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum8FunctionE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %7, i8* %55) #15
  %56 = bitcast i8* %48 to %"class.std::__1::basic_string"*
  %57 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0
  %58 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %56, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %57) #15
  %59 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds i8, i8* %46, i64 40
  %62 = bitcast i8* %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.522"* %6, i64 0, i32 0, i32 0, i32 0
  %64 = load i64, i64* %14, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %63, align 8
  %65 = getelementptr inbounds i8, i8* %46, i64 128
  %66 = bitcast i8* %65 to %"class.v8_inspector::protocol::Value"**
  %67 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %66, align 8
  %68 = bitcast i8* %65 to i64*
  store i64 %64, i64* %68, align 8
  %69 = icmp eq %"class.v8_inspector::protocol::Value"* %67, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %45
  %71 = bitcast %"class.v8_inspector::protocol::Value"* %67 to void (%"class.v8_inspector::protocol::Value"*)***
  %72 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %72, i64 2
  %74 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %73, align 8
  call void %74(%"class.v8_inspector::protocol::Value"* nonnull %67) #15
  br label %75

75:                                               ; preds = %45, %70
  %76 = ptrtoint i8* %46 to i64
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.515", %"class.std::__1::unique_ptr.515"* %4, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %77, align 8
  %79 = bitcast %"class.std::__1::unique_ptr.515"* %4 to i64*
  store i64 %76, i64* %79, align 8
  %80 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %78, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.v8_inspector::protocol::Runtime::RemoteObject"* %78 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %83 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %83, i64 2
  %85 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %84, align 8
  call void %85(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %78) #15
  br label %86

86:                                               ; preds = %81, %75
  %87 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %87, i64 0, i32 1, i32 1
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %86
  %92 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #16
  br label %94

94:                                               ; preds = %91, %86
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #15
  %95 = getelementptr inbounds %"class.v8_crdtp::DispatchResponse", %"class.v8_crdtp::DispatchResponse"* %0, i64 0, i32 1
  %96 = bitcast %"class.std::__1::basic_string.541"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %114

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.std::__1::basic_string.541", %"class.std::__1::basic_string.541"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #16
  br label %114

103:                                              ; preds = %41
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.522"* %6, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %104, align 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.522"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %106, align 8
  %107 = icmp eq %"class.v8_inspector::protocol::Value"* %105, null
  br i1 %107, label %113, label %108

108:                                              ; preds = %103
  %109 = bitcast %"class.v8_inspector::protocol::Value"* %105 to void (%"class.v8_inspector::protocol::Value"*)***
  %110 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %110, i64 2
  %112 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %111, align 8
  call void %112(%"class.v8_inspector::protocol::Value"* nonnull %105) #15
  br label %113

113:                                              ; preds = %103, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  br label %182

114:                                              ; preds = %94, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  br label %181

115:                                              ; preds = %5
  %116 = tail call i8* @_Znwm(i64 272) #16
  %117 = bitcast i8* %116 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %117, align 8
  %118 = getelementptr inbounds i8, i8* %116, i64 16
  %119 = getelementptr inbounds i8, i8* %116, i64 56
  %120 = getelementptr inbounds i8, i8* %116, i64 96
  %121 = getelementptr inbounds i8, i8* %116, i64 144
  %122 = getelementptr inbounds i8, i8* %116, i64 184
  %123 = getelementptr inbounds i8, i8* %116, i64 224
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 41, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 48, i1 false) #15
  %124 = bitcast i8* %116 to %"class.v8_inspector::protocol::Runtime::RemoteObject"*
  %125 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %125) #15
  %126 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum8FunctionE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %8, i8* %126) #15
  %127 = bitcast i8* %118 to %"class.std::__1::basic_string"*
  %128 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 0
  %129 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %127, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %128) #15
  %130 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds i8, i8* %116, i64 40
  %133 = bitcast i8* %132 to i64*
  store i64 %131, i64* %133, align 8
  %134 = bitcast %"class.v8_inspector::String16"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %134) #15
  %135 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %2) #15
  %136 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::FunctionMirror", %"class.v8_inspector::(anonymous namespace)::FunctionMirror"* %1, i64 0, i32 1, i32 0
  %137 = bitcast %"class.v8::Function"** %136 to %"class.v8::Object"**
  %138 = load %"class.v8::Object"*, %"class.v8::Object"** %137, align 8
  %139 = call %"class.v8::String"* @_ZN2v86Object18GetConstructorNameEv(%"class.v8::Object"* %138) #15
  %140 = bitcast %"class.v8::String"* %139 to %"class.v8::Value"*
  call void @_ZN12v8_inspector29toProtocolStringWithTypeCheckEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8_inspector::String16"* nonnull sret %9, %"class.v8::Isolate"* %135, %"class.v8::Value"* %140) #15
  call void @_ZN12v8_inspector8protocol7Runtime12RemoteObject12setClassNameERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %124, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %9) #15
  %141 = bitcast %"class.v8_inspector::String16"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %141) #15
  %142 = load %"class.v8::Function"*, %"class.v8::Function"** %136, align 8
  %143 = bitcast %"class.v8::Function"* %142 to %"class.v8::Object"*
  %144 = call %"class.v8::Isolate"* @_ZN2v86Object10GetIsolateEv(%"class.v8::Object"* %143) #15, !noalias !688
  %145 = call %"class.v8::String"* @_ZN2v85debug22GetFunctionDescriptionENS_5LocalINS_8FunctionEEE(%"class.v8::Function"* %142) #15, !noalias !688
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %10, %"class.v8::Isolate"* %144, %"class.v8::String"* %145) #15
  call void @_ZN12v8_inspector8protocol7Runtime12RemoteObject14setDescriptionERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %124, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %10) #15
  %146 = ptrtoint i8* %116 to i64
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.515", %"class.std::__1::unique_ptr.515"* %4, i64 0, i32 0, i32 0, i32 0
  %148 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %147, align 8
  %149 = bitcast %"class.std::__1::unique_ptr.515"* %4 to i64*
  store i64 %146, i64* %149, align 8
  %150 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %148, null
  br i1 %150, label %156, label %151

151:                                              ; preds = %115
  %152 = bitcast %"class.v8_inspector::protocol::Runtime::RemoteObject"* %148 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %153 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %152, align 8
  %154 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %153, i64 2
  %155 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %154, align 8
  call void %155(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %148) #15
  br label %156

156:                                              ; preds = %151, %115
  %157 = bitcast %"class.v8_inspector::String16"* %10 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %158 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %157, i64 0, i32 1, i32 1
  %159 = load i8, i8* %158, align 1
  %160 = icmp slt i8 %159, 0
  br i1 %160, label %161, label %164

161:                                              ; preds = %156
  %162 = bitcast %"class.v8_inspector::String16"* %10 to i8**
  %163 = load i8*, i8** %162, align 8
  call void @_ZdlPv(i8* %163) #16
  br label %164

164:                                              ; preds = %156, %161
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %141) #15
  %165 = bitcast %"class.v8_inspector::String16"* %9 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %165, i64 0, i32 1, i32 1
  %167 = load i8, i8* %166, align 1
  %168 = icmp slt i8 %167, 0
  br i1 %168, label %169, label %172

169:                                              ; preds = %164
  %170 = bitcast %"class.v8_inspector::String16"* %9 to i8**
  %171 = load i8*, i8** %170, align 8
  call void @_ZdlPv(i8* %171) #16
  br label %172

172:                                              ; preds = %164, %169
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %134) #15
  %173 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %173, i64 0, i32 1, i32 1
  %175 = load i8, i8* %174, align 1
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %177, label %180

177:                                              ; preds = %172
  %178 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %179 = load i8*, i8** %178, align 8
  call void @_ZdlPv(i8* %179) #16
  br label %180

180:                                              ; preds = %177, %172
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %125) #15
  br label %181

181:                                              ; preds = %114, %180
  call void @_ZN8v8_crdtp16DispatchResponse7SuccessEv(%"class.v8_crdtp::DispatchResponse"* sret %0) #15
  br label %182

182:                                              ; preds = %113, %181
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_114FunctionMirror20buildPropertyPreviewEN2v85LocalINS2_7ContextEEERKNS_8String16EPNSt3__110unique_ptrINS_8protocol7Runtime15PropertyPreviewENS9_14default_deleteISD_EEEE(%"class.v8_inspector::(anonymous namespace)::FunctionMirror"* nocapture readnone, %"class.v8::Context"* nocapture readnone, %"class.v8_inspector::String16"* dereferenceable(32), %"class.std::__1::unique_ptr.414"* nocapture) unnamed_addr #2 align 2 {
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = tail call i8* @_Znwm(i64 160) #16
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime15PropertyPreviewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = getelementptr inbounds i8, i8* %7, i64 80
  %11 = getelementptr inbounds i8, i8* %7, i64 128
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 65, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 41, i1 false) #15
  %12 = bitcast i8* %7 to %"class.v8_inspector::protocol::Runtime::PropertyPreview"*
  %13 = bitcast i8* %9 to %"class.std::__1::basic_string"*
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0
  %15 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %13, %"class.std::__1::basic_string"* dereferenceable(24) %14) #15
  %16 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %7, i64 32
  %19 = bitcast i8* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #15
  %21 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum8FunctionE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %5, i8* %21) #15
  %22 = getelementptr inbounds i8, i8* %7, i64 40
  %23 = bitcast i8* %22 to %"class.std::__1::basic_string"*
  %24 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 0
  %25 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %23, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %24) #15
  %26 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %7, i64 64
  %29 = bitcast i8* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #15
  %31 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 32, i1 false)
  call void @_ZN12v8_inspector8protocol7Runtime15PropertyPreview8setValueERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %12, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %6) #15
  %32 = ptrtoint i8* %7 to i64
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %3, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %33, align 8
  %35 = bitcast %"class.std::__1::unique_ptr.414"* %3 to i64*
  store i64 %32, i64* %35, align 8
  %36 = icmp eq %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %34, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %4
  %38 = bitcast %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %34 to void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)***
  %39 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %39, i64 2
  %41 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %40, align 8
  call void %41(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %34) #15
  br label %42

42:                                               ; preds = %37, %4
  %43 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %43, i64 0, i32 1, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #16
  br label %50

50:                                               ; preds = %42, %47
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #15
  %51 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %51, i64 0, i32 1, i32 1
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %50
  %56 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #16
  br label %58

58:                                               ; preds = %55, %50
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_114FunctionMirror17buildEntryPreviewEN2v85LocalINS2_7ContextEEEPiS6_PNSt3__110unique_ptrINS_8protocol7Runtime13ObjectPreviewENS7_14default_deleteISB_EEEE(%"class.v8_inspector::(anonymous namespace)::FunctionMirror"* nocapture readonly, %"class.v8::Context"* nocapture readnone, i32* nocapture readnone, i32* nocapture readnone, %"class.std::__1::unique_ptr.417"* nocapture) unnamed_addr #2 align 2 {
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = tail call i8* @_Znwm(i64 144) #16
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime13ObjectPreviewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = getelementptr inbounds i8, i8* %8, i64 48
  %12 = getelementptr inbounds i8, i8* %8, i64 88
  %13 = getelementptr inbounds i8, i8* %8, i64 128
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #15
  %14 = bitcast i8* %8 to %"class.v8_inspector::protocol::Runtime::ObjectPreview"*
  %15 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #15
  %16 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum8FunctionE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %6, i8* %16) #15
  %17 = bitcast i8* %10 to %"class.std::__1::basic_string"*
  %18 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 0
  %19 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %18) #15
  %20 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %6, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds i8, i8* %8, i64 32
  %23 = bitcast i8* %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #15
  %25 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::FunctionMirror", %"class.v8_inspector::(anonymous namespace)::FunctionMirror"* %0, i64 0, i32 1, i32 0
  %26 = load %"class.v8::Function"*, %"class.v8::Function"** %25, align 8
  %27 = bitcast %"class.v8::Function"* %26 to %"class.v8::Object"*
  %28 = call %"class.v8::Isolate"* @_ZN2v86Object10GetIsolateEv(%"class.v8::Object"* %27) #15, !noalias !691
  %29 = call %"class.v8::String"* @_ZN2v85debug22GetFunctionDescriptionENS_5LocalINS_8FunctionEEE(%"class.v8::Function"* %26) #15, !noalias !691
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %7, %"class.v8::Isolate"* %28, %"class.v8::String"* %29) #15
  call void @_ZN12v8_inspector8protocol7Runtime13ObjectPreview14setDescriptionERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::ObjectPreview"* nonnull %14, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %7) #15
  %30 = getelementptr inbounds i8, i8* %8, i64 120
  store i8 0, i8* %30, align 8
  %31 = call i8* @_Znwm(i64 24) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #15
  %32 = ptrtoint i8* %31 to i64
  %33 = bitcast i8* %13 to %"class.std::__1::vector.426"**
  %34 = load %"class.std::__1::vector.426"*, %"class.std::__1::vector.426"** %33, align 8
  %35 = bitcast i8* %13 to i64*
  store i64 %32, i64* %35, align 8
  %36 = icmp eq %"class.std::__1::vector.426"* %34, null
  br i1 %36, label %66, label %37

37:                                               ; preds = %5
  %38 = getelementptr inbounds %"class.std::__1::vector.426", %"class.std::__1::vector.426"* %34, i64 0, i32 0, i32 0
  %39 = load %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"** %38, align 8
  %40 = icmp eq %"class.std::__1::unique_ptr.414"* %39, null
  br i1 %40, label %64, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.std::__1::unique_ptr.414"* %39 to i8*
  %43 = getelementptr inbounds %"class.std::__1::vector.426", %"class.std::__1::vector.426"* %34, i64 0, i32 0, i32 1
  %44 = load %"class.std::__1::unique_ptr.414"*, %"class.std::__1::unique_ptr.414"** %43, align 8
  %45 = icmp eq %"class.std::__1::unique_ptr.414"* %44, %39
  br i1 %45, label %62, label %46

46:                                               ; preds = %41, %57
  %47 = phi %"class.std::__1::unique_ptr.414"* [ %48, %57 ], [ %44, %41 ]
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %47, i64 -1
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.v8_inspector::protocol::Runtime::PropertyPreview"*, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %49, align 8
  store %"class.v8_inspector::protocol::Runtime::PropertyPreview"* null, %"class.v8_inspector::protocol::Runtime::PropertyPreview"** %49, align 8
  %51 = icmp eq %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %46
  %53 = bitcast %"class.v8_inspector::protocol::Runtime::PropertyPreview"* %50 to void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)***
  %54 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %54, i64 2
  %56 = load void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::PropertyPreview"*)** %55, align 8
  call void %56(%"class.v8_inspector::protocol::Runtime::PropertyPreview"* nonnull %50) #15
  br label %57

57:                                               ; preds = %52, %46
  %58 = icmp eq %"class.std::__1::unique_ptr.414"* %48, %39
  br i1 %58, label %59, label %46

59:                                               ; preds = %57
  %60 = bitcast %"class.std::__1::vector.426"* %34 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %41
  %63 = phi i8* [ %61, %59 ], [ %42, %41 ]
  store %"class.std::__1::unique_ptr.414"* %39, %"class.std::__1::unique_ptr.414"** %43, align 8
  call void @_ZdlPv(i8* %63) #16
  br label %64

64:                                               ; preds = %62, %37
  %65 = bitcast %"class.std::__1::vector.426"* %34 to i8*
  call void @_ZdlPv(i8* %65) #16
  br label %66

66:                                               ; preds = %5, %64
  %67 = ptrtoint i8* %8 to i64
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.417"* %4, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.v8_inspector::protocol::Runtime::ObjectPreview"*, %"class.v8_inspector::protocol::Runtime::ObjectPreview"** %68, align 8
  %70 = bitcast %"class.std::__1::unique_ptr.417"* %4 to i64*
  store i64 %67, i64* %70, align 8
  %71 = icmp eq %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %69, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %66
  %73 = bitcast %"class.v8_inspector::protocol::Runtime::ObjectPreview"* %69 to void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)***
  %74 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)**, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %74, i64 2
  %76 = load void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)*, void (%"class.v8_inspector::protocol::Runtime::ObjectPreview"*)** %75, align 8
  call void %76(%"class.v8_inspector::protocol::Runtime::ObjectPreview"* nonnull %69) #15
  br label %77

77:                                               ; preds = %72, %66
  %78 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %78, i64 0, i32 1, i32 1
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %77
  %83 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %84 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %84) #16
  br label %85

85:                                               ; preds = %77, %82
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #15
  %86 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %86, i64 0, i32 1, i32 1
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %85
  %91 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %92 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %92) #16
  br label %93

93:                                               ; preds = %90, %85
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %"class.v8::Value"* @_ZNK12v8_inspector12_GLOBAL__N_114FunctionMirror7v8ValueEv(%"class.v8_inspector::(anonymous namespace)::FunctionMirror"* nocapture readonly) unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::FunctionMirror", %"class.v8_inspector::(anonymous namespace)::FunctionMirror"* %0, i64 0, i32 1, i32 0
  %3 = bitcast %"class.v8::Function"** %2 to %"class.v8::Value"**
  %4 = load %"class.v8::Value"*, %"class.v8::Value"** %3, align 8
  ret %"class.v8::Value"* %4
}

declare %"class.v8::Isolate"* @_ZN2v86Object10GetIsolateEv(%"class.v8::Object"*) local_unnamed_addr #4

declare %"class.v8::String"* @_ZN2v85debug22GetFunctionDescriptionENS_5LocalINS_8FunctionEEE(%"class.v8::Function"*) local_unnamed_addr #4

attributes #0 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { cold noreturn nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForSymbolEN2v85LocalINS1_7ContextEEENS2_INS1_6SymbolEEE: argument 0"}
!5 = distinct !{!5, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForSymbolEN2v85LocalINS1_7ContextEEENS2_INS1_6SymbolEEE"}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{i8 0, i8 2}
!8 = !{!9}
!9 = distinct !{!9, !10}
!10 = distinct !{!10, !"LVerDomain"}
!11 = !{!12}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
!17 = distinct !{!17, !16}
!18 = distinct !{!18, !14}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForRegExpEN2v85LocalINS1_7ContextEEENS2_INS1_6RegExpEEE: argument 0"}
!21 = distinct !{!21, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForRegExpEN2v85LocalINS1_7ContextEEENS2_INS1_6RegExpEEE"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE: argument 0"}
!24 = distinct !{!24, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN12v8_inspector12_GLOBAL__N_118descriptionForDateEN2v85LocalINS1_7ContextEEENS2_INS1_4DateEEE: argument 0"}
!27 = distinct !{!27, !"_ZN12v8_inspector12_GLOBAL__N_118descriptionForDateEN2v85LocalINS1_7ContextEEENS2_INS1_4DateEEE"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE: argument 0"}
!30 = distinct !{!30, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE: argument 0"}
!33 = distinct !{!33, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE: argument 0"}
!36 = distinct !{!36, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE: argument 0"}
!39 = distinct !{!39, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE: argument 0"}
!42 = distinct !{!42, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE: argument 0"}
!45 = distinct !{!45, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN12v8_inspector12_GLOBAL__N_129descriptionForWasmValueObjectEN2v85LocalINS1_7ContextEEENS2_INS1_5debug15WasmValueObjectEEE: argument 0"}
!48 = distinct !{!48, !"_ZN12v8_inspector12_GLOBAL__N_129descriptionForWasmValueObjectEN2v85LocalINS1_7ContextEEENS2_INS1_5debug15WasmValueObjectEEE"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN12v8_inspector12_GLOBAL__N_123descriptionForScopeListEN2v85LocalINS1_5ArrayEEE: argument 0"}
!51 = distinct !{!51, !"_ZN12v8_inspector12_GLOBAL__N_123descriptionForScopeListEN2v85LocalINS1_5ArrayEEE"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN12v8_inspector12_GLOBAL__N_119descriptionForEntryEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEE: argument 0"}
!54 = distinct !{!54, !"_ZN12v8_inspector12_GLOBAL__N_119descriptionForEntryEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEE"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZN12v8_inspector8protocol7Runtime13ObjectPreview14getDescriptionERKNS_8String16E: argument 0"}
!57 = distinct !{!57, !"_ZN12v8_inspector8protocol7Runtime13ObjectPreview14getDescriptionERKNS_8String16E"}
!58 = !{!59}
!59 = distinct !{!59, !60}
!60 = distinct !{!60, !"LVerDomain"}
!61 = !{!62}
!62 = distinct !{!62, !60}
!63 = !{!53, !59}
!64 = distinct !{!64, !14}
!65 = distinct !{!65, !16}
!66 = distinct !{!66, !16}
!67 = distinct !{!67, !14}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN12v8_inspector8protocol7Runtime13ObjectPreview7getTypeEv: argument 0"}
!70 = distinct !{!70, !"_ZN12v8_inspector8protocol7Runtime13ObjectPreview7getTypeEv"}
!71 = !{!72}
!72 = distinct !{!72, !73}
!73 = distinct !{!73, !"LVerDomain"}
!74 = !{!75}
!75 = distinct !{!75, !73}
!76 = !{!53, !72}
!77 = distinct !{!77, !14}
!78 = distinct !{!78, !16}
!79 = distinct !{!79, !16}
!80 = distinct !{!80, !14}
!81 = !{!82}
!82 = distinct !{!82, !83}
!83 = distinct !{!83, !"LVerDomain"}
!84 = !{!85}
!85 = distinct !{!85, !83}
!86 = !{!53, !82}
!87 = distinct !{!87, !14}
!88 = distinct !{!88, !16}
!89 = distinct !{!89, !16}
!90 = distinct !{!90, !14}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZN12v8_inspector8protocol7Runtime13ObjectPreview14getDescriptionERKNS_8String16E: argument 0"}
!93 = distinct !{!93, !"_ZN12v8_inspector8protocol7Runtime13ObjectPreview14getDescriptionERKNS_8String16E"}
!94 = !{!95}
!95 = distinct !{!95, !96}
!96 = distinct !{!96, !"LVerDomain"}
!97 = !{!98}
!98 = distinct !{!98, !96}
!99 = !{!53, !95}
!100 = distinct !{!100, !14}
!101 = distinct !{!101, !16}
!102 = distinct !{!102, !16}
!103 = distinct !{!103, !14}
!104 = !{!105}
!105 = distinct !{!105, !106, !"_ZN12v8_inspector8protocol7Runtime13ObjectPreview7getTypeEv: argument 0"}
!106 = distinct !{!106, !"_ZN12v8_inspector8protocol7Runtime13ObjectPreview7getTypeEv"}
!107 = !{!108}
!108 = distinct !{!108, !109}
!109 = distinct !{!109, !"LVerDomain"}
!110 = !{!111}
!111 = distinct !{!111, !109}
!112 = !{!53, !108}
!113 = distinct !{!113, !14}
!114 = distinct !{!114, !16}
!115 = distinct !{!115, !16}
!116 = distinct !{!116, !14}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121}
!121 = distinct !{!121, !119}
!122 = !{!53, !118}
!123 = distinct !{!123, !14}
!124 = distinct !{!124, !16}
!125 = distinct !{!125, !16}
!126 = distinct !{!126, !14}
!127 = !{!128, !53}
!128 = distinct !{!128, !129, !"_ZN12v8_inspectorplEPKcRKNS_8String16E: argument 0"}
!129 = distinct !{!129, !"_ZN12v8_inspectorplEPKcRKNS_8String16E"}
!130 = !{!128}
!131 = !{!132, !128, !53}
!132 = distinct !{!132, !133, !"_ZNK12v8_inspector8String16plERKS0_: argument 0"}
!133 = distinct !{!133, !"_ZNK12v8_inspector8String16plERKS0_"}
!134 = !{!132, !128}
!135 = !{!136, !53}
!136 = distinct !{!136, !137, !"_ZNK12v8_inspector8String16plERKS0_: argument 0"}
!137 = distinct !{!137, !"_ZNK12v8_inspector8String16plERKS0_"}
!138 = !{!136}
!139 = !{!140, !53}
!140 = distinct !{!140, !141, !"_ZNK12v8_inspector8String16plERKS0_: argument 0"}
!141 = distinct !{!141, !"_ZNK12v8_inspector8String16plERKS0_"}
!142 = !{!140}
!143 = !{!144, !53}
!144 = distinct !{!144, !145, !"_ZNK12v8_inspector8String16plERKS0_: argument 0"}
!145 = distinct !{!145, !"_ZNK12v8_inspector8String16plERKS0_"}
!146 = !{!144}
!147 = !{!148}
!148 = distinct !{!148, !149}
!149 = distinct !{!149, !"LVerDomain"}
!150 = !{!151}
!151 = distinct !{!151, !149}
!152 = distinct !{!152, !14}
!153 = distinct !{!153, !16}
!154 = distinct !{!154, !16}
!155 = distinct !{!155, !14}
!156 = !{!157}
!157 = distinct !{!157, !158, !"_ZN12v8_inspector12_GLOBAL__N_119descriptionForScopeEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEE: argument 0"}
!158 = distinct !{!158, !"_ZN12v8_inspector12_GLOBAL__N_119descriptionForScopeEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEE"}
!159 = !{!160}
!160 = distinct !{!160, !161, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE: argument 0"}
!161 = distinct !{!161, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE"}
!162 = !{!163}
!163 = distinct !{!163, !164}
!164 = distinct !{!164, !"LVerDomain"}
!165 = !{!166}
!166 = distinct !{!166, !164}
!167 = distinct !{!167, !14}
!168 = distinct !{!168, !16}
!169 = distinct !{!169, !16}
!170 = distinct !{!170, !14}
!171 = !{!172}
!172 = distinct !{!172, !173}
!173 = distinct !{!173, !"LVerDomain"}
!174 = !{!175}
!175 = distinct !{!175, !173}
!176 = distinct !{!176, !14}
!177 = distinct !{!177, !16}
!178 = distinct !{!178, !16}
!179 = distinct !{!179, !14}
!180 = !{!181}
!181 = distinct !{!181, !182}
!182 = distinct !{!182, !"LVerDomain"}
!183 = !{!184}
!184 = distinct !{!184, !182}
!185 = distinct !{!185, !14}
!186 = distinct !{!186, !16}
!187 = distinct !{!187, !16}
!188 = distinct !{!188, !14}
!189 = !{!190}
!190 = distinct !{!190, !191}
!191 = distinct !{!191, !"LVerDomain"}
!192 = !{!193}
!193 = distinct !{!193, !191}
!194 = distinct !{!194, !14}
!195 = distinct !{!195, !16}
!196 = distinct !{!196, !16}
!197 = distinct !{!197, !14}
!198 = !{!199}
!199 = distinct !{!199, !200}
!200 = distinct !{!200, !"LVerDomain"}
!201 = !{!202}
!202 = distinct !{!202, !200}
!203 = distinct !{!203, !14}
!204 = distinct !{!204, !16}
!205 = distinct !{!205, !16}
!206 = distinct !{!206, !14}
!207 = !{!208}
!208 = distinct !{!208, !209}
!209 = distinct !{!209, !"LVerDomain"}
!210 = !{!211}
!211 = distinct !{!211, !209}
!212 = distinct !{!212, !14}
!213 = distinct !{!213, !16}
!214 = distinct !{!214, !16}
!215 = distinct !{!215, !14}
!216 = !{!217}
!217 = distinct !{!217, !218}
!218 = distinct !{!218, !"LVerDomain"}
!219 = !{!220}
!220 = distinct !{!220, !218}
!221 = distinct !{!221, !14}
!222 = distinct !{!222, !16}
!223 = distinct !{!223, !16}
!224 = distinct !{!224, !14}
!225 = !{!226}
!226 = distinct !{!226, !227}
!227 = distinct !{!227, !"LVerDomain"}
!228 = !{!229}
!229 = distinct !{!229, !227}
!230 = distinct !{!230, !14}
!231 = distinct !{!231, !16}
!232 = distinct !{!232, !16}
!233 = distinct !{!233, !14}
!234 = !{!235}
!235 = distinct !{!235, !236, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE: argument 0"}
!236 = distinct !{!236, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForObjectEPN2v87IsolateENS1_5LocalINS1_6ObjectEEE"}
!237 = !{!238}
!238 = distinct !{!238, !239}
!239 = distinct !{!239, !"LVerDomain"}
!240 = !{!241}
!241 = distinct !{!241, !239}
!242 = distinct !{!242, !14}
!243 = distinct !{!243, !16}
!244 = distinct !{!244, !16}
!245 = distinct !{!245, !14}
!246 = !{!247}
!247 = distinct !{!247, !248}
!248 = distinct !{!248, !"LVerDomain"}
!249 = !{!250}
!250 = distinct !{!250, !248}
!251 = distinct !{!251, !14}
!252 = distinct !{!252, !16}
!253 = distinct !{!253, !16}
!254 = distinct !{!254, !14}
!255 = !{!256}
!256 = distinct !{!256, !257}
!257 = distinct !{!257, !"LVerDomain"}
!258 = !{!259}
!259 = distinct !{!259, !257}
!260 = distinct !{!260, !14}
!261 = distinct !{!261, !16}
!262 = distinct !{!262, !16}
!263 = distinct !{!263, !14}
!264 = !{!265}
!265 = distinct !{!265, !266}
!266 = distinct !{!266, !"LVerDomain"}
!267 = !{!268}
!268 = distinct !{!268, !266}
!269 = distinct !{!269, !14}
!270 = distinct !{!270, !16}
!271 = distinct !{!271, !16}
!272 = distinct !{!272, !14}
!273 = !{!274}
!274 = distinct !{!274, !275}
!275 = distinct !{!275, !"LVerDomain"}
!276 = !{!277}
!277 = distinct !{!277, !275}
!278 = distinct !{!278, !14}
!279 = distinct !{!279, !16}
!280 = distinct !{!280, !16}
!281 = distinct !{!281, !14}
!282 = !{!283}
!283 = distinct !{!283, !284, !"_ZNK12v8_inspector8String16plERKS0_: argument 0"}
!284 = distinct !{!284, !"_ZNK12v8_inspector8String16plERKS0_"}
!285 = !{!286}
!286 = distinct !{!286, !287, !"_ZNK12v8_inspector8String16plERKS0_: argument 0"}
!287 = distinct !{!287, !"_ZNK12v8_inspector8String16plERKS0_"}
!288 = !{!289}
!289 = distinct !{!289, !290, !"_ZNK12v8_inspector8String16plERKS0_: argument 0"}
!290 = distinct !{!290, !"_ZNK12v8_inspector8String16plERKS0_"}
!291 = !{!292}
!292 = distinct !{!292, !293}
!293 = distinct !{!293, !"LVerDomain"}
!294 = !{!295}
!295 = distinct !{!295, !293}
!296 = distinct !{!296, !14}
!297 = distinct !{!297, !16}
!298 = distinct !{!298, !16}
!299 = distinct !{!299, !14}
!300 = !{!301}
!301 = distinct !{!301, !302}
!302 = distinct !{!302, !"LVerDomain"}
!303 = !{!304}
!304 = distinct !{!304, !302}
!305 = distinct !{!305, !14}
!306 = distinct !{!306, !16}
!307 = distinct !{!307, !16}
!308 = distinct !{!308, !14}
!309 = !{!310}
!310 = distinct !{!310, !311}
!311 = distinct !{!311, !"LVerDomain"}
!312 = !{!313}
!313 = distinct !{!313, !311}
!314 = distinct !{!314, !14}
!315 = distinct !{!315, !16}
!316 = distinct !{!316, !16}
!317 = distinct !{!317, !14}
!318 = !{!319}
!319 = distinct !{!319, !320}
!320 = distinct !{!320, !"LVerDomain"}
!321 = !{!322}
!322 = distinct !{!322, !320}
!323 = distinct !{!323, !14}
!324 = distinct !{!324, !16}
!325 = distinct !{!325, !16}
!326 = distinct !{!326, !14}
!327 = !{!328}
!328 = distinct !{!328, !329}
!329 = distinct !{!329, !"LVerDomain"}
!330 = !{!331}
!331 = distinct !{!331, !329}
!332 = distinct !{!332, !14}
!333 = distinct !{!333, !16}
!334 = distinct !{!334, !16}
!335 = distinct !{!335, !14}
!336 = !{!337}
!337 = distinct !{!337, !338}
!338 = distinct !{!338, !"LVerDomain"}
!339 = !{!340}
!340 = distinct !{!340, !338}
!341 = distinct !{!341, !14}
!342 = distinct !{!342, !16}
!343 = distinct !{!343, !16}
!344 = distinct !{!344, !14}
!345 = !{!346}
!346 = distinct !{!346, !347}
!347 = distinct !{!347, !"LVerDomain"}
!348 = !{!349}
!349 = distinct !{!349, !347}
!350 = distinct !{!350, !14}
!351 = distinct !{!351, !16}
!352 = distinct !{!352, !16}
!353 = distinct !{!353, !14}
!354 = !{!355}
!355 = distinct !{!355, !356}
!356 = distinct !{!356, !"LVerDomain"}
!357 = !{!358}
!358 = distinct !{!358, !356}
!359 = distinct !{!359, !14}
!360 = distinct !{!360, !16}
!361 = distinct !{!361, !16}
!362 = distinct !{!362, !14}
!363 = distinct !{!363, !14}
!364 = distinct !{!364, !16}
!365 = distinct !{!365, !366, !14}
!366 = !{!"llvm.loop.unroll.runtime.disable"}
!367 = !{!368}
!368 = distinct !{!368, !369}
!369 = distinct !{!369, !"LVerDomain"}
!370 = !{!371}
!371 = distinct !{!371, !369}
!372 = distinct !{!372, !14}
!373 = distinct !{!373, !16}
!374 = distinct !{!374, !16}
!375 = distinct !{!375, !14}
!376 = !{!377}
!377 = distinct !{!377, !378}
!378 = distinct !{!378, !"LVerDomain"}
!379 = !{!380}
!380 = distinct !{!380, !378}
!381 = distinct !{!381, !14}
!382 = distinct !{!382, !16}
!383 = distinct !{!383, !16}
!384 = distinct !{!384, !14}
!385 = !{!386}
!386 = distinct !{!386, !387}
!387 = distinct !{!387, !"LVerDomain"}
!388 = !{!389}
!389 = distinct !{!389, !387}
!390 = distinct !{!390, !14}
!391 = distinct !{!391, !16}
!392 = distinct !{!392, !16}
!393 = distinct !{!393, !14}
!394 = !{!395}
!395 = distinct !{!395, !396, !"_ZNKSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE6substrEmm: argument 0"}
!396 = distinct !{!396, !"_ZNKSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE6substrEmm"}
!397 = !{!398}
!398 = distinct !{!398, !399}
!399 = distinct !{!399, !"LVerDomain"}
!400 = !{!401}
!401 = distinct !{!401, !399}
!402 = distinct !{!402, !14}
!403 = distinct !{!403, !16}
!404 = distinct !{!404, !16}
!405 = distinct !{!405, !14}
!406 = !{!407}
!407 = distinct !{!407, !408}
!408 = distinct !{!408, !"LVerDomain"}
!409 = !{!410}
!410 = distinct !{!410, !408}
!411 = distinct !{!411, !14}
!412 = distinct !{!412, !16}
!413 = distinct !{!413, !16}
!414 = distinct !{!414, !14}
!415 = !{!416}
!416 = distinct !{!416, !417}
!417 = distinct !{!417, !"LVerDomain"}
!418 = !{!419}
!419 = distinct !{!419, !417}
!420 = distinct !{!420, !14}
!421 = distinct !{!421, !16}
!422 = distinct !{!422, !16}
!423 = distinct !{!423, !14}
!424 = !{!425}
!425 = distinct !{!425, !426}
!426 = distinct !{!426, !"LVerDomain"}
!427 = !{!428}
!428 = distinct !{!428, !426}
!429 = distinct !{!429, !14}
!430 = distinct !{!430, !16}
!431 = distinct !{!431, !16}
!432 = distinct !{!432, !14}
!433 = !{!434}
!434 = distinct !{!434, !435}
!435 = distinct !{!435, !"LVerDomain"}
!436 = !{!437}
!437 = distinct !{!437, !435}
!438 = distinct !{!438, !14}
!439 = distinct !{!439, !16}
!440 = distinct !{!440, !16}
!441 = distinct !{!441, !14}
!442 = !{!443}
!443 = distinct !{!443, !444}
!444 = distinct !{!444, !"LVerDomain"}
!445 = !{!446}
!446 = distinct !{!446, !444}
!447 = distinct !{!447, !14}
!448 = distinct !{!448, !16}
!449 = distinct !{!449, !16}
!450 = distinct !{!450, !14}
!451 = !{!452}
!452 = distinct !{!452, !453}
!453 = distinct !{!453, !"LVerDomain"}
!454 = !{!455}
!455 = distinct !{!455, !453}
!456 = distinct !{!456, !14}
!457 = distinct !{!457, !16}
!458 = distinct !{!458, !16}
!459 = distinct !{!459, !14}
!460 = !{!461}
!461 = distinct !{!461, !462}
!462 = distinct !{!462, !"LVerDomain"}
!463 = !{!464}
!464 = distinct !{!464, !462}
!465 = distinct !{!465, !14}
!466 = distinct !{!466, !16}
!467 = distinct !{!467, !16}
!468 = distinct !{!468, !14}
!469 = !{!470}
!470 = distinct !{!470, !471}
!471 = distinct !{!471, !"LVerDomain"}
!472 = !{!473}
!473 = distinct !{!473, !471}
!474 = distinct !{!474, !14}
!475 = distinct !{!475, !16}
!476 = distinct !{!476, !16}
!477 = distinct !{!477, !14}
!478 = !{!479}
!479 = distinct !{!479, !480}
!480 = distinct !{!480, !"LVerDomain"}
!481 = !{!482}
!482 = distinct !{!482, !480}
!483 = distinct !{!483, !14}
!484 = distinct !{!484, !16}
!485 = distinct !{!485, !16}
!486 = distinct !{!486, !14}
!487 = !{!488}
!488 = distinct !{!488, !489}
!489 = distinct !{!489, !"LVerDomain"}
!490 = !{!491}
!491 = distinct !{!491, !489}
!492 = distinct !{!492, !14}
!493 = distinct !{!493, !16}
!494 = distinct !{!494, !16}
!495 = distinct !{!495, !14}
!496 = !{!497}
!497 = distinct !{!497, !498}
!498 = distinct !{!498, !"LVerDomain"}
!499 = !{!500}
!500 = distinct !{!500, !498}
!501 = distinct !{!501, !14}
!502 = distinct !{!502, !16}
!503 = distinct !{!503, !16}
!504 = distinct !{!504, !14}
!505 = !{!506}
!506 = distinct !{!506, !507}
!507 = distinct !{!507, !"LVerDomain"}
!508 = !{!509}
!509 = distinct !{!509, !507}
!510 = distinct !{!510, !14}
!511 = distinct !{!511, !16}
!512 = distinct !{!512, !16}
!513 = distinct !{!513, !14}
!514 = !{!515}
!515 = distinct !{!515, !516, !"_ZN12v8_inspector12_GLOBAL__N_115toProtocolValueEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEEPNSt3__110unique_ptrINS_8protocol5ValueENS7_14default_deleteISA_EEEE: argument 0"}
!516 = distinct !{!516, !"_ZN12v8_inspector12_GLOBAL__N_115toProtocolValueEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEEPNSt3__110unique_ptrINS_8protocol5ValueENS7_14default_deleteISA_EEEE"}
!517 = !{!518}
!518 = distinct !{!518, !519}
!519 = distinct !{!519, !"LVerDomain"}
!520 = !{!521}
!521 = distinct !{!521, !519}
!522 = distinct !{!522, !14}
!523 = distinct !{!523, !16}
!524 = distinct !{!524, !16}
!525 = distinct !{!525, !14}
!526 = !{!527}
!527 = distinct !{!527, !528}
!528 = distinct !{!528, !"LVerDomain"}
!529 = !{!530}
!530 = distinct !{!530, !528}
!531 = distinct !{!531, !14}
!532 = distinct !{!532, !16}
!533 = distinct !{!533, !16}
!534 = distinct !{!534, !14}
!535 = !{!536}
!536 = distinct !{!536, !537}
!537 = distinct !{!537, !"LVerDomain"}
!538 = !{!539}
!539 = distinct !{!539, !537}
!540 = distinct !{!540, !14}
!541 = distinct !{!541, !16}
!542 = distinct !{!542, !16}
!543 = distinct !{!543, !14}
!544 = !{!545}
!545 = distinct !{!545, !546}
!546 = distinct !{!546, !"LVerDomain"}
!547 = !{!548}
!548 = distinct !{!548, !546}
!549 = distinct !{!549, !14}
!550 = distinct !{!550, !16}
!551 = distinct !{!551, !16}
!552 = distinct !{!552, !14}
!553 = !{!554}
!554 = distinct !{!554, !555}
!555 = distinct !{!555, !"LVerDomain"}
!556 = !{!557}
!557 = distinct !{!557, !555}
!558 = distinct !{!558, !14}
!559 = distinct !{!559, !16}
!560 = distinct !{!560, !16}
!561 = distinct !{!561, !14}
!562 = !{!563}
!563 = distinct !{!563, !564}
!564 = distinct !{!564, !"LVerDomain"}
!565 = !{!566}
!566 = distinct !{!566, !564}
!567 = distinct !{!567, !14}
!568 = distinct !{!568, !16}
!569 = distinct !{!569, !16}
!570 = distinct !{!570, !14}
!571 = !{!572}
!572 = distinct !{!572, !573}
!573 = distinct !{!573, !"LVerDomain"}
!574 = !{!575}
!575 = distinct !{!575, !573}
!576 = distinct !{!576, !14}
!577 = distinct !{!577, !16}
!578 = distinct !{!578, !16}
!579 = distinct !{!579, !14}
!580 = !{!581}
!581 = distinct !{!581, !582}
!582 = distinct !{!582, !"LVerDomain"}
!583 = !{!584}
!584 = distinct !{!584, !582}
!585 = distinct !{!585, !14}
!586 = distinct !{!586, !16}
!587 = distinct !{!587, !16}
!588 = distinct !{!588, !14}
!589 = !{!590}
!590 = distinct !{!590, !591}
!591 = distinct !{!591, !"LVerDomain"}
!592 = !{!593}
!593 = distinct !{!593, !591}
!594 = distinct !{!594, !14}
!595 = distinct !{!595, !16}
!596 = distinct !{!596, !16}
!597 = distinct !{!597, !14}
!598 = !{!599}
!599 = distinct !{!599, !600}
!600 = distinct !{!600, !"LVerDomain"}
!601 = !{!602}
!602 = distinct !{!602, !600}
!603 = distinct !{!603, !14}
!604 = distinct !{!604, !16}
!605 = distinct !{!605, !16}
!606 = distinct !{!606, !14}
!607 = !{!608}
!608 = distinct !{!608, !609}
!609 = distinct !{!609, !"LVerDomain"}
!610 = !{!611}
!611 = distinct !{!611, !609}
!612 = distinct !{!612, !14}
!613 = distinct !{!613, !16}
!614 = distinct !{!614, !16}
!615 = distinct !{!615, !14}
!616 = !{!617}
!617 = distinct !{!617, !618}
!618 = distinct !{!618, !"LVerDomain"}
!619 = !{!620}
!620 = distinct !{!620, !618}
!621 = distinct !{!621, !14}
!622 = distinct !{!622, !16}
!623 = distinct !{!623, !16}
!624 = distinct !{!624, !14}
!625 = !{!626}
!626 = distinct !{!626, !627}
!627 = distinct !{!627, !"LVerDomain"}
!628 = !{!629}
!629 = distinct !{!629, !627}
!630 = distinct !{!630, !14}
!631 = distinct !{!631, !16}
!632 = distinct !{!632, !16}
!633 = distinct !{!633, !14}
!634 = distinct !{!634, !16}
!635 = !{!636}
!636 = distinct !{!636, !637}
!637 = distinct !{!637, !"LVerDomain"}
!638 = !{!639}
!639 = distinct !{!639, !637}
!640 = distinct !{!640, !14}
!641 = distinct !{!641, !16}
!642 = distinct !{!642, !16}
!643 = distinct !{!643, !14}
!644 = distinct !{!644, !16}
!645 = distinct !{!645, !16}
!646 = !{!647}
!647 = distinct !{!647, !648}
!648 = distinct !{!648, !"LVerDomain"}
!649 = !{!650}
!650 = distinct !{!650, !648}
!651 = distinct !{!651, !14}
!652 = distinct !{!652, !16}
!653 = distinct !{!653, !16}
!654 = distinct !{!654, !14}
!655 = !{!656}
!656 = distinct !{!656, !657, !"_ZN12v8_inspector12_GLOBAL__N_115toProtocolValueEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEEPNSt3__110unique_ptrINS_8protocol5ValueENS7_14default_deleteISA_EEEE: argument 0"}
!657 = distinct !{!657, !"_ZN12v8_inspector12_GLOBAL__N_115toProtocolValueEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEEPNSt3__110unique_ptrINS_8protocol5ValueENS7_14default_deleteISA_EEEE"}
!658 = !{!659}
!659 = distinct !{!659, !660, !"_ZNK12v8_inspector12_GLOBAL__N_112NumberMirror11descriptionEPb: argument 0"}
!660 = distinct !{!660, !"_ZNK12v8_inspector12_GLOBAL__N_112NumberMirror11descriptionEPb"}
!661 = !{!662}
!662 = distinct !{!662, !663, !"_ZNK12v8_inspector12_GLOBAL__N_112NumberMirror11descriptionEPb: argument 0"}
!663 = distinct !{!663, !"_ZNK12v8_inspector12_GLOBAL__N_112NumberMirror11descriptionEPb"}
!664 = !{!665}
!665 = distinct !{!665, !666, !"_ZNK12v8_inspector12_GLOBAL__N_112NumberMirror11descriptionEPb: argument 0"}
!666 = distinct !{!666, !"_ZNK12v8_inspector12_GLOBAL__N_112NumberMirror11descriptionEPb"}
!667 = !{!668}
!668 = distinct !{!668, !669}
!669 = distinct !{!669, !"LVerDomain"}
!670 = !{!671}
!671 = distinct !{!671, !669}
!672 = distinct !{!672, !14}
!673 = distinct !{!673, !16}
!674 = distinct !{!674, !16}
!675 = distinct !{!675, !14}
!676 = !{!677}
!677 = distinct !{!677, !678, !"_ZNK12v8_inspector8String16plERKS0_: argument 0"}
!678 = distinct !{!678, !"_ZNK12v8_inspector8String16plERKS0_"}
!679 = !{!680}
!680 = distinct !{!680, !681, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForSymbolEN2v85LocalINS1_7ContextEEENS2_INS1_6SymbolEEE: argument 0"}
!681 = distinct !{!681, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForSymbolEN2v85LocalINS1_7ContextEEENS2_INS1_6SymbolEEE"}
!682 = !{!683}
!683 = distinct !{!683, !684, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForSymbolEN2v85LocalINS1_7ContextEEENS2_INS1_6SymbolEEE: argument 0"}
!684 = distinct !{!684, !"_ZN12v8_inspector12_GLOBAL__N_120descriptionForSymbolEN2v85LocalINS1_7ContextEEENS2_INS1_6SymbolEEE"}
!685 = !{!686}
!686 = distinct !{!686, !687, !"_ZN12v8_inspector12_GLOBAL__N_115toProtocolValueEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEEPNSt3__110unique_ptrINS_8protocol5ValueENS7_14default_deleteISA_EEEE: argument 0"}
!687 = distinct !{!687, !"_ZN12v8_inspector12_GLOBAL__N_115toProtocolValueEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEEPNSt3__110unique_ptrINS_8protocol5ValueENS7_14default_deleteISA_EEEE"}
!688 = !{!689}
!689 = distinct !{!689, !690, !"_ZN12v8_inspector12_GLOBAL__N_122descriptionForFunctionEN2v85LocalINS1_8FunctionEEE: argument 0"}
!690 = distinct !{!690, !"_ZN12v8_inspector12_GLOBAL__N_122descriptionForFunctionEN2v85LocalINS1_8FunctionEEE"}
!691 = !{!692}
!692 = distinct !{!692, !693, !"_ZN12v8_inspector12_GLOBAL__N_122descriptionForFunctionEN2v85LocalINS1_8FunctionEEE: argument 0"}
!693 = distinct !{!693, !"_ZN12v8_inspector12_GLOBAL__N_122descriptionForFunctionEN2v85LocalINS1_8FunctionEEE"}
