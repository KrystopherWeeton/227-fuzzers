; ModuleID = '../../third_party/pdfium/core/fpdfdoc/cpdf_iconfit.cpp'
source_filename = "../../third_party/pdfium/core/fpdfdoc/cpdf_iconfit.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_IconFit = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.0" }
%"class.fxcrt::RetainPtr.0" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.30" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.33", %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.48", [4 x i8] }>
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35", %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.13" }
%"class.fxcrt::RetainPtr.13" = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%class.CFX_PTemplate = type { float, float }
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.fxcrt::RetainPtr.19"*, %"class.fxcrt::RetainPtr.19"*, %"class.std::__1::__compressed_pair.25" }
%"class.fxcrt::RetainPtr.19" = type { %"class.std::__1::unique_ptr.20" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %class.CPDF_Object* }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.fxcrt::RetainPtr.19"* }
%class.CFX_VTemplate = type { %class.CFX_PTemplate }
%class.CFX_STemplate = type { float, float }
%class.CFX_FloatRect = type { float, float, float, float }

@.str = private unnamed_addr constant [3 x i8] c"SW\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"N\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"P\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"FB\00", align 1

@_ZN12CPDF_IconFitC1EPK15CPDF_Dictionary = hidden unnamed_addr alias void (%class.CPDF_IconFit*, %class.CPDF_Dictionary*), void (%class.CPDF_IconFit*, %class.CPDF_Dictionary*)* @_ZN12CPDF_IconFitC2EPK15CPDF_Dictionary
@_ZN12CPDF_IconFitC1ERKS_ = hidden unnamed_addr alias void (%class.CPDF_IconFit*, %class.CPDF_IconFit*), void (%class.CPDF_IconFit*, %class.CPDF_IconFit*)* @_ZN12CPDF_IconFitC2ERKS_
@_ZN12CPDF_IconFitD1Ev = hidden unnamed_addr alias void (%class.CPDF_IconFit*), void (%class.CPDF_IconFit*)* @_ZN12CPDF_IconFitD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN12CPDF_IconFitC2EPK15CPDF_Dictionary(%class.CPDF_IconFit* nocapture, %class.CPDF_Dictionary*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %class.CPDF_Dictionary* %1 to i64
  %4 = bitcast %class.CPDF_IconFit* %0 to i64*
  store i64 %3, i64* %4, align 8
  %5 = icmp eq %class.CPDF_Dictionary* %1, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, 1
  store i64 %9, i64* %7, align 8
  br label %10

10:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN12CPDF_IconFitC2ERKS_(%class.CPDF_IconFit* nocapture, %class.CPDF_IconFit* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_IconFit, %class.CPDF_IconFit* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %3, align 8
  %5 = ptrtoint %class.CPDF_Dictionary* %4 to i64
  %6 = bitcast %class.CPDF_IconFit* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = icmp eq %class.CPDF_Dictionary* %4, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %4, i64 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %10, 1
  store i64 %11, i64* %9, align 8
  br label %12

12:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CPDF_IconFitD2Ev(%class.CPDF_IconFit* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPDF_IconFit, %class.CPDF_IconFit* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %2, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %2, align 8
  %4 = icmp eq %class.CPDF_Dictionary* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %3, i64 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %3, i64 0, i32 0, i32 0
  %12 = bitcast %class.CPDF_Dictionary* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #5
  br label %16

16:                                               ; preds = %1, %5, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK12CPDF_IconFit14GetScaleMethodEv(%class.CPDF_IconFit* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = getelementptr inbounds %class.CPDF_IconFit, %class.CPDF_IconFit* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %5, align 8
  %7 = icmp eq %class.CPDF_Dictionary* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  %10 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %10, align 8
  %11 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #5
  %12 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #5
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringES3_(%"class.fxcrt::ByteString"* nonnull sret %2, %class.CPDF_Dictionary* nonnull %6, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #5
  %13 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #5
  br i1 %13, label %19, label %14

14:                                               ; preds = %8
  %15 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #5
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  %17 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #5
  %18 = select i1 %17, i32 3, i32 0
  br label %19

19:                                               ; preds = %16, %14, %8
  %20 = phi i32 [ 1, %8 ], [ 2, %14 ], [ %18, %16 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  br label %21

21:                                               ; preds = %1, %19
  %22 = phi i32 [ %20, %19 ], [ 0, %1 ]
  ret i32 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringES3_(%"class.fxcrt::ByteString"* sret, %class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12CPDF_IconFit19IsProportionalScaleEv(%class.CPDF_IconFit* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = getelementptr inbounds %class.CPDF_IconFit, %class.CPDF_IconFit* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %5, align 8
  %7 = icmp eq %class.CPDF_Dictionary* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  %10 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #5
  %11 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #5
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringES3_(%"class.fxcrt::ByteString"* nonnull sret %2, %class.CPDF_Dictionary* nonnull %6, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4) #5
  %12 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #5
  %13 = xor i1 %12, true
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  br label %14

14:                                               ; preds = %1, %8
  %15 = phi i1 [ %13, %8 ], [ true, %1 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12CPDF_IconFit25GetIconBottomLeftPositionEv(%class.CFX_PTemplate* noalias nocapture sret, %class.CPDF_IconFit* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = getelementptr inbounds %class.CPDF_IconFit, %class.CPDF_IconFit* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %4, align 8
  %6 = icmp eq %class.CPDF_Dictionary* %5, null
  br i1 %6, label %26, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #5
  %9 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %5, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #5
  %10 = icmp eq %class.CPDF_Array* %9, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %9, i64 0, i32 1
  %13 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %9, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast %"class.fxcrt::RetainPtr.19"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %11
  %21 = ashr exact i64 %18, 3
  %22 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %9, i64 0) #5
  %23 = icmp ugt i64 %21, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %9, i64 1) #5
  br label %26

26:                                               ; preds = %20, %24, %11, %7, %2
  %27 = phi float [ 5.000000e-01, %2 ], [ 5.000000e-01, %7 ], [ %22, %24 ], [ %22, %20 ], [ 5.000000e-01, %11 ]
  %28 = phi float [ 5.000000e-01, %2 ], [ 5.000000e-01, %7 ], [ %25, %24 ], [ 5.000000e-01, %20 ], [ 5.000000e-01, %11 ]
  %29 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 0
  store float %27, float* %29, align 4
  %30 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 1
  store float %28, float* %30, align 4
  ret void
}

declare %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #3

declare float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12CPDF_IconFit16GetFittingBoundsEv(%class.CPDF_IconFit* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = getelementptr inbounds %class.CPDF_IconFit, %class.CPDF_IconFit* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %3, align 8
  %5 = icmp eq %class.CPDF_Dictionary* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0)) #5
  %8 = call zeroext i1 @_ZNK15CPDF_Dictionary13GetBooleanForERKN5fxcrt10ByteStringEb(%class.CPDF_Dictionary* nonnull %4, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2, i1 zeroext false) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi i1 [ %8, %6 ], [ false, %1 ]
  ret i1 %10
}

declare zeroext i1 @_ZNK15CPDF_Dictionary13GetBooleanForERKN5fxcrt10ByteStringEb(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12CPDF_IconFit15GetIconPositionEv(%class.CFX_PTemplate* noalias nocapture sret, %class.CPDF_IconFit* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = getelementptr inbounds %class.CPDF_IconFit, %class.CPDF_IconFit* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %4, align 8
  %6 = icmp eq %class.CPDF_Dictionary* %5, null
  br i1 %6, label %26, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #5
  %9 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %5, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #5
  %10 = icmp eq %class.CPDF_Array* %9, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %9, i64 0, i32 1
  %13 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %9, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast %"class.fxcrt::RetainPtr.19"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %11
  %21 = ashr exact i64 %18, 3
  %22 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %9, i64 0) #5
  %23 = icmp ugt i64 %21, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %9, i64 1) #5
  br label %26

26:                                               ; preds = %24, %20, %11, %7, %2
  %27 = phi float [ 0.000000e+00, %2 ], [ 0.000000e+00, %7 ], [ %22, %24 ], [ %22, %20 ], [ 0.000000e+00, %11 ]
  %28 = phi float [ 0.000000e+00, %2 ], [ 0.000000e+00, %7 ], [ %25, %24 ], [ 0.000000e+00, %20 ], [ 0.000000e+00, %11 ]
  %29 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 0
  store float %27, float* %29, align 4
  %30 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 1
  store float %28, float* %30, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12CPDF_IconFit8GetScaleERK13CFX_STemplateIfERK13CFX_FloatRect(%class.CFX_VTemplate* noalias nocapture sret, %class.CPDF_IconFit* nocapture readonly, %class.CFX_STemplate* nocapture readonly dereferenceable(8), %class.CFX_FloatRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 2
  %6 = bitcast float* %5 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = bitcast %class.CFX_FloatRect* %3 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 4
  %10 = fsub <2 x float> %7, %9
  %11 = bitcast %class.CFX_STemplate* %2 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 4
  %13 = tail call i32 @_ZNK12CPDF_IconFit14GetScaleMethodEv(%class.CPDF_IconFit* %1)
  switch i32 %13, label %73 [
    i32 0, label %14
    i32 1, label %23
    i32 2, label %48
  ]

14:                                               ; preds = %4
  %15 = bitcast <2 x i32> %12 to <2 x float>
  %16 = fcmp olt <2 x float> %15, <float 1.000000e+00, float 1.000000e+00>
  %17 = select <2 x i1> %16, <2 x float> <float 1.000000e+00, float 1.000000e+00>, <2 x float> %15
  %18 = fdiv <2 x float> %10, %17
  %19 = bitcast <2 x float> %18 to <2 x i32>
  %20 = extractelement <2 x i32> %19, i32 0
  %21 = bitcast <2 x float> %18 to <2 x i32>
  %22 = extractelement <2 x i32> %21, i32 1
  br label %73

23:                                               ; preds = %4
  %24 = bitcast <2 x i32> %12 to <2 x float>
  %25 = extractelement <2 x float> %24, i32 0
  %26 = extractelement <2 x float> %10, i32 0
  %27 = fcmp olt float %26, %25
  br i1 %27, label %28, label %33

28:                                               ; preds = %23
  %29 = fcmp olt float %25, 1.000000e+00
  %30 = select i1 %29, float 1.000000e+00, float %25
  %31 = fdiv float %26, %30
  %32 = bitcast float %31 to i32
  br label %33

33:                                               ; preds = %28, %23
  %34 = phi i32 [ %32, %28 ], [ 1065353216, %23 ]
  %35 = phi float [ %31, %28 ], [ 1.000000e+00, %23 ]
  %36 = bitcast <2 x i32> %12 to <2 x float>
  %37 = extractelement <2 x float> %36, i32 1
  %38 = extractelement <2 x float> %10, i32 1
  %39 = fcmp olt float %38, %37
  %40 = insertelement <2 x float> undef, float %35, i32 0
  %41 = insertelement <2 x float> %40, float 1.000000e+00, i32 1
  br i1 %39, label %42, label %73

42:                                               ; preds = %33
  %43 = fcmp olt float %37, 1.000000e+00
  %44 = select i1 %43, float 1.000000e+00, float %37
  %45 = fdiv float %38, %44
  %46 = bitcast float %45 to i32
  %47 = insertelement <2 x float> %40, float %45, i32 1
  br label %73

48:                                               ; preds = %4
  %49 = bitcast <2 x i32> %12 to <2 x float>
  %50 = extractelement <2 x float> %49, i32 0
  %51 = extractelement <2 x float> %10, i32 0
  %52 = fcmp ogt float %51, %50
  br i1 %52, label %53, label %58

53:                                               ; preds = %48
  %54 = fcmp olt float %50, 1.000000e+00
  %55 = select i1 %54, float 1.000000e+00, float %50
  %56 = fdiv float %51, %55
  %57 = bitcast float %56 to i32
  br label %58

58:                                               ; preds = %53, %48
  %59 = phi i32 [ %57, %53 ], [ 1065353216, %48 ]
  %60 = phi float [ %56, %53 ], [ 1.000000e+00, %48 ]
  %61 = bitcast <2 x i32> %12 to <2 x float>
  %62 = extractelement <2 x float> %61, i32 1
  %63 = extractelement <2 x float> %10, i32 1
  %64 = fcmp ogt float %63, %62
  %65 = insertelement <2 x float> undef, float %60, i32 0
  %66 = insertelement <2 x float> %65, float 1.000000e+00, i32 1
  br i1 %64, label %67, label %73

67:                                               ; preds = %58
  %68 = fcmp olt float %62, 1.000000e+00
  %69 = select i1 %68, float 1.000000e+00, float %62
  %70 = fdiv float %63, %69
  %71 = bitcast float %70 to i32
  %72 = insertelement <2 x float> %65, float %70, i32 1
  br label %73

73:                                               ; preds = %58, %67, %33, %42, %4, %14
  %74 = phi i32 [ 1065353216, %58 ], [ %71, %67 ], [ 1065353216, %33 ], [ %46, %42 ], [ 1065353216, %4 ], [ %22, %14 ]
  %75 = phi i32 [ %59, %58 ], [ %59, %67 ], [ %34, %33 ], [ %34, %42 ], [ 1065353216, %4 ], [ %20, %14 ]
  %76 = phi <2 x float> [ %66, %58 ], [ %72, %67 ], [ %41, %33 ], [ %47, %42 ], [ <float 1.000000e+00, float 1.000000e+00>, %4 ], [ %18, %14 ]
  %77 = tail call zeroext i1 @_ZNK12CPDF_IconFit19IsProportionalScaleEv(%class.CPDF_IconFit* %1)
  br i1 %77, label %78, label %84

78:                                               ; preds = %73
  %79 = extractelement <2 x float> %76, i32 0
  %80 = extractelement <2 x float> %76, i32 1
  %81 = fcmp olt float %80, %79
  %82 = select i1 %81, float %80, float %79
  %83 = bitcast float %82 to i32
  br label %84

84:                                               ; preds = %78, %73
  %85 = phi i32 [ %83, %78 ], [ %74, %73 ]
  %86 = phi i32 [ %83, %78 ], [ %75, %73 ]
  %87 = bitcast %class.CFX_VTemplate* %0 to i32*
  store i32 %86, i32* %87, align 4
  %88 = getelementptr inbounds %class.CFX_VTemplate, %class.CFX_VTemplate* %0, i64 0, i32 0, i32 1
  %89 = bitcast float* %88 to i32*
  store i32 %85, i32* %89, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12CPDF_IconFit14GetImageOffsetERK13CFX_STemplateIfERK13CFX_VTemplateIfERK13CFX_FloatRect(%class.CFX_VTemplate* noalias nocapture sret, %class.CPDF_IconFit* nocapture readonly, %class.CFX_STemplate* nocapture readonly dereferenceable(8), %class.CFX_VTemplate* nocapture readonly dereferenceable(8), %class.CFX_FloatRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %6 = alloca %class.CFX_PTemplate, align 4
  %7 = bitcast %class.CFX_PTemplate* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  %8 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %6, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %8, align 4
  %9 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %6, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %9, align 4
  call void @_ZNK12CPDF_IconFit15GetIconPositionEv(%class.CFX_PTemplate* nonnull sret %6, %class.CPDF_IconFit* %1)
  %10 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %2, i64 0, i32 0
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %class.CFX_VTemplate, %class.CFX_VTemplate* %3, i64 0, i32 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = fmul float %11, %13
  %15 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %2, i64 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %class.CFX_VTemplate, %class.CFX_VTemplate* %3, i64 0, i32 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = fmul float %16, %18
  %20 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 2
  %21 = load float, float* %20, align 4
  %22 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 0
  %23 = load float, float* %22, align 4
  %24 = fsub float %21, %23
  %25 = fsub float %24, %14
  %26 = load float, float* %8, align 4
  %27 = fmul float %26, %25
  %28 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 3
  %29 = load float, float* %28, align 4
  %30 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 1
  %31 = load float, float* %30, align 4
  %32 = fsub float %29, %31
  %33 = fsub float %32, %19
  %34 = load float, float* %9, align 4
  %35 = fmul float %34, %33
  %36 = getelementptr inbounds %class.CFX_VTemplate, %class.CFX_VTemplate* %0, i64 0, i32 0, i32 0
  store float %27, float* %36, align 4
  %37 = getelementptr inbounds %class.CFX_VTemplate, %class.CFX_VTemplate* %0, i64 0, i32 0, i32 1
  store float %35, float* %37, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
