; ModuleID = '../../gpu/ipc/common/vulkan_types_mojom_traits.cc'
source_filename = "../../gpu/ipc/common/vulkan_types_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gpu::mojom::internal::VkExtensionProperties_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", i32, [4 x i8] }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.0"*, %"class.mojo::ScopedHandleBase.0"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.0" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.0"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.4" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.13, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.15", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.12", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.13 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.14" }>
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i32 }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.gpu::mojom::internal::VkLayerProperties_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", i32, i32, %"struct.mojo::internal::Pointer" }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, i32, i32, [4 x i8], %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.20", %"struct.mojo::internal::Pointer.21", %"struct.mojo::internal::Pointer.22" }
%"struct.mojo::internal::Pointer.20" = type { i64 }
%"struct.mojo::internal::Pointer.21" = type { i64 }
%"struct.mojo::internal::Pointer.22" = type { i64 }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.mojo::internal::Pointer.23", i32, i32, %"struct.mojo::internal::Pointer.23", i32, i32, i32, i32, float, float, i32, i32, %"struct.mojo::internal::Pointer.23", %"struct.mojo::internal::Pointer.24", i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], float, i32, i32, i32, i32, float, %"struct.mojo::internal::Pointer.24", %"struct.mojo::internal::Pointer.24", float, [4 x i8], i64, i64, i64 }
%"struct.mojo::internal::Pointer.23" = type { i64 }
%"struct.mojo::internal::Pointer.24" = type { i64 }
%"class.base::span.25" = type { %"struct.base::internal::ExtentStorage", i32* }
%"class.base::span.26" = type { %"struct.base::internal::ExtentStorage", float* }
%"class.gpu::mojom::internal::VkPhysicalDeviceSparseProperties_Data" = type { %"struct.mojo::internal::StructHeader", i8, [7 x i8] }
%"class.gpu::mojom::internal::VkPhysicalDeviceFeatures_Data" = type { %"struct.mojo::internal::StructHeader", [7 x i8], [1 x i8] }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.gpu::mojom::internal::VkQueueFamilyProperties_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, [4 x i8], %"struct.mojo::internal::Pointer.27" }
%"struct.mojo::internal::Pointer.27" = type { i64 }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.gpu::mojom::internal::VkExtent3D_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, [4 x i8] }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK4base4spanIhLm18446744073709551615EE7subspanEmm = comdat any

$_ZNK4base4spanIjLm18446744073709551615EE7subspanEmm = comdat any

$_ZNK4base4spanIfLm18446744073709551615EE7subspanEmm = comdat any

@.str.2 = private unnamed_addr constant [29 x i8] c"../../base/containers/span.h\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"offset <= size()\00", align 1
@.str.4 = private unnamed_addr constant [52 x i8] c"count == dynamic_extent || count <= size() - offset\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3gpu5mojom29VkExtensionPropertiesDataViewE21VkExtensionPropertiesE4ReadES3_PS4_(%"class.gpu::mojom::internal::VkExtensionProperties_Data"*, %"class.mojo::Message"*, %struct.VkExtensionProperties*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #5
  %6 = getelementptr inbounds %"class.gpu::mojom::internal::VkExtensionProperties_Data", %"class.gpu::mojom::internal::VkExtensionProperties_Data"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %6, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  %10 = bitcast %"struct.mojo::internal::Pointer"* %6 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  br i1 %9, label %12, label %13

12:                                               ; preds = %3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #5
  br label %23

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %15 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = getelementptr inbounds i8, i8* %11, i64 4
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = zext i32 %19 to i64
  store i8* %16, i8** %14, align 8
  store i64 %20, i64* %15, align 8
  %21 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %16, i64 %20) #5
  br i1 %21, label %23, label %22

22:                                               ; preds = %13
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #5
  br label %23

23:                                               ; preds = %12, %13, %22
  %24 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %2, i64 0, i32 0, i64 0
  %25 = call i64 @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE4copyEPcmm(%"class.base::BasicStringPiece"* nonnull %4, i8* %24, i64 256, i64 0)
  %26 = getelementptr inbounds %"class.gpu::mojom::internal::VkExtensionProperties_Data", %"class.gpu::mojom::internal::VkExtensionProperties_Data"* %0, i64 0, i32 2
  %27 = load i32, i32* %26, align 1
  %28 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %2, i64 0, i32 1
  store i32 %27, i32* %28, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #5
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
declare i64 @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE4copyEPcmm(%"class.base::BasicStringPiece"*, i8*, i64, i64) local_unnamed_addr #0 align 2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3gpu5mojom25VkLayerPropertiesDataViewE17VkLayerPropertiesE4ReadES3_PS4_(%"class.gpu::mojom::internal::VkLayerProperties_Data"*, %"class.mojo::Message"*, %struct.VkLayerProperties*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #5
  %7 = getelementptr inbounds %"class.gpu::mojom::internal::VkLayerProperties_Data", %"class.gpu::mojom::internal::VkLayerProperties_Data"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %7, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  %11 = bitcast %"struct.mojo::internal::Pointer"* %7 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %9
  br i1 %10, label %13, label %14

13:                                               ; preds = %3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #5
  br label %24

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %17 = getelementptr inbounds i8, i8* %12, i64 8
  %18 = getelementptr inbounds i8, i8* %12, i64 4
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 1
  %21 = zext i32 %20 to i64
  store i8* %17, i8** %15, align 8
  store i64 %21, i64* %16, align 8
  %22 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %17, i64 %21) #5
  br i1 %22, label %24, label %23

23:                                               ; preds = %14
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #5
  br label %24

24:                                               ; preds = %23, %14, %13
  %25 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %2, i64 0, i32 0, i64 0
  %26 = call i64 @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE4copyEPcmm(%"class.base::BasicStringPiece"* nonnull %4, i8* %25, i64 256, i64 0)
  %27 = getelementptr inbounds %"class.gpu::mojom::internal::VkLayerProperties_Data", %"class.gpu::mojom::internal::VkLayerProperties_Data"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 1
  %29 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %2, i64 0, i32 1
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds %"class.gpu::mojom::internal::VkLayerProperties_Data", %"class.gpu::mojom::internal::VkLayerProperties_Data"* %0, i64 0, i32 3
  %31 = load i32, i32* %30, align 1
  %32 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %2, i64 0, i32 2
  store i32 %31, i32* %32, align 4
  %33 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 16, i1 false) #5
  %34 = getelementptr inbounds %"class.gpu::mojom::internal::VkLayerProperties_Data", %"class.gpu::mojom::internal::VkLayerProperties_Data"* %0, i64 0, i32 4
  %35 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %34, i64 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  %38 = bitcast %"struct.mojo::internal::Pointer"* %34 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 %36
  br i1 %37, label %40, label %41

40:                                               ; preds = %24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 16, i1 false) #5
  br label %51

41:                                               ; preds = %24
  %42 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %43 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %44 = getelementptr inbounds i8, i8* %39, i64 8
  %45 = getelementptr inbounds i8, i8* %39, i64 4
  %46 = bitcast i8* %45 to i32*
  %47 = load i32, i32* %46, align 1
  %48 = zext i32 %47 to i64
  store i8* %44, i8** %42, align 8
  store i64 %48, i64* %43, align 8
  %49 = call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %44, i64 %48) #5
  br i1 %49, label %51, label %50

50:                                               ; preds = %41
  call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #5
  br label %51

51:                                               ; preds = %50, %41, %40
  %52 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %2, i64 0, i32 3, i64 0
  %53 = call i64 @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE4copyEPcmm(%"class.base::BasicStringPiece"* nonnull %5, i8* %52, i64 256, i64 0)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #5
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3gpu5mojom34VkPhysicalDevicePropertiesDataViewE26VkPhysicalDevicePropertiesE4ReadES3_PS4_(%"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data"*, %"class.mojo::Message"*, %struct.VkPhysicalDeviceProperties*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.base::span", align 8
  %6 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 1
  %8 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %2, i64 0, i32 0
  store i32 %7, i32* %8, align 8
  %9 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 1
  %11 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %2, i64 0, i32 1
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 1
  %14 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %2, i64 0, i32 2
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data"* %0, i64 0, i32 4
  %16 = load i32, i32* %15, align 1
  %17 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %2, i64 0, i32 3
  store i32 %16, i32* %17, align 4
  %18 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data"* %0, i64 0, i32 5
  %19 = load i32, i32* %18, align 1
  %20 = icmp ult i32 %19, 5
  br i1 %20, label %21, label %136

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %2, i64 0, i32 4
  store i32 %19, i32* %22, align 4
  %23 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 16, i1 false) #5
  %24 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data"* %0, i64 0, i32 7
  %25 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %24, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  %28 = bitcast %"struct.mojo::internal::Pointer"* %24 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %26
  br i1 %27, label %30, label %31

30:                                               ; preds = %21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 16, i1 false) #5
  br label %41

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %33 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %34 = getelementptr inbounds i8, i8* %29, i64 8
  %35 = getelementptr inbounds i8, i8* %29, i64 4
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = zext i32 %37 to i64
  store i8* %34, i8** %32, align 8
  store i64 %38, i64* %33, align 8
  %39 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %34, i64 %38) #5
  br i1 %39, label %41, label %40

40:                                               ; preds = %31
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #5
  br label %41

41:                                               ; preds = %40, %31, %30
  %42 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %2, i64 0, i32 5, i64 0
  %43 = call i64 @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE4copyEPcmm(%"class.base::BasicStringPiece"* nonnull %4, i8* %42, i64 256, i64 0)
  %44 = bitcast %"class.base::span"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #5
  %45 = getelementptr inbounds %"class.base::span", %"class.base::span"* %5, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.base::span", %"class.base::span"* %5, i64 0, i32 1
  %47 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %2, i64 0, i32 6, i64 0
  store i64 16, i64* %45, align 8
  store i8* %47, i8** %46, align 8
  %48 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data"* %0, i64 0, i32 8
  %49 = getelementptr inbounds %"struct.mojo::internal::Pointer.20", %"struct.mojo::internal::Pointer.20"* %48, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  %52 = bitcast %"struct.mojo::internal::Pointer.20"* %48 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  br i1 %51, label %90, label %54

54:                                               ; preds = %41
  %55 = getelementptr inbounds i8, i8* %53, i64 4
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %56, align 1
  %58 = icmp ugt i32 %57, 16
  br i1 %58, label %134, label %59

59:                                               ; preds = %54
  %60 = zext i32 %57 to i64
  %61 = call { i64, i8* } @_ZNK4base4spanIhLm18446744073709551615EE7subspanEmm(%"class.base::span"* nonnull %5, i64 0, i64 %60) #5
  %62 = extractvalue { i64, i8* } %61, 0
  %63 = extractvalue { i64, i8* } %61, 1
  store i64 %62, i64* %45, align 8
  store i8* %63, i8** %46, align 8
  %64 = load i32, i32* %56, align 1
  %65 = zext i32 %64 to i64
  %66 = icmp eq i32 %64, 0
  br i1 %66, label %90, label %67

67:                                               ; preds = %59
  %68 = icmp eq i8* %63, null
  %69 = getelementptr inbounds i8, i8* %53, i64 8
  br i1 %68, label %70, label %79

70:                                               ; preds = %67
  %71 = load i8, i8* %69, align 1
  store i8 %71, i8* null, align 536870912
  %72 = load i32, i32* %56, align 1
  %73 = icmp ugt i32 %72, 1
  br i1 %73, label %74, label %90

74:                                               ; preds = %70
  %75 = getelementptr inbounds i8, i8* %69, i64 1
  %76 = load i8, i8* %75, align 1
  store i8 %76, i8* inttoptr (i64 1 to i8*), align 1
  %77 = load i32, i32* %56, align 1
  %78 = icmp ugt i32 %77, 2
  br i1 %78, label %80, label %90

79:                                               ; preds = %67
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %63, i8* align 1 %69, i64 %65, i1 false) #5
  br label %90

80:                                               ; preds = %74, %80
  %81 = phi i64 [ %85, %80 ], [ 2, %74 ]
  %82 = load i8*, i8** %46, align 8
  %83 = getelementptr inbounds i8, i8* %69, i64 %81
  %84 = load i8, i8* %83, align 1
  %85 = add nuw nsw i64 %81, 1
  %86 = getelementptr inbounds i8, i8* %82, i64 %81
  store i8 %84, i8* %86, align 1
  %87 = load i32, i32* %56, align 1
  %88 = zext i32 %87 to i64
  %89 = icmp ult i64 %85, %88
  br i1 %89, label %80, label %90

90:                                               ; preds = %80, %74, %41, %79, %59, %70
  %91 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data"* %0, i64 0, i32 9
  %92 = getelementptr inbounds %"struct.mojo::internal::Pointer.21", %"struct.mojo::internal::Pointer.21"* %91, i64 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %101, label %95

95:                                               ; preds = %90
  %96 = bitcast %"struct.mojo::internal::Pointer.21"* %91 to i8*
  %97 = getelementptr inbounds i8, i8* %96, i64 %93
  %98 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %2, i64 0, i32 7
  %99 = bitcast i8* %97 to %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"*
  %100 = call zeroext i1 @_ZN4mojo12StructTraitsIN3gpu5mojom30VkPhysicalDeviceLimitsDataViewE22VkPhysicalDeviceLimitsE4ReadES3_PS4_(%"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* nonnull %99, %"class.mojo::Message"* %1, %struct.VkPhysicalDeviceLimits* %98) #5
  br i1 %100, label %101, label %134

101:                                              ; preds = %90, %95
  %102 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data"* %0, i64 0, i32 10
  %103 = getelementptr inbounds %"struct.mojo::internal::Pointer.22", %"struct.mojo::internal::Pointer.22"* %102, i64 0, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %134, label %106

106:                                              ; preds = %101
  %107 = bitcast %"struct.mojo::internal::Pointer.22"* %102 to i8*
  %108 = getelementptr inbounds i8, i8* %107, i64 %104
  %109 = getelementptr inbounds i8, i8* %108, i64 8
  %110 = load i8, i8* %109, align 1
  %111 = and i8 %110, 1
  %112 = zext i8 %111 to i32
  %113 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %2, i64 0, i32 8, i32 0
  store i32 %112, i32* %113, align 4
  %114 = load i8, i8* %109, align 1
  %115 = lshr i8 %114, 1
  %116 = and i8 %115, 1
  %117 = zext i8 %116 to i32
  %118 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %2, i64 0, i32 8, i32 1
  store i32 %117, i32* %118, align 4
  %119 = load i8, i8* %109, align 1
  %120 = lshr i8 %119, 2
  %121 = and i8 %120, 1
  %122 = zext i8 %121 to i32
  %123 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %2, i64 0, i32 8, i32 2
  store i32 %122, i32* %123, align 4
  %124 = load i8, i8* %109, align 1
  %125 = lshr i8 %124, 3
  %126 = and i8 %125, 1
  %127 = zext i8 %126 to i32
  %128 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %2, i64 0, i32 8, i32 3
  store i32 %127, i32* %128, align 4
  %129 = load i8, i8* %109, align 1
  %130 = lshr i8 %129, 4
  %131 = and i8 %130, 1
  %132 = zext i8 %131 to i32
  %133 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %2, i64 0, i32 8, i32 4
  store i32 %132, i32* %133, align 4
  br label %134

134:                                              ; preds = %95, %54, %101, %106
  %135 = phi i1 [ false, %95 ], [ false, %54 ], [ true, %101 ], [ true, %106 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #5
  br label %136

136:                                              ; preds = %3, %134
  %137 = phi i1 [ %135, %134 ], [ false, %3 ]
  ret i1 %137
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3gpu5mojom30VkPhysicalDeviceLimitsDataViewE22VkPhysicalDeviceLimitsE4ReadES3_PS4_(%"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"*, %"class.mojo::Message"*, %struct.VkPhysicalDeviceLimits*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::span.25", align 8
  %5 = alloca %"class.base::span.25", align 8
  %6 = alloca %"class.base::span.25", align 8
  %7 = alloca %"class.base::span.26", align 8
  %8 = alloca %"class.base::span.26", align 8
  %9 = alloca %"class.base::span.26", align 8
  %10 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 1
  %12 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 0
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 1
  %15 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 1
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 1
  %18 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 2
  store i32 %17, i32* %18, align 8
  %19 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 4
  %20 = load i32, i32* %19, align 1
  %21 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 3
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 5
  %23 = load i32, i32* %22, align 1
  %24 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 4
  store i32 %23, i32* %24, align 8
  %25 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 6
  %26 = load i32, i32* %25, align 1
  %27 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 5
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 7
  %29 = load i32, i32* %28, align 1
  %30 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 6
  store i32 %29, i32* %30, align 8
  %31 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 8
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 7
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 9
  %35 = load i32, i32* %34, align 1
  %36 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 8
  store i32 %35, i32* %36, align 8
  %37 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 10
  %38 = load i32, i32* %37, align 1
  %39 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 9
  store i32 %38, i32* %39, align 4
  %40 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 11
  %41 = load i32, i32* %40, align 1
  %42 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 10
  store i32 %41, i32* %42, align 8
  %43 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 13
  %44 = load i64, i64* %43, align 1
  %45 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 11
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 14
  %47 = load i64, i64* %46, align 1
  %48 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 12
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 12
  %50 = load i32, i32* %49, align 1
  %51 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 13
  store i32 %50, i32* %51, align 8
  %52 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 15
  %53 = load i32, i32* %52, align 1
  %54 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 14
  store i32 %53, i32* %54, align 4
  %55 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 16
  %56 = load i32, i32* %55, align 1
  %57 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 15
  store i32 %56, i32* %57, align 8
  %58 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 17
  %59 = load i32, i32* %58, align 1
  %60 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 16
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 18
  %62 = load i32, i32* %61, align 1
  %63 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 17
  store i32 %62, i32* %63, align 8
  %64 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 19
  %65 = load i32, i32* %64, align 1
  %66 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 18
  store i32 %65, i32* %66, align 4
  %67 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 20
  %68 = load i32, i32* %67, align 1
  %69 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 19
  store i32 %68, i32* %69, align 8
  %70 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 21
  %71 = load i32, i32* %70, align 1
  %72 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 20
  store i32 %71, i32* %72, align 4
  %73 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 22
  %74 = load i32, i32* %73, align 1
  %75 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 21
  store i32 %74, i32* %75, align 8
  %76 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 23
  %77 = load i32, i32* %76, align 1
  %78 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 22
  store i32 %77, i32* %78, align 4
  %79 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 24
  %80 = load i32, i32* %79, align 1
  %81 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 23
  store i32 %80, i32* %81, align 8
  %82 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 25
  %83 = load i32, i32* %82, align 1
  %84 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 24
  store i32 %83, i32* %84, align 4
  %85 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 26
  %86 = load i32, i32* %85, align 1
  %87 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 25
  store i32 %86, i32* %87, align 8
  %88 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 27
  %89 = load i32, i32* %88, align 1
  %90 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 26
  store i32 %89, i32* %90, align 4
  %91 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 28
  %92 = load i32, i32* %91, align 1
  %93 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 27
  store i32 %92, i32* %93, align 8
  %94 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 29
  %95 = load i32, i32* %94, align 1
  %96 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 28
  store i32 %95, i32* %96, align 4
  %97 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 30
  %98 = load i32, i32* %97, align 1
  %99 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 29
  store i32 %98, i32* %99, align 8
  %100 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 31
  %101 = load i32, i32* %100, align 1
  %102 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 30
  store i32 %101, i32* %102, align 4
  %103 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 32
  %104 = load i32, i32* %103, align 1
  %105 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 31
  store i32 %104, i32* %105, align 8
  %106 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 33
  %107 = load i32, i32* %106, align 1
  %108 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 32
  store i32 %107, i32* %108, align 4
  %109 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 34
  %110 = load i32, i32* %109, align 1
  %111 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 33
  store i32 %110, i32* %111, align 8
  %112 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 35
  %113 = load i32, i32* %112, align 1
  %114 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 34
  store i32 %113, i32* %114, align 4
  %115 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 36
  %116 = load i32, i32* %115, align 1
  %117 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 35
  store i32 %116, i32* %117, align 8
  %118 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 37
  %119 = load i32, i32* %118, align 1
  %120 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 36
  store i32 %119, i32* %120, align 4
  %121 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 38
  %122 = load i32, i32* %121, align 1
  %123 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 37
  store i32 %122, i32* %123, align 8
  %124 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 39
  %125 = load i32, i32* %124, align 1
  %126 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 38
  store i32 %125, i32* %126, align 4
  %127 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 40
  %128 = load i32, i32* %127, align 1
  %129 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 39
  store i32 %128, i32* %129, align 8
  %130 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 41
  %131 = load i32, i32* %130, align 1
  %132 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 40
  store i32 %131, i32* %132, align 4
  %133 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 42
  %134 = load i32, i32* %133, align 1
  %135 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 41
  store i32 %134, i32* %135, align 8
  %136 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 43
  %137 = load i32, i32* %136, align 1
  %138 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 42
  store i32 %137, i32* %138, align 4
  %139 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 44
  %140 = load i32, i32* %139, align 1
  %141 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 43
  store i32 %140, i32* %141, align 8
  %142 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 45
  %143 = load i32, i32* %142, align 1
  %144 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 44
  store i32 %143, i32* %144, align 4
  %145 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 46
  %146 = load i32, i32* %145, align 1
  %147 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 45
  store i32 %146, i32* %147, align 8
  %148 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 47
  %149 = load i32, i32* %148, align 1
  %150 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 46
  store i32 %149, i32* %150, align 4
  %151 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 48
  %152 = load i32, i32* %151, align 1
  %153 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 47
  store i32 %152, i32* %153, align 8
  %154 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 49
  %155 = load i32, i32* %154, align 1
  %156 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 48
  store i32 %155, i32* %156, align 4
  %157 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 50
  %158 = load i32, i32* %157, align 1
  %159 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 49
  store i32 %158, i32* %159, align 8
  %160 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 51
  %161 = load i32, i32* %160, align 1
  %162 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 50
  store i32 %161, i32* %162, align 4
  %163 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 52
  %164 = load i32, i32* %163, align 1
  %165 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 51
  store i32 %164, i32* %165, align 8
  %166 = bitcast %"class.base::span.25"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %166) #5
  %167 = getelementptr inbounds %"class.base::span.25", %"class.base::span.25"* %4, i64 0, i32 0, i32 0
  %168 = getelementptr inbounds %"class.base::span.25", %"class.base::span.25"* %4, i64 0, i32 1
  %169 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 52, i64 0
  store i64 3, i64* %167, align 8
  store i32* %169, i32** %168, align 8
  %170 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 53
  %171 = getelementptr inbounds %"struct.mojo::internal::Pointer.23", %"struct.mojo::internal::Pointer.23"* %170, i64 0, i32 0
  %172 = load i64, i64* %171, align 8
  %173 = icmp eq i64 %172, 0
  %174 = bitcast %"struct.mojo::internal::Pointer.23"* %170 to i8*
  %175 = getelementptr inbounds i8, i8* %174, i64 %172
  br i1 %173, label %217, label %176

176:                                              ; preds = %3
  %177 = getelementptr inbounds i8, i8* %175, i64 4
  %178 = bitcast i8* %177 to i32*
  %179 = load i32, i32* %178, align 1
  %180 = icmp ugt i32 %179, 3
  br i1 %180, label %661, label %181

181:                                              ; preds = %176
  %182 = zext i32 %179 to i64
  %183 = call { i64, i32* } @_ZNK4base4spanIjLm18446744073709551615EE7subspanEmm(%"class.base::span.25"* nonnull %4, i64 0, i64 %182) #5
  %184 = extractvalue { i64, i32* } %183, 0
  %185 = extractvalue { i64, i32* } %183, 1
  store i64 %184, i64* %167, align 8
  store i32* %185, i32** %168, align 8
  %186 = load i32, i32* %178, align 1
  %187 = zext i32 %186 to i64
  %188 = icmp eq i32 %186, 0
  br i1 %188, label %217, label %189

189:                                              ; preds = %181
  %190 = icmp eq i32* %185, null
  br i1 %190, label %191, label %203

191:                                              ; preds = %189
  %192 = getelementptr inbounds i8, i8* %175, i64 8
  %193 = bitcast i8* %192 to i32*
  %194 = load i32, i32* %193, align 4
  store i32 %194, i32* null, align 536870912
  %195 = load i32, i32* %178, align 1
  %196 = icmp ugt i32 %195, 1
  br i1 %196, label %197, label %217

197:                                              ; preds = %191
  %198 = getelementptr inbounds i8, i8* %192, i64 4
  %199 = bitcast i8* %198 to i32*
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* inttoptr (i64 4 to i32*), align 4
  %201 = load i32, i32* %178, align 1
  %202 = icmp ugt i32 %201, 2
  br i1 %202, label %207, label %217

203:                                              ; preds = %189
  %204 = bitcast i32* %185 to i8*
  %205 = getelementptr inbounds i8, i8* %175, i64 8
  %206 = shl nuw nsw i64 %187, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %204, i8* align 4 %205, i64 %206, i1 false) #5
  br label %217

207:                                              ; preds = %197, %207
  %208 = phi i64 [ %212, %207 ], [ 2, %197 ]
  %209 = load i32*, i32** %168, align 8
  %210 = getelementptr inbounds i32, i32* %193, i64 %208
  %211 = load i32, i32* %210, align 4
  %212 = add nuw nsw i64 %208, 1
  %213 = getelementptr inbounds i32, i32* %209, i64 %208
  store i32 %211, i32* %213, align 4
  %214 = load i32, i32* %178, align 1
  %215 = zext i32 %214 to i64
  %216 = icmp ult i64 %212, %215
  br i1 %216, label %207, label %217

217:                                              ; preds = %207, %197, %3, %203, %181, %191
  %218 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 54
  %219 = load i32, i32* %218, align 1
  %220 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 53
  store i32 %219, i32* %220, align 8
  %221 = bitcast %"class.base::span.25"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %221) #5
  %222 = getelementptr inbounds %"class.base::span.25", %"class.base::span.25"* %5, i64 0, i32 0, i32 0
  %223 = getelementptr inbounds %"class.base::span.25", %"class.base::span.25"* %5, i64 0, i32 1
  %224 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 54, i64 0
  store i64 3, i64* %222, align 8
  store i32* %224, i32** %223, align 8
  %225 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 56
  %226 = getelementptr inbounds %"struct.mojo::internal::Pointer.23", %"struct.mojo::internal::Pointer.23"* %225, i64 0, i32 0
  %227 = load i64, i64* %226, align 8
  %228 = icmp eq i64 %227, 0
  %229 = bitcast %"struct.mojo::internal::Pointer.23"* %225 to i8*
  %230 = getelementptr inbounds i8, i8* %229, i64 %227
  br i1 %228, label %272, label %231

231:                                              ; preds = %217
  %232 = getelementptr inbounds i8, i8* %230, i64 4
  %233 = bitcast i8* %232 to i32*
  %234 = load i32, i32* %233, align 1
  %235 = icmp ugt i32 %234, 3
  br i1 %235, label %659, label %236

236:                                              ; preds = %231
  %237 = zext i32 %234 to i64
  %238 = call { i64, i32* } @_ZNK4base4spanIjLm18446744073709551615EE7subspanEmm(%"class.base::span.25"* nonnull %5, i64 0, i64 %237) #5
  %239 = extractvalue { i64, i32* } %238, 0
  %240 = extractvalue { i64, i32* } %238, 1
  store i64 %239, i64* %222, align 8
  store i32* %240, i32** %223, align 8
  %241 = load i32, i32* %233, align 1
  %242 = zext i32 %241 to i64
  %243 = icmp eq i32 %241, 0
  br i1 %243, label %272, label %244

244:                                              ; preds = %236
  %245 = icmp eq i32* %240, null
  br i1 %245, label %246, label %258

246:                                              ; preds = %244
  %247 = getelementptr inbounds i8, i8* %230, i64 8
  %248 = bitcast i8* %247 to i32*
  %249 = load i32, i32* %248, align 4
  store i32 %249, i32* null, align 536870912
  %250 = load i32, i32* %233, align 1
  %251 = icmp ugt i32 %250, 1
  br i1 %251, label %252, label %272

252:                                              ; preds = %246
  %253 = getelementptr inbounds i8, i8* %247, i64 4
  %254 = bitcast i8* %253 to i32*
  %255 = load i32, i32* %254, align 4
  store i32 %255, i32* inttoptr (i64 4 to i32*), align 4
  %256 = load i32, i32* %233, align 1
  %257 = icmp ugt i32 %256, 2
  br i1 %257, label %262, label %272

258:                                              ; preds = %244
  %259 = bitcast i32* %240 to i8*
  %260 = getelementptr inbounds i8, i8* %230, i64 8
  %261 = shl nuw nsw i64 %242, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %259, i8* align 4 %260, i64 %261, i1 false) #5
  br label %272

262:                                              ; preds = %252, %262
  %263 = phi i64 [ %267, %262 ], [ 2, %252 ]
  %264 = load i32*, i32** %223, align 8
  %265 = getelementptr inbounds i32, i32* %248, i64 %263
  %266 = load i32, i32* %265, align 4
  %267 = add nuw nsw i64 %263, 1
  %268 = getelementptr inbounds i32, i32* %264, i64 %263
  store i32 %266, i32* %268, align 4
  %269 = load i32, i32* %233, align 1
  %270 = zext i32 %269 to i64
  %271 = icmp ult i64 %267, %270
  br i1 %271, label %262, label %272

272:                                              ; preds = %262, %252, %217, %258, %236, %246
  %273 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 55
  %274 = load i32, i32* %273, align 1
  %275 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 55
  store i32 %274, i32* %275, align 8
  %276 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 57
  %277 = load i32, i32* %276, align 1
  %278 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 56
  store i32 %277, i32* %278, align 4
  %279 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 58
  %280 = load i32, i32* %279, align 1
  %281 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 57
  store i32 %280, i32* %281, align 8
  %282 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 59
  %283 = load i32, i32* %282, align 1
  %284 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 58
  store i32 %283, i32* %284, align 4
  %285 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 60
  %286 = load i32, i32* %285, align 1
  %287 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 59
  store i32 %286, i32* %287, align 8
  %288 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 61
  %289 = bitcast float* %288 to i32*
  %290 = load i32, i32* %289, align 1
  %291 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 60
  %292 = bitcast float* %291 to i32*
  store i32 %290, i32* %292, align 4
  %293 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 62
  %294 = bitcast float* %293 to i32*
  %295 = load i32, i32* %294, align 1
  %296 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 61
  %297 = bitcast float* %296 to i32*
  store i32 %295, i32* %297, align 8
  %298 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 63
  %299 = load i32, i32* %298, align 1
  %300 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 62
  store i32 %299, i32* %300, align 4
  %301 = bitcast %"class.base::span.25"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %301) #5
  %302 = getelementptr inbounds %"class.base::span.25", %"class.base::span.25"* %6, i64 0, i32 0, i32 0
  %303 = getelementptr inbounds %"class.base::span.25", %"class.base::span.25"* %6, i64 0, i32 1
  %304 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 63, i64 0
  store i64 2, i64* %302, align 8
  store i32* %304, i32** %303, align 8
  %305 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 65
  %306 = getelementptr inbounds %"struct.mojo::internal::Pointer.23", %"struct.mojo::internal::Pointer.23"* %305, i64 0, i32 0
  %307 = load i64, i64* %306, align 8
  %308 = icmp eq i64 %307, 0
  %309 = bitcast %"struct.mojo::internal::Pointer.23"* %305 to i8*
  %310 = getelementptr inbounds i8, i8* %309, i64 %307
  br i1 %308, label %352, label %311

311:                                              ; preds = %272
  %312 = getelementptr inbounds i8, i8* %310, i64 4
  %313 = bitcast i8* %312 to i32*
  %314 = load i32, i32* %313, align 1
  %315 = icmp ugt i32 %314, 2
  br i1 %315, label %657, label %316

316:                                              ; preds = %311
  %317 = zext i32 %314 to i64
  %318 = call { i64, i32* } @_ZNK4base4spanIjLm18446744073709551615EE7subspanEmm(%"class.base::span.25"* nonnull %6, i64 0, i64 %317) #5
  %319 = extractvalue { i64, i32* } %318, 0
  %320 = extractvalue { i64, i32* } %318, 1
  store i64 %319, i64* %302, align 8
  store i32* %320, i32** %303, align 8
  %321 = load i32, i32* %313, align 1
  %322 = zext i32 %321 to i64
  %323 = icmp eq i32 %321, 0
  br i1 %323, label %352, label %324

324:                                              ; preds = %316
  %325 = icmp eq i32* %320, null
  br i1 %325, label %326, label %338

326:                                              ; preds = %324
  %327 = getelementptr inbounds i8, i8* %310, i64 8
  %328 = bitcast i8* %327 to i32*
  %329 = load i32, i32* %328, align 4
  store i32 %329, i32* null, align 536870912
  %330 = load i32, i32* %313, align 1
  %331 = icmp ugt i32 %330, 1
  br i1 %331, label %332, label %352

332:                                              ; preds = %326
  %333 = getelementptr inbounds i8, i8* %327, i64 4
  %334 = bitcast i8* %333 to i32*
  %335 = load i32, i32* %334, align 4
  store i32 %335, i32* inttoptr (i64 4 to i32*), align 4
  %336 = load i32, i32* %313, align 1
  %337 = icmp ugt i32 %336, 2
  br i1 %337, label %342, label %352

338:                                              ; preds = %324
  %339 = bitcast i32* %320 to i8*
  %340 = getelementptr inbounds i8, i8* %310, i64 8
  %341 = shl nuw nsw i64 %322, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %339, i8* align 4 %340, i64 %341, i1 false) #5
  br label %352

342:                                              ; preds = %332, %342
  %343 = phi i64 [ %347, %342 ], [ 2, %332 ]
  %344 = load i32*, i32** %303, align 8
  %345 = getelementptr inbounds i32, i32* %328, i64 %343
  %346 = load i32, i32* %345, align 4
  %347 = add nuw nsw i64 %343, 1
  %348 = getelementptr inbounds i32, i32* %344, i64 %343
  store i32 %346, i32* %348, align 4
  %349 = load i32, i32* %313, align 1
  %350 = zext i32 %349 to i64
  %351 = icmp ult i64 %347, %350
  br i1 %351, label %342, label %352

352:                                              ; preds = %342, %332, %272, %338, %316, %326
  %353 = bitcast %"class.base::span.26"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %353) #5
  %354 = getelementptr inbounds %"class.base::span.26", %"class.base::span.26"* %7, i64 0, i32 0, i32 0
  %355 = getelementptr inbounds %"class.base::span.26", %"class.base::span.26"* %7, i64 0, i32 1
  %356 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 64, i64 0
  store i64 2, i64* %354, align 8
  store float* %356, float** %355, align 8
  %357 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 66
  %358 = getelementptr inbounds %"struct.mojo::internal::Pointer.24", %"struct.mojo::internal::Pointer.24"* %357, i64 0, i32 0
  %359 = load i64, i64* %358, align 8
  %360 = icmp eq i64 %359, 0
  %361 = bitcast %"struct.mojo::internal::Pointer.24"* %357 to i8*
  %362 = getelementptr inbounds i8, i8* %361, i64 %359
  br i1 %360, label %407, label %363

363:                                              ; preds = %352
  %364 = getelementptr inbounds i8, i8* %362, i64 4
  %365 = bitcast i8* %364 to i32*
  %366 = load i32, i32* %365, align 1
  %367 = icmp ugt i32 %366, 2
  br i1 %367, label %655, label %368

368:                                              ; preds = %363
  %369 = zext i32 %366 to i64
  %370 = call { i64, float* } @_ZNK4base4spanIfLm18446744073709551615EE7subspanEmm(%"class.base::span.26"* nonnull %7, i64 0, i64 %369) #5
  %371 = extractvalue { i64, float* } %370, 0
  %372 = extractvalue { i64, float* } %370, 1
  store i64 %371, i64* %354, align 8
  store float* %372, float** %355, align 8
  %373 = load i32, i32* %365, align 1
  %374 = zext i32 %373 to i64
  %375 = icmp eq i32 %373, 0
  br i1 %375, label %407, label %376

376:                                              ; preds = %368
  %377 = icmp eq float* %372, null
  br i1 %377, label %378, label %391

378:                                              ; preds = %376
  %379 = getelementptr inbounds i8, i8* %362, i64 8
  %380 = bitcast i8* %379 to float*
  %381 = bitcast i8* %379 to i32*
  %382 = load i32, i32* %381, align 4
  store i32 %382, i32* null, align 536870912
  %383 = load i32, i32* %365, align 1
  %384 = icmp ugt i32 %383, 1
  br i1 %384, label %385, label %407

385:                                              ; preds = %378
  %386 = getelementptr inbounds i8, i8* %379, i64 4
  %387 = bitcast i8* %386 to i32*
  %388 = load i32, i32* %387, align 4
  store i32 %388, i32* inttoptr (i64 4 to i32*), align 4
  %389 = load i32, i32* %365, align 1
  %390 = icmp ugt i32 %389, 2
  br i1 %390, label %395, label %407

391:                                              ; preds = %376
  %392 = bitcast float* %372 to i8*
  %393 = getelementptr inbounds i8, i8* %362, i64 8
  %394 = shl nuw nsw i64 %374, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %392, i8* align 4 %393, i64 %394, i1 false) #5
  br label %407

395:                                              ; preds = %385, %395
  %396 = phi i64 [ %401, %395 ], [ 2, %385 ]
  %397 = load float*, float** %355, align 8
  %398 = getelementptr inbounds float, float* %380, i64 %396
  %399 = bitcast float* %398 to i32*
  %400 = load i32, i32* %399, align 4
  %401 = add nuw nsw i64 %396, 1
  %402 = getelementptr inbounds float, float* %397, i64 %396
  %403 = bitcast float* %402 to i32*
  store i32 %400, i32* %403, align 4
  %404 = load i32, i32* %365, align 1
  %405 = zext i32 %404 to i64
  %406 = icmp ult i64 %401, %405
  br i1 %406, label %395, label %407

407:                                              ; preds = %395, %385, %352, %391, %368, %378
  %408 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 64
  %409 = load i32, i32* %408, align 1
  %410 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 65
  store i32 %409, i32* %410, align 8
  %411 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 67
  %412 = load i64, i64* %411, align 1
  %413 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 66
  store i64 %412, i64* %413, align 8
  %414 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 68
  %415 = load i64, i64* %414, align 1
  %416 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 67
  store i64 %415, i64* %416, align 8
  %417 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 69
  %418 = load i64, i64* %417, align 1
  %419 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 68
  store i64 %418, i64* %419, align 8
  %420 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 70
  %421 = load i64, i64* %420, align 1
  %422 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 69
  store i64 %421, i64* %422, align 8
  %423 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 71
  %424 = load i32, i32* %423, align 1
  %425 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 70
  store i32 %424, i32* %425, align 8
  %426 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 72
  %427 = load i32, i32* %426, align 1
  %428 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 71
  store i32 %427, i32* %428, align 4
  %429 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 73
  %430 = load i32, i32* %429, align 1
  %431 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 72
  store i32 %430, i32* %431, align 8
  %432 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 74
  %433 = load i32, i32* %432, align 1
  %434 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 73
  store i32 %433, i32* %434, align 4
  %435 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 75
  %436 = bitcast float* %435 to i32*
  %437 = load i32, i32* %436, align 1
  %438 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 74
  %439 = bitcast float* %438 to i32*
  store i32 %437, i32* %439, align 8
  %440 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 76
  %441 = bitcast float* %440 to i32*
  %442 = load i32, i32* %441, align 1
  %443 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 75
  %444 = bitcast float* %443 to i32*
  store i32 %442, i32* %444, align 4
  %445 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 77
  %446 = load i32, i32* %445, align 1
  %447 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 76
  store i32 %446, i32* %447, align 8
  %448 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 78
  %449 = load i32, i32* %448, align 1
  %450 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 77
  store i32 %449, i32* %450, align 4
  %451 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 79
  %452 = load i32, i32* %451, align 1
  %453 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 78
  store i32 %452, i32* %453, align 8
  %454 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 80
  %455 = load i32, i32* %454, align 1
  %456 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 79
  store i32 %455, i32* %456, align 4
  %457 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 81
  %458 = load i32, i32* %457, align 1
  %459 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 80
  store i32 %458, i32* %459, align 8
  %460 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 82
  %461 = load i32, i32* %460, align 1
  %462 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 81
  store i32 %461, i32* %462, align 4
  %463 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 83
  %464 = load i32, i32* %463, align 1
  %465 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 82
  store i32 %464, i32* %465, align 8
  %466 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 84
  %467 = load i32, i32* %466, align 1
  %468 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 83
  store i32 %467, i32* %468, align 4
  %469 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 85
  %470 = load i32, i32* %469, align 1
  %471 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 84
  store i32 %470, i32* %471, align 8
  %472 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 86
  %473 = load i32, i32* %472, align 1
  %474 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 85
  store i32 %473, i32* %474, align 4
  %475 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 87
  %476 = load i32, i32* %475, align 1
  %477 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 86
  store i32 %476, i32* %477, align 8
  %478 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 88
  %479 = load i32, i32* %478, align 1
  %480 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 87
  store i32 %479, i32* %480, align 4
  %481 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 89
  %482 = load i32, i32* %481, align 1
  %483 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 88
  store i32 %482, i32* %483, align 8
  %484 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 90
  %485 = load i32, i32* %484, align 1
  %486 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 89
  store i32 %485, i32* %486, align 4
  %487 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 91
  %488 = load i32, i32* %487, align 1
  %489 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 90
  store i32 %488, i32* %489, align 8
  %490 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 92
  %491 = load i8, i8* %490, align 1
  %492 = and i8 %491, 1
  %493 = zext i8 %492 to i32
  %494 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 91
  store i32 %493, i32* %494, align 4
  %495 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 94
  %496 = bitcast float* %495 to i32*
  %497 = load i32, i32* %496, align 1
  %498 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 92
  %499 = bitcast float* %498 to i32*
  store i32 %497, i32* %499, align 8
  %500 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 95
  %501 = load i32, i32* %500, align 1
  %502 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 93
  store i32 %501, i32* %502, align 4
  %503 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 96
  %504 = load i32, i32* %503, align 1
  %505 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 94
  store i32 %504, i32* %505, align 8
  %506 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 97
  %507 = load i32, i32* %506, align 1
  %508 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 95
  store i32 %507, i32* %508, align 4
  %509 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 98
  %510 = load i32, i32* %509, align 1
  %511 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 96
  store i32 %510, i32* %511, align 8
  %512 = bitcast %"class.base::span.26"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %512) #5
  %513 = getelementptr inbounds %"class.base::span.26", %"class.base::span.26"* %8, i64 0, i32 0, i32 0
  %514 = getelementptr inbounds %"class.base::span.26", %"class.base::span.26"* %8, i64 0, i32 1
  %515 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 97, i64 0
  store i64 2, i64* %513, align 8
  store float* %515, float** %514, align 8
  %516 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 100
  %517 = getelementptr inbounds %"struct.mojo::internal::Pointer.24", %"struct.mojo::internal::Pointer.24"* %516, i64 0, i32 0
  %518 = load i64, i64* %517, align 8
  %519 = icmp eq i64 %518, 0
  %520 = bitcast %"struct.mojo::internal::Pointer.24"* %516 to i8*
  %521 = getelementptr inbounds i8, i8* %520, i64 %518
  br i1 %519, label %566, label %522

522:                                              ; preds = %407
  %523 = getelementptr inbounds i8, i8* %521, i64 4
  %524 = bitcast i8* %523 to i32*
  %525 = load i32, i32* %524, align 1
  %526 = icmp ugt i32 %525, 2
  br i1 %526, label %653, label %527

527:                                              ; preds = %522
  %528 = zext i32 %525 to i64
  %529 = call { i64, float* } @_ZNK4base4spanIfLm18446744073709551615EE7subspanEmm(%"class.base::span.26"* nonnull %8, i64 0, i64 %528) #5
  %530 = extractvalue { i64, float* } %529, 0
  %531 = extractvalue { i64, float* } %529, 1
  store i64 %530, i64* %513, align 8
  store float* %531, float** %514, align 8
  %532 = load i32, i32* %524, align 1
  %533 = zext i32 %532 to i64
  %534 = icmp eq i32 %532, 0
  br i1 %534, label %566, label %535

535:                                              ; preds = %527
  %536 = icmp eq float* %531, null
  br i1 %536, label %537, label %550

537:                                              ; preds = %535
  %538 = getelementptr inbounds i8, i8* %521, i64 8
  %539 = bitcast i8* %538 to float*
  %540 = bitcast i8* %538 to i32*
  %541 = load i32, i32* %540, align 4
  store i32 %541, i32* null, align 536870912
  %542 = load i32, i32* %524, align 1
  %543 = icmp ugt i32 %542, 1
  br i1 %543, label %544, label %566

544:                                              ; preds = %537
  %545 = getelementptr inbounds i8, i8* %538, i64 4
  %546 = bitcast i8* %545 to i32*
  %547 = load i32, i32* %546, align 4
  store i32 %547, i32* inttoptr (i64 4 to i32*), align 4
  %548 = load i32, i32* %524, align 1
  %549 = icmp ugt i32 %548, 2
  br i1 %549, label %554, label %566

550:                                              ; preds = %535
  %551 = bitcast float* %531 to i8*
  %552 = getelementptr inbounds i8, i8* %521, i64 8
  %553 = shl nuw nsw i64 %533, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %551, i8* align 4 %552, i64 %553, i1 false) #5
  br label %566

554:                                              ; preds = %544, %554
  %555 = phi i64 [ %560, %554 ], [ 2, %544 ]
  %556 = load float*, float** %514, align 8
  %557 = getelementptr inbounds float, float* %539, i64 %555
  %558 = bitcast float* %557 to i32*
  %559 = load i32, i32* %558, align 4
  %560 = add nuw nsw i64 %555, 1
  %561 = getelementptr inbounds float, float* %556, i64 %555
  %562 = bitcast float* %561 to i32*
  store i32 %559, i32* %562, align 4
  %563 = load i32, i32* %524, align 1
  %564 = zext i32 %563 to i64
  %565 = icmp ult i64 %560, %564
  br i1 %565, label %554, label %566

566:                                              ; preds = %554, %544, %407, %550, %527, %537
  %567 = bitcast %"class.base::span.26"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %567) #5
  %568 = getelementptr inbounds %"class.base::span.26", %"class.base::span.26"* %9, i64 0, i32 0, i32 0
  %569 = getelementptr inbounds %"class.base::span.26", %"class.base::span.26"* %9, i64 0, i32 1
  %570 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 98, i64 0
  store i64 2, i64* %568, align 8
  store float* %570, float** %569, align 8
  %571 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 101
  %572 = getelementptr inbounds %"struct.mojo::internal::Pointer.24", %"struct.mojo::internal::Pointer.24"* %571, i64 0, i32 0
  %573 = load i64, i64* %572, align 8
  %574 = icmp eq i64 %573, 0
  %575 = bitcast %"struct.mojo::internal::Pointer.24"* %571 to i8*
  %576 = getelementptr inbounds i8, i8* %575, i64 %573
  br i1 %574, label %621, label %577

577:                                              ; preds = %566
  %578 = getelementptr inbounds i8, i8* %576, i64 4
  %579 = bitcast i8* %578 to i32*
  %580 = load i32, i32* %579, align 1
  %581 = icmp ugt i32 %580, 2
  br i1 %581, label %651, label %582

582:                                              ; preds = %577
  %583 = zext i32 %580 to i64
  %584 = call { i64, float* } @_ZNK4base4spanIfLm18446744073709551615EE7subspanEmm(%"class.base::span.26"* nonnull %9, i64 0, i64 %583) #5
  %585 = extractvalue { i64, float* } %584, 0
  %586 = extractvalue { i64, float* } %584, 1
  store i64 %585, i64* %568, align 8
  store float* %586, float** %569, align 8
  %587 = load i32, i32* %579, align 1
  %588 = zext i32 %587 to i64
  %589 = icmp eq i32 %587, 0
  br i1 %589, label %621, label %590

590:                                              ; preds = %582
  %591 = icmp eq float* %586, null
  br i1 %591, label %592, label %605

592:                                              ; preds = %590
  %593 = getelementptr inbounds i8, i8* %576, i64 8
  %594 = bitcast i8* %593 to float*
  %595 = bitcast i8* %593 to i32*
  %596 = load i32, i32* %595, align 4
  store i32 %596, i32* null, align 536870912
  %597 = load i32, i32* %579, align 1
  %598 = icmp ugt i32 %597, 1
  br i1 %598, label %599, label %621

599:                                              ; preds = %592
  %600 = getelementptr inbounds i8, i8* %593, i64 4
  %601 = bitcast i8* %600 to i32*
  %602 = load i32, i32* %601, align 4
  store i32 %602, i32* inttoptr (i64 4 to i32*), align 4
  %603 = load i32, i32* %579, align 1
  %604 = icmp ugt i32 %603, 2
  br i1 %604, label %609, label %621

605:                                              ; preds = %590
  %606 = bitcast float* %586 to i8*
  %607 = getelementptr inbounds i8, i8* %576, i64 8
  %608 = shl nuw nsw i64 %588, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %606, i8* align 4 %607, i64 %608, i1 false) #5
  br label %621

609:                                              ; preds = %599, %609
  %610 = phi i64 [ %615, %609 ], [ 2, %599 ]
  %611 = load float*, float** %569, align 8
  %612 = getelementptr inbounds float, float* %594, i64 %610
  %613 = bitcast float* %612 to i32*
  %614 = load i32, i32* %613, align 4
  %615 = add nuw nsw i64 %610, 1
  %616 = getelementptr inbounds float, float* %611, i64 %610
  %617 = bitcast float* %616 to i32*
  store i32 %614, i32* %617, align 4
  %618 = load i32, i32* %579, align 1
  %619 = zext i32 %618 to i64
  %620 = icmp ult i64 %615, %619
  br i1 %620, label %609, label %621

621:                                              ; preds = %609, %599, %566, %605, %582, %592
  %622 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 99
  %623 = bitcast float* %622 to i32*
  %624 = load i32, i32* %623, align 1
  %625 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 99
  %626 = bitcast float* %625 to i32*
  store i32 %624, i32* %626, align 4
  %627 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 102
  %628 = bitcast float* %627 to i32*
  %629 = load i32, i32* %628, align 1
  %630 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 100
  %631 = bitcast float* %630 to i32*
  store i32 %629, i32* %631, align 8
  %632 = load i8, i8* %490, align 1
  %633 = lshr i8 %632, 1
  %634 = and i8 %633, 1
  %635 = zext i8 %634 to i32
  %636 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 101
  store i32 %635, i32* %636, align 4
  %637 = load i8, i8* %490, align 1
  %638 = lshr i8 %637, 2
  %639 = and i8 %638, 1
  %640 = zext i8 %639 to i32
  %641 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 102
  store i32 %640, i32* %641, align 8
  %642 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 104
  %643 = load i64, i64* %642, align 1
  %644 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 103
  store i64 %643, i64* %644, align 8
  %645 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 105
  %646 = load i64, i64* %645, align 1
  %647 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 104
  store i64 %646, i64* %647, align 8
  %648 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %0, i64 0, i32 106
  %649 = load i64, i64* %648, align 1
  %650 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %2, i64 0, i32 105
  store i64 %649, i64* %650, align 8
  br label %651

651:                                              ; preds = %577, %621
  %652 = phi i1 [ true, %621 ], [ false, %577 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %567) #5
  br label %653

653:                                              ; preds = %522, %651
  %654 = phi i1 [ %652, %651 ], [ false, %522 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %512) #5
  br label %655

655:                                              ; preds = %363, %653
  %656 = phi i1 [ %654, %653 ], [ false, %363 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %353) #5
  br label %657

657:                                              ; preds = %311, %655
  %658 = phi i1 [ %656, %655 ], [ false, %311 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %301) #5
  br label %659

659:                                              ; preds = %231, %657
  %660 = phi i1 [ %658, %657 ], [ false, %231 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %221) #5
  br label %661

661:                                              ; preds = %176, %659
  %662 = phi i1 [ %660, %659 ], [ false, %176 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %166) #5
  ret i1 %662
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3gpu5mojom40VkPhysicalDeviceSparsePropertiesDataViewE32VkPhysicalDeviceSparsePropertiesE4ReadES3_PS4_(%"class.gpu::mojom::internal::VkPhysicalDeviceSparseProperties_Data"*, %struct.VkPhysicalDeviceSparseProperties* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceSparseProperties_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceSparseProperties_Data"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 1
  %5 = and i8 %4, 1
  %6 = zext i8 %5 to i32
  %7 = getelementptr inbounds %struct.VkPhysicalDeviceSparseProperties, %struct.VkPhysicalDeviceSparseProperties* %1, i64 0, i32 0
  store i32 %6, i32* %7, align 4
  %8 = load i8, i8* %3, align 1
  %9 = lshr i8 %8, 1
  %10 = and i8 %9, 1
  %11 = zext i8 %10 to i32
  %12 = getelementptr inbounds %struct.VkPhysicalDeviceSparseProperties, %struct.VkPhysicalDeviceSparseProperties* %1, i64 0, i32 1
  store i32 %11, i32* %12, align 4
  %13 = load i8, i8* %3, align 1
  %14 = lshr i8 %13, 2
  %15 = and i8 %14, 1
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds %struct.VkPhysicalDeviceSparseProperties, %struct.VkPhysicalDeviceSparseProperties* %1, i64 0, i32 2
  store i32 %16, i32* %17, align 4
  %18 = load i8, i8* %3, align 1
  %19 = lshr i8 %18, 3
  %20 = and i8 %19, 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds %struct.VkPhysicalDeviceSparseProperties, %struct.VkPhysicalDeviceSparseProperties* %1, i64 0, i32 3
  store i32 %21, i32* %22, align 4
  %23 = load i8, i8* %3, align 1
  %24 = lshr i8 %23, 4
  %25 = and i8 %24, 1
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds %struct.VkPhysicalDeviceSparseProperties, %struct.VkPhysicalDeviceSparseProperties* %1, i64 0, i32 4
  store i32 %26, i32* %27, align 4
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3gpu5mojom32VkPhysicalDeviceFeaturesDataViewE24VkPhysicalDeviceFeaturesE4ReadES3_PS4_(%"class.gpu::mojom::internal::VkPhysicalDeviceFeatures_Data"*, %struct.VkPhysicalDeviceFeatures*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.gpu::mojom::internal::VkPhysicalDeviceFeatures_Data", %"class.gpu::mojom::internal::VkPhysicalDeviceFeatures_Data"* %0, i64 0, i32 1
  %4 = bitcast [7 x i8]* %3 to i56*
  %5 = load i56, i56* %4, align 1
  %6 = trunc i56 %5 to i32
  %7 = and i32 %6, 1
  %8 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 0
  store i32 %7, i32* %8, align 4
  %9 = load i56, i56* %4, align 1
  %10 = lshr i56 %9, 1
  %11 = trunc i56 %10 to i32
  %12 = and i32 %11, 1
  %13 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 1
  store i32 %12, i32* %13, align 4
  %14 = load i56, i56* %4, align 1
  %15 = lshr i56 %14, 2
  %16 = trunc i56 %15 to i32
  %17 = and i32 %16, 1
  %18 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 2
  store i32 %17, i32* %18, align 4
  %19 = load i56, i56* %4, align 1
  %20 = lshr i56 %19, 3
  %21 = trunc i56 %20 to i32
  %22 = and i32 %21, 1
  %23 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 3
  store i32 %22, i32* %23, align 4
  %24 = load i56, i56* %4, align 1
  %25 = lshr i56 %24, 4
  %26 = trunc i56 %25 to i32
  %27 = and i32 %26, 1
  %28 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 4
  store i32 %27, i32* %28, align 4
  %29 = load i56, i56* %4, align 1
  %30 = lshr i56 %29, 5
  %31 = trunc i56 %30 to i32
  %32 = and i32 %31, 1
  %33 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 5
  store i32 %32, i32* %33, align 4
  %34 = load i56, i56* %4, align 1
  %35 = lshr i56 %34, 6
  %36 = trunc i56 %35 to i32
  %37 = and i32 %36, 1
  %38 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 6
  store i32 %37, i32* %38, align 4
  %39 = load i56, i56* %4, align 1
  %40 = trunc i56 %39 to i32
  %41 = lshr i32 %40, 7
  %42 = and i32 %41, 1
  %43 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 7
  store i32 %42, i32* %43, align 4
  %44 = load i56, i56* %4, align 1
  %45 = lshr i56 %44, 8
  %46 = trunc i56 %45 to i32
  %47 = and i32 %46, 1
  %48 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 8
  store i32 %47, i32* %48, align 4
  %49 = load i56, i56* %4, align 1
  %50 = lshr i56 %49, 9
  %51 = trunc i56 %50 to i32
  %52 = and i32 %51, 1
  %53 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 9
  store i32 %52, i32* %53, align 4
  %54 = load i56, i56* %4, align 1
  %55 = lshr i56 %54, 10
  %56 = trunc i56 %55 to i32
  %57 = and i32 %56, 1
  %58 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 10
  store i32 %57, i32* %58, align 4
  %59 = load i56, i56* %4, align 1
  %60 = lshr i56 %59, 11
  %61 = trunc i56 %60 to i32
  %62 = and i32 %61, 1
  %63 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 11
  store i32 %62, i32* %63, align 4
  %64 = load i56, i56* %4, align 1
  %65 = lshr i56 %64, 12
  %66 = trunc i56 %65 to i32
  %67 = and i32 %66, 1
  %68 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 12
  store i32 %67, i32* %68, align 4
  %69 = load i56, i56* %4, align 1
  %70 = lshr i56 %69, 13
  %71 = trunc i56 %70 to i32
  %72 = and i32 %71, 1
  %73 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 13
  store i32 %72, i32* %73, align 4
  %74 = load i56, i56* %4, align 1
  %75 = lshr i56 %74, 14
  %76 = trunc i56 %75 to i32
  %77 = and i32 %76, 1
  %78 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 14
  store i32 %77, i32* %78, align 4
  %79 = load i56, i56* %4, align 1
  %80 = trunc i56 %79 to i32
  %81 = lshr i32 %80, 15
  %82 = and i32 %81, 1
  %83 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 15
  store i32 %82, i32* %83, align 4
  %84 = load i56, i56* %4, align 1
  %85 = lshr i56 %84, 16
  %86 = trunc i56 %85 to i32
  %87 = and i32 %86, 1
  %88 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 16
  store i32 %87, i32* %88, align 4
  %89 = load i56, i56* %4, align 1
  %90 = lshr i56 %89, 17
  %91 = trunc i56 %90 to i32
  %92 = and i32 %91, 1
  %93 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 17
  store i32 %92, i32* %93, align 4
  %94 = load i56, i56* %4, align 1
  %95 = lshr i56 %94, 18
  %96 = trunc i56 %95 to i32
  %97 = and i32 %96, 1
  %98 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 18
  store i32 %97, i32* %98, align 4
  %99 = load i56, i56* %4, align 1
  %100 = lshr i56 %99, 19
  %101 = trunc i56 %100 to i32
  %102 = and i32 %101, 1
  %103 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 19
  store i32 %102, i32* %103, align 4
  %104 = load i56, i56* %4, align 1
  %105 = lshr i56 %104, 20
  %106 = trunc i56 %105 to i32
  %107 = and i32 %106, 1
  %108 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 20
  store i32 %107, i32* %108, align 4
  %109 = load i56, i56* %4, align 1
  %110 = lshr i56 %109, 21
  %111 = trunc i56 %110 to i32
  %112 = and i32 %111, 1
  %113 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 21
  store i32 %112, i32* %113, align 4
  %114 = load i56, i56* %4, align 1
  %115 = lshr i56 %114, 22
  %116 = trunc i56 %115 to i32
  %117 = and i32 %116, 1
  %118 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 22
  store i32 %117, i32* %118, align 4
  %119 = load i56, i56* %4, align 1
  %120 = lshr i56 %119, 23
  %121 = trunc i56 %120 to i32
  %122 = and i32 %121, 1
  %123 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 23
  store i32 %122, i32* %123, align 4
  %124 = load i56, i56* %4, align 1
  %125 = lshr i56 %124, 24
  %126 = trunc i56 %125 to i32
  %127 = and i32 %126, 1
  %128 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 24
  store i32 %127, i32* %128, align 4
  %129 = load i56, i56* %4, align 1
  %130 = lshr i56 %129, 25
  %131 = trunc i56 %130 to i32
  %132 = and i32 %131, 1
  %133 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 25
  store i32 %132, i32* %133, align 4
  %134 = load i56, i56* %4, align 1
  %135 = lshr i56 %134, 26
  %136 = trunc i56 %135 to i32
  %137 = and i32 %136, 1
  %138 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 26
  store i32 %137, i32* %138, align 4
  %139 = load i56, i56* %4, align 1
  %140 = lshr i56 %139, 27
  %141 = trunc i56 %140 to i32
  %142 = and i32 %141, 1
  %143 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 27
  store i32 %142, i32* %143, align 4
  %144 = load i56, i56* %4, align 1
  %145 = lshr i56 %144, 28
  %146 = trunc i56 %145 to i32
  %147 = and i32 %146, 1
  %148 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 28
  store i32 %147, i32* %148, align 4
  %149 = load i56, i56* %4, align 1
  %150 = lshr i56 %149, 29
  %151 = trunc i56 %150 to i32
  %152 = and i32 %151, 1
  %153 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 29
  store i32 %152, i32* %153, align 4
  %154 = load i56, i56* %4, align 1
  %155 = lshr i56 %154, 30
  %156 = trunc i56 %155 to i32
  %157 = and i32 %156, 1
  %158 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 30
  store i32 %157, i32* %158, align 4
  %159 = load i56, i56* %4, align 1
  %160 = trunc i56 %159 to i32
  %161 = lshr i32 %160, 31
  %162 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 31
  store i32 %161, i32* %162, align 4
  %163 = load i56, i56* %4, align 1
  %164 = lshr i56 %163, 32
  %165 = trunc i56 %164 to i32
  %166 = and i32 %165, 1
  %167 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 32
  store i32 %166, i32* %167, align 4
  %168 = load i56, i56* %4, align 1
  %169 = lshr i56 %168, 33
  %170 = trunc i56 %169 to i32
  %171 = and i32 %170, 1
  %172 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 33
  store i32 %171, i32* %172, align 4
  %173 = load i56, i56* %4, align 1
  %174 = lshr i56 %173, 34
  %175 = trunc i56 %174 to i32
  %176 = and i32 %175, 1
  %177 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 34
  store i32 %176, i32* %177, align 4
  %178 = load i56, i56* %4, align 1
  %179 = lshr i56 %178, 35
  %180 = trunc i56 %179 to i32
  %181 = and i32 %180, 1
  %182 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 35
  store i32 %181, i32* %182, align 4
  %183 = load i56, i56* %4, align 1
  %184 = lshr i56 %183, 36
  %185 = trunc i56 %184 to i32
  %186 = and i32 %185, 1
  %187 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 36
  store i32 %186, i32* %187, align 4
  %188 = load i56, i56* %4, align 1
  %189 = lshr i56 %188, 37
  %190 = trunc i56 %189 to i32
  %191 = and i32 %190, 1
  %192 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 37
  store i32 %191, i32* %192, align 4
  %193 = load i56, i56* %4, align 1
  %194 = lshr i56 %193, 38
  %195 = trunc i56 %194 to i32
  %196 = and i32 %195, 1
  %197 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 38
  store i32 %196, i32* %197, align 4
  %198 = load i56, i56* %4, align 1
  %199 = lshr i56 %198, 39
  %200 = trunc i56 %199 to i32
  %201 = and i32 %200, 1
  %202 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 39
  store i32 %201, i32* %202, align 4
  %203 = load i56, i56* %4, align 1
  %204 = lshr i56 %203, 40
  %205 = trunc i56 %204 to i32
  %206 = and i32 %205, 1
  %207 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 40
  store i32 %206, i32* %207, align 4
  %208 = load i56, i56* %4, align 1
  %209 = lshr i56 %208, 41
  %210 = trunc i56 %209 to i32
  %211 = and i32 %210, 1
  %212 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 41
  store i32 %211, i32* %212, align 4
  %213 = load i56, i56* %4, align 1
  %214 = lshr i56 %213, 42
  %215 = trunc i56 %214 to i32
  %216 = and i32 %215, 1
  %217 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 42
  store i32 %216, i32* %217, align 4
  %218 = load i56, i56* %4, align 1
  %219 = lshr i56 %218, 43
  %220 = trunc i56 %219 to i32
  %221 = and i32 %220, 1
  %222 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 43
  store i32 %221, i32* %222, align 4
  %223 = load i56, i56* %4, align 1
  %224 = lshr i56 %223, 44
  %225 = trunc i56 %224 to i32
  %226 = and i32 %225, 1
  %227 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 44
  store i32 %226, i32* %227, align 4
  %228 = load i56, i56* %4, align 1
  %229 = lshr i56 %228, 45
  %230 = trunc i56 %229 to i32
  %231 = and i32 %230, 1
  %232 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 45
  store i32 %231, i32* %232, align 4
  %233 = load i56, i56* %4, align 1
  %234 = lshr i56 %233, 46
  %235 = trunc i56 %234 to i32
  %236 = and i32 %235, 1
  %237 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 46
  store i32 %236, i32* %237, align 4
  %238 = load i56, i56* %4, align 1
  %239 = lshr i56 %238, 47
  %240 = trunc i56 %239 to i32
  %241 = and i32 %240, 1
  %242 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 47
  store i32 %241, i32* %242, align 4
  %243 = load i56, i56* %4, align 1
  %244 = lshr i56 %243, 48
  %245 = trunc i56 %244 to i32
  %246 = and i32 %245, 1
  %247 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 48
  store i32 %246, i32* %247, align 4
  %248 = load i56, i56* %4, align 1
  %249 = lshr i56 %248, 49
  %250 = trunc i56 %249 to i32
  %251 = and i32 %250, 1
  %252 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 49
  store i32 %251, i32* %252, align 4
  %253 = load i56, i56* %4, align 1
  %254 = lshr i56 %253, 50
  %255 = trunc i56 %254 to i32
  %256 = and i32 %255, 1
  %257 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 50
  store i32 %256, i32* %257, align 4
  %258 = load i56, i56* %4, align 1
  %259 = lshr i56 %258, 51
  %260 = trunc i56 %259 to i32
  %261 = and i32 %260, 1
  %262 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 51
  store i32 %261, i32* %262, align 4
  %263 = load i56, i56* %4, align 1
  %264 = lshr i56 %263, 52
  %265 = trunc i56 %264 to i32
  %266 = and i32 %265, 1
  %267 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 52
  store i32 %266, i32* %267, align 4
  %268 = load i56, i56* %4, align 1
  %269 = lshr i56 %268, 53
  %270 = trunc i56 %269 to i32
  %271 = and i32 %270, 1
  %272 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 53
  store i32 %271, i32* %272, align 4
  %273 = load i56, i56* %4, align 1
  %274 = lshr i56 %273, 54
  %275 = trunc i56 %274 to i32
  %276 = and i32 %275, 1
  %277 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %1, i64 0, i32 54
  store i32 %276, i32* %277, align 4
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3gpu5mojom31VkQueueFamilyPropertiesDataViewE23VkQueueFamilyPropertiesE4ReadES3_PS4_(%"class.gpu::mojom::internal::VkQueueFamilyProperties_Data"*, %"class.mojo::Message"*, %struct.VkQueueFamilyProperties* nocapture) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.gpu::mojom::internal::VkQueueFamilyProperties_Data", %"class.gpu::mojom::internal::VkQueueFamilyProperties_Data"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %2, i64 0, i32 0
  store i32 %5, i32* %6, align 4
  %7 = getelementptr inbounds %"class.gpu::mojom::internal::VkQueueFamilyProperties_Data", %"class.gpu::mojom::internal::VkQueueFamilyProperties_Data"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 1
  %9 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %2, i64 0, i32 1
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds %"class.gpu::mojom::internal::VkQueueFamilyProperties_Data", %"class.gpu::mojom::internal::VkQueueFamilyProperties_Data"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 1
  %12 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %2, i64 0, i32 2
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds %"class.gpu::mojom::internal::VkQueueFamilyProperties_Data", %"class.gpu::mojom::internal::VkQueueFamilyProperties_Data"* %0, i64 0, i32 5
  %14 = getelementptr inbounds %"struct.mojo::internal::Pointer.27", %"struct.mojo::internal::Pointer.27"* %13, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = bitcast %"struct.mojo::internal::Pointer.27"* %13 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %15
  br i1 %16, label %32, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds i8, i8* %18, i64 8
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 1
  %23 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %2, i64 0, i32 3, i32 0
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %18, i64 12
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 1
  %27 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %2, i64 0, i32 3, i32 1
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %18, i64 16
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 1
  %31 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %2, i64 0, i32 3, i32 2
  store i32 %30, i32* %31, align 4
  br label %32

32:                                               ; preds = %3, %19
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3gpu5mojom18VkExtent3DDataViewE10VkExtent3DE4ReadES3_PS4_(%"class.gpu::mojom::internal::VkExtent3D_Data"*, %struct.VkExtent3D* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.gpu::mojom::internal::VkExtent3D_Data", %"class.gpu::mojom::internal::VkExtent3D_Data"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 1
  %5 = getelementptr inbounds %struct.VkExtent3D, %struct.VkExtent3D* %1, i64 0, i32 0
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %"class.gpu::mojom::internal::VkExtent3D_Data", %"class.gpu::mojom::internal::VkExtent3D_Data"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 1
  %8 = getelementptr inbounds %struct.VkExtent3D, %struct.VkExtent3D* %1, i64 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %"class.gpu::mojom::internal::VkExtent3D_Data", %"class.gpu::mojom::internal::VkExtent3D_Data"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 1
  %11 = getelementptr inbounds %struct.VkExtent3D, %struct.VkExtent3D* %1, i64 0, i32 2
  store i32 %10, i32* %11, align 4
  ret i1 true
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #3

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8* } @_ZNK4base4spanIhLm18446744073709551615EE7subspanEmm(%"class.base::span"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.base::span", %"class.base::span"* %0, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #5
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #5
  %12 = load i64, i64* %6, align 8
  br label %13

13:                                               ; preds = %3, %9
  %14 = phi i64 [ %7, %3 ], [ %12, %9 ]
  %15 = icmp eq i64 %2, -1
  %16 = sub i64 %14, %1
  br i1 %15, label %22, label %17

17:                                               ; preds = %13
  %18 = icmp ult i64 %16, %2
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 404, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.4, i64 0, i64 0)) #5
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  br label %22

22:                                               ; preds = %13, %19, %17
  %23 = phi i64 [ %2, %17 ], [ %2, %19 ], [ %16, %13 ]
  %24 = getelementptr inbounds %"class.base::span", %"class.base::span"* %0, i64 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %1
  %27 = insertvalue { i64, i8* } undef, i64 %23, 0
  %28 = insertvalue { i64, i8* } %27, i8* %26, 1
  ret { i64, i8* } %28
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i32* } @_ZNK4base4spanIjLm18446744073709551615EE7subspanEmm(%"class.base::span.25"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.base::span.25", %"class.base::span.25"* %0, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #5
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #5
  %12 = load i64, i64* %6, align 8
  br label %13

13:                                               ; preds = %3, %9
  %14 = phi i64 [ %7, %3 ], [ %12, %9 ]
  %15 = icmp eq i64 %2, -1
  %16 = sub i64 %14, %1
  br i1 %15, label %22, label %17

17:                                               ; preds = %13
  %18 = icmp ult i64 %16, %2
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 404, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.4, i64 0, i64 0)) #5
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  br label %22

22:                                               ; preds = %13, %19, %17
  %23 = phi i64 [ %2, %17 ], [ %2, %19 ], [ %16, %13 ]
  %24 = getelementptr inbounds %"class.base::span.25", %"class.base::span.25"* %0, i64 0, i32 1
  %25 = load i32*, i32** %24, align 8
  %26 = getelementptr inbounds i32, i32* %25, i64 %1
  %27 = insertvalue { i64, i32* } undef, i64 %23, 0
  %28 = insertvalue { i64, i32* } %27, i32* %26, 1
  ret { i64, i32* } %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, float* } @_ZNK4base4spanIfLm18446744073709551615EE7subspanEmm(%"class.base::span.26"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.base::span.26", %"class.base::span.26"* %0, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #5
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #5
  %12 = load i64, i64* %6, align 8
  br label %13

13:                                               ; preds = %3, %9
  %14 = phi i64 [ %7, %3 ], [ %12, %9 ]
  %15 = icmp eq i64 %2, -1
  %16 = sub i64 %14, %1
  br i1 %15, label %22, label %17

17:                                               ; preds = %13
  %18 = icmp ult i64 %16, %2
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 404, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.4, i64 0, i64 0)) #5
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  br label %22

22:                                               ; preds = %13, %19, %17
  %23 = phi i64 [ %2, %17 ], [ %2, %19 ], [ %16, %13 ]
  %24 = getelementptr inbounds %"class.base::span.26", %"class.base::span.26"* %0, i64 0, i32 1
  %25 = load float*, float** %24, align 8
  %26 = getelementptr inbounds float, float* %25, i64 %1
  %27 = insertvalue { i64, float* } undef, i64 %23, 0
  %28 = insertvalue { i64, float* } %27, float* %26, 1
  ret { i64, float* } %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
