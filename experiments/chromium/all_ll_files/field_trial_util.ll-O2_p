; ModuleID = '../../components/variations/field_trial_config/field_trial_util.cc'
source_filename = "../../components/variations/field_trial_config/field_trial_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.variations::FieldTrialTestingConfig" = type { %"struct.variations::FieldTrialTestingStudy"*, i64 }
%"struct.variations::FieldTrialTestingStudy" = type { i8*, %"struct.variations::FieldTrialTestingExperiment"*, i64 }
%"struct.variations::FieldTrialTestingExperiment" = type { i8*, i32*, i64, i32*, i64, %"class.absl::optional", i8*, %"struct.variations::FieldTrialTestingExperimentParams"*, i64, i8**, i64, i8**, i64, i8*, %"struct.variations::OverrideUIString"*, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { i8 }
%"struct.variations::FieldTrialTestingExperimentParams" = type { i8*, i8* }
%"struct.variations::OverrideUIString" = type { i32, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::FeatureList" = type <{ %"class.base::flat_map", %"class.base::Lock", %"class.std::__1::map", %"class.base::FieldTrialList"*, i8, i8, [6 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.3" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::pair"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64 }
%"class.base::FieldTrialList" = type <{ %"class.base::Lock", %"class.std::__1::map.16", %"class.std::__1::unique_ptr", %"class.std::__1::vector.29", %"struct.std::__1::atomic", [4 x i8], %"class.std::__1::unique_ptr.36", %"class.base::ReadOnlySharedMemoryRegion", i8, [7 x i8] }>
%"class.std::__1::map.16" = type { %"class.std::__1::__tree.17" }
%"class.std::__1::__tree.17" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.base::FieldTrial::EntropyProvider"* }
%"class.base::FieldTrial::EntropyProvider" = type { i32 (...)** }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.base::FieldTrialList::Observer"**, %"class.base::FieldTrialList::Observer"**, %"class.std::__1::__compressed_pair.31" }
%"class.base::FieldTrialList::Observer" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.base::FieldTrialList::Observer"** }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.base::PersistentMemoryAllocator"* }
%"class.base::PersistentMemoryAllocator" = type { i32 (...)**, i8*, i32, i32, i32, i64, i8, %"struct.std::__1::atomic.39", %"class.base::HistogramBase"*, %"class.base::HistogramBase"*, %"class.base::HistogramBase"* }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl.41" }
%"struct.std::__1::__cxx_atomic_impl.41" = type { %"struct.std::__1::__cxx_atomic_base_impl.42" }
%"struct.std::__1::__cxx_atomic_base_impl.42" = type { i8 }
%"class.base::HistogramBase" = type opaque
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::Version" = type { %"class.std::__1::vector.62" }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { i32*, i32*, %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { i32* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::basic_string.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.86 }
%union.anon.86 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::map.69" = type { %"class.std::__1::__tree.70" }
%"class.std::__1::__tree.70" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.76" }
%"struct.std::__1::pair.76" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.87 }
%struct.anon.87 = type { %"struct.std::__1::__padding.88", i8 }
%"struct.std::__1::__padding.88" = type { [1 x i8] }
%"class.base::CommandLine" = type { %"class.std::__1::vector.46", %"class.std::__1::map.53", i64 }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map.53" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::FieldTrial" = type { i32 (...)**, %"class.base::RefCounted", %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", i32, i32, i32, i32, %"class.std::__1::basic_string", i8, i8, i8, i8, i32 }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

@.str = private unnamed_addr constant [4 x i8] c"%2E\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%2A\00", align 1
@_ZN10variations17kFieldTrialConfigE = external global %"struct.variations::FieldTrialTestingConfig", align 8
@.str.2 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"s\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations11EscapeValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load i8, i8* %8, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %15 = select i1 %11, i8* %13, i8* %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %10 to i64
  %19 = select i1 %11, i64 %17, i64 %18
  call void @_ZN3net21EscapeQueryParamValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.std::__1::basic_string"* nonnull sret %3, i8* %15, i64 %19, i1 zeroext true) #10
  %20 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #10
  %21 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = load i64, i64* %6, align 8
  %26 = zext i8 %23 to i64
  %27 = select i1 %24, i64 %25, i64 %26
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %0, i64 %27) #10
  %28 = load i8, i8* %22, align 1
  %29 = icmp slt i8 %28, 0
  %30 = load i8*, i8** %5, align 8
  %31 = load i64, i64* %6, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i8* %30, i8* %4
  %34 = select i1 %29, i64 %31, i64 %32
  %35 = getelementptr inbounds i8, i8* %33, i64 %34
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %39, label %45

37:                                               ; preds = %53
  %38 = load i8, i8* %22, align 1
  br label %39

39:                                               ; preds = %37, %2
  %40 = phi i8 [ %38, %37 ], [ %28, %2 ]
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %39
  %43 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %43) #11
  br label %44

44:                                               ; preds = %39, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void

45:                                               ; preds = %2, %53
  %46 = phi i8* [ %54, %53 ], [ %33, %2 ]
  %47 = load i8, i8* %46, align 1
  switch i8 %47, label %52 [
    i8 46, label %48
    i8 42, label %50
  ]

48:                                               ; preds = %45
  %49 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)) #10
  br label %53

50:                                               ; preds = %45
  %51 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)) #10
  br label %53

52:                                               ; preds = %45
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %0, i8 signext %47) #10
  br label %53

53:                                               ; preds = %50, %52, %48
  %54 = getelementptr inbounds i8, i8* %46, i64 1
  %55 = icmp eq i8* %54, %35
  br i1 %55, label %37, label %45
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3net21EscapeQueryParamValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.std::__1::basic_string"* sret, i8*, i64, i1 zeroext) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10variations25AssociateParamsFromStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = tail call zeroext i1 @_ZN4base35AssociateFieldTrialParamsFromStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPFS6_S8_E(%"class.std::__1::basic_string"* dereferenceable(24) %0, void (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* nonnull @_ZN4base13UnescapeValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE) #10
  ret i1 %2
}

declare zeroext i1 @_ZN4base35AssociateFieldTrialParamsFromStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPFS6_S8_E(%"class.std::__1::basic_string"* dereferenceable(24), void (%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*) local_unnamed_addr #2

declare void @_ZN4base13UnescapeValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations35AssociateParamsFromFieldTrialConfigERKNS_23FieldTrialTestingConfigERKN4base17RepeatingCallbackIFvjRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEEENS_14Study_PlatformENS_16Study_FormFactorEPNS3_11FeatureListE(%"struct.variations::FieldTrialTestingConfig"* nocapture readonly dereferenceable(16), %"class.base::RepeatingCallback"* nocapture readonly dereferenceable(8), i32, i32, %"class.base::FeatureList"*) local_unnamed_addr #0 {
  %6 = alloca %"class.base::Version", align 8
  %7 = alloca %"class.base::Version", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.std::__1::basic_string.83", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %12 = alloca %"class.std::__1::map.69", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = getelementptr inbounds %"struct.variations::FieldTrialTestingConfig", %"struct.variations::FieldTrialTestingConfig"* %0, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %73, label %21

21:                                               ; preds = %5
  %22 = getelementptr inbounds %"struct.variations::FieldTrialTestingConfig", %"struct.variations::FieldTrialTestingConfig"* %0, i64 0, i32 0
  %23 = bitcast %"class.base::Version"* %6 to i8*
  %24 = bitcast %"class.base::Version"* %7 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = bitcast %"class.std::__1::map.69"* %12 to i8*
  %32 = getelementptr inbounds %"class.std::__1::map.69", %"class.std::__1::map.69"* %12, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::map.69", %"class.std::__1::map.69"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::map.69", %"class.std::__1::map.69"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::map.69", %"class.std::__1::map.69"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %36 = bitcast %"class.std::__1::__tree_node_base"** %33 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = getelementptr inbounds %"class.std::__1::map.69", %"class.std::__1::map.69"* %12, i64 0, i32 0
  %44 = bitcast %"class.std::__1::__tree_end_node"** %11 to i8*
  %45 = bitcast %"class.std::__1::__tree_end_node"** %11 to i64*
  %46 = bitcast %"class.std::__1::map.69"* %12 to i64*
  %47 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node"**
  %54 = bitcast %"class.logging::CheckError"* %10 to i8*
  %55 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = bitcast %"class.std::__1::basic_string.83"* %9 to i8*
  %68 = bitcast %"class.logging::CheckError"* %8 to i8*
  %69 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::basic_string.83"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %70, i64 0, i32 1, i32 1
  %72 = bitcast %"class.std::__1::basic_string.83"* %9 to i8**
  br label %74

73:                                               ; preds = %436, %5
  ret void

74:                                               ; preds = %21, %436
  %75 = phi i64 [ 0, %21 ], [ %437, %436 ]
  %76 = load %"struct.variations::FieldTrialTestingStudy"*, %"struct.variations::FieldTrialTestingStudy"** %22, align 8
  %77 = getelementptr inbounds %"struct.variations::FieldTrialTestingStudy", %"struct.variations::FieldTrialTestingStudy"* %76, i64 %75, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %436, label %80

80:                                               ; preds = %74
  %81 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #10
  %82 = load i64, i64* %77, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %436, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"struct.variations::FieldTrialTestingStudy", %"struct.variations::FieldTrialTestingStudy"* %76, i64 %75, i32 1
  br label %86

86:                                               ; preds = %148, %84
  %87 = phi i64 [ 0, %84 ], [ %150, %148 ]
  %88 = phi %"struct.variations::FieldTrialTestingExperiment"* [ null, %84 ], [ %149, %148 ]
  %89 = load %"struct.variations::FieldTrialTestingExperiment"*, %"struct.variations::FieldTrialTestingExperiment"** %85, align 8
  %90 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperiment", %"struct.variations::FieldTrialTestingExperiment"* %89, i64 %87
  %91 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperiment", %"struct.variations::FieldTrialTestingExperiment"* %89, i64 %87, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %148, label %94

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperiment", %"struct.variations::FieldTrialTestingExperiment"* %89, i64 %87, i32 1
  %96 = load i32*, i32** %95, align 8
  br label %99

97:                                               ; preds = %99
  %98 = icmp eq i64 %104, %92
  br i1 %98, label %148, label %99

99:                                               ; preds = %97, %94
  %100 = phi i64 [ 0, %94 ], [ %104, %97 ]
  %101 = getelementptr inbounds i32, i32* %96, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, %2
  %104 = add nuw i64 %100, 1
  br i1 %103, label %105, label %97

105:                                              ; preds = %99
  %106 = icmp eq %"struct.variations::FieldTrialTestingExperiment"* %88, null
  br i1 %106, label %107, label %141

107:                                              ; preds = %105
  %108 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperiment", %"struct.variations::FieldTrialTestingExperiment"* %89, i64 %87, i32 5, i32 0, i32 0, i32 0, i32 0
  %109 = load i8, i8* %108, align 1, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %118, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperiment", %"struct.variations::FieldTrialTestingExperiment"* %89, i64 %87, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1, !range !2
  %114 = zext i8 %113 to i32
  %115 = call zeroext i1 @_ZN4base7SysInfo14IsLowEndDeviceEv() #10
  %116 = zext i1 %115 to i32
  %117 = icmp eq i32 %114, %116
  br i1 %117, label %118, label %141

118:                                              ; preds = %111, %107
  %119 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperiment", %"struct.variations::FieldTrialTestingExperiment"* %89, i64 %87, i32 4
  %120 = load i64, i64* %119, align 8
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %133, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperiment", %"struct.variations::FieldTrialTestingExperiment"* %89, i64 %87, i32 3
  %124 = load i32*, i32** %123, align 8
  br label %127

125:                                              ; preds = %127
  %126 = icmp eq i64 %132, %120
  br i1 %126, label %141, label %127

127:                                              ; preds = %125, %122
  %128 = phi i64 [ 0, %122 ], [ %132, %125 ]
  %129 = getelementptr inbounds i32, i32* %124, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, %3
  %132 = add nuw i64 %128, 1
  br i1 %131, label %133, label %125

133:                                              ; preds = %127, %118
  %134 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperiment", %"struct.variations::FieldTrialTestingExperiment"* %89, i64 %87, i32 6
  %135 = load i8*, i8** %134, align 8
  %136 = icmp eq i8* %135, null
  br i1 %136, label %140, label %137

137:                                              ; preds = %133
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #10
  %138 = call i64 @strlen(i8* nonnull %135) #10
  call void @_ZN4base7VersionC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"* nonnull %6, i8* nonnull %135, i64 %138) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #10
  call void @_ZN10variations21ClientFilterableState12GetOSVersionEv(%"class.base::Version"* nonnull sret %7) #10
  %139 = call zeroext i1 @_ZN4baseleERKNS_7VersionES2_(%"class.base::Version"* nonnull dereferenceable(24) %6, %"class.base::Version"* nonnull dereferenceable(24) %7) #10
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #10
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #10
  br i1 %139, label %140, label %141

140:                                              ; preds = %137, %133
  br label %141

141:                                              ; preds = %125, %140, %137, %111, %105
  %142 = phi %"struct.variations::FieldTrialTestingExperiment"* [ %88, %105 ], [ null, %111 ], [ %90, %140 ], [ null, %137 ], [ null, %125 ]
  %143 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperiment", %"struct.variations::FieldTrialTestingExperiment"* %89, i64 %87, i32 13
  %144 = load i8*, i8** %143, align 8
  %145 = icmp eq i8* %144, null
  br i1 %145, label %148, label %146

146:                                              ; preds = %141
  %147 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %81, i8* nonnull %144) #10
  br i1 %147, label %153, label %148

148:                                              ; preds = %97, %146, %141, %86
  %149 = phi %"struct.variations::FieldTrialTestingExperiment"* [ %142, %146 ], [ %142, %141 ], [ %88, %86 ], [ %88, %97 ]
  %150 = add nuw i64 %87, 1
  %151 = load i64, i64* %77, align 8
  %152 = icmp ult i64 %150, %151
  br i1 %152, label %86, label %153

153:                                              ; preds = %148, %146
  %154 = phi %"struct.variations::FieldTrialTestingExperiment"* [ %149, %148 ], [ %90, %146 ]
  %155 = icmp eq %"struct.variations::FieldTrialTestingExperiment"* %154, null
  br i1 %155, label %436, label %156

156:                                              ; preds = %153
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #10
  %157 = getelementptr inbounds %"struct.variations::FieldTrialTestingStudy", %"struct.variations::FieldTrialTestingStudy"* %76, i64 %75, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = call i64 @strlen(i8* %158) #10
  %160 = icmp ugt i64 %159, -17
  br i1 %160, label %161, label %163

161:                                              ; preds = %156
  %162 = bitcast %"class.std::__1::basic_string"* %17 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %162) #12
  unreachable

163:                                              ; preds = %156
  %164 = icmp ult i64 %159, 23
  br i1 %164, label %170, label %165

165:                                              ; preds = %163
  %166 = add nuw i64 %159, 16
  %167 = and i64 %166, -16
  %168 = call i8* @_Znwm(i64 %167) #11
  store i8* %168, i8** %26, align 8
  %169 = or i64 %167, -9223372036854775808
  store i64 %169, i64* %27, align 8
  store i64 %159, i64* %28, align 8
  br label %173

170:                                              ; preds = %163
  %171 = trunc i64 %159 to i8
  store i8 %171, i8* %30, align 1
  %172 = icmp eq i64 %159, 0
  br i1 %172, label %175, label %173

173:                                              ; preds = %170, %165
  %174 = phi i8* [ %168, %165 ], [ %25, %170 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %174, i8* align 1 %158, i64 %159, i1 false) #10
  br label %175

175:                                              ; preds = %173, %170
  %176 = phi i8* [ %25, %170 ], [ %174, %173 ]
  %177 = getelementptr inbounds i8, i8* %176, i64 %159
  store i8 0, i8* %177, align 1
  %178 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperiment", %"struct.variations::FieldTrialTestingExperiment"* %154, i64 0, i32 8
  %179 = load i64, i64* %178, align 8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %303, label %181

181:                                              ; preds = %175
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %35, %"class.std::__1::__tree_end_node"** %32, align 8
  %182 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperiment", %"struct.variations::FieldTrialTestingExperiment"* %154, i64 0, i32 7
  br label %212

183:                                              ; preds = %299
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #10
  %184 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperiment", %"struct.variations::FieldTrialTestingExperiment"* %154, i64 0, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = call i64 @strlen(i8* %185) #10
  %187 = icmp ugt i64 %186, -17
  br i1 %187, label %188, label %190

188:                                              ; preds = %183
  %189 = bitcast %"class.std::__1::basic_string"* %14 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %189) #12
  unreachable

190:                                              ; preds = %183
  %191 = icmp ult i64 %186, 23
  br i1 %191, label %197, label %192

192:                                              ; preds = %190
  %193 = add nuw i64 %186, 16
  %194 = and i64 %193, -16
  %195 = call i8* @_Znwm(i64 %194) #11
  store i8* %195, i8** %48, align 8
  %196 = or i64 %194, -9223372036854775808
  store i64 %196, i64* %49, align 8
  store i64 %186, i64* %50, align 8
  br label %200

197:                                              ; preds = %190
  %198 = trunc i64 %186 to i8
  store i8 %198, i8* %52, align 1
  %199 = icmp eq i64 %186, 0
  br i1 %199, label %202, label %200

200:                                              ; preds = %197, %192
  %201 = phi i8* [ %47, %197 ], [ %195, %192 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %201, i8* align 1 %185, i64 %186, i1 false) #10
  br label %202

202:                                              ; preds = %200, %197
  %203 = phi i8* [ %47, %197 ], [ %201, %200 ]
  %204 = getelementptr inbounds i8, i8* %203, i64 %186
  store i8 0, i8* %204, align 1
  %205 = call zeroext i1 @_ZN4base25AssociateFieldTrialParamsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_RKNS0_3mapIS6_S6_NS0_4lessIS6_EENS4_INS0_4pairIS7_S6_EEEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14, %"class.std::__1::map.69"* nonnull dereferenceable(24) %12) #10
  %206 = load i8, i8* %52, align 1
  %207 = icmp slt i8 %206, 0
  br i1 %207, label %208, label %210

208:                                              ; preds = %202
  %209 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %209) #11
  br label %210

210:                                              ; preds = %208, %202
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #10
  %211 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.70"* nonnull %43, %"class.std::__1::__tree_node"* %211) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br label %303

212:                                              ; preds = %299, %181
  %213 = phi i64 [ 0, %181 ], [ %300, %299 ]
  %214 = load %"struct.variations::FieldTrialTestingExperimentParams"*, %"struct.variations::FieldTrialTestingExperimentParams"** %182, align 8
  %215 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperimentParams", %"struct.variations::FieldTrialTestingExperimentParams"* %214, i64 %213, i32 1
  %216 = load i8*, i8** %215, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #10
  %217 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperimentParams", %"struct.variations::FieldTrialTestingExperimentParams"* %214, i64 %213, i32 0
  %218 = load i8*, i8** %217, align 8
  %219 = call i64 @strlen(i8* %218) #10
  %220 = icmp ugt i64 %219, -17
  br i1 %220, label %221, label %223

221:                                              ; preds = %212
  %222 = bitcast %"class.std::__1::basic_string"* %13 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %222) #12
  unreachable

223:                                              ; preds = %212
  %224 = icmp ult i64 %219, 23
  br i1 %224, label %230, label %225

225:                                              ; preds = %223
  %226 = add nuw i64 %219, 16
  %227 = and i64 %226, -16
  %228 = call i8* @_Znwm(i64 %227) #11
  store i8* %228, i8** %38, align 8
  %229 = or i64 %227, -9223372036854775808
  store i64 %229, i64* %39, align 8
  store i64 %219, i64* %40, align 8
  br label %233

230:                                              ; preds = %223
  %231 = trunc i64 %219 to i8
  store i8 %231, i8* %42, align 1
  %232 = icmp eq i64 %219, 0
  br i1 %232, label %235, label %233

233:                                              ; preds = %230, %225
  %234 = phi i8* [ %228, %225 ], [ %37, %230 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %234, i8* align 1 %218, i64 %219, i1 false) #10
  br label %235

235:                                              ; preds = %233, %230
  %236 = phi i8* [ %37, %230 ], [ %234, %233 ]
  %237 = getelementptr inbounds i8, i8* %236, i64 %219
  store i8 0, i8* %237, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #10
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %11, align 8
  %238 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree.70"* nonnull %43, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #10
  %239 = bitcast %"class.std::__1::__tree_node_base"** %238 to %"class.std::__1::__tree_node"**
  %240 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %239, align 8
  %241 = icmp eq %"class.std::__1::__tree_node"* %240, null
  br i1 %241, label %242, label %264

242:                                              ; preds = %235
  %243 = call i8* @_Znwm(i64 80) #11, !noalias !3
  %244 = getelementptr inbounds i8, i8* %243, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %244, i8* nonnull align 8 %37, i64 24, i1 false) #10, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 24, i1 false) #10, !noalias !3
  %245 = getelementptr inbounds i8, i8* %243, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %245, i8 0, i64 24, i1 false) #10, !noalias !3
  %246 = load i64, i64* %45, align 8
  %247 = bitcast i8* %243 to %"class.std::__1::__tree_node"*
  %248 = bitcast i8* %243 to %"class.std::__1::__tree_node_base"*
  %249 = getelementptr inbounds i8, i8* %243, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %243, i8 0, i64 16, i1 false) #10
  %250 = bitcast i8* %249 to i64*
  store i64 %246, i64* %250, align 8
  %251 = bitcast %"class.std::__1::__tree_node_base"** %238 to i8**
  store i8* %243, i8** %251, align 8
  %252 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %253 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %252, i64 0, i32 0
  %254 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %253, align 8
  %255 = icmp eq %"class.std::__1::__tree_node_base"* %254, null
  br i1 %255, label %259, label %256

256:                                              ; preds = %242
  %257 = ptrtoint %"class.std::__1::__tree_node_base"* %254 to i64
  store i64 %257, i64* %46, align 8
  %258 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %238, align 8
  br label %259

259:                                              ; preds = %256, %242
  %260 = phi %"class.std::__1::__tree_node_base"* [ %248, %242 ], [ %258, %256 ]
  %261 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %261, %"class.std::__1::__tree_node_base"* %260) #10
  %262 = load i64, i64* %34, align 8
  %263 = add i64 %262, 1
  store i64 %263, i64* %34, align 8
  br label %264

264:                                              ; preds = %259, %235
  %265 = phi %"class.std::__1::__tree_node"* [ %247, %259 ], [ %240, %235 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #10
  %266 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %265, i64 0, i32 1, i32 0, i32 1
  %267 = load i8, i8* %216, align 1
  %268 = call i1 @llvm.is.constant.i8(i8 %267) #10
  br i1 %268, label %269, label %292

269:                                              ; preds = %264
  %270 = call i64 @strlen(i8* %216) #10
  %271 = icmp ult i64 %270, 23
  br i1 %271, label %272, label %290

272:                                              ; preds = %269
  %273 = bitcast %"class.std::__1::basic_string"* %266 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %274 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %273, i64 0, i32 1, i32 0
  %275 = load i8, i8* %274, align 1
  %276 = icmp slt i8 %275, 0
  br i1 %276, label %277, label %281

277:                                              ; preds = %272
  %278 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %265, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %270, i64* %278, align 8
  %279 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %266, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load i8*, i8** %279, align 8
  br label %284

281:                                              ; preds = %272
  %282 = trunc i64 %270 to i8
  store i8 %282, i8* %274, align 1
  %283 = bitcast %"class.std::__1::basic_string"* %266 to i8*
  br label %284

284:                                              ; preds = %281, %277
  %285 = phi i8* [ %280, %277 ], [ %283, %281 ]
  %286 = icmp eq i64 %270, 0
  br i1 %286, label %288, label %287

287:                                              ; preds = %284
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %285, i8* align 1 %216, i64 %270, i1 false) #10
  br label %288

288:                                              ; preds = %287, %284
  %289 = getelementptr inbounds i8, i8* %285, i64 %270
  store i8 0, i8* %289, align 1
  br label %294

290:                                              ; preds = %269
  %291 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %266, i8* %216, i64 %270) #10
  br label %294

292:                                              ; preds = %264
  %293 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %266, i8* %216) #10
  br label %294

294:                                              ; preds = %292, %290, %288
  %295 = load i8, i8* %42, align 1
  %296 = icmp slt i8 %295, 0
  br i1 %296, label %297, label %299

297:                                              ; preds = %294
  %298 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %298) #11
  br label %299

299:                                              ; preds = %297, %294
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #10
  %300 = add nuw i64 %213, 1
  %301 = load i64, i64* %178, align 8
  %302 = icmp ult i64 %300, %301
  br i1 %302, label %212, label %183

303:                                              ; preds = %210, %175
  %304 = load i8, i8* %30, align 1
  %305 = icmp slt i8 %304, 0
  %306 = load i8*, i8** %26, align 8
  %307 = select i1 %305, i8* %306, i8* %25
  %308 = load i64, i64* %28, align 8
  %309 = zext i8 %304 to i64
  %310 = select i1 %305, i64 %308, i64 %309
  %311 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperiment", %"struct.variations::FieldTrialTestingExperiment"* %154, i64 0, i32 0
  %312 = load i8*, i8** %311, align 8
  %313 = icmp eq i8* %312, null
  br i1 %313, label %316, label %314

314:                                              ; preds = %303
  %315 = call i64 @strlen(i8* nonnull %312) #10
  br label %318

316:                                              ; preds = %303
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #10
  %317 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  br label %318

318:                                              ; preds = %316, %314
  %319 = phi i64 [ 0, %316 ], [ %315, %314 ]
  %320 = call %"class.base::FieldTrial"* @_ZN4base14FieldTrialList16CreateFieldTrialENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %307, i64 %310, i8* %312, i64 %319) #10
  %321 = icmp eq %"class.base::FieldTrial"* %320, null
  br i1 %321, label %430, label %322

322:                                              ; preds = %318
  %323 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperiment", %"struct.variations::FieldTrialTestingExperiment"* %154, i64 0, i32 10
  %324 = load i64, i64* %323, align 8
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %328, label %326

326:                                              ; preds = %322
  %327 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperiment", %"struct.variations::FieldTrialTestingExperiment"* %154, i64 0, i32 9
  br label %334

328:                                              ; preds = %362, %322
  %329 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperiment", %"struct.variations::FieldTrialTestingExperiment"* %154, i64 0, i32 12
  %330 = load i64, i64* %329, align 8
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %366, label %332

332:                                              ; preds = %328
  %333 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperiment", %"struct.variations::FieldTrialTestingExperiment"* %154, i64 0, i32 11
  br label %398

334:                                              ; preds = %362, %326
  %335 = phi i64 [ 0, %326 ], [ %363, %362 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #10
  %336 = load i8**, i8*** %327, align 8
  %337 = getelementptr inbounds i8*, i8** %336, i64 %335
  %338 = load i8*, i8** %337, align 8
  %339 = call i64 @strlen(i8* %338) #10
  %340 = icmp ugt i64 %339, -17
  br i1 %340, label %341, label %343

341:                                              ; preds = %334
  %342 = bitcast %"class.std::__1::basic_string"* %15 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %342) #12
  unreachable

343:                                              ; preds = %334
  %344 = icmp ult i64 %339, 23
  br i1 %344, label %350, label %345

345:                                              ; preds = %343
  %346 = add nuw i64 %339, 16
  %347 = and i64 %346, -16
  %348 = call i8* @_Znwm(i64 %347) #11
  store i8* %348, i8** %56, align 8
  %349 = or i64 %347, -9223372036854775808
  store i64 %349, i64* %57, align 8
  store i64 %339, i64* %58, align 8
  br label %353

350:                                              ; preds = %343
  %351 = trunc i64 %339 to i8
  store i8 %351, i8* %60, align 1
  %352 = icmp eq i64 %339, 0
  br i1 %352, label %355, label %353

353:                                              ; preds = %350, %345
  %354 = phi i8* [ %348, %345 ], [ %55, %350 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %354, i8* align 1 %338, i64 %339, i1 false) #10
  br label %355

355:                                              ; preds = %353, %350
  %356 = phi i8* [ %55, %350 ], [ %354, %353 ]
  %357 = getelementptr inbounds i8, i8* %356, i64 %339
  store i8 0, i8* %357, align 1
  call void @_ZN4base11FeatureList26RegisterFieldTrialOverrideERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_13OverrideStateEPNS_10FieldTrialE(%"class.base::FeatureList"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %15, i32 2, %"class.base::FieldTrial"* nonnull %320) #10
  %358 = load i8, i8* %60, align 1
  %359 = icmp slt i8 %358, 0
  br i1 %359, label %360, label %362

360:                                              ; preds = %355
  %361 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %361) #11
  br label %362

362:                                              ; preds = %360, %355
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #10
  %363 = add nuw i64 %335, 1
  %364 = load i64, i64* %323, align 8
  %365 = icmp ult i64 %363, %364
  br i1 %365, label %334, label %328

366:                                              ; preds = %426, %328
  %367 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperiment", %"struct.variations::FieldTrialTestingExperiment"* %154, i64 0, i32 15
  %368 = load i64, i64* %367, align 8
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %430, label %370

370:                                              ; preds = %366
  %371 = getelementptr inbounds %"struct.variations::FieldTrialTestingExperiment", %"struct.variations::FieldTrialTestingExperiment"* %154, i64 0, i32 14
  br label %372

372:                                              ; preds = %394, %370
  %373 = phi i64 [ 0, %370 ], [ %395, %394 ]
  %374 = load %"struct.variations::OverrideUIString"*, %"struct.variations::OverrideUIString"** %371, align 8
  %375 = getelementptr inbounds %"struct.variations::OverrideUIString", %"struct.variations::OverrideUIString"* %374, i64 %373, i32 0
  %376 = load i32, i32* %375, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #10
  %377 = getelementptr inbounds %"struct.variations::OverrideUIString", %"struct.variations::OverrideUIString"* %374, i64 %373, i32 1
  %378 = load i8*, i8** %377, align 8
  %379 = icmp eq i8* %378, null
  br i1 %379, label %382, label %380

380:                                              ; preds = %372
  %381 = call i64 @strlen(i8* nonnull %378) #10
  br label %384

382:                                              ; preds = %372
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #10
  %383 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #10
  br label %384

384:                                              ; preds = %382, %380
  %385 = phi i64 [ 0, %382 ], [ %381, %380 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.83"* nonnull sret %9, i8* %378, i64 %385) #10
  %386 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %69, align 8
  %387 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %386, i64 0, i32 1
  %388 = bitcast void ()** %387 to void (%"class.base::internal::BindStateBase"*, i32, %"class.std::__1::basic_string.83"*)**
  %389 = load void (%"class.base::internal::BindStateBase"*, i32, %"class.std::__1::basic_string.83"*)*, void (%"class.base::internal::BindStateBase"*, i32, %"class.std::__1::basic_string.83"*)** %388, align 8
  call void %389(%"class.base::internal::BindStateBase"* %386, i32 %376, %"class.std::__1::basic_string.83"* nonnull dereferenceable(24) %9) #10
  %390 = load i8, i8* %71, align 1
  %391 = icmp slt i8 %390, 0
  br i1 %391, label %392, label %394

392:                                              ; preds = %384
  %393 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %393) #11
  br label %394

394:                                              ; preds = %392, %384
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #10
  %395 = add nuw i64 %373, 1
  %396 = load i64, i64* %367, align 8
  %397 = icmp ult i64 %395, %396
  br i1 %397, label %372, label %430

398:                                              ; preds = %426, %332
  %399 = phi i64 [ 0, %332 ], [ %427, %426 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #10
  %400 = load i8**, i8*** %333, align 8
  %401 = getelementptr inbounds i8*, i8** %400, i64 %399
  %402 = load i8*, i8** %401, align 8
  %403 = call i64 @strlen(i8* %402) #10
  %404 = icmp ugt i64 %403, -17
  br i1 %404, label %405, label %407

405:                                              ; preds = %398
  %406 = bitcast %"class.std::__1::basic_string"* %16 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %406) #12
  unreachable

407:                                              ; preds = %398
  %408 = icmp ult i64 %403, 23
  br i1 %408, label %414, label %409

409:                                              ; preds = %407
  %410 = add nuw i64 %403, 16
  %411 = and i64 %410, -16
  %412 = call i8* @_Znwm(i64 %411) #11
  store i8* %412, i8** %62, align 8
  %413 = or i64 %411, -9223372036854775808
  store i64 %413, i64* %63, align 8
  store i64 %403, i64* %64, align 8
  br label %417

414:                                              ; preds = %407
  %415 = trunc i64 %403 to i8
  store i8 %415, i8* %66, align 1
  %416 = icmp eq i64 %403, 0
  br i1 %416, label %419, label %417

417:                                              ; preds = %414, %409
  %418 = phi i8* [ %412, %409 ], [ %61, %414 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %418, i8* align 1 %402, i64 %403, i1 false) #10
  br label %419

419:                                              ; preds = %417, %414
  %420 = phi i8* [ %61, %414 ], [ %418, %417 ]
  %421 = getelementptr inbounds i8, i8* %420, i64 %403
  store i8 0, i8* %421, align 1
  call void @_ZN4base11FeatureList26RegisterFieldTrialOverrideERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_13OverrideStateEPNS_10FieldTrialE(%"class.base::FeatureList"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %16, i32 1, %"class.base::FieldTrial"* nonnull %320) #10
  %422 = load i8, i8* %66, align 1
  %423 = icmp slt i8 %422, 0
  br i1 %423, label %424, label %426

424:                                              ; preds = %419
  %425 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %425) #11
  br label %426

426:                                              ; preds = %424, %419
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #10
  %427 = add nuw i64 %399, 1
  %428 = load i64, i64* %329, align 8
  %429 = icmp ult i64 %427, %428
  br i1 %429, label %398, label %366

430:                                              ; preds = %394, %366, %318
  %431 = load i8, i8* %30, align 1
  %432 = icmp slt i8 %431, 0
  br i1 %432, label %433, label %435

433:                                              ; preds = %430
  %434 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %434) #11
  br label %435

435:                                              ; preds = %433, %430
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10
  br label %436

436:                                              ; preds = %435, %153, %80, %74
  %437 = add nuw i64 %75, 1
  %438 = load i64, i64* %18, align 8
  %439 = icmp ult i64 %437, %438
  br i1 %439, label %74, label %73
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations32AssociateDefaultFieldTrialConfigERKN4base17RepeatingCallbackIFvjRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEEEENS_14Study_PlatformENS_16Study_FormFactorEPNS0_11FeatureListE(%"class.base::RepeatingCallback"* nocapture readonly dereferenceable(8), i32, i32, %"class.base::FeatureList"*) local_unnamed_addr #0 {
  tail call void @_ZN10variations35AssociateParamsFromFieldTrialConfigERKNS_23FieldTrialTestingConfigERKN4base17RepeatingCallbackIFvjRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEEENS_14Study_PlatformENS_16Study_FormFactorEPNS3_11FeatureListE(%"struct.variations::FieldTrialTestingConfig"* nonnull dereferenceable(16) @_ZN10variations17kFieldTrialConfigE, %"class.base::RepeatingCallback"* dereferenceable(8) %0, i32 %1, i32 %2, %"class.base::FeatureList"* %3)
  ret void
}

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base7SysInfo14IsLowEndDeviceEv() local_unnamed_addr #2

declare zeroext i1 @_ZN4baseleERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24), %"class.base::Version"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4base7VersionC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"*, i8*, i64) unnamed_addr #2

declare void @_ZN10variations21ClientFilterableState12GetOSVersionEv(%"class.base::Version"* sret) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base7VersionD1Ev(%"class.base::Version"*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare zeroext i1 @_ZN4base25AssociateFieldTrialParamsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_RKNS0_3mapIS6_S6_NS0_4lessIS6_EENS4_INS0_4pairIS7_S6_EEEEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::map.69"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.base::FieldTrial"* @_ZN4base14FieldTrialList16CreateFieldTrialENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8*, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base11FeatureList26RegisterFieldTrialOverrideERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_13OverrideStateEPNS_10FieldTrialE(%"class.base::FeatureList"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.base::FieldTrial"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree.70"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.70", %"class.std::__1::__tree.70"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.70", %"class.std::__1::__tree.70"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__value_type"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #10
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #10
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #8

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.70"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.70"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.70"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %16, %4
  %20 = bitcast %"struct.std::__1::pair.76"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.std::__1::pair.76", %"struct.std::__1::pair.76"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %19, %24
  %28 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %2, %27
  ret void
}

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.83"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISQ_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISQ_EEEEEEDpOT_"}
