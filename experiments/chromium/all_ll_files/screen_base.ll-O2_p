; ModuleID = '../../ui/display/screen_base.cc'
source_filename = "../../ui/display/screen_base.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%union.anon = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%union.anon.4 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.display::ScreenBase" = type { %"class.display::Screen", %"class.display::DisplayList" }
%"class.display::Screen" = type { i32 (...)**, i64, i64 }
%"class.display::DisplayList" = type { %"class.std::__1::vector", i64, i64, %"class.base::ObserverList" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.display::Display"*, %"class.display::Display"*, %"class.std::__1::__compressed_pair" }
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.0" }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.display::Display"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.6", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.14" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.9" }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.aura::Window" = type opaque
%"class.std::__1::set" = type opaque
%"class.display::DisplayObserver" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.21 }
%union.anon.21 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.39" }
%"union.absl::variant_internal::DestructibleUnionImpl.39" = type { %"union.absl::variant_internal::DestructibleUnionImpl.40" }
%"union.absl::variant_internal::DestructibleUnionImpl.40" = type { %"union.absl::variant_internal::DestructibleUnionImpl.41" }
%"union.absl::variant_internal::DestructibleUnionImpl.41" = type { %"union.absl::variant_internal::DestructibleUnionImpl.42" }
%"union.absl::variant_internal::DestructibleUnionImpl.42" = type { %"class.std::__1::basic_string" }
%"struct.gfx::GpuExtraInfo" = type { %"class.std::__1::vector.25", %"class.std::__1::vector.32" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"*, %"class.std::__1::__compressed_pair.27" }
%"struct.gfx::ANGLEFeature" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.gfx::ANGLEFeature"* }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"*, %"class.std::__1::__compressed_pair.34" }
%"struct.gfx::BufferUsageAndFormat" = type { i32, i32 }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.gfx::BufferUsageAndFormat"* }

@_ZTVN7display10ScreenBaseE = hidden unnamed_addr constant { [25 x i8*] } { [25 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.display::ScreenBase"*)* @_ZN7display10ScreenBaseD2Ev to i8*), i8* bitcast (void (%"class.display::ScreenBase"*)* @_ZN7display10ScreenBaseD0Ev to i8*), i8* bitcast (i64 (%"class.display::ScreenBase"*)* @_ZN7display10ScreenBase20GetCursorScreenPointEv to i8*), i8* bitcast (i1 (%"class.display::ScreenBase"*, %"class.aura::Window"*)* @_ZN7display10ScreenBase19IsWindowUnderCursorEPN4aura6WindowE to i8*), i8* bitcast (%"class.aura::Window"* (%"class.display::ScreenBase"*, %"class.gfx::Point"*)* @_ZN7display10ScreenBase22GetWindowAtScreenPointERKN3gfx5PointE to i8*), i8* bitcast (%"class.aura::Window"* (%"class.display::ScreenBase"*, %"class.gfx::Point"*, %"class.std::__1::set"*)* @_ZN7display10ScreenBase28GetLocalProcessWindowAtPointERKN3gfx5PointERKNSt3__13setIPN4aura6WindowENS5_4lessIS9_EENS5_9allocatorIS9_EEEE to i8*), i8* bitcast (i32 (%"class.display::ScreenBase"*)* @_ZNK7display10ScreenBase14GetNumDisplaysEv to i8*), i8* bitcast (%"class.std::__1::vector"* (%"class.display::ScreenBase"*)* @_ZNK7display10ScreenBase14GetAllDisplaysEv to i8*), i8* bitcast (void (%"class.display::Display"*, %"class.display::ScreenBase"*, %"class.aura::Window"*)* @_ZNK7display10ScreenBase23GetDisplayNearestWindowEPN4aura6WindowE to i8*), i8* bitcast (void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)* @_ZNK7display6Screen21GetDisplayNearestViewEPN4aura6WindowE to i8*), i8* bitcast (void (%"class.display::Display"*, %"class.display::ScreenBase"*, %"class.gfx::Point"*)* @_ZNK7display10ScreenBase22GetDisplayNearestPointERKN3gfx5PointE to i8*), i8* bitcast (void (%"class.display::Display"*, %"class.display::ScreenBase"*, %"class.gfx::Rect"*)* @_ZNK7display10ScreenBase18GetDisplayMatchingERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.display::Display"*, %"class.display::ScreenBase"*)* @_ZNK7display10ScreenBase17GetPrimaryDisplayEv to i8*), i8* bitcast (void (%"class.display::Screen"*, i1)* @_ZN7display6Screen23SetScreenSaverSuspendedEb to i8*), i8* bitcast (i1 (%"class.display::Screen"*)* @_ZNK7display6Screen19IsScreenSaverActiveEv to i8*), i8* bitcast (i64 (%"class.display::Screen"*)* @_ZNK7display6Screen17CalculateIdleTimeEv to i8*), i8* bitcast (void (%"class.display::ScreenBase"*, %"class.display::DisplayObserver"*)* @_ZN7display10ScreenBase11AddObserverEPNS_15DisplayObserverE to i8*), i8* bitcast (void (%"class.display::ScreenBase"*, %"class.display::DisplayObserver"*)* @_ZN7display10ScreenBase14RemoveObserverEPNS_15DisplayObserverE to i8*), i8* bitcast ({ i64, i64 } (%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"*)* @_ZNK7display6Screen23ScreenToDIPRectInWindowEPN4aura6WindowERKN3gfx4RectE to i8*), i8* bitcast ({ i64, i64 } (%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"*)* @_ZNK7display6Screen23DIPToScreenRectInWindowEPN4aura6WindowERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.display::ScreenBase"*, i64, i32)* @_ZN7display10ScreenBase26SetPanelRotationForTestingElNS_7Display8RotationE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.display::Screen"*)* @_ZN7display6Screen19GetCurrentWorkspaceEv to i8*), i8* bitcast (void (%"class.base::Value"*, %"class.display::Screen"*, %"struct.gfx::GpuExtraInfo"*)* @_ZN7display6Screen26GetGpuExtraInfoAsListValueERKN3gfx12GpuExtraInfoE to i8*)] }, align 8
@_ZZN7display10ScreenBase20GetCursorScreenPointEvE11logged_once = internal unnamed_addr global i1 false, align 1
@_ZZN7display10ScreenBase19IsWindowUnderCursorEPN4aura6WindowEE11logged_once = internal unnamed_addr global i1 false, align 1
@_ZZN7display10ScreenBase22GetWindowAtScreenPointERKN3gfx5PointEE11logged_once = internal unnamed_addr global i1 false, align 1
@_ZZN7display10ScreenBase28GetLocalProcessWindowAtPointERKN3gfx5PointERKNSt3__13setIPN4aura6WindowENS5_4lessIS9_EENS5_9allocatorIS9_EEEEE11logged_once = internal unnamed_addr global i1 false, align 1
@_ZZNK7display10ScreenBase23GetDisplayNearestWindowEPN4aura6WindowEE11logged_once = internal unnamed_addr global i1 false, align 1
@__const._ZN7display10ScreenBase26SetPanelRotationForTestingElNS_7Display8RotationE.display = private unnamed_addr constant { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.4 } } } } }, i32, i32, i8, [3 x i8], i32 } { i64 -6148914691236517206, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, float 0xFFFFFFFFE0000000, i32 -1431655766, { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { i32 -1431655766 } } } } }, i32 -1431655766, i32 -1431655766, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.4 } } } } } { [6 x %"class.gfx::ColorSpace"] [%"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }], [6 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.4 } } } } { { { { i8, [7 x i8], %union.anon.4 } } } { { { i8, [7 x i8], %union.anon.4 } } { { i8, [7 x i8], %union.anon.4 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.4 { %"struct.gfx::HDRStaticMetadata" { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF } } } } } } }, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766 }, align 8

@_ZN7display10ScreenBaseC1Ev = hidden unnamed_addr alias void (%"class.display::ScreenBase"*), void (%"class.display::ScreenBase"*)* @_ZN7display10ScreenBaseC2Ev
@_ZN7display10ScreenBaseD1Ev = hidden unnamed_addr alias void (%"class.display::ScreenBase"*), void (%"class.display::ScreenBase"*)* @_ZN7display10ScreenBaseD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display10ScreenBaseC2Ev(%"class.display::ScreenBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %0, i64 0, i32 0
  tail call void @_ZN7display6ScreenC2Ev(%"class.display::Screen"* %2) #8
  %3 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN7display10ScreenBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %0, i64 0, i32 1
  tail call void @_ZN7display11DisplayListC1Ev(%"class.display::DisplayList"* %4) #8
  ret void
}

declare void @_ZN7display6ScreenC2Ev(%"class.display::Screen"*) unnamed_addr #1

declare void @_ZN7display11DisplayListC1Ev(%"class.display::DisplayList"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display10ScreenBaseD2Ev(%"class.display::ScreenBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN7display10ScreenBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %0, i64 0, i32 1
  tail call void @_ZN7display11DisplayListD1Ev(%"class.display::DisplayList"* %3) #8
  %4 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %0, i64 0, i32 0
  tail call void @_ZN7display6ScreenD2Ev(%"class.display::Screen"* %4) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7display11DisplayListD1Ev(%"class.display::DisplayList"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7display6ScreenD2Ev(%"class.display::Screen"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display10ScreenBaseD0Ev(%"class.display::ScreenBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN7display10ScreenBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %0, i64 0, i32 1
  tail call void @_ZN7display11DisplayListD1Ev(%"class.display::DisplayList"* %3) #8
  %4 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %0, i64 0, i32 0
  tail call void @_ZN7display6ScreenD2Ev(%"class.display::Screen"* %4) #8
  %5 = bitcast %"class.display::ScreenBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN7display10ScreenBase20GetCursorScreenPointEv(%"class.display::ScreenBase"* nocapture readnone) unnamed_addr #4 align 2 {
  %2 = load i1, i1* @_ZZN7display10ScreenBase20GetCursorScreenPointEvE11logged_once, align 1
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  store i1 true, i1* @_ZZN7display10ScreenBase20GetCursorScreenPointEvE11logged_once, align 1
  br label %4

4:                                                ; preds = %3, %1
  ret i64 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN7display10ScreenBase19IsWindowUnderCursorEPN4aura6WindowE(%"class.display::ScreenBase"* nocapture readnone, %"class.aura::Window"* nocapture readnone) unnamed_addr #4 align 2 {
  %3 = load i1, i1* @_ZZN7display10ScreenBase19IsWindowUnderCursorEPN4aura6WindowEE11logged_once, align 1
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  store i1 true, i1* @_ZZN7display10ScreenBase19IsWindowUnderCursorEPN4aura6WindowEE11logged_once, align 1
  br label %5

5:                                                ; preds = %4, %2
  ret i1 false
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden noalias %"class.aura::Window"* @_ZN7display10ScreenBase22GetWindowAtScreenPointERKN3gfx5PointE(%"class.display::ScreenBase"* nocapture readnone, %"class.gfx::Point"* nocapture readnone dereferenceable(8)) unnamed_addr #4 align 2 {
  %3 = load i1, i1* @_ZZN7display10ScreenBase22GetWindowAtScreenPointERKN3gfx5PointEE11logged_once, align 1
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  store i1 true, i1* @_ZZN7display10ScreenBase22GetWindowAtScreenPointERKN3gfx5PointEE11logged_once, align 1
  br label %5

5:                                                ; preds = %4, %2
  ret %"class.aura::Window"* null
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden noalias %"class.aura::Window"* @_ZN7display10ScreenBase28GetLocalProcessWindowAtPointERKN3gfx5PointERKNSt3__13setIPN4aura6WindowENS5_4lessIS9_EENS5_9allocatorIS9_EEEE(%"class.display::ScreenBase"* nocapture readnone, %"class.gfx::Point"* nocapture readnone dereferenceable(8), %"class.std::__1::set"* nocapture readnone) unnamed_addr #4 align 2 {
  %4 = load i1, i1* @_ZZN7display10ScreenBase28GetLocalProcessWindowAtPointERKN3gfx5PointERKNSt3__13setIPN4aura6WindowENS5_4lessIS9_EENS5_9allocatorIS9_EEEEE11logged_once, align 1
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  store i1 true, i1* @_ZZN7display10ScreenBase28GetLocalProcessWindowAtPointERKN3gfx5PointERKNSt3__13setIPN4aura6WindowENS5_4lessIS9_EENS5_9allocatorIS9_EEEEE11logged_once, align 1
  br label %6

6:                                                ; preds = %5, %3
  ret %"class.aura::Window"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7display10ScreenBase17GetPrimaryDisplayEv(%"class.display::Display"* noalias sret, %"class.display::ScreenBase"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %1, i64 0, i32 1
  %4 = tail call %"class.display::Display"* @_ZNK7display11DisplayList25GetPrimaryDisplayIteratorEv(%"class.display::DisplayList"* %3) #8
  %5 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load %"class.display::Display"*, %"class.display::Display"** %5, align 8
  %7 = icmp eq %"class.display::Display"* %4, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN7display7Display17GetDefaultDisplayEv(%"class.display::Display"* sret %0) #8
  br label %10

9:                                                ; preds = %2
  tail call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* %0, %"class.display::Display"* dereferenceable(568) %4) #8
  br label %10

10:                                               ; preds = %9, %8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare %"class.display::Display"* @_ZNK7display11DisplayList25GetPrimaryDisplayIteratorEv(%"class.display::DisplayList"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN7display7Display17GetDefaultDisplayEv(%"class.display::Display"* sret) local_unnamed_addr #1

declare void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"*, %"class.display::Display"* dereferenceable(568)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7display10ScreenBase23GetDisplayNearestWindowEPN4aura6WindowE(%"class.display::Display"* noalias sret, %"class.display::ScreenBase"*, %"class.aura::Window"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = load i1, i1* @_ZZNK7display10ScreenBase23GetDisplayNearestWindowEPN4aura6WindowEE11logged_once, align 1
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  store i1 true, i1* @_ZZNK7display10ScreenBase23GetDisplayNearestWindowEPN4aura6WindowEE11logged_once, align 1
  br label %6

6:                                                ; preds = %5, %3
  %7 = bitcast %"class.display::ScreenBase"* %1 to void (%"class.display::Display"*, %"class.display::ScreenBase"*)***
  %8 = load void (%"class.display::Display"*, %"class.display::ScreenBase"*)**, void (%"class.display::Display"*, %"class.display::ScreenBase"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::ScreenBase"*)*, void (%"class.display::Display"*, %"class.display::ScreenBase"*)** %8, i64 12
  %10 = load void (%"class.display::Display"*, %"class.display::ScreenBase"*)*, void (%"class.display::Display"*, %"class.display::ScreenBase"*)** %9, align 8
  tail call void %10(%"class.display::Display"* sret %0, %"class.display::ScreenBase"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7display10ScreenBase22GetDisplayNearestPointERKN3gfx5PointE(%"class.display::Display"* noalias sret, %"class.display::ScreenBase"*, %"class.gfx::Point"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %1, i64 0, i32 1, i32 0
  %5 = tail call %"class.display::Display"* @_ZN7display23FindDisplayNearestPointERKNSt3__16vectorINS_7DisplayENS0_9allocatorIS2_EEEERKN3gfx5PointE(%"class.std::__1::vector"* dereferenceable(24) %4, %"class.gfx::Point"* dereferenceable(8) %2) #8
  tail call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* %0, %"class.display::Display"* dereferenceable(568) %5) #8
  ret void
}

declare %"class.display::Display"* @_ZN7display23FindDisplayNearestPointERKNSt3__16vectorINS_7DisplayENS0_9allocatorIS2_EEEERKN3gfx5PointE(%"class.std::__1::vector"* dereferenceable(24), %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7display10ScreenBase14GetNumDisplaysEv(%"class.display::ScreenBase"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast %"class.display::Display"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 568
  %10 = trunc i64 %9 to i32
  ret i32 %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZNK7display10ScreenBase14GetAllDisplaysEv(%"class.display::ScreenBase"* readnone) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %0, i64 0, i32 1, i32 0
  ret %"class.std::__1::vector"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7display10ScreenBase18GetDisplayMatchingERKN3gfx4RectE(%"class.display::Display"* noalias sret, %"class.display::ScreenBase"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0
  %13 = bitcast %"class.display::ScreenBase"* %1 to void (%"class.display::Display"*, %"class.display::ScreenBase"*, %"class.gfx::Point"*)***
  %14 = load void (%"class.display::Display"*, %"class.display::ScreenBase"*, %"class.gfx::Point"*)**, void (%"class.display::Display"*, %"class.display::ScreenBase"*, %"class.gfx::Point"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::ScreenBase"*, %"class.gfx::Point"*)*, void (%"class.display::Display"*, %"class.display::ScreenBase"*, %"class.gfx::Point"*)** %14, i64 10
  %16 = load void (%"class.display::Display"*, %"class.display::ScreenBase"*, %"class.gfx::Point"*)*, void (%"class.display::Display"*, %"class.display::ScreenBase"*, %"class.gfx::Point"*)** %15, align 8
  tail call void %16(%"class.display::Display"* sret %0, %"class.display::ScreenBase"* %1, %"class.gfx::Point"* dereferenceable(8) %12) #8
  br label %27

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %1, i64 0, i32 1, i32 0
  %19 = tail call %"class.display::Display"* @_ZN7display34FindDisplayWithBiggestIntersectionERKNSt3__16vectorINS_7DisplayENS0_9allocatorIS2_EEEERKN3gfx4RectE(%"class.std::__1::vector"* dereferenceable(24) %18, %"class.gfx::Rect"* dereferenceable(16) %2) #8
  %20 = icmp eq %"class.display::Display"* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  tail call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* %0, %"class.display::Display"* nonnull dereferenceable(568) %19) #8
  br label %27

22:                                               ; preds = %17
  %23 = bitcast %"class.display::ScreenBase"* %1 to void (%"class.display::Display"*, %"class.display::ScreenBase"*)***
  %24 = load void (%"class.display::Display"*, %"class.display::ScreenBase"*)**, void (%"class.display::Display"*, %"class.display::ScreenBase"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::ScreenBase"*)*, void (%"class.display::Display"*, %"class.display::ScreenBase"*)** %24, i64 12
  %26 = load void (%"class.display::Display"*, %"class.display::ScreenBase"*)*, void (%"class.display::Display"*, %"class.display::ScreenBase"*)** %25, align 8
  tail call void %26(%"class.display::Display"* sret %0, %"class.display::ScreenBase"* %1) #8
  br label %27

27:                                               ; preds = %21, %22, %11
  ret void
}

declare %"class.display::Display"* @_ZN7display34FindDisplayWithBiggestIntersectionERKNSt3__16vectorINS_7DisplayENS0_9allocatorIS2_EEEERKN3gfx4RectE(%"class.std::__1::vector"* dereferenceable(24), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display10ScreenBase11AddObserverEPNS_15DisplayObserverE(%"class.display::ScreenBase"*, %"class.display::DisplayObserver"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %0, i64 0, i32 1
  tail call void @_ZN7display11DisplayList11AddObserverEPNS_15DisplayObserverE(%"class.display::DisplayList"* %3, %"class.display::DisplayObserver"* %1) #8
  ret void
}

declare void @_ZN7display11DisplayList11AddObserverEPNS_15DisplayObserverE(%"class.display::DisplayList"*, %"class.display::DisplayObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display10ScreenBase14RemoveObserverEPNS_15DisplayObserverE(%"class.display::ScreenBase"*, %"class.display::DisplayObserver"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %0, i64 0, i32 1
  tail call void @_ZN7display11DisplayList14RemoveObserverEPNS_15DisplayObserverE(%"class.display::DisplayList"* %3, %"class.display::DisplayObserver"* %1) #8
  ret void
}

declare void @_ZN7display11DisplayList14RemoveObserverEPNS_15DisplayObserverE(%"class.display::DisplayList"*, %"class.display::DisplayObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display10ScreenBase26SetPanelRotationForTestingElNS_7Display8RotationE(%"class.display::ScreenBase"*, i64, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.display::Display", align 8
  %5 = bitcast %"class.display::Display"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %5) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.4 } } } } }, i32, i32, i8, [3 x i8], i32 }* @__const._ZN7display10ScreenBase26SetPanelRotationForTestingElNS_7Display8RotationE.display to i8*), i64 568, i1 false)
  %6 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %0, i64 0, i32 1
  %7 = tail call %"class.display::Display"* @_ZNK7display11DisplayList15FindDisplayByIdEl(%"class.display::DisplayList"* %6, i64 %1) #8
  call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* nonnull %4, %"class.display::Display"* dereferenceable(568) %7) #8
  %8 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast i8* %8 to i64*
  %10 = zext i32 %2 to i64
  %11 = shl nuw i64 %10, 32
  %12 = or i64 %11, 1
  store i64 %12, i64* %9, align 8
  %13 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %4, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = call %"class.display::Display"* @_ZNK7display11DisplayList15FindDisplayByIdEl(%"class.display::DisplayList"* %6, i64 %14) #8
  %16 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %17 = load %"class.display::Display"*, %"class.display::Display"** %16, align 8
  %18 = icmp eq %"class.display::Display"* %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %3
  call void @_ZN7display11DisplayList10AddDisplayERKNS_7DisplayENS0_4TypeE(%"class.display::DisplayList"* %6, %"class.display::Display"* nonnull dereferenceable(568) %4, i32 0) #8
  br label %22

20:                                               ; preds = %3
  %21 = call i32 @_ZN7display11DisplayList13UpdateDisplayERKNS_7DisplayENS0_4TypeE(%"class.display::DisplayList"* %6, %"class.display::Display"* nonnull dereferenceable(568) %4, i32 0) #8
  br label %22

22:                                               ; preds = %19, %20
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %5) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare %"class.display::Display"* @_ZNK7display11DisplayList15FindDisplayByIdEl(%"class.display::DisplayList"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display10ScreenBase21ProcessDisplayChangedERKNS_7DisplayEb(%"class.display::ScreenBase"*, %"class.display::Display"* dereferenceable(568), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = tail call %"class.display::Display"* @_ZNK7display11DisplayList15FindDisplayByIdEl(%"class.display::DisplayList"* %4, i64 %6) #8
  %8 = getelementptr inbounds %"class.display::ScreenBase", %"class.display::ScreenBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = load %"class.display::Display"*, %"class.display::Display"** %8, align 8
  %10 = icmp eq %"class.display::Display"* %7, %9
  %11 = xor i1 %2, true
  %12 = zext i1 %11 to i32
  br i1 %10, label %13, label %14

13:                                               ; preds = %3
  tail call void @_ZN7display11DisplayList10AddDisplayERKNS_7DisplayENS0_4TypeE(%"class.display::DisplayList"* %4, %"class.display::Display"* dereferenceable(568) %1, i32 %12) #8
  br label %16

14:                                               ; preds = %3
  %15 = tail call i32 @_ZN7display11DisplayList13UpdateDisplayERKNS_7DisplayENS0_4TypeE(%"class.display::DisplayList"* %4, %"class.display::Display"* dereferenceable(568) %1, i32 %12) #8
  br label %16

16:                                               ; preds = %14, %13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7display7DisplayD1Ev(%"class.display::Display"*) unnamed_addr #2

declare void @_ZN7display11DisplayList10AddDisplayERKNS_7DisplayENS0_4TypeE(%"class.display::DisplayList"*, %"class.display::Display"* dereferenceable(568), i32) local_unnamed_addr #1

declare i32 @_ZN7display11DisplayList13UpdateDisplayERKNS_7DisplayENS0_4TypeE(%"class.display::DisplayList"*, %"class.display::Display"* dereferenceable(568), i32) local_unnamed_addr #1

declare void @_ZNK7display6Screen21GetDisplayNearestViewEPN4aura6WindowE(%"class.display::Display"* sret, %"class.display::Screen"*, %"class.aura::Window"*) unnamed_addr #1

declare void @_ZN7display6Screen23SetScreenSaverSuspendedEb(%"class.display::Screen"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK7display6Screen19IsScreenSaverActiveEv(%"class.display::Screen"*) unnamed_addr #1

declare i64 @_ZNK7display6Screen17CalculateIdleTimeEv(%"class.display::Screen"*) unnamed_addr #1

declare { i64, i64 } @_ZNK7display6Screen23ScreenToDIPRectInWindowEPN4aura6WindowERKN3gfx4RectE(%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

declare { i64, i64 } @_ZNK7display6Screen23DIPToScreenRectInWindowEPN4aura6WindowERKN3gfx4RectE(%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN7display6Screen19GetCurrentWorkspaceEv(%"class.std::__1::basic_string"* sret, %"class.display::Screen"*) unnamed_addr #1

declare void @_ZN7display6Screen26GetGpuExtraInfoAsListValueERKN3gfx12GpuExtraInfoE(%"class.base::Value"* sret, %"class.display::Screen"*, %"struct.gfx::GpuExtraInfo"* dereferenceable(48)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
