; ModuleID = '../../third_party/angle/src/common/event_tracer.cpp'
source_filename = "../../third_party/angle/src/common/event_tracer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.angle::PlatformMethods" = type { i8*, double (%"struct.angle::PlatformMethods"*)*, double (%"struct.angle::PlatformMethods"*)*, void (%"struct.angle::PlatformMethods"*, i8*)*, void (%"struct.angle::PlatformMethods"*, i8*)*, void (%"struct.angle::PlatformMethods"*, i8*)*, {}*, i64 (%"struct.angle::PlatformMethods"*, i8, i8*, i8*, i64, double, i32, i8**, i8*, i64*, i8)*, void (%"struct.angle::PlatformMethods"*, i8*, i8*, i64)*, void (%"struct.angle::PlatformMethods"*, i8*, i32, i32, i32, i32)*, void (%"struct.angle::PlatformMethods"*, i8*, i32, i32)*, void (%"struct.angle::PlatformMethods"*, i8*, i32)*, void (%"struct.angle::PlatformMethods"*, i8*, i1)*, void (%"struct.angle::PlatformMethods"*, %"struct.angle::FeaturesD3D"*)*, void (%"struct.angle::PlatformMethods"*, %"struct.angle::FeaturesVk"*)*, void (%"struct.angle::PlatformMethods"*, %"struct.std::__1::array"*, i64, i8*)*, void (%"struct.angle::PlatformMethods"*, %"struct.angle::FeaturesMtl"*)*, void (%"struct.angle::PlatformMethods"*, void (i8*)*, i8*)* }
%"struct.angle::FeaturesD3D" = type opaque
%"struct.angle::FeaturesVk" = type opaque
%"struct.std::__1::array" = type opaque
%"struct.angle::FeaturesMtl" = type opaque

@_ZZN5angle27GetTraceCategoryEnabledFlagEPNS_15PlatformMethodsEPKcE8disabled = internal global i8 0, align 1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5angle27GetTraceCategoryEnabledFlagEPNS_15PlatformMethodsEPKc(%"struct.angle::PlatformMethods"*, i8*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.angle::PlatformMethods", %"struct.angle::PlatformMethods"* %0, i64 0, i32 6
  %4 = bitcast {}** %3 to i8* (%"struct.angle::PlatformMethods"*, i8*)**
  %5 = load i8* (%"struct.angle::PlatformMethods"*, i8*)*, i8* (%"struct.angle::PlatformMethods"*, i8*)** %4, align 8
  %6 = tail call i8* %5(%"struct.angle::PlatformMethods"* %0, i8* %1) #1
  %7 = icmp eq i8* %6, null
  %8 = select i1 %7, i8* @_ZZN5angle27GetTraceCategoryEnabledFlagEPNS_15PlatformMethodsEPKcE8disabled, i8* %6
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"*, i8 signext, i8*, i8*, i64, i32, i8**, i8*, i64*, i8 zeroext) local_unnamed_addr #0 {
  %11 = getelementptr inbounds %"struct.angle::PlatformMethods", %"struct.angle::PlatformMethods"* %0, i64 0, i32 2
  %12 = load double (%"struct.angle::PlatformMethods"*)*, double (%"struct.angle::PlatformMethods"*)** %11, align 8
  %13 = tail call double %12(%"struct.angle::PlatformMethods"* %0) #1
  %14 = fcmp une double %13, 0.000000e+00
  br i1 %14, label %15, label %19

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"struct.angle::PlatformMethods", %"struct.angle::PlatformMethods"* %0, i64 0, i32 7
  %17 = load i64 (%"struct.angle::PlatformMethods"*, i8, i8*, i8*, i64, double, i32, i8**, i8*, i64*, i8)*, i64 (%"struct.angle::PlatformMethods"*, i8, i8*, i8*, i64, double, i32, i8**, i8*, i64*, i8)** %16, align 8
  %18 = tail call i64 %17(%"struct.angle::PlatformMethods"* %0, i8 signext %1, i8* %2, i8* %3, i64 %4, double %13, i32 %5, i8** %6, i8* %7, i64* %8, i8 zeroext %9) #1
  br label %19

19:                                               ; preds = %10, %15
  %20 = phi i64 [ %18, %15 ], [ 0, %10 ]
  ret i64 %20
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
