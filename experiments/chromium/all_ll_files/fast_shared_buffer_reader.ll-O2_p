; ModuleID = '../../third_party/blink/renderer/platform/image-decoders/fast_shared_buffer_reader.cc'
source_filename = "../../third_party/blink/renderer/platform/image-decoders/fast_shared_buffer_reader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FastSharedBufferReader" = type { %class.scoped_refptr, i8*, i64, i64 }
%class.scoped_refptr = type { %"class.blink::SegmentReader"* }
%"class.blink::SegmentReader" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

@.str = private unnamed_addr constant [40 x i8] c"data_position + length <= data_->size()\00", align 1
@.str.1 = private unnamed_addr constant [86 x i8] c"../../third_party/blink/renderer/platform/image-decoders/fast_shared_buffer_reader.cc\00", align 1

@_ZN5blink22FastSharedBufferReaderC1E13scoped_refptrINS_13SegmentReaderEE = hidden unnamed_addr alias void (%"class.blink::FastSharedBufferReader"*, %"class.blink::SegmentReader"*), void (%"class.blink::FastSharedBufferReader"*, %"class.blink::SegmentReader"*)* @_ZN5blink22FastSharedBufferReaderC2E13scoped_refptrINS_13SegmentReaderEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22FastSharedBufferReaderC2E13scoped_refptrINS_13SegmentReaderEE(%"class.blink::FastSharedBufferReader"* nocapture, %"class.blink::SegmentReader"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::SegmentReader"* %1 to i64
  %4 = bitcast %"class.blink::FastSharedBufferReader"* %0 to i64*
  store i64 %3, i64* %4, align 8
  %5 = getelementptr inbounds %"class.blink::FastSharedBufferReader", %"class.blink::FastSharedBufferReader"* %0, i64 0, i32 1
  %6 = bitcast i8** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22FastSharedBufferReader7SetDataE13scoped_refptrINS_13SegmentReaderEE(%"class.blink::FastSharedBufferReader"* nocapture, %"class.blink::SegmentReader"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FastSharedBufferReader", %"class.blink::FastSharedBufferReader"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %3, align 8
  %5 = icmp eq %"class.blink::SegmentReader"* %4, %1
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = ptrtoint %"class.blink::SegmentReader"* %1 to i64
  %8 = bitcast %"class.blink::FastSharedBufferReader"* %0 to i64*
  store i64 %7, i64* %8, align 8
  %9 = icmp eq %"class.blink::SegmentReader"* %4, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %4, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %22

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe"* %16 to %"class.blink::SegmentReader"*
  %18 = bitcast %"class.base::RefCountedThreadSafe"* %16 to void (%"class.blink::SegmentReader"*)***
  %19 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %19, i64 1
  %21 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %20, align 8
  tail call void %21(%"class.blink::SegmentReader"* nonnull %17) #5
  br label %22

22:                                               ; preds = %15, %10, %6
  %23 = getelementptr inbounds %"class.blink::FastSharedBufferReader", %"class.blink::FastSharedBufferReader"* %0, i64 0, i32 1
  %24 = bitcast i8** %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #5
  br label %39

25:                                               ; preds = %2
  %26 = icmp eq %"class.blink::SegmentReader"* %1, null
  br i1 %26, label %39, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %1, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %39

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %28, i64 -2
  %34 = bitcast %"class.base::RefCountedThreadSafe"* %33 to %"class.blink::SegmentReader"*
  %35 = bitcast %"class.base::RefCountedThreadSafe"* %33 to void (%"class.blink::SegmentReader"*)***
  %36 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %36, i64 1
  %38 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %37, align 8
  tail call void %38(%"class.blink::SegmentReader"* nonnull %34) #5
  br label %39

39:                                               ; preds = %22, %25, %27, %32
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink22FastSharedBufferReader10ClearCacheEv(%"class.blink::FastSharedBufferReader"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::FastSharedBufferReader", %"class.blink::FastSharedBufferReader"* %0, i64 0, i32 1
  %3 = bitcast i8** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK5blink22FastSharedBufferReader18GetConsecutiveDataEmmPc(%"class.blink::FastSharedBufferReader"*, i64, i64, i8*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #5
  %9 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %10 = add i64 %2, %1
  %11 = getelementptr inbounds %"class.blink::FastSharedBufferReader", %"class.blink::FastSharedBufferReader"* %0, i64 0, i32 0, i32 0
  %12 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %11, align 8
  %13 = bitcast %"class.blink::SegmentReader"* %12 to i64 (%"class.blink::SegmentReader"*)***
  %14 = load i64 (%"class.blink::SegmentReader"*)**, i64 (%"class.blink::SegmentReader"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %14, i64 2
  %16 = load i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %15, align 8
  %17 = tail call i64 %16(%"class.blink::SegmentReader"* %12) #5
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i64 %10, %17
  br i1 %19, label %21, label %20

20:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %9, align 8
  br label %30

21:                                               ; preds = %4
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %10) #5
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %17) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #5
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %9, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1, i64 0, i64 0), i32 58, %"class.logging::CheckOpResult"* nonnull %6) #5
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #5
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #5
  %31 = getelementptr inbounds %"class.blink::FastSharedBufferReader", %"class.blink::FastSharedBufferReader"* %0, i64 0, i32 3
  %32 = load i64, i64* %31, align 8
  %33 = icmp ugt i64 %32, %1
  br i1 %33, label %45, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::FastSharedBufferReader", %"class.blink::FastSharedBufferReader"* %0, i64 0, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, %32
  %38 = icmp ugt i64 %10, %37
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::FastSharedBufferReader", %"class.blink::FastSharedBufferReader"* %0, i64 0, i32 1
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 %1
  %43 = sub i64 0, %32
  %44 = getelementptr inbounds i8, i8* %42, i64 %43
  br label %77

45:                                               ; preds = %34, %30
  store i64 %1, i64* %31, align 8
  %46 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %11, align 8
  %47 = getelementptr inbounds %"class.blink::FastSharedBufferReader", %"class.blink::FastSharedBufferReader"* %0, i64 0, i32 1
  %48 = bitcast %"class.blink::SegmentReader"* %46 to i64 (%"class.blink::SegmentReader"*, i8**, i64)***
  %49 = load i64 (%"class.blink::SegmentReader"*, i8**, i64)**, i64 (%"class.blink::SegmentReader"*, i8**, i64)*** %48, align 8
  %50 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*, i8**, i64)*, i64 (%"class.blink::SegmentReader"*, i8**, i64)** %49, i64 3
  %51 = load i64 (%"class.blink::SegmentReader"*, i8**, i64)*, i64 (%"class.blink::SegmentReader"*, i8**, i64)** %50, align 8
  %52 = call i64 %51(%"class.blink::SegmentReader"* %46, i8** dereferenceable(8) %47, i64 %1) #5
  %53 = getelementptr inbounds %"class.blink::FastSharedBufferReader", %"class.blink::FastSharedBufferReader"* %0, i64 0, i32 2
  store i64 %52, i64* %53, align 8
  %54 = icmp ult i64 %52, %2
  %55 = load i8*, i8** %47, align 8
  br i1 %54, label %56, label %77

56:                                               ; preds = %45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %55, i64 %52, i1 false)
  %57 = sub i64 %2, %52
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %77, label %59

59:                                               ; preds = %56, %59
  %60 = phi i64 [ %75, %59 ], [ %57, %56 ]
  %61 = phi i64 [ %73, %59 ], [ %52, %56 ]
  %62 = phi i8* [ %63, %59 ], [ %3, %56 ]
  %63 = getelementptr inbounds i8, i8* %62, i64 %61
  %64 = load i64, i64* %31, align 8
  %65 = add i64 %64, %61
  store i64 %65, i64* %31, align 8
  %66 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %11, align 8
  %67 = bitcast %"class.blink::SegmentReader"* %66 to i64 (%"class.blink::SegmentReader"*, i8**, i64)***
  %68 = load i64 (%"class.blink::SegmentReader"*, i8**, i64)**, i64 (%"class.blink::SegmentReader"*, i8**, i64)*** %67, align 8
  %69 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*, i8**, i64)*, i64 (%"class.blink::SegmentReader"*, i8**, i64)** %68, i64 3
  %70 = load i64 (%"class.blink::SegmentReader"*, i8**, i64)*, i64 (%"class.blink::SegmentReader"*, i8**, i64)** %69, align 8
  %71 = call i64 %70(%"class.blink::SegmentReader"* %66, i8** dereferenceable(8) %47, i64 %65) #5
  store i64 %71, i64* %53, align 8
  %72 = icmp ult i64 %71, %60
  %73 = select i1 %72, i64 %71, i64 %60
  %74 = load i8*, i8** %47, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %63, i8* align 1 %74, i64 %73, i1 false)
  %75 = sub i64 %60, %73
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %59

77:                                               ; preds = %59, %45, %56, %39
  %78 = phi i8* [ %44, %39 ], [ %3, %56 ], [ %55, %45 ], [ %3, %59 ]
  ret i8* %78
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink22FastSharedBufferReader19GetSomeDataInternalEm(%"class.blink::FastSharedBufferReader"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FastSharedBufferReader", %"class.blink::FastSharedBufferReader"* %0, i64 0, i32 3
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.blink::FastSharedBufferReader", %"class.blink::FastSharedBufferReader"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::FastSharedBufferReader", %"class.blink::FastSharedBufferReader"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::SegmentReader"* %5 to i64 (%"class.blink::SegmentReader"*, i8**, i64)***
  %8 = load i64 (%"class.blink::SegmentReader"*, i8**, i64)**, i64 (%"class.blink::SegmentReader"*, i8**, i64)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*, i8**, i64)*, i64 (%"class.blink::SegmentReader"*, i8**, i64)** %8, i64 3
  %10 = load i64 (%"class.blink::SegmentReader"*, i8**, i64)*, i64 (%"class.blink::SegmentReader"*, i8**, i64)** %9, align 8
  %11 = tail call i64 %10(%"class.blink::SegmentReader"* %5, i8** dereferenceable(8) %6, i64 %1) #5
  %12 = getelementptr inbounds %"class.blink::FastSharedBufferReader", %"class.blink::FastSharedBufferReader"* %0, i64 0, i32 2
  store i64 %11, i64* %12, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink22FastSharedBufferReader11GetSomeDataERPKcm(%"class.blink::FastSharedBufferReader"*, i8** nocapture dereferenceable(8), i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FastSharedBufferReader", %"class.blink::FastSharedBufferReader"* %0, i64 0, i32 3
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds %"class.blink::FastSharedBufferReader", %"class.blink::FastSharedBufferReader"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::FastSharedBufferReader", %"class.blink::FastSharedBufferReader"* %0, i64 0, i32 1
  %8 = bitcast %"class.blink::SegmentReader"* %6 to i64 (%"class.blink::SegmentReader"*, i8**, i64)***
  %9 = load i64 (%"class.blink::SegmentReader"*, i8**, i64)**, i64 (%"class.blink::SegmentReader"*, i8**, i64)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*, i8**, i64)*, i64 (%"class.blink::SegmentReader"*, i8**, i64)** %9, i64 3
  %11 = load i64 (%"class.blink::SegmentReader"*, i8**, i64)*, i64 (%"class.blink::SegmentReader"*, i8**, i64)** %10, align 8
  %12 = tail call i64 %11(%"class.blink::SegmentReader"* %6, i8** dereferenceable(8) %7, i64 %2) #5
  %13 = getelementptr inbounds %"class.blink::FastSharedBufferReader", %"class.blink::FastSharedBufferReader"* %0, i64 0, i32 2
  store i64 %12, i64* %13, align 8
  %14 = bitcast i8** %7 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast i8** %1 to i64*
  store i64 %15, i64* %16, align 8
  %17 = load i64, i64* %13, align 8
  ret i64 %17
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
