; ModuleID = '../../components/url_pattern_index/fuzzy_pattern_matching.cc'
source_filename = "../../components/url_pattern_index/fuzzy_pattern_matching.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.base::BasicStringPiece" = type { i8*, i64 }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17url_pattern_index15StartsWithFuzzyEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8*, i64, i8*, i64) local_unnamed_addr #0 {
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = icmp ugt i64 %3, %1
  br i1 %7, label %41, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9)
  %10 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  store i8* %0, i8** %11, align 8
  %12 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 %1, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  store i8* %2, i8** %13, align 8
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  store i64 %3, i64* %14, align 8
  %15 = icmp eq i64 %3, 0
  br i1 %15, label %39, label %16

16:                                               ; preds = %8, %35
  %17 = phi i64 [ %36, %35 ], [ 0, %8 ]
  %18 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 %17) #3
  %19 = load i8, i8* %18, align 1
  %20 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %6, i64 %17) #3
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %19, %21
  br i1 %22, label %35, label %23

23:                                               ; preds = %16
  %24 = icmp eq i8 %21, 94
  br i1 %24, label %25, label %39

25:                                               ; preds = %23
  %26 = sext i8 %19 to i32
  switch i32 %26, label %27 [
    i32 95, label %39
    i32 45, label %39
    i32 46, label %39
    i32 37, label %39
    i32 94, label %35
  ]

27:                                               ; preds = %25
  %28 = icmp slt i8 %19, 58
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = icmp ult i8 %19, 48
  br i1 %30, label %35, label %39

31:                                               ; preds = %27
  %32 = or i8 %19, 32
  %33 = add i8 %32, -97
  %34 = icmp ult i8 %33, 26
  br i1 %34, label %39, label %35

35:                                               ; preds = %31, %29, %25, %16
  %36 = add i64 %17, 1
  %37 = load i64, i64* %14, align 8
  %38 = icmp eq i64 %36, %37
  br i1 %38, label %39, label %16

39:                                               ; preds = %23, %25, %25, %25, %25, %29, %31, %35, %8
  %40 = phi i1 [ true, %8 ], [ false, %23 ], [ true, %35 ], [ false, %25 ], [ false, %25 ], [ false, %25 ], [ false, %25 ], [ false, %31 ], [ false, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10)
  br label %41

41:                                               ; preds = %4, %39
  %42 = phi i1 [ false, %4 ], [ %40, %39 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17url_pattern_index13EndsWithFuzzyEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8*, i64, i8*, i64) local_unnamed_addr #0 {
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  store i8* %0, i8** %8, align 8
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  store i64 %1, i64* %9, align 8
  %10 = icmp ult i64 %1, %3
  br i1 %10, label %48, label %11

11:                                               ; preds = %4
  %12 = sub i64 %1, %3
  %13 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %7, i64 %12, i64 -1)
  %14 = extractvalue { i8*, i64 } %13, 0
  %15 = extractvalue { i8*, i64 } %13, 1
  %16 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16)
  %17 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17)
  %18 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  store i8* %14, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 %15, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  store i8* %2, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  store i64 %3, i64* %21, align 8
  %22 = icmp eq i64 %3, 0
  br i1 %22, label %46, label %23

23:                                               ; preds = %11, %42
  %24 = phi i64 [ %43, %42 ], [ 0, %11 ]
  %25 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 %24) #3
  %26 = load i8, i8* %25, align 1
  %27 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %6, i64 %24) #3
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %26, %28
  br i1 %29, label %42, label %30

30:                                               ; preds = %23
  %31 = icmp eq i8 %28, 94
  br i1 %31, label %32, label %46

32:                                               ; preds = %30
  %33 = sext i8 %26 to i32
  switch i32 %33, label %34 [
    i32 95, label %46
    i32 45, label %46
    i32 46, label %46
    i32 37, label %46
    i32 94, label %42
  ]

34:                                               ; preds = %32
  %35 = icmp slt i8 %26, 58
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = icmp ult i8 %26, 48
  br i1 %37, label %42, label %46

38:                                               ; preds = %34
  %39 = or i8 %26, 32
  %40 = add i8 %39, -97
  %41 = icmp ult i8 %40, 26
  br i1 %41, label %46, label %42

42:                                               ; preds = %38, %36, %32, %23
  %43 = add i64 %24, 1
  %44 = load i64, i64* %21, align 8
  %45 = icmp eq i64 %43, %44
  br i1 %45, label %46, label %23

46:                                               ; preds = %30, %32, %32, %32, %32, %36, %38, %42, %11
  %47 = phi i1 [ true, %11 ], [ false, %30 ], [ true, %42 ], [ false, %32 ], [ false, %32 ], [ false, %32 ], [ false, %32 ], [ false, %38 ], [ false, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17)
  br label %48

48:                                               ; preds = %4, %46
  %49 = phi i1 [ false, %4 ], [ %47, %46 ]
  ret i1 %49
}

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN17url_pattern_index9FindFuzzyEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8*, i64, i8*, i64, i64) local_unnamed_addr #1 {
  %6 = icmp ult i64 %1, %4
  br i1 %6, label %78, label %7

7:                                                ; preds = %5
  %8 = icmp eq i64 %3, 0
  br i1 %8, label %78, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds i8, i8* %0, i64 %4
  %11 = getelementptr inbounds i8, i8* %0, i64 %1
  %12 = getelementptr inbounds i8, i8* %2, i64 %3
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint i8* %11 to i64
  %15 = sub i64 %14, %13
  %16 = icmp slt i64 %15, %3
  br i1 %16, label %78, label %17

17:                                               ; preds = %9
  %18 = sub i64 1, %3
  %19 = getelementptr inbounds i8, i8* %11, i64 %18
  %20 = icmp eq i8* %19, %10
  br i1 %20, label %78, label %21

21:                                               ; preds = %17
  %22 = load i8, i8* %2, align 1
  %23 = icmp eq i8 %22, 94
  %24 = getelementptr inbounds i8, i8* %2, i64 1
  %25 = icmp eq i64 %3, 1
  br label %26

26:                                               ; preds = %45, %21
  %27 = phi i8* [ %10, %21 ], [ %46, %45 ]
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, %22
  br i1 %29, label %30, label %31

30:                                               ; preds = %38, %36, %32, %26
  br i1 %25, label %72, label %47

31:                                               ; preds = %26
  br i1 %23, label %32, label %42

32:                                               ; preds = %31
  %33 = sext i8 %28 to i32
  switch i32 %33, label %34 [
    i32 95, label %42
    i32 45, label %42
    i32 46, label %42
    i32 37, label %42
    i32 94, label %30
  ]

34:                                               ; preds = %32
  %35 = icmp slt i8 %28, 58
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = icmp ult i8 %28, 48
  br i1 %37, label %30, label %42

38:                                               ; preds = %34
  %39 = or i8 %28, 32
  %40 = add i8 %39, -97
  %41 = icmp ugt i8 %40, 25
  br i1 %41, label %30, label %42

42:                                               ; preds = %38, %36, %32, %32, %32, %32, %31
  %43 = getelementptr inbounds i8, i8* %27, i64 1
  %44 = icmp eq i8* %43, %19
  br i1 %44, label %78, label %45

45:                                               ; preds = %42, %69
  %46 = phi i8* [ %43, %42 ], [ %70, %69 ]
  br label %26

47:                                               ; preds = %30, %58
  %48 = phi i8* [ %59, %58 ], [ %24, %30 ]
  %49 = phi i8* [ %50, %58 ], [ %27, %30 ]
  %50 = getelementptr inbounds i8, i8* %49, i64 1
  %51 = load i8, i8* %50, align 1
  %52 = load i8, i8* %48, align 1
  %53 = icmp eq i8 %51, %52
  br i1 %53, label %58, label %54

54:                                               ; preds = %47
  %55 = icmp eq i8 %52, 94
  br i1 %55, label %56, label %69

56:                                               ; preds = %54
  %57 = sext i8 %51 to i32
  switch i32 %57, label %61 [
    i32 95, label %69
    i32 45, label %69
    i32 46, label %69
    i32 37, label %69
    i32 94, label %58
  ]

58:                                               ; preds = %65, %63, %56, %47
  %59 = getelementptr inbounds i8, i8* %48, i64 1
  %60 = icmp eq i8* %59, %12
  br i1 %60, label %72, label %47

61:                                               ; preds = %56
  %62 = icmp slt i8 %51, 58
  br i1 %62, label %63, label %65

63:                                               ; preds = %61
  %64 = icmp ult i8 %51, 48
  br i1 %64, label %58, label %69

65:                                               ; preds = %61
  %66 = or i8 %51, 32
  %67 = add i8 %66, -97
  %68 = icmp ugt i8 %67, 25
  br i1 %68, label %58, label %69

69:                                               ; preds = %65, %63, %56, %56, %56, %56, %54
  %70 = getelementptr inbounds i8, i8* %27, i64 1
  %71 = icmp eq i8* %70, %19
  br i1 %71, label %78, label %45

72:                                               ; preds = %30, %58
  %73 = icmp eq i8* %27, %11
  br i1 %73, label %78, label %74

74:                                               ; preds = %72
  %75 = ptrtoint i8* %27 to i64
  %76 = ptrtoint i8* %0 to i64
  %77 = sub i64 %75, %76
  br label %78

78:                                               ; preds = %69, %42, %17, %9, %74, %72, %7, %5
  %79 = phi i64 [ -1, %5 ], [ %4, %7 ], [ %77, %74 ], [ -1, %72 ], [ -1, %9 ], [ -1, %17 ], [ -1, %42 ], [ -1, %69 ]
  ret i64 %79
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
