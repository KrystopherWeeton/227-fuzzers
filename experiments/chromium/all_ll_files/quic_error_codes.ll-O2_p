; ModuleID = '../../net/third_party/quiche/src/quic/core/quic_error_codes.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/quic_error_codes.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }
%"class.absl::string_view" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [21 x i8] c"QUIC_STREAM_NO_ERROR\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"QUIC_ERROR_PROCESSING_STREAM\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"QUIC_MULTIPLE_TERMINATION_OFFSETS\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"QUIC_BAD_APPLICATION_PAYLOAD\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"QUIC_STREAM_CONNECTION_ERROR\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"QUIC_STREAM_PEER_GOING_AWAY\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"QUIC_STREAM_CANCELLED\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"QUIC_RST_ACKNOWLEDGEMENT\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"QUIC_REFUSED_STREAM\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"QUIC_INVALID_PROMISE_URL\00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c"QUIC_UNAUTHORIZED_PROMISE_URL\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"QUIC_DUPLICATE_PROMISE_URL\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"QUIC_PROMISE_VARY_MISMATCH\00", align 1
@.str.13 = private unnamed_addr constant [28 x i8] c"QUIC_INVALID_PROMISE_METHOD\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"QUIC_PUSH_STREAM_TIMED_OUT\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"QUIC_HEADERS_TOO_LARGE\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"QUIC_STREAM_TTL_EXPIRED\00", align 1
@.str.17 = private unnamed_addr constant [29 x i8] c"QUIC_DATA_AFTER_CLOSE_OFFSET\00", align 1
@.str.18 = private unnamed_addr constant [35 x i8] c"QUIC_STREAM_GENERAL_PROTOCOL_ERROR\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"QUIC_STREAM_INTERNAL_ERROR\00", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c"QUIC_STREAM_STREAM_CREATION_ERROR\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"QUIC_STREAM_CLOSED_CRITICAL_STREAM\00", align 1
@.str.22 = private unnamed_addr constant [29 x i8] c"QUIC_STREAM_FRAME_UNEXPECTED\00", align 1
@.str.23 = private unnamed_addr constant [24 x i8] c"QUIC_STREAM_FRAME_ERROR\00", align 1
@.str.24 = private unnamed_addr constant [27 x i8] c"QUIC_STREAM_EXCESSIVE_LOAD\00", align 1
@.str.25 = private unnamed_addr constant [21 x i8] c"QUIC_STREAM_ID_ERROR\00", align 1
@.str.26 = private unnamed_addr constant [27 x i8] c"QUIC_STREAM_SETTINGS_ERROR\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"QUIC_STREAM_MISSING_SETTINGS\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"QUIC_STREAM_REQUEST_REJECTED\00", align 1
@.str.29 = private unnamed_addr constant [31 x i8] c"QUIC_STREAM_REQUEST_INCOMPLETE\00", align 1
@.str.30 = private unnamed_addr constant [26 x i8] c"QUIC_STREAM_CONNECT_ERROR\00", align 1
@.str.31 = private unnamed_addr constant [29 x i8] c"QUIC_STREAM_VERSION_FALLBACK\00", align 1
@.str.32 = private unnamed_addr constant [33 x i8] c"QUIC_STREAM_DECOMPRESSION_FAILED\00", align 1
@.str.33 = private unnamed_addr constant [33 x i8] c"QUIC_STREAM_ENCODER_STREAM_ERROR\00", align 1
@.str.34 = private unnamed_addr constant [33 x i8] c"QUIC_STREAM_DECODER_STREAM_ERROR\00", align 1
@.str.35 = private unnamed_addr constant [43 x i8] c"QUIC_STREAM_UNKNOWN_APPLICATION_ERROR_CODE\00", align 1
@.str.36 = private unnamed_addr constant [38 x i8] c"QUIC_STREAM_WEBTRANSPORT_SESSION_GONE\00", align 1
@.str.37 = private unnamed_addr constant [57 x i8] c"QUIC_STREAM_WEBTRANSPORT_BUFFERED_STREAMS_LIMIT_EXCEEDED\00", align 1
@.str.38 = private unnamed_addr constant [23 x i8] c"QUIC_STREAM_LAST_ERROR\00", align 1
@.str.39 = private unnamed_addr constant [30 x i8] c"INVALID_RST_STREAM_ERROR_CODE\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"QUIC_NO_ERROR\00", align 1
@.str.41 = private unnamed_addr constant [20 x i8] c"QUIC_INTERNAL_ERROR\00", align 1
@.str.42 = private unnamed_addr constant [35 x i8] c"QUIC_STREAM_DATA_AFTER_TERMINATION\00", align 1
@.str.43 = private unnamed_addr constant [27 x i8] c"QUIC_INVALID_PACKET_HEADER\00", align 1
@.str.44 = private unnamed_addr constant [24 x i8] c"QUIC_INVALID_FRAME_DATA\00", align 1
@.str.45 = private unnamed_addr constant [21 x i8] c"QUIC_MISSING_PAYLOAD\00", align 1
@.str.46 = private unnamed_addr constant [22 x i8] c"QUIC_INVALID_FEC_DATA\00", align 1
@.str.47 = private unnamed_addr constant [25 x i8] c"QUIC_INVALID_STREAM_DATA\00", align 1
@.str.48 = private unnamed_addr constant [29 x i8] c"QUIC_OVERLAPPING_STREAM_DATA\00", align 1
@.str.49 = private unnamed_addr constant [29 x i8] c"QUIC_UNENCRYPTED_STREAM_DATA\00", align 1
@.str.50 = private unnamed_addr constant [29 x i8] c"QUIC_INVALID_RST_STREAM_DATA\00", align 1
@.str.51 = private unnamed_addr constant [35 x i8] c"QUIC_INVALID_CONNECTION_CLOSE_DATA\00", align 1
@.str.52 = private unnamed_addr constant [25 x i8] c"QUIC_INVALID_GOAWAY_DATA\00", align 1
@.str.53 = private unnamed_addr constant [32 x i8] c"QUIC_INVALID_WINDOW_UPDATE_DATA\00", align 1
@.str.54 = private unnamed_addr constant [26 x i8] c"QUIC_INVALID_BLOCKED_DATA\00", align 1
@.str.55 = private unnamed_addr constant [31 x i8] c"QUIC_INVALID_STOP_WAITING_DATA\00", align 1
@.str.56 = private unnamed_addr constant [29 x i8] c"QUIC_INVALID_PATH_CLOSE_DATA\00", align 1
@.str.57 = private unnamed_addr constant [22 x i8] c"QUIC_INVALID_ACK_DATA\00", align 1
@.str.58 = private unnamed_addr constant [40 x i8] c"QUIC_INVALID_VERSION_NEGOTIATION_PACKET\00", align 1
@.str.59 = private unnamed_addr constant [31 x i8] c"QUIC_INVALID_PUBLIC_RST_PACKET\00", align 1
@.str.60 = private unnamed_addr constant [24 x i8] c"QUIC_DECRYPTION_FAILURE\00", align 1
@.str.61 = private unnamed_addr constant [24 x i8] c"QUIC_ENCRYPTION_FAILURE\00", align 1
@.str.62 = private unnamed_addr constant [22 x i8] c"QUIC_PACKET_TOO_LARGE\00", align 1
@.str.63 = private unnamed_addr constant [21 x i8] c"QUIC_PEER_GOING_AWAY\00", align 1
@.str.64 = private unnamed_addr constant [22 x i8] c"QUIC_HANDSHAKE_FAILED\00", align 1
@.str.65 = private unnamed_addr constant [30 x i8] c"QUIC_CRYPTO_TAGS_OUT_OF_ORDER\00", align 1
@.str.66 = private unnamed_addr constant [29 x i8] c"QUIC_CRYPTO_TOO_MANY_ENTRIES\00", align 1
@.str.67 = private unnamed_addr constant [29 x i8] c"QUIC_CRYPTO_TOO_MANY_REJECTS\00", align 1
@.str.68 = private unnamed_addr constant [33 x i8] c"QUIC_CRYPTO_INVALID_VALUE_LENGTH\00", align 1
@.str.69 = private unnamed_addr constant [45 x i8] c"QUIC_CRYPTO_MESSAGE_AFTER_HANDSHAKE_COMPLETE\00", align 1
@.str.70 = private unnamed_addr constant [27 x i8] c"QUIC_CRYPTO_INTERNAL_ERROR\00", align 1
@.str.71 = private unnamed_addr constant [34 x i8] c"QUIC_CRYPTO_VERSION_NOT_SUPPORTED\00", align 1
@.str.72 = private unnamed_addr constant [23 x i8] c"QUIC_CRYPTO_NO_SUPPORT\00", align 1
@.str.73 = private unnamed_addr constant [33 x i8] c"QUIC_INVALID_CRYPTO_MESSAGE_TYPE\00", align 1
@.str.74 = private unnamed_addr constant [38 x i8] c"QUIC_INVALID_CRYPTO_MESSAGE_PARAMETER\00", align 1
@.str.75 = private unnamed_addr constant [40 x i8] c"QUIC_CRYPTO_MESSAGE_PARAMETER_NOT_FOUND\00", align 1
@.str.76 = private unnamed_addr constant [41 x i8] c"QUIC_CRYPTO_MESSAGE_PARAMETER_NO_OVERLAP\00", align 1
@.str.77 = private unnamed_addr constant [36 x i8] c"QUIC_CRYPTO_MESSAGE_INDEX_NOT_FOUND\00", align 1
@.str.78 = private unnamed_addr constant [30 x i8] c"QUIC_UNSUPPORTED_PROOF_DEMAND\00", align 1
@.str.79 = private unnamed_addr constant [23 x i8] c"QUIC_INVALID_STREAM_ID\00", align 1
@.str.80 = private unnamed_addr constant [22 x i8] c"QUIC_INVALID_PRIORITY\00", align 1
@.str.81 = private unnamed_addr constant [27 x i8] c"QUIC_TOO_MANY_OPEN_STREAMS\00", align 1
@.str.82 = private unnamed_addr constant [18 x i8] c"QUIC_PUBLIC_RESET\00", align 1
@.str.83 = private unnamed_addr constant [21 x i8] c"QUIC_INVALID_VERSION\00", align 1
@.str.84 = private unnamed_addr constant [45 x i8] c"QUIC_INVALID_0RTT_PACKET_NUMBER_OUT_OF_ORDER\00", align 1
@.str.85 = private unnamed_addr constant [23 x i8] c"QUIC_INVALID_HEADER_ID\00", align 1
@.str.86 = private unnamed_addr constant [30 x i8] c"QUIC_INVALID_NEGOTIATED_VALUE\00", align 1
@.str.87 = private unnamed_addr constant [27 x i8] c"QUIC_DECOMPRESSION_FAILURE\00", align 1
@.str.88 = private unnamed_addr constant [26 x i8] c"QUIC_NETWORK_IDLE_TIMEOUT\00", align 1
@.str.89 = private unnamed_addr constant [23 x i8] c"QUIC_HANDSHAKE_TIMEOUT\00", align 1
@.str.90 = private unnamed_addr constant [29 x i8] c"QUIC_ERROR_MIGRATING_ADDRESS\00", align 1
@.str.91 = private unnamed_addr constant [26 x i8] c"QUIC_ERROR_MIGRATING_PORT\00", align 1
@.str.92 = private unnamed_addr constant [24 x i8] c"QUIC_PACKET_WRITE_ERROR\00", align 1
@.str.93 = private unnamed_addr constant [23 x i8] c"QUIC_PACKET_READ_ERROR\00", align 1
@.str.94 = private unnamed_addr constant [31 x i8] c"QUIC_EMPTY_STREAM_FRAME_NO_FIN\00", align 1
@.str.95 = private unnamed_addr constant [33 x i8] c"QUIC_INVALID_HEADERS_STREAM_DATA\00", align 1
@.str.96 = private unnamed_addr constant [44 x i8] c"QUIC_HEADERS_STREAM_DATA_DECOMPRESS_FAILURE\00", align 1
@.str.97 = private unnamed_addr constant [41 x i8] c"QUIC_FLOW_CONTROL_RECEIVED_TOO_MUCH_DATA\00", align 1
@.str.98 = private unnamed_addr constant [37 x i8] c"QUIC_FLOW_CONTROL_SENT_TOO_MUCH_DATA\00", align 1
@.str.99 = private unnamed_addr constant [33 x i8] c"QUIC_FLOW_CONTROL_INVALID_WINDOW\00", align 1
@.str.100 = private unnamed_addr constant [26 x i8] c"QUIC_CONNECTION_IP_POOLED\00", align 1
@.str.101 = private unnamed_addr constant [19 x i8] c"QUIC_PROOF_INVALID\00", align 1
@.str.102 = private unnamed_addr constant [26 x i8] c"QUIC_CRYPTO_DUPLICATE_TAG\00", align 1
@.str.103 = private unnamed_addr constant [39 x i8] c"QUIC_CRYPTO_ENCRYPTION_LEVEL_INCORRECT\00", align 1
@.str.104 = private unnamed_addr constant [34 x i8] c"QUIC_CRYPTO_SERVER_CONFIG_EXPIRED\00", align 1
@.str.105 = private unnamed_addr constant [34 x i8] c"QUIC_INVALID_CHANNEL_ID_SIGNATURE\00", align 1
@.str.106 = private unnamed_addr constant [39 x i8] c"QUIC_CRYPTO_SYMMETRIC_KEY_SETUP_FAILED\00", align 1
@.str.107 = private unnamed_addr constant [50 x i8] c"QUIC_CRYPTO_MESSAGE_WHILE_VALIDATING_CLIENT_HELLO\00", align 1
@.str.108 = private unnamed_addr constant [45 x i8] c"QUIC_CRYPTO_UPDATE_BEFORE_HANDSHAKE_COMPLETE\00", align 1
@.str.109 = private unnamed_addr constant [34 x i8] c"QUIC_VERSION_NEGOTIATION_MISMATCH\00", align 1
@.str.110 = private unnamed_addr constant [39 x i8] c"QUIC_TOO_MANY_OUTSTANDING_SENT_PACKETS\00", align 1
@.str.111 = private unnamed_addr constant [43 x i8] c"QUIC_TOO_MANY_OUTSTANDING_RECEIVED_PACKETS\00", align 1
@.str.112 = private unnamed_addr constant [26 x i8] c"QUIC_CONNECTION_CANCELLED\00", align 1
@.str.113 = private unnamed_addr constant [26 x i8] c"QUIC_BAD_PACKET_LOSS_RATE\00", align 1
@.str.114 = private unnamed_addr constant [34 x i8] c"QUIC_PUBLIC_RESETS_POST_HANDSHAKE\00", align 1
@.str.115 = private unnamed_addr constant [32 x i8] c"QUIC_FAILED_TO_SERIALIZE_PACKET\00", align 1
@.str.116 = private unnamed_addr constant [32 x i8] c"QUIC_TOO_MANY_AVAILABLE_STREAMS\00", align 1
@.str.117 = private unnamed_addr constant [26 x i8] c"QUIC_UNENCRYPTED_FEC_DATA\00", align 1
@.str.118 = private unnamed_addr constant [24 x i8] c"QUIC_BAD_MULTIPATH_FLAG\00", align 1
@.str.119 = private unnamed_addr constant [24 x i8] c"QUIC_IP_ADDRESS_CHANGED\00", align 1
@.str.120 = private unnamed_addr constant [48 x i8] c"QUIC_CONNECTION_MIGRATION_NO_MIGRATABLE_STREAMS\00", align 1
@.str.121 = private unnamed_addr constant [43 x i8] c"QUIC_CONNECTION_MIGRATION_TOO_MANY_CHANGES\00", align 1
@.str.122 = private unnamed_addr constant [41 x i8] c"QUIC_CONNECTION_MIGRATION_NO_NEW_NETWORK\00", align 1
@.str.123 = private unnamed_addr constant [48 x i8] c"QUIC_CONNECTION_MIGRATION_NON_MIGRATABLE_STREAM\00", align 1
@.str.124 = private unnamed_addr constant [19 x i8] c"QUIC_TOO_MANY_RTOS\00", align 1
@.str.125 = private unnamed_addr constant [45 x i8] c"QUIC_ATTEMPT_TO_SEND_UNENCRYPTED_STREAM_DATA\00", align 1
@.str.126 = private unnamed_addr constant [28 x i8] c"QUIC_MAYBE_CORRUPTED_MEMORY\00", align 1
@.str.127 = private unnamed_addr constant [27 x i8] c"QUIC_CRYPTO_CHLO_TOO_LARGE\00", align 1
@.str.128 = private unnamed_addr constant [35 x i8] c"QUIC_MULTIPATH_PATH_DOES_NOT_EXIST\00", align 1
@.str.129 = private unnamed_addr constant [31 x i8] c"QUIC_MULTIPATH_PATH_NOT_ACTIVE\00", align 1
@.str.130 = private unnamed_addr constant [36 x i8] c"QUIC_TOO_MANY_STREAM_DATA_INTERVALS\00", align 1
@.str.131 = private unnamed_addr constant [36 x i8] c"QUIC_STREAM_SEQUENCER_INVALID_STATE\00", align 1
@.str.132 = private unnamed_addr constant [33 x i8] c"QUIC_TOO_MANY_SESSIONS_ON_SERVER\00", align 1
@.str.133 = private unnamed_addr constant [28 x i8] c"QUIC_STREAM_LENGTH_OVERFLOW\00", align 1
@.str.134 = private unnamed_addr constant [45 x i8] c"QUIC_CONNECTION_MIGRATION_DISABLED_BY_CONFIG\00", align 1
@.str.135 = private unnamed_addr constant [41 x i8] c"QUIC_CONNECTION_MIGRATION_INTERNAL_ERROR\00", align 1
@.str.136 = private unnamed_addr constant [33 x i8] c"QUIC_INVALID_MAX_DATA_FRAME_DATA\00", align 1
@.str.137 = private unnamed_addr constant [40 x i8] c"QUIC_INVALID_MAX_STREAM_DATA_FRAME_DATA\00", align 1
@.str.138 = private unnamed_addr constant [33 x i8] c"QUIC_INVALID_STREAM_BLOCKED_DATA\00", align 1
@.str.139 = private unnamed_addr constant [22 x i8] c"QUIC_MAX_STREAMS_DATA\00", align 1
@.str.140 = private unnamed_addr constant [26 x i8] c"QUIC_STREAMS_BLOCKED_DATA\00", align 1
@.str.141 = private unnamed_addr constant [36 x i8] c"QUIC_INVALID_NEW_CONNECTION_ID_DATA\00", align 1
@.str.142 = private unnamed_addr constant [39 x i8] c"QUIC_INVALID_RETIRE_CONNECTION_ID_DATA\00", align 1
@.str.143 = private unnamed_addr constant [31 x i8] c"QUIC_CONNECTION_ID_LIMIT_ERROR\00", align 1
@.str.144 = private unnamed_addr constant [46 x i8] c"QUIC_TOO_MANY_CONNECTION_ID_WAITING_TO_RETIRE\00", align 1
@.str.145 = private unnamed_addr constant [37 x i8] c"QUIC_INVALID_STOP_SENDING_FRAME_DATA\00", align 1
@.str.146 = private unnamed_addr constant [33 x i8] c"QUIC_INVALID_PATH_CHALLENGE_DATA\00", align 1
@.str.147 = private unnamed_addr constant [32 x i8] c"QUIC_INVALID_PATH_RESPONSE_DATA\00", align 1
@.str.148 = private unnamed_addr constant [48 x i8] c"QUIC_CONNECTION_MIGRATION_HANDSHAKE_UNCONFIRMED\00", align 1
@.str.149 = private unnamed_addr constant [44 x i8] c"QUIC_PEER_PORT_CHANGE_HANDSHAKE_UNCONFIRMED\00", align 1
@.str.150 = private unnamed_addr constant [26 x i8] c"QUIC_INVALID_MESSAGE_DATA\00", align 1
@.str.151 = private unnamed_addr constant [29 x i8] c"IETF_QUIC_PROTOCOL_VIOLATION\00", align 1
@.str.152 = private unnamed_addr constant [23 x i8] c"QUIC_INVALID_NEW_TOKEN\00", align 1
@.str.153 = private unnamed_addr constant [50 x i8] c"QUIC_DATA_RECEIVED_ON_WRITE_UNIDIRECTIONAL_STREAM\00", align 1
@.str.154 = private unnamed_addr constant [53 x i8] c"QUIC_TRY_TO_WRITE_DATA_ON_READ_UNIDIRECTIONAL_STREAM\00", align 1
@.str.155 = private unnamed_addr constant [27 x i8] c"QUIC_STREAMS_BLOCKED_ERROR\00", align 1
@.str.156 = private unnamed_addr constant [23 x i8] c"QUIC_MAX_STREAMS_ERROR\00", align 1
@.str.157 = private unnamed_addr constant [24 x i8] c"QUIC_HTTP_DECODER_ERROR\00", align 1
@.str.158 = private unnamed_addr constant [32 x i8] c"QUIC_STALE_CONNECTION_CANCELLED\00", align 1
@.str.159 = private unnamed_addr constant [30 x i8] c"QUIC_IETF_GQUIC_ERROR_MISSING\00", align 1
@.str.160 = private unnamed_addr constant [58 x i8] c"QUIC_WINDOW_UPDATE_RECEIVED_ON_READ_UNIDIRECTIONAL_STREAM\00", align 1
@.str.161 = private unnamed_addr constant [38 x i8] c"QUIC_TOO_MANY_BUFFERED_CONTROL_FRAMES\00", align 1
@.str.162 = private unnamed_addr constant [41 x i8] c"QUIC_TRANSPORT_INVALID_CLIENT_INDICATION\00", align 1
@.str.163 = private unnamed_addr constant [32 x i8] c"QUIC_QPACK_DECOMPRESSION_FAILED\00", align 1
@.str.164 = private unnamed_addr constant [32 x i8] c"QUIC_QPACK_ENCODER_STREAM_ERROR\00", align 1
@.str.165 = private unnamed_addr constant [32 x i8] c"QUIC_QPACK_DECODER_STREAM_ERROR\00", align 1
@.str.166 = private unnamed_addr constant [44 x i8] c"QUIC_QPACK_ENCODER_STREAM_INTEGER_TOO_LARGE\00", align 1
@.str.167 = private unnamed_addr constant [50 x i8] c"QUIC_QPACK_ENCODER_STREAM_STRING_LITERAL_TOO_LONG\00", align 1
@.str.168 = private unnamed_addr constant [49 x i8] c"QUIC_QPACK_ENCODER_STREAM_HUFFMAN_ENCODING_ERROR\00", align 1
@.str.169 = private unnamed_addr constant [47 x i8] c"QUIC_QPACK_ENCODER_STREAM_INVALID_STATIC_ENTRY\00", align 1
@.str.170 = private unnamed_addr constant [49 x i8] c"QUIC_QPACK_ENCODER_STREAM_ERROR_INSERTING_STATIC\00", align 1
@.str.171 = private unnamed_addr constant [59 x i8] c"QUIC_QPACK_ENCODER_STREAM_INSERTION_INVALID_RELATIVE_INDEX\00", align 1
@.str.172 = private unnamed_addr constant [60 x i8] c"QUIC_QPACK_ENCODER_STREAM_INSERTION_DYNAMIC_ENTRY_NOT_FOUND\00", align 1
@.str.173 = private unnamed_addr constant [50 x i8] c"QUIC_QPACK_ENCODER_STREAM_ERROR_INSERTING_DYNAMIC\00", align 1
@.str.174 = private unnamed_addr constant [50 x i8] c"QUIC_QPACK_ENCODER_STREAM_ERROR_INSERTING_LITERAL\00", align 1
@.str.175 = private unnamed_addr constant [59 x i8] c"QUIC_QPACK_ENCODER_STREAM_DUPLICATE_INVALID_RELATIVE_INDEX\00", align 1
@.str.176 = private unnamed_addr constant [60 x i8] c"QUIC_QPACK_ENCODER_STREAM_DUPLICATE_DYNAMIC_ENTRY_NOT_FOUND\00", align 1
@.str.177 = private unnamed_addr constant [53 x i8] c"QUIC_QPACK_ENCODER_STREAM_SET_DYNAMIC_TABLE_CAPACITY\00", align 1
@.str.178 = private unnamed_addr constant [44 x i8] c"QUIC_QPACK_DECODER_STREAM_INTEGER_TOO_LARGE\00", align 1
@.str.179 = private unnamed_addr constant [49 x i8] c"QUIC_QPACK_DECODER_STREAM_INVALID_ZERO_INCREMENT\00", align 1
@.str.180 = private unnamed_addr constant [45 x i8] c"QUIC_QPACK_DECODER_STREAM_INCREMENT_OVERFLOW\00", align 1
@.str.181 = private unnamed_addr constant [50 x i8] c"QUIC_QPACK_DECODER_STREAM_IMPOSSIBLE_INSERT_COUNT\00", align 1
@.str.182 = private unnamed_addr constant [52 x i8] c"QUIC_QPACK_DECODER_STREAM_INCORRECT_ACKNOWLEDGEMENT\00", align 1
@.str.183 = private unnamed_addr constant [37 x i8] c"QUIC_STREAM_DATA_BEYOND_CLOSE_OFFSET\00", align 1
@.str.184 = private unnamed_addr constant [28 x i8] c"QUIC_STREAM_MULTIPLE_OFFSET\00", align 1
@.str.185 = private unnamed_addr constant [26 x i8] c"QUIC_HTTP_FRAME_TOO_LARGE\00", align 1
@.str.186 = private unnamed_addr constant [22 x i8] c"QUIC_HTTP_FRAME_ERROR\00", align 1
@.str.187 = private unnamed_addr constant [42 x i8] c"QUIC_HTTP_FRAME_UNEXPECTED_ON_SPDY_STREAM\00", align 1
@.str.188 = private unnamed_addr constant [45 x i8] c"QUIC_HTTP_FRAME_UNEXPECTED_ON_CONTROL_STREAM\00", align 1
@.str.189 = private unnamed_addr constant [48 x i8] c"QUIC_HTTP_INVALID_FRAME_SEQUENCE_ON_SPDY_STREAM\00", align 1
@.str.190 = private unnamed_addr constant [51 x i8] c"QUIC_HTTP_INVALID_FRAME_SEQUENCE_ON_CONTROL_STREAM\00", align 1
@.str.191 = private unnamed_addr constant [42 x i8] c"QUIC_HTTP_DUPLICATE_UNIDIRECTIONAL_STREAM\00", align 1
@.str.192 = private unnamed_addr constant [48 x i8] c"QUIC_HTTP_SERVER_INITIATED_BIDIRECTIONAL_STREAM\00", align 1
@.str.193 = private unnamed_addr constant [33 x i8] c"QUIC_HTTP_STREAM_WRONG_DIRECTION\00", align 1
@.str.194 = private unnamed_addr constant [33 x i8] c"QUIC_HTTP_CLOSED_CRITICAL_STREAM\00", align 1
@.str.195 = private unnamed_addr constant [33 x i8] c"QUIC_HTTP_MISSING_SETTINGS_FRAME\00", align 1
@.str.196 = private unnamed_addr constant [39 x i8] c"QUIC_HTTP_DUPLICATE_SETTING_IDENTIFIER\00", align 1
@.str.197 = private unnamed_addr constant [30 x i8] c"QUIC_HTTP_INVALID_MAX_PUSH_ID\00", align 1
@.str.198 = private unnamed_addr constant [31 x i8] c"QUIC_HTTP_STREAM_LIMIT_TOO_LOW\00", align 1
@.str.199 = private unnamed_addr constant [48 x i8] c"QUIC_HTTP_ZERO_RTT_RESUMPTION_SETTINGS_MISMATCH\00", align 1
@.str.200 = private unnamed_addr constant [47 x i8] c"QUIC_HTTP_ZERO_RTT_REJECTION_SETTINGS_MISMATCH\00", align 1
@.str.201 = private unnamed_addr constant [35 x i8] c"QUIC_HTTP_GOAWAY_INVALID_STREAM_ID\00", align 1
@.str.202 = private unnamed_addr constant [41 x i8] c"QUIC_HTTP_GOAWAY_ID_LARGER_THAN_PREVIOUS\00", align 1
@.str.203 = private unnamed_addr constant [31 x i8] c"QUIC_HTTP_RECEIVE_SPDY_SETTING\00", align 1
@.str.204 = private unnamed_addr constant [29 x i8] c"QUIC_HTTP_RECEIVE_SPDY_FRAME\00", align 1
@.str.205 = private unnamed_addr constant [30 x i8] c"QUIC_HPACK_INDEX_VARINT_ERROR\00", align 1
@.str.206 = private unnamed_addr constant [36 x i8] c"QUIC_HPACK_NAME_LENGTH_VARINT_ERROR\00", align 1
@.str.207 = private unnamed_addr constant [37 x i8] c"QUIC_HPACK_VALUE_LENGTH_VARINT_ERROR\00", align 1
@.str.208 = private unnamed_addr constant [25 x i8] c"QUIC_HPACK_NAME_TOO_LONG\00", align 1
@.str.209 = private unnamed_addr constant [26 x i8] c"QUIC_HPACK_VALUE_TOO_LONG\00", align 1
@.str.210 = private unnamed_addr constant [30 x i8] c"QUIC_HPACK_NAME_HUFFMAN_ERROR\00", align 1
@.str.211 = private unnamed_addr constant [31 x i8] c"QUIC_HPACK_VALUE_HUFFMAN_ERROR\00", align 1
@.str.212 = private unnamed_addr constant [45 x i8] c"QUIC_HPACK_MISSING_DYNAMIC_TABLE_SIZE_UPDATE\00", align 1
@.str.213 = private unnamed_addr constant [25 x i8] c"QUIC_HPACK_INVALID_INDEX\00", align 1
@.str.214 = private unnamed_addr constant [30 x i8] c"QUIC_HPACK_INVALID_NAME_INDEX\00", align 1
@.str.215 = private unnamed_addr constant [49 x i8] c"QUIC_HPACK_DYNAMIC_TABLE_SIZE_UPDATE_NOT_ALLOWED\00", align 1
@.str.216 = private unnamed_addr constant [61 x i8] c"QUIC_HPACK_INITIAL_TABLE_SIZE_UPDATE_IS_ABOVE_LOW_WATER_MARK\00", align 1
@.str.217 = private unnamed_addr constant [59 x i8] c"QUIC_HPACK_TABLE_SIZE_UPDATE_IS_ABOVE_ACKNOWLEDGED_SETTING\00", align 1
@.str.218 = private unnamed_addr constant [27 x i8] c"QUIC_HPACK_TRUNCATED_BLOCK\00", align 1
@.str.219 = private unnamed_addr constant [29 x i8] c"QUIC_HPACK_FRAGMENT_TOO_LONG\00", align 1
@.str.220 = private unnamed_addr constant [48 x i8] c"QUIC_HPACK_COMPRESSED_HEADER_SIZE_EXCEEDS_LIMIT\00", align 1
@.str.221 = private unnamed_addr constant [32 x i8] c"QUIC_ZERO_RTT_UNRETRANSMITTABLE\00", align 1
@.str.222 = private unnamed_addr constant [38 x i8] c"QUIC_ZERO_RTT_REJECTION_LIMIT_REDUCED\00", align 1
@.str.223 = private unnamed_addr constant [39 x i8] c"QUIC_ZERO_RTT_RESUMPTION_LIMIT_REDUCED\00", align 1
@.str.224 = private unnamed_addr constant [25 x i8] c"QUIC_SILENT_IDLE_TIMEOUT\00", align 1
@.str.225 = private unnamed_addr constant [24 x i8] c"QUIC_MISSING_WRITE_KEYS\00", align 1
@.str.226 = private unnamed_addr constant [22 x i8] c"QUIC_KEY_UPDATE_ERROR\00", align 1
@.str.227 = private unnamed_addr constant [24 x i8] c"QUIC_AEAD_LIMIT_REACHED\00", align 1
@.str.228 = private unnamed_addr constant [21 x i8] c"QUIC_MAX_AGE_TIMEOUT\00", align 1
@.str.229 = private unnamed_addr constant [29 x i8] c"QUIC_INVALID_PRIORITY_UPDATE\00", align 1
@.str.230 = private unnamed_addr constant [25 x i8] c"QUIC_TLS_BAD_CERTIFICATE\00", align 1
@.str.231 = private unnamed_addr constant [33 x i8] c"QUIC_TLS_UNSUPPORTED_CERTIFICATE\00", align 1
@.str.232 = private unnamed_addr constant [29 x i8] c"QUIC_TLS_CERTIFICATE_REVOKED\00", align 1
@.str.233 = private unnamed_addr constant [29 x i8] c"QUIC_TLS_CERTIFICATE_EXPIRED\00", align 1
@.str.234 = private unnamed_addr constant [29 x i8] c"QUIC_TLS_CERTIFICATE_UNKNOWN\00", align 1
@.str.235 = private unnamed_addr constant [24 x i8] c"QUIC_TLS_INTERNAL_ERROR\00", align 1
@.str.236 = private unnamed_addr constant [27 x i8] c"QUIC_TLS_UNRECOGNIZED_NAME\00", align 1
@.str.237 = private unnamed_addr constant [30 x i8] c"QUIC_TLS_CERTIFICATE_REQUIRED\00", align 1
@.str.238 = private unnamed_addr constant [16 x i8] c"QUIC_LAST_ERROR\00", align 1
@.str.239 = private unnamed_addr constant [19 x i8] c"INVALID_ERROR_CODE\00", align 1
@.str.240 = private unnamed_addr constant [9 x i8] c"Private(\00", align 1
@.str.241 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.242 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.243 = private unnamed_addr constant [14 x i8] c"CRYPTO_ERROR(\00", align 1
@.str.244 = private unnamed_addr constant [22 x i8] c"CRYPTO_ERROR(unknown(\00", align 1
@.str.245 = private unnamed_addr constant [3 x i8] c"))\00", align 1
@.str.246 = private unnamed_addr constant [19 x i8] c"NO_IETF_QUIC_ERROR\00", align 1
@.str.247 = private unnamed_addr constant [15 x i8] c"INTERNAL_ERROR\00", align 1
@.str.248 = private unnamed_addr constant [18 x i8] c"SERVER_BUSY_ERROR\00", align 1
@.str.249 = private unnamed_addr constant [19 x i8] c"FLOW_CONTROL_ERROR\00", align 1
@.str.250 = private unnamed_addr constant [19 x i8] c"STREAM_LIMIT_ERROR\00", align 1
@.str.251 = private unnamed_addr constant [19 x i8] c"STREAM_STATE_ERROR\00", align 1
@.str.252 = private unnamed_addr constant [17 x i8] c"FINAL_SIZE_ERROR\00", align 1
@.str.253 = private unnamed_addr constant [21 x i8] c"FRAME_ENCODING_ERROR\00", align 1
@.str.254 = private unnamed_addr constant [26 x i8] c"TRANSPORT_PARAMETER_ERROR\00", align 1
@.str.255 = private unnamed_addr constant [26 x i8] c"CONNECTION_ID_LIMIT_ERROR\00", align 1
@.str.256 = private unnamed_addr constant [19 x i8] c"PROTOCOL_VIOLATION\00", align 1
@.str.257 = private unnamed_addr constant [14 x i8] c"INVALID_TOKEN\00", align 1
@.str.258 = private unnamed_addr constant [23 x i8] c"CRYPTO_BUFFER_EXCEEDED\00", align 1
@.str.259 = private unnamed_addr constant [17 x i8] c"KEY_UPDATE_ERROR\00", align 1
@.str.260 = private unnamed_addr constant [19 x i8] c"AEAD_LIMIT_REACHED\00", align 1
@.str.261 = private unnamed_addr constant [9 x i8] c"Unknown(\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@switch.table._ZN4quic30QuicRstStreamErrorCodeToStringENS_22QuicRstStreamErrorCodeE = private unnamed_addr constant [39 x i8*] [i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.38, i64 0, i64 0)], align 8
@switch.table._ZN4quic21QuicErrorCodeToStringENS_13QuicErrorCodeE = private unnamed_addr constant [206 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.62, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.239, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.239, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.86, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.88, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.90, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.92, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.65, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.101, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.102, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.103, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.104, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.239, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.94, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.106, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.107, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.95, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.97, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.100, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.98, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.239, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.89, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.110, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.239, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.239, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.115, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.116, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.117, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.118, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.119, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.120, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.123, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.91, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.126, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.128, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.129, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.130, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.78, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.131, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.132, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.96, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.133, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.134, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.135, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.239, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.136, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.137, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.139, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.140, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.138, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.141, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.148, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.152, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.153, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.154, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.155, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.156, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.157, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.158, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.160, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.161, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.162, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.163, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.164, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.165, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.183, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.184, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.185, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.186, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.187, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.188, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.205, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.206, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.207, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.208, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.209, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.210, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.211, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.212, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.213, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.214, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.215, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.216, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.217, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.218, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.219, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.220, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.189, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.190, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.191, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.192, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.193, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.194, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.195, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.196, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.197, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.198, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.221, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.222, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.223, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.199, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.200, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.201, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.202, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.224, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.203, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.225, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.204, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.226, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.227, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.166, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.167, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.168, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.169, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.170, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.171, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.172, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.173, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.176, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.177, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.178, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.179, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.180, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.181, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.182, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.228, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.229, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.149, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.230, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.231, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.233, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.234, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.235, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.236, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.237, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.143, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.144, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.238, i64 0, i64 0)], align 8
@switch.table._ZN4quic33QuicErrorCodeToTransportErrorCodeENS_13QuicErrorCodeE = private unnamed_addr constant [206 x i8] calign 1
@switch.table._ZN4quic33QuicErrorCodeToTransportErrorCodeENS_13QuicErrorCodeE.263 = private unnamed_addr constant [206 x i64] [i64 0, i64 1, i64 1, i64 7, i64 7, i64 1, i64 10, i64 7, i64 7, i64 7, i64 10, i64 10, i64 10, i64 10, i64 10, i64 1, i64 1, i64 10, i64 10, i64 1, i64 10, i64 1, i64 1, i64 10, i64 10, i64 0, i64 10, i64 1, i64 10, i64 10, i64 10, i64 10, i64 10, i64 10, i64 10, i64 10, i64 10, i64 10, i64 1, i64 10, i64 10, i64 10, i64 10, i64 10, i64 10, i64 10, i64 7, i64 1, i64 7, i64 1, i64 7, i64 1, i64 10, i64 10, i64 10, i64 10, i64 1, i64 7, i64 7, i64 3, i64 7, i64 10, i64 1, i64 1, i64 3, i64 10, i64 1, i64 0, i64 1, i64 1, i64 0, i64 1, i64 1, i64 1, i64 1, i64 1, i64 10, i64 1, i64 1, i64 10, i64 1, i64 1, i64 1, i64 1, i64 1, i64 0, i64 1, i64 10, i64 1, i64 10, i64 10, i64 1, i64 1, i64 10, i64 10, i64 1, i64 1, i64 1, i64 10, i64 1, i64 1, i64 1, i64 10, i64 10, i64 10, i64 10, i64 10, i64 10, i64 10, i64 10, i64 10, i64 1, i64 7, i64 10, i64 10, i64 5, i64 1, i64 10, i64 10, i64 10, i64 1, i64 1, i64 1, i64 10, i64 10, i64 10, i64 512, i64 513, i64 514, i64 10, i64 10, i64 263, i64 262, i64 261, i64 261, i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 261, i64 261, i64 259, i64 259, i64 5, i64 260, i64 266, i64 265, i64 264, i64 257, i64 1, i64 1, i64 10, i64 265, i64 1, i64 264, i64 264, i64 0, i64 265, i64 1, i64 261, i64 14, i64 15, i64 513, i64 513, i64 513, i64 513, i64 513, i64 513, i64 513, i64 513, i64 513, i64 513, i64 513, i64 513, i64 514, i64 514, i64 514, i64 514, i64 514, i64 258, i64 10, i64 257, i64 1, i64 298, i64 299, i64 300, i64 301, i64 302, i64 336, i64 368, i64 372, i64 9, i64 1, i64 205], align 8
@switch.table._ZN4quic44RstStreamErrorCodeToIetfResetStreamErrorCodeENS_22QuicRstStreamErrorCodeE = private unnamed_addr constant [39 x i64] [i64 256, i64 257, i64 257, i64 257, i64 258, i64 257, i64 268, i64 256, i64 264, i64 259, i64 259, i64 259, i64 268, i64 259, i64 268, i64 263, i64 268, i64 257, i64 257, i64 258, i64 259, i64 260, i64 261, i64 262, i64 263, i64 264, i64 265, i64 266, i64 267, i64 269, i64 271, i64 272, i64 512, i64 513, i64 514, i64 258, i64 271, i64 271, i64 258], align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN4quic30QuicRstStreamErrorCodeToStringENS_22QuicRstStreamErrorCodeE(i32) local_unnamed_addr #0 {
  %2 = icmp ult i32 %0, 39
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [39 x i8*], [39 x i8*]* @switch.table._ZN4quic30QuicRstStreamErrorCodeToStringENS_22QuicRstStreamErrorCodeE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.39, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN4quic21QuicErrorCodeToStringENS_13QuicErrorCodeE(i32) local_unnamed_addr #0 {
  %2 = icmp ult i32 %0, 206
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [206 x i8*], [206 x i8*]* @switch.table._ZN4quic21QuicErrorCodeToStringENS_13QuicErrorCodeE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.239, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic32QuicIetfTransportErrorCodeStringENS_27QuicIetfTransportErrorCodesE(%"class.std::__1::basic_string"* noalias sret, i64) local_unnamed_addr #1 {
  %3 = alloca %"class.absl::AlphaNum", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = alloca %"class.absl::AlphaNum", align 8
  %7 = alloca %"class.absl::AlphaNum", align 8
  %8 = alloca %"class.absl::AlphaNum", align 8
  %9 = alloca %"class.absl::AlphaNum", align 8
  %10 = alloca %"class.absl::AlphaNum", align 8
  %11 = alloca %"class.absl::AlphaNum", align 8
  %12 = alloca %"class.absl::AlphaNum", align 8
  %13 = alloca %"class.absl::AlphaNum", align 8
  %14 = alloca %"class.absl::AlphaNum", align 8
  %15 = icmp ugt i64 %1, 65279
  br i1 %15, label %16, label %34

16:                                               ; preds = %2
  %17 = bitcast %"class.absl::AlphaNum"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.240, i64 0, i64 0), i8** %18, align 8
  %19 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 1
  store i64 8, i64* %19, align 8
  %20 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 1, i64 0
  %22 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64 %1, i8* %21) #10
  %23 = ptrtoint i8* %22 to i64
  %24 = ptrtoint i8* %21 to i64
  %25 = sub i64 %23, %24
  %26 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* %21, i8** %26, align 8
  %27 = icmp sgt i64 %25, -1
  br i1 %27, label %29, label %28, !prof !2

28:                                               ; preds = %16
  call void @llvm.trap() #10
  unreachable

29:                                               ; preds = %16
  %30 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 %25, i64* %30, align 8
  %31 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.241, i64 0, i64 0), i8** %32, align 8
  %33 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 1, i64* %33, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* sret %0, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #10
  br label %176

34:                                               ; preds = %2
  %35 = and i64 %1, -256
  %36 = icmp eq i64 %35, 256
  br i1 %36, label %37, label %78

37:                                               ; preds = %34
  %38 = trunc i64 %1 to i32
  %39 = add nsw i32 %38, -256
  %40 = tail call i8* @SSL_alert_desc_string_long(i32 %39) #10
  %41 = tail call i32 @strcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.242, i64 0, i64 0), i8* %40) #11
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.absl::AlphaNum"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %44) #10
  %45 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.243, i64 0, i64 0), i8** %45, align 8
  %46 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 1
  store i64 13, i64* %46, align 8
  %47 = bitcast %"class.absl::AlphaNum"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %47) #10
  %48 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 0, i32 0
  store i8* %40, i8** %48, align 8
  %49 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 0, i32 1
  %50 = icmp eq i8* %40, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %43
  %52 = tail call i64 @strlen(i8* nonnull %40) #10
  %53 = icmp sgt i64 %52, -1
  br i1 %53, label %55, label %54, !prof !2

54:                                               ; preds = %51
  tail call void @llvm.trap() #10
  unreachable

55:                                               ; preds = %43, %51
  %56 = phi i64 [ 0, %43 ], [ %52, %51 ]
  store i64 %56, i64* %49, align 8
  %57 = bitcast %"class.absl::AlphaNum"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %57) #10
  %58 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.241, i64 0, i64 0), i8** %58, align 8
  %59 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 1
  store i64 1, i64* %59, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* sret %0, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %6, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %7, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %57) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %47) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %44) #10
  br label %176

60:                                               ; preds = %37
  %61 = bitcast %"class.absl::AlphaNum"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %61) #10
  %62 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %9, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.244, i64 0, i64 0), i8** %62, align 8
  %63 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %9, i64 0, i32 0, i32 1
  store i64 21, i64* %63, align 8
  %64 = bitcast %"class.absl::AlphaNum"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %64) #10
  %65 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %10, i64 0, i32 1, i64 0
  %66 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32 %39, i8* %65) #10
  %67 = ptrtoint i8* %66 to i64
  %68 = ptrtoint i8* %65 to i64
  %69 = sub i64 %67, %68
  %70 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %10, i64 0, i32 0, i32 0
  store i8* %65, i8** %70, align 8
  %71 = icmp sgt i64 %69, -1
  br i1 %71, label %73, label %72, !prof !2

72:                                               ; preds = %60
  call void @llvm.trap() #10
  unreachable

73:                                               ; preds = %60
  %74 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %10, i64 0, i32 0, i32 1
  store i64 %69, i64* %74, align 8
  %75 = bitcast %"class.absl::AlphaNum"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %11, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.245, i64 0, i64 0), i8** %76, align 8
  %77 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %11, i64 0, i32 0, i32 1
  store i64 2, i64* %77, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* sret %0, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %9, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %10, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %11) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %75) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %64) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %61) #10
  br label %176

78:                                               ; preds = %34
  switch i64 %1, label %158 [
    i64 0, label %79
    i64 1, label %84
    i64 2, label %89
    i64 3, label %94
    i64 4, label %99
    i64 5, label %104
    i64 6, label %109
    i64 7, label %115
    i64 8, label %120
    i64 9, label %126
    i64 10, label %132
    i64 11, label %137
    i64 13, label %142
    i64 14, label %147
    i64 15, label %153
  ]

79:                                               ; preds = %78
  %80 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  store i8 18, i8* %81, align 1
  %82 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.246, i64 0, i64 0), i64 18, i1 false) #10
  %83 = getelementptr inbounds i8, i8* %82, i64 18
  store i8 0, i8* %83, align 2
  br label %176

84:                                               ; preds = %78
  %85 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  store i8 14, i8* %86, align 1
  %87 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.247, i64 0, i64 0), i64 14, i1 false) #10
  %88 = getelementptr inbounds i8, i8* %87, i64 14
  store i8 0, i8* %88, align 2
  br label %176

89:                                               ; preds = %78
  %90 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  store i8 17, i8* %91, align 1
  %92 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.248, i64 0, i64 0), i64 17, i1 false) #10
  %93 = getelementptr inbounds i8, i8* %92, i64 17
  store i8 0, i8* %93, align 1
  br label %176

94:                                               ; preds = %78
  %95 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  store i8 18, i8* %96, align 1
  %97 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.249, i64 0, i64 0), i64 18, i1 false) #10
  %98 = getelementptr inbounds i8, i8* %97, i64 18
  store i8 0, i8* %98, align 2
  br label %176

99:                                               ; preds = %78
  %100 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  store i8 18, i8* %101, align 1
  %102 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.250, i64 0, i64 0), i64 18, i1 false) #10
  %103 = getelementptr inbounds i8, i8* %102, i64 18
  store i8 0, i8* %103, align 2
  br label %176

104:                                              ; preds = %78
  %105 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  store i8 18, i8* %106, align 1
  %107 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.251, i64 0, i64 0), i64 18, i1 false) #10
  %108 = getelementptr inbounds i8, i8* %107, i64 18
  store i8 0, i8* %108, align 2
  br label %176

109:                                              ; preds = %78
  %110 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  store i8 16, i8* %111, align 1
  %112 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.252, i64 0, i64 0), i64 16, i1 false) #10
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %114 = bitcast i64* %113 to i8*
  store i8 0, i8* %114, align 8
  br label %176

115:                                              ; preds = %78
  %116 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  store i8 20, i8* %117, align 1
  %118 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.253, i64 0, i64 0), i64 20, i1 false) #10
  %119 = getelementptr inbounds i8, i8* %118, i64 20
  store i8 0, i8* %119, align 4
  br label %176

120:                                              ; preds = %78
  %121 = tail call i8* @_Znwm(i64 32) #12
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %121, i8** %122, align 8
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %124 = bitcast i64* %123 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %124, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %121, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.254, i64 0, i64 0), i64 25, i1 false) #10
  %125 = getelementptr inbounds i8, i8* %121, i64 25
  store i8 0, i8* %125, align 1
  br label %176

126:                                              ; preds = %78
  %127 = tail call i8* @_Znwm(i64 32) #12
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %127, i8** %128, align 8
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %130 = bitcast i64* %129 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %130, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %127, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.255, i64 0, i64 0), i64 25, i1 false) #10
  %131 = getelementptr inbounds i8, i8* %127, i64 25
  store i8 0, i8* %131, align 1
  br label %176

132:                                              ; preds = %78
  %133 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  store i8 18, i8* %134, align 1
  %135 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.256, i64 0, i64 0), i64 18, i1 false) #10
  %136 = getelementptr inbounds i8, i8* %135, i64 18
  store i8 0, i8* %136, align 2
  br label %176

137:                                              ; preds = %78
  %138 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  store i8 13, i8* %139, align 1
  %140 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.257, i64 0, i64 0), i64 13, i1 false) #10
  %141 = getelementptr inbounds i8, i8* %140, i64 13
  store i8 0, i8* %141, align 1
  br label %176

142:                                              ; preds = %78
  %143 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %143, i64 0, i32 1, i32 0
  store i8 22, i8* %144, align 1
  %145 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %145, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.258, i64 0, i64 0), i64 22, i1 false) #10
  %146 = getelementptr inbounds i8, i8* %145, i64 22
  store i8 0, i8* %146, align 2
  br label %176

147:                                              ; preds = %78
  %148 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %149 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %148, i64 0, i32 1, i32 0
  store i8 16, i8* %149, align 1
  %150 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.259, i64 0, i64 0), i64 16, i1 false) #10
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %152 = bitcast i64* %151 to i8*
  store i8 0, i8* %152, align 8
  br label %176

153:                                              ; preds = %78
  %154 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %155 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %154, i64 0, i32 1, i32 0
  store i8 18, i8* %155, align 1
  %156 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.260, i64 0, i64 0), i64 18, i1 false) #10
  %157 = getelementptr inbounds i8, i8* %156, i64 18
  store i8 0, i8* %157, align 2
  br label %176

158:                                              ; preds = %78
  %159 = bitcast %"class.absl::AlphaNum"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %159) #10
  %160 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %12, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.261, i64 0, i64 0), i8** %160, align 8
  %161 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %12, i64 0, i32 0, i32 1
  store i64 8, i64* %161, align 8
  %162 = bitcast %"class.absl::AlphaNum"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %162) #10
  %163 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %13, i64 0, i32 1, i64 0
  %164 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64 %1, i8* %163) #10
  %165 = ptrtoint i8* %164 to i64
  %166 = ptrtoint i8* %163 to i64
  %167 = sub i64 %165, %166
  %168 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %13, i64 0, i32 0, i32 0
  store i8* %163, i8** %168, align 8
  %169 = icmp sgt i64 %167, -1
  br i1 %169, label %171, label %170, !prof !2

170:                                              ; preds = %158
  call void @llvm.trap() #10
  unreachable

171:                                              ; preds = %158
  %172 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %13, i64 0, i32 0, i32 1
  store i64 %167, i64* %172, align 8
  %173 = bitcast %"class.absl::AlphaNum"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %173) #10
  %174 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %14, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.241, i64 0, i64 0), i8** %174, align 8
  %175 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %14, i64 0, i32 0, i32 1
  store i64 1, i64* %175, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* sret %0, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %12, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %13, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %14) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %173) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %162) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %159) #10
  br label %176

176:                                              ; preds = %55, %73, %171, %153, %147, %142, %137, %132, %126, %120, %115, %109, %104, %99, %94, %89, %84, %79, %29
  ret void
}

declare void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* sret, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare i8* @SSL_alert_desc_string_long(i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_27QuicIetfTransportErrorCodesE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), i64* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = load i64, i64* %1, align 8
  call void @_ZN4quic32QuicIetfTransportErrorCodeStringENS_27QuicIetfTransportErrorCodesE(%"class.std::__1::basic_string"* nonnull sret %3, i64 %5)
  %6 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %8 to i64
  %15 = select i1 %9, i8* %11, i8* %4
  %16 = select i1 %9, i64 %13, i64 %14
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %15, i64 %16) #10
  %18 = load i8, i8* %7, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %2
  %21 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %21) #12
  br label %22

22:                                               ; preds = %2, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8, i64 } @_ZN4quic33QuicErrorCodeToTransportErrorCodeENS_13QuicErrorCodeE(i32) local_unnamed_addr #0 {
  %2 = icmp ult i32 %0, 206
  br i1 %2, label %3, label %10

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [206 x i8], [206 x i8]* @switch.table._ZN4quic33QuicErrorCodeToTransportErrorCodeENS_13QuicErrorCodeE, i64 0, i64 %4
  %6 = load i8, i8* %5, align 1
  %7 = sext i32 %0 to i64
  %8 = getelementptr inbounds [206 x i64], [206 x i64]* @switch.table._ZN4quic33QuicErrorCodeToTransportErrorCodeENS_13QuicErrorCodeE.263, i64 0, i64 %7
  %9 = load i64, i64* %8, align 8
  br label %10

10:                                               ; preds = %1, %3
  %11 = phi i8 [ %6, %3 ], [ 1, %1 ]
  %12 = phi i64 [ %9, %3 ], [ 1, %1 ]
  %13 = insertvalue { i8, i64 } undef, i8 %11, 0
  %14 = insertvalue { i8, i64 } %13, i64 %12, 1
  ret { i8, i64 } %14
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4quic23TlsAlertToQuicErrorCodeEh(i8 zeroext) local_unnamed_addr #0 {
  switch i8 %0, label %9 [
    i8 42, label %10
    i8 43, label %2
    i8 44, label %3
    i8 45, label %4
    i8 46, label %5
    i8 80, label %6
    i8 112, label %7
    i8 116, label %8
  ]

2:                                                ; preds = %1
  br label %10

3:                                                ; preds = %1
  br label %10

4:                                                ; preds = %1
  br label %10

5:                                                ; preds = %1
  br label %10

6:                                                ; preds = %1
  br label %10

7:                                                ; preds = %1
  br label %10

8:                                                ; preds = %1
  br label %10

9:                                                ; preds = %1
  br label %10

10:                                               ; preds = %1, %9, %8, %7, %6, %5, %4, %3, %2
  %11 = phi i32 [ 28, %9 ], [ 202, %8 ], [ 201, %7 ], [ 200, %6 ], [ 199, %5 ], [ 198, %4 ], [ 197, %3 ], [ 196, %2 ], [ 195, %1 ]
  ret i32 %11
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN4quic44RstStreamErrorCodeToIetfResetStreamErrorCodeENS_22QuicRstStreamErrorCodeE(i32) local_unnamed_addr #0 {
  %2 = icmp ult i32 %0, 39
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [39 x i64], [39 x i64]* @switch.table._ZN4quic44RstStreamErrorCodeToIetfResetStreamErrorCodeENS_22QuicRstStreamErrorCodeE, i64 0, i64 %4
  %6 = load i64, i64* %5, align 8
  ret i64 %6

7:                                                ; preds = %1
  ret i64 258
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4quic44IetfResetStreamErrorCodeToRstStreamErrorCodeEm(i64) local_unnamed_addr #0 {
  switch i64 %0, label %20 [
    i64 256, label %21
    i64 257, label %2
    i64 258, label %3
    i64 259, label %4
    i64 260, label %5
    i64 261, label %6
    i64 262, label %7
    i64 263, label %8
    i64 264, label %9
    i64 265, label %10
    i64 266, label %11
    i64 267, label %12
    i64 268, label %13
    i64 269, label %14
    i64 271, label %15
    i64 272, label %16
    i64 512, label %17
    i64 513, label %18
    i64 514, label %19
  ]

2:                                                ; preds = %1
  br label %21

3:                                                ; preds = %1
  br label %21

4:                                                ; preds = %1
  br label %21

5:                                                ; preds = %1
  br label %21

6:                                                ; preds = %1
  br label %21

7:                                                ; preds = %1
  br label %21

8:                                                ; preds = %1
  br label %21

9:                                                ; preds = %1
  br label %21

10:                                               ; preds = %1
  br label %21

11:                                               ; preds = %1
  br label %21

12:                                               ; preds = %1
  br label %21

13:                                               ; preds = %1
  br label %21

14:                                               ; preds = %1
  br label %21

15:                                               ; preds = %1
  br label %21

16:                                               ; preds = %1
  br label %21

17:                                               ; preds = %1
  br label %21

18:                                               ; preds = %1
  br label %21

19:                                               ; preds = %1
  br label %21

20:                                               ; preds = %1
  br label %21

21:                                               ; preds = %1, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %22 = phi i32 [ 35, %20 ], [ 34, %19 ], [ 33, %18 ], [ 32, %17 ], [ 31, %16 ], [ 30, %15 ], [ 29, %14 ], [ 6, %13 ], [ 28, %12 ], [ 27, %11 ], [ 26, %10 ], [ 25, %9 ], [ 24, %8 ], [ 23, %7 ], [ 22, %6 ], [ 21, %5 ], [ 20, %4 ], [ 19, %3 ], [ 18, %2 ], [ 0, %1 ]
  ret i32 %22
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #1 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #9

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
