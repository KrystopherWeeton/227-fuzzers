; ModuleID = '../../third_party/libzip/src/lib/zip_file_get_offset.c'
source_filename = "../../third_party/libzip/src/lib/zip_file_get_offset.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.zip = type { %struct.zip_source*, i32, %struct.zip_error, i32, i32, i8*, %struct.zip_string*, %struct.zip_string*, i8, i64, i64, %struct.zip_entry*, i32, i32, %struct.zip_source**, %struct.zip_hash*, %struct.zip_progress* }
%struct.zip_source = type { %struct.zip_source*, %union.anon, i8*, %struct.zip_error, i64, i32, i32, i8, %struct.zip*, i32, i8, i8 }
%union.anon = type { i64 (i8*, i8*, i64, i32)* }
%struct.zip_error = type { i32, i32, i8* }
%struct.zip_string = type { i8*, i16, i32, i8*, i32 }
%struct.zip_entry = type { %struct.zip_dirent*, %struct.zip_dirent*, %struct.zip_source*, i8 }
%struct.zip_dirent = type { i32, i8, i8, i8, i16, i16, i16, i32, i64, i32, i64, i64, %struct.zip_string*, %struct.zip_extra_field*, %struct.zip_string*, i32, i16, i32, i64, i16, i16, i8* }
%struct.zip_extra_field = type { %struct.zip_extra_field*, i32, i16, i16, i8* }
%struct.zip_hash = type opaque
%struct.zip_progress = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_zip_file_get_offset(%struct.zip* nocapture readonly, i64, %struct.zip_error*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 11
  %5 = load %struct.zip_entry*, %struct.zip_entry** %4, align 8
  %6 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %5, i64 %1, i32 0
  %7 = load %struct.zip_dirent*, %struct.zip_dirent** %6, align 8
  %8 = icmp eq %struct.zip_dirent* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void @zip_error_set(%struct.zip_error* %2, i32 20, i32 0) #3
  br label %27

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %7, i64 0, i32 18
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 0
  %14 = load %struct.zip_source*, %struct.zip_source** %13, align 8
  %15 = tail call i32 @zip_source_seek(%struct.zip_source* %14, i64 %12, i32 0) #3
  %16 = icmp slt i32 %15, 0
  %17 = load %struct.zip_source*, %struct.zip_source** %13, align 8
  br i1 %16, label %18, label %19

18:                                               ; preds = %10
  tail call void @_zip_error_set_from_source(%struct.zip_error* %2, %struct.zip_source* %17) #3
  br label %27

19:                                               ; preds = %10
  %20 = tail call i32 @_zip_dirent_size(%struct.zip_source* %17, i16 zeroext 256, %struct.zip_error* %2) #3
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = zext i32 %20 to i64
  %24 = add i64 %12, %23
  %25 = icmp slt i64 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  tail call void @zip_error_set(%struct.zip_error* %2, i32 4, i32 27) #3
  br label %27

27:                                               ; preds = %22, %19, %26, %18, %9
  %28 = phi i64 [ 0, %9 ], [ 0, %18 ], [ 0, %26 ], [ 0, %19 ], [ %24, %22 ]
  ret i64 %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @zip_error_set(%struct.zip_error*, i32, i32) local_unnamed_addr #2

declare i32 @zip_source_seek(%struct.zip_source*, i64, i32) local_unnamed_addr #2

declare void @_zip_error_set_from_source(%struct.zip_error*, %struct.zip_source*) local_unnamed_addr #2

declare i32 @_zip_dirent_size(%struct.zip_source*, i16 zeroext, %struct.zip_error*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_zip_file_get_end(%struct.zip* nocapture readonly, i64, %struct.zip_error*) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = tail call i64 @_zip_file_get_offset(%struct.zip* %0, i64 %1, %struct.zip_error* %2)
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %49, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 11
  %9 = load %struct.zip_entry*, %struct.zip_entry** %8, align 8
  %10 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %9, i64 %1, i32 0
  %11 = load %struct.zip_dirent*, %struct.zip_dirent** %10, align 8
  %12 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %11, i64 0, i32 10
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, %5
  %15 = icmp ult i64 %14, %5
  %16 = icmp slt i64 %14, 0
  %17 = or i1 %15, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  tail call void @zip_error_set(%struct.zip_error* %2, i32 4, i32 27) #3
  br label %49

19:                                               ; preds = %7
  %20 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %11, i64 0, i32 6
  %21 = load i16, i16* %20, align 4
  %22 = and i16 %21, 8
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %49, label %24

24:                                               ; preds = %19
  %25 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #3
  %26 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 0
  store i32 -1431655766, i32* %4, align 4
  %27 = load %struct.zip_source*, %struct.zip_source** %26, align 8
  %28 = tail call i32 @zip_source_seek(%struct.zip_source* %27, i64 %14, i32 0) #3
  %29 = icmp slt i32 %28, 0
  %30 = load %struct.zip_source*, %struct.zip_source** %26, align 8
  br i1 %29, label %31, label %32

31:                                               ; preds = %24
  tail call void @_zip_error_set_from_source(%struct.zip_error* %2, %struct.zip_source* %30) #3
  br label %47

32:                                               ; preds = %24
  %33 = call i64 @zip_source_read(%struct.zip_source* %30, i8* nonnull %25, i64 4) #3
  %34 = icmp eq i64 %33, 4
  br i1 %34, label %37, label %35

35:                                               ; preds = %32
  %36 = load %struct.zip_source*, %struct.zip_source** %26, align 8
  call void @_zip_error_set_from_source(%struct.zip_error* %2, %struct.zip_source* %36) #3
  br label %47

37:                                               ; preds = %32
  %38 = load i32, i32* %4, align 4
  %39 = icmp eq i32 %38, 134695760
  %40 = add nuw i64 %14, 4
  %41 = select i1 %39, i64 %40, i64 %14
  %42 = call zeroext i1 @_zip_dirent_needs_zip64(%struct.zip_dirent* %11, i32 0) #3
  %43 = select i1 %42, i64 20, i64 12
  %44 = add nuw i64 %41, %43
  %45 = icmp slt i64 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %37
  call void @zip_error_set(%struct.zip_error* %2, i32 4, i32 27) #3
  br label %47

47:                                               ; preds = %31, %35, %46
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #3
  br label %49

48:                                               ; preds = %37
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #3
  br label %49

49:                                               ; preds = %19, %48, %47, %3, %18
  %50 = phi i64 [ 0, %18 ], [ 0, %3 ], [ 0, %47 ], [ %44, %48 ], [ %14, %19 ]
  ret i64 %50
}

declare i64 @zip_source_read(%struct.zip_source*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_zip_dirent_needs_zip64(%struct.zip_dirent*, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
