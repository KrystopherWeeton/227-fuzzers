; ModuleID = '../../base/metrics/histogram_delta_serialization.cc'
source_filename = "../../base/metrics/histogram_delta_serialization.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::HistogramDeltaSerialization" = type { %"class.base::HistogramFlattener", %"class.base::ThreadChecker", [7 x i8], %"class.base::HistogramSnapshotManager", %"class.std::__1::vector"* }
%"class.base::HistogramFlattener" = type { i32 (...)** }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::HistogramSnapshotManager" = type <{ %"class.base::HistogramFlattener"*, %"class.std::__1::map", %"struct.std::__1::atomic", [7 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%"class.base::PickleIterator" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.14", [4 x i8] }>
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i32 }
%"class.base::HistogramSamples" = type { i32 (...)**, %"struct.base::HistogramSamples::Metadata"* }
%"struct.base::HistogramSamples::Metadata" = type { i64, i64, i32, %"union.base::HistogramSamples::AtomicSingleSample" }
%"union.base::HistogramSamples::AtomicSingleSample" = type { i32 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@_ZTVN4base27HistogramDeltaSerializationE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::HistogramDeltaSerialization"*)* @_ZN4base27HistogramDeltaSerializationD2Ev to i8*), i8* bitcast (void (%"class.base::HistogramDeltaSerialization"*)* @_ZN4base27HistogramDeltaSerializationD0Ev to i8*), i8* bitcast (void (%"class.base::HistogramDeltaSerialization"*, %"class.base::HistogramBase"*, %"class.base::HistogramSamples"*)* @_ZN4base27HistogramDeltaSerialization11RecordDeltaERKNS_13HistogramBaseERKNS_16HistogramSamplesE to i8*)] }, align 8

@_ZN4base27HistogramDeltaSerializationC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.base::HistogramDeltaSerialization"*, %"class.std::__1::basic_string"*), void (%"class.base::HistogramDeltaSerialization"*, %"class.std::__1::basic_string"*)* @_ZN4base27HistogramDeltaSerializationC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN4base27HistogramDeltaSerializationD1Ev = hidden unnamed_addr alias void (%"class.base::HistogramDeltaSerialization"*), void (%"class.base::HistogramDeltaSerialization"*)* @_ZN4base27HistogramDeltaSerializationD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27HistogramDeltaSerializationC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::HistogramDeltaSerialization"*, %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::HistogramDeltaSerialization", %"class.base::HistogramDeltaSerialization"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.base::HistogramDeltaSerialization", %"class.base::HistogramDeltaSerialization"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base27HistogramDeltaSerializationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.base::HistogramDeltaSerialization", %"class.base::HistogramDeltaSerialization"* %0, i64 0, i32 3
  tail call void @_ZN4base24HistogramSnapshotManagerC1EPNS_18HistogramFlattenerE(%"class.base::HistogramSnapshotManager"* %5, %"class.base::HistogramFlattener"* %3) #9
  %6 = getelementptr inbounds %"class.base::HistogramDeltaSerialization", %"class.base::HistogramDeltaSerialization"* %0, i64 0, i32 4
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %6, align 8
  ret void
}

declare void @_ZN4base24HistogramSnapshotManagerC1EPNS_18HistogramFlattenerE(%"class.base::HistogramSnapshotManager"*, %"class.base::HistogramFlattener"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27HistogramDeltaSerializationD2Ev(%"class.base::HistogramDeltaSerialization"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::HistogramDeltaSerialization", %"class.base::HistogramDeltaSerialization"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base27HistogramDeltaSerializationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::HistogramDeltaSerialization", %"class.base::HistogramDeltaSerialization"* %0, i64 0, i32 3
  tail call void @_ZN4base24HistogramSnapshotManagerD1Ev(%"class.base::HistogramSnapshotManager"* %3) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base24HistogramSnapshotManagerD1Ev(%"class.base::HistogramSnapshotManager"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27HistogramDeltaSerializationD0Ev(%"class.base::HistogramDeltaSerialization"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::HistogramDeltaSerialization", %"class.base::HistogramDeltaSerialization"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base27HistogramDeltaSerializationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::HistogramDeltaSerialization", %"class.base::HistogramDeltaSerialization"* %0, i64 0, i32 3
  tail call void @_ZN4base24HistogramSnapshotManagerD1Ev(%"class.base::HistogramSnapshotManager"* %3) #9
  %4 = bitcast %"class.base::HistogramDeltaSerialization"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27HistogramDeltaSerialization25PrepareAndSerializeDeltasEPNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEb(%"class.base::HistogramDeltaSerialization"*, %"class.std::__1::vector"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::HistogramDeltaSerialization", %"class.base::HistogramDeltaSerialization"* %0, i64 0, i32 4
  store %"class.std::__1::vector"* %1, %"class.std::__1::vector"** %4, align 8
  %5 = getelementptr inbounds %"class.base::HistogramDeltaSerialization", %"class.base::HistogramDeltaSerialization"* %0, i64 0, i32 3
  tail call void @_ZN4base18StatisticsRecorder13PrepareDeltasEbNS_13HistogramBase5FlagsES2_PNS_24HistogramSnapshotManagerE(i1 zeroext %2, i32 16, i32 0, %"class.base::HistogramSnapshotManager"* %5) #9
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %4, align 8
  ret void
}

declare void @_ZN4base18StatisticsRecorder13PrepareDeltasEbNS_13HistogramBase5FlagsES2_PNS_24HistogramSnapshotManagerE(i1 zeroext, i32, i32, %"class.base::HistogramSnapshotManager"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27HistogramDeltaSerialization24DeserializeAndAddSamplesERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Pickle", align 8
  %3 = alloca %"class.base::PickleIterator", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = icmp eq %"class.std::__1::basic_string"* %5, %7
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.base::Pickle"* %2 to i8*
  %11 = bitcast %"class.base::PickleIterator"* %3 to i8*
  %12 = bitcast %"class.base::Pickle"* %2 to i8*
  %13 = bitcast %"class.base::PickleIterator"* %3 to i8*
  br label %15

14:                                               ; preds = %49, %1
  ret void

15:                                               ; preds = %9, %49
  %16 = phi %"class.std::__1::basic_string"* [ %5, %9 ], [ %50, %49 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #9
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 40, i1 false)
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %23 = zext i8 %19 to i64
  br label %31

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp ult i64 %28, 2147483648
  br i1 %29, label %31, label %30, !prof !2

30:                                               ; preds = %24
  call void @llvm.trap() #9
  unreachable

31:                                               ; preds = %21, %24
  %32 = phi i64 [ %23, %21 ], [ %28, %24 ]
  %33 = phi i8* [ %22, %21 ], [ %26, %24 ]
  %34 = shl i64 %32, 32
  %35 = ashr exact i64 %34, 32
  call void @_ZN4base6PickleC1EPKcm(%"class.base::Pickle"* nonnull %2, i8* %33, i64 %35) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"* nonnull %3, %"class.base::Pickle"* nonnull dereferenceable(40) %2) #9
  %36 = call %"class.base::HistogramBase"* @_ZN4base24DeserializeHistogramInfoEPNS_14PickleIteratorE(%"class.base::PickleIterator"* nonnull %3) #9
  %37 = icmp eq %"class.base::HistogramBase"* %36, null
  br i1 %37, label %49, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.base::HistogramBase", %"class.base::HistogramBase"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 16
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %49

43:                                               ; preds = %38
  %44 = bitcast %"class.base::HistogramBase"* %36 to i1 (%"class.base::HistogramBase"*, %"class.base::PickleIterator"*)***
  %45 = load i1 (%"class.base::HistogramBase"*, %"class.base::PickleIterator"*)**, i1 (%"class.base::HistogramBase"*, %"class.base::PickleIterator"*)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.base::HistogramBase"*, %"class.base::PickleIterator"*)*, i1 (%"class.base::HistogramBase"*, %"class.base::PickleIterator"*)** %45, i64 9
  %47 = load i1 (%"class.base::HistogramBase"*, %"class.base::PickleIterator"*)*, i1 (%"class.base::HistogramBase"*, %"class.base::PickleIterator"*)** %46, align 8
  %48 = call zeroext i1 %47(%"class.base::HistogramBase"* nonnull %36, %"class.base::PickleIterator"* nonnull %3) #9
  br label %49

49:                                               ; preds = %31, %38, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  call void @_ZN4base6PickleD1Ev(%"class.base::Pickle"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #9
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 1
  %51 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %52 = icmp eq %"class.std::__1::basic_string"* %50, %51
  br i1 %52, label %14, label %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base6PickleC1EPKcm(%"class.base::Pickle"*, i8*, i64) unnamed_addr #1

declare void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"*, %"class.base::Pickle"* dereferenceable(40)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base6PickleD1Ev(%"class.base::Pickle"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27HistogramDeltaSerialization11RecordDeltaERKNS_13HistogramBaseERKNS_16HistogramSamplesE(%"class.base::HistogramDeltaSerialization"* nocapture readonly, %"class.base::HistogramBase"* dereferenceable(24), %"class.base::HistogramSamples"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Pickle", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.base::Pickle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.base::Pickle", %"class.base::Pickle"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::Pickle", %"class.base::Pickle"* %4, i64 0, i32 2
  %9 = bitcast %"class.base::Pickle"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 40, i1 false)
  call void @_ZN4base6PickleC1Ev(%"class.base::Pickle"* nonnull %4) #9
  call void @_ZNK4base13HistogramBase13SerializeInfoEPNS_6PickleE(%"class.base::HistogramBase"* %1, %"class.base::Pickle"* nonnull %4) #9
  %10 = bitcast %"class.base::HistogramSamples"* %2 to void (%"class.base::HistogramSamples"*, %"class.base::Pickle"*)***
  %11 = load void (%"class.base::HistogramSamples"*, %"class.base::Pickle"*)**, void (%"class.base::HistogramSamples"*, %"class.base::Pickle"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.base::HistogramSamples"*, %"class.base::Pickle"*)*, void (%"class.base::HistogramSamples"*, %"class.base::Pickle"*)** %11, i64 9
  %13 = load void (%"class.base::HistogramSamples"*, %"class.base::Pickle"*)*, void (%"class.base::HistogramSamples"*, %"class.base::Pickle"*)** %12, align 8
  call void %13(%"class.base::HistogramSamples"* %2, %"class.base::Pickle"* nonnull %4) #9
  %14 = getelementptr inbounds %"class.base::HistogramDeltaSerialization", %"class.base::HistogramDeltaSerialization"* %0, i64 0, i32 4
  %15 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  %17 = bitcast %"struct.base::Pickle::Header"** %7 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = load i64, i64* %8, align 8
  %20 = bitcast i8* %18 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = add i64 %19, %22
  %24 = icmp ugt i64 %23, -17
  br i1 %24, label %25, label %27

25:                                               ; preds = %3
  %26 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %26) #11
  unreachable

27:                                               ; preds = %3
  %28 = icmp ult i64 %23, 23
  br i1 %28, label %37, label %29

29:                                               ; preds = %27
  %30 = add nuw i64 %23, 16
  %31 = and i64 %30, -16
  %32 = call i8* @_Znwm(i64 %31) #10
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %32, i8** %33, align 8
  %34 = or i64 %31, -9223372036854775808
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %23, i64* %36, align 8
  br label %42

37:                                               ; preds = %27
  %38 = trunc i64 %23 to i8
  %39 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 %38, i8* %40, align 1
  %41 = icmp eq i64 %23, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %37, %29
  %43 = phi i8* [ %32, %29 ], [ %16, %37 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %43, i8* align 1 %18, i64 %23, i1 false) #9
  br label %44

44:                                               ; preds = %37, %42
  %45 = phi i8* [ %16, %37 ], [ %43, %42 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 %23
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 1
  %48 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %50 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %49, align 8
  %51 = icmp ult %"class.std::__1::basic_string"* %48, %50
  br i1 %51, label %52, label %57

52:                                               ; preds = %44
  %53 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* nonnull align 8 %16, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #9
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 1
  %55 = ptrtoint %"class.std::__1::basic_string"* %54 to i64
  %56 = bitcast %"class.std::__1::basic_string"** %47 to i64*
  store i64 %55, i64* %56, align 8
  br label %58

57:                                               ; preds = %44
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %15, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #9
  br label %58

58:                                               ; preds = %52, %57
  %59 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %58, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  call void @_ZN4base6PickleD1Ev(%"class.base::Pickle"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #9
  ret void
}

declare void @_ZN4base6PickleC1Ev(%"class.base::Pickle"*) unnamed_addr #1

declare void @_ZNK4base13HistogramBase13SerializeInfoEPNS_6PickleE(%"class.base::HistogramBase"*, %"class.base::Pickle"*) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare %"class.base::HistogramBase"* @_ZN4base24DeserializeHistogramInfoEPNS_14PickleIteratorE(%"class.base::PickleIterator"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #9
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #9
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #10
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #10
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
