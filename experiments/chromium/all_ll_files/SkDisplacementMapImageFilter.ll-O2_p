; ModuleID = '../../third_party/skia/src/effects/imagefilters/SkDisplacementMapImageFilter.cpp'
source_filename = "../../third_party/skia/src/effects/imagefilters/SkDisplacementMapImageFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkImageFilterCache = type opaque
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"class.skif::FilterResult" = type { %class.sk_sp.18, %"class.skif::LayerSpace.19" }
%class.sk_sp.18 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.skif::LayerSpace.19" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%class.SkSTArray.249 = type { %class.SkAlignedSTStorage.250, %class.SkTArray.251 }
%class.SkAlignedSTStorage.250 = type { [16 x i8] }
%class.SkTArray.251 = type { %class.sk_sp*, i64 }
%class.sk_sp = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"struct.SkImageFilters::CropRect" = type { %struct.SkRect }
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp*, [16 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.15 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.2*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.15*, %class.SkReadBuffer*)* }
%class.sk_sp.2 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.8*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.13*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.2*, i8*, i64, i8*)*, i8* }
%class.sk_sp.8 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.9", [7 x i8] }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%class.sk_sp.13 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.14, i32, i32 }
%class.sk_sp.14 = type { %class.SkColorSpace* }
%struct.SkISize = type { i32, i32 }
%"class.SkImageFilter_Base::Common" = type { %"class.SkImageFilter_Base::CropRect", %class.SkSTArray.249 }
%"class.(anonymous namespace)::SkDisplacementMapImageFilter" = type { %class.SkImageFilter_Base.base, i32, i32, float }
%class.SkImageFilter_Base.base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32 }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.16*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.16 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.17, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.91, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.91 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.92, %class.sk_sp.93, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.129" }
%class.SkNVRefCnt.92 = type { %"struct.std::__1::atomic" }
%class.sk_sp.93 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.94 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.16, i8* }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.94 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.95, void (i8*)*, i8* }
%class.SkNVRefCnt.95 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.96, i32, [4 x i8] }
%union.anon.96 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.93, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.126, %class.sk_sp.128, %class.sk_sp.128 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.106, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.117, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.98 }
%class.SkTHashTable.98 = type { i32, i32, %class.SkAutoTArray.99 }
%class.SkAutoTArray.99 = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.106 = type { %class.SkTHashTable.107 }
%class.SkTHashTable.107 = type { i32, i32, %class.SkAutoTArray.108 }
%class.SkAutoTArray.108 = type { %"class.std::__1::unique_ptr.109" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.115, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.115 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.116, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.116 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.117 = type { %class.SkTHashTable.118 }
%class.SkTHashTable.118 = type { i32, i32, %class.SkAutoTArray.119 }
%class.SkAutoTArray.119 = type { %"class.std::__1::unique_ptr.120" }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.126 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.127, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.127 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.128 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.129" = type { %"struct.std::__1::__atomic_base.130" }
%"struct.std::__1::__atomic_base.130" = type { %"struct.std::__1::__atomic_base.131" }
%"struct.std::__1::__atomic_base.131" = type { %"struct.std::__1::__cxx_atomic_impl.132" }
%"struct.std::__1::__cxx_atomic_impl.132" = type { %"struct.std::__1::__cxx_atomic_base_impl.133" }
%"struct.std::__1::__cxx_atomic_base_impl.133" = type { i64 }
%class.GrSwizzle = type { i16 }
%struct.SkPoint = type { float, float }
%class.GrImageInfo = type { %class.GrColorInfo, %struct.SkISize }
%class.GrColorInfo = type { %class.sk_sp.14, %class.sk_sp.208, i32, i32 }
%class.sk_sp.208 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.SkBitmap = type { %class.sk_sp.216, %class.SkPixmap, %class.sk_sp.217 }
%class.sk_sp.216 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.217 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.21", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.202" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.20 }
%class.sk_sp.20 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap.32, %class.SkTHashMap.42, %class.SkTArray.53, %class.SkTArray.28, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.24"*, i64 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.28, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.27 }
%class.sk_sp.27 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap.32 = type { %class.SkTHashTable.33 }
%class.SkTHashTable.33 = type { i32, i32, %class.SkAutoTArray.34 }
%class.SkAutoTArray.34 = type { %"class.std::__1::unique_ptr.35" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.38" }
%"struct.std::__1::pair.38" = type { i32, i32 }
%class.SkTHashMap.42 = type { %class.SkTHashTable.43 }
%class.SkTHashTable.43 = type { i32, i32, %class.SkAutoTArray.44 }
%class.SkAutoTArray.44 = type { %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.48" }
%"struct.std::__1::pair.48" = type { i32, %class.SkTArray.49* }
%class.SkTArray.49 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.53 = type { %"class.std::__1::unique_ptr.54"*, i64 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.49, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%class.SkTArray.28 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.72 }
%class.SkFibBlockSizes.72 = type { i32 }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.79, %class.SkTArray.88, %class.GrOpsTask*, %class.SkSTArray.167, %class.SkSTArray.170, %"class.std::__1::unique_ptr.172", %class.sk_sp.188, %class.GrTokenTracker, i8, i8, %class.SkTArray.189, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.79 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.80", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.83, i8, [7 x i8] }>
%class.sk_sp.83 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.84, i8*, i64 }
%class.GrNonAtomicRef.84 = type { i32 }
%class.SkTArray.88 = type { %class.sk_sp.89*, i64 }
%class.sk_sp.89 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray, %class.SkTArray.134, i32, i32, %class.SkSTArray.141, %class.SkSTArray.141, %class.GrTextureResolveRenderTask* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.90 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.90 = type { %class.sk_sp.91*, i64 }
%class.SkTArray.134 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.135", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.141 = type { %class.SkAlignedSTStorage.142, %class.SkTArray.143 }
%class.SkAlignedSTStorage.142 = type { [8 x i8] }
%class.SkTArray.143 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.144, %class.sk_sp.164, %class.SkTArray.166, %struct.SkRect, %struct.SkIRect }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.144 = type { %class.SkAlignedSTStorage.145, %class.SkTArray.146 }
%class.SkAlignedSTStorage.145 = type { [2000 x i8] }
%class.SkTArray.146 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.147", %class.GrOp* }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.147", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.155" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.153 }
%union.anon.153 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.154, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.154 = type { i32 }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.158, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.158 = type { %class.SkAlignedSTStorage.159, %class.SkTArray.160 }
%class.SkAlignedSTStorage.159 = type { [8 x i8] }
%class.SkTArray.160 = type { %"class.std::__1::unique_ptr.155"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.sk_sp.164 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.165, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.165 = type { %"struct.std::__1::atomic" }
%class.SkTArray.166 = type { %class.GrSurfaceProxy**, i64 }
%class.SkSTArray.167 = type { %class.SkAlignedSTStorage.168, %class.SkTArray.169 }
%class.SkAlignedSTStorage.168 = type { [32 x i8] }
%class.SkTArray.169 = type { i32*, i64 }
%class.SkSTArray.170 = type { %class.SkAlignedSTStorage.171, %class.SkTArray.88 }
%class.SkAlignedSTStorage.171 = type { [32 x i8] }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.175, %"class.std::__1::unique_ptr.179", %class.GrPathRenderer* }
%class.SkSTArray.175 = type { %class.SkAlignedSTStorage.176, %class.SkTArray.177 }
%class.SkAlignedSTStorage.176 = type { [64 x i8] }
%class.SkTArray.177 = type { %class.sk_sp.178*, i64 }
%class.sk_sp.178 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.188 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.189 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.190, i32, %class.GrRenderTask** }
%class.SkTHashMap.190 = type { %class.SkTHashTable.191 }
%class.SkTHashTable.191 = type { i32, i32, %class.SkAutoTArray.192 }
%class.SkAutoTArray.192 = type { %"class.std::__1::unique_ptr.193" }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %class.GrProxyProvider* }
%class.GrSurfaceFillContext = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.212, i8, [7 x i8] }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.sk_sp.212 = type { %class.GrOpsTask* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.(anonymous namespace)::GrDisplacementMapEffect" = type { %class.GrFragmentProcessor.base, i32, i32, %struct.SkPoint, [4 x i8] }
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray.158, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray.28, %class.SkTArray.221 }
%class.SkTArray.221 = type { %"class.std::__1::unique_ptr.218"*, i64 }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %class.GrGLSLFragmentProcessor* }
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.169*, i32, i32 }
%"class.(anonymous namespace)::GrDisplacementMapEffect::Impl" = type <{ %class.GrGLSLFragmentProcessor, %class.GrResourceHandle, [4 x i8] }>
%class.GrResourceHandle = type { i32 }
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.236, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.238, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.247], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.233 }
%union.anon.233 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.236 = type { %class.SkAlignedSTStorage.237, %class.SkTArray.28 }
%class.SkAlignedSTStorage.237 = type { [120 x i8] }
%class.SkSTArray.238 = type { %class.SkAlignedSTStorage.239, %class.SkTArray.240 }
%class.SkAlignedSTStorage.239 = type { [16 x i8] }
%class.SkTArray.240 = type { %"class.std::__1::unique_ptr.241"*, i64 }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.247 = type { %class.SkAlignedSTStorage.248, %class.SkTArray.28 }
%class.SkAlignedSTStorage.248 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.234 }
%struct.anon.234 = type { i8 }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.236, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.238, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.247], i32, i8, [3 x i8], i32, [12 x i8] }>
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkImageFilter18getFlattenableTypeEv = comdat any

$_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter = comdat any

$_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv = comdat any

$_ZNK18SkImageFilter_Base23affectsTransparentBlackEv = comdat any

$_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE = comdat any

$_ZN19GrFragmentProcessorD2Ev = comdat any

$_ZN19GrFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD2Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZN15GrTextureEffect14kDefaultBorderE = comdat any

$_ZTV19GrFragmentProcessor = comdat any

$_ZTV23GrGLSLFragmentProcessor = comdat any

@.str = private unnamed_addr constant [29 x i8] c"SkDisplacementMapImageFilter\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"SkDisplacementMapEffect\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"SkDisplacementMapEffectImpl\00", align 1
@_ZN4skifL11kNoCropRectE = internal unnamed_addr constant %struct.SkRect { float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000 }, align 4
@_ZTVN12_GLOBAL__N_128SkDisplacementMapImageFilterE = internal unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkImageFilter_Base*)* @_ZN18SkImageFilter_BaseD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkDisplacementMapImageFilter"*)* @_ZN12_GLOBAL__N_128SkDisplacementMapImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkReadBuffer*)* (%"class.(anonymous namespace)::SkDisplacementMapImageFilter"*)* @_ZNK12_GLOBAL__N_128SkDisplacementMapImageFilter10getFactoryEv to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::SkDisplacementMapImageFilter"*)* @_ZNK12_GLOBAL__N_128SkDisplacementMapImageFilter11getTypeNameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkDisplacementMapImageFilter"*, %class.SkWriteBuffer*)* @_ZNK12_GLOBAL__N_128SkDisplacementMapImageFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.(anonymous namespace)::SkDisplacementMapImageFilter"*, %struct.SkRect*)* @_ZNK12_GLOBAL__N_128SkDisplacementMapImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void (%class.sk_sp.18*, %"class.(anonymous namespace)::SkDisplacementMapImageFilter"*, %"class.skif::Context"*, %struct.SkIPoint*)* @_ZNK12_GLOBAL__N_128SkDisplacementMapImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint to i8*), i8* bitcast ({ i64, i64 } (%"class.(anonymous namespace)::SkDisplacementMapImageFilter"*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK12_GLOBAL__N_128SkDisplacementMapImageFilter14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_ to i8*), i8* bitcast ({ i64, i64 } (%"class.(anonymous namespace)::SkDisplacementMapImageFilter"*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK12_GLOBAL__N_128SkDisplacementMapImageFilter18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*)] }, align 8
@__const._ZNK12_GLOBAL__N_128SkDisplacementMapImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.displContext = private unnamed_addr constant { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, [4 x i8], %class.SkColorSpace*, %"class.skif::FilterResult" } { %"class.skif::Mapping" { %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, %"class.skif::LayerSpace" { %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 } }, %class.SkImageFilterCache* inttoptr (i64 -6148914691236517206 to %class.SkImageFilterCache*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*), %"class.skif::FilterResult" { %class.sk_sp.18 { %class.SkSpecialImage* inttoptr (i64 -6148914691236517206 to %class.SkSpecialImage*) }, %"class.skif::LayerSpace.19" { %struct.SkIPoint { i32 -1431655766, i32 -1431655766 } } } }, align 8
@_ZN15GrTextureEffect14kDefaultBorderE = linkonce_odr hidden constant [4 x float] zeroinitializer, comdat, align 16
@_ZTVN12_GLOBAL__N_123GrDisplacementMapEffectE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::GrDisplacementMapEffect"*)* @_ZN12_GLOBAL__N_123GrDisplacementMapEffectD0Ev to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::GrDisplacementMapEffect"*)* @_ZNK12_GLOBAL__N_123GrDisplacementMapEffect4nameEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%"class.(anonymous namespace)::GrDisplacementMapEffect"*)* @_ZNK12_GLOBAL__N_123GrDisplacementMapEffect5cloneEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (%class.GrGLSLFragmentProcessor* (%"class.(anonymous namespace)::GrDisplacementMapEffect"*)* @_ZNK12_GLOBAL__N_123GrDisplacementMapEffect17onMakeProgramImplEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::GrDisplacementMapEffect"*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK12_GLOBAL__N_123GrDisplacementMapEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::GrDisplacementMapEffect"*, %class.GrFragmentProcessor*)* @_ZNK12_GLOBAL__N_123GrDisplacementMapEffect9onIsEqualERK19GrFragmentProcessor to i8*)] }, align 8
@_ZTV19GrFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [16 x i8] c"DisplacementMap\00", align 1
@.str.4 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrFragmentProcessor.h\00", align 1
@.str.5 = private unnamed_addr constant [62 x i8] c"Subclass must override this if advertising this optimization.\00", align 1
@_ZTVN12_GLOBAL__N_123GrDisplacementMapEffect4ImplE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::GrDisplacementMapEffect::Impl"*)* @_ZN12_GLOBAL__N_123GrDisplacementMapEffect4ImplD0Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::GrDisplacementMapEffect::Impl"*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)* @_ZN12_GLOBAL__N_123GrDisplacementMapEffect4Impl8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE to i8*), i8* bitcast (void (%"class.(anonymous namespace)::GrDisplacementMapEffect::Impl"*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN12_GLOBAL__N_123GrDisplacementMapEffect4Impl9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, align 8
@_ZTV23GrGLSLFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@.str.6 = private unnamed_addr constant [6 x i8] c"Scale\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"half4 dColor = unpremul(%s);\00", align 1
@.str.9 = private unnamed_addr constant [55 x i8] c"float2 cCoords = %s + %s * (dColor.%c%c - half2(0.5));\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"cCoords\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"return %s;\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@_ZZL20compute_displacementN12_GLOBAL__N_19ExtractorERK7SkPointP8SkBitmapRKS4_RK8SkIPointS7_RK7SkIRectE7Inv8bit = internal global float 0.000000e+00, align 4
@_ZGVZL20compute_displacementN12_GLOBAL__N_19ExtractorERK7SkPointP8SkBitmapRKS4_RK8SkIPointS7_RK7SkIRectE7Inv8bit = internal global i64 0, align 8
@_ZN12_GLOBAL__N_119gChannelTypeToShiftE = internal unnamed_addr constant [4 x i8] c"\10\08\00\18", align 1
@__const._ZN12_GLOBAL__N_128SkDisplacementMapImageFilter10CreateProcER12SkReadBuffer.common = private unnamed_addr constant { %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray.249 } { %"class.SkImageFilter_Base::CropRect" { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkSTArray.249 { %class.SkAlignedSTStorage.250 { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray.251 { %class.sk_sp* inttoptr (i64 -6148914691236517206 to %class.sk_sp*), i64 -6148914691236517206 } } }, align 8
@switch.table._ZNK12_GLOBAL__N_128SkDisplacementMapImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint = private unnamed_addr constant [21 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 9, i32 10, i32 0, i32 0, i32 11, i32 15, i32 14, i32 16, i32 7, i32 13, i32 19, i32 17, i32 18, i32 20], align 4
@switch.table._ZN12_GLOBAL__N_123GrDisplacementMapEffect4Impl8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE.15 = private unnamed_addr constant [4 x i32] [i32 114, i32 103, i32 98, i32 97], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters15DisplacementMapE14SkColorChannelS0_f5sk_spI13SkImageFilterES3_RKNS_8CropRectE(%class.sk_sp* noalias nocapture sret, i32, i32, float, %class.sk_sp* nocapture, %class.sk_sp* nocapture, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %8 = alloca [2 x %class.sk_sp], align 16
  %9 = or i32 %2, %1
  %10 = icmp ult i32 %9, 4
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %12, align 8
  br label %71

13:                                               ; preds = %7
  %14 = bitcast [2 x %class.sk_sp]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13
  %15 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %8, i64 0, i64 0
  %16 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %17 = bitcast %class.sk_sp* %4 to i64*
  %18 = load i64, i64* %17, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %16, align 8
  %19 = bitcast [2 x %class.sk_sp]* %8 to i64*
  store i64 %18, i64* %19, align 16
  %20 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %8, i64 0, i64 1
  %21 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %22 = bitcast %class.sk_sp* %5 to i64*
  %23 = load i64, i64* %22, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %21, align 8
  %24 = bitcast %class.sk_sp* %20 to i64*
  store i64 %23, i64* %24, align 8
  %25 = tail call i8* @_Znwm(i64 88) #15
  %26 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %6, i64 0, i32 0
  %27 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %6, i64 0, i32 0, i32 0
  %28 = load float, float* %27, align 4
  %29 = fcmp une float %28, 0xFFF0000000000000
  br i1 %29, label %42, label %30

30:                                               ; preds = %13
  %31 = getelementptr inbounds float, float* %27, i64 1
  %32 = load float, float* %31, align 4
  %33 = fcmp une float %32, 0xFFF0000000000000
  br i1 %33, label %42, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds float, float* %27, i64 2
  %36 = load float, float* %35, align 4
  %37 = fcmp une float %36, 0x7FF0000000000000
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds float, float* %27, i64 3
  %40 = load float, float* %39, align 4
  %41 = fcmp une float %40, 0x7FF0000000000000
  br i1 %41, label %42, label %43

42:                                               ; preds = %38, %34, %30, %13
  br label %43

43:                                               ; preds = %38, %42
  %44 = phi %struct.SkRect* [ %26, %42 ], [ null, %38 ]
  %45 = bitcast i8* %25 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %45, %class.sk_sp* nonnull %15, i32 2, %struct.SkRect* %44) #13
  %46 = bitcast i8* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_128SkDisplacementMapImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds i8, i8* %25, i64 76
  %48 = bitcast i8* %47 to i32*
  store i32 %1, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %25, i64 80
  %50 = bitcast i8* %49 to i32*
  store i32 %2, i32* %50, align 8
  %51 = getelementptr inbounds i8, i8* %25, i64 84
  %52 = bitcast i8* %51 to float*
  store float %3, float* %52, align 4
  %53 = bitcast %class.sk_sp* %0 to i8**
  store i8* %25, i8** %53, align 8
  %54 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %8, i64 0, i64 1, i32 0
  %55 = load %class.SkImageFilter*, %class.SkImageFilter** %54, align 8
  %56 = icmp eq %class.SkImageFilter* %55, null
  br i1 %56, label %67, label %57

57:                                               ; preds = %43
  %58 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %55, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 -1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %67

61:                                               ; preds = %57
  %62 = bitcast %class.SkImageFilter* %55 to %class.SkRefCntBase*
  %63 = bitcast %class.SkImageFilter* %55 to void (%class.SkRefCntBase*)***
  %64 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %63, align 8
  %65 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, i64 2
  %66 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, align 8
  call void %66(%class.SkRefCntBase* nonnull %62) #13
  br label %67

67:                                               ; preds = %43, %57, %61
  %68 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %8, i64 0, i64 0, i32 0
  %69 = load %class.SkImageFilter*, %class.SkImageFilter** %68, align 16
  %70 = icmp eq %class.SkImageFilter* %69, null
  br i1 %70, label %82, label %72

71:                                               ; preds = %82, %11
  ret void

72:                                               ; preds = %67
  %73 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %69, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 -1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %82

76:                                               ; preds = %72
  %77 = bitcast %class.SkImageFilter* %69 to %class.SkRefCntBase*
  %78 = bitcast %class.SkImageFilter* %69 to void (%class.SkRefCntBase*)***
  %79 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %78, align 8
  %80 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %79, i64 2
  %81 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %80, align 8
  call void %81(%class.SkRefCntBase* nonnull %77) #13
  br label %82

82:                                               ; preds = %76, %72, %67
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13
  br label %71
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z47SkRegisterDisplacementMapImageFilterFlattenablev() local_unnamed_addr #0 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_128SkDisplacementMapImageFilter10CreateProcER12SkReadBuffer) #13
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_128SkDisplacementMapImageFilter10CreateProcER12SkReadBuffer) #13
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_128SkDisplacementMapImageFilter10CreateProcER12SkReadBuffer) #13
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.15*, %class.SkReadBuffer*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_128SkDisplacementMapImageFilter10CreateProcER12SkReadBuffer(%class.sk_sp.15* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca [2 x %class.sk_sp], align 16
  %4 = alloca %"class.SkImageFilter_Base::Common", align 8
  %5 = alloca %"struct.SkImageFilters::CropRect", align 4
  %6 = bitcast %"class.SkImageFilter_Base::Common"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast ({ %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray.249 }* @__const._ZN12_GLOBAL__N_128SkDisplacementMapImageFilter10CreateProcER12SkReadBuffer.common to i8*), i64 40, i1 false)
  %7 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 0, i32 1
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 16
  %9 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 0
  %10 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 24
  %11 = bitcast i8* %10 to i64*
  %12 = bitcast i8* %8 to i8**
  store i8* %9, i8** %12, align 8
  store i64 17179869184, i64* %11, align 8
  %13 = call zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"* nonnull %4, %class.SkReadBuffer* dereferenceable(136) %1, i32 2) #13
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %15, align 8
  br label %146

16:                                               ; preds = %2
  %17 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #13
  %18 = icmp ugt i32 %17, 3
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #13
  br label %20

20:                                               ; preds = %16, %19
  %21 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  %24 = select i1 %23, i32 %17, i32 0
  %25 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #13
  %26 = icmp ugt i32 %25, 3
  br i1 %26, label %27, label %28

27:                                               ; preds = %20
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #13
  br label %28

28:                                               ; preds = %20, %27
  %29 = load i8, i8* %21, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  %31 = select i1 %30, i32 %25, i32 0
  %32 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #13
  %33 = bitcast i8* %8 to %class.sk_sp**
  %34 = load %class.sk_sp*, %class.sk_sp** %33, align 8, !noalias !3
  %35 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %34, i64 0, i32 0
  %36 = load %class.SkImageFilter*, %class.SkImageFilter** %35, align 8, !noalias !3
  %37 = icmp eq %class.SkImageFilter* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %36, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 1 monotonic, !noalias !3
  %41 = load %class.sk_sp*, %class.sk_sp** %33, align 8, !noalias !6
  br label %42

42:                                               ; preds = %28, %38
  %43 = phi %class.sk_sp* [ %34, %28 ], [ %41, %38 ]
  %44 = ptrtoint %class.SkImageFilter* %36 to i64
  %45 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %43, i64 1, i32 0
  %46 = load %class.SkImageFilter*, %class.SkImageFilter** %45, align 8, !noalias !6
  %47 = icmp eq %class.SkImageFilter* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %46, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic, !noalias !6
  br label %51

51:                                               ; preds = %42, %48
  %52 = bitcast %"struct.SkImageFilters::CropRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #13
  %53 = load i32, i32* %7, align 8
  %54 = icmp eq i32 %53, 0
  %55 = select i1 %54, i8* bitcast (%struct.SkRect* @_ZN4skifL11kNoCropRectE to i8*), i8* %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %52, i8* align 4 %55, i64 16, i1 false) #13
  %56 = or i32 %31, %24
  %57 = icmp ult i32 %56, 4
  br i1 %57, label %58, label %123

58:                                               ; preds = %51
  %59 = ptrtoint %class.SkImageFilter* %46 to i64
  %60 = bitcast [2 x %class.sk_sp]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #13, !noalias !9
  %61 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %3, i64 0, i64 0
  %62 = bitcast [2 x %class.sk_sp]* %3 to i64*
  store i64 %44, i64* %62, align 16, !noalias !9
  %63 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %3, i64 0, i64 1
  %64 = bitcast %class.sk_sp* %63 to i64*
  store i64 %59, i64* %64, align 8, !noalias !9
  %65 = call i8* @_Znwm(i64 88) #15, !noalias !9
  %66 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %5, i64 0, i32 0
  %67 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %5, i64 0, i32 0, i32 0
  %68 = load float, float* %67, align 4, !noalias !9
  %69 = fcmp une float %68, 0xFFF0000000000000
  br i1 %69, label %82, label %70

70:                                               ; preds = %58
  %71 = getelementptr inbounds float, float* %67, i64 1
  %72 = load float, float* %71, align 4, !noalias !9
  %73 = fcmp une float %72, 0xFFF0000000000000
  br i1 %73, label %82, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds float, float* %67, i64 2
  %76 = load float, float* %75, align 4, !noalias !9
  %77 = fcmp une float %76, 0x7FF0000000000000
  br i1 %77, label %82, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds float, float* %67, i64 3
  %80 = load float, float* %79, align 4, !noalias !9
  %81 = fcmp une float %80, 0x7FF0000000000000
  br i1 %81, label %82, label %83

82:                                               ; preds = %78, %74, %70, %58
  br label %83

83:                                               ; preds = %82, %78
  %84 = phi %struct.SkRect* [ %66, %82 ], [ null, %78 ]
  %85 = bitcast i8* %65 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %85, %class.sk_sp* nonnull %61, i32 2, %struct.SkRect* %84) #13, !noalias !9
  %86 = bitcast i8* %65 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_128SkDisplacementMapImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8, !noalias !9
  %87 = getelementptr inbounds i8, i8* %65, i64 76
  %88 = bitcast i8* %87 to i32*
  store i32 %24, i32* %88, align 4, !noalias !9
  %89 = getelementptr inbounds i8, i8* %65, i64 80
  %90 = bitcast i8* %89 to i32*
  store i32 %31, i32* %90, align 8, !noalias !9
  %91 = getelementptr inbounds i8, i8* %65, i64 84
  %92 = bitcast i8* %91 to float*
  store float %32, float* %92, align 4, !noalias !9
  %93 = ptrtoint i8* %65 to i64
  %94 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %3, i64 0, i64 1, i32 0
  %95 = load %class.SkImageFilter*, %class.SkImageFilter** %94, align 8, !noalias !9
  %96 = icmp eq %class.SkImageFilter* %95, null
  br i1 %96, label %107, label %97

97:                                               ; preds = %83
  %98 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %95, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = atomicrmw add i32* %98, i32 -1 acq_rel, !noalias !9
  %100 = icmp eq i32 %99, 1
  br i1 %100, label %101, label %107

101:                                              ; preds = %97
  %102 = bitcast %class.SkImageFilter* %95 to %class.SkRefCntBase*
  %103 = bitcast %class.SkImageFilter* %95 to void (%class.SkRefCntBase*)***
  %104 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %103, align 8, !noalias !9
  %105 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %104, i64 2
  %106 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %105, align 8, !noalias !9
  call void %106(%class.SkRefCntBase* nonnull %102) #13, !noalias !9
  br label %107

107:                                              ; preds = %101, %97, %83
  %108 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %3, i64 0, i64 0, i32 0
  %109 = load %class.SkImageFilter*, %class.SkImageFilter** %108, align 16, !noalias !9
  %110 = icmp eq %class.SkImageFilter* %109, null
  br i1 %110, label %121, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %109, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = atomicrmw add i32* %112, i32 -1 acq_rel, !noalias !9
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %121

115:                                              ; preds = %111
  %116 = bitcast %class.SkImageFilter* %109 to %class.SkRefCntBase*
  %117 = bitcast %class.SkImageFilter* %109 to void (%class.SkRefCntBase*)***
  %118 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %117, align 8, !noalias !9
  %119 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %118, i64 2
  %120 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %119, align 8, !noalias !9
  call void %120(%class.SkRefCntBase* nonnull %116) #13, !noalias !9
  br label %121

121:                                              ; preds = %115, %111, %107
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #13, !noalias !9
  %122 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %93, i64* %122, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #13
  br label %146

123:                                              ; preds = %51
  %124 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 0, i64* %124, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #13
  br i1 %47, label %135, label %125

125:                                              ; preds = %123
  %126 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %46, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = atomicrmw add i32* %126, i32 -1 acq_rel
  %128 = icmp eq i32 %127, 1
  br i1 %128, label %129, label %135

129:                                              ; preds = %125
  %130 = bitcast %class.SkImageFilter* %46 to %class.SkRefCntBase*
  %131 = bitcast %class.SkImageFilter* %46 to void (%class.SkRefCntBase*)***
  %132 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %131, align 8
  %133 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %132, i64 2
  %134 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %133, align 8
  call void %134(%class.SkRefCntBase* nonnull %130) #13
  br label %135

135:                                              ; preds = %123, %125, %129
  br i1 %37, label %146, label %136

136:                                              ; preds = %135
  %137 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %36, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = atomicrmw add i32* %137, i32 -1 acq_rel
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %146

140:                                              ; preds = %136
  %141 = bitcast %class.SkImageFilter* %36 to %class.SkRefCntBase*
  %142 = bitcast %class.SkImageFilter* %36 to void (%class.SkRefCntBase*)***
  %143 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %142, align 8
  %144 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %143, i64 2
  %145 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %144, align 8
  call void %145(%class.SkRefCntBase* nonnull %141) #13
  br label %146

146:                                              ; preds = %140, %136, %135, %121, %14
  %147 = load i64, i64* %11, align 8
  %148 = and i64 %147, 4294967294
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %146
  %151 = bitcast i8* %8 to %class.sk_sp**
  br label %156

152:                                              ; preds = %172, %146
  %153 = phi i64 [ %147, %146 ], [ %174, %172 ]
  %154 = and i64 %153, 1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %180, label %178

156:                                              ; preds = %172, %150
  %157 = phi i64 [ 0, %150 ], [ %173, %172 ]
  %158 = load %class.sk_sp*, %class.sk_sp** %151, align 8
  %159 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %158, i64 %157, i32 0
  %160 = load %class.SkImageFilter*, %class.SkImageFilter** %159, align 8
  %161 = icmp eq %class.SkImageFilter* %160, null
  br i1 %161, label %172, label %162

162:                                              ; preds = %156
  %163 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %160, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = atomicrmw add i32* %163, i32 -1 acq_rel
  %165 = icmp eq i32 %164, 1
  br i1 %165, label %166, label %172

166:                                              ; preds = %162
  %167 = bitcast %class.SkImageFilter* %160 to %class.SkRefCntBase*
  %168 = bitcast %class.SkImageFilter* %160 to void (%class.SkRefCntBase*)***
  %169 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %168, align 8
  %170 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %169, i64 2
  %171 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %170, align 8
  call void %171(%class.SkRefCntBase* nonnull %167) #13
  br label %172

172:                                              ; preds = %166, %162, %156
  %173 = add nuw nsw i64 %157, 1
  %174 = load i64, i64* %11, align 8
  %175 = lshr i64 %174, 1
  %176 = and i64 %175, 2147483647
  %177 = icmp ult i64 %173, %176
  br i1 %177, label %156, label %152

178:                                              ; preds = %152
  %179 = load i8*, i8** %12, align 8
  call void @_Z7sk_freePv(i8* %179) #13
  br label %180

180:                                              ; preds = %152, %178
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #13
  ret void
}

declare void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base*, %class.sk_sp*, i32, %struct.SkRect*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_128SkDisplacementMapImageFilterD0Ev(%"class.(anonymous namespace)::SkDisplacementMapImageFilter"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::SkDisplacementMapImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %2) #13
  %3 = bitcast %"class.(anonymous namespace)::SkDisplacementMapImageFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #13
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal nonnull void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZNK12_GLOBAL__N_128SkDisplacementMapImageFilter10getFactoryEv(%"class.(anonymous namespace)::SkDisplacementMapImageFilter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZN12_GLOBAL__N_128SkDisplacementMapImageFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_128SkDisplacementMapImageFilter11getTypeNameEv(%"class.(anonymous namespace)::SkDisplacementMapImageFilter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_128SkDisplacementMapImageFilter7flattenER13SkWriteBuffer(%"class.(anonymous namespace)::SkDisplacementMapImageFilter"*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.(anonymous namespace)::SkDisplacementMapImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base* %3, %class.SkWriteBuffer* dereferenceable(56) %1) #13
  %4 = getelementptr inbounds %"class.(anonymous namespace)::SkDisplacementMapImageFilter", %"class.(anonymous namespace)::SkDisplacementMapImageFilter"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %7 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %7, i64 7
  %9 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %8, align 8
  tail call void %9(%class.SkWriteBuffer* %1, i32 %5) #13
  %10 = getelementptr inbounds %"class.(anonymous namespace)::SkDisplacementMapImageFilter", %"class.(anonymous namespace)::SkDisplacementMapImageFilter"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %6, align 8
  %13 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %12, i64 7
  %14 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %13, align 8
  tail call void %14(%class.SkWriteBuffer* %1, i32 %11) #13
  %15 = getelementptr inbounds %"class.(anonymous namespace)::SkDisplacementMapImageFilter", %"class.(anonymous namespace)::SkDisplacementMapImageFilter"* %0, i64 0, i32 3
  %16 = load float, float* %15, align 4
  %17 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %18 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %18, i64 5
  %20 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %19, align 8
  tail call void %20(%class.SkWriteBuffer* %1, float %16) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkImageFilter18getFlattenableTypeEv(%class.SkImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define internal { <2 x float>, <2 x float> } @_ZNK12_GLOBAL__N_128SkDisplacementMapImageFilter17computeFastBoundsERK6SkRect(%"class.(anonymous namespace)::SkDisplacementMapImageFilter"*, %struct.SkRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.(anonymous namespace)::SkDisplacementMapImageFilter"* %0 to %class.SkImageFilter*
  %4 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %3, i32 1) #13
  %5 = icmp eq %class.SkImageFilter* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %3, i32 1) #13
  %8 = bitcast %class.SkImageFilter* %7 to { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)***
  %9 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)**, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*** %8, align 8
  %10 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %9, i64 7
  %11 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %10, align 8
  %12 = tail call { <2 x float>, <2 x float> } %11(%class.SkImageFilter* %7, %struct.SkRect* dereferenceable(16) %1) #13
  %13 = extractvalue { <2 x float>, <2 x float> } %12, 0
  %14 = extractvalue { <2 x float>, <2 x float> } %12, 1
  br label %21

15:                                               ; preds = %2
  %16 = bitcast %struct.SkRect* %1 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 4
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %19 = bitcast float* %18 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  br label %21

21:                                               ; preds = %15, %6
  %22 = phi <2 x float> [ %20, %15 ], [ %14, %6 ]
  %23 = phi <2 x float> [ %17, %15 ], [ %13, %6 ]
  %24 = getelementptr inbounds %"class.(anonymous namespace)::SkDisplacementMapImageFilter", %"class.(anonymous namespace)::SkDisplacementMapImageFilter"* %0, i64 0, i32 3
  %25 = load float, float* %24, align 4
  %26 = tail call float @llvm.fabs.f32(float %25)
  %27 = fmul float %26, 5.000000e-01
  %28 = insertelement <2 x float> undef, float %27, i32 0
  %29 = shufflevector <2 x float> %28, <2 x float> undef, <2 x i32> zeroinitializer
  %30 = fsub <2 x float> %23, %29
  %31 = fadd <2 x float> %22, %29
  %32 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %30, 0
  %33 = insertvalue { <2 x float>, <2 x float> } %32, <2 x float> %31, 1
  ret { <2 x float>, <2 x float> } %33
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_128SkDisplacementMapImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint(%class.sk_sp.18* noalias sret, %"class.(anonymous namespace)::SkDisplacementMapImageFilter"*, %"class.skif::Context"* dereferenceable(136), %struct.SkIPoint* nocapture) unnamed_addr #7 align 2 {
  %5 = alloca %class.GrSurfaceProxyView, align 8
  %6 = alloca %class.SkMatrix, align 16
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca %class.SkMatrix, align 16
  %9 = alloca %class.SkMatrix, align 16
  %10 = alloca %class.GrSurfaceProxyView, align 8
  %11 = alloca %class.sk_sp.14, align 8
  %12 = alloca %class.SkMatrix, align 16
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = alloca { <2 x float>, <2 x float> }, align 8
  %15 = alloca %"class.skif::FilterResult", align 8
  %16 = alloca %"class.skif::FilterResult", align 8
  %17 = alloca i64, align 8
  %18 = bitcast i64* %17 to %struct.SkIPoint*
  %19 = alloca %"class.skif::Context", align 8
  %20 = alloca { i64, i64 }, align 8
  %21 = bitcast { i64, i64 }* %20 to %struct.SkIRect*
  %22 = alloca %struct.SkIRect, align 4
  %23 = alloca %struct.SkIRect, align 4
  %24 = alloca %class.sk_sp.18, align 8
  %25 = alloca <2 x float>, align 8
  %26 = bitcast <2 x float>* %25 to %struct.SkPoint*
  %27 = alloca %class.GrSurfaceProxyView, align 8
  %28 = alloca %class.GrSurfaceProxyView, align 8
  %29 = alloca %class.SkMatrix, align 16
  %30 = alloca %class.GrImageInfo, align 8
  %31 = alloca %class.GrImageInfo, align 8
  %32 = alloca { i64, i64 }, align 8
  %33 = bitcast { i64, i64 }* %32 to %struct.SkIRect*
  %34 = alloca { i64, i64 }, align 8
  %35 = bitcast { i64, i64 }* %34 to %struct.SkIRect*
  %36 = alloca %class.GrSurfaceProxyView, align 8
  %37 = alloca %class.sk_sp.14, align 8
  %38 = alloca %class.SkBitmap, align 8
  %39 = alloca %class.SkBitmap, align 8
  %40 = alloca %struct.SkImageInfo, align 8
  %41 = alloca %class.SkBitmap, align 8
  %42 = alloca { i64, i64 }, align 8
  %43 = bitcast { i64, i64 }* %42 to %struct.SkIRect*
  %44 = bitcast %"class.(anonymous namespace)::SkDisplacementMapImageFilter"* %1 to %class.SkImageFilter_Base*
  %45 = bitcast %"class.skif::FilterResult"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #13, !noalias !12
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %16, %class.SkImageFilter_Base* %44, i32 1, %"class.skif::Context"* dereferenceable(136) %2) #13, !noalias !12
  %46 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %16, i64 0, i32 0, i32 0
  %47 = load %class.SkSpecialImage*, %class.SkSpecialImage** %46, align 8, !noalias !15
  %48 = icmp eq %class.SkSpecialImage* %47, null
  br i1 %48, label %66, label %49

49:                                               ; preds = %4
  %50 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %16, i64 0, i32 1, i32 0
  %51 = bitcast %struct.SkIPoint* %50 to i64*
  %52 = load i64, i64* %51, align 8, !noalias !15
  %53 = trunc i64 %52 to i32
  %54 = lshr i64 %52, 32
  %55 = trunc i64 %54 to i32
  %56 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %47, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 1 monotonic, !noalias !15
  %58 = atomicrmw add i32* %56, i32 -1 acq_rel, !noalias !12
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %68

60:                                               ; preds = %49
  %61 = bitcast %class.SkSpecialImage* %47 to %class.SkRefCntBase*
  %62 = bitcast %class.SkSpecialImage* %47 to void (%class.SkRefCntBase*)***
  %63 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %62, align 8, !noalias !12
  %64 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, i64 2
  %65 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, align 8, !noalias !12
  call void %65(%class.SkRefCntBase* nonnull %61) #13, !noalias !12
  br label %68

66:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #13, !noalias !12
  %67 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %67, align 8
  br label %948

68:                                               ; preds = %60, %49
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #13, !noalias !12
  %69 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #13
  store i64 0, i64* %17, align 8
  %70 = bitcast %"class.skif::Context"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %70) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* align 8 bitcast ({ %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, [4 x i8], %class.SkColorSpace*, %"class.skif::FilterResult" }* @__const._ZNK12_GLOBAL__N_128SkDisplacementMapImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.displContext to i8*), i64 136, i1 false)
  %71 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 1
  %72 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 2
  %73 = bitcast %class.SkImageFilterCache** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.skif::Context"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* align 4 %75, i64 80, i1 false) #13
  %76 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %19, i64 0, i32 1
  %77 = bitcast %"class.skif::LayerSpace"* %76 to i8*
  %78 = bitcast %"class.skif::LayerSpace"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 4 %78, i64 16, i1 false) #13
  %79 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %19, i64 0, i32 2
  %80 = bitcast %class.SkImageFilterCache** %79 to i64*
  store i64 %74, i64* %80, align 8
  %81 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %19, i64 0, i32 3
  store i32 6, i32* %81, align 8
  %82 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %19, i64 0, i32 4
  store %class.SkColorSpace* null, %class.SkColorSpace** %82, align 8
  %83 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %19, i64 0, i32 5, i32 0, i32 0
  %84 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %85 = load %class.SkSpecialImage*, %class.SkSpecialImage** %84, align 8
  %86 = icmp eq %class.SkSpecialImage* %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %68
  %88 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %85, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 1 monotonic
  br label %90

90:                                               ; preds = %68, %87
  store %class.SkSpecialImage* %85, %class.SkSpecialImage** %83, align 8
  %91 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %19, i64 0, i32 5, i32 1
  %92 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 1
  %93 = bitcast %"class.skif::LayerSpace.19"* %92 to i64*
  %94 = bitcast %"class.skif::LayerSpace.19"* %91 to i64*
  %95 = load i64, i64* %93, align 8
  store i64 %95, i64* %94, align 8
  %96 = bitcast %"class.skif::FilterResult"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #13, !noalias !18
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %15, %class.SkImageFilter_Base* %44, i32 0, %"class.skif::Context"* nonnull dereferenceable(136) %19) #13, !noalias !18
  %97 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %15, i64 0, i32 0, i32 0
  %98 = load %class.SkSpecialImage*, %class.SkSpecialImage** %97, align 8, !noalias !21
  %99 = icmp eq %class.SkSpecialImage* %98, null
  br i1 %99, label %100, label %104

100:                                              ; preds = %90
  %101 = bitcast i64* %17 to i32*
  store i32 0, i32* %101, align 8, !noalias !21
  %102 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %18, i64 0, i32 1
  store i32 0, i32* %102, align 4, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #13, !noalias !18
  %103 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %103, align 8
  br label %926

104:                                              ; preds = %90
  %105 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %15, i64 0, i32 1, i32 0
  %106 = bitcast %struct.SkIPoint* %105 to i64*
  %107 = load i64, i64* %106, align 8, !noalias !21
  store i64 %107, i64* %17, align 8, !noalias !21
  %108 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %98, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = atomicrmw add i32* %108, i32 1 monotonic, !noalias !21
  %110 = ptrtoint %class.SkSpecialImage* %98 to i64
  %111 = atomicrmw add i32* %108, i32 -1 acq_rel, !noalias !18
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %119

113:                                              ; preds = %104
  %114 = bitcast %class.SkSpecialImage* %98 to %class.SkRefCntBase*
  %115 = bitcast %class.SkSpecialImage* %98 to void (%class.SkRefCntBase*)***
  %116 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %115, align 8, !noalias !18
  %117 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %116, i64 2
  %118 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %117, align 8, !noalias !18
  call void %118(%class.SkRefCntBase* nonnull %114) #13, !noalias !18
  br label %119

119:                                              ; preds = %104, %113
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #13, !noalias !18
  %120 = bitcast { i64, i64 }* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %120) #13
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i64 0, i32 1
  %122 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %47, i64 0, i32 2, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %47, i64 0, i32 2, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = sub i32 %123, %125
  %127 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %47, i64 0, i32 2, i32 3
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %47, i64 0, i32 2, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = sub i32 %128, %130
  %132 = shl i64 %52, 32
  %133 = ashr exact i64 %132, 32
  %134 = sext i32 %126 to i64
  %135 = add nsw i64 %133, %134
  %136 = icmp slt i64 %135, 2147483647
  %137 = select i1 %136, i64 %135, i64 2147483647
  %138 = icmp sgt i64 %137, -2147483647
  %139 = select i1 %138, i64 %137, i64 -2147483647
  %140 = ashr i64 %52, 32
  %141 = sext i32 %131 to i64
  %142 = add nsw i64 %140, %141
  %143 = icmp slt i64 %142, 2147483647
  %144 = select i1 %143, i64 %142, i64 2147483647
  %145 = icmp sgt i64 %144, -2147483647
  %146 = select i1 %145, i64 %144, i64 -2147483647
  %147 = shl nsw i64 %146, 32
  %148 = and i64 %139, 4294967295
  %149 = or i64 %147, %148
  %150 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i64 0, i32 0
  store i64 %52, i64* %150, align 8
  store i64 %149, i64* %121, align 8
  %151 = bitcast %struct.SkIRect* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %151) #13
  %152 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %22, i64 0, i32 0
  %153 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %22, i64 0, i32 1
  %154 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %22, i64 0, i32 2
  %155 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %22, i64 0, i32 3
  %156 = bitcast %struct.SkIRect* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %156, i8 -86, i64 16, i1 false)
  %157 = call zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base* %44, %"class.skif::Context"* dereferenceable(136) %2, %struct.SkIRect* nonnull dereferenceable(16) %21, %struct.SkIRect* nonnull %22) #13
  br i1 %157, label %160, label %158

158:                                              ; preds = %119
  %159 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %159, align 8
  br label %912

160:                                              ; preds = %119
  %161 = bitcast %struct.SkIRect* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %161) #13
  %162 = bitcast %class.sk_sp.18* %24 to i8*
  %163 = bitcast %struct.SkIRect* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %163, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #13
  call void @_ZNK18SkImageFilter_Base19applyCropRectAndPadERKN4skif7ContextEP14SkSpecialImageP8SkIPointP7SkIRect(%class.sk_sp.18* nonnull sret %24, %class.SkImageFilter_Base* %44, %"class.skif::Context"* dereferenceable(136) %2, %class.SkSpecialImage* nonnull %98, %struct.SkIPoint* nonnull %18, %struct.SkIRect* nonnull %23) #13
  %164 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %24, i64 0, i32 0
  %165 = bitcast %class.sk_sp.18* %24 to i64*
  %166 = load i64, i64* %165, align 8
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %164, align 8
  %167 = atomicrmw add i32* %108, i32 -1 acq_rel
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %169, label %175

169:                                              ; preds = %160
  %170 = bitcast %class.SkSpecialImage* %98 to %class.SkRefCntBase*
  %171 = bitcast %class.SkSpecialImage* %98 to void (%class.SkRefCntBase*)***
  %172 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %171, align 8
  %173 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %172, i64 2
  %174 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %173, align 8
  call void %174(%class.SkRefCntBase* nonnull %170) #13
  br label %175

175:                                              ; preds = %160, %169
  %176 = load %class.SkSpecialImage*, %class.SkSpecialImage** %164, align 8
  %177 = icmp eq %class.SkSpecialImage* %176, null
  br i1 %177, label %188, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %176, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = atomicrmw add i32* %179, i32 -1 acq_rel
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %188

182:                                              ; preds = %178
  %183 = bitcast %class.SkSpecialImage* %176 to %class.SkRefCntBase*
  %184 = bitcast %class.SkSpecialImage* %176 to void (%class.SkRefCntBase*)***
  %185 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %184, align 8
  %186 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %185, i64 2
  %187 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %186, align 8
  call void %187(%class.SkRefCntBase* nonnull %183) #13
  br label %188

188:                                              ; preds = %175, %178, %182
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #13
  %189 = inttoptr i64 %166 to %class.SkSpecialImage*
  %190 = icmp eq i64 %166, 0
  br i1 %190, label %191, label %193

191:                                              ; preds = %188
  %192 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %192, align 8
  br label %911

193:                                              ; preds = %188
  %194 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %22, %struct.SkIRect* nonnull dereferenceable(16) %22, %struct.SkIRect* nonnull dereferenceable(16) %23) #13
  br i1 %194, label %197, label %195

195:                                              ; preds = %193
  %196 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %196, align 8
  br label %911

197:                                              ; preds = %193
  %198 = and i64 %52, -4294967296
  %199 = sub i64 0, %198
  %200 = load i32, i32* %152, align 4
  %201 = sext i32 %200 to i64
  %202 = sub i64 0, %132
  %203 = ashr exact i64 %202, 32
  %204 = add nsw i64 %203, %201
  %205 = icmp slt i64 %204, 2147483647
  %206 = select i1 %205, i64 %204, i64 2147483647
  %207 = icmp sgt i64 %206, -2147483647
  %208 = select i1 %207, i64 %206, i64 -2147483647
  %209 = load i32, i32* %153, align 4
  %210 = sext i32 %209 to i64
  %211 = ashr exact i64 %199, 32
  %212 = add nsw i64 %211, %210
  %213 = icmp slt i64 %212, 2147483647
  %214 = select i1 %213, i64 %212, i64 2147483647
  %215 = icmp sgt i64 %214, -2147483647
  %216 = select i1 %215, i64 %214, i64 -2147483647
  %217 = load i32, i32* %154, align 4
  %218 = sext i32 %217 to i64
  %219 = add nsw i64 %203, %218
  %220 = icmp slt i64 %219, 2147483647
  %221 = select i1 %220, i64 %219, i64 2147483647
  %222 = icmp sgt i64 %221, -2147483647
  %223 = select i1 %222, i64 %221, i64 -2147483647
  %224 = load i32, i32* %155, align 4
  %225 = sext i32 %224 to i64
  %226 = add nsw i64 %211, %225
  %227 = icmp slt i64 %226, 2147483647
  %228 = select i1 %227, i64 %226, i64 2147483647
  %229 = icmp sgt i64 %228, -2147483647
  %230 = select i1 %229, i64 %228, i64 -2147483647
  %231 = trunc i64 %208 to i32
  %232 = trunc i64 %216 to i32
  %233 = trunc i64 %223 to i32
  %234 = sub nsw i64 %223, %208
  %235 = trunc i64 %230 to i32
  %236 = sub i32 %235, %232
  %237 = zext i32 %236 to i64
  %238 = shl nuw i64 %237, 32
  %239 = trunc i64 %234 to i32
  %240 = sub i32 %217, %200
  %241 = sub i32 %224, %209
  %242 = icmp ne i32 %240, %239
  %243 = icmp ne i32 %236, %241
  %244 = or i1 %242, %243
  br i1 %244, label %245, label %247

245:                                              ; preds = %197
  %246 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %246, align 8
  br label %911

247:                                              ; preds = %197
  %248 = bitcast <2 x float>* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %248) #13
  %249 = getelementptr inbounds <2 x float>, <2 x float>* %25, i64 0, i64 0
  %250 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 0, i32 1
  %251 = getelementptr inbounds %"class.(anonymous namespace)::SkDisplacementMapImageFilter", %"class.(anonymous namespace)::SkDisplacementMapImageFilter"* %1, i64 0, i32 3
  %252 = load float, float* %251, align 4
  %253 = insertelement <2 x float> undef, float %252, i32 0
  %254 = shufflevector <2 x float> %253, <2 x float> undef, <2 x i32> zeroinitializer
  store <2 x float> %254, <2 x float>* %25, align 8
  %255 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %255, %struct.SkPoint* nonnull %26, %struct.SkPoint* nonnull %26, i32 1) #13
  %256 = load %class.SkSpecialImage*, %class.SkSpecialImage** %84, align 8
  %257 = call zeroext i1 @_ZNK14SkSpecialImage15isTextureBackedEv(%class.SkSpecialImage* %256) #13
  br i1 %257, label %258, label %677

258:                                              ; preds = %247
  %259 = load %class.SkSpecialImage*, %class.SkSpecialImage** %84, align 8
  %260 = call %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage* %259) #13
  %261 = bitcast %class.GrSurfaceProxyView* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %261) #13
  %262 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %27, i64 0, i32 0, i32 0
  %263 = bitcast %class.GrSurfaceProxyView* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %263, i8 -86, i64 16, i1 false)
  call void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* nonnull sret %27, %class.SkSpecialImage* nonnull %47, %class.GrRecordingContext* %260) #13
  %264 = bitcast %class.GrSurfaceProxyView* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %264) #13
  %265 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %28, i64 0, i32 0, i32 0
  %266 = bitcast %class.GrSurfaceProxyView* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %266, i8 -86, i64 16, i1 false)
  call void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* nonnull sret %28, %class.SkSpecialImage* nonnull %189, %class.GrRecordingContext* %260) #13
  %267 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %262, align 8
  %268 = icmp eq %class.GrSurfaceProxy* %267, null
  %269 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %265, align 8
  %270 = icmp eq %class.GrSurfaceProxy* %269, null
  %271 = or i1 %268, %270
  br i1 %271, label %272, label %274

272:                                              ; preds = %258
  %273 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %273, align 8
  br label %646

274:                                              ; preds = %258
  %275 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %28, i64 0, i32 2, i32 0
  %276 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %28, i64 0, i32 1
  %277 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %27, i64 0, i32 2, i32 0
  %278 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %27, i64 0, i32 1
  %279 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %267, i64 0, i32 15
  %280 = load i8, i8* %279, align 1, !range !2
  %281 = icmp ne i8 %280, 0
  %282 = bitcast %class.SkMatrix* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %282) #13
  %283 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %29, i64 0, i32 1
  %284 = bitcast i64* %17 to i32*
  %285 = load i32, i32* %284, align 8
  %286 = sub nsw i32 %53, %285
  %287 = sitofp i32 %286 to float
  %288 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %18, i64 0, i32 1
  %289 = load i32, i32* %288, align 4
  %290 = sub nsw i32 %55, %289
  %291 = sitofp i32 %290 to float
  %292 = bitcast %class.SkMatrix* %29 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %292, align 16, !alias.scope !24
  %293 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %29, i64 0, i32 0, i64 4
  %294 = bitcast float* %293 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %294, align 16, !alias.scope !24
  %295 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %29, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %295, align 16, !alias.scope !24
  store i32 16, i32* %283, align 4, !alias.scope !24
  %296 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %29, float %287, float %291) #13
  %297 = getelementptr inbounds %"class.(anonymous namespace)::SkDisplacementMapImageFilter", %"class.(anonymous namespace)::SkDisplacementMapImageFilter"* %1, i64 0, i32 1
  %298 = load i32, i32* %297, align 4
  %299 = getelementptr inbounds %"class.(anonymous namespace)::SkDisplacementMapImageFilter", %"class.(anonymous namespace)::SkDisplacementMapImageFilter"* %1, i64 0, i32 2
  %300 = load i32, i32* %299, align 8
  %301 = bitcast <2 x float>* %25 to i64*
  %302 = load i64, i64* %301, align 8
  %303 = bitcast %class.GrSurfaceProxyView* %28 to i64*
  %304 = load i64, i64* %303, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %265, align 8
  %305 = load i32, i32* %276, align 8
  %306 = load i16, i16* %275, align 4
  %307 = bitcast %class.GrSurfaceProxyView* %27 to i64*
  %308 = load i64, i64* %307, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %262, align 8
  %309 = load i32, i32* %278, align 8
  %310 = load i16, i16* %277, align 4
  %311 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %260, i64 0, i32 0, i32 0
  %312 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %311) #13
  %313 = bitcast %class.GrSurfaceProxyView* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %313)
  %314 = bitcast %class.GrSurfaceProxyView* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %314)
  %315 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %316 = bitcast %class.GrSurfaceProxyView* %5 to i64*
  store i64 %308, i64* %316, align 8
  %317 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %5, i64 0, i32 1
  store i32 %309, i32* %317, align 8
  %318 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %5, i64 0, i32 2, i32 0
  store i16 %310, i16* %318, align 4
  %319 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %319) #13
  %320 = load i32, i32* %124, align 4
  %321 = load i32, i32* %129, align 4
  %322 = sitofp i32 %320 to float
  %323 = sitofp i32 %321 to float
  %324 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %325 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %325, align 16, !alias.scope !27
  %326 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %327 = bitcast float* %326 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %327, align 16, !alias.scope !27
  %328 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %328, align 16, !alias.scope !27
  store i32 16, i32* %324, align 4, !alias.scope !27
  %329 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %6, float %322, float %323) #13
  %330 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %330) #13
  %331 = load i32, i32* %124, align 4
  %332 = sitofp i32 %331 to float
  %333 = insertelement <2 x float> undef, float %332, i32 0
  %334 = load i32, i32* %129, align 4
  %335 = sitofp i32 %334 to float
  %336 = insertelement <2 x float> %333, float %335, i32 1
  %337 = load i32, i32* %122, align 4
  %338 = sitofp i32 %337 to float
  %339 = insertelement <2 x float> undef, float %338, i32 0
  %340 = load i32, i32* %127, align 4
  %341 = sitofp i32 %340 to float
  %342 = insertelement <2 x float> %339, float %341, i32 1
  %343 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %336, <2 x float>* %343, align 8
  %344 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %342, <2 x float>* %344, align 8
  %345 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectRK6GrCapsPKfb(%class.GrSurfaceProxyView* nonnull %5, i32 2, %class.SkMatrix* nonnull dereferenceable(40) %6, i64 771, i32 0, %struct.SkRect* nonnull dereferenceable(16) %315, %class.GrCaps* dereferenceable(232) %312, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZN15GrTextureEffect14kDefaultBorderE, i64 0, i64 0), i1 zeroext false) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %330) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %319) #13
  %346 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %5, i64 0, i32 0, i32 0
  %347 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %346, align 8
  %348 = icmp eq %class.GrSurfaceProxy* %347, null
  br i1 %348, label %361, label %349

349:                                              ; preds = %274
  %350 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %347, i64 0, i32 1
  %351 = getelementptr inbounds %class.SkNVRefCnt.92, %class.SkNVRefCnt.92* %350, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = atomicrmw add i32* %351, i32 -1 acq_rel
  %353 = icmp eq i32 %352, 1
  br i1 %353, label %354, label %361

354:                                              ; preds = %349
  %355 = getelementptr inbounds %class.SkNVRefCnt.92, %class.SkNVRefCnt.92* %350, i64 -2
  %356 = bitcast %class.SkNVRefCnt.92* %355 to %class.GrSurfaceProxy*
  %357 = bitcast %class.SkNVRefCnt.92* %355 to void (%class.GrSurfaceProxy*)***
  %358 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %357, align 8
  %359 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %358, i64 1
  %360 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %359, align 8
  call void %360(%class.GrSurfaceProxy* nonnull %356) #13
  br label %361

361:                                              ; preds = %354, %349, %274
  %362 = bitcast %class.SkMatrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %362) #13
  %363 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 1
  %364 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %364) #13
  %365 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %189, i64 0, i32 2, i32 0
  %366 = load i32, i32* %365, align 4
  %367 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %189, i64 0, i32 2, i32 1
  %368 = load i32, i32* %367, align 4
  %369 = sitofp i32 %366 to float
  %370 = sitofp i32 %368 to float
  %371 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 1
  %372 = bitcast %class.SkMatrix* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %372, align 16, !alias.scope !32
  %373 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 4
  %374 = bitcast float* %373 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %374, align 16, !alias.scope !32
  %375 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %375, align 16, !alias.scope !32
  store i32 16, i32* %371, align 4, !alias.scope !32
  %376 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %9, float %369, float %370) #13
  %377 = bitcast %class.SkMatrix* %8 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %377, align 16, !alias.scope !37
  %378 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 4
  %379 = bitcast float* %378 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %379, align 16, !alias.scope !37
  %380 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %380, align 16, !alias.scope !37
  store i32 16, i32* %363, align 4, !alias.scope !37
  %381 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %8, %class.SkMatrix* nonnull dereferenceable(40) %9, %class.SkMatrix* nonnull dereferenceable(40) %29) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %364) #13
  %382 = bitcast %class.GrSurfaceProxyView* %10 to i64*
  store i64 %304, i64* %382, align 8
  %383 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 1
  store i32 %305, i32* %383, align 8
  %384 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 2, i32 0
  store i16 %306, i16* %384, align 4
  %385 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView* nonnull %10, i32 2, %class.SkMatrix* nonnull dereferenceable(40) %8, i32 0, i32 0) #13
  %386 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 0, i32 0
  %387 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %386, align 8
  %388 = icmp eq %class.GrSurfaceProxy* %387, null
  br i1 %388, label %401, label %389

389:                                              ; preds = %361
  %390 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %387, i64 0, i32 1
  %391 = getelementptr inbounds %class.SkNVRefCnt.92, %class.SkNVRefCnt.92* %390, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %392 = atomicrmw add i32* %391, i32 -1 acq_rel
  %393 = icmp eq i32 %392, 1
  br i1 %393, label %394, label %401

394:                                              ; preds = %389
  %395 = getelementptr inbounds %class.SkNVRefCnt.92, %class.SkNVRefCnt.92* %390, i64 -2
  %396 = bitcast %class.SkNVRefCnt.92* %395 to %class.GrSurfaceProxy*
  %397 = bitcast %class.SkNVRefCnt.92* %395 to void (%class.GrSurfaceProxy*)***
  %398 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %397, align 8
  %399 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %398, i64 1
  %400 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %399, align 8
  call void %400(%class.GrSurfaceProxy* nonnull %396) #13
  br label %401

401:                                              ; preds = %361, %389, %394
  %402 = call i8* @_ZN11GrProcessornwEm(i64 80) #13
  %403 = bitcast i8* %402 to %class.GrFragmentProcessor*
  %404 = bitcast i8* %402 to i32 (...)***
  %405 = getelementptr inbounds i8, i8* %402, i64 8
  %406 = bitcast i8* %405 to i32*
  store i32 39, i32* %406, align 8
  %407 = getelementptr inbounds i8, i8* %402, i64 12
  %408 = bitcast i8* %407 to i32*
  store i32 0, i32* %408, align 4
  %409 = getelementptr inbounds i8, i8* %402, i64 24
  %410 = getelementptr inbounds i8, i8* %402, i64 16
  %411 = getelementptr inbounds i8, i8* %402, i64 32
  %412 = bitcast i8* %411 to i64*
  %413 = bitcast i8* %409 to i8**
  store i8* %410, i8** %413, align 8
  store i64 8589934592, i64* %412, align 8
  %414 = getelementptr inbounds i8, i8* %402, i64 40
  %415 = getelementptr inbounds i8, i8* %402, i64 48
  %416 = bitcast i8* %415 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %414, i8 0, i64 17, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_123GrDisplacementMapEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %404, align 8
  %417 = getelementptr inbounds i8, i8* %402, i64 60
  %418 = bitcast i8* %417 to i32*
  store i32 %298, i32* %418, align 4
  %419 = getelementptr inbounds i8, i8* %402, i64 64
  %420 = bitcast i8* %419 to i32*
  store i32 %300, i32* %420, align 8
  %421 = getelementptr inbounds i8, i8* %402, i64 68
  %422 = bitcast i8* %421 to i64*
  store i64 %302, i64* %422, align 4
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %403, %class.GrFragmentProcessor* %385, i64 1) #13
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %403, %class.GrFragmentProcessor* %345, i64 3) #13
  %423 = load i32, i32* %416, align 8
  %424 = or i32 %423, 16
  store i32 %424, i32* %416, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %362) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %313)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %314)
  %425 = call %class.SkColorSpace* @_ZNK14SkSpecialImage13getColorSpaceEv(%class.SkSpecialImage* nonnull %47) #13
  %426 = bitcast %class.SkSpecialImage* %47 to i32 (%class.SkSpecialImage*)***
  %427 = load i32 (%class.SkSpecialImage*)**, i32 (%class.SkSpecialImage*)*** %426, align 8
  %428 = getelementptr inbounds i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %427, i64 3
  %429 = load i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %428, align 8
  %430 = call i32 %429(%class.SkSpecialImage* nonnull %47) #13
  %431 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %432 = load %class.SkColorSpace*, %class.SkColorSpace** %431, align 8
  %433 = call %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP12SkColorSpace11SkAlphaTypeS7_S8_(%class.GrFragmentProcessor* %403, %class.SkColorSpace* %425, i32 %430, %class.SkColorSpace* %432, i32 2) #13
  %434 = bitcast %class.GrImageInfo* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %434) #13
  %435 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %30, i64 0, i32 0, i32 0, i32 0
  %436 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %30, i64 0, i32 0, i32 1, i32 0
  %437 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %438 = bitcast %class.GrImageInfo* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %438, i8 -86, i64 32, i1 false)
  %439 = load i32, i32* %437, align 8
  %440 = icmp ult i32 %439, 21
  br i1 %440, label %442, label %441

441:                                              ; preds = %401
  call void @llvm.trap() #13
  unreachable

442:                                              ; preds = %401
  %443 = sext i32 %439 to i64
  %444 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZNK12_GLOBAL__N_128SkDisplacementMapImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint, i64 0, i64 %443
  %445 = load i32, i32* %444, align 4
  %446 = load %class.SkColorSpace*, %class.SkColorSpace** %431, align 8, !noalias !40
  %447 = icmp eq %class.SkColorSpace* %446, null
  br i1 %447, label %451, label %448

448:                                              ; preds = %442
  %449 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %446, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %450 = atomicrmw add i32* %449, i32 1 monotonic, !noalias !43
  br label %451

451:                                              ; preds = %442, %448
  %452 = ptrtoint %class.SkColorSpace* %446 to i64
  %453 = load i32, i32* %154, align 4
  %454 = load i32, i32* %152, align 4
  %455 = sub i32 %453, %454
  %456 = load i32, i32* %155, align 4
  %457 = load i32, i32* %153, align 4
  %458 = sub i32 %456, %457
  %459 = zext i32 %458 to i64
  %460 = shl nuw i64 %459, 32
  %461 = zext i32 %455 to i64
  %462 = or i64 %460, %461
  %463 = bitcast %class.sk_sp.14* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %463)
  %464 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %30, i64 0, i32 0
  %465 = bitcast %class.sk_sp.14* %11 to i64*
  store i64 %452, i64* %465, align 8
  call void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo* nonnull %464, i32 %445, i32 2, %class.sk_sp.14* nonnull %11) #13
  %466 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %11, i64 0, i32 0
  %467 = load %class.SkColorSpace*, %class.SkColorSpace** %466, align 8
  %468 = icmp eq %class.SkColorSpace* %467, null
  br i1 %468, label %475, label %469

469:                                              ; preds = %451
  %470 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %467, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %471 = atomicrmw add i32* %470, i32 -1 acq_rel
  %472 = icmp eq i32 %471, 1
  br i1 %472, label %473, label %475

473:                                              ; preds = %469
  %474 = bitcast %class.SkColorSpace* %467 to i8*
  call void @_ZdlPv(i8* %474) #15
  br label %475

475:                                              ; preds = %473, %469, %451
  %476 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %30, i64 0, i32 1
  %477 = bitcast %struct.SkISize* %476 to i64*
  store i64 %462, i64* %477, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %463)
  %478 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %31, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* nonnull %478, %class.GrColorInfo* nonnull dereferenceable(24) %464) #13
  %479 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %31, i64 0, i32 1
  %480 = bitcast %struct.SkISize* %479 to i64*
  %481 = load i64, i64* %477, align 8
  store i64 %481, i64* %480, align 8
  %482 = call %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext* %260, %class.GrImageInfo* nonnull %31, i32 0, i32 1, i1 zeroext false, i1 zeroext %281, i32 1, i1 zeroext true) #13
  %483 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %31, i64 0, i32 0, i32 1, i32 0
  %484 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %483, align 8
  %485 = icmp eq %class.GrColorSpaceXform* %484, null
  br i1 %485, label %496, label %486

486:                                              ; preds = %475
  %487 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %484, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %488 = atomicrmw add i32* %487, i32 -1 acq_rel
  %489 = icmp eq i32 %488, 1
  br i1 %489, label %490, label %496

490:                                              ; preds = %486
  %491 = bitcast %class.GrColorSpaceXform* %484 to %class.SkRefCntBase*
  %492 = bitcast %class.GrColorSpaceXform* %484 to void (%class.SkRefCntBase*)***
  %493 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %492, align 8
  %494 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %493, i64 2
  %495 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %494, align 8
  call void %495(%class.SkRefCntBase* nonnull %491) #13
  br label %496

496:                                              ; preds = %490, %486, %475
  %497 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %31, i64 0, i32 0, i32 0, i32 0
  %498 = load %class.SkColorSpace*, %class.SkColorSpace** %497, align 8
  %499 = icmp eq %class.SkColorSpace* %498, null
  br i1 %499, label %506, label %500

500:                                              ; preds = %496
  %501 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %498, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %502 = atomicrmw add i32* %501, i32 -1 acq_rel
  %503 = icmp eq i32 %502, 1
  br i1 %503, label %504, label %506

504:                                              ; preds = %500
  %505 = bitcast %class.SkColorSpace* %498 to i8*
  call void @_ZdlPv(i8* %505) #15
  br label %506

506:                                              ; preds = %496, %500, %504
  %507 = icmp eq %class.GrSurfaceFillContext* %482, null
  br i1 %507, label %508, label %510

508:                                              ; preds = %506
  %509 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %509, align 8
  br label %614

510:                                              ; preds = %506
  %511 = bitcast { i64, i64 }* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %511) #13
  %512 = and i64 %234, 4294967295
  %513 = or i64 %238, %512
  %514 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %32, i64 0, i32 0
  store i64 0, i64* %514, align 8
  %515 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %32, i64 0, i32 1
  store i64 %513, i64* %515, align 8
  %516 = bitcast { <2 x float>, <2 x float> }* %14 to %struct.SkRect*
  %517 = bitcast { <2 x float>, <2 x float> }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %517) #13
  %518 = sitofp i32 %231 to float
  %519 = insertelement <2 x float> undef, float %518, i32 0
  %520 = sitofp i32 %232 to float
  %521 = insertelement <2 x float> %519, float %520, i32 1
  %522 = sitofp i32 %233 to float
  %523 = insertelement <2 x float> undef, float %522, i32 0
  %524 = sitofp i32 %235 to float
  %525 = insertelement <2 x float> %523, float %524, i32 1
  %526 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 0
  store <2 x float> %521, <2 x float>* %526, align 8
  %527 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 1
  store <2 x float> %525, <2 x float>* %527, align 8
  %528 = bitcast { <2 x float>, <2 x float> }* %13 to %struct.SkRect*
  %529 = bitcast %class.SkMatrix* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %529) #13
  %530 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 1
  %531 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %531) #13
  %532 = trunc i64 %234 to i32
  %533 = sitofp i32 %532 to float
  %534 = insertelement <2 x float> undef, float %533, i32 0
  %535 = sitofp i32 %236 to float
  %536 = insertelement <2 x float> %534, float %535, i32 1
  %537 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %537, align 8
  %538 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  store <2 x float> %536, <2 x float>* %538, align 8
  %539 = bitcast %class.SkMatrix* %12 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %539, align 16, !alias.scope !46
  %540 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 4
  %541 = bitcast float* %540 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %541, align 16, !alias.scope !46
  %542 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %542, align 16, !alias.scope !46
  store i32 16, i32* %530, align 4, !alias.scope !46
  %543 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %12, %struct.SkRect* nonnull dereferenceable(16) %528, %struct.SkRect* nonnull dereferenceable(16) %516, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %531) #13
  %544 = call %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* nonnull dereferenceable(40) %12, %class.GrFragmentProcessor* %433) #13
  call void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext* nonnull %482, %struct.SkIRect* nonnull dereferenceable(16) %33, %class.GrFragmentProcessor* %544) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %529) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %517) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %511) #13
  %545 = load i32, i32* %152, align 4
  %546 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %545, i32* %546, align 4
  %547 = load i32, i32* %153, align 4
  %548 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %547, i32* %548, align 4
  %549 = bitcast { i64, i64 }* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %549) #13
  %550 = load i32, i32* %154, align 4
  %551 = sub i32 %550, %545
  %552 = load i32, i32* %155, align 4
  %553 = sub i32 %552, %547
  %554 = zext i32 %553 to i64
  %555 = shl nuw i64 %554, 32
  %556 = zext i32 %551 to i64
  %557 = or i64 %555, %556
  %558 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i64 0, i32 0
  store i64 0, i64* %558, align 8
  %559 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i64 0, i32 1
  store i64 %557, i64* %559, align 8
  %560 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %36, i64 0, i32 0, i32 0
  %561 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %482, i64 0, i32 0, i32 2, i32 0, i32 0
  %562 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %561, align 8, !noalias !51
  %563 = icmp eq %class.GrSurfaceProxy* %562, null
  br i1 %563, label %567, label %564

564:                                              ; preds = %510
  %565 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %562, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %566 = atomicrmw add i32* %565, i32 1 monotonic, !noalias !51
  br label %567

567:                                              ; preds = %510, %564
  store %class.GrSurfaceProxy* %562, %class.GrSurfaceProxy** %560, align 8, !alias.scope !51
  %568 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %36, i64 0, i32 1
  %569 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %482, i64 0, i32 0, i32 2, i32 1
  %570 = load i32, i32* %569, align 8, !noalias !51
  store i32 %570, i32* %568, align 8, !alias.scope !51
  %571 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %36, i64 0, i32 2, i32 0
  %572 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %482, i64 0, i32 0, i32 2, i32 2, i32 0
  %573 = load i16, i16* %572, align 2, !noalias !51
  store i16 %573, i16* %571, align 4, !alias.scope !51
  %574 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %482, i64 0, i32 0, i32 3, i32 2
  %575 = load i32, i32* %574, align 8
  %576 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %37, i64 0, i32 0
  %577 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %482, i64 0, i32 0, i32 3, i32 0, i32 0
  %578 = load %class.SkColorSpace*, %class.SkColorSpace** %577, align 8, !noalias !54
  %579 = icmp eq %class.SkColorSpace* %578, null
  br i1 %579, label %583, label %580

580:                                              ; preds = %567
  %581 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %578, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %582 = atomicrmw add i32* %581, i32 1 monotonic, !noalias !54
  br label %583

583:                                              ; preds = %567, %580
  store %class.SkColorSpace* %578, %class.SkColorSpace** %576, align 8, !alias.scope !54
  %584 = load %class.SkSpecialImage*, %class.SkSpecialImage** %84, align 8
  %585 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %584, i64 0, i32 1
  call void @_ZN14SkSpecialImage19MakeDeferredFromGpuEP18GrRecordingContextRK7SkIRectj18GrSurfaceProxyView11GrColorType5sk_spI12SkColorSpaceERK14SkSurfaceProps11SkAlphaType(%class.sk_sp.18* sret %0, %class.GrRecordingContext* %260, %struct.SkIRect* nonnull dereferenceable(16) %35, i32 0, %class.GrSurfaceProxyView* nonnull %36, i32 %575, %class.sk_sp.14* nonnull %37, %class.SkSurfaceProps* dereferenceable(8) %585, i32 2) #13
  %586 = load %class.SkColorSpace*, %class.SkColorSpace** %576, align 8
  %587 = icmp eq %class.SkColorSpace* %586, null
  br i1 %587, label %594, label %588

588:                                              ; preds = %583
  %589 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %586, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %590 = atomicrmw add i32* %589, i32 -1 acq_rel
  %591 = icmp eq i32 %590, 1
  br i1 %591, label %592, label %594

592:                                              ; preds = %588
  %593 = bitcast %class.SkColorSpace* %586 to i8*
  call void @_ZdlPv(i8* %593) #15
  br label %594

594:                                              ; preds = %583, %588, %592
  %595 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %560, align 8
  %596 = icmp eq %class.GrSurfaceProxy* %595, null
  br i1 %596, label %609, label %597

597:                                              ; preds = %594
  %598 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %595, i64 0, i32 1
  %599 = getelementptr inbounds %class.SkNVRefCnt.92, %class.SkNVRefCnt.92* %598, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %600 = atomicrmw add i32* %599, i32 -1 acq_rel
  %601 = icmp eq i32 %600, 1
  br i1 %601, label %602, label %609

602:                                              ; preds = %597
  %603 = getelementptr inbounds %class.SkNVRefCnt.92, %class.SkNVRefCnt.92* %598, i64 -2
  %604 = bitcast %class.SkNVRefCnt.92* %603 to %class.GrSurfaceProxy*
  %605 = bitcast %class.SkNVRefCnt.92* %603 to void (%class.GrSurfaceProxy*)***
  %606 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %605, align 8
  %607 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %606, i64 1
  %608 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %607, align 8
  call void %608(%class.GrSurfaceProxy* nonnull %604) #13
  br label %609

609:                                              ; preds = %594, %597, %602
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %549) #13
  %610 = bitcast %class.GrSurfaceFillContext* %482 to void (%class.GrSurfaceFillContext*)***
  %611 = load void (%class.GrSurfaceFillContext*)**, void (%class.GrSurfaceFillContext*)*** %610, align 8
  %612 = getelementptr inbounds void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %611, i64 1
  %613 = load void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %612, align 8
  call void %613(%class.GrSurfaceFillContext* nonnull %482) #13
  br label %614

614:                                              ; preds = %508, %609
  %615 = phi %class.GrFragmentProcessor* [ %433, %508 ], [ null, %609 ]
  %616 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %436, align 8
  %617 = icmp eq %class.GrColorSpaceXform* %616, null
  br i1 %617, label %628, label %618

618:                                              ; preds = %614
  %619 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %616, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %620 = atomicrmw add i32* %619, i32 -1 acq_rel
  %621 = icmp eq i32 %620, 1
  br i1 %621, label %622, label %628

622:                                              ; preds = %618
  %623 = bitcast %class.GrColorSpaceXform* %616 to %class.SkRefCntBase*
  %624 = bitcast %class.GrColorSpaceXform* %616 to void (%class.SkRefCntBase*)***
  %625 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %624, align 8
  %626 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %625, i64 2
  %627 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %626, align 8
  call void %627(%class.SkRefCntBase* nonnull %623) #13
  br label %628

628:                                              ; preds = %622, %618, %614
  %629 = load %class.SkColorSpace*, %class.SkColorSpace** %435, align 8
  %630 = icmp eq %class.SkColorSpace* %629, null
  br i1 %630, label %637, label %631

631:                                              ; preds = %628
  %632 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %629, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %633 = atomicrmw add i32* %632, i32 -1 acq_rel
  %634 = icmp eq i32 %633, 1
  br i1 %634, label %635, label %637

635:                                              ; preds = %631
  %636 = bitcast %class.SkColorSpace* %629 to i8*
  call void @_ZdlPv(i8* %636) #15
  br label %637

637:                                              ; preds = %628, %631, %635
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %434) #13
  %638 = icmp eq %class.GrFragmentProcessor* %615, null
  br i1 %638, label %644, label %639

639:                                              ; preds = %637
  %640 = bitcast %class.GrFragmentProcessor* %615 to void (%class.GrFragmentProcessor*)***
  %641 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %640, align 8
  %642 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %641, i64 1
  %643 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %642, align 8
  call void %643(%class.GrFragmentProcessor* nonnull %615) #13
  br label %644

644:                                              ; preds = %637, %639
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %282) #13
  %645 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %265, align 8
  br label %646

646:                                              ; preds = %644, %272
  %647 = phi %class.GrSurfaceProxy* [ %645, %644 ], [ %269, %272 ]
  %648 = icmp eq %class.GrSurfaceProxy* %647, null
  br i1 %648, label %661, label %649

649:                                              ; preds = %646
  %650 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %647, i64 0, i32 1
  %651 = getelementptr inbounds %class.SkNVRefCnt.92, %class.SkNVRefCnt.92* %650, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %652 = atomicrmw add i32* %651, i32 -1 acq_rel
  %653 = icmp eq i32 %652, 1
  br i1 %653, label %654, label %661

654:                                              ; preds = %649
  %655 = getelementptr inbounds %class.SkNVRefCnt.92, %class.SkNVRefCnt.92* %650, i64 -2
  %656 = bitcast %class.SkNVRefCnt.92* %655 to %class.GrSurfaceProxy*
  %657 = bitcast %class.SkNVRefCnt.92* %655 to void (%class.GrSurfaceProxy*)***
  %658 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %657, align 8
  %659 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %658, i64 1
  %660 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %659, align 8
  call void %660(%class.GrSurfaceProxy* nonnull %656) #13
  br label %661

661:                                              ; preds = %646, %649, %654
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %264) #13
  %662 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %262, align 8
  %663 = icmp eq %class.GrSurfaceProxy* %662, null
  br i1 %663, label %676, label %664

664:                                              ; preds = %661
  %665 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %662, i64 0, i32 1
  %666 = getelementptr inbounds %class.SkNVRefCnt.92, %class.SkNVRefCnt.92* %665, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %667 = atomicrmw add i32* %666, i32 -1 acq_rel
  %668 = icmp eq i32 %667, 1
  br i1 %668, label %669, label %676

669:                                              ; preds = %664
  %670 = getelementptr inbounds %class.SkNVRefCnt.92, %class.SkNVRefCnt.92* %665, i64 -2
  %671 = bitcast %class.SkNVRefCnt.92* %670 to %class.GrSurfaceProxy*
  %672 = bitcast %class.SkNVRefCnt.92* %670 to void (%class.GrSurfaceProxy*)***
  %673 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %672, align 8
  %674 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %673, i64 1
  %675 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %674, align 8
  call void %675(%class.GrSurfaceProxy* nonnull %671) #13
  br label %676

676:                                              ; preds = %661, %664, %669
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %261) #13
  br label %910

677:                                              ; preds = %247
  %678 = bitcast %class.SkBitmap* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %678) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %678, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %38) #13
  %679 = bitcast %class.SkBitmap* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %679) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %679, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %39) #13
  %680 = call zeroext i1 @_ZNK14SkSpecialImage11getROPixelsEP8SkBitmap(%class.SkSpecialImage* nonnull %47, %class.SkBitmap* nonnull %38) #13
  br i1 %680, label %681, label %683

681:                                              ; preds = %677
  %682 = call zeroext i1 @_ZNK14SkSpecialImage11getROPixelsEP8SkBitmap(%class.SkSpecialImage* nonnull %189, %class.SkBitmap* nonnull %39) #13
  br i1 %682, label %685, label %683

683:                                              ; preds = %681, %677
  %684 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %684, align 8
  br label %909

685:                                              ; preds = %681
  %686 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %38, i64 0, i32 1, i32 2, i32 0, i32 1
  %687 = load i32, i32* %686, align 8
  %688 = icmp eq i32 %687, 6
  br i1 %688, label %689, label %693

689:                                              ; preds = %685
  %690 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %39, i64 0, i32 1, i32 2, i32 0, i32 1
  %691 = load i32, i32* %690, align 8
  %692 = icmp eq i32 %691, 6
  br i1 %692, label %695, label %693

693:                                              ; preds = %689, %685
  %694 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %694, align 8
  br label %909

695:                                              ; preds = %689
  %696 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %38, i64 0, i32 1, i32 0
  %697 = load i8*, i8** %696, align 8
  %698 = icmp eq i8* %697, null
  br i1 %698, label %703, label %699

699:                                              ; preds = %695
  %700 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %39, i64 0, i32 1, i32 0
  %701 = load i8*, i8** %700, align 8
  %702 = icmp eq i8* %701, null
  br i1 %702, label %703, label %705

703:                                              ; preds = %699, %695
  %704 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %704, align 8
  br label %909

705:                                              ; preds = %699
  %706 = bitcast %struct.SkImageInfo* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %706) #13
  %707 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %40, i64 0, i32 0, i32 0, i32 0
  %708 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %40, i64 0, i32 0, i32 1
  %709 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %40, i64 0, i32 1, i32 0
  %710 = load i32, i32* %154, align 4
  %711 = load i32, i32* %152, align 4
  %712 = sub i32 %710, %711
  %713 = load i32, i32* %155, align 4
  %714 = load i32, i32* %153, align 4
  %715 = sub i32 %713, %714
  %716 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %38, i64 0, i32 1, i32 2, i32 0, i32 2
  %717 = load i32, i32* %716, align 4
  %718 = zext i32 %715 to i64
  %719 = shl nuw i64 %718, 32
  %720 = zext i32 %712 to i64
  %721 = or i64 %719, %720
  %722 = zext i32 %717 to i64
  %723 = shl nuw i64 %722, 32
  %724 = or i64 %723, 6
  %725 = bitcast %struct.SkImageInfo* %40 to i64*
  store i64 0, i64* %725, align 8, !alias.scope !57
  %726 = bitcast i32* %708 to i64*
  store i64 %724, i64* %726, align 8, !alias.scope !57
  %727 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %40, i64 0, i32 1
  %728 = bitcast %struct.SkISize* %727 to i64*
  store i64 %721, i64* %728, align 8, !alias.scope !57
  %729 = bitcast %class.SkBitmap* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %729) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %729, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %41) #13
  %730 = load i32, i32* %709, align 8
  %731 = sext i32 %730 to i64
  %732 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %40, i64 0, i32 0
  %733 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %732) #13
  %734 = sext i32 %733 to i64
  %735 = mul nsw i64 %734, %731
  %736 = icmp ult i64 %735, 2147483648
  %737 = select i1 %736, i64 %735, i64 0
  %738 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %41, %struct.SkImageInfo* nonnull dereferenceable(24) %40, i64 %737) #13
  br i1 %738, label %741, label %739

739:                                              ; preds = %705
  %740 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %740, align 8
  br label %899

741:                                              ; preds = %705
  %742 = getelementptr inbounds %"class.(anonymous namespace)::SkDisplacementMapImageFilter", %"class.(anonymous namespace)::SkDisplacementMapImageFilter"* %1, i64 0, i32 1
  %743 = load i32, i32* %742, align 4
  %744 = getelementptr inbounds %"class.(anonymous namespace)::SkDisplacementMapImageFilter", %"class.(anonymous namespace)::SkDisplacementMapImageFilter"* %1, i64 0, i32 2
  %745 = load i32, i32* %744, align 8
  %746 = sext i32 %743 to i64
  %747 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZN12_GLOBAL__N_119gChannelTypeToShiftE, i64 0, i64 %746
  %748 = load i8, i8* %747, align 1
  %749 = sext i32 %745 to i64
  %750 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZN12_GLOBAL__N_119gChannelTypeToShiftE, i64 0, i64 %749
  %751 = load i8, i8* %750, align 1
  %752 = bitcast i64* %17 to i32*
  %753 = load i32, i32* %752, align 8
  %754 = sext i32 %753 to i64
  %755 = sub nsw i64 %133, %754
  %756 = icmp slt i64 %755, 2147483647
  %757 = select i1 %756, i64 %755, i64 2147483647
  %758 = icmp sgt i64 %757, -2147483647
  %759 = select i1 %758, i64 %757, i64 -2147483647
  %760 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %18, i64 0, i32 1
  %761 = load i32, i32* %760, align 4
  %762 = sext i32 %761 to i64
  %763 = sub nsw i64 %140, %762
  %764 = icmp slt i64 %763, 2147483647
  %765 = select i1 %764, i64 %763, i64 2147483647
  %766 = icmp sgt i64 %765, -2147483647
  %767 = select i1 %766, i64 %765, i64 -2147483647
  %768 = trunc i64 %759 to i32
  %769 = zext i8 %748 to i32
  %770 = zext i8 %751 to i32
  %771 = load atomic i8, i8* bitcast (i64* @_ZGVZL20compute_displacementN12_GLOBAL__N_19ExtractorERK7SkPointP8SkBitmapRKS4_RK8SkIPointS7_RK7SkIRectE7Inv8bit to i8*) acquire, align 8
  %772 = icmp eq i8 %771, 0
  br i1 %772, label %773, label %778, !prof !62

773:                                              ; preds = %741
  %774 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20compute_displacementN12_GLOBAL__N_19ExtractorERK7SkPointP8SkBitmapRKS4_RK8SkIPointS7_RK7SkIRectE7Inv8bit) #13
  %775 = icmp eq i32 %774, 0
  br i1 %775, label %778, label %776

776:                                              ; preds = %773
  store float 0x3F70101020000000, float* @_ZZL20compute_displacementN12_GLOBAL__N_19ExtractorERK7SkPointP8SkBitmapRKS4_RK8SkIPointS7_RK7SkIRectE7Inv8bit, align 4
  %777 = call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (float* @_ZZL20compute_displacementN12_GLOBAL__N_19ExtractorERK7SkPointP8SkBitmapRKS4_RK8SkIPointS7_RK7SkIRectE7Inv8bit to i8*)) #13
  call void @__cxa_guard_release(i64* nonnull @_ZGVZL20compute_displacementN12_GLOBAL__N_19ExtractorERK7SkPointP8SkBitmapRKS4_RK8SkIPointS7_RK7SkIRectE7Inv8bit) #13
  br label %778

778:                                              ; preds = %776, %773, %741
  %779 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %38, i64 0, i32 1, i32 2, i32 1, i32 0
  %780 = load i32, i32* %779, align 8
  %781 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %38, i64 0, i32 1, i32 2, i32 1, i32 1
  %782 = load i32, i32* %781, align 4
  %783 = load float, float* %249, align 8
  %784 = load float, float* @_ZZL20compute_displacementN12_GLOBAL__N_19ExtractorERK7SkPointP8SkBitmapRKS4_RK8SkIPointS7_RK7SkIRectE7Inv8bit, align 4
  %785 = fmul float %783, %784
  %786 = load float, float* %250, align 4
  %787 = fmul float %784, %786
  %788 = fmul float %783, 5.000000e-01
  %789 = fsub float 5.000000e-01, %788
  %790 = fmul float %786, 5.000000e-01
  %791 = fsub float 5.000000e-01, %790
  %792 = icmp sgt i32 %235, %232
  br i1 %792, label %793, label %881

793:                                              ; preds = %778
  %794 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %41, i64 0, i32 1, i32 0
  %795 = bitcast i8** %794 to i32**
  %796 = load i32*, i32** %795, align 8
  %797 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %39, i64 0, i32 1, i32 1
  %798 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %38, i64 0, i32 1, i32 1
  %799 = icmp slt i32 %231, %233
  %800 = add nsw i32 %768, %231
  %801 = shl i32 %800, 2
  %802 = sext i32 %801 to i64
  br label %803

803:                                              ; preds = %814, %793
  %804 = phi i64 [ %216, %793 ], [ %816, %814 ]
  %805 = phi i32* [ %796, %793 ], [ %815, %814 ]
  br i1 %799, label %806, label %814

806:                                              ; preds = %803
  %807 = load i8*, i8** %700, align 8
  %808 = load i64, i64* %797, align 8
  %809 = add nsw i64 %804, %767
  %810 = mul i64 %808, %809
  %811 = getelementptr inbounds i8, i8* %807, i64 %802
  %812 = getelementptr inbounds i8, i8* %811, i64 %810
  %813 = bitcast i8* %812 to i32*
  br label %818

814:                                              ; preds = %875, %803
  %815 = phi i32* [ %805, %803 ], [ %877, %875 ]
  %816 = add nsw i64 %804, 1
  %817 = icmp slt i64 %816, %230
  br i1 %817, label %803, label %881

818:                                              ; preds = %875, %806
  %819 = phi i64 [ %208, %806 ], [ %878, %875 ]
  %820 = phi i32* [ %813, %806 ], [ %879, %875 ]
  %821 = phi i32* [ %805, %806 ], [ %877, %875 ]
  %822 = load i32, i32* %820, align 4
  %823 = call i32 @_ZN15SkUnPreMultiply14PMColorToColorEj(i32 %822) #13
  %824 = lshr i32 %823, %769
  %825 = and i32 %824, 255
  %826 = uitofp i32 %825 to float
  %827 = fmul float %785, %826
  %828 = fadd float %789, %827
  %829 = lshr i32 %823, %770
  %830 = and i32 %829, 255
  %831 = uitofp i32 %830 to float
  %832 = fmul float %787, %831
  %833 = fadd float %791, %832
  %834 = fcmp olt float %828, 0x41DFFFFFE0000000
  %835 = select i1 %834, float %828, float 0x41DFFFFFE0000000
  %836 = fcmp ogt float %835, 0xC1DFFFFFE0000000
  %837 = select i1 %836, float %835, float 0xC1DFFFFFE0000000
  %838 = fptosi float %837 to i32
  %839 = sext i32 %838 to i64
  %840 = add nsw i64 %819, %839
  %841 = icmp slt i64 %840, 2147483647
  %842 = select i1 %841, i64 %840, i64 2147483647
  %843 = icmp sgt i64 %842, -2147483647
  %844 = select i1 %843, i64 %842, i64 -2147483647
  %845 = trunc i64 %844 to i32
  %846 = fcmp olt float %833, 0x41DFFFFFE0000000
  %847 = select i1 %846, float %833, float 0x41DFFFFFE0000000
  %848 = fcmp ogt float %847, 0xC1DFFFFFE0000000
  %849 = select i1 %848, float %847, float 0xC1DFFFFFE0000000
  %850 = fptosi float %849 to i32
  %851 = sext i32 %850 to i64
  %852 = add nsw i64 %804, %851
  %853 = icmp slt i64 %852, 2147483647
  %854 = select i1 %853, i64 %852, i64 2147483647
  %855 = icmp sgt i64 %854, -2147483647
  %856 = select i1 %855, i64 %854, i64 -2147483647
  %857 = trunc i64 %856 to i32
  %858 = icmp slt i32 %845, 0
  br i1 %858, label %875, label %859

859:                                              ; preds = %818
  %860 = icmp sgt i32 %780, %845
  %861 = icmp sgt i32 %857, -1
  %862 = and i1 %861, %860
  %863 = icmp sgt i32 %782, %857
  %864 = and i1 %863, %862
  br i1 %864, label %865, label %875

865:                                              ; preds = %859
  %866 = load i8*, i8** %696, align 8
  %867 = load i64, i64* %798, align 8
  %868 = mul i64 %867, %856
  %869 = getelementptr inbounds i8, i8* %866, i64 %868
  %870 = shl i32 %845, 2
  %871 = sext i32 %870 to i64
  %872 = getelementptr inbounds i8, i8* %869, i64 %871
  %873 = bitcast i8* %872 to i32*
  %874 = load i32, i32* %873, align 4
  br label %875

875:                                              ; preds = %865, %859, %818
  %876 = phi i32 [ %874, %865 ], [ 0, %859 ], [ 0, %818 ]
  %877 = getelementptr inbounds i32, i32* %821, i64 1
  store i32 %876, i32* %821, align 4
  %878 = add nsw i64 %819, 1
  %879 = getelementptr inbounds i32, i32* %820, i64 1
  %880 = icmp slt i64 %878, %223
  br i1 %880, label %818, label %814

881:                                              ; preds = %814, %778
  %882 = load i32, i32* %152, align 4
  %883 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %882, i32* %883, align 4
  %884 = load i32, i32* %153, align 4
  %885 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %884, i32* %885, align 4
  %886 = bitcast { i64, i64 }* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %886) #13
  %887 = load i32, i32* %154, align 4
  %888 = sub i32 %887, %882
  %889 = load i32, i32* %155, align 4
  %890 = sub i32 %889, %884
  %891 = zext i32 %890 to i64
  %892 = shl nuw i64 %891, 32
  %893 = zext i32 %888 to i64
  %894 = or i64 %892, %893
  %895 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %42, i64 0, i32 0
  store i64 0, i64* %895, align 8
  %896 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %42, i64 0, i32 1
  store i64 %894, i64* %896, align 8
  %897 = load %class.SkSpecialImage*, %class.SkSpecialImage** %84, align 8
  %898 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %897, i64 0, i32 1
  call void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.18* sret %0, %struct.SkIRect* nonnull dereferenceable(16) %43, %class.SkBitmap* nonnull dereferenceable(56) %41, %class.SkSurfaceProps* dereferenceable(8) %898) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %886) #13
  br label %899

899:                                              ; preds = %881, %739
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %41) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %729) #13
  %900 = load %class.SkColorSpace*, %class.SkColorSpace** %707, align 8
  %901 = icmp eq %class.SkColorSpace* %900, null
  br i1 %901, label %908, label %902

902:                                              ; preds = %899
  %903 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %900, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %904 = atomicrmw add i32* %903, i32 -1 acq_rel
  %905 = icmp eq i32 %904, 1
  br i1 %905, label %906, label %908

906:                                              ; preds = %902
  %907 = bitcast %class.SkColorSpace* %900 to i8*
  call void @_ZdlPv(i8* %907) #15
  br label %908

908:                                              ; preds = %899, %902, %906
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %706) #13
  br label %909

909:                                              ; preds = %908, %703, %693, %683
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %679) #13
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %38) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %678) #13
  br label %910

910:                                              ; preds = %909, %676
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248) #13
  br label %911

911:                                              ; preds = %245, %910, %195, %191
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %161) #13
  br label %912

912:                                              ; preds = %158, %911
  %913 = phi i64 [ %166, %911 ], [ %110, %158 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %151) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %120) #13
  %914 = icmp eq i64 %913, 0
  br i1 %914, label %926, label %915

915:                                              ; preds = %912
  %916 = inttoptr i64 %913 to %class.SkSpecialImage*
  %917 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %916, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %918 = atomicrmw add i32* %917, i32 -1 acq_rel
  %919 = icmp eq i32 %918, 1
  br i1 %919, label %920, label %926

920:                                              ; preds = %915
  %921 = inttoptr i64 %913 to %class.SkRefCntBase*
  %922 = inttoptr i64 %913 to void (%class.SkRefCntBase*)***
  %923 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %922, align 8
  %924 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %923, i64 2
  %925 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %924, align 8
  call void %925(%class.SkRefCntBase* nonnull %921) #13
  br label %926

926:                                              ; preds = %100, %912, %915, %920
  %927 = load %class.SkSpecialImage*, %class.SkSpecialImage** %83, align 8
  %928 = icmp eq %class.SkSpecialImage* %927, null
  br i1 %928, label %939, label %929

929:                                              ; preds = %926
  %930 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %927, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %931 = atomicrmw add i32* %930, i32 -1 acq_rel
  %932 = icmp eq i32 %931, 1
  br i1 %932, label %933, label %939

933:                                              ; preds = %929
  %934 = bitcast %class.SkSpecialImage* %927 to %class.SkRefCntBase*
  %935 = bitcast %class.SkSpecialImage* %927 to void (%class.SkRefCntBase*)***
  %936 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %935, align 8
  %937 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %936, i64 2
  %938 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %937, align 8
  call void %938(%class.SkRefCntBase* nonnull %934) #13
  br label %939

939:                                              ; preds = %933, %929, %926
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %70) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #13
  %940 = atomicrmw add i32* %56, i32 -1 acq_rel
  %941 = icmp eq i32 %940, 1
  br i1 %941, label %942, label %948

942:                                              ; preds = %939
  %943 = bitcast %class.SkSpecialImage* %47 to %class.SkRefCntBase*
  %944 = bitcast %class.SkSpecialImage* %47 to void (%class.SkRefCntBase*)***
  %945 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %944, align 8
  %946 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %945, i64 2
  %947 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %946, align 8
  call void %947(%class.SkRefCntBase* nonnull %943) #13
  br label %948

948:                                              ; preds = %66, %939, %942
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal { i64, i64 } @_ZNK12_GLOBAL__N_128SkDisplacementMapImageFilter14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_(%"class.(anonymous namespace)::SkDisplacementMapImageFilter"*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #0 align 2 {
  %6 = icmp eq i32 %3, 1
  br i1 %6, label %7, label %12

7:                                                ; preds = %5
  %8 = bitcast %"class.(anonymous namespace)::SkDisplacementMapImageFilter"* %0 to %class.SkImageFilter_Base*
  %9 = tail call { i64, i64 } @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base* %8, %struct.SkIRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 1, %struct.SkIRect* %4) #13
  %10 = extractvalue { i64, i64 } %9, 0
  %11 = extractvalue { i64, i64 } %9, 1
  br label %27

12:                                               ; preds = %5
  %13 = bitcast %"class.(anonymous namespace)::SkDisplacementMapImageFilter"* %0 to %class.SkImageFilter*
  %14 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %13, i32 1) #13
  %15 = icmp eq %class.SkImageFilter* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %13, i32 1) #13
  %18 = tail call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* %17, %struct.SkIRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 %3, %struct.SkIRect* %4) #13
  %19 = extractvalue { i64, i64 } %18, 0
  %20 = extractvalue { i64, i64 } %18, 1
  br label %27

21:                                               ; preds = %12
  %22 = bitcast %struct.SkIRect* %1 to i64*
  %23 = load i64, i64* %22, align 4
  %24 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %25 = bitcast i32* %24 to i64*
  %26 = load i64, i64* %25, align 4
  br label %27

27:                                               ; preds = %21, %16, %7
  %28 = phi i64 [ %10, %7 ], [ %19, %16 ], [ %23, %21 ]
  %29 = phi i64 [ %11, %7 ], [ %20, %16 ], [ %26, %21 ]
  %30 = insertvalue { i64, i64 } undef, i64 %28, 0
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1
  ret { i64, i64 } %31
}

; Function Attrs: nounwind ssp uwtable
define internal { i64, i64 } @_ZNK12_GLOBAL__N_128SkDisplacementMapImageFilter18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_(%"class.(anonymous namespace)::SkDisplacementMapImageFilter"* nocapture readonly, %struct.SkIRect* nocapture readonly dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect* nocapture readnone) unnamed_addr #7 align 2 {
  %6 = alloca <2 x float>, align 8
  %7 = bitcast <2 x float>* %6 to %struct.SkPoint*
  %8 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  %9 = getelementptr inbounds <2 x float>, <2 x float>* %6, i64 0, i64 0
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 0, i32 1
  %11 = getelementptr inbounds %"class.(anonymous namespace)::SkDisplacementMapImageFilter", %"class.(anonymous namespace)::SkDisplacementMapImageFilter"* %0, i64 0, i32 3
  %12 = load float, float* %11, align 4
  %13 = insertelement <2 x float> undef, float %12, i32 0
  %14 = shufflevector <2 x float> %13, <2 x float> undef, <2 x i32> zeroinitializer
  store <2 x float> %14, <2 x float>* %6, align 8
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %2, %struct.SkPoint* nonnull %7, %struct.SkPoint* nonnull %7, i32 1) #13
  %15 = load float, float* %9, align 8
  %16 = call float @llvm.fabs.f32(float %15)
  %17 = fmul float %16, 5.000000e-01
  %18 = call float @llvm.ceil.f32(float %17)
  %19 = fcmp olt float %18, 0x41DFFFFFE0000000
  %20 = select i1 %19, float %18, float 0x41DFFFFFE0000000
  %21 = fcmp ogt float %20, 0xC1DFFFFFE0000000
  %22 = select i1 %21, float %20, float 0xC1DFFFFFE0000000
  %23 = fptosi float %22 to i32
  %24 = load float, float* %10, align 4
  %25 = call float @llvm.fabs.f32(float %24)
  %26 = fmul float %25, 5.000000e-01
  %27 = call float @llvm.ceil.f32(float %26)
  %28 = fcmp olt float %27, 0x41DFFFFFE0000000
  %29 = select i1 %28, float %27, float 0x41DFFFFFE0000000
  %30 = fcmp ogt float %29, 0xC1DFFFFFE0000000
  %31 = select i1 %30, float %29, float 0xC1DFFFFFE0000000
  %32 = fptosi float %31 to i32
  %33 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = sext i32 %23 to i64
  %37 = sub nsw i64 %35, %36
  %38 = icmp slt i64 %37, 2147483647
  %39 = select i1 %38, i64 %37, i64 2147483647
  %40 = icmp sgt i64 %39, -2147483647
  %41 = select i1 %40, i64 %39, i64 -2147483647
  %42 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = sext i32 %43 to i64
  %45 = sext i32 %32 to i64
  %46 = sub nsw i64 %44, %45
  %47 = icmp slt i64 %46, 2147483647
  %48 = select i1 %47, i64 %46, i64 2147483647
  %49 = icmp sgt i64 %48, -2147483647
  %50 = select i1 %49, i64 %48, i64 -2147483647
  %51 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  %54 = add nsw i64 %36, %53
  %55 = icmp slt i64 %54, 2147483647
  %56 = select i1 %55, i64 %54, i64 2147483647
  %57 = icmp sgt i64 %56, -2147483647
  %58 = select i1 %57, i64 %56, i64 -2147483647
  %59 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %60 to i64
  %62 = add nsw i64 %45, %61
  %63 = icmp slt i64 %62, 2147483647
  %64 = select i1 %63, i64 %62, i64 2147483647
  %65 = icmp sgt i64 %64, -2147483647
  %66 = select i1 %65, i64 %64, i64 -2147483647
  %67 = shl nsw i64 %50, 32
  %68 = and i64 %41, 4294967295
  %69 = or i64 %67, %68
  %70 = insertvalue { i64, i64 } undef, i64 %69, 0
  %71 = shl nsw i64 %66, 32
  %72 = and i64 %58, 4294967295
  %73 = or i64 %71, %72
  %74 = insertvalue { i64, i64 } %70, i64 %73, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  ret { i64, i64 } %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter_Base*, %class.SkColorFilter**) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE() unnamed_addr

declare { i64, i64 } @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16), %"class.skif::LayerSpace"* dereferenceable(16), i1 zeroext) unnamed_addr #3

declare { i64, i64 } @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #9

declare %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136), %struct.SkIRect* dereferenceable(16), %struct.SkIRect*) local_unnamed_addr #3

declare void @_ZNK18SkImageFilter_Base19applyCropRectAndPadERKN4skif7ContextEP14SkSpecialImageP8SkIPointP7SkIRect(%class.sk_sp.18* sret, %class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136), %class.SkSpecialImage*, %struct.SkIPoint*, %struct.SkIRect*) local_unnamed_addr #3

declare void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* sret, %class.SkSpecialImage*, %class.GrRecordingContext*) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP12SkColorSpace11SkAlphaTypeS7_S8_(%class.GrFragmentProcessor*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) local_unnamed_addr #3

declare %class.SkColorSpace* @_ZNK14SkSpecialImage13getColorSpaceEv(%class.SkSpecialImage*) local_unnamed_addr #3

declare %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext*, %class.GrImageInfo*, i32, i32, i1 zeroext, i1 zeroext, i32, i1 zeroext) local_unnamed_addr #3

declare void @_ZN14SkSpecialImage19MakeDeferredFromGpuEP18GrRecordingContextRK7SkIRectj18GrSurfaceProxyView11GrColorType5sk_spI12SkColorSpaceERK14SkSurfaceProps11SkAlphaType(%class.sk_sp.18* sret, %class.GrRecordingContext*, %struct.SkIRect* dereferenceable(16), i32, %class.GrSurfaceProxyView*, i32, %class.sk_sp.14*, %class.SkSurfaceProps* dereferenceable(8), i32) local_unnamed_addr #3

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #3

declare zeroext i1 @_ZNK14SkSpecialImage11getROPixelsEP8SkBitmap(%class.SkSpecialImage*, %class.SkBitmap*) local_unnamed_addr #3

declare void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.18* sret, %struct.SkIRect* dereferenceable(16), %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #4

declare void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* sret, %class.SkImageFilter_Base*, i32, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #3

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK14SkSpecialImage15isTextureBackedEv(%class.SkSpecialImage*) local_unnamed_addr #3

declare %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage*) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectRK6GrCapsPKfb(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i64, i32, %struct.SkRect* dereferenceable(16), %class.GrCaps* dereferenceable(232), float*, i1 zeroext) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i32, i32) local_unnamed_addr #3

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

declare void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_123GrDisplacementMapEffectD0Ev(%"class.(anonymous namespace)::GrDisplacementMapEffect"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect", %"class.(anonymous namespace)::GrDisplacementMapEffect"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect", %"class.(anonymous namespace)::GrDisplacementMapEffect"* %0, i64 0, i32 0, i32 1, i32 1
  %4 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect", %"class.(anonymous namespace)::GrDisplacementMapEffect"* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.160, %class.SkTArray.160* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.155"*, %"class.std::__1::unique_ptr.155"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %17, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrFragmentProcessor* %18 to void (%class.GrFragmentProcessor*)***
  %22 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrFragmentProcessor* nonnull %18) #13
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.160* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #13
  br label %34

34:                                               ; preds = %10, %31
  %35 = bitcast %"class.(anonymous namespace)::GrDisplacementMapEffect"* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %35) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_123GrDisplacementMapEffect4nameEv(%"class.(anonymous namespace)::GrDisplacementMapEffect"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal %class.GrFragmentProcessor* @_ZNK12_GLOBAL__N_123GrDisplacementMapEffect5cloneEv(%"class.(anonymous namespace)::GrDisplacementMapEffect"*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN11GrProcessornwEm(i64 80) #13
  %3 = bitcast i8* %2 to %class.GrFragmentProcessor*
  %4 = bitcast %"class.(anonymous namespace)::GrDisplacementMapEffect"* %0 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect", %"class.(anonymous namespace)::GrDisplacementMapEffect"* %0, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = bitcast i8* %2 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 39, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 24
  %14 = getelementptr inbounds i8, i8* %2, i64 16
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = bitcast i8* %15 to i64*
  %17 = bitcast i8* %13 to i8**
  store i8* %14, i8** %17, align 8
  store i64 8589934592, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %2, i64 40
  %19 = bitcast i8* %18 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %19, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 48
  %21 = bitcast i8* %20 to i32*
  store i32 %7, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 52
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %2, i64 56
  store i8 0, i8* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_123GrDisplacementMapEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %25 = getelementptr inbounds i8, i8* %2, i64 60
  %26 = bitcast i8* %25 to i32*
  %27 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect", %"class.(anonymous namespace)::GrDisplacementMapEffect"* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %26, align 4
  %29 = getelementptr inbounds i8, i8* %2, i64 64
  %30 = bitcast i8* %29 to i32*
  %31 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect", %"class.(anonymous namespace)::GrDisplacementMapEffect"* %0, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  store i32 %32, i32* %30, align 8
  %33 = getelementptr inbounds i8, i8* %2, i64 68
  %34 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect", %"class.(anonymous namespace)::GrDisplacementMapEffect"* %0, i64 0, i32 3
  %35 = bitcast %struct.SkPoint* %34 to i64*
  %36 = bitcast i8* %33 to i64*
  %37 = load i64, i64* %35, align 4
  store i64 %37, i64* %36, align 4
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #13
  %38 = load i32, i32* %21, align 8
  %39 = or i32 %38, 16
  store i32 %39, i32* %21, align 8
  ret %class.GrFragmentProcessor* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.4, i64 0, i64 0), i32 397, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define internal %class.GrGLSLFragmentProcessor* @_ZNK12_GLOBAL__N_123GrDisplacementMapEffect17onMakeProgramImplEv(%"class.(anonymous namespace)::GrDisplacementMapEffect"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 48) #15
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  %5 = bitcast i8* %4 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2, i8 0, i64 48, i1 false) #13
  store i64 1, i64* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 32
  %7 = bitcast i8* %6 to i64*
  %8 = getelementptr inbounds i8, i8* %2, i64 24
  %9 = bitcast i8* %8 to %"class.std::__1::unique_ptr.218"**
  store %"class.std::__1::unique_ptr.218"* null, %"class.std::__1::unique_ptr.218"** %9, align 8
  store i64 1, i64* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_123GrDisplacementMapEffect4ImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 40
  %11 = bitcast i8* %10 to i32*
  store i32 -1, i32* %11, align 4
  %12 = bitcast i8* %2 to %class.GrGLSLFragmentProcessor*
  ret %class.GrGLSLFragmentProcessor* %12
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_123GrDisplacementMapEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%"class.(anonymous namespace)::GrDisplacementMapEffect"* nocapture readonly, %class.GrShaderCaps* nocapture readnone dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect", %"class.(anonymous namespace)::GrDisplacementMapEffect"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %class.GrProcessor, %class.GrProcessor* %4, i64 3, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %class.GrProcessor, %class.GrProcessor* %4, i64 4
  %8 = bitcast %class.GrProcessor* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = shl i32 %9, 2
  %11 = or i32 %10, %6
  %12 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %13 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %13, i64 2
  %15 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %14, align 8
  tail call void %15(%class.GrProcessorKeyBuilder* %2, i32 32, i32 %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0)) #13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_123GrDisplacementMapEffect9onIsEqualERK19GrFragmentProcessor(%"class.(anonymous namespace)::GrDisplacementMapEffect"* nocapture readonly, %class.GrFragmentProcessor* nocapture readonly dereferenceable(64)) unnamed_addr #10 align 2 {
  %3 = bitcast %class.GrFragmentProcessor* %1 to %"class.(anonymous namespace)::GrDisplacementMapEffect"*
  %4 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect", %"class.(anonymous namespace)::GrDisplacementMapEffect"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 0, i32 5
  %7 = bitcast [4 x i8]* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %5, %8
  br i1 %9, label %10, label %30

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect", %"class.(anonymous namespace)::GrDisplacementMapEffect"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1
  %14 = bitcast %class.GrFragmentProcessor* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %12, %15
  br i1 %16, label %17, label %30

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect", %"class.(anonymous namespace)::GrDisplacementMapEffect"* %0, i64 0, i32 3, i32 0
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect", %"class.(anonymous namespace)::GrDisplacementMapEffect"* %3, i64 0, i32 3, i32 0
  %21 = load float, float* %20, align 4
  %22 = fcmp oeq float %19, %21
  br i1 %22, label %23, label %30

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect", %"class.(anonymous namespace)::GrDisplacementMapEffect"* %0, i64 0, i32 3, i32 1
  %25 = load float, float* %24, align 4
  %26 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 0, i32 1
  %27 = bitcast i32* %26 to float*
  %28 = load float, float* %27, align 4
  %29 = fcmp oeq float %25, %28
  br label %30

30:                                               ; preds = %23, %17, %10, %2
  %31 = phi i1 [ false, %10 ], [ false, %2 ], [ false, %17 ], [ %29, %23 ]
  ret i1 %31
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD2Ev(%class.GrFragmentProcessor*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr.155"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr.155"*, %"class.std::__1::unique_ptr.155"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %18, align 8
  %20 = icmp eq %class.GrFragmentProcessor* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %class.GrFragmentProcessor* %19 to void (%class.GrFragmentProcessor*)***
  %23 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, i64 1
  %25 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %24, align 8
  tail call void %25(%class.GrFragmentProcessor* nonnull %19) #13
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #13
  br label %35

35:                                               ; preds = %11, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD0Ev(%class.GrFragmentProcessor*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #4

declare void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #12

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_123GrDisplacementMapEffect4ImplD0Ev(%"class.(anonymous namespace)::GrDisplacementMapEffect::Impl"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect::Impl", %"class.(anonymous namespace)::GrDisplacementMapEffect::Impl"* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor* %2) #13
  %3 = bitcast %"class.(anonymous namespace)::GrDisplacementMapEffect::Impl"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_123GrDisplacementMapEffect4Impl8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE(%"class.(anonymous namespace)::GrDisplacementMapEffect::Impl"*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %class.SkString, align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %class.SkString, align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 3
  %10 = bitcast %class.GrFragmentProcessor** %9 to %"class.(anonymous namespace)::GrDisplacementMapEffect"**
  %11 = load %"class.(anonymous namespace)::GrDisplacementMapEffect"*, %"class.(anonymous namespace)::GrDisplacementMapEffect"** %10, align 8
  %12 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 1
  %13 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %12, align 8
  %14 = bitcast %"class.(anonymous namespace)::GrDisplacementMapEffect"* %11 to %class.GrFragmentProcessor*
  %15 = bitcast %class.GrGLSLUniformHandler* %13 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %16 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %15, align 8
  %17 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %16, i64 13
  %18 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %17, align 8
  %19 = tail call i32 %18(%class.GrGLSLUniformHandler* %13, %class.GrFragmentProcessor* %14, i32 16, i32 29, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #13
  %20 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect::Impl", %"class.(anonymous namespace)::GrDisplacementMapEffect::Impl"* %0, i64 0, i32 1, i32 0
  store i32 %19, i32* %20, align 8
  %21 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %12, align 8
  %22 = bitcast %class.GrGLSLUniformHandler* %21 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %23 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %22, align 8
  %24 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %23, i64 3
  %25 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %24, align 8
  %26 = tail call i8* %25(%class.GrGLSLUniformHandler* %21, i32 %19) #13
  %27 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 0
  %28 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %27, align 8
  %29 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  %30 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %30, align 8
  %31 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect::Impl", %"class.(anonymous namespace)::GrDisplacementMapEffect::Impl"* %0, i64 0, i32 0
  %32 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  store i8 0, i8* %33, align 1
  %34 = bitcast %"class.SkSL::String"* %6 to i8*
  store i8 0, i8* %34, align 8
  %35 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* nonnull align 8 %34, i64 24, i1 false) #13, !noalias !63
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %5, %class.GrGLSLFragmentProcessor* %31, i32 0, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %4) #13
  %36 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1, !noalias !63
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %2
  %41 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8, !noalias !63
  call void @_ZdlPv(i8* %42) #15
  br label %43

43:                                               ; preds = %2, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35)
  %44 = bitcast %class.GrGLSLFPFragmentBuilder* %28 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr i8, i8* %45, i64 -24
  %47 = bitcast i8* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %30, align 8
  %50 = bitcast %class.GrGLSLFPFragmentBuilder* %28 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 %48
  %52 = bitcast i8* %51 to %class.GrGLSLShaderBuilder*
  %53 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %49, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %52, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0), i8* %53)
  %54 = load i8*, i8** %44, align 8
  %55 = getelementptr i8, i8* %54, i64 -24
  %56 = bitcast i8* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds i8, i8* %50, i64 %57
  %59 = bitcast i8* %58 to %class.GrGLSLShaderBuilder*
  %60 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 5
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect", %"class.(anonymous namespace)::GrDisplacementMapEffect"* %11, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp ult i32 %63, 4
  br i1 %64, label %66, label %65

65:                                               ; preds = %43
  call void @llvm.trap() #13
  unreachable

66:                                               ; preds = %43
  %67 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect", %"class.(anonymous namespace)::GrDisplacementMapEffect"* %11, i64 0, i32 2
  %68 = load i32, i32* %67, align 8
  %69 = icmp ult i32 %68, 4
  br i1 %69, label %71, label %70

70:                                               ; preds = %66
  call void @llvm.trap() #13
  unreachable

71:                                               ; preds = %66
  %72 = sext i32 %63 to i64
  %73 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN12_GLOBAL__N_123GrDisplacementMapEffect4Impl8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE.15, i64 0, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = sext i32 %68 to i64
  %76 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN12_GLOBAL__N_123GrDisplacementMapEffect4Impl8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE.15, i64 0, i64 %75
  %77 = load i32, i32* %76, align 4
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %59, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i8* %61, i8* %26, i32 %74, i32 %77)
  %78 = bitcast %class.SkString* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #13
  %79 = getelementptr inbounds %class.SkString, %class.SkString* %7, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %79, align 8
  %80 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  store i8 7, i8* %81, align 1
  %82 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %82, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i64 7, i1 false) #13
  %83 = getelementptr inbounds i8, i8* %82, i64 7
  store i8 0, i8* %83, align 1
  %84 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %84, i8* nonnull align 8 %82, i64 24, i1 false) #13, !noalias !66
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %7, %class.GrGLSLFragmentProcessor* %31, i32 1, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %3) #13
  %85 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1, !noalias !66
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %71
  %90 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8, !noalias !66
  call void @_ZdlPv(i8* %91) #15
  br label %92

92:                                               ; preds = %71, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84)
  %93 = load i8*, i8** %44, align 8
  %94 = getelementptr i8, i8* %93, i64 -24
  %95 = bitcast i8* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %79, align 8
  %98 = getelementptr inbounds i8, i8* %50, i64 %96
  %99 = bitcast i8* %98 to %class.GrGLSLShaderBuilder*
  %100 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %97, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %99, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %100)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_123GrDisplacementMapEffect4Impl9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%"class.(anonymous namespace)::GrDisplacementMapEffect::Impl"* nocapture readonly, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %4 = bitcast %class.GrFragmentProcessor* %2 to %"class.(anonymous namespace)::GrDisplacementMapEffect"*
  %5 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect::Impl", %"class.(anonymous namespace)::GrDisplacementMapEffect::Impl"* %0, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::GrDisplacementMapEffect", %"class.(anonymous namespace)::GrDisplacementMapEffect"* %4, i64 0, i32 3, i32 0
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 0, i32 1
  %10 = bitcast i32* %9 to float*
  %11 = load float, float* %10, align 4
  %12 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float, float)***
  %13 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)**, void (%class.GrGLSLProgramDataManager*, i32, float, float)*** %12, align 8
  %14 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %13, i64 8
  %15 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %14, align 8
  tail call void %15(%class.GrGLSLProgramDataManager* %1, i32 %6, float %8, float %11) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23GrGLSLFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2
  %4 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.221, %class.SkTArray.221* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.218"*, %"class.std::__1::unique_ptr.218"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %17, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrGLSLFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrGLSLFragmentProcessor* %18 to void (%class.GrGLSLFragmentProcessor*)***
  %22 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrGLSLFragmentProcessor* nonnull %18) #13
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.221* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #13
  br label %34

34:                                               ; preds = %10, %31
  %35 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 4294967294
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.SkTArray.28, %class.SkTArray.28* %35, i64 0, i32 0
  br label %46

42:                                               ; preds = %46, %34
  %43 = phi i64 [ %37, %34 ], [ %51, %46 ]
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %55

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %50, %46 ]
  %48 = load %class.SkString*, %class.SkString** %41, align 8
  %49 = getelementptr inbounds %class.SkString, %class.SkString* %48, i64 %47
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %49) #13
  %50 = add nuw nsw i64 %47, 1
  %51 = load i64, i64* %36, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %46, label %42

55:                                               ; preds = %42
  %56 = bitcast %class.SkTArray.28* %35 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #13
  br label %58

58:                                               ; preds = %42, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD0Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #13
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret void
}

declare void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* sret, %class.GrGLSLFragmentProcessor*, i32, i8*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56), %"class.SkSL::String"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #13

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #13

declare %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base*) local_unnamed_addr #3

declare void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo*, i32, i32, %class.sk_sp.14*) unnamed_addr #3

declare void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo*, %class.GrColorInfo* dereferenceable(24)) unnamed_addr #3

declare zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* dereferenceable(40), %class.GrFragmentProcessor*) local_unnamed_addr #3

declare void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext*, %struct.SkIRect* dereferenceable(16), %class.GrFragmentProcessor*) local_unnamed_addr #3

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #3

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #14

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #14

declare i32 @_ZN15SkUnPreMultiply14PMColorToColorEj(i32) local_unnamed_addr #3

declare { i64, i64 } @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #3

declare { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

declare zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"*, %class.SkReadBuffer* dereferenceable(136), i32) local_unnamed_addr #3

declare float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer*) local_unnamed_addr #3

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #3

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { nofree nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!5 = distinct !{!5, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!8 = distinct !{!8, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN14SkImageFilters15DisplacementMapE14SkColorChannelS0_f5sk_spI13SkImageFilterES3_RKNS_8CropRectE: argument 0"}
!11 = distinct !{!11, !"_ZN14SkImageFilters15DisplacementMapE14SkColorChannelS0_f5sk_spI13SkImageFilterES3_RKNS_8CropRectE"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!14 = distinct !{!14, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!15 = !{!16, !13}
!16 = distinct !{!16, !17, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!17 = distinct !{!17, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!20 = distinct !{!20, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!21 = !{!22, !19}
!22 = distinct !{!22, !23, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!23 = distinct !{!23, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!26 = distinct !{!26, !"_ZN8SkMatrix9TranslateEff"}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!29 = distinct !{!29, !"_ZN8SkMatrix9TranslateEff"}
!30 = distinct !{!30, !31, !"_ZN8SkMatrix9TranslateE8SkIPoint: argument 0"}
!31 = distinct !{!31, !"_ZN8SkMatrix9TranslateE8SkIPoint"}
!32 = !{!33, !35}
!33 = distinct !{!33, !34, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!34 = distinct !{!34, !"_ZN8SkMatrix9TranslateEff"}
!35 = distinct !{!35, !36, !"_ZN8SkMatrix9TranslateE8SkIPoint: argument 0"}
!36 = distinct !{!36, !"_ZN8SkMatrix9TranslateE8SkIPoint"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!39 = distinct !{!39, !"_ZN8SkMatrix6ConcatERKS_S1_"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK4skif7Context13refColorSpaceEv: argument 0"}
!42 = distinct !{!42, !"_ZNK4skif7Context13refColorSpaceEv"}
!43 = !{!44, !41}
!44 = distinct !{!44, !45, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!45 = distinct !{!45, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!46 = !{!47, !49}
!47 = distinct !{!47, !48, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!48 = distinct !{!48, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!49 = distinct !{!49, !50, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!50 = distinct !{!50, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!53 = distinct !{!53, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNK11GrColorInfo13refColorSpaceEv: argument 0"}
!56 = distinct !{!56, !"_ZNK11GrColorInfo13refColorSpaceEv"}
!57 = !{!58, !60}
!58 = distinct !{!58, !59, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!59 = distinct !{!59, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!60 = distinct !{!60, !61, !"_ZN11SkImageInfo7MakeN32Eii11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!61 = distinct !{!61, !"_ZN11SkImageInfo7MakeN32Eii11SkAlphaType5sk_spI12SkColorSpaceE"}
!62 = !{!"branch_weights", i32 1, i32 1048575}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!65 = distinct !{!65, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!68 = distinct !{!68, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
