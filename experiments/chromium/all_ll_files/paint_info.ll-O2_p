; ModuleID = '../../ui/views/paint_info.cc'
source_filename = "../../ui/views/paint_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.views::PaintInfo" = type <{ float, float, %"class.gfx::Rect", %"class.gfx::Vector2d", %"class.ui::PaintContext", %"class.ui::PaintContext"*, i8, [7 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.ui::PaintContext" = type <{ %"class.cc::DisplayItemList"*, float, %"class.gfx::Rect", %"class.gfx::Vector2d", i8, [3 x i8] }>
%"class.cc::DisplayItemList" = type opaque

@_ZN5views8features28kEnableViewPaintOptimizationE = external global %"struct.base::Feature", align 8

@_ZN5views9PaintInfoD1Ev = hidden unnamed_addr alias void (%"class.views::PaintInfo"*), void (%"class.views::PaintInfo"*)* @_ZN5views9PaintInfoD2Ev
@_ZN5views9PaintInfoC1ERKS0_ = hidden unnamed_addr alias void (%"class.views::PaintInfo"*, %"class.views::PaintInfo"*), void (%"class.views::PaintInfo"*, %"class.views::PaintInfo"*)* @_ZN5views9PaintInfoC2ERKS0_
@_ZN5views9PaintInfoC1ERKN2ui12PaintContextERKN3gfx4SizeE = hidden unnamed_addr alias void (%"class.views::PaintInfo"*, %"class.ui::PaintContext"*, %"class.gfx::Size"*), void (%"class.views::PaintInfo"*, %"class.ui::PaintContext"*, %"class.gfx::Size"*)* @_ZN5views9PaintInfoC2ERKN2ui12PaintContextERKN3gfx4SizeE
@_ZN5views9PaintInfoC1ERKS0_RKN3gfx4RectERKNS3_4SizeENS0_9ScaleTypeEbb = hidden unnamed_addr alias void (%"class.views::PaintInfo"*, %"class.views::PaintInfo"*, %"class.gfx::Rect"*, %"class.gfx::Size"*, i32, i1, i1), void (%"class.views::PaintInfo"*, %"class.views::PaintInfo"*, %"class.gfx::Rect"*, %"class.gfx::Size"*, i32, i1, i1)* @_ZN5views9PaintInfoC2ERKS0_RKN3gfx4RectERKNS3_4SizeENS0_9ScaleTypeEbb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9PaintInfo19CreateRootPaintInfoERKN2ui12PaintContextERKN3gfx4SizeE(%"class.views::PaintInfo"* noalias sret, %"class.ui::PaintContext"* dereferenceable(40), %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5views9PaintInfoC2ERKN2ui12PaintContextERKN3gfx4SizeE(%"class.views::PaintInfo"* %0, %"class.ui::PaintContext"* dereferenceable(40) %1, %"class.gfx::Size"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9PaintInfo20CreateChildPaintInfoERKS0_RKN3gfx4RectERKNS3_4SizeENS0_9ScaleTypeEbb(%"class.views::PaintInfo"* noalias sret, %"class.views::PaintInfo"* dereferenceable(88), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5views9PaintInfoC2ERKS0_RKN3gfx4RectERKNS3_4SizeENS0_9ScaleTypeEbb(%"class.views::PaintInfo"* %0, %"class.views::PaintInfo"* dereferenceable(88) %1, %"class.gfx::Rect"* dereferenceable(16) %2, %"class.gfx::Size"* dereferenceable(8) %3, i32 %4, i1 zeroext %5, i1 zeroext %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9PaintInfoD2Ev(%"class.views::PaintInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 4
  tail call void @_ZN2ui12PaintContextD1Ev(%"class.ui::PaintContext"* %2) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui12PaintContextD1Ev(%"class.ui::PaintContext"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5views9PaintInfo13IsPixelCanvasEv(%"class.views::PaintInfo"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 5
  %3 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %2, align 8
  %4 = icmp eq %"class.ui::PaintContext"* %3, null
  %5 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 4
  %6 = select i1 %4, %"class.ui::PaintContext"* %5, %"class.ui::PaintContext"* %3
  %7 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %6, i64 0, i32 4
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp ne i8 %8, 0
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views9PaintInfo11ShouldPaintEv(%"class.views::PaintInfo"*) local_unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = alloca %"class.gfx::Rect", align 4
  %4 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5views8features28kEnableViewPaintOptimizationE) #7
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 6
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  br label %33

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 5
  %11 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %10, align 8
  %12 = icmp eq %"class.ui::PaintContext"* %11, null
  %13 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 4
  %14 = select i1 %12, %"class.ui::PaintContext"* %13, %"class.ui::PaintContext"* %11
  %15 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 2, i32 1
  %17 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1
  %20 = bitcast %"class.gfx::Size"* %16 to i64*
  %21 = bitcast %"class.gfx::Size"* %19 to i64*
  %22 = load i64, i64* %20, align 4
  store i64 %22, i64* %21, align 4
  %23 = bitcast { i64, i64 }* %2 to %"class.gfx::Rect"*
  %24 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %14, i64 0, i32 2
  %25 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #7
  %26 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %14, i64 0, i32 3
  %27 = call { i64, i64 } @_ZN3gfxplERKNS_4RectERKNS_8Vector2dE(%"class.gfx::Rect"* nonnull dereferenceable(16) %3, %"class.gfx::Vector2d"* dereferenceable(8) %26) #7
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %29 = extractvalue { i64, i64 } %27, 0
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %31 = extractvalue { i64, i64 } %27, 1
  store i64 %31, i64* %30, align 8
  %32 = call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* %24, %"class.gfx::Rect"* nonnull dereferenceable(16) %23) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #7
  br label %33

33:                                               ; preds = %9, %5
  %34 = phi i1 [ %8, %5 ], [ %32, %9 ]
  ret i1 %34
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9PaintInfoC2ERKS0_(%"class.views::PaintInfo"*, %"class.views::PaintInfo"* dereferenceable(88)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Vector2d", align 4
  %4 = bitcast %"class.views::PaintInfo"* %1 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = bitcast %"class.views::PaintInfo"* %0 to i32*
  store i32 %5, i32* %6, align 8
  %7 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %1, i64 0, i32 1
  %9 = bitcast float* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = bitcast float* %7 to i32*
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %1, i64 0, i32 2
  %14 = bitcast %"class.gfx::Rect"* %12 to i8*
  %15 = bitcast %"class.gfx::Rect"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false)
  %16 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %1, i64 0, i32 3
  %18 = bitcast %"class.gfx::Vector2d"* %17 to i64*
  %19 = bitcast %"class.gfx::Vector2d"* %16 to i64*
  %20 = load i64, i64* %18, align 8
  store i64 %20, i64* %19, align 8
  %21 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 4
  %22 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %1, i64 0, i32 5
  %23 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %22, align 8
  %24 = icmp eq %"class.ui::PaintContext"* %23, null
  %25 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %1, i64 0, i32 4
  %26 = select i1 %24, %"class.ui::PaintContext"* %25, %"class.ui::PaintContext"* %23
  %27 = bitcast %"class.gfx::Vector2d"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  %28 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %3, i64 0, i32 0
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %3, i64 0, i32 1
  store i32 0, i32* %29, align 4
  call void @_ZN2ui12PaintContextC1ERKS0_RKN3gfx8Vector2dE(%"class.ui::PaintContext"* %21, %"class.ui::PaintContext"* dereferenceable(40) %26, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  %30 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 5
  store %"class.ui::PaintContext"* null, %"class.ui::PaintContext"** %30, align 8
  %31 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 6
  store i8 0, i8* %31, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN2ui12PaintContextC1ERKS0_RKN3gfx8Vector2dE(%"class.ui::PaintContext"*, %"class.ui::PaintContext"* dereferenceable(40), %"class.gfx::Vector2d"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9PaintInfoC2ERKN2ui12PaintContextERKN3gfx4SizeE(%"class.views::PaintInfo"*, %"class.ui::PaintContext"* dereferenceable(40), %"class.gfx::Size"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Vector2d", align 4
  %5 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %1, i64 0, i32 4
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  store float 1.000000e+00, float* %5, align 8
  %10 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 1
  store float 1.000000e+00, float* %10, align 4
  %11 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 2
  %12 = bitcast %"class.gfx::Size"* %2 to i64*
  %13 = load i64, i64* %12, align 4
  br label %68

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %1, i64 0, i32 1
  %16 = load float, float* %15, align 8
  store float %16, float* %5, align 8
  %17 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 1
  store float %16, float* %17, align 4
  %18 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 2
  %19 = bitcast %"class.gfx::Size"* %2 to i64*
  %20 = load i64, i64* %19, align 4
  %21 = fcmp oeq float %16, 1.000000e+00
  br i1 %21, label %68, label %22

22:                                               ; preds = %14
  %23 = fmul float %16, 0.000000e+00
  %24 = tail call float @llvm.floor.f32(float %23) #7
  %25 = fptosi float %24 to i32
  %26 = trunc i64 %20 to i32
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %22
  %29 = sitofp i32 %26 to float
  %30 = fmul float %16, %29
  %31 = tail call float @llvm.ceil.f32(float %30) #7
  %32 = fptosi float %31 to i32
  br label %33

33:                                               ; preds = %28, %22
  %34 = phi i32 [ %32, %28 ], [ %25, %22 ]
  %35 = lshr i64 %20, 32
  %36 = trunc i64 %35 to i32
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %33
  %39 = sitofp i32 %36 to float
  %40 = fmul float %16, %39
  %41 = tail call float @llvm.ceil.f32(float %40) #7
  %42 = fptosi float %41 to i32
  br label %43

43:                                               ; preds = %38, %33
  %44 = phi i32 [ %42, %38 ], [ %25, %33 ]
  %45 = sub nsw i32 %34, %25
  %46 = sub nsw i32 %44, %25
  %47 = icmp sgt i32 %25, 0
  %48 = icmp sgt i32 %45, 0
  %49 = and i1 %47, %48
  %50 = sub nuw nsw i32 2147483647, %25
  %51 = icmp ult i32 %50, %45
  %52 = and i1 %51, %49
  %53 = select i1 %52, i32 %50, i32 %45
  %54 = icmp sgt i32 %46, 0
  %55 = and i1 %47, %54
  %56 = icmp ult i32 %50, %46
  %57 = and i1 %56, %55
  %58 = select i1 %57, i32 %50, i32 %46
  %59 = icmp sgt i32 %53, 0
  %60 = select i1 %59, i32 %53, i32 0
  %61 = zext i32 %60 to i64
  %62 = icmp sgt i32 %58, 0
  %63 = select i1 %62, i32 %58, i32 0
  %64 = zext i32 %63 to i64
  %65 = shl nuw nsw i64 %64, 32
  %66 = or i64 %65, %61
  %67 = zext i32 %25 to i64
  br label %68

68:                                               ; preds = %14, %9, %43
  %69 = phi %"class.gfx::Rect"* [ %18, %43 ], [ %11, %9 ], [ %18, %14 ]
  %70 = phi i64 [ %67, %43 ], [ 0, %9 ], [ 0, %14 ]
  %71 = phi i64 [ %66, %43 ], [ %13, %9 ], [ %20, %14 ]
  %72 = shl nuw i64 %70, 32
  %73 = or i64 %72, %70
  %74 = bitcast %"class.gfx::Rect"* %69 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 2, i32 1
  %76 = bitcast %"class.gfx::Size"* %75 to i64*
  store i64 %71, i64* %76, align 8
  %77 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %77, align 4
  %78 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 3, i32 1
  store i32 0, i32* %78, align 4
  %79 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 4
  %80 = bitcast %"class.gfx::Vector2d"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #7
  %81 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %4, i64 0, i32 0
  store i32 0, i32* %81, align 4
  %82 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %4, i64 0, i32 1
  store i32 0, i32* %82, align 4
  call void @_ZN2ui12PaintContextC1ERKS0_RKN3gfx8Vector2dE(%"class.ui::PaintContext"* %79, %"class.ui::PaintContext"* dereferenceable(40) %1, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #7
  %83 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 5
  store %"class.ui::PaintContext"* %1, %"class.ui::PaintContext"** %83, align 8
  %84 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 6
  store i8 0, i8* %84, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9PaintInfoC2ERKS0_RKN3gfx4RectERKNS3_4SizeENS0_9ScaleTypeEbb(%"class.views::PaintInfo"*, %"class.views::PaintInfo"* dereferenceable(88), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %8 = alloca i64, align 8
  %9 = alloca %"class.gfx::Rect", align 4
  %10 = alloca %"class.gfx::Size", align 4
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = zext i1 %6 to i8
  %14 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 0
  store float 1.000000e+00, float* %14, align 8
  %15 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 1
  store float 1.000000e+00, float* %15, align 4
  %16 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %1, i64 0, i32 5
  %18 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %17, align 8
  %19 = icmp eq %"class.ui::PaintContext"* %18, null
  %20 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %1, i64 0, i32 4
  %21 = select i1 %19, %"class.ui::PaintContext"* %20, %"class.ui::PaintContext"* %18
  %22 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %21, i64 0, i32 4
  %23 = load i8, i8* %22, align 4, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %5, label %25, label %44

25:                                               ; preds = %7
  br i1 %24, label %26, label %30

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1
  %28 = bitcast %"class.gfx::Size"* %27 to i64*
  %29 = load i64, i64* %28, align 4
  br label %39

30:                                               ; preds = %25
  %31 = bitcast %"class.gfx::Rect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %21, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %31, i8 0, i64 16, i1 false) #7
  %33 = load float, float* %32, align 8
  %34 = bitcast %"class.gfx::Size"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7
  %35 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %10, i64 0, i32 0
  store i32 0, i32* %35, align 4
  %36 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %10, i64 0, i32 1
  store i32 0, i32* %36, align 4
  %37 = call fastcc { i64, i64 } @_ZN5views12_GLOBAL__N_133GetSnappedRecordingBoundsInternalERKN3gfx4RectEfRKNS1_4SizeES4_(%"class.gfx::Rect"* nonnull dereferenceable(16) %9, float %33, %"class.gfx::Size"* nonnull dereferenceable(8) %10, %"class.gfx::Rect"* dereferenceable(16) %2) #7
  %38 = extractvalue { i64, i64 } %37, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #7
  br label %39

39:                                               ; preds = %26, %30
  %40 = phi i64 [ %38, %30 ], [ %29, %26 ]
  %41 = bitcast %"class.gfx::Rect"* %16 to i64*
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 2, i32 1
  %43 = bitcast %"class.gfx::Size"* %42 to i64*
  store i64 %40, i64* %43, align 8
  br label %74

44:                                               ; preds = %7
  br i1 %24, label %45, label %59

45:                                               ; preds = %44
  %46 = bitcast i64* %8 to %"class.gfx::Vector2d"*
  %47 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #7
  %48 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %1, i64 0, i32 2, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %1, i64 0, i32 2, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = shl nuw i64 %52, 32
  %54 = zext i32 %49 to i64
  %55 = or i64 %53, %54
  store i64 %55, i64* %8, align 8
  %56 = call { i64, i64 } @_ZN3gfxplERKNS_4RectERKNS_8Vector2dE(%"class.gfx::Rect"* dereferenceable(16) %2, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %46) #7
  %57 = extractvalue { i64, i64 } %56, 0
  %58 = extractvalue { i64, i64 } %56, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #7
  br label %66

59:                                               ; preds = %44
  %60 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %1, i64 0, i32 2
  %61 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %21, i64 0, i32 1
  %62 = load float, float* %61, align 8
  %63 = tail call fastcc { i64, i64 } @_ZN5views12_GLOBAL__N_133GetSnappedRecordingBoundsInternalERKN3gfx4RectEfRKNS1_4SizeES4_(%"class.gfx::Rect"* dereferenceable(16) %60, float %62, %"class.gfx::Size"* dereferenceable(8) %3, %"class.gfx::Rect"* dereferenceable(16) %2) #7
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = extractvalue { i64, i64 } %63, 1
  br label %66

66:                                               ; preds = %45, %59
  %67 = phi i64 [ %64, %59 ], [ %57, %45 ]
  %68 = phi i64 [ %65, %59 ], [ %58, %45 ]
  %69 = bitcast %"class.gfx::Rect"* %16 to i64*
  store i64 %67, i64* %69, align 8
  %70 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 2, i32 1
  %71 = bitcast %"class.gfx::Size"* %70 to i64*
  store i64 %68, i64* %71, align 8
  %72 = and i64 %67, -4294967296
  %73 = and i64 %67, 4294967295
  br label %74

74:                                               ; preds = %66, %39
  %75 = phi i64 [ %72, %66 ], [ 0, %39 ]
  %76 = phi i64 [ %73, %66 ], [ 0, %39 ]
  %77 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 3
  %78 = or i64 %75, %76
  %79 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %1, i64 0, i32 2, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %1, i64 0, i32 2, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  %84 = bitcast i64* %11 to %"class.gfx::Vector2d"*
  %85 = bitcast i64* %12 to %"class.gfx::Vector2d"*
  store i64 %78, i64* %11, align 8
  %86 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #7
  %87 = sub nsw i32 0, %80
  %88 = sub nsw i32 0, %82
  %89 = zext i32 %88 to i64
  %90 = shl nuw i64 %89, 32
  %91 = zext i32 %87 to i64
  %92 = or i64 %90, %91
  store i64 %92, i64* %12, align 8
  call void @_ZN3gfx8Vector2d3AddERKS0_(%"class.gfx::Vector2d"* nonnull %84, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %85) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #7
  %93 = load i64, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  %94 = bitcast %"class.gfx::Vector2d"* %77 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 4
  %96 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %17, align 8
  %97 = icmp eq %"class.ui::PaintContext"* %96, null
  %98 = select i1 %97, %"class.ui::PaintContext"* %20, %"class.ui::PaintContext"* %96
  call void @_ZN2ui12PaintContextC1ERKS0_RKN3gfx8Vector2dE(%"class.ui::PaintContext"* %95, %"class.ui::PaintContext"* dereferenceable(40) %98, %"class.gfx::Vector2d"* dereferenceable(8) %77) #7
  %99 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 5
  store %"class.ui::PaintContext"* null, %"class.ui::PaintContext"** %99, align 8
  %100 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 6
  store i8 %13, i8* %100, align 8
  %101 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 4, i32 4
  %102 = load i8, i8* %101, align 4, !range !2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %131, label %104

104:                                              ; preds = %74
  switch i32 %4, label %131 [
    i32 0, label %105
    i32 1, label %111
  ]

105:                                              ; preds = %104
  %106 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 4, i32 1
  %107 = bitcast float* %106 to i32*
  %108 = load i32, i32* %107, align 8
  %109 = bitcast float* %15 to i32*
  store i32 %108, i32* %109, align 4
  %110 = bitcast %"class.views::PaintInfo"* %0 to i32*
  store i32 %108, i32* %110, align 8
  br label %131

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = icmp sgt i32 %113, 0
  br i1 %114, label %115, label %121

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 2, i32 1, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = sitofp i32 %117 to float
  %119 = sitofp i32 %113 to float
  %120 = fdiv float %118, %119
  store float %120, float* %14, align 8
  br label %121

121:                                              ; preds = %115, %111
  %122 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = icmp sgt i32 %123, 0
  br i1 %124, label %125, label %131

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 2, i32 1, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = sitofp i32 %127 to float
  %129 = sitofp i32 %123 to float
  %130 = fdiv float %128, %129
  store float %130, float* %15, align 4
  br label %131

131:                                              ; preds = %74, %104, %105, %121, %125
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5views9PaintInfo25GetSnappedRecordingBoundsERKN3gfx4SizeERKNS1_4RectE(%"class.views::PaintInfo"* nocapture readonly, %"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 5
  %6 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %5, align 8
  %7 = icmp eq %"class.ui::PaintContext"* %6, null
  %8 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 4
  %9 = select i1 %7, %"class.ui::PaintContext"* %8, %"class.ui::PaintContext"* %6
  %10 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %9, i64 0, i32 4
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %27

13:                                               ; preds = %3
  %14 = bitcast i64* %4 to %"class.gfx::Vector2d"*
  %15 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = shl nuw i64 %20, 32
  %22 = zext i32 %17 to i64
  %23 = or i64 %21, %22
  store i64 %23, i64* %4, align 8
  %24 = call { i64, i64 } @_ZN3gfxplERKNS_4RectERKNS_8Vector2dE(%"class.gfx::Rect"* dereferenceable(16) %2, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %14) #7
  %25 = extractvalue { i64, i64 } %24, 0
  %26 = extractvalue { i64, i64 } %24, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #7
  br label %34

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.views::PaintInfo", %"class.views::PaintInfo"* %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %9, i64 0, i32 1
  %30 = load float, float* %29, align 8
  %31 = tail call fastcc { i64, i64 } @_ZN5views12_GLOBAL__N_133GetSnappedRecordingBoundsInternalERKN3gfx4RectEfRKNS1_4SizeES4_(%"class.gfx::Rect"* dereferenceable(16) %28, float %30, %"class.gfx::Size"* dereferenceable(8) %1, %"class.gfx::Rect"* dereferenceable(16) %2)
  %32 = extractvalue { i64, i64 } %31, 0
  %33 = extractvalue { i64, i64 } %31, 1
  br label %34

34:                                               ; preds = %27, %13
  %35 = phi i64 [ %32, %27 ], [ %25, %13 ]
  %36 = phi i64 [ %33, %27 ], [ %26, %13 ]
  %37 = insertvalue { i64, i64 } undef, i64 %35, 0
  %38 = insertvalue { i64, i64 } %37, i64 %36, 1
  ret { i64, i64 } %38
}

declare { i64, i64 } @_ZN3gfxplERKNS_4RectERKNS_8Vector2dE(%"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Vector2d"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
define internal fastcc { i64, i64 } @_ZN5views12_GLOBAL__N_133GetSnappedRecordingBoundsInternalERKN3gfx4RectEfRKNS1_4SizeES4_(%"class.gfx::Rect"* nocapture readonly dereferenceable(16), float, %"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #5 {
  %5 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, %6
  %12 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = add nsw i32 %13, %8
  %15 = sitofp i32 %6 to float
  %16 = fmul float %15, %1
  %17 = tail call float @llvm.round.f32(float %16) #7
  %18 = fptosi float %17 to i32
  %19 = sitofp i32 %8 to float
  %20 = fmul float %19, %1
  %21 = tail call float @llvm.round.f32(float %20) #7
  %22 = fptosi float %21 to i32
  %23 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp ne i32 %11, %31
  %33 = or i1 %29, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %4, %26
  %35 = phi i1 [ %29, %26 ], [ true, %4 ]
  %36 = sitofp i32 %11 to float
  %37 = fmul float %36, %1
  %38 = tail call float @llvm.round.f32(float %37) #7
  %39 = fptosi float %38 to i32
  br label %40

40:                                               ; preds = %26, %34
  %41 = phi i1 [ %35, %34 ], [ false, %26 ]
  %42 = phi i32 [ %39, %34 ], [ %24, %26 ]
  %43 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp ne i32 %14, %44
  %46 = or i1 %41, %45
  br i1 %46, label %50, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %49 = load i32, i32* %48, align 4
  br label %55

50:                                               ; preds = %40
  %51 = sitofp i32 %14 to float
  %52 = fmul float %51, %1
  %53 = tail call float @llvm.round.f32(float %52) #7
  %54 = fptosi float %53 to i32
  br label %55

55:                                               ; preds = %50, %47
  %56 = phi i32 [ %54, %50 ], [ %49, %47 ]
  %57 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = add nsw i32 %58, %18
  %60 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = add nsw i32 %61, %22
  %63 = sub nsw i32 %42, %18
  %64 = sub nsw i32 %56, %22
  %65 = icmp sgt i32 %59, 0
  %66 = icmp sgt i32 %63, 0
  %67 = and i1 %66, %65
  %68 = sub nuw nsw i32 2147483647, %59
  %69 = icmp ult i32 %68, %63
  %70 = and i1 %69, %67
  %71 = select i1 %70, i32 %68, i32 %63
  %72 = icmp sgt i32 %62, 0
  %73 = icmp sgt i32 %64, 0
  %74 = and i1 %73, %72
  %75 = sub nuw nsw i32 2147483647, %62
  %76 = icmp ult i32 %75, %64
  %77 = and i1 %76, %74
  %78 = select i1 %77, i32 %75, i32 %64
  %79 = icmp sgt i32 %71, 0
  %80 = select i1 %79, i32 %71, i32 0
  %81 = icmp sgt i32 %78, 0
  %82 = select i1 %81, i32 %78, i32 0
  %83 = zext i32 %62 to i64
  %84 = shl nuw i64 %83, 32
  %85 = zext i32 %59 to i64
  %86 = or i64 %84, %85
  %87 = insertvalue { i64, i64 } undef, i64 %86, 0
  %88 = zext i32 %82 to i64
  %89 = shl nuw nsw i64 %88, 32
  %90 = zext i32 %80 to i64
  %91 = or i64 %89, %90
  %92 = insertvalue { i64, i64 } %87, i64 %91, 1
  ret { i64, i64 } %92
}

declare zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN3gfx8Vector2d3AddERKS0_(%"class.gfx::Vector2d"*, %"class.gfx::Vector2d"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
