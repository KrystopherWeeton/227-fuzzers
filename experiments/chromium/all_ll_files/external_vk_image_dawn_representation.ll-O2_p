; ModuleID = '../../gpu/command_buffer/service/external_vk_image_dawn_representation.cc'
source_filename = "../../gpu/command_buffer/service/external_vk_image_dawn_representation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.gpu::ExternalVkImageDawnRepresentation" = type { %"class.gpu::SharedImageRepresentationDawn.base", %struct.WGPUDeviceImpl*, i32, [4 x i8], %"class.base::ScopedGeneric", %struct.WGPUTextureImpl*, %struct.DawnProcTable, %"class.std::__1::vector.21" }
%"class.gpu::SharedImageRepresentationDawn.base" = type { %"class.gpu::SharedImageRepresentation.base" }
%"class.gpu::SharedImageRepresentation.base" = type <{ i32 (...)**, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, i8, i8 }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%struct.WGPUTextureImpl = type opaque
%struct.DawnProcTable = type { void ()* (%struct.WGPUDeviceImpl*, i8*)*, %struct.WGPUInstanceImpl* (%struct.WGPUInstanceDescriptor*)*, void (%struct.WGPUBindGroupImpl*)*, void (%struct.WGPUBindGroupImpl*)*, void (%struct.WGPUBindGroupLayoutImpl*)*, void (%struct.WGPUBindGroupLayoutImpl*)*, void (%struct.WGPUBufferImpl*)*, i8* (%struct.WGPUBufferImpl*, i64, i64)*, i8* (%struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPUBufferImpl*, i32, i64, i64, void (i32, i8*)*, i8*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUCommandBufferImpl*)*, void (%struct.WGPUCommandBufferImpl*)*, %struct.WGPUComputePassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUComputePassDescriptor*)*, %struct.WGPURenderPassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPURenderPassDescriptor*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUBufferImpl*, i64, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyBuffer*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyBuffer*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, %struct.WGPUCommandBufferImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandBufferDescriptor*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUQuerySetImpl*, i32, i32, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i32, i32, i32)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i8*)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i8*)*, void (%struct.WGPUComputePassEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUComputePipelineImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPUComputePipelineImpl*, i32)*, void (%struct.WGPUComputePipelineImpl*)*, void (%struct.WGPUComputePipelineImpl*)*, %struct.WGPUBindGroupImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBindGroupDescriptor*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBindGroupLayoutDescriptor*)*, %struct.WGPUBufferImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBufferDescriptor*)*, %struct.WGPUCommandEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUCommandEncoderDescriptor*)*, %struct.WGPUComputePipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUComputePipelineDescriptor*)*, void (%struct.WGPUDeviceImpl*, %struct.WGPUComputePipelineDescriptor*, void (i32, %struct.WGPUComputePipelineImpl*, i8*, i8*)*, i8*)*, %struct.WGPUBufferImpl* (%struct.WGPUDeviceImpl*)*, %struct.WGPUExternalTextureImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUExternalTextureDescriptor*)*, %struct.WGPUPipelineLayoutImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUPipelineLayoutDescriptor*)*, %struct.WGPUQuerySetImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUQuerySetDescriptor*)*, %struct.WGPURenderBundleEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderBundleEncoderDescriptor*)*, %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)*, %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)*, void (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*, void (i32, %struct.WGPURenderPipelineImpl*, i8*, i8*)*, i8*)*, %struct.WGPUSamplerImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUSamplerDescriptor*)*, %struct.WGPUShaderModuleImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUShaderModuleDescriptor*)*, %struct.WGPUSwapChainImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUSurfaceImpl*, %struct.WGPUSwapChainDescriptor*)*, %struct.WGPUTextureImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUTextureDescriptor*)*, %struct.WGPUQueueImpl* (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*, i32, i8*)*, void (%struct.WGPUDeviceImpl*)*, i1 (%struct.WGPUDeviceImpl*, void (i32, i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*, i32)*, void (%struct.WGPUDeviceImpl*, void (i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*, void (i32, i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, %struct.WGPUSurfaceImpl* (%struct.WGPUInstanceImpl*, %struct.WGPUSurfaceDescriptor*)*, void (%struct.WGPUInstanceImpl*)*, void (%struct.WGPUInstanceImpl*)*, void (%struct.WGPUPipelineLayoutImpl*)*, void (%struct.WGPUPipelineLayoutImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQueueImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*, %struct.WGPUCopyTextureForBrowserOptions*)*, void (%struct.WGPUQueueImpl*, i64, void (i32, i8*)*, i8*)*, void (%struct.WGPUQueueImpl*, i32, %struct.WGPUCommandBufferImpl**)*, void (%struct.WGPUQueueImpl*, %struct.WGPUBufferImpl*, i64, i8*, i64)*, void (%struct.WGPUQueueImpl*, %struct.WGPUImageCopyTexture*, i8*, i64, %struct.WGPUTextureDataLayout*, %struct.WGPUExtent3D*)*, void (%struct.WGPUQueueImpl*)*, void (%struct.WGPUQueueImpl*)*, void (%struct.WGPURenderBundleImpl*)*, void (%struct.WGPURenderBundleImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, i32, i32, i32, i32)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, %struct.WGPURenderBundleImpl* (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPURenderBundleDescriptor*)*, void (%struct.WGPURenderBundleEncoderImpl*, i8*)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i8*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i32, i64, i64)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPURenderBundleImpl**)*, void (%struct.WGPURenderPassEncoderImpl*, i8*)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i8*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUColor*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUColor*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i32, i64, i64)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPURenderPassEncoderImpl*, float, float, float, float, float, float)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPURenderPipelineImpl*, i32)*, void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPUSamplerImpl*)*, void (%struct.WGPUSamplerImpl*)*, void (%struct.WGPUShaderModuleImpl*, void (i32, %struct.WGPUCompilationInfo*, i8*)*, i8*)*, void (%struct.WGPUShaderModuleImpl*)*, void (%struct.WGPUShaderModuleImpl*)*, void (%struct.WGPUSurfaceImpl*)*, void (%struct.WGPUSurfaceImpl*)*, void (%struct.WGPUSwapChainImpl*, i32, i32, i32, i32)*, %struct.WGPUTextureViewImpl* (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, %struct.WGPUTextureViewImpl* (%struct.WGPUTextureImpl*, %struct.WGPUTextureViewDescriptor*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureViewImpl*)*, void (%struct.WGPUTextureViewImpl*)* }
%struct.WGPUInstanceImpl = type opaque
%struct.WGPUInstanceDescriptor = type { %struct.WGPUChainedStruct* }
%struct.WGPUChainedStruct = type { %struct.WGPUChainedStruct*, i32 }
%struct.WGPUBindGroupImpl = type opaque
%struct.WGPUBindGroupLayoutImpl = type opaque
%struct.WGPUBufferImpl = type opaque
%struct.WGPUCommandBufferImpl = type opaque
%struct.WGPUComputePassEncoderImpl = type opaque
%struct.WGPUCommandEncoderImpl = type opaque
%struct.WGPUComputePassDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPURenderPassEncoderImpl = type opaque
%struct.WGPURenderPassDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPURenderPassColorAttachment*, %struct.WGPURenderPassDepthStencilAttachment*, %struct.WGPUQuerySetImpl* }
%struct.WGPURenderPassColorAttachment = type { %struct.WGPUTextureViewImpl*, %struct.WGPUTextureViewImpl*, i32, i32, %struct.WGPUColor, %struct.WGPUTextureViewImpl* }
%struct.WGPUColor = type { double, double, double, double }
%struct.WGPUTextureViewImpl = type opaque
%struct.WGPURenderPassDepthStencilAttachment = type { %struct.WGPUTextureViewImpl*, i32, i32, float, i8, i32, i32, i32, i8, %struct.WGPUTextureViewImpl* }
%struct.WGPUQuerySetImpl = type opaque
%struct.WGPUImageCopyBuffer = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureDataLayout, %struct.WGPUBufferImpl* }
%struct.WGPUTextureDataLayout = type { %struct.WGPUChainedStruct*, i64, i32, i32 }
%struct.WGPUImageCopyTexture = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureImpl*, i32, %struct.WGPUOrigin3D, i32 }
%struct.WGPUOrigin3D = type { i32, i32, i32 }
%struct.WGPUExtent3D = type { i32, i32, i32 }
%struct.WGPUCommandBufferDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUComputePipelineImpl = type opaque
%struct.WGPUBindGroupDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUBindGroupLayoutImpl*, i32, %struct.WGPUBindGroupEntry* }
%struct.WGPUBindGroupEntry = type { i32, %struct.WGPUBufferImpl*, i64, i64, %struct.WGPUSamplerImpl*, %struct.WGPUTextureViewImpl* }
%struct.WGPUSamplerImpl = type opaque
%struct.WGPUBindGroupLayoutDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPUBindGroupLayoutEntry* }
%struct.WGPUBindGroupLayoutEntry = type { %struct.WGPUChainedStruct*, i32, i32, %struct.WGPUBufferBindingLayout, %struct.WGPUSamplerBindingLayout, %struct.WGPUTextureBindingLayout, %struct.WGPUStorageTextureBindingLayout }
%struct.WGPUBufferBindingLayout = type { %struct.WGPUChainedStruct*, i32, i8, i64 }
%struct.WGPUSamplerBindingLayout = type { %struct.WGPUChainedStruct*, i32 }
%struct.WGPUTextureBindingLayout = type { %struct.WGPUChainedStruct*, i32, i32, i8 }
%struct.WGPUStorageTextureBindingLayout = type { %struct.WGPUChainedStruct*, i32, i32, i32 }
%struct.WGPUBufferDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i64, i8 }
%struct.WGPUCommandEncoderDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUComputePipelineDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, %struct.WGPUProgrammableStageDescriptor }
%struct.WGPUPipelineLayoutImpl = type opaque
%struct.WGPUProgrammableStageDescriptor = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8* }
%struct.WGPUShaderModuleImpl = type opaque
%struct.WGPUExternalTextureImpl = type opaque
%struct.WGPUExternalTextureDescriptor = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureViewImpl*, i32 }
%struct.WGPUPipelineLayoutDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPUBindGroupLayoutImpl** }
%struct.WGPUQuerySetDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32*, i32 }
%struct.WGPURenderBundleEncoderImpl = type opaque
%struct.WGPURenderBundleEncoderDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32*, i32, i32 }
%struct.WGPURenderPipelineImpl = type opaque
%struct.WGPURenderPipelineDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, %struct.WGPUVertexState, %struct.WGPUPrimitiveState, %struct.WGPUDepthStencilState*, %struct.WGPUMultisampleState, %struct.WGPUFragmentState* }
%struct.WGPUVertexState = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, %struct.WGPUVertexBufferLayout* }
%struct.WGPUVertexBufferLayout = type { i64, i32, i32, %struct.WGPUVertexAttribute* }
%struct.WGPUVertexAttribute = type { i32, i64, i32 }
%struct.WGPUPrimitiveState = type { %struct.WGPUChainedStruct*, i32, i32, i32, i32 }
%struct.WGPUDepthStencilState = type { %struct.WGPUChainedStruct*, i32, i8, i32, %struct.WGPUStencilFaceState, %struct.WGPUStencilFaceState, i32, i32, i32, float, float }
%struct.WGPUStencilFaceState = type { i32, i32, i32, i32 }
%struct.WGPUMultisampleState = type { %struct.WGPUChainedStruct*, i32, i32, i8 }
%struct.WGPUFragmentState = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, %struct.WGPUColorTargetState* }
%struct.WGPUColorTargetState = type { %struct.WGPUChainedStruct*, i32, %struct.WGPUBlendState*, i32 }
%struct.WGPUBlendState = type { %struct.WGPUBlendComponent, %struct.WGPUBlendComponent }
%struct.WGPUBlendComponent = type { i32, i32, i32 }
%struct.WGPUSamplerDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i32, float, float, i32, i16 }
%struct.WGPUShaderModuleDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUSwapChainImpl = type opaque
%struct.WGPUSurfaceImpl = type opaque
%struct.WGPUSwapChainDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i64 }
%struct.WGPUTextureDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, %struct.WGPUExtent3D, i32, i32, i32 }
%struct.WGPUQueueImpl = type opaque
%struct.WGPUSurfaceDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUCopyTextureForBrowserOptions = type { %struct.WGPUChainedStruct*, i8 }
%struct.WGPURenderBundleImpl = type opaque
%struct.WGPURenderBundleDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUCompilationInfo = type { i32, %struct.WGPUCompilationMessage* }
%struct.WGPUCompilationMessage = type { i8*, i32, i64, i64, i64, i64 }
%struct.WGPUTextureViewDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.gpu::ExternalSemaphore"*, %"class.gpu::ExternalSemaphore"*, %"class.std::__1::__compressed_pair.24" }
%"class.gpu::ExternalSemaphore" = type <{ %"class.viz::VulkanContextProvider"*, %struct.VkSemaphore_T*, %"class.gpu::SemaphoreHandle", i32, [4 x i8] }>
%"class.viz::VulkanContextProvider" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.23", [4 x i8] }>
%"class.base::RefCountedThreadSafe.23" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.VkSemaphore_T = type opaque
%"class.gpu::SemaphoreHandle" = type { i32, [4 x i8], %"class.base::ScopedGeneric" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.gpu::ExternalSemaphore"* }
%"class.gpu::SharedImageManager" = type <{ %"class.absl::optional", %"class.base::internal::flat_tree", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }
%"class.gpu::SharedImageBacking" = type { i32 (...)**, %"class.absl::optional", %"struct.gpu::Mailbox", i32, %"class.gfx::Size", %"class.gfx::ColorSpace", i32, i32, i32, i64, %"class.gpu::SharedImageFactory"*, i8, %"class.absl::optional.1", %"class.std::__1::vector.6" }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gpu::SharedImageFactory" = type opaque
%"class.absl::optional.1" = type { %"class.absl::optional_internal::optional_data.2" }
%"class.absl::optional_internal::optional_data.2" = type { %"class.absl::optional_internal::optional_data_base.3" }
%"class.absl::optional_internal::optional_data_base.3" = type { %"class.absl::optional_internal::optional_data_dtor_base.4" }
%"class.absl::optional_internal::optional_data_dtor_base.4" = type { i8, %union.anon.5 }
%union.anon.5 = type { %"class.gpu::SharedImageBacking::ScopedWriteUMA" }
%"class.gpu::SharedImageBacking::ScopedWriteUMA" = type { i8 }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"**, %"class.std::__1::__compressed_pair.8" }
%"class.gpu::SharedImageRepresentation" = type <{ i32 (...)**, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.gpu::SharedImageRepresentation"** }
%"class.gpu::MemoryTypeTracker" = type { %"class.gpu::MemoryTracker"*, i64, %"class.base::Lock", %class.scoped_refptr, %"class.base::WeakPtrFactory" }
%"class.gpu::MemoryTracker" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.14 }
%class.scoped_refptr.14 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.15", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.16" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i8 }
%struct.WGPUDeviceImpl = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.313 }
%union.anon.313 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD" = type <{ %"struct.dawn_native::vulkan::ExternalImageDescriptorFD", i64, i32, [4 x i8] }>
%"struct.dawn_native::vulkan::ExternalImageDescriptorFD" = type { %"struct.dawn_native::vulkan::ExternalImageDescriptorVk.base", i32, %"class.std::__1::vector.294" }
%"struct.dawn_native::vulkan::ExternalImageDescriptorVk.base" = type { %"struct.dawn_native::ExternalImageDescriptor.base", i32, i32 }
%"struct.dawn_native::ExternalImageDescriptor.base" = type <{ i32, [4 x i8], %struct.WGPUTextureDescriptor*, i8 }>
%"class.std::__1::vector.294" = type { %"class.std::__1::__vector_base.295" }
%"class.std::__1::__vector_base.295" = type { i32*, i32*, %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { i32* }
%struct.GrVkImageInfo = type <{ %struct.VkImage_T*, %struct.GrVkAlloc, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], %struct.GrVkYcbcrConversionInfo, i32, [4 x i8] }>
%struct.VkImage_T = type opaque
%struct.GrVkAlloc = type <{ %struct.VkDeviceMemory_T*, i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%struct.VkDeviceMemory_T = type opaque
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.gpu::ExternalVkImageBacking" = type { %"class.gpu::ClearTrackingSharedImageBacking", %class.scoped_refptr.29, %"class.std::__1::unique_ptr.186", %class.GrBackendTexture, %"class.gpu::VulkanCommandPool"*, i8, [7 x i8], %"class.gpu::ExternalSemaphore", %"class.std::__1::vector.21", i8, i32, i32, %"class.gpu::gles2::Texture"*, %class.scoped_refptr.284, %"class.gpu::SharedMemoryRegionWrapper", i32, %"class.std::__1::vector.21" }
%"class.gpu::ClearTrackingSharedImageBacking" = type { %"class.gpu::SharedImageBacking", %"class.gfx::Rect" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.scoped_refptr.29 = type { %"class.gpu::SharedContextState"* }
%"class.gpu::SharedContextState" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.gpu::GLContextVirtualDelegate", %"class.base::RefCounted", %"class.GrContextOptions::ShaderErrorHandler", i8, i8, i8, %"class.base::OnceCallback", i32, %"class.gpu::SharedContextState::MemoryTrackerObserver", %"class.gpu::SharedContextState::MemoryTracker", %"class.gpu::MemoryTypeTracker", %"class.viz::VulkanContextProvider"*, %"class.viz::MetalContextProvider"*, %"class.viz::DawnContextProvider"*, %class.GrDirectContext*, %class.scoped_refptr.104, %class.scoped_refptr.105, %class.scoped_refptr.105, %class.scoped_refptr.106, %"class.gl::GLSurface"*, %class.scoped_refptr.107, %"class.std::__1::unique_ptr.130", %"class.gl::ProgressReporter"*, %class.sk_sp.136, %"class.std::__1::unique_ptr.137", i64, %"class.std::__1::vector.143", %"class.gpu::raster::GrShaderCache"*, i8, %"class.absl::optional.150", [4 x i8], %"class.base::ObserverList", %"class.base::MRUCache", i8, %"class.base::Time", i8, %"class.std::__1::unique_ptr.178", %"class.base::WeakPtrFactory.185" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.gpu::GLContextVirtualDelegate" = type { i32 (...)** }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.30 }
%class.scoped_refptr.30 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.31", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.31" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.gpu::SharedContextState::MemoryTrackerObserver" = type { %"class.gpu::MemoryTracker::Observer", i64, %"class.base::WeakPtr" }
%"class.gpu::MemoryTracker::Observer" = type { i32 (...)** }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.gpu::SharedContextState::MemoryTracker" = type { %"class.gpu::MemoryTracker", %"class.util::IdType", i64, %"class.gpu::MemoryTracker::Observer"*, i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.viz::MetalContextProvider" = type opaque
%"class.viz::DawnContextProvider" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %class.sk_sp.73, %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.33", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43" }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.73 = type { %class.GrGpu* }
%class.GrGpu = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %class.GrResourceCache* }
%class.GrResourceCache = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.scoped_refptr.104 = type { %"class.gl::GLShareGroup"* }
%"class.gl::GLShareGroup" = type opaque
%class.scoped_refptr.105 = type { %"class.gl::GLContext"* }
%"class.gl::GLContext" = type opaque
%class.scoped_refptr.106 = type { %"class.gl::GLSurface"* }
%"class.gl::GLSurface" = type opaque
%class.scoped_refptr.107 = type { %"class.gpu::gles2::FeatureInfo"* }
%"class.gpu::gles2::FeatureInfo" = type { %"class.base::RefCounted.108", i8, [3 x i8], %"struct.gpu::gles2::Validators", %"struct.gpu::gles2::DisallowedFeatures", i32, i8, %"class.base::internal::flat_tree.116", %"struct.gpu::gles2::FeatureInfo::FeatureFlags", %"class.gpu::GpuDriverBugWorkarounds", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.124" }
%"class.base::RefCounted.108" = type { %"class.base::subtle::RefCountedBase" }
%"struct.gpu::gles2::Validators" = type <{ %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::BackbufferAttachmentValidator", %"class.gpu::gles2::Validators::BlitFilterValidator", %"class.gpu::gles2::Validators::BufferModeValidator", %"class.gpu::gles2::Validators::BufferParameterValidator", %"class.gpu::gles2::Validators::BufferParameter64Validator", %"class.gpu::gles2::Validators::BufferTargetValidator", %"class.gpu::gles2::Validators::BufferUsageValidator", i8, %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::BufferfvValidator", %"class.gpu::gles2::Validators::BufferivValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::CmpFunctionValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::DrawModeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::FaceModeValidator", %"class.gpu::gles2::Validators::FaceTypeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::GetMaxIndexTypeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::HintModeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::IndexedBufferTargetValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::InternalFormatParameterValidator", %"class.gpu::gles2::Validators::MapBufferAccessValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::PixelStoreAlignmentValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::QueryObjectParameterValidator", %"class.gpu::gles2::Validators::QueryTargetValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::ResetStatusValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::ShaderPrecisionValidator", %"class.gpu::gles2::Validators::ShaderTypeValidator", %"class.gpu::gles2::Validators::SharedImageAccessModeValidator", [5 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::StencilOpValidator", %"class.gpu::gles2::Validators::StringTypeValidator", %"class.gpu::gles2::Validators::SwapBuffersFlagsValidator", [5 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::SyncParameterValidator", %"class.gpu::gles2::Validators::Texture3DTargetValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureCompareFuncValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureMagFilterModeValidator", %"class.gpu::gles2::Validators::TextureMinFilterModeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureSrgbDecodeExtValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureSwizzleValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureUsageValidator", %"class.gpu::gles2::Validators::TextureWrapModeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TransformFeedbackPrimitiveModeValidator", %"class.gpu::gles2::Validators::UniformBlockParameterValidator", %"class.gpu::gles2::Validators::UniformParameterValidator", %"class.gpu::gles2::Validators::VertexAttribITypeValidator", [4 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::WindowRectanglesModeValidator", [7 x i8] }>
%"class.gpu::gles2::Validators::BackbufferAttachmentValidator" = type { i8 }
%"class.gpu::gles2::Validators::BlitFilterValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferParameter64Validator" = type { i8 }
%"class.gpu::gles2::Validators::BufferTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferUsageValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferfvValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferivValidator" = type { i8 }
%"class.gpu::gles2::Validators::CmpFunctionValidator" = type { i8 }
%"class.gpu::gles2::Validators::DrawModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::FaceModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::FaceTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::GetMaxIndexTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::HintModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::IndexedBufferTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::InternalFormatParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::MapBufferAccessValidator" = type { i8 }
%"class.gpu::gles2::Validators::PixelStoreAlignmentValidator" = type { i8 }
%"class.gpu::gles2::Validators::QueryObjectParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::QueryTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::ResetStatusValidator" = type { i8 }
%"class.gpu::gles2::Validators::ShaderPrecisionValidator" = type { i8 }
%"class.gpu::gles2::Validators::ShaderTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::SharedImageAccessModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::StencilOpValidator" = type { i8 }
%"class.gpu::gles2::Validators::StringTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::SwapBuffersFlagsValidator" = type { i8 }
%"class.gpu::gles2::Validators::SyncParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::Texture3DTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureCompareFuncValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureMagFilterModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureMinFilterModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureSrgbDecodeExtValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureSwizzleValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureUsageValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureWrapModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TransformFeedbackPrimitiveModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::UniformBlockParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::UniformParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::VertexAttribITypeValidator" = type { i8 }
%"class.gpu::ValueValidator" = type { %"class.std::__1::vector.109" }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { i32*, i32*, %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { i32* }
%"class.gpu::gles2::Validators::WindowRectanglesModeValidator" = type { i8 }
%"struct.gpu::gles2::DisallowedFeatures" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.base::internal::flat_tree.116" = type { %"class.std::__1::vector.117" }
%"class.std::__1::vector.117" = type { %"class.std::__1::__vector_base.118" }
%"class.std::__1::__vector_base.118" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.119" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.base::BasicStringPiece"* }
%"struct.gpu::gles2::FeatureInfo::FeatureFlags" = type <{ %"struct.gpu::GpuMemoryBufferFormatSet", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"struct.gpu::GpuMemoryBufferFormatSet" = type { i32 }
%"class.gpu::GpuDriverBugWorkarounds" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32 }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.gl::GLVersionInfo"* }
%"struct.gl::GLVersionInfo" = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.gpu::gles2::ContextState"* }
%"struct.gpu::gles2::ContextState" = type opaque
%"class.gl::ProgressReporter" = type { i32 (...)** }
%class.sk_sp.136 = type { %class.GrDirectContext* }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.gpu::ServiceTransferCache"* }
%"class.gpu::ServiceTransferCache" = type opaque
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { i8*, i8*, %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { i8* }
%"class.gpu::raster::GrShaderCache" = type opaque
%"class.absl::optional.150" = type { %"class.absl::optional_internal::optional_data.151" }
%"class.absl::optional_internal::optional_data.151" = type { %"class.absl::optional_internal::optional_data_base.152" }
%"class.absl::optional_internal::optional_data_base.152" = type { %"class.absl::optional_internal::optional_data_dtor_base.153" }
%"class.absl::optional_internal::optional_data_dtor_base.153" = type { i8, %union.anon.154 }
%union.anon.154 = type { i32 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.159", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.159" = type { %"class.std::__1::__vector_base.160" }
%"class.std::__1::__vector_base.160" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.161" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.166" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.171", %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.gpu::ExternalSemaphorePool"* }
%"class.gpu::ExternalSemaphorePool" = type { %"class.gpu::SharedContextState"*, %"class.base::circular_deque", %"class.base::WeakPtrFactory.181" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.gpu::ExternalSemaphore"*, i64 }
%"class.base::WeakPtrFactory.181" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.185" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.gpu::VulkanImage"* }
%"class.gpu::VulkanImage" = type { %"class.gpu::VulkanDeviceQueue"*, %"class.gfx::Size", i32, i32, i32, i64, i32, i32, i32, i32, %"class.absl::optional.195", %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i32, %class.scoped_refptr.200, i64, i64, %"struct.std::__1::array" }
%"class.gpu::VulkanDeviceQueue" = type { %"class.base::internal::flat_tree.116", %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %struct.VkDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %struct.VkInstance_T*, %struct.VmaAllocator_T*, %"class.std::__1::unique_ptr.189", %struct.VkPhysicalDeviceFeatures2, i8, %struct.VkPhysicalDeviceProtectedMemoryFeatures }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%struct.VkInstance_T = type opaque
%struct.VmaAllocator_T = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.gpu::VulkanFenceHelper"* }
%"class.gpu::VulkanFenceHelper" = type opaque
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProtectedMemoryFeatures = type { i32, i8*, i32 }
%"class.absl::optional.195" = type { %"class.absl::optional_internal::optional_data.196" }
%"class.absl::optional_internal::optional_data.196" = type { %"class.absl::optional_internal::optional_data_base.197" }
%"class.absl::optional_internal::optional_data_base.197" = type { %"class.absl::optional_internal::optional_data_dtor_base.198" }
%"class.absl::optional_internal::optional_data_dtor_base.198" = type { i8, [7 x i8], %union.anon.199 }
%union.anon.199 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.200 = type { %"class.gfx::NativePixmap"* }
%"class.gfx::NativePixmap" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.201", [4 x i8] }>
%"class.base::RefCountedThreadSafe.201" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::array" = type { [4 x %struct.VkSubresourceLayout] }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%class.GrBackendTexture = type { i8, i32, i32, i8, i32, %union.anon.205, %class.sk_sp.206 }
%union.anon.205 = type { %class.GrGLBackendTextureInfo, [120 x i8] }
%class.GrGLBackendTextureInfo = type { %struct.GrGLTextureInfo, %class.GrGLTextureParameters* }
%struct.GrGLTextureInfo = type { i32, i32, i32 }
%class.GrGLTextureParameters = type { %class.SkNVRefCnt, %"struct.GrGLTextureParameters::SamplerOverriddenState", %"struct.GrGLTextureParameters::NonsamplerState", i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.GrGLTextureParameters::SamplerOverriddenState" = type <{ i32, i32, i32, i32, float, float, i8, [3 x i8] }>
%"struct.GrGLTextureParameters::NonsamplerState" = type <{ i32, i32, i8, [3 x i8] }>
%class.sk_sp.206 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type opaque
%"class.gpu::VulkanCommandPool" = type opaque
%"class.gpu::gles2::Texture" = type <{ %"class.gpu::TextureBase", %"class.std::__1::vector.207", %"class.base::internal::flat_tree.223", i8, [7 x i8], %"class.gpu::gles2::TextureRef"*, i32, i8, [3 x i8], i32, i32, %"struct.gpu::gles2::SamplerState", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i8, i8, i8, i8, i32, i32, i8, [7 x i8], %"struct.gpu::gles2::Texture::CompatibilitySwizzle"*, i8, [7 x i8] }>
%"class.gpu::TextureBase" = type { i32 (...)**, i32, i32, %"class.gpu::MailboxManager"* }
%"class.gpu::MailboxManager" = type opaque
%"class.std::__1::vector.207" = type { %"class.std::__1::__vector_base.208" }
%"class.std::__1::__vector_base.208" = type { %"struct.gpu::gles2::Texture::FaceInfo"*, %"struct.gpu::gles2::Texture::FaceInfo"*, %"class.std::__1::__compressed_pair.218" }
%"struct.gpu::gles2::Texture::FaceInfo" = type { i32, %"class.std::__1::vector.209" }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.gpu::gles2::Texture::LevelInfo"*, %"struct.gpu::gles2::Texture::LevelInfo"*, %"class.std::__1::__compressed_pair.213" }
%"struct.gpu::gles2::Texture::LevelInfo" = type <{ %"class.gfx::Rect", i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %class.scoped_refptr.211, i32, i32, i8, [7 x i8] }>
%class.scoped_refptr.211 = type { %"class.gl::GLImage"* }
%"class.gl::GLImage" = type { i32 (...)**, %"class.base::RefCounted.212", %"class.gfx::ColorSpace" }
%"class.base::RefCounted.212" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.gpu::gles2::Texture::LevelInfo"* }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.gpu::gles2::Texture::FaceInfo"* }
%"class.base::internal::flat_tree.223" = type { %"class.std::__1::vector.224" }
%"class.std::__1::vector.224" = type { %"class.std::__1::__vector_base.225" }
%"class.std::__1::__vector_base.225" = type { %"class.gpu::gles2::TextureRef"**, %"class.gpu::gles2::TextureRef"**, %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.gpu::gles2::TextureRef"** }
%"class.gpu::gles2::TextureRef" = type { %"class.base::RefCounted.226", %"class.gpu::gles2::TextureManager"*, %"class.gpu::gles2::Texture"*, i32, i32, i8, %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.273" }
%"class.base::RefCounted.226" = type { %"class.base::subtle::RefCountedBase" }
%"class.gpu::gles2::TextureManager" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.std::__1::unique_ptr.227", %"class.gpu::MemoryTracker"*, %class.scoped_refptr.107, %"class.std::__1::vector.233", %"class.std::__1::unordered_map", i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i8, [6 x i32], [6 x %class.scoped_refptr.259], %"class.std::__1::vector.260", i32, %"class.gl::ProgressReporter"*, %"class.gpu::ServiceDiscardableManager"* }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.gpu::MemoryTypeTracker"* }
%"class.std::__1::vector.233" = type { %"class.std::__1::__vector_base.234" }
%"class.std::__1::__vector_base.234" = type { %"class.gpu::gles2::FramebufferManager"**, %"class.gpu::gles2::FramebufferManager"**, %"class.std::__1::__compressed_pair.235" }
%"class.gpu::gles2::FramebufferManager" = type opaque
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.gpu::gles2::FramebufferManager"** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.240", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.255", [4 x i8] }>
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242", %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { float }
%class.scoped_refptr.259 = type { %"class.gpu::gles2::TextureRef"* }
%"class.std::__1::vector.260" = type { %"class.std::__1::__vector_base.261" }
%"class.std::__1::__vector_base.261" = type { %"class.gpu::gles2::TextureManager::DestructionObserver"**, %"class.gpu::gles2::TextureManager::DestructionObserver"**, %"class.std::__1::__compressed_pair.262" }
%"class.gpu::gles2::TextureManager::DestructionObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.gpu::gles2::TextureManager::DestructionObserver"** }
%"class.gpu::ServiceDiscardableManager" = type opaque
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.gpu::SharedImageRepresentationGLTexture"* }
%"class.gpu::SharedImageRepresentationGLTexture" = type { %"class.gpu::SharedImageRepresentationGLTextureBase.base", [6 x i8] }
%"class.gpu::SharedImageRepresentationGLTextureBase.base" = type { %"class.gpu::SharedImageRepresentation.base" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.gpu::SharedImageRepresentationGLTextureBase::ScopedAccess"* }
%"class.gpu::SharedImageRepresentationGLTextureBase::ScopedAccess" = type { %"class.gpu::SharedImageRepresentation::ScopedAccessBase" }
%"class.gpu::SharedImageRepresentation::ScopedAccessBase" = type { %"class.gpu::SharedImageRepresentationGLTextureBase"* }
%"class.gpu::SharedImageRepresentationGLTextureBase" = type { %"class.gpu::SharedImageRepresentation.base", [6 x i8] }
%"struct.gpu::gles2::SamplerState" = type { i32, i32, i32, i32, i32, i32, i32, float, float, float }
%"struct.gpu::gles2::Texture::CompatibilitySwizzle" = type { i32, i32, i32, i32, i32, i32 }
%class.scoped_refptr.284 = type { %"class.gpu::gles2::TexturePassthrough"* }
%"class.gpu::gles2::TexturePassthrough" = type { %"class.gpu::TextureBase", %"class.base::RefCounted.285", %"class.base::SupportsWeakPtr", i32, i8, i8, i64, %"class.std::__1::vector.286" }
%"class.base::RefCounted.285" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.std::__1::vector.286" = type { %"class.std::__1::__vector_base.287" }
%"class.std::__1::__vector_base.287" = type { %"class.std::__1::vector.288"*, %"class.std::__1::vector.288"*, %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::vector.288" = type opaque
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.std::__1::vector.288"* }
%"class.gpu::SharedMemoryRegionWrapper" = type { %"class.base::WritableSharedMemoryMapping", i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.dawn_native::vulkan::ExternalImageDescriptorVk" = type { %"struct.dawn_native::ExternalImageDescriptor.base", i32, i32, [4 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD" = type { %"struct.dawn_native::vulkan::ExternalImageExportInfoFD" }
%"struct.dawn_native::vulkan::ExternalImageExportInfoFD" = type { %"struct.dawn_native::vulkan::ExternalImageExportInfoVk", %"class.std::__1::vector.294" }
%"struct.dawn_native::vulkan::ExternalImageExportInfoVk" = type { %"struct.dawn_native::ExternalImageExportInfo.base", i32, i32 }
%"struct.dawn_native::ExternalImageExportInfo.base" = type <{ i32, i8 }>
%class.GrBackendSurfaceMutableState = type <{ %union.anon.301, i32, i8, [3 x i8] }>
%union.anon.301 = type { %class.GrVkSharedImageInfo }
%class.GrVkSharedImageInfo = type { %"struct.std::__1::atomic.302", %"struct.std::__1::atomic.306" }
%"struct.std::__1::atomic.302" = type { %"struct.std::__1::__atomic_base.303" }
%"struct.std::__1::__atomic_base.303" = type { %"struct.std::__1::__cxx_atomic_impl.304" }
%"struct.std::__1::__cxx_atomic_impl.304" = type { %"struct.std::__1::__cxx_atomic_base_impl.305" }
%"struct.std::__1::__cxx_atomic_base_impl.305" = type { i32 }
%"struct.std::__1::atomic.306" = type { %"struct.std::__1::__atomic_base.307" }
%"struct.std::__1::__atomic_base.307" = type { %"struct.std::__1::__atomic_base.308" }
%"struct.std::__1::__atomic_base.308" = type { %"struct.std::__1::__cxx_atomic_impl.309" }
%"struct.std::__1::__cxx_atomic_impl.309" = type { %"struct.std::__1::__cxx_atomic_base_impl.310" }
%"struct.std::__1::__cxx_atomic_base_impl.310" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev = comdat any

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = comdat any

@_ZTVN3gpu33ExternalVkImageDawnRepresentationE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::ExternalVkImageDawnRepresentation"*)* @_ZN3gpu33ExternalVkImageDawnRepresentationD2Ev to i8*), i8* bitcast (void (%"class.gpu::ExternalVkImageDawnRepresentation"*)* @_ZN3gpu33ExternalVkImageDawnRepresentationD0Ev to i8*), i8* bitcast (%struct.WGPUTextureImpl* (%"class.gpu::ExternalVkImageDawnRepresentation"*, i32)* @_ZN3gpu33ExternalVkImageDawnRepresentation11BeginAccessE16WGPUTextureUsage to i8*), i8* bitcast (void (%"class.gpu::ExternalVkImageDawnRepresentation"*)* @_ZN3gpu33ExternalVkImageDawnRepresentation9EndAccessEv to i8*)] }, align 8
@_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev to i8*), i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [28 x i8] c"../../base/scoped_generic.h\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"!receiving_\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"ScopedGeneric destroyed with active receiver\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN3gpu33ExternalVkImageDawnRepresentationC1EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerEP14WGPUDeviceImpl17WGPUTextureFormatN4base13ScopedGenericIiNSA_8internal19ScopedFDCloseTraitsEEE = hidden unnamed_addr alias void (%"class.gpu::ExternalVkImageDawnRepresentation"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, %struct.WGPUDeviceImpl*, i32, %"class.base::ScopedGeneric"*), void (%"class.gpu::ExternalVkImageDawnRepresentation"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, %struct.WGPUDeviceImpl*, i32, %"class.base::ScopedGeneric"*)* @_ZN3gpu33ExternalVkImageDawnRepresentationC2EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerEP14WGPUDeviceImpl17WGPUTextureFormatN4base13ScopedGenericIiNSA_8internal19ScopedFDCloseTraitsEEE
@_ZN3gpu33ExternalVkImageDawnRepresentationD1Ev = hidden unnamed_addr alias void (%"class.gpu::ExternalVkImageDawnRepresentation"*), void (%"class.gpu::ExternalVkImageDawnRepresentation"*)* @_ZN3gpu33ExternalVkImageDawnRepresentationD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu33ExternalVkImageDawnRepresentationC2EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerEP14WGPUDeviceImpl17WGPUTextureFormatN4base13ScopedGenericIiNSA_8internal19ScopedFDCloseTraitsEEE(%"class.gpu::ExternalVkImageDawnRepresentation"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, %struct.WGPUDeviceImpl*, i32, %"class.base::ScopedGeneric"*) unnamed_addr #0 align 2 {
  %8 = bitcast %"class.gpu::ExternalVkImageDawnRepresentation"* %0 to %"class.gpu::SharedImageRepresentation"*
  tail call void @_ZN3gpu25SharedImageRepresentationC2EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageRepresentation"* %8, %"class.gpu::SharedImageManager"* %1, %"class.gpu::SharedImageBacking"* %2, %"class.gpu::MemoryTypeTracker"* %3) #8
  %9 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu33ExternalVkImageDawnRepresentationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 1
  store %struct.WGPUDeviceImpl* %4, %struct.WGPUDeviceImpl** %10, align 8
  %11 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 2
  store i32 %5, i32* %11, align 8
  %12 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %12, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 4, i32 1
  %15 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %6, i64 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 8
  store i32 -1, i32* %15, align 8
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %18, label %21

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %14, i64 0, i32 0
  store i32 -1, i32* %19, align 4
  %20 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 4, i32 2
  store i8 0, i8* %20, align 4
  br label %24

21:                                               ; preds = %7
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %6, i32 %16) #8
  %22 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %14, i64 0, i32 0
  store i32 %16, i32* %22, align 4
  %23 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 4, i32 2
  store i8 0, i8* %23, align 4
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %12, i32 %16) #8
  br label %24

24:                                               ; preds = %18, %21
  %25 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 5
  store %struct.WGPUTextureImpl* null, %struct.WGPUTextureImpl** %25, align 8
  %26 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 6
  %27 = tail call dereferenceable(1200) %struct.DawnProcTable* @_ZN11dawn_native8GetProcsEv() #8
  %28 = bitcast %struct.DawnProcTable* %26 to i8*
  %29 = bitcast %struct.DawnProcTable* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 1200, i1 false)
  %30 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 7
  %31 = bitcast %"class.std::__1::vector.21"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #8
  %32 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 6, i32 70
  %33 = load void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)** %32, align 8
  %34 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %10, align 8
  tail call void %33(%struct.WGPUDeviceImpl* %34) #8
  ret void
}

declare dereferenceable(1200) %struct.DawnProcTable* @_ZN11dawn_native8GetProcsEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu33ExternalVkImageDawnRepresentationD2Ev(%"class.gpu::ExternalVkImageDawnRepresentation"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu33ExternalVkImageDawnRepresentationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN3gpu33ExternalVkImageDawnRepresentation9EndAccessEv(%"class.gpu::ExternalVkImageDawnRepresentation"* %0)
  %3 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 6, i32 71
  %4 = load void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)** %3, align 8
  %5 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 1
  %6 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %5, align 8
  tail call void %4(%struct.WGPUDeviceImpl* %6) #8
  %7 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.gpu::ExternalSemaphore"*, %"class.gpu::ExternalSemaphore"** %8, align 8
  %10 = icmp eq %"class.gpu::ExternalSemaphore"* %9, null
  br i1 %10, label %25, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.gpu::ExternalSemaphore"* %9 to i8*
  %13 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 7, i32 0, i32 1
  %14 = load %"class.gpu::ExternalSemaphore"*, %"class.gpu::ExternalSemaphore"** %13, align 8
  %15 = icmp eq %"class.gpu::ExternalSemaphore"* %14, %9
  br i1 %15, label %23, label %16

16:                                               ; preds = %11, %16
  %17 = phi %"class.gpu::ExternalSemaphore"* [ %18, %16 ], [ %14, %11 ]
  %18 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %17, i64 -1
  tail call void @_ZN3gpu17ExternalSemaphoreD1Ev(%"class.gpu::ExternalSemaphore"* %18) #8
  %19 = icmp eq %"class.gpu::ExternalSemaphore"* %18, %9
  br i1 %19, label %20, label %16

20:                                               ; preds = %16
  %21 = bitcast %"class.std::__1::vector.21"* %7 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %11
  %24 = phi i8* [ %22, %20 ], [ %12, %11 ]
  store %"class.gpu::ExternalSemaphore"* %9, %"class.gpu::ExternalSemaphore"** %13, align 8
  tail call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %1, %23
  %26 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 4
  tail call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* %26) #8
  %27 = bitcast %"class.gpu::ExternalVkImageDawnRepresentation"* %0 to %"class.gpu::SharedImageRepresentation"*
  tail call void @_ZN3gpu25SharedImageRepresentationD2Ev(%"class.gpu::SharedImageRepresentation"* %27) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0)) #8
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i64 44) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  br label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %0, i32 %13) #8
  %16 = load i32, i32* %12, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %16) #8
  store i32 -1, i32* %12, align 8
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu33ExternalVkImageDawnRepresentationD0Ev(%"class.gpu::ExternalVkImageDawnRepresentation"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu33ExternalVkImageDawnRepresentationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN3gpu33ExternalVkImageDawnRepresentation9EndAccessEv(%"class.gpu::ExternalVkImageDawnRepresentation"* %0) #8
  %3 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 6, i32 71
  %4 = load void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)** %3, align 8
  %5 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 1
  %6 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %5, align 8
  tail call void %4(%struct.WGPUDeviceImpl* %6) #8
  %7 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.gpu::ExternalSemaphore"*, %"class.gpu::ExternalSemaphore"** %8, align 8
  %10 = icmp eq %"class.gpu::ExternalSemaphore"* %9, null
  br i1 %10, label %25, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.gpu::ExternalSemaphore"* %9 to i8*
  %13 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 7, i32 0, i32 1
  %14 = load %"class.gpu::ExternalSemaphore"*, %"class.gpu::ExternalSemaphore"** %13, align 8
  %15 = icmp eq %"class.gpu::ExternalSemaphore"* %14, %9
  br i1 %15, label %23, label %16

16:                                               ; preds = %11, %16
  %17 = phi %"class.gpu::ExternalSemaphore"* [ %18, %16 ], [ %14, %11 ]
  %18 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %17, i64 -1
  tail call void @_ZN3gpu17ExternalSemaphoreD1Ev(%"class.gpu::ExternalSemaphore"* %18) #8
  %19 = icmp eq %"class.gpu::ExternalSemaphore"* %18, %9
  br i1 %19, label %20, label %16

20:                                               ; preds = %16
  %21 = bitcast %"class.std::__1::vector.21"* %7 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %11
  %24 = phi i8* [ %22, %20 ], [ %12, %11 ]
  store %"class.gpu::ExternalSemaphore"* %9, %"class.gpu::ExternalSemaphore"** %13, align 8
  tail call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %1, %23
  %26 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 4
  tail call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* %26) #8
  %27 = bitcast %"class.gpu::ExternalVkImageDawnRepresentation"* %0 to %"class.gpu::SharedImageRepresentation"*
  tail call void @_ZN3gpu25SharedImageRepresentationD2Ev(%"class.gpu::SharedImageRepresentation"* %27) #8
  %28 = bitcast %"class.gpu::ExternalVkImageDawnRepresentation"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct.WGPUTextureImpl* @_ZN3gpu33ExternalVkImageDawnRepresentation11BeginAccessE16WGPUTextureUsage(%"class.gpu::ExternalVkImageDawnRepresentation"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %struct.WGPUTextureDescriptor, align 8
  %4 = alloca %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD", align 8
  %5 = alloca %struct.GrVkImageInfo, align 8
  %6 = alloca %"class.base::ScopedGeneric", align 8
  %7 = alloca %"class.gpu::SemaphoreHandle", align 8
  %8 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = bitcast %"class.gpu::SharedImageBacking"** %8 to %"class.gpu::ExternalVkImageBacking"**
  %10 = load %"class.gpu::ExternalVkImageBacking"*, %"class.gpu::ExternalVkImageBacking"** %9, align 8
  %11 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 7
  %12 = tail call zeroext i1 @_ZN3gpu22ExternalVkImageBacking11BeginAccessEbPNSt3__16vectorINS_17ExternalSemaphoreENS1_9allocatorIS3_EEEEb(%"class.gpu::ExternalVkImageBacking"* %10, i1 zeroext false, %"class.std::__1::vector.21"* %11, i1 zeroext false) #8
  br i1 %12, label %13, label %195

13:                                               ; preds = %2
  %14 = bitcast %struct.WGPUTextureDescriptor* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 2
  %16 = bitcast %struct.WGPUTextureDescriptor* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 16, i1 false)
  %17 = load i32, i32* %15, align 8
  %18 = getelementptr inbounds %struct.WGPUTextureDescriptor, %struct.WGPUTextureDescriptor* %3, i64 0, i32 5
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %struct.WGPUTextureDescriptor, %struct.WGPUTextureDescriptor* %3, i64 0, i32 2
  store i32 %1, i32* %19, align 8
  %20 = getelementptr inbounds %struct.WGPUTextureDescriptor, %struct.WGPUTextureDescriptor* %3, i64 0, i32 3
  store i32 1, i32* %20, align 4
  %21 = load %"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageBacking"** %8, align 8
  %22 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %21, i64 0, i32 4, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %21, i64 0, i32 4, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.WGPUTextureDescriptor, %struct.WGPUTextureDescriptor* %3, i64 0, i32 4, i32 0
  store i32 %23, i32* %26, align 8
  %27 = getelementptr inbounds %struct.WGPUTextureDescriptor, %struct.WGPUTextureDescriptor* %3, i64 0, i32 4, i32 1
  store i32 %25, i32* %27, align 4
  %28 = getelementptr inbounds %struct.WGPUTextureDescriptor, %struct.WGPUTextureDescriptor* %3, i64 0, i32 4, i32 2
  store i32 1, i32* %28, align 8
  %29 = getelementptr inbounds %struct.WGPUTextureDescriptor, %struct.WGPUTextureDescriptor* %3, i64 0, i32 6
  store i32 1, i32* %29, align 8
  %30 = getelementptr inbounds %struct.WGPUTextureDescriptor, %struct.WGPUTextureDescriptor* %3, i64 0, i32 7
  store i32 1, i32* %30, align 4
  %31 = bitcast %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %31) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 72, i1 false)
  call void @_ZN11dawn_native6vulkan31ExternalImageDescriptorOpaqueFDC1Ev(%"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD"* nonnull %4) #8
  %32 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  store %struct.WGPUTextureDescriptor* %3, %struct.WGPUTextureDescriptor** %32, align 8
  %33 = load %"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageBacking"** %8, align 8
  %34 = bitcast %"class.gpu::SharedImageBacking"* %33 to { i64, i64 } (%"class.gpu::SharedImageBacking"*)***
  %35 = load { i64, i64 } (%"class.gpu::SharedImageBacking"*)**, { i64, i64 } (%"class.gpu::SharedImageBacking"*)*** %34, align 8
  %36 = getelementptr inbounds { i64, i64 } (%"class.gpu::SharedImageBacking"*)*, { i64, i64 } (%"class.gpu::SharedImageBacking"*)** %35, i64 2
  %37 = load { i64, i64 } (%"class.gpu::SharedImageBacking"*)*, { i64, i64 } (%"class.gpu::SharedImageBacking"*)** %36, align 8
  %38 = call { i64, i64 } %37(%"class.gpu::SharedImageBacking"* %33) #8
  %39 = extractvalue { i64, i64 } %38, 0
  %40 = trunc i64 %39 to i32
  %41 = extractvalue { i64, i64 } %38, 1
  %42 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %33, i64 0, i32 4
  %43 = bitcast %"class.gfx::Size"* %42 to i64*
  %44 = load i64, i64* %43, align 4
  %45 = icmp eq i32 %40, 0
  %46 = icmp ult i64 %39, 4294967296
  %47 = and i1 %46, %45
  br i1 %47, label %48, label %59

48:                                               ; preds = %13
  %49 = trunc i64 %41 to i32
  %50 = trunc i64 %44 to i32
  %51 = icmp eq i32 %49, %50
  br i1 %51, label %52, label %59

52:                                               ; preds = %48
  %53 = lshr i64 %41, 32
  %54 = trunc i64 %53 to i32
  %55 = lshr i64 %44, 32
  %56 = trunc i64 %55 to i32
  %57 = icmp eq i32 %54, %56
  %58 = zext i1 %57 to i8
  br label %59

59:                                               ; preds = %13, %48, %52
  %60 = phi i8 [ 0, %48 ], [ %58, %52 ], [ 0, %13 ]
  %61 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD"* %4, i64 0, i32 0, i32 0, i32 0, i32 3
  store i8 %60, i8* %61, align 8
  %62 = load %"class.gpu::ExternalVkImageBacking"*, %"class.gpu::ExternalVkImageBacking"** %9, align 8
  %63 = getelementptr inbounds %"class.gpu::ExternalVkImageBacking", %"class.gpu::ExternalVkImageBacking"* %62, i64 0, i32 2, i32 0, i32 0, i32 0
  %64 = load %"class.gpu::VulkanImage"*, %"class.gpu::VulkanImage"** %63, align 8
  %65 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %64, i64 0, i32 5
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD"* %4, i64 0, i32 1
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %64, i64 0, i32 6
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD"* %4, i64 0, i32 2
  store i32 %69, i32* %70, align 8
  %71 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 4, i32 1, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = call i32 @dup(i32 %72) #8
  %74 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD"* %4, i64 0, i32 0, i32 1
  store i32 %73, i32* %74, align 4
  %75 = load %"class.gpu::ExternalVkImageBacking"*, %"class.gpu::ExternalVkImageBacking"** %9, align 8
  %76 = getelementptr inbounds %"class.gpu::ExternalVkImageBacking", %"class.gpu::ExternalVkImageBacking"* %75, i64 0, i32 3
  %77 = bitcast %struct.GrVkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %77) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 144, i1 false)
  %78 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 1, i32 5
  store i64 0, i64* %78, align 8
  %79 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 1, i32 6
  store i8 0, i8* %79, align 8
  %80 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 2
  %81 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 36, i1 false) #8
  %82 = bitcast i32* %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 16, i1 false) #8
  store i32 1, i32* %81, align 8
  %83 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 7
  store i32 0, i32* %83, align 4
  %84 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 8
  store i32 -1, i32* %84, align 8
  %85 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 9
  store i8 0, i8* %85, align 4
  %86 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 11, i32 0
  store i32 0, i32* %86, align 8
  %87 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 11, i32 2
  %88 = bitcast i64* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 36, i1 false) #8
  %89 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 12
  store i32 0, i32* %89, align 8
  %90 = call zeroext i1 @_ZNK16GrBackendTexture14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendTexture* %76, %struct.GrVkImageInfo* nonnull %5) #8
  %91 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 3
  %92 = load i32, i32* %91, align 4
  %93 = bitcast %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD"* %4 to %"struct.dawn_native::vulkan::ExternalImageDescriptorVk"*
  %94 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD"* %4, i64 0, i32 0, i32 0, i32 1
  store i32 %92, i32* %94, align 4
  %95 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD"* %4, i64 0, i32 0, i32 0, i32 2
  store i32 %92, i32* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %11, i64 0, i32 0, i32 0
  %97 = load %"class.gpu::ExternalSemaphore"*, %"class.gpu::ExternalSemaphore"** %96, align 8
  %98 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 7, i32 0, i32 1
  %99 = load %"class.gpu::ExternalSemaphore"*, %"class.gpu::ExternalSemaphore"** %98, align 8
  %100 = icmp eq %"class.gpu::ExternalSemaphore"* %97, %99
  br i1 %100, label %116, label %101

101:                                              ; preds = %59
  %102 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD"* %4, i64 0, i32 0, i32 2
  %103 = bitcast %"class.base::ScopedGeneric"* %6 to i8*
  %104 = bitcast %"class.gpu::SemaphoreHandle"* %7 to i8*
  %105 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %6, i64 0, i32 0
  %106 = getelementptr inbounds %"class.gpu::SemaphoreHandle", %"class.gpu::SemaphoreHandle"* %7, i64 0, i32 2, i32 1, i32 0
  %107 = getelementptr inbounds %"class.gpu::SemaphoreHandle", %"class.gpu::SemaphoreHandle"* %7, i64 0, i32 2
  %108 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %6, i64 0, i32 1, i32 0
  %109 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %6, i64 0, i32 2
  %110 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %6, i64 0, i32 1, i32 0
  %111 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD"* %4, i64 0, i32 0, i32 2, i32 0, i32 1
  %112 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD"* %4, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %113 = bitcast i32** %111 to i64*
  %114 = bitcast %"class.std::__1::vector.294"* %102 to i64*
  %115 = bitcast i32** %112 to i64*
  br label %130

116:                                              ; preds = %192, %59
  %117 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 1
  %118 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %117, align 8
  %119 = call %struct.WGPUTextureImpl* @_ZN11dawn_native6vulkan15WrapVulkanImageEP14WGPUDeviceImplPKNS0_25ExternalImageDescriptorVkE(%struct.WGPUDeviceImpl* %118, %"struct.dawn_native::vulkan::ExternalImageDescriptorVk"* nonnull %93) #8
  %120 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 5
  store %struct.WGPUTextureImpl* %119, %struct.WGPUTextureImpl** %120, align 8
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %77) #8
  %121 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %122 = load i32*, i32** %121, align 8
  %123 = icmp eq i32* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %116
  %125 = ptrtoint i32* %122 to i64
  %126 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD"* %4, i64 0, i32 0, i32 2, i32 0, i32 1
  %127 = bitcast i32** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = bitcast i32* %122 to i8*
  call void @_ZdlPv(i8* %128) #9
  br label %129

129:                                              ; preds = %116, %124
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #8
  br label %195

130:                                              ; preds = %101, %192
  %131 = phi %"class.gpu::ExternalSemaphore"* [ %97, %101 ], [ %193, %192 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #8
  %132 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %131, i64 0, i32 2
  call void @_ZNK3gpu15SemaphoreHandle9DuplicateEv(%"class.gpu::SemaphoreHandle"* nonnull sret %7, %"class.gpu::SemaphoreHandle"* %132) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %105, align 8, !alias.scope !3
  %133 = load i32, i32* %106, align 8, !noalias !3
  store i32 -1, i32* %106, align 8, !noalias !3
  %134 = icmp eq i32 %133, -1
  br i1 %134, label %135, label %136

135:                                              ; preds = %130
  store i8 0, i8* %109, align 4, !alias.scope !3
  store i32 -1, i32* %110, align 8
  br label %140

136:                                              ; preds = %130
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %107, i32 %133) #8, !noalias !3
  store i32 %133, i32* %108, align 8, !alias.scope !3
  store i8 0, i8* %109, align 4, !alias.scope !3
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %6, i32 %133) #8
  %137 = load i32, i32* %110, align 8
  store i32 -1, i32* %110, align 8
  %138 = icmp eq i32 %137, -1
  br i1 %138, label %140, label %139

139:                                              ; preds = %136
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %6, i32 %137) #8
  br label %140

140:                                              ; preds = %135, %136, %139
  %141 = phi i32 [ -1, %135 ], [ -1, %136 ], [ %137, %139 ]
  %142 = load i32*, i32** %111, align 8
  %143 = load i32*, i32** %112, align 8
  %144 = icmp ult i32* %142, %143
  %145 = ptrtoint i32* %143 to i64
  br i1 %144, label %146, label %149

146:                                              ; preds = %140
  store i32 %141, i32* %142, align 4
  %147 = getelementptr inbounds i32, i32* %142, i64 1
  %148 = ptrtoint i32* %147 to i64
  store i64 %148, i64* %113, align 8
  br label %192

149:                                              ; preds = %140
  %150 = ptrtoint i32* %142 to i64
  %151 = load i64, i64* %114, align 8
  %152 = sub i64 %150, %151
  %153 = ashr exact i64 %152, 2
  %154 = add nsw i64 %153, 1
  %155 = icmp ugt i64 %154, 4611686018427387903
  br i1 %155, label %156, label %158

156:                                              ; preds = %149
  %157 = bitcast %"class.std::__1::vector.294"* %102 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %157) #10
  unreachable

158:                                              ; preds = %149
  %159 = sub i64 %145, %151
  %160 = ashr exact i64 %159, 2
  %161 = icmp ult i64 %160, 2305843009213693951
  br i1 %161, label %162, label %170

162:                                              ; preds = %158
  %163 = ashr exact i64 %159, 1
  %164 = icmp ult i64 %163, %154
  %165 = select i1 %164, i64 %154, i64 %163
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %175, label %167

167:                                              ; preds = %162
  %168 = icmp ugt i64 %165, 4611686018427387903
  br i1 %168, label %169, label %170

169:                                              ; preds = %167
  call void @abort() #10
  unreachable

170:                                              ; preds = %167, %158
  %171 = phi i64 [ %165, %167 ], [ 4611686018427387903, %158 ]
  %172 = shl i64 %171, 2
  %173 = call i8* @_Znwm(i64 %172) #9
  %174 = bitcast i8* %173 to i32*
  br label %175

175:                                              ; preds = %170, %162
  %176 = phi i64 [ %171, %170 ], [ 0, %162 ]
  %177 = phi i8* [ %173, %170 ], [ null, %162 ]
  %178 = phi i32* [ %174, %170 ], [ null, %162 ]
  %179 = getelementptr inbounds i32, i32* %178, i64 %153
  %180 = getelementptr inbounds i32, i32* %178, i64 %176
  %181 = ptrtoint i32* %180 to i64
  store i32 %141, i32* %179, align 4
  %182 = getelementptr inbounds i32, i32* %179, i64 1
  %183 = ptrtoint i32* %182 to i64
  %184 = ptrtoint i32* %178 to i64
  %185 = icmp sgt i64 %152, 0
  br i1 %185, label %186, label %188

186:                                              ; preds = %175
  %187 = inttoptr i64 %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %177, i8* align 4 %187, i64 %152, i1 false) #8
  br label %188

188:                                              ; preds = %186, %175
  store i64 %184, i64* %114, align 8
  store i64 %183, i64* %113, align 8
  store i64 %181, i64* %115, align 8
  %189 = icmp eq i64 %151, 0
  br i1 %189, label %192, label %190

190:                                              ; preds = %188
  %191 = inttoptr i64 %151 to i8*
  call void @_ZdlPv(i8* %191) #9
  br label %192

192:                                              ; preds = %146, %188, %190
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %6) #8
  call void @_ZN3gpu15SemaphoreHandleD1Ev(%"class.gpu::SemaphoreHandle"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #8
  %193 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %131, i64 1
  %194 = icmp eq %"class.gpu::ExternalSemaphore"* %193, %99
  br i1 %194, label %116, label %130

195:                                              ; preds = %2, %129
  %196 = phi %struct.WGPUTextureImpl* [ %119, %129 ], [ null, %2 ]
  ret %struct.WGPUTextureImpl* %196
}

declare zeroext i1 @_ZN3gpu22ExternalVkImageBacking11BeginAccessEbPNSt3__16vectorINS_17ExternalSemaphoreENS1_9allocatorIS3_EEEEb(%"class.gpu::ExternalVkImageBacking"*, i1 zeroext, %"class.std::__1::vector.21"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN11dawn_native6vulkan31ExternalImageDescriptorOpaqueFDC1Ev(%"struct.dawn_native::vulkan::ExternalImageDescriptorOpaqueFD"*) unnamed_addr #1

; Function Attrs: nounwind
declare i32 @dup(i32) local_unnamed_addr #4

declare zeroext i1 @_ZNK16GrBackendTexture14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendTexture*, %struct.GrVkImageInfo*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gpu15SemaphoreHandleD1Ev(%"class.gpu::SemaphoreHandle"*) unnamed_addr #4

declare %struct.WGPUTextureImpl* @_ZN11dawn_native6vulkan15WrapVulkanImageEP14WGPUDeviceImplPKNS0_25ExternalImageDescriptorVkE(%struct.WGPUDeviceImpl*, %"struct.dawn_native::vulkan::ExternalImageDescriptorVk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu33ExternalVkImageDawnRepresentation9EndAccessEv(%"class.gpu::ExternalVkImageDawnRepresentation"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.gfx::Rect", align 4
  %3 = alloca %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD", align 8
  %4 = alloca %class.GrBackendTexture, align 8
  %5 = alloca %class.GrBackendSurfaceMutableState, align 4
  %6 = alloca %"class.gpu::SemaphoreHandle", align 8
  %7 = alloca %"class.base::ScopedGeneric", align 8
  %8 = alloca %"class.gpu::ExternalSemaphore", align 8
  %9 = alloca %"class.gpu::SemaphoreHandle", align 8
  %10 = alloca %"class.gpu::ExternalSemaphore", align 8
  %11 = alloca %"class.std::__1::vector.21", align 16
  %12 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 5
  %13 = load %struct.WGPUTextureImpl*, %struct.WGPUTextureImpl** %12, align 8
  %14 = icmp eq %struct.WGPUTextureImpl* %13, null
  br i1 %14, label %127, label %15

15:                                               ; preds = %1
  %16 = bitcast %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false)
  call void @_ZN11dawn_native6vulkan31ExternalImageExportInfoOpaqueFDC1Ev(%"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD"* nonnull %3) #8
  %17 = load %struct.WGPUTextureImpl*, %struct.WGPUTextureImpl** %12, align 8
  %18 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD"* %3, i64 0, i32 0, i32 0
  %19 = call zeroext i1 @_ZN11dawn_native6vulkan17ExportVulkanImageEP15WGPUTextureImpl13VkImageLayoutPNS0_25ExternalImageExportInfoVkE(%struct.WGPUTextureImpl* %17, i32 0, %"struct.dawn_native::vulkan::ExternalImageExportInfoVk"* nonnull %18) #8
  br i1 %19, label %20, label %70

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %39, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 0, i32 0, i32 2
  %26 = load %"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageBacking"** %25, align 8
  %27 = bitcast %"class.gfx::Rect"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %26, i64 0, i32 4
  %29 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  store i32 0, i32* %30, align 4
  %31 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1
  %32 = bitcast %"class.gfx::Size"* %28 to i64*
  %33 = bitcast %"class.gfx::Size"* %31 to i64*
  %34 = load i64, i64* %32, align 4
  store i64 %34, i64* %33, align 4
  %35 = bitcast %"class.gpu::SharedImageBacking"* %26 to void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)***
  %36 = load void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)**, void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)*, void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)** %36, i64 3
  %38 = load void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)*, void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)** %37, align 8
  call void %38(%"class.gpu::SharedImageBacking"* %26, %"class.gfx::Rect"* nonnull dereferenceable(16) %2) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #8
  br label %39

39:                                               ; preds = %20, %24
  %40 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %40) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 176, i1 false)
  %41 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = bitcast %"class.gpu::SharedImageBacking"** %41 to %"class.gpu::ExternalVkImageBacking"**
  %43 = load %"class.gpu::ExternalVkImageBacking"*, %"class.gpu::ExternalVkImageBacking"** %42, align 8
  %44 = getelementptr inbounds %"class.gpu::ExternalVkImageBacking", %"class.gpu::ExternalVkImageBacking"* %43, i64 0, i32 3
  call void @_ZN16GrBackendTextureC1ERKS_(%class.GrBackendTexture* nonnull %4, %class.GrBackendTexture* dereferenceable(176) %44) #8
  %45 = bitcast %class.GrBackendSurfaceMutableState* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD"* %3, i64 0, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 -2, i32* %49, align 4
  %50 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %5, i64 0, i32 1
  store i32 1, i32* %50, align 4
  %51 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %5, i64 0, i32 2
  store i8 1, i8* %51, align 4
  call void @_ZN16GrBackendTexture15setMutableStateERK28GrBackendSurfaceMutableState(%class.GrBackendTexture* nonnull %4, %class.GrBackendSurfaceMutableState* nonnull dereferenceable(16) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #8
  %52 = bitcast %"class.gpu::SemaphoreHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #8
  %53 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %54 = bitcast %"class.gpu::SemaphoreHandle"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 24, i1 false)
  %55 = load i32*, i32** %53, align 8
  %56 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %7, i64 0, i32 1, i32 0
  %58 = load i32, i32* %55, align 4
  store i32 %58, i32* %57, align 8
  %59 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %7, i64 0, i32 2
  store i8 0, i8* %59, align 4
  %60 = icmp eq i32 %58, -1
  br i1 %60, label %62, label %61

61:                                               ; preds = %39
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %7, i32 %58) #8
  br label %62

62:                                               ; preds = %39, %61
  call void @_ZN3gpu15SemaphoreHandleC1E37VkExternalSemaphoreHandleTypeFlagBitsN4base13ScopedGenericIiNS2_8internal19ScopedFDCloseTraitsEEE(%"class.gpu::SemaphoreHandle"* nonnull %6, i32 1, %"class.base::ScopedGeneric"* nonnull %7) #8
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %7) #8
  %63 = bitcast %"class.gpu::ExternalSemaphore"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %63) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 48, i1 false)
  %64 = load %"class.gpu::ExternalVkImageBacking"*, %"class.gpu::ExternalVkImageBacking"** %42, align 8
  %65 = getelementptr inbounds %"class.gpu::ExternalVkImageBacking", %"class.gpu::ExternalVkImageBacking"* %64, i64 0, i32 1, i32 0
  %66 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %65, align 8
  %67 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %66, i64 0, i32 12
  %68 = load %"class.viz::VulkanContextProvider"*, %"class.viz::VulkanContextProvider"** %67, align 8
  call void @_ZN3gpu15SemaphoreHandleC1EOS0_(%"class.gpu::SemaphoreHandle"* nonnull %9, %"class.gpu::SemaphoreHandle"* nonnull dereferenceable(24) %6) #8
  call void @_ZN3gpu17ExternalSemaphore16CreateFromHandleEPN3viz21VulkanContextProviderENS_15SemaphoreHandleE(%"class.gpu::ExternalSemaphore"* nonnull sret %8, %"class.viz::VulkanContextProvider"* %68, %"class.gpu::SemaphoreHandle"* nonnull %9) #8
  call void @_ZN3gpu15SemaphoreHandleD1Ev(%"class.gpu::SemaphoreHandle"* nonnull %9) #8
  %69 = load %"class.gpu::ExternalVkImageBacking"*, %"class.gpu::ExternalVkImageBacking"** %42, align 8
  call void @_ZN3gpu17ExternalSemaphoreC1EOS0_(%"class.gpu::ExternalSemaphore"* nonnull %10, %"class.gpu::ExternalSemaphore"* nonnull dereferenceable(48) %8) #8
  call void @_ZN3gpu22ExternalVkImageBacking9EndAccessEbNS_17ExternalSemaphoreEb(%"class.gpu::ExternalVkImageBacking"* %69, i1 zeroext false, %"class.gpu::ExternalSemaphore"* nonnull %10, i1 zeroext false) #8
  call void @_ZN3gpu17ExternalSemaphoreD1Ev(%"class.gpu::ExternalSemaphore"* nonnull %10) #8
  call void @_ZN3gpu17ExternalSemaphoreD1Ev(%"class.gpu::ExternalSemaphore"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %63) #8
  call void @_ZN3gpu15SemaphoreHandleD1Ev(%"class.gpu::SemaphoreHandle"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #8
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %40) #8
  br label %70

70:                                               ; preds = %15, %62
  %71 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 6, i32 145
  %72 = load void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)** %71, align 8
  %73 = load %struct.WGPUTextureImpl*, %struct.WGPUTextureImpl** %12, align 8
  call void %72(%struct.WGPUTextureImpl* %73) #8
  %74 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 6, i32 147
  %75 = load void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)** %74, align 8
  %76 = load %struct.WGPUTextureImpl*, %struct.WGPUTextureImpl** %12, align 8
  call void %75(%struct.WGPUTextureImpl* %76) #8
  store %struct.WGPUTextureImpl* null, %struct.WGPUTextureImpl** %12, align 8
  %77 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 0, i32 0, i32 2
  %78 = bitcast %"class.gpu::SharedImageBacking"** %77 to %"class.gpu::ExternalVkImageBacking"**
  %79 = load %"class.gpu::ExternalVkImageBacking"*, %"class.gpu::ExternalVkImageBacking"** %78, align 8
  %80 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 7
  %81 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 7, i32 0, i32 1
  %82 = bitcast %"class.std::__1::vector.21"* %80 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %11, i64 0, i32 0, i32 1
  %85 = bitcast %"class.std::__1::vector.21"* %11 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %85, align 16
  %86 = getelementptr inbounds %"class.gpu::ExternalVkImageDawnRepresentation", %"class.gpu::ExternalVkImageDawnRepresentation"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast %"class.gpu::ExternalSemaphore"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %90 = bitcast %"class.gpu::ExternalSemaphore"** %89 to i64*
  store i64 %88, i64* %90, align 16
  %91 = bitcast %"class.std::__1::vector.21"* %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 24, i1 false) #8
  call void @_ZN3gpu22ExternalVkImageBacking35AddSemaphoresToPendingListOrReleaseENSt3__16vectorINS_17ExternalSemaphoreENS1_9allocatorIS3_EEEE(%"class.gpu::ExternalVkImageBacking"* %79, %"class.std::__1::vector.21"* nonnull %11) #8
  %92 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %11, i64 0, i32 0, i32 0
  %93 = load %"class.gpu::ExternalSemaphore"*, %"class.gpu::ExternalSemaphore"** %92, align 16
  %94 = icmp eq %"class.gpu::ExternalSemaphore"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %70
  %96 = bitcast %"class.gpu::ExternalSemaphore"* %93 to i8*
  %97 = load %"class.gpu::ExternalSemaphore"*, %"class.gpu::ExternalSemaphore"** %84, align 8
  %98 = icmp eq %"class.gpu::ExternalSemaphore"* %97, %93
  br i1 %98, label %106, label %99

99:                                               ; preds = %95, %99
  %100 = phi %"class.gpu::ExternalSemaphore"* [ %101, %99 ], [ %97, %95 ]
  %101 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %100, i64 -1
  call void @_ZN3gpu17ExternalSemaphoreD1Ev(%"class.gpu::ExternalSemaphore"* %101) #8
  %102 = icmp eq %"class.gpu::ExternalSemaphore"* %101, %93
  br i1 %102, label %103, label %99

103:                                              ; preds = %99
  %104 = bitcast %"class.std::__1::vector.21"* %11 to i8**
  %105 = load i8*, i8** %104, align 16
  br label %106

106:                                              ; preds = %103, %95
  %107 = phi i8* [ %105, %103 ], [ %96, %95 ]
  store %"class.gpu::ExternalSemaphore"* %93, %"class.gpu::ExternalSemaphore"** %84, align 8
  call void @_ZdlPv(i8* %107) #9
  br label %108

108:                                              ; preds = %70, %106
  %109 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %80, i64 0, i32 0, i32 0
  %110 = load %"class.gpu::ExternalSemaphore"*, %"class.gpu::ExternalSemaphore"** %109, align 8
  %111 = load %"class.gpu::ExternalSemaphore"*, %"class.gpu::ExternalSemaphore"** %81, align 8
  %112 = icmp eq %"class.gpu::ExternalSemaphore"* %111, %110
  br i1 %112, label %117, label %113

113:                                              ; preds = %108, %113
  %114 = phi %"class.gpu::ExternalSemaphore"* [ %115, %113 ], [ %111, %108 ]
  %115 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %114, i64 -1
  call void @_ZN3gpu17ExternalSemaphoreD1Ev(%"class.gpu::ExternalSemaphore"* %115) #8
  %116 = icmp eq %"class.gpu::ExternalSemaphore"* %115, %110
  br i1 %116, label %117, label %113

117:                                              ; preds = %113, %108
  store %"class.gpu::ExternalSemaphore"* %110, %"class.gpu::ExternalSemaphore"** %81, align 8
  %118 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %119 = load i32*, i32** %118, align 8
  %120 = icmp eq i32* %119, null
  br i1 %120, label %126, label %121

121:                                              ; preds = %117
  %122 = ptrtoint i32* %119 to i64
  %123 = getelementptr inbounds %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD", %"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %124 = bitcast i32** %123 to i64*
  store i64 %122, i64* %124, align 8
  %125 = bitcast i32* %119 to i8*
  call void @_ZdlPv(i8* %125) #9
  br label %126

126:                                              ; preds = %117, %121
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #8
  br label %127

127:                                              ; preds = %1, %126
  ret void
}

declare void @_ZN11dawn_native6vulkan31ExternalImageExportInfoOpaqueFDC1Ev(%"struct.dawn_native::vulkan::ExternalImageExportInfoOpaqueFD"*) unnamed_addr #1

declare zeroext i1 @_ZN11dawn_native6vulkan17ExportVulkanImageEP15WGPUTextureImpl13VkImageLayoutPNS0_25ExternalImageExportInfoVkE(%struct.WGPUTextureImpl*, i32, %"struct.dawn_native::vulkan::ExternalImageExportInfoVk"*) local_unnamed_addr #1

declare void @_ZN16GrBackendTextureC1ERKS_(%class.GrBackendTexture*, %class.GrBackendTexture* dereferenceable(176)) unnamed_addr #1

declare void @_ZN16GrBackendTexture15setMutableStateERK28GrBackendSurfaceMutableState(%class.GrBackendTexture*, %class.GrBackendSurfaceMutableState* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3gpu15SemaphoreHandleC1E37VkExternalSemaphoreHandleTypeFlagBitsN4base13ScopedGenericIiNS2_8internal19ScopedFDCloseTraitsEEE(%"class.gpu::SemaphoreHandle"*, i32, %"class.base::ScopedGeneric"*) unnamed_addr #1

declare void @_ZN3gpu17ExternalSemaphore16CreateFromHandleEPN3viz21VulkanContextProviderENS_15SemaphoreHandleE(%"class.gpu::ExternalSemaphore"* sret, %"class.viz::VulkanContextProvider"*, %"class.gpu::SemaphoreHandle"*) local_unnamed_addr #1

declare void @_ZN3gpu15SemaphoreHandleC1EOS0_(%"class.gpu::SemaphoreHandle"*, %"class.gpu::SemaphoreHandle"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN3gpu22ExternalVkImageBacking9EndAccessEbNS_17ExternalSemaphoreEb(%"class.gpu::ExternalVkImageBacking"*, i1 zeroext, %"class.gpu::ExternalSemaphore"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN3gpu17ExternalSemaphoreC1EOS0_(%"class.gpu::ExternalSemaphore"*, %"class.gpu::ExternalSemaphore"* dereferenceable(48)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gpu17ExternalSemaphoreD1Ev(%"class.gpu::ExternalSemaphore"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture*) unnamed_addr #4

declare void @_ZN3gpu22ExternalVkImageBacking35AddSemaphoresToPendingListOrReleaseENSt3__16vectorINS_17ExternalSemaphoreENS1_9allocatorIS3_EEEE(%"class.gpu::ExternalVkImageBacking"*, %"class.std::__1::vector.21"*) local_unnamed_addr #1

declare void @_ZN3gpu25SharedImageRepresentationC2EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gpu25SharedImageRepresentationD2Ev(%"class.gpu::SharedImageRepresentation"*) unnamed_addr #4

declare void @_ZNK3gpu15SemaphoreHandle9DuplicateEv(%"class.gpu::SemaphoreHandle"* sret, %"class.gpu::SemaphoreHandle"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* %0) #8
  %2 = bitcast %"class.base::ScopedGeneric"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

declare void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #1

declare void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #8
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #8
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #8
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #8
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #9
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #8
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #8
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #9
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #8
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3gpu15SemaphoreHandle10TakeHandleEv: argument 0"}
!5 = distinct !{!5, !"_ZN3gpu15SemaphoreHandle10TakeHandleEv"}
