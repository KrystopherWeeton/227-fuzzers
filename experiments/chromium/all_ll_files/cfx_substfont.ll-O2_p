; ModuleID = '../../third_party/pdfium/core/fxge/cfx_substfont.cpp'
source_filename = "../../third_party/pdfium/core/fxge/cfx_substfont.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_SubstFont = type <{ %"class.fxcrt::ByteString", i32, i32, i32, i32, i8, i8, i8, [5 x i8] }>
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>

@.str = private unnamed_addr constant [13 x i8] c"Chrome Serif\00", align 1

@_ZN13CFX_SubstFontC1Ev = hidden unnamed_addr alias void (%class.CFX_SubstFont*), void (%class.CFX_SubstFont*)* @_ZN13CFX_SubstFontC2Ev
@_ZN13CFX_SubstFontD1Ev = hidden unnamed_addr alias void (%class.CFX_SubstFont*), void (%class.CFX_SubstFont*)* @_ZN13CFX_SubstFontD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFX_SubstFontC2Ev(%class.CFX_SubstFont*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %2) #4
  %3 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %0, i64 0, i32 1
  %4 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 19, i1 false)
  ret void
}

declare void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFX_SubstFontD2Ev(%class.CFX_SubstFont*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %2) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK13CFX_SubstFont17GetOriginalWeightEv(%class.CFX_SubstFont*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %0, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)) #4
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = mul nsw i32 %3, 5
  %8 = sdiv i32 %7, 4
  br label %9

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %8, %6 ], [ %3, %1 ]
  ret i32 %10
}

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFX_SubstFont14UseChromeSerifEv(%class.CFX_SubstFont*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = shl nsw i32 %3, 2
  %5 = sdiv i32 %4, 5
  store i32 %5, i32* %2, align 4
  %6 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %0, i64 0, i32 0
  %7 = tail call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"* %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)) #4
  ret void
}

declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
