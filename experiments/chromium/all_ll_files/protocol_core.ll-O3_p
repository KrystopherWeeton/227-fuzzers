; ModuleID = '../../v8/third_party/inspector_protocol/crdtp/protocol_core.cc'
source_filename = "../../v8/third_party/inspector_protocol/crdtp/protocol_core.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.v8_crdtp::DeserializerState" = type { %"class.std::__1::shared_ptr", %"class.v8_crdtp::cbor::CBORTokenizer", %"struct.v8_crdtp::Status", %"class.std::__1::vector.1" }
%"class.std::__1::shared_ptr" = type { %"class.std::__1::vector"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.v8_crdtp::cbor::CBORTokenizer" = type { %"class.v8_crdtp::span", i32, %"struct.v8_crdtp::Status", i64, i32, i64 }
%"class.v8_crdtp::span" = type { i8*, i64 }
%"struct.v8_crdtp::Status" = type { i32, i64 }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.v8_crdtp::span.3"*, %"class.v8_crdtp::span.3"*, %"class.std::__1::__compressed_pair.4" }
%"class.v8_crdtp::span.3" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.v8_crdtp::span.3"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8_crdtp::DeserializerDescriptor" = type <{ %"struct.v8_crdtp::DeserializerDescriptor::Field"*, i64, i32, [4 x i8] }>
%"struct.v8_crdtp::DeserializerDescriptor::Field" = type { %"class.v8_crdtp::span.3", i8, i1 (%"class.v8_crdtp::DeserializerState"*, i8*)* }
%"class.v8_crdtp::ContainerSerializer" = type { %"class.std::__1::vector"*, %"class.v8_crdtp::cbor::EnvelopeEncoder" }
%"class.v8_crdtp::cbor::EnvelopeEncoder" = type { i64 }
%"class.v8_crdtp::ObjectSerializer" = type { %"class.std::__1::vector", %"class.v8_crdtp::ContainerSerializer" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.v8_crdtp::Serializable" = type { i32 (...)** }
%"class.v8_crdtp::DeferredMessage" = type { %"class.v8_crdtp::Serializable" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.v8_crdtp::DeferredMessage"* }
%"class.std::__1::__shared_ptr_pointer" = type { %"class.std::__1::__shared_weak_count", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::vector"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.v8_crdtp::OutgoingDeferredMessage" = type { %"class.v8_crdtp::DeferredMessage", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.v8_crdtp::Serializable"* }
%"class.v8_crdtp::IncomingDeferredMessage" = type { %"class.v8_crdtp::DeferredMessage", %"class.std::__1::shared_ptr", %"class.v8_crdtp::span" }

$_ZNSt3__120__shared_ptr_pointerIPNS_6vectorIhNS_9allocatorIhEEEENS_10shared_ptrIKS4_E27__shared_ptr_default_deleteIS7_S4_EENS2_IS4_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_pointerIPNS_6vectorIhNS_9allocatorIhEEEENS_10shared_ptrIKS4_E27__shared_ptr_default_deleteIS7_S4_EENS2_IS4_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_pointerIPNS_6vectorIhNS_9allocatorIhEEEENS_10shared_ptrIKS4_E27__shared_ptr_default_deleteIS7_S4_EENS2_IS4_EEE21__on_zero_shared_weakEv = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPKcEERS5_T_SA_ = comdat any

$_ZNK8v8_crdtp23OutgoingDeferredMessage16AppendSerializedEPNSt3__16vectorIhNS1_9allocatorIhEEEE = comdat any

$_ZN8v8_crdtp23OutgoingDeferredMessageD2Ev = comdat any

$_ZN8v8_crdtp23OutgoingDeferredMessageD0Ev = comdat any

$_ZNK8v8_crdtp23OutgoingDeferredMessage16MakeDeserializerEv = comdat any

$_ZNK8v8_crdtp23IncomingDeferredMessage16AppendSerializedEPNSt3__16vectorIhNS1_9allocatorIhEEEE = comdat any

$_ZN8v8_crdtp23IncomingDeferredMessageD2Ev = comdat any

$_ZN8v8_crdtp23IncomingDeferredMessageD0Ev = comdat any

$_ZNK8v8_crdtp23IncomingDeferredMessage16MakeDeserializerEv = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_ = comdat any

$_ZTVNSt3__120__shared_ptr_pointerIPNS_6vectorIhNS_9allocatorIhEEEENS_10shared_ptrIKS4_E27__shared_ptr_default_deleteIS7_S4_EENS2_IS4_EEEE = comdat any

$_ZTVN8v8_crdtp23OutgoingDeferredMessageE = comdat any

$_ZTVN8v8_crdtp23IncomingDeferredMessageE = comdat any

@.str = private unnamed_addr constant [23 x i8] c"Failed to deserialize \00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c" - \00", align 1
@_ZTVNSt3__120__shared_ptr_pointerIPNS_6vectorIhNS_9allocatorIhEEEENS_10shared_ptrIKS4_E27__shared_ptr_default_deleteIS7_S4_EENS2_IS4_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.std::__1::__shared_weak_count"*)* @_ZNSt3__119__shared_weak_countD2Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPNS_6vectorIhNS_9allocatorIhEEEENS_10shared_ptrIKS4_E27__shared_ptr_default_deleteIS7_S4_EENS2_IS4_EEED0Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPNS_6vectorIhNS_9allocatorIhEEEENS_10shared_ptrIKS4_E27__shared_ptr_default_deleteIS7_S4_EENS2_IS4_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPNS_6vectorIhNS_9allocatorIhEEEENS_10shared_ptrIKS4_E27__shared_ptr_default_deleteIS7_S4_EENS2_IS4_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@_ZTVN8v8_crdtp23OutgoingDeferredMessageE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_crdtp::OutgoingDeferredMessage"*, %"class.std::__1::vector"*)* @_ZNK8v8_crdtp23OutgoingDeferredMessage16AppendSerializedEPNSt3__16vectorIhNS1_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.v8_crdtp::OutgoingDeferredMessage"*)* @_ZN8v8_crdtp23OutgoingDeferredMessageD2Ev to i8*), i8* bitcast (void (%"class.v8_crdtp::OutgoingDeferredMessage"*)* @_ZN8v8_crdtp23OutgoingDeferredMessageD0Ev to i8*), i8* bitcast (void (%"class.v8_crdtp::DeserializerState"*, %"class.v8_crdtp::OutgoingDeferredMessage"*)* @_ZNK8v8_crdtp23OutgoingDeferredMessage16MakeDeserializerEv to i8*)] }, comdat, align 8
@_ZTVN8v8_crdtp23IncomingDeferredMessageE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_crdtp::IncomingDeferredMessage"*, %"class.std::__1::vector"*)* @_ZNK8v8_crdtp23IncomingDeferredMessage16AppendSerializedEPNSt3__16vectorIhNS1_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.v8_crdtp::IncomingDeferredMessage"*)* @_ZN8v8_crdtp23IncomingDeferredMessageD2Ev to i8*), i8* bitcast (void (%"class.v8_crdtp::IncomingDeferredMessage"*)* @_ZN8v8_crdtp23IncomingDeferredMessageD0Ev to i8*), i8* bitcast (void (%"class.v8_crdtp::DeserializerState"*, %"class.v8_crdtp::IncomingDeferredMessage"*)* @_ZNK8v8_crdtp23IncomingDeferredMessage16MakeDeserializerEv to i8*)] }, comdat, align 8

@_ZN8v8_crdtp17DeserializerStateC1ENSt3__16vectorIhNS1_9allocatorIhEEEE = hidden unnamed_addr alias void (%"class.v8_crdtp::DeserializerState"*, %"class.std::__1::vector"*), void (%"class.v8_crdtp::DeserializerState"*, %"class.std::__1::vector"*)* @_ZN8v8_crdtp17DeserializerStateC2ENSt3__16vectorIhNS1_9allocatorIhEEEE
@_ZN8v8_crdtp17DeserializerStateC1ENSt3__110shared_ptrIKNS1_6vectorIhNS1_9allocatorIhEEEEEENS_4spanIhEE = hidden unnamed_addr alias void (%"class.v8_crdtp::DeserializerState"*, %"class.std::__1::vector"*, %"class.std::__1::__shared_weak_count"*, i8*, i64), void (%"class.v8_crdtp::DeserializerState"*, %"class.std::__1::vector"*, %"class.std::__1::__shared_weak_count"*, i8*, i64)* @_ZN8v8_crdtp17DeserializerStateC2ENSt3__110shared_ptrIKNS1_6vectorIhNS1_9allocatorIhEEEEEENS_4spanIhEE
@_ZN8v8_crdtp22DeserializerDescriptorC1EPKNS0_5FieldEm = hidden unnamed_addr alias void (%"class.v8_crdtp::DeserializerDescriptor"*, %"struct.v8_crdtp::DeserializerDescriptor::Field"*, i64), void (%"class.v8_crdtp::DeserializerDescriptor"*, %"struct.v8_crdtp::DeserializerDescriptor::Field"*, i64)* @_ZN8v8_crdtp22DeserializerDescriptorC2EPKNS0_5FieldEm
@_ZN8v8_crdtp19ContainerSerializerC1EPNSt3__16vectorIhNS1_9allocatorIhEEEEh = hidden unnamed_addr alias void (%"class.v8_crdtp::ContainerSerializer"*, %"class.std::__1::vector"*, i8), void (%"class.v8_crdtp::ContainerSerializer"*, %"class.std::__1::vector"*, i8)* @_ZN8v8_crdtp19ContainerSerializerC2EPNSt3__16vectorIhNS1_9allocatorIhEEEEh
@_ZN8v8_crdtp16ObjectSerializerC1Ev = hidden unnamed_addr alias void (%"class.v8_crdtp::ObjectSerializer"*), void (%"class.v8_crdtp::ObjectSerializer"*)* @_ZN8v8_crdtp16ObjectSerializerC2Ev
@_ZN8v8_crdtp16ObjectSerializerD1Ev = hidden unnamed_addr alias void (%"class.v8_crdtp::ObjectSerializer"*), void (%"class.v8_crdtp::ObjectSerializer"*)* @_ZN8v8_crdtp16ObjectSerializerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8v8_crdtp17DeserializerStateC2ENSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.v8_crdtp::DeserializerState"*, %"class.std::__1::vector"* nocapture) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 24) #10
  %4 = bitcast %"class.std::__1::vector"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast i8* %3 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8** %7 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  %11 = bitcast i8* %8 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %11, align 8
  %12 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #11
  %13 = bitcast %"class.v8_crdtp::DeserializerState"* %0 to i8**
  store i8* %3, i8** %13, align 8
  %14 = ptrtoint i8* %3 to i64
  %15 = tail call i8* @_Znwm(i64 32) #10
  %16 = bitcast i8* %15 to i32 (...)***
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPNS_6vectorIhNS_9allocatorIhEEEENS_10shared_ptrIKS4_E27__shared_ptr_default_deleteIS7_S4_EENS2_IS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %18 = getelementptr inbounds i8, i8* %15, i64 24
  %19 = bitcast i8* %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::__shared_weak_count"** %20 to i8**
  store i8* %15, i8** %21, align 8
  %22 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 1
  %23 = inttoptr i64 %5 to i8*
  %24 = extractelement <2 x i64> %10, i32 0
  %25 = sub i64 %24, %5
  tail call void @_ZN8v8_crdtp4cbor13CBORTokenizerC1ENS_4spanIhEE(%"class.v8_crdtp::cbor::CBORTokenizer"* %22, i8* %23, i64 %25) #11
  %26 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 0
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 1
  store i64 -1, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 3
  %29 = bitcast %"class.std::__1::vector.1"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN8v8_crdtp4cbor13CBORTokenizerC1ENS_4spanIhEE(%"class.v8_crdtp::cbor::CBORTokenizer"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8v8_crdtp17DeserializerStateC2ENSt3__110shared_ptrIKNS1_6vectorIhNS1_9allocatorIhEEEEEENS_4spanIhEE(%"class.v8_crdtp::DeserializerState"*, %"class.std::__1::vector"*, %"class.std::__1::__shared_weak_count"*, i8*, i64) unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.std::__1::vector"* %1 to i64
  %7 = ptrtoint %"class.std::__1::__shared_weak_count"* %2 to i64
  %8 = bitcast %"class.v8_crdtp::DeserializerState"* %0 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::__shared_weak_count"** %9 to i64*
  store i64 %7, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 1
  tail call void @_ZN8v8_crdtp4cbor13CBORTokenizerC1ENS_4spanIhEE(%"class.v8_crdtp::cbor::CBORTokenizer"* %11, i8* %3, i64 %4) #11
  %12 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 0
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 1
  store i64 -1, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 3
  %15 = bitcast %"class.std::__1::vector.1"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8v8_crdtp17DeserializerState13RegisterErrorENS_5ErrorE(%"class.v8_crdtp::DeserializerState"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 1
  %4 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %3) #11
  %5 = extractvalue { i32, i64 } %4, 0
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %3) #11
  %9 = extractvalue { i32, i64 } %8, 1
  %10 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 0
  store i32 %1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 1
  store i64 %9, i64* %11, align 8
  br label %12

12:                                               ; preds = %7, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8v8_crdtp17DeserializerState17RegisterFieldPathENS_4spanIcEE(%"class.v8_crdtp::DeserializerState"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 3, i32 0, i32 1
  %6 = load %"class.v8_crdtp::span.3"*, %"class.v8_crdtp::span.3"** %5, align 8
  %7 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.v8_crdtp::span.3"*, %"class.v8_crdtp::span.3"** %7, align 8
  %9 = icmp eq %"class.v8_crdtp::span.3"* %6, %8
  %10 = ptrtoint %"class.v8_crdtp::span.3"* %8 to i64
  br i1 %9, label %17, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8_crdtp::span.3", %"class.v8_crdtp::span.3"* %6, i64 0, i32 0
  store i8* %1, i8** %12, align 8
  %13 = getelementptr inbounds %"class.v8_crdtp::span.3", %"class.v8_crdtp::span.3"* %6, i64 0, i32 1
  store i64 %2, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8_crdtp::span.3", %"class.v8_crdtp::span.3"* %6, i64 1
  %15 = ptrtoint %"class.v8_crdtp::span.3"* %14 to i64
  %16 = bitcast %"class.v8_crdtp::span.3"** %5 to i64*
  store i64 %15, i64* %16, align 8
  br label %75

17:                                               ; preds = %3
  %18 = ptrtoint %"class.v8_crdtp::span.3"* %6 to i64
  %19 = bitcast %"class.v8_crdtp::span.3"** %5 to i64*
  %20 = bitcast %"class.std::__1::vector.1"* %4 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = ashr exact i64 %22, 4
  %24 = add nsw i64 %23, 1
  %25 = icmp ugt i64 %24, 1152921504606846975
  br i1 %25, label %26, label %28

26:                                               ; preds = %17
  %27 = bitcast %"class.std::__1::vector.1"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #12
  unreachable

28:                                               ; preds = %17
  %29 = bitcast %"class.v8_crdtp::span.3"** %7 to i64*
  %30 = sub i64 %10, %21
  %31 = ashr exact i64 %30, 4
  %32 = icmp ult i64 %31, 576460752303423487
  br i1 %32, label %33, label %41

33:                                               ; preds = %28
  %34 = ashr exact i64 %30, 3
  %35 = icmp ult i64 %34, %24
  %36 = select i1 %35, i64 %24, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %33
  %39 = icmp ugt i64 %36, 1152921504606846975
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

41:                                               ; preds = %38, %28
  %42 = phi i64 [ %36, %38 ], [ 1152921504606846975, %28 ]
  %43 = shl i64 %42, 4
  %44 = tail call i8* @_Znwm(i64 %43) #10
  %45 = bitcast i8* %44 to %"class.v8_crdtp::span.3"*
  br label %46

46:                                               ; preds = %41, %33
  %47 = phi i64 [ %42, %41 ], [ 0, %33 ]
  %48 = phi %"class.v8_crdtp::span.3"* [ %45, %41 ], [ null, %33 ]
  %49 = getelementptr inbounds %"class.v8_crdtp::span.3", %"class.v8_crdtp::span.3"* %48, i64 %23
  %50 = getelementptr inbounds %"class.v8_crdtp::span.3", %"class.v8_crdtp::span.3"* %48, i64 %47
  %51 = ptrtoint %"class.v8_crdtp::span.3"* %50 to i64
  %52 = getelementptr inbounds %"class.v8_crdtp::span.3", %"class.v8_crdtp::span.3"* %49, i64 0, i32 0
  store i8* %1, i8** %52, align 8
  %53 = getelementptr inbounds %"class.v8_crdtp::span.3", %"class.v8_crdtp::span.3"* %48, i64 %23, i32 1
  store i64 %2, i64* %53, align 8
  %54 = getelementptr inbounds %"class.v8_crdtp::span.3", %"class.v8_crdtp::span.3"* %49, i64 1
  %55 = ptrtoint %"class.v8_crdtp::span.3"* %54 to i64
  %56 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 0
  %57 = load %"class.v8_crdtp::span.3"*, %"class.v8_crdtp::span.3"** %56, align 8
  %58 = load i64, i64* %19, align 8
  %59 = ptrtoint %"class.v8_crdtp::span.3"* %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 4
  %62 = sub nsw i64 0, %61
  %63 = getelementptr inbounds %"class.v8_crdtp::span.3", %"class.v8_crdtp::span.3"* %49, i64 %62
  %64 = ptrtoint %"class.v8_crdtp::span.3"* %63 to i64
  %65 = icmp sgt i64 %60, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %46
  %67 = bitcast %"class.v8_crdtp::span.3"* %63 to i8*
  %68 = bitcast %"class.v8_crdtp::span.3"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 %60, i1 false) #11
  %69 = load %"class.v8_crdtp::span.3"*, %"class.v8_crdtp::span.3"** %56, align 8
  br label %70

70:                                               ; preds = %66, %46
  %71 = phi %"class.v8_crdtp::span.3"* [ %57, %46 ], [ %69, %66 ]
  store i64 %64, i64* %20, align 8
  store i64 %55, i64* %19, align 8
  store i64 %51, i64* %29, align 8
  %72 = icmp eq %"class.v8_crdtp::span.3"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = bitcast %"class.v8_crdtp::span.3"* %71 to i8*
  tail call void @_ZdlPv(i8* %74) #10
  br label %75

75:                                               ; preds = %11, %70, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8v8_crdtp17DeserializerState12ErrorMessageENS_4spanIcEE(%"class.std::__1::basic_string"* noalias sret, %"class.v8_crdtp::DeserializerState"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.v8_crdtp::Status", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  store i8 22, i8* %9, align 1
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i64 22, i1 false) #11
  %11 = getelementptr inbounds i8, i8* %10, i64 22
  store i8 0, i8* %11, align 2
  %12 = getelementptr inbounds i8, i8* %2, i64 %3
  %13 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPKcEERS5_T_SA_(%"class.std::__1::basic_string"* %0, i8* %2, i8* %12) #11
  %14 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %1, i64 0, i32 3
  %15 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %1, i64 0, i32 3, i32 0, i32 1
  %16 = bitcast %"class.v8_crdtp::span.3"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.1"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = lshr exact i64 %20, 4
  %22 = trunc i64 %21 to i32
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %4
  %25 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %14, i64 0, i32 0, i32 0
  %26 = shl i64 %20, 28
  %27 = ashr exact i64 %26, 32
  br label %49

28:                                               ; preds = %49, %4
  %29 = bitcast %"struct.v8_crdtp::Status"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %1, i64 0, i32 1
  %31 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %30) #11
  %32 = extractvalue { i32, i64 } %31, 0
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %28
  %35 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %30) #11
  %36 = extractvalue { i32, i64 } %35, 0
  %37 = extractvalue { i32, i64 } %35, 1
  br label %43

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %1, i64 0, i32 2, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %1, i64 0, i32 2, i32 1
  %42 = load i64, i64* %41, align 8
  br label %43

43:                                               ; preds = %34, %38
  %44 = phi i32 [ %36, %34 ], [ %40, %38 ]
  %45 = phi i64 [ %37, %34 ], [ %42, %38 ]
  %46 = getelementptr inbounds %"struct.v8_crdtp::Status", %"struct.v8_crdtp::Status"* %5, i64 0, i32 0
  store i32 %44, i32* %46, align 8
  %47 = getelementptr inbounds %"struct.v8_crdtp::Status", %"struct.v8_crdtp::Status"* %5, i64 0, i32 1
  store i64 %45, i64* %47, align 8
  %48 = icmp eq i32 %44, 0
  br i1 %48, label %91, label %61

49:                                               ; preds = %24, %49
  %50 = phi i64 [ %27, %24 ], [ %51, %49 ]
  %51 = add nsw i64 %50, -1
  %52 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #11
  %53 = load %"class.v8_crdtp::span.3"*, %"class.v8_crdtp::span.3"** %25, align 8
  %54 = getelementptr inbounds %"class.v8_crdtp::span.3", %"class.v8_crdtp::span.3"* %53, i64 %51, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds %"class.v8_crdtp::span.3", %"class.v8_crdtp::span.3"* %53, i64 %51, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds i8, i8* %55, i64 %57
  %59 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPKcEERS5_T_SA_(%"class.std::__1::basic_string"* %0, i8* %55, i8* %58) #11
  %60 = icmp sgt i64 %51, 0
  br i1 %60, label %49, label %28

61:                                               ; preds = %43
  %62 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #11
  %63 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #11
  call void @_ZNK8v8_crdtp6Status13ToASCIIStringEv(%"class.std::__1::basic_string"* nonnull sret %7, %"struct.v8_crdtp::Status"* nonnull %5) #11
  %64 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %7, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0)) #11, !noalias !2
  %65 = bitcast %"class.std::__1::basic_string"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %62, i8* align 8 %65, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #11, !noalias !2
  %66 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = zext i8 %68 to i64
  %75 = select i1 %69, i8* %71, i8* %62
  %76 = select i1 %69, i64 %73, i64 %74
  %77 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %75, i64 %76) #11
  %78 = load i8, i8* %67, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %61
  %81 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %81) #10
  br label %82

82:                                               ; preds = %61, %80
  %83 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %89) #10
  br label %90

90:                                               ; preds = %82, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #11
  br label %91

91:                                               ; preds = %90, %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #11
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i32, i64 } @_ZNK8v8_crdtp17DeserializerState6statusEv(%"class.v8_crdtp::DeserializerState"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 1
  %3 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %2) #11
  %4 = extractvalue { i32, i64 } %3, 0
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %2) #11
  %8 = extractvalue { i32, i64 } %7, 0
  %9 = extractvalue { i32, i64 } %7, 1
  br label %15

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 1
  %14 = load i64, i64* %13, align 8
  br label %15

15:                                               ; preds = %10, %6
  %16 = phi i32 [ %8, %6 ], [ %12, %10 ]
  %17 = phi i64 [ %9, %6 ], [ %14, %10 ]
  %18 = insertvalue { i32, i64 } undef, i32 %16, 0
  %19 = insertvalue { i32, i64 } %18, i64 %17, 1
  ret { i32, i64 } %19
}

declare void @_ZNK8v8_crdtp6Status13ToASCIIStringEv(%"class.std::__1::basic_string"* sret, %"struct.v8_crdtp::Status"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8v8_crdtp22DeserializerDescriptorC2EPKNS0_5FieldEm(%"class.v8_crdtp::DeserializerDescriptor"* nocapture, %"struct.v8_crdtp::DeserializerDescriptor::Field"*, i64) unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.v8_crdtp::DeserializerDescriptor", %"class.v8_crdtp::DeserializerDescriptor"* %0, i64 0, i32 0
  store %"struct.v8_crdtp::DeserializerDescriptor::Field"* %1, %"struct.v8_crdtp::DeserializerDescriptor::Field"** %4, align 8
  %5 = getelementptr inbounds %"class.v8_crdtp::DeserializerDescriptor", %"class.v8_crdtp::DeserializerDescriptor"* %0, i64 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds %"class.v8_crdtp::DeserializerDescriptor", %"class.v8_crdtp::DeserializerDescriptor"* %0, i64 0, i32 2
  %7 = icmp eq i64 %2, 0
  br i1 %7, label %48, label %8

8:                                                ; preds = %3
  %9 = and i64 %2, 1
  %10 = icmp eq i64 %2, 1
  br i1 %10, label %35, label %11

11:                                               ; preds = %8
  %12 = sub i64 %2, %9
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i64 [ 0, %11 ], [ %32, %13 ]
  %15 = phi i32 [ 0, %11 ], [ %31, %13 ]
  %16 = phi i64 [ %12, %11 ], [ %33, %13 ]
  %17 = getelementptr inbounds %"struct.v8_crdtp::DeserializerDescriptor::Field", %"struct.v8_crdtp::DeserializerDescriptor::Field"* %1, i64 %14, i32 1
  %18 = load i8, i8* %17, align 8, !range !5
  %19 = icmp eq i8 %18, 0
  %20 = trunc i64 %14 to i32
  %21 = shl i32 1, %20
  %22 = select i1 %19, i32 %21, i32 0
  %23 = or i32 %22, %15
  %24 = or i64 %14, 1
  %25 = getelementptr inbounds %"struct.v8_crdtp::DeserializerDescriptor::Field", %"struct.v8_crdtp::DeserializerDescriptor::Field"* %1, i64 %24, i32 1
  %26 = load i8, i8* %25, align 8, !range !5
  %27 = icmp eq i8 %26, 0
  %28 = trunc i64 %24 to i32
  %29 = shl i32 1, %28
  %30 = select i1 %27, i32 %29, i32 0
  %31 = or i32 %30, %23
  %32 = add nuw i64 %14, 2
  %33 = add i64 %16, -2
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %13

35:                                               ; preds = %13, %8
  %36 = phi i32 [ undef, %8 ], [ %31, %13 ]
  %37 = phi i64 [ 0, %8 ], [ %32, %13 ]
  %38 = phi i32 [ 0, %8 ], [ %31, %13 ]
  %39 = icmp eq i64 %9, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"struct.v8_crdtp::DeserializerDescriptor::Field", %"struct.v8_crdtp::DeserializerDescriptor::Field"* %1, i64 %37, i32 1
  %42 = load i8, i8* %41, align 8, !range !5
  %43 = icmp eq i8 %42, 0
  %44 = trunc i64 %37 to i32
  %45 = shl i32 1, %44
  %46 = select i1 %43, i32 %45, i32 0
  %47 = or i32 %46, %38
  br label %48

48:                                               ; preds = %40, %35, %3
  %49 = phi i32 [ 0, %3 ], [ %36, %35 ], [ %47, %40 ]
  store i32 %49, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8v8_crdtp22DeserializerDescriptor11DeserializeEPNS_17DeserializerStateEPv(%"class.v8_crdtp::DeserializerDescriptor"* nocapture readonly, %"class.v8_crdtp::DeserializerState"*, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %1, i64 0, i32 1
  %6 = tail call i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #11
  %7 = icmp eq i32 %6, 13
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8_crdtp::DeserializerDescriptor", %"class.v8_crdtp::DeserializerDescriptor"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %91, label %12

12:                                               ; preds = %8, %3
  %13 = tail call i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #11
  %14 = icmp eq i32 %13, 12
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  tail call void @_ZN8v8_crdtp4cbor13CBORTokenizer13EnterEnvelopeEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #11
  br label %16

16:                                               ; preds = %15, %12
  %17 = tail call i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #11
  %18 = icmp eq i32 %17, 9
  br i1 %18, label %28, label %19

19:                                               ; preds = %16
  %20 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #11
  %21 = extractvalue { i32, i64 } %20, 0
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %91

23:                                               ; preds = %19
  %24 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #11
  %25 = extractvalue { i32, i64 } %24, 1
  %26 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %1, i64 0, i32 2, i32 0
  store i32 32, i32* %26, align 8
  %27 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %1, i64 0, i32 2, i32 1
  store i64 %25, i64* %27, align 8
  br label %91

28:                                               ; preds = %16
  tail call void @_ZN8v8_crdtp4cbor13CBORTokenizer4NextEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #11
  %29 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #11
  store i32 0, i32* %4, align 4
  %30 = tail call i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #11
  %31 = icmp eq i32 %30, 11
  br i1 %31, label %54, label %32

32:                                               ; preds = %28, %49
  %33 = tail call i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #11
  %34 = icmp eq i32 %33, 6
  br i1 %34, label %44, label %35

35:                                               ; preds = %32
  %36 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #11
  %37 = extractvalue { i32, i64 } %36, 0
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %89

39:                                               ; preds = %35
  %40 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #11
  %41 = extractvalue { i32, i64 } %40, 1
  %42 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %1, i64 0, i32 2, i32 0
  store i32 28, i32* %42, align 8
  %43 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %1, i64 0, i32 2, i32 1
  store i64 %41, i64* %43, align 8
  br label %89

44:                                               ; preds = %32
  %45 = tail call { i8*, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer10GetString8Ev(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #11
  %46 = extractvalue { i8*, i64 } %45, 0
  %47 = extractvalue { i8*, i64 } %45, 1
  tail call void @_ZN8v8_crdtp4cbor13CBORTokenizer4NextEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #11
  %48 = call zeroext i1 @_ZNK8v8_crdtp22DeserializerDescriptor16DeserializeFieldEPNS_17DeserializerStateENS_4spanIcEEPiPv(%"class.v8_crdtp::DeserializerDescriptor"* %0, %"class.v8_crdtp::DeserializerState"* %1, i8* %46, i64 %47, i32* nonnull %4, i8* %2)
  br i1 %48, label %49, label %89

49:                                               ; preds = %44
  tail call void @_ZN8v8_crdtp4cbor13CBORTokenizer4NextEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #11
  %50 = tail call i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #11
  %51 = icmp eq i32 %50, 11
  br i1 %51, label %52, label %32

52:                                               ; preds = %49
  %53 = load i32, i32* %4, align 4
  br label %54

54:                                               ; preds = %52, %28
  %55 = phi i32 [ %53, %52 ], [ 0, %28 ]
  %56 = getelementptr inbounds %"class.v8_crdtp::DeserializerDescriptor", %"class.v8_crdtp::DeserializerDescriptor"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = xor i32 %57, %55
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %89, label %60

60:                                               ; preds = %54
  %61 = and i32 %58, 1
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %72

63:                                               ; preds = %60, %63
  %64 = phi i32 [ %67, %63 ], [ 0, %60 ]
  %65 = phi i32 [ %66, %63 ], [ %58, %60 ]
  %66 = ashr i32 %65, 1
  %67 = add nuw nsw i32 %64, 1
  %68 = and i32 %65, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %63, label %70

70:                                               ; preds = %63
  %71 = zext i32 %67 to i64
  br label %72

72:                                               ; preds = %70, %60
  %73 = phi i64 [ 0, %60 ], [ %71, %70 ]
  %74 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #11
  %75 = extractvalue { i32, i64 } %74, 0
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %82

77:                                               ; preds = %72
  %78 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #11
  %79 = extractvalue { i32, i64 } %78, 1
  %80 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %1, i64 0, i32 2, i32 0
  store i32 48, i32* %80, align 8
  %81 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %1, i64 0, i32 2, i32 1
  store i64 %79, i64* %81, align 8
  br label %82

82:                                               ; preds = %72, %77
  %83 = getelementptr inbounds %"class.v8_crdtp::DeserializerDescriptor", %"class.v8_crdtp::DeserializerDescriptor"* %0, i64 0, i32 0
  %84 = load %"struct.v8_crdtp::DeserializerDescriptor::Field"*, %"struct.v8_crdtp::DeserializerDescriptor::Field"** %83, align 8
  %85 = getelementptr inbounds %"struct.v8_crdtp::DeserializerDescriptor::Field", %"struct.v8_crdtp::DeserializerDescriptor::Field"* %84, i64 %73, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds %"struct.v8_crdtp::DeserializerDescriptor::Field", %"struct.v8_crdtp::DeserializerDescriptor::Field"* %84, i64 %73, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  tail call void @_ZN8v8_crdtp17DeserializerState17RegisterFieldPathENS_4spanIcEE(%"class.v8_crdtp::DeserializerState"* %1, i8* %86, i64 %88)
  br label %89

89:                                               ; preds = %44, %39, %35, %82, %54
  %90 = phi i1 [ false, %82 ], [ true, %54 ], [ false, %35 ], [ false, %39 ], [ false, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #11
  br label %91

91:                                               ; preds = %23, %19, %8, %89
  %92 = phi i1 [ %90, %89 ], [ true, %8 ], [ false, %19 ], [ false, %23 ]
  ret i1 %92
}

declare i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.v8_crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare void @_ZN8v8_crdtp4cbor13CBORTokenizer13EnterEnvelopeEv(%"class.v8_crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare void @_ZN8v8_crdtp4cbor13CBORTokenizer4NextEv(%"class.v8_crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare { i8*, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer10GetString8Ev(%"class.v8_crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8v8_crdtp22DeserializerDescriptor16DeserializeFieldEPNS_17DeserializerStateENS_4spanIcEEPiPv(%"class.v8_crdtp::DeserializerDescriptor"* nocapture readonly, %"class.v8_crdtp::DeserializerState"*, i8*, i64, i32* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.v8_crdtp::DeserializerDescriptor", %"class.v8_crdtp::DeserializerDescriptor"* %0, i64 0, i32 0
  %8 = load %"struct.v8_crdtp::DeserializerDescriptor::Field"*, %"struct.v8_crdtp::DeserializerDescriptor::Field"** %7, align 8
  %9 = getelementptr inbounds %"class.v8_crdtp::DeserializerDescriptor", %"class.v8_crdtp::DeserializerDescriptor"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.v8_crdtp::DeserializerDescriptor::Field", %"struct.v8_crdtp::DeserializerDescriptor::Field"* %8, i64 %10
  %12 = ptrtoint %"struct.v8_crdtp::DeserializerDescriptor::Field"* %8 to i64
  %13 = icmp eq i64 %10, 0
  br i1 %13, label %33, label %14

14:                                               ; preds = %6
  %15 = shl nuw i64 %10, 5
  %16 = ashr exact i64 %15, 5
  br label %17

17:                                               ; preds = %17, %14
  %18 = phi %"struct.v8_crdtp::DeserializerDescriptor::Field"* [ %8, %14 ], [ %31, %17 ]
  %19 = phi i64 [ %16, %14 ], [ %30, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.v8_crdtp::DeserializerDescriptor::Field", %"struct.v8_crdtp::DeserializerDescriptor::Field"* %18, i64 %20
  %22 = getelementptr %"struct.v8_crdtp::DeserializerDescriptor::Field", %"struct.v8_crdtp::DeserializerDescriptor::Field"* %21, i64 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr %"struct.v8_crdtp::DeserializerDescriptor::Field", %"struct.v8_crdtp::DeserializerDescriptor::Field"* %18, i64 %20, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = tail call zeroext i1 @_ZN8v8_crdtp12SpanLessThanENS_4spanIcEES1_(i8* %23, i64 %25, i8* %2, i64 %3) #11
  %27 = getelementptr inbounds %"struct.v8_crdtp::DeserializerDescriptor::Field", %"struct.v8_crdtp::DeserializerDescriptor::Field"* %21, i64 1
  %28 = xor i64 %20, -1
  %29 = add i64 %19, %28
  %30 = select i1 %26, i64 %29, i64 %20
  %31 = select i1 %26, %"struct.v8_crdtp::DeserializerDescriptor::Field"* %27, %"struct.v8_crdtp::DeserializerDescriptor::Field"* %18
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %33, label %17

33:                                               ; preds = %17, %6
  %34 = phi %"struct.v8_crdtp::DeserializerDescriptor::Field"* [ %8, %6 ], [ %31, %17 ]
  %35 = icmp eq %"struct.v8_crdtp::DeserializerDescriptor::Field"* %34, %11
  br i1 %35, label %59, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"struct.v8_crdtp::DeserializerDescriptor::Field", %"struct.v8_crdtp::DeserializerDescriptor::Field"* %34, i64 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"struct.v8_crdtp::DeserializerDescriptor::Field", %"struct.v8_crdtp::DeserializerDescriptor::Field"* %34, i64 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = tail call zeroext i1 @_ZN8v8_crdtp10SpanEqualsENS_4spanIcEES1_(i8* %38, i64 %40, i8* %2, i64 %3) #11
  br i1 %41, label %42, label %59

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"struct.v8_crdtp::DeserializerDescriptor::Field", %"struct.v8_crdtp::DeserializerDescriptor::Field"* %34, i64 0, i32 2
  %44 = load i1 (%"class.v8_crdtp::DeserializerState"*, i8*)*, i1 (%"class.v8_crdtp::DeserializerState"*, i8*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.v8_crdtp::DeserializerState"* %1, i8* %5) #11
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  tail call void @_ZN8v8_crdtp17DeserializerState17RegisterFieldPathENS_4spanIcEE(%"class.v8_crdtp::DeserializerState"* %1, i8* %2, i64 %3)
  br label %59

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.v8_crdtp::DeserializerDescriptor::Field", %"struct.v8_crdtp::DeserializerDescriptor::Field"* %34, i64 0, i32 1
  %49 = load i8, i8* %48, align 8, !range !5
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %59

51:                                               ; preds = %47
  %52 = ptrtoint %"struct.v8_crdtp::DeserializerDescriptor::Field"* %34 to i64
  %53 = sub i64 %52, %12
  %54 = lshr exact i64 %53, 5
  %55 = trunc i64 %54 to i32
  %56 = shl i32 1, %55
  %57 = load i32, i32* %4, align 4
  %58 = or i32 %57, %56
  store i32 %58, i32* %4, align 4
  br label %59

59:                                               ; preds = %51, %47, %33, %36, %46
  %60 = phi i1 [ false, %46 ], [ true, %36 ], [ true, %33 ], [ true, %47 ], [ true, %51 ]
  ret i1 %60
}

; Function Attrs: nounwind
declare zeroext i1 @_ZN8v8_crdtp10SpanEqualsENS_4spanIcEES1_(i8*, i64, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8v8_crdtp18ProtocolTypeTraitsIbvE11DeserializeEPNS_17DeserializerStateEPb(%"class.v8_crdtp::DeserializerState"*, i8* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %3) #11
  switch i32 %4, label %7 [
    i32 1, label %5
    i32 2, label %6
  ]

5:                                                ; preds = %2
  store i8 1, i8* %1, align 1
  br label %16

6:                                                ; preds = %2
  store i8 0, i8* %1, align 1
  br label %16

7:                                                ; preds = %2
  %8 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %3) #11
  %9 = extractvalue { i32, i64 } %8, 0
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %3) #11
  %13 = extractvalue { i32, i64 } %12, 1
  %14 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 0
  store i32 49, i32* %14, align 8
  %15 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 1
  store i64 %13, i64* %15, align 8
  br label %16

16:                                               ; preds = %11, %7, %6, %5
  %17 = phi i1 [ true, %5 ], [ true, %6 ], [ false, %7 ], [ false, %11 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8v8_crdtp18ProtocolTypeTraitsIbvE9SerializeEbPNSt3__16vectorIhNS2_9allocatorIhEEEE(i1 zeroext, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  br i1 %0, label %3, label %5

3:                                                ; preds = %2
  %4 = tail call zeroext i8 @_ZN8v8_crdtp4cbor10EncodeTrueEv() #11
  br label %7

5:                                                ; preds = %2
  %6 = tail call zeroext i8 @_ZN8v8_crdtp4cbor11EncodeFalseEv() #11
  br label %7

7:                                                ; preds = %5, %3
  %8 = phi i8 [ %4, %3 ], [ %6, %5 ]
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = icmp ult i8* %10, %12
  %14 = ptrtoint i8* %12 to i64
  br i1 %13, label %15, label %19

15:                                               ; preds = %7
  store i8 %8, i8* %10, align 1
  %16 = getelementptr inbounds i8, i8* %10, i64 1
  %17 = ptrtoint i8* %16 to i64
  %18 = bitcast i8** %9 to i64*
  store i64 %17, i64* %18, align 8
  br label %64

19:                                               ; preds = %7
  %20 = ptrtoint i8* %10 to i64
  %21 = bitcast i8** %9 to i64*
  %22 = bitcast %"class.std::__1::vector"* %1 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %20, %23
  %25 = add i64 %24, 1
  %26 = icmp slt i64 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %19
  %28 = bitcast %"class.std::__1::vector"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #12
  unreachable

29:                                               ; preds = %19
  %30 = bitcast i8** %11 to i64*
  %31 = sub i64 %14, %23
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %29
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %25
  %36 = select i1 %35, i64 %25, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %33, %29
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %29 ]
  %40 = tail call i8* @_Znwm(i64 %39) #10
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %24
  %45 = getelementptr inbounds i8, i8* %43, i64 %42
  %46 = ptrtoint i8* %45 to i64
  store i8 %8, i8* %44, align 1
  %47 = getelementptr inbounds i8, i8* %44, i64 1
  %48 = ptrtoint i8* %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = load i64, i64* %21, align 8
  %52 = ptrtoint i8* %50 to i64
  %53 = sub i64 %51, %52
  %54 = sub i64 0, %53
  %55 = getelementptr inbounds i8, i8* %44, i64 %54
  %56 = ptrtoint i8* %55 to i64
  %57 = icmp sgt i64 %53, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %55, i8* align 1 %50, i64 %53, i1 false) #11
  %59 = load i8*, i8** %49, align 8
  br label %60

60:                                               ; preds = %58, %41
  %61 = phi i8* [ %50, %41 ], [ %59, %58 ]
  store i64 %56, i64* %22, align 8
  store i64 %48, i64* %21, align 8
  store i64 %46, i64* %30, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %64, label %63

63:                                               ; preds = %60
  tail call void @_ZdlPv(i8* nonnull %61) #10
  br label %64

64:                                               ; preds = %15, %60, %63
  ret void
}

declare zeroext i8 @_ZN8v8_crdtp4cbor10EncodeTrueEv() local_unnamed_addr #2

declare zeroext i8 @_ZN8v8_crdtp4cbor11EncodeFalseEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8v8_crdtp18ProtocolTypeTraitsIivE11DeserializeEPNS_17DeserializerStateEPi(%"class.v8_crdtp::DeserializerState"*, i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %3) #11
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %3) #11
  %8 = extractvalue { i32, i64 } %7, 0
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %17

10:                                               ; preds = %6
  %11 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %3) #11
  %12 = extractvalue { i32, i64 } %11, 1
  %13 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 0
  store i32 50, i32* %13, align 8
  %14 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 1
  store i64 %12, i64* %14, align 8
  br label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8GetInt32Ev(%"class.v8_crdtp::cbor::CBORTokenizer"* %3) #11
  store i32 %16, i32* %1, align 4
  br label %17

17:                                               ; preds = %10, %6, %15
  %18 = phi i1 [ true, %15 ], [ false, %6 ], [ false, %10 ]
  ret i1 %18
}

declare i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8GetInt32Ev(%"class.v8_crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8v8_crdtp18ProtocolTypeTraitsIivE9SerializeEiPNSt3__16vectorIhNS2_9allocatorIhEEEE(i32, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN8v8_crdtp4cbor11EncodeInt32EiPNSt3__16vectorIhNS1_9allocatorIhEEEE(i32 %0, %"class.std::__1::vector"* %1) #11
  ret void
}

declare void @_ZN8v8_crdtp4cbor11EncodeInt32EiPNSt3__16vectorIhNS1_9allocatorIhEEEE(i32, %"class.std::__1::vector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8v8_crdtp19ContainerSerializerC2EPNSt3__16vectorIhNS1_9allocatorIhEEEEh(%"class.v8_crdtp::ContainerSerializer"*, %"class.std::__1::vector"*, i8 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8_crdtp::ContainerSerializer", %"class.v8_crdtp::ContainerSerializer"* %0, i64 0, i32 0
  store %"class.std::__1::vector"* %1, %"class.std::__1::vector"** %4, align 8
  %5 = getelementptr inbounds %"class.v8_crdtp::ContainerSerializer", %"class.v8_crdtp::ContainerSerializer"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.v8_crdtp::cbor::EnvelopeEncoder", %"class.v8_crdtp::cbor::EnvelopeEncoder"* %5, i64 0, i32 0
  store i64 0, i64* %6, align 8
  tail call void @_ZN8v8_crdtp4cbor15EnvelopeEncoder11EncodeStartEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.v8_crdtp::cbor::EnvelopeEncoder"* %5, %"class.std::__1::vector"* %1) #11
  %7 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %9, %11
  %13 = ptrtoint i8* %11 to i64
  br i1 %12, label %18, label %14

14:                                               ; preds = %3
  store i8 %2, i8* %9, align 1
  %15 = getelementptr inbounds i8, i8* %9, i64 1
  %16 = ptrtoint i8* %15 to i64
  %17 = bitcast i8** %8 to i64*
  store i64 %16, i64* %17, align 8
  br label %63

18:                                               ; preds = %3
  %19 = ptrtoint i8* %9 to i64
  %20 = bitcast i8** %8 to i64*
  %21 = bitcast %"class.std::__1::vector"* %7 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = add i64 %23, 1
  %25 = icmp slt i64 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %18
  %27 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #12
  unreachable

28:                                               ; preds = %18
  %29 = bitcast i8** %10 to i64*
  %30 = sub i64 %13, %22
  %31 = icmp ult i64 %30, 4611686018427387903
  br i1 %31, label %32, label %37

32:                                               ; preds = %28
  %33 = shl i64 %30, 1
  %34 = icmp ult i64 %33, %24
  %35 = select i1 %34, i64 %24, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %32, %28
  %38 = phi i64 [ %35, %32 ], [ 9223372036854775807, %28 ]
  %39 = tail call i8* @_Znwm(i64 %38) #10
  br label %40

40:                                               ; preds = %37, %32
  %41 = phi i64 [ %38, %37 ], [ 0, %32 ]
  %42 = phi i8* [ %39, %37 ], [ null, %32 ]
  %43 = getelementptr inbounds i8, i8* %42, i64 %23
  %44 = getelementptr inbounds i8, i8* %42, i64 %41
  %45 = ptrtoint i8* %44 to i64
  store i8 %2, i8* %43, align 1
  %46 = getelementptr inbounds i8, i8* %43, i64 1
  %47 = ptrtoint i8* %46 to i64
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = load i64, i64* %20, align 8
  %51 = ptrtoint i8* %49 to i64
  %52 = sub i64 %50, %51
  %53 = sub i64 0, %52
  %54 = getelementptr inbounds i8, i8* %43, i64 %53
  %55 = ptrtoint i8* %54 to i64
  %56 = icmp sgt i64 %52, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %49, i64 %52, i1 false) #11
  %58 = load i8*, i8** %48, align 8
  br label %59

59:                                               ; preds = %57, %40
  %60 = phi i8* [ %49, %40 ], [ %58, %57 ]
  store i64 %55, i64* %21, align 8
  store i64 %47, i64* %20, align 8
  store i64 %45, i64* %29, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %63, label %62

62:                                               ; preds = %59
  tail call void @_ZdlPv(i8* nonnull %60) #10
  br label %63

63:                                               ; preds = %14, %59, %62
  ret void
}

declare void @_ZN8v8_crdtp4cbor15EnvelopeEncoder11EncodeStartEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.v8_crdtp::cbor::EnvelopeEncoder"*, %"class.std::__1::vector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8v8_crdtp19ContainerSerializer10EncodeStopEv(%"class.v8_crdtp::ContainerSerializer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8_crdtp::ContainerSerializer", %"class.v8_crdtp::ContainerSerializer"* %0, i64 0, i32 0
  %3 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %2, align 8
  %4 = tail call zeroext i8 @_ZN8v8_crdtp4cbor10EncodeStopEv() #11
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp ult i8* %6, %8
  %10 = ptrtoint i8* %8 to i64
  br i1 %9, label %11, label %15

11:                                               ; preds = %1
  store i8 %4, i8* %6, align 1
  %12 = getelementptr inbounds i8, i8* %6, i64 1
  %13 = ptrtoint i8* %12 to i64
  %14 = bitcast i8** %5 to i64*
  store i64 %13, i64* %14, align 8
  br label %60

15:                                               ; preds = %1
  %16 = ptrtoint i8* %6 to i64
  %17 = bitcast i8** %5 to i64*
  %18 = bitcast %"class.std::__1::vector"* %3 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %16, %19
  %21 = add i64 %20, 1
  %22 = icmp slt i64 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %15
  %24 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #12
  unreachable

25:                                               ; preds = %15
  %26 = bitcast i8** %7 to i64*
  %27 = sub i64 %10, %19
  %28 = icmp ult i64 %27, 4611686018427387903
  br i1 %28, label %29, label %34

29:                                               ; preds = %25
  %30 = shl i64 %27, 1
  %31 = icmp ult i64 %30, %21
  %32 = select i1 %31, i64 %21, i64 %30
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29, %25
  %35 = phi i64 [ %32, %29 ], [ 9223372036854775807, %25 ]
  %36 = tail call i8* @_Znwm(i64 %35) #10
  br label %37

37:                                               ; preds = %34, %29
  %38 = phi i64 [ %35, %34 ], [ 0, %29 ]
  %39 = phi i8* [ %36, %34 ], [ null, %29 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %20
  %41 = getelementptr inbounds i8, i8* %39, i64 %38
  %42 = ptrtoint i8* %41 to i64
  store i8 %4, i8* %40, align 1
  %43 = getelementptr inbounds i8, i8* %40, i64 1
  %44 = ptrtoint i8* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = load i64, i64* %17, align 8
  %48 = ptrtoint i8* %46 to i64
  %49 = sub i64 %47, %48
  %50 = sub i64 0, %49
  %51 = getelementptr inbounds i8, i8* %40, i64 %50
  %52 = ptrtoint i8* %51 to i64
  %53 = icmp sgt i64 %49, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %37
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %46, i64 %49, i1 false) #11
  %55 = load i8*, i8** %45, align 8
  br label %56

56:                                               ; preds = %54, %37
  %57 = phi i8* [ %46, %37 ], [ %55, %54 ]
  store i64 %52, i64* %18, align 8
  store i64 %44, i64* %17, align 8
  store i64 %42, i64* %26, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %56
  tail call void @_ZdlPv(i8* nonnull %57) #10
  br label %60

60:                                               ; preds = %11, %56, %59
  %61 = getelementptr inbounds %"class.v8_crdtp::ContainerSerializer", %"class.v8_crdtp::ContainerSerializer"* %0, i64 0, i32 1
  %62 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %2, align 8
  %63 = tail call zeroext i1 @_ZN8v8_crdtp4cbor15EnvelopeEncoder10EncodeStopEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.v8_crdtp::cbor::EnvelopeEncoder"* %61, %"class.std::__1::vector"* %62) #11
  ret void
}

declare zeroext i8 @_ZN8v8_crdtp4cbor10EncodeStopEv() local_unnamed_addr #2

declare zeroext i1 @_ZN8v8_crdtp4cbor15EnvelopeEncoder10EncodeStopEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.v8_crdtp::cbor::EnvelopeEncoder"*, %"class.std::__1::vector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8v8_crdtp16ObjectSerializerC2Ev(%"class.v8_crdtp::ObjectSerializer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8_crdtp::ObjectSerializer", %"class.v8_crdtp::ObjectSerializer"* %0, i64 0, i32 0
  %3 = bitcast %"class.v8_crdtp::ObjectSerializer"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #11
  %4 = getelementptr inbounds %"class.v8_crdtp::ObjectSerializer", %"class.v8_crdtp::ObjectSerializer"* %0, i64 0, i32 1
  %5 = tail call zeroext i8 @_ZN8v8_crdtp4cbor30EncodeIndefiniteLengthMapStartEv() #11
  tail call void @_ZN8v8_crdtp19ContainerSerializerC2EPNSt3__16vectorIhNS1_9allocatorIhEEEEh(%"class.v8_crdtp::ContainerSerializer"* %4, %"class.std::__1::vector"* %2, i8 zeroext %5)
  ret void
}

declare zeroext i8 @_ZN8v8_crdtp4cbor30EncodeIndefiniteLengthMapStartEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8v8_crdtp16ObjectSerializerD2Ev(%"class.v8_crdtp::ObjectSerializer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8_crdtp::ObjectSerializer", %"class.v8_crdtp::ObjectSerializer"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"class.v8_crdtp::ObjectSerializer", %"class.v8_crdtp::ObjectSerializer"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  tail call void @_ZdlPv(i8* nonnull %3) #10
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_crdtp::Serializable"* @_ZN8v8_crdtp16ObjectSerializer6FinishEv(%"class.v8_crdtp::ObjectSerializer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector", align 16
  %3 = getelementptr inbounds %"class.v8_crdtp::ObjectSerializer", %"class.v8_crdtp::ObjectSerializer"* %0, i64 0, i32 1
  tail call void @_ZN8v8_crdtp19ContainerSerializer10EncodeStopEv(%"class.v8_crdtp::ContainerSerializer"* %3)
  %4 = bitcast %"class.v8_crdtp::ObjectSerializer"* %0 to <2 x i64>*
  %5 = load <2 x i64>, <2 x i64>* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to <2 x i64>*
  store <2 x i64> %5, <2 x i64>* %6, align 16
  %7 = getelementptr inbounds %"class.v8_crdtp::ObjectSerializer", %"class.v8_crdtp::ObjectSerializer"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast i8** %10 to i64*
  store i64 %9, i64* %11, align 16
  %12 = bitcast %"class.v8_crdtp::ObjectSerializer"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #11
  %13 = call %"class.v8_crdtp::Serializable"* @_ZN8v8_crdtp12Serializable4FromENSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::vector"* nonnull %2) #11
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 16
  %16 = icmp eq i8* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %19 = bitcast i8** %18 to i64*
  %20 = ptrtoint i8* %15 to i64
  store i64 %20, i64* %19, align 8
  call void @_ZdlPv(i8* nonnull %15) #10
  br label %21

21:                                               ; preds = %1, %17
  ret %"class.v8_crdtp::Serializable"* %13
}

declare %"class.v8_crdtp::Serializable"* @_ZN8v8_crdtp12Serializable4FromENSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::vector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8v8_crdtp18ProtocolTypeTraitsIdvE11DeserializeEPNS_17DeserializerStateEPd(%"class.v8_crdtp::DeserializerState"*, double* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %3) #11
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = tail call i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8GetInt32Ev(%"class.v8_crdtp::cbor::CBORTokenizer"* %3) #11
  %8 = sitofp i32 %7 to double
  store double %8, double* %1, align 8
  br label %23

9:                                                ; preds = %2
  %10 = tail call i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %3) #11
  %11 = icmp eq i32 %10, 5
  br i1 %11, label %21, label %12

12:                                               ; preds = %9
  %13 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %3) #11
  %14 = extractvalue { i32, i64 } %13, 0
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %12
  %17 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %3) #11
  %18 = extractvalue { i32, i64 } %17, 1
  %19 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 0
  store i32 51, i32* %19, align 8
  %20 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 1
  store i64 %18, i64* %20, align 8
  br label %23

21:                                               ; preds = %9
  %22 = tail call double @_ZNK8v8_crdtp4cbor13CBORTokenizer9GetDoubleEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %3) #11
  store double %22, double* %1, align 8
  br label %23

23:                                               ; preds = %16, %12, %21, %6
  %24 = phi i1 [ true, %6 ], [ true, %21 ], [ false, %12 ], [ false, %16 ]
  ret i1 %24
}

declare double @_ZNK8v8_crdtp4cbor13CBORTokenizer9GetDoubleEv(%"class.v8_crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8v8_crdtp18ProtocolTypeTraitsIdvE9SerializeEdPNSt3__16vectorIhNS2_9allocatorIhEEEE(double, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN8v8_crdtp4cbor12EncodeDoubleEdPNSt3__16vectorIhNS1_9allocatorIhEEEE(double %0, %"class.std::__1::vector"* %1) #11
  ret void
}

declare void @_ZN8v8_crdtp4cbor12EncodeDoubleEdPNSt3__16vectorIhNS1_9allocatorIhEEEE(double, %"class.std::__1::vector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_crdtp::DeferredMessage"* @_ZN8v8_crdtp15DeferredMessage16FromSerializableENSt3__110unique_ptrINS_12SerializableENS1_14default_deleteIS3_EEEE(%"class.v8_crdtp::Serializable"*) local_unnamed_addr #0 align 2 {
  %2 = ptrtoint %"class.v8_crdtp::Serializable"* %0 to i64
  %3 = tail call i8* @_Znwm(i64 16) #10
  %4 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8v8_crdtp23OutgoingDeferredMessageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i64*
  store i64 %2, i64* %6, align 8
  %7 = bitcast i8* %3 to %"class.v8_crdtp::DeferredMessage"*
  ret %"class.v8_crdtp::DeferredMessage"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_crdtp::DeferredMessage"* @_ZN8v8_crdtp15DeferredMessage8FromSpanENS_4spanIhEE(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint i8* %0 to i64
  %4 = tail call i8* @_Znwm(i64 40) #10
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8v8_crdtp23IncomingDeferredMessageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = getelementptr inbounds i8, i8* %4, i64 24
  %8 = bitcast i8* %7 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #11
  store i64 %3, i64* %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 32
  %10 = bitcast i8* %9 to i64*
  store i64 %1, i64* %10, align 8
  %11 = bitcast i8* %4 to %"class.v8_crdtp::DeferredMessage"*
  ret %"class.v8_crdtp::DeferredMessage"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8v8_crdtp18ProtocolTypeTraitsINSt3__110unique_ptrINS_15DeferredMessageENS1_14default_deleteIS3_EEEEvE11DeserializeEPNS_17DeserializerStateEPS6_(%"class.v8_crdtp::DeserializerState"*, %"class.std::__1::unique_ptr.17"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %3) #11
  %5 = icmp eq i32 %4, 12
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %3) #11
  %8 = extractvalue { i32, i64 } %7, 0
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %67

10:                                               ; preds = %6
  %11 = tail call { i32, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer6StatusEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %3) #11
  %12 = extractvalue { i32, i64 } %11, 1
  %13 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 0
  store i32 16, i32* %13, align 8
  %14 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 1
  store i64 %12, i64* %14, align 8
  br label %67

15:                                               ; preds = %2
  %16 = tail call { i8*, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer11GetEnvelopeEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %3) #11
  %17 = extractvalue { i8*, i64 } %16, 0
  %18 = ptrtoint i8* %17 to i64
  %19 = extractvalue { i8*, i64 } %16, 1
  %20 = tail call i8* @_Znwm(i64 40) #10
  %21 = bitcast %"class.v8_crdtp::DeserializerState"* %0 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 0, i32 1
  %24 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %23, align 8
  %25 = icmp eq %"class.std::__1::__shared_weak_count"* %24, null
  br i1 %25, label %26, label %36

26:                                               ; preds = %15
  %27 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8v8_crdtp23IncomingDeferredMessageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds i8, i8* %20, i64 8
  %29 = bitcast i8* %28 to i64*
  store i64 %22, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %20, i64 16
  %31 = bitcast i8* %30 to %"class.std::__1::__shared_weak_count"**
  store %"class.std::__1::__shared_weak_count"* null, %"class.std::__1::__shared_weak_count"** %31, align 8
  %32 = getelementptr inbounds i8, i8* %20, i64 24
  %33 = bitcast i8* %32 to i64*
  store i64 %18, i64* %33, align 8
  %34 = getelementptr inbounds i8, i8* %20, i64 32
  %35 = bitcast i8* %34 to i64*
  store i64 %19, i64* %35, align 8
  br label %57

36:                                               ; preds = %15
  %37 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %24, i64 0, i32 0, i32 1
  %38 = atomicrmw add i64* %37, i64 1 monotonic
  %39 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8v8_crdtp23IncomingDeferredMessageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds i8, i8* %20, i64 8
  %41 = bitcast i8* %40 to i64*
  store i64 %22, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %20, i64 16
  %43 = bitcast i8* %42 to %"class.std::__1::__shared_weak_count"**
  store %"class.std::__1::__shared_weak_count"* %24, %"class.std::__1::__shared_weak_count"** %43, align 8
  %44 = atomicrmw add i64* %37, i64 1 monotonic
  %45 = getelementptr inbounds i8, i8* %20, i64 24
  %46 = bitcast i8* %45 to i64*
  store i64 %18, i64* %46, align 8
  %47 = getelementptr inbounds i8, i8* %20, i64 32
  %48 = bitcast i8* %47 to i64*
  store i64 %19, i64* %48, align 8
  %49 = atomicrmw add i64* %37, i64 -1 acq_rel
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %57

51:                                               ; preds = %36
  %52 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %24, i64 0, i32 0
  %53 = bitcast %"class.std::__1::__shared_weak_count"* %24 to void (%"class.std::__1::__shared_count"*)***
  %54 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %54, i64 2
  %56 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %55, align 8
  tail call void %56(%"class.std::__1::__shared_count"* %52) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %24) #11
  br label %57

57:                                               ; preds = %26, %36, %51
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.17"* %1, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.v8_crdtp::DeferredMessage"*, %"class.v8_crdtp::DeferredMessage"** %58, align 8
  %60 = bitcast %"class.std::__1::unique_ptr.17"* %1 to i8**
  store i8* %20, i8** %60, align 8
  %61 = icmp eq %"class.v8_crdtp::DeferredMessage"* %59, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8_crdtp::DeferredMessage"* %59 to void (%"class.v8_crdtp::DeferredMessage"*)***
  %64 = load void (%"class.v8_crdtp::DeferredMessage"*)**, void (%"class.v8_crdtp::DeferredMessage"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.v8_crdtp::DeferredMessage"*)*, void (%"class.v8_crdtp::DeferredMessage"*)** %64, i64 2
  %66 = load void (%"class.v8_crdtp::DeferredMessage"*)*, void (%"class.v8_crdtp::DeferredMessage"*)** %65, align 8
  tail call void %66(%"class.v8_crdtp::DeferredMessage"* nonnull %59) #11
  br label %67

67:                                               ; preds = %57, %62, %10, %6
  %68 = phi i1 [ false, %6 ], [ false, %10 ], [ true, %62 ], [ true, %57 ]
  ret i1 %68
}

declare { i8*, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer11GetEnvelopeEv(%"class.v8_crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8v8_crdtp18ProtocolTypeTraitsINSt3__110unique_ptrINS_15DeferredMessageENS1_14default_deleteIS3_EEEEvE9SerializeERKS6_PNS1_6vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::unique_ptr.17"* nocapture readonly dereferenceable(8), %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.17"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.v8_crdtp::DeferredMessage"*, %"class.v8_crdtp::DeferredMessage"** %3, align 8
  %5 = getelementptr inbounds %"class.v8_crdtp::DeferredMessage", %"class.v8_crdtp::DeferredMessage"* %4, i64 0, i32 0
  %6 = bitcast %"class.v8_crdtp::DeferredMessage"* %4 to void (%"class.v8_crdtp::Serializable"*, %"class.std::__1::vector"*)***
  %7 = load void (%"class.v8_crdtp::Serializable"*, %"class.std::__1::vector"*)**, void (%"class.v8_crdtp::Serializable"*, %"class.std::__1::vector"*)*** %6, align 8
  %8 = load void (%"class.v8_crdtp::Serializable"*, %"class.std::__1::vector"*)*, void (%"class.v8_crdtp::Serializable"*, %"class.std::__1::vector"*)** %7, align 8
  tail call void %8(%"class.v8_crdtp::Serializable"* %5, %"class.std::__1::vector"* %1) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPNS_6vectorIhNS_9allocatorIhEEEENS_10shared_ptrIKS4_E27__shared_ptr_default_deleteIS7_S4_EENS2_IS4_EEED0Ev(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %2) #11
  %3 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPNS_6vectorIhNS_9allocatorIhEEEENS_10shared_ptrIKS4_E27__shared_ptr_default_deleteIS7_S4_EENS2_IS4_EEE16__on_zero_sharedEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %2, align 8
  %4 = icmp eq %"class.std::__1::vector"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = ptrtoint i8* %7 to i64
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %12 = bitcast i8** %11 to i64*
  store i64 %10, i64* %12, align 8
  tail call void @_ZdlPv(i8* nonnull %7) #10
  br label %13

13:                                               ; preds = %9, %5
  %14 = bitcast %"class.std::__1::vector"* %3 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %1, %13
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPNS_6vectorIhNS_9allocatorIhEEEENS_10shared_ptrIKS4_E27__shared_ptr_default_deleteIS7_S4_EENS2_IS4_EEE21__on_zero_shared_weakEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPKcEERS5_T_SA_(%"class.std::__1::basic_string"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %1 to i64
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = zext i8 %8 to i64
  br label %19

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 9223372036854775807
  %18 = add nsw i64 %17, -1
  br label %19

19:                                               ; preds = %10, %12
  %20 = phi i64 [ %14, %12 ], [ %11, %10 ]
  %21 = phi i64 [ %18, %12 ], [ 22, %10 ]
  %22 = ptrtoint i8* %2 to i64
  %23 = sub i64 %22, %4
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %308, label %25

25:                                               ; preds = %19
  br i1 %9, label %26, label %31

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  br label %34

31:                                               ; preds = %25
  %32 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %33 = zext i8 %8 to i64
  br label %34

34:                                               ; preds = %26, %31
  %35 = phi i8* [ %28, %26 ], [ %32, %31 ]
  %36 = phi i64 [ %30, %26 ], [ %33, %31 ]
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = icmp ule i8* %35, %1
  %39 = icmp ugt i8* %37, %1
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %177

41:                                               ; preds = %34
  %42 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #11
  %43 = icmp ugt i64 %23, -17
  br i1 %43, label %44, label %46

44:                                               ; preds = %41
  %45 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %45) #12
  unreachable

46:                                               ; preds = %41
  %47 = icmp ult i64 %23, 23
  br i1 %47, label %48, label %52

48:                                               ; preds = %46
  %49 = trunc i64 %23 to i8
  %50 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  store i8 %49, i8* %51, align 1
  br label %60

52:                                               ; preds = %46
  %53 = add nuw i64 %23, 16
  %54 = and i64 %53, -16
  %55 = tail call i8* @_Znwm(i64 %54) #10
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %55, i8** %56, align 8
  %57 = or i64 %54, -9223372036854775808
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %23, i64* %59, align 8
  br label %60

60:                                               ; preds = %52, %48
  %61 = phi i8* [ %42, %48 ], [ %55, %52 ]
  %62 = icmp eq i8* %1, %2
  br i1 %62, label %158, label %63

63:                                               ; preds = %60
  %64 = ptrtoint i8* %2 to i64
  %65 = sub i64 %64, %4
  %66 = icmp ult i64 %65, 32
  br i1 %66, label %148, label %67

67:                                               ; preds = %63
  %68 = and i64 %65, -32
  %69 = getelementptr i8, i8* %1, i64 %68
  %70 = getelementptr i8, i8* %61, i64 %68
  %71 = add i64 %68, -32
  %72 = lshr exact i64 %71, 5
  %73 = add nuw nsw i64 %72, 1
  %74 = and i64 %73, 3
  %75 = icmp ult i64 %71, 96
  br i1 %75, label %127, label %76

76:                                               ; preds = %67
  %77 = sub nsw i64 %73, %74
  br label %78

78:                                               ; preds = %78, %76
  %79 = phi i64 [ 0, %76 ], [ %124, %78 ]
  %80 = phi i64 [ %77, %76 ], [ %125, %78 ]
  %81 = getelementptr i8, i8* %1, i64 %79
  %82 = getelementptr i8, i8* %61, i64 %79
  %83 = bitcast i8* %81 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1
  %85 = getelementptr i8, i8* %81, i64 16
  %86 = bitcast i8* %85 to <16 x i8>*
  %87 = load <16 x i8>, <16 x i8>* %86, align 1
  %88 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %88, align 1
  %89 = getelementptr i8, i8* %82, i64 16
  %90 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %87, <16 x i8>* %90, align 1
  %91 = or i64 %79, 32
  %92 = getelementptr i8, i8* %1, i64 %91
  %93 = getelementptr i8, i8* %61, i64 %91
  %94 = bitcast i8* %92 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1
  %96 = getelementptr i8, i8* %92, i64 16
  %97 = bitcast i8* %96 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1
  %99 = bitcast i8* %93 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %99, align 1
  %100 = getelementptr i8, i8* %93, i64 16
  %101 = bitcast i8* %100 to <16 x i8>*
  store <16 x i8> %98, <16 x i8>* %101, align 1
  %102 = or i64 %79, 64
  %103 = getelementptr i8, i8* %1, i64 %102
  %104 = getelementptr i8, i8* %61, i64 %102
  %105 = bitcast i8* %103 to <16 x i8>*
  %106 = load <16 x i8>, <16 x i8>* %105, align 1
  %107 = getelementptr i8, i8* %103, i64 16
  %108 = bitcast i8* %107 to <16 x i8>*
  %109 = load <16 x i8>, <16 x i8>* %108, align 1
  %110 = bitcast i8* %104 to <16 x i8>*
  store <16 x i8> %106, <16 x i8>* %110, align 1
  %111 = getelementptr i8, i8* %104, i64 16
  %112 = bitcast i8* %111 to <16 x i8>*
  store <16 x i8> %109, <16 x i8>* %112, align 1
  %113 = or i64 %79, 96
  %114 = getelementptr i8, i8* %1, i64 %113
  %115 = getelementptr i8, i8* %61, i64 %113
  %116 = bitcast i8* %114 to <16 x i8>*
  %117 = load <16 x i8>, <16 x i8>* %116, align 1
  %118 = getelementptr i8, i8* %114, i64 16
  %119 = bitcast i8* %118 to <16 x i8>*
  %120 = load <16 x i8>, <16 x i8>* %119, align 1
  %121 = bitcast i8* %115 to <16 x i8>*
  store <16 x i8> %117, <16 x i8>* %121, align 1
  %122 = getelementptr i8, i8* %115, i64 16
  %123 = bitcast i8* %122 to <16 x i8>*
  store <16 x i8> %120, <16 x i8>* %123, align 1
  %124 = add i64 %79, 128
  %125 = add i64 %80, -4
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %78, !llvm.loop !6

127:                                              ; preds = %78, %67
  %128 = phi i64 [ 0, %67 ], [ %124, %78 ]
  %129 = icmp eq i64 %74, 0
  br i1 %129, label %146, label %130

130:                                              ; preds = %127, %130
  %131 = phi i64 [ %143, %130 ], [ %128, %127 ]
  %132 = phi i64 [ %144, %130 ], [ %74, %127 ]
  %133 = getelementptr i8, i8* %1, i64 %131
  %134 = getelementptr i8, i8* %61, i64 %131
  %135 = bitcast i8* %133 to <16 x i8>*
  %136 = load <16 x i8>, <16 x i8>* %135, align 1
  %137 = getelementptr i8, i8* %133, i64 16
  %138 = bitcast i8* %137 to <16 x i8>*
  %139 = load <16 x i8>, <16 x i8>* %138, align 1
  %140 = bitcast i8* %134 to <16 x i8>*
  store <16 x i8> %136, <16 x i8>* %140, align 1
  %141 = getelementptr i8, i8* %134, i64 16
  %142 = bitcast i8* %141 to <16 x i8>*
  store <16 x i8> %139, <16 x i8>* %142, align 1
  %143 = add i64 %131, 32
  %144 = add i64 %132, -1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %130, !llvm.loop !8

146:                                              ; preds = %130, %127
  %147 = icmp eq i64 %65, %68
  br i1 %147, label %158, label %148

148:                                              ; preds = %146, %63
  %149 = phi i8* [ %1, %63 ], [ %69, %146 ]
  %150 = phi i8* [ %61, %63 ], [ %70, %146 ]
  br label %151

151:                                              ; preds = %148, %151
  %152 = phi i8* [ %155, %151 ], [ %149, %148 ]
  %153 = phi i8* [ %156, %151 ], [ %150, %148 ]
  %154 = load i8, i8* %152, align 1
  store i8 %154, i8* %153, align 1
  %155 = getelementptr inbounds i8, i8* %152, i64 1
  %156 = getelementptr inbounds i8, i8* %153, i64 1
  %157 = icmp eq i8* %155, %2
  br i1 %157, label %158, label %151, !llvm.loop !10

158:                                              ; preds = %151, %146, %60
  %159 = phi i8* [ %61, %60 ], [ %70, %146 ], [ %156, %151 ]
  store i8 0, i8* %159, align 1
  %160 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %167 = load i64, i64* %166, align 8
  %168 = zext i8 %162 to i64
  %169 = select i1 %163, i8* %165, i8* %42
  %170 = select i1 %163, i64 %167, i64 %168
  %171 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %169, i64 %170) #11
  %172 = load i8, i8* %161, align 1
  %173 = icmp slt i8 %172, 0
  br i1 %173, label %174, label %176

174:                                              ; preds = %158
  %175 = load i8*, i8** %164, align 8
  call void @_ZdlPv(i8* %175) #10
  br label %176

176:                                              ; preds = %158, %174
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #11
  br label %308

177:                                              ; preds = %34
  %178 = sub i64 %21, %20
  %179 = icmp ult i64 %178, %23
  br i1 %179, label %180, label %184

180:                                              ; preds = %177
  %181 = add i64 %20, %23
  %182 = sub i64 %181, %21
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %0, i64 %21, i64 %182, i64 %20, i64 %20, i64 0, i64 0) #11
  %183 = load i8, i8* %7, align 1
  br label %184

184:                                              ; preds = %180, %177
  %185 = phi i8 [ %183, %180 ], [ %8, %177 ]
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %190

187:                                              ; preds = %184
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load i8*, i8** %188, align 8
  br label %192

190:                                              ; preds = %184
  %191 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %192

192:                                              ; preds = %187, %190
  %193 = phi i8* [ %189, %187 ], [ %191, %190 ]
  %194 = getelementptr inbounds i8, i8* %193, i64 %20
  %195 = icmp eq i8* %1, %2
  br i1 %195, label %299, label %196

196:                                              ; preds = %192
  %197 = ptrtoint i8* %2 to i64
  %198 = sub i64 %197, %4
  %199 = icmp ult i64 %198, 32
  br i1 %199, label %289, label %200

200:                                              ; preds = %196
  %201 = sub i64 %20, %4
  %202 = getelementptr i8, i8* %2, i64 %201
  %203 = ptrtoint i8* %202 to i64
  %204 = getelementptr i8, i8* %193, i64 %203
  %205 = icmp ult i8* %194, %2
  %206 = icmp ugt i8* %204, %1
  %207 = and i1 %205, %206
  br i1 %207, label %289, label %208

208:                                              ; preds = %200
  %209 = and i64 %198, -32
  %210 = getelementptr i8, i8* %194, i64 %209
  %211 = getelementptr i8, i8* %1, i64 %209
  %212 = add i64 %209, -32
  %213 = lshr exact i64 %212, 5
  %214 = add nuw nsw i64 %213, 1
  %215 = and i64 %214, 3
  %216 = icmp ult i64 %212, 96
  br i1 %216, label %268, label %217

217:                                              ; preds = %208
  %218 = sub nsw i64 %214, %215
  br label %219

219:                                              ; preds = %219, %217
  %220 = phi i64 [ 0, %217 ], [ %265, %219 ]
  %221 = phi i64 [ %218, %217 ], [ %266, %219 ]
  %222 = getelementptr i8, i8* %194, i64 %220
  %223 = getelementptr i8, i8* %1, i64 %220
  %224 = bitcast i8* %223 to <16 x i8>*
  %225 = load <16 x i8>, <16 x i8>* %224, align 1, !alias.scope !12
  %226 = getelementptr i8, i8* %223, i64 16
  %227 = bitcast i8* %226 to <16 x i8>*
  %228 = load <16 x i8>, <16 x i8>* %227, align 1, !alias.scope !12
  %229 = bitcast i8* %222 to <16 x i8>*
  store <16 x i8> %225, <16 x i8>* %229, align 1, !alias.scope !15, !noalias !12
  %230 = getelementptr i8, i8* %222, i64 16
  %231 = bitcast i8* %230 to <16 x i8>*
  store <16 x i8> %228, <16 x i8>* %231, align 1, !alias.scope !15, !noalias !12
  %232 = or i64 %220, 32
  %233 = getelementptr i8, i8* %194, i64 %232
  %234 = getelementptr i8, i8* %1, i64 %232
  %235 = bitcast i8* %234 to <16 x i8>*
  %236 = load <16 x i8>, <16 x i8>* %235, align 1, !alias.scope !12
  %237 = getelementptr i8, i8* %234, i64 16
  %238 = bitcast i8* %237 to <16 x i8>*
  %239 = load <16 x i8>, <16 x i8>* %238, align 1, !alias.scope !12
  %240 = bitcast i8* %233 to <16 x i8>*
  store <16 x i8> %236, <16 x i8>* %240, align 1, !alias.scope !15, !noalias !12
  %241 = getelementptr i8, i8* %233, i64 16
  %242 = bitcast i8* %241 to <16 x i8>*
  store <16 x i8> %239, <16 x i8>* %242, align 1, !alias.scope !15, !noalias !12
  %243 = or i64 %220, 64
  %244 = getelementptr i8, i8* %194, i64 %243
  %245 = getelementptr i8, i8* %1, i64 %243
  %246 = bitcast i8* %245 to <16 x i8>*
  %247 = load <16 x i8>, <16 x i8>* %246, align 1, !alias.scope !12
  %248 = getelementptr i8, i8* %245, i64 16
  %249 = bitcast i8* %248 to <16 x i8>*
  %250 = load <16 x i8>, <16 x i8>* %249, align 1, !alias.scope !12
  %251 = bitcast i8* %244 to <16 x i8>*
  store <16 x i8> %247, <16 x i8>* %251, align 1, !alias.scope !15, !noalias !12
  %252 = getelementptr i8, i8* %244, i64 16
  %253 = bitcast i8* %252 to <16 x i8>*
  store <16 x i8> %250, <16 x i8>* %253, align 1, !alias.scope !15, !noalias !12
  %254 = or i64 %220, 96
  %255 = getelementptr i8, i8* %194, i64 %254
  %256 = getelementptr i8, i8* %1, i64 %254
  %257 = bitcast i8* %256 to <16 x i8>*
  %258 = load <16 x i8>, <16 x i8>* %257, align 1, !alias.scope !12
  %259 = getelementptr i8, i8* %256, i64 16
  %260 = bitcast i8* %259 to <16 x i8>*
  %261 = load <16 x i8>, <16 x i8>* %260, align 1, !alias.scope !12
  %262 = bitcast i8* %255 to <16 x i8>*
  store <16 x i8> %258, <16 x i8>* %262, align 1, !alias.scope !15, !noalias !12
  %263 = getelementptr i8, i8* %255, i64 16
  %264 = bitcast i8* %263 to <16 x i8>*
  store <16 x i8> %261, <16 x i8>* %264, align 1, !alias.scope !15, !noalias !12
  %265 = add i64 %220, 128
  %266 = add i64 %221, -4
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %219, !llvm.loop !17

268:                                              ; preds = %219, %208
  %269 = phi i64 [ 0, %208 ], [ %265, %219 ]
  %270 = icmp eq i64 %215, 0
  br i1 %270, label %287, label %271

271:                                              ; preds = %268, %271
  %272 = phi i64 [ %284, %271 ], [ %269, %268 ]
  %273 = phi i64 [ %285, %271 ], [ %215, %268 ]
  %274 = getelementptr i8, i8* %194, i64 %272
  %275 = getelementptr i8, i8* %1, i64 %272
  %276 = bitcast i8* %275 to <16 x i8>*
  %277 = load <16 x i8>, <16 x i8>* %276, align 1, !alias.scope !12
  %278 = getelementptr i8, i8* %275, i64 16
  %279 = bitcast i8* %278 to <16 x i8>*
  %280 = load <16 x i8>, <16 x i8>* %279, align 1, !alias.scope !12
  %281 = bitcast i8* %274 to <16 x i8>*
  store <16 x i8> %277, <16 x i8>* %281, align 1, !alias.scope !15, !noalias !12
  %282 = getelementptr i8, i8* %274, i64 16
  %283 = bitcast i8* %282 to <16 x i8>*
  store <16 x i8> %280, <16 x i8>* %283, align 1, !alias.scope !15, !noalias !12
  %284 = add i64 %272, 32
  %285 = add i64 %273, -1
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %287, label %271, !llvm.loop !18

287:                                              ; preds = %271, %268
  %288 = icmp eq i64 %198, %209
  br i1 %288, label %299, label %289

289:                                              ; preds = %287, %200, %196
  %290 = phi i8* [ %194, %200 ], [ %194, %196 ], [ %210, %287 ]
  %291 = phi i8* [ %1, %200 ], [ %1, %196 ], [ %211, %287 ]
  br label %292

292:                                              ; preds = %289, %292
  %293 = phi i8* [ %296, %292 ], [ %290, %289 ]
  %294 = phi i8* [ %297, %292 ], [ %291, %289 ]
  %295 = load i8, i8* %294, align 1
  store i8 %295, i8* %293, align 1
  %296 = getelementptr inbounds i8, i8* %293, i64 1
  %297 = getelementptr inbounds i8, i8* %294, i64 1
  %298 = icmp eq i8* %297, %2
  br i1 %298, label %299, label %292, !llvm.loop !19

299:                                              ; preds = %292, %287, %192
  %300 = phi i8* [ %194, %192 ], [ %210, %287 ], [ %296, %292 ]
  store i8 0, i8* %300, align 1
  %301 = add i64 %20, %23
  %302 = load i8, i8* %7, align 1
  %303 = icmp slt i8 %302, 0
  br i1 %303, label %304, label %306

304:                                              ; preds = %299
  %305 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %301, i64* %305, align 8
  br label %308

306:                                              ; preds = %299
  %307 = trunc i64 %301 to i8
  store i8 %307, i8* %7, align 1
  br label %308

308:                                              ; preds = %306, %304, %176, %19
  ret %"class.std::__1::basic_string"* %0
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare zeroext i1 @_ZN8v8_crdtp12SpanLessThanENS_4spanIcEES1_(i8*, i64, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK8v8_crdtp23OutgoingDeferredMessage16AppendSerializedEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.v8_crdtp::OutgoingDeferredMessage"*, %"class.std::__1::vector"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8_crdtp::OutgoingDeferredMessage", %"class.v8_crdtp::OutgoingDeferredMessage"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8_crdtp::Serializable"*, %"class.v8_crdtp::Serializable"** %3, align 8
  %5 = bitcast %"class.v8_crdtp::Serializable"* %4 to void (%"class.v8_crdtp::Serializable"*, %"class.std::__1::vector"*)***
  %6 = load void (%"class.v8_crdtp::Serializable"*, %"class.std::__1::vector"*)**, void (%"class.v8_crdtp::Serializable"*, %"class.std::__1::vector"*)*** %5, align 8
  %7 = load void (%"class.v8_crdtp::Serializable"*, %"class.std::__1::vector"*)*, void (%"class.v8_crdtp::Serializable"*, %"class.std::__1::vector"*)** %6, align 8
  tail call void %7(%"class.v8_crdtp::Serializable"* %4, %"class.std::__1::vector"* %1) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8v8_crdtp23OutgoingDeferredMessageD2Ev(%"class.v8_crdtp::OutgoingDeferredMessage"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8_crdtp::OutgoingDeferredMessage", %"class.v8_crdtp::OutgoingDeferredMessage"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8v8_crdtp23OutgoingDeferredMessageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_crdtp::OutgoingDeferredMessage", %"class.v8_crdtp::OutgoingDeferredMessage"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8_crdtp::Serializable"*, %"class.v8_crdtp::Serializable"** %3, align 8
  store %"class.v8_crdtp::Serializable"* null, %"class.v8_crdtp::Serializable"** %3, align 8
  %5 = icmp eq %"class.v8_crdtp::Serializable"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8_crdtp::Serializable"* %4 to void (%"class.v8_crdtp::Serializable"*)***
  %8 = load void (%"class.v8_crdtp::Serializable"*)**, void (%"class.v8_crdtp::Serializable"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.v8_crdtp::Serializable"*)*, void (%"class.v8_crdtp::Serializable"*)** %8, i64 2
  %10 = load void (%"class.v8_crdtp::Serializable"*)*, void (%"class.v8_crdtp::Serializable"*)** %9, align 8
  tail call void %10(%"class.v8_crdtp::Serializable"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8v8_crdtp23OutgoingDeferredMessageD0Ev(%"class.v8_crdtp::OutgoingDeferredMessage"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8_crdtp::OutgoingDeferredMessage", %"class.v8_crdtp::OutgoingDeferredMessage"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8v8_crdtp23OutgoingDeferredMessageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_crdtp::OutgoingDeferredMessage", %"class.v8_crdtp::OutgoingDeferredMessage"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8_crdtp::Serializable"*, %"class.v8_crdtp::Serializable"** %3, align 8
  store %"class.v8_crdtp::Serializable"* null, %"class.v8_crdtp::Serializable"** %3, align 8
  %5 = icmp eq %"class.v8_crdtp::Serializable"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8_crdtp::Serializable"* %4 to void (%"class.v8_crdtp::Serializable"*)***
  %8 = load void (%"class.v8_crdtp::Serializable"*)**, void (%"class.v8_crdtp::Serializable"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.v8_crdtp::Serializable"*)*, void (%"class.v8_crdtp::Serializable"*)** %8, i64 2
  %10 = load void (%"class.v8_crdtp::Serializable"*)*, void (%"class.v8_crdtp::Serializable"*)** %9, align 8
  tail call void %10(%"class.v8_crdtp::Serializable"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.v8_crdtp::OutgoingDeferredMessage"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK8v8_crdtp23OutgoingDeferredMessage16MakeDeserializerEv(%"class.v8_crdtp::DeserializerState"* noalias sret, %"class.v8_crdtp::OutgoingDeferredMessage"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = getelementptr inbounds %"class.v8_crdtp::OutgoingDeferredMessage", %"class.v8_crdtp::OutgoingDeferredMessage"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.v8_crdtp::Serializable"*, %"class.v8_crdtp::Serializable"** %4, align 8
  call void @_ZNK8v8_crdtp12Serializable9SerializeEv(%"class.std::__1::vector"* nonnull sret %3, %"class.v8_crdtp::Serializable"* %5) #11
  %6 = call i8* @_Znwm(i64 24) #10
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast i8* %6 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds i8, i8* %6, i64 8
  %12 = bitcast i8** %10 to <2 x i64>*
  %13 = load <2 x i64>, <2 x i64>* %12, align 8
  %14 = bitcast i8* %11 to <2 x i64>*
  store <2 x i64> %13, <2 x i64>* %14, align 8
  %15 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #11
  %16 = bitcast %"class.v8_crdtp::DeserializerState"* %0 to i8**
  store i8* %6, i8** %16, align 8
  %17 = ptrtoint i8* %6 to i64
  %18 = call i8* @_Znwm(i64 32) #10
  %19 = bitcast i8* %18 to i32 (...)***
  %20 = getelementptr inbounds i8, i8* %18, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPNS_6vectorIhNS_9allocatorIhEEEENS_10shared_ptrIKS4_E27__shared_ptr_default_deleteIS7_S4_EENS2_IS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %21 = getelementptr inbounds i8, i8* %18, i64 24
  %22 = bitcast i8* %21 to i64*
  store i64 %17, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::__shared_weak_count"** %23 to i8**
  store i8* %18, i8** %24, align 8
  %25 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 1
  %26 = inttoptr i64 %8 to i8*
  %27 = extractelement <2 x i64> %13, i32 0
  %28 = sub i64 %27, %8
  call void @_ZN8v8_crdtp4cbor13CBORTokenizerC1ENS_4spanIhEE(%"class.v8_crdtp::cbor::CBORTokenizer"* %25, i8* %26, i64 %28) #11
  %29 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 0
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 1
  store i64 -1, i64* %30, align 8
  %31 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 3
  %32 = bitcast %"class.std::__1::vector.1"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #11
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %2
  %37 = bitcast i8** %10 to i64*
  %38 = ptrtoint i8* %34 to i64
  store i64 %38, i64* %37, align 8
  call void @_ZdlPv(i8* nonnull %34) #10
  br label %39

39:                                               ; preds = %2, %36
  ret void
}

declare void @_ZNK8v8_crdtp12Serializable9SerializeEv(%"class.std::__1::vector"* sret, %"class.v8_crdtp::Serializable"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK8v8_crdtp23IncomingDeferredMessage16AppendSerializedEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.v8_crdtp::IncomingDeferredMessage"*, %"class.std::__1::vector"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.v8_crdtp::IncomingDeferredMessage", %"class.v8_crdtp::IncomingDeferredMessage"* %0, i64 0, i32 2, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8_crdtp::IncomingDeferredMessage", %"class.v8_crdtp::IncomingDeferredMessage"* %0, i64 0, i32 2, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* %6, i64 %8
  %10 = tail call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"* %1, i8* %4, i8* %6, i8* %9)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8v8_crdtp23IncomingDeferredMessageD2Ev(%"class.v8_crdtp::IncomingDeferredMessage"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8_crdtp::IncomingDeferredMessage", %"class.v8_crdtp::IncomingDeferredMessage"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8v8_crdtp23IncomingDeferredMessageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_crdtp::IncomingDeferredMessage", %"class.v8_crdtp::IncomingDeferredMessage"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8v8_crdtp23IncomingDeferredMessageD0Ev(%"class.v8_crdtp::IncomingDeferredMessage"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8_crdtp::IncomingDeferredMessage", %"class.v8_crdtp::IncomingDeferredMessage"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8v8_crdtp23IncomingDeferredMessageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_crdtp::IncomingDeferredMessage", %"class.v8_crdtp::IncomingDeferredMessage"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"class.v8_crdtp::IncomingDeferredMessage"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK8v8_crdtp23IncomingDeferredMessage16MakeDeserializerEv(%"class.v8_crdtp::DeserializerState"* noalias sret, %"class.v8_crdtp::IncomingDeferredMessage"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8_crdtp::IncomingDeferredMessage", %"class.v8_crdtp::IncomingDeferredMessage"* %1, i64 0, i32 1
  %4 = bitcast %"class.std::__1::shared_ptr"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8_crdtp::IncomingDeferredMessage", %"class.v8_crdtp::IncomingDeferredMessage"* %1, i64 0, i32 1, i32 1
  %7 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %6, align 8
  %8 = icmp eq %"class.std::__1::__shared_weak_count"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %7, i64 0, i32 0, i32 1
  %11 = atomicrmw add i64* %10, i64 1 monotonic
  br label %12

12:                                               ; preds = %2, %9
  %13 = getelementptr inbounds %"class.v8_crdtp::IncomingDeferredMessage", %"class.v8_crdtp::IncomingDeferredMessage"* %1, i64 0, i32 2, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.v8_crdtp::IncomingDeferredMessage", %"class.v8_crdtp::IncomingDeferredMessage"* %1, i64 0, i32 2, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = ptrtoint %"class.std::__1::__shared_weak_count"* %7 to i64
  %18 = bitcast %"class.v8_crdtp::DeserializerState"* %0 to i64*
  store i64 %5, i64* %18, align 8
  %19 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::__shared_weak_count"** %19 to i64*
  store i64 %17, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 1
  tail call void @_ZN8v8_crdtp4cbor13CBORTokenizerC1ENS_4spanIhEE(%"class.v8_crdtp::cbor::CBORTokenizer"* %21, i8* %14, i64 %16) #11
  %22 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 0
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 2, i32 1
  store i64 -1, i64* %23, align 8
  %24 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 3
  %25 = bitcast %"class.std::__1::vector.1"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"*, i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint i8* %3 to i64
  %8 = ptrtoint i8* %2 to i64
  %9 = sub i64 %7, %8
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %414

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %164, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %37

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = ptrtoint i8* %25 to i64
  %27 = sub i64 %7, %26
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %25, i64 %27, i1 false) #11
  %30 = getelementptr inbounds i8, i8* %16, i64 %27
  %31 = ptrtoint i8* %30 to i64
  br label %32

32:                                               ; preds = %29, %24
  %33 = phi i64 [ %31, %29 ], [ %17, %24 ]
  store i64 %33, i64* %20, align 8
  %34 = icmp sgt i64 %22, 0
  br i1 %34, label %35, label %414

35:                                               ; preds = %32
  %36 = inttoptr i64 %33 to i8*
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi i64 [ %33, %35 ], [ %17, %21 ]
  %39 = phi i8* [ %36, %35 ], [ %16, %21 ]
  %40 = phi i8* [ %25, %35 ], [ %3, %21 ]
  %41 = getelementptr inbounds i8, i8* %1, i64 %9
  %42 = ptrtoint i8* %41 to i64
  %43 = sub i64 %38, %42
  %44 = getelementptr inbounds i8, i8* %1, i64 %43
  %45 = icmp ult i8* %44, %16
  br i1 %45, label %46, label %146

46:                                               ; preds = %37
  %47 = sub i64 %9, %38
  %48 = getelementptr i8, i8* %16, i64 %47
  %49 = ptrtoint i8* %48 to i64
  %50 = icmp ult i8* %48, inttoptr (i64 32 to i8*)
  br i1 %50, label %51, label %54

51:                                               ; preds = %141, %54, %46
  %52 = phi i8* [ %44, %54 ], [ %44, %46 ], [ %64, %141 ]
  %53 = phi i8* [ %39, %54 ], [ %39, %46 ], [ %65, %141 ]
  br label %152

54:                                               ; preds = %46
  %55 = sub i64 %9, %38
  %56 = getelementptr i8, i8* %16, i64 %55
  %57 = ptrtoint i8* %56 to i64
  %58 = getelementptr i8, i8* %39, i64 %57
  %59 = icmp ult i8* %39, %16
  %60 = icmp ult i8* %44, %58
  %61 = and i1 %59, %60
  br i1 %61, label %51, label %62

62:                                               ; preds = %54
  %63 = and i64 %49, -32
  %64 = getelementptr i8, i8* %44, i64 %63
  %65 = getelementptr i8, i8* %39, i64 %63
  %66 = add i64 %63, -32
  %67 = lshr exact i64 %66, 5
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 96
  br i1 %70, label %122, label %71

71:                                               ; preds = %62
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i8, i8* %44, i64 %74
  %77 = getelementptr i8, i8* %39, i64 %74
  %78 = bitcast i8* %76 to <16 x i8>*
  %79 = load <16 x i8>, <16 x i8>* %78, align 1, !alias.scope !20
  %80 = getelementptr i8, i8* %76, i64 16
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1, !alias.scope !20
  %83 = bitcast i8* %77 to <16 x i8>*
  store <16 x i8> %79, <16 x i8>* %83, align 1, !alias.scope !23, !noalias !20
  %84 = getelementptr i8, i8* %77, i64 16
  %85 = bitcast i8* %84 to <16 x i8>*
  store <16 x i8> %82, <16 x i8>* %85, align 1, !alias.scope !23, !noalias !20
  %86 = or i64 %74, 32
  %87 = getelementptr i8, i8* %44, i64 %86
  %88 = getelementptr i8, i8* %39, i64 %86
  %89 = bitcast i8* %87 to <16 x i8>*
  %90 = load <16 x i8>, <16 x i8>* %89, align 1, !alias.scope !20
  %91 = getelementptr i8, i8* %87, i64 16
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1, !alias.scope !20
  %94 = bitcast i8* %88 to <16 x i8>*
  store <16 x i8> %90, <16 x i8>* %94, align 1, !alias.scope !23, !noalias !20
  %95 = getelementptr i8, i8* %88, i64 16
  %96 = bitcast i8* %95 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %96, align 1, !alias.scope !23, !noalias !20
  %97 = or i64 %74, 64
  %98 = getelementptr i8, i8* %44, i64 %97
  %99 = getelementptr i8, i8* %39, i64 %97
  %100 = bitcast i8* %98 to <16 x i8>*
  %101 = load <16 x i8>, <16 x i8>* %100, align 1, !alias.scope !20
  %102 = getelementptr i8, i8* %98, i64 16
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1, !alias.scope !20
  %105 = bitcast i8* %99 to <16 x i8>*
  store <16 x i8> %101, <16 x i8>* %105, align 1, !alias.scope !23, !noalias !20
  %106 = getelementptr i8, i8* %99, i64 16
  %107 = bitcast i8* %106 to <16 x i8>*
  store <16 x i8> %104, <16 x i8>* %107, align 1, !alias.scope !23, !noalias !20
  %108 = or i64 %74, 96
  %109 = getelementptr i8, i8* %44, i64 %108
  %110 = getelementptr i8, i8* %39, i64 %108
  %111 = bitcast i8* %109 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1, !alias.scope !20
  %113 = getelementptr i8, i8* %109, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1, !alias.scope !20
  %116 = bitcast i8* %110 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %116, align 1, !alias.scope !23, !noalias !20
  %117 = getelementptr i8, i8* %110, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %118, align 1, !alias.scope !23, !noalias !20
  %119 = add i64 %74, 128
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !25

122:                                              ; preds = %73, %62
  %123 = phi i64 [ 0, %62 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i8, i8* %44, i64 %126
  %129 = getelementptr i8, i8* %39, i64 %126
  %130 = bitcast i8* %128 to <16 x i8>*
  %131 = load <16 x i8>, <16 x i8>* %130, align 1, !alias.scope !20
  %132 = getelementptr i8, i8* %128, i64 16
  %133 = bitcast i8* %132 to <16 x i8>*
  %134 = load <16 x i8>, <16 x i8>* %133, align 1, !alias.scope !20
  %135 = bitcast i8* %129 to <16 x i8>*
  store <16 x i8> %131, <16 x i8>* %135, align 1, !alias.scope !23, !noalias !20
  %136 = getelementptr i8, i8* %129, i64 16
  %137 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %134, <16 x i8>* %137, align 1, !alias.scope !23, !noalias !20
  %138 = add i64 %126, 32
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !26

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %63, %49
  br i1 %142, label %143, label %51

143:                                              ; preds = %152, %141
  %144 = phi i8* [ %65, %141 ], [ %157, %152 ]
  %145 = ptrtoint i8* %144 to i64
  br label %146

146:                                              ; preds = %143, %37
  %147 = phi i64 [ %145, %143 ], [ %38, %37 ]
  store i64 %147, i64* %20, align 8
  %148 = icmp eq i64 %43, 0
  br i1 %148, label %159, label %149

149:                                              ; preds = %146
  %150 = sub i64 0, %43
  %151 = getelementptr inbounds i8, i8* %39, i64 %150
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %151, i8* align 1 %1, i64 %43, i1 false) #11
  br label %159

152:                                              ; preds = %51, %152
  %153 = phi i8* [ %156, %152 ], [ %52, %51 ]
  %154 = phi i8* [ %157, %152 ], [ %53, %51 ]
  %155 = load i8, i8* %153, align 1
  store i8 %155, i8* %154, align 1
  %156 = getelementptr inbounds i8, i8* %153, i64 1
  %157 = getelementptr inbounds i8, i8* %154, i64 1
  %158 = icmp eq i8* %156, %16
  br i1 %158, label %143, label %152, !llvm.loop !27

159:                                              ; preds = %146, %149
  %160 = ptrtoint i8* %40 to i64
  %161 = sub i64 %160, %8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %414, label %163

163:                                              ; preds = %159
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %161, i1 false) #11
  br label %414

164:                                              ; preds = %11
  %165 = bitcast %"class.std::__1::vector"* %0 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %17, %166
  %168 = add i64 %167, %9
  %169 = icmp slt i64 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %164
  %171 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %171) #12
  unreachable

172:                                              ; preds = %164
  %173 = sub i64 %14, %166
  %174 = icmp ult i64 %173, 4611686018427387903
  br i1 %174, label %177, label %175

175:                                              ; preds = %172
  %176 = sub i64 %5, %166
  br label %183

177:                                              ; preds = %172
  %178 = shl i64 %173, 1
  %179 = icmp ult i64 %178, %168
  %180 = select i1 %179, i64 %168, i64 %178
  %181 = sub i64 %5, %166
  %182 = icmp eq i64 %180, 0
  br i1 %182, label %187, label %183

183:                                              ; preds = %175, %177
  %184 = phi i64 [ %176, %175 ], [ %181, %177 ]
  %185 = phi i64 [ 9223372036854775807, %175 ], [ %180, %177 ]
  %186 = tail call i8* @_Znwm(i64 %185) #10
  br label %187

187:                                              ; preds = %177, %183
  %188 = phi i64 [ %184, %183 ], [ %181, %177 ]
  %189 = phi i64 [ %185, %183 ], [ 0, %177 ]
  %190 = phi i8* [ %186, %183 ], [ null, %177 ]
  %191 = getelementptr inbounds i8, i8* %190, i64 %188
  %192 = getelementptr inbounds i8, i8* %190, i64 %189
  %193 = getelementptr inbounds i8, i8* %191, i64 %9
  %194 = icmp ult i64 %9, 32
  br i1 %194, label %280, label %195

195:                                              ; preds = %187
  %196 = icmp ult i8* %191, %3
  %197 = icmp ugt i8* %193, %2
  %198 = and i1 %196, %197
  br i1 %198, label %280, label %199

199:                                              ; preds = %195
  %200 = and i64 %9, -32
  %201 = getelementptr i8, i8* %191, i64 %200
  %202 = getelementptr i8, i8* %2, i64 %200
  %203 = add i64 %200, -32
  %204 = lshr exact i64 %203, 5
  %205 = add nuw nsw i64 %204, 1
  %206 = and i64 %205, 3
  %207 = icmp ult i64 %203, 96
  br i1 %207, label %259, label %208

208:                                              ; preds = %199
  %209 = sub nsw i64 %205, %206
  br label %210

210:                                              ; preds = %210, %208
  %211 = phi i64 [ 0, %208 ], [ %256, %210 ]
  %212 = phi i64 [ %209, %208 ], [ %257, %210 ]
  %213 = getelementptr i8, i8* %191, i64 %211
  %214 = getelementptr i8, i8* %2, i64 %211
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !28
  %217 = getelementptr i8, i8* %214, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !28
  %220 = bitcast i8* %213 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !31, !noalias !28
  %221 = getelementptr i8, i8* %213, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !31, !noalias !28
  %223 = or i64 %211, 32
  %224 = getelementptr i8, i8* %191, i64 %223
  %225 = getelementptr i8, i8* %2, i64 %223
  %226 = bitcast i8* %225 to <16 x i8>*
  %227 = load <16 x i8>, <16 x i8>* %226, align 1, !alias.scope !28
  %228 = getelementptr i8, i8* %225, i64 16
  %229 = bitcast i8* %228 to <16 x i8>*
  %230 = load <16 x i8>, <16 x i8>* %229, align 1, !alias.scope !28
  %231 = bitcast i8* %224 to <16 x i8>*
  store <16 x i8> %227, <16 x i8>* %231, align 1, !alias.scope !31, !noalias !28
  %232 = getelementptr i8, i8* %224, i64 16
  %233 = bitcast i8* %232 to <16 x i8>*
  store <16 x i8> %230, <16 x i8>* %233, align 1, !alias.scope !31, !noalias !28
  %234 = or i64 %211, 64
  %235 = getelementptr i8, i8* %191, i64 %234
  %236 = getelementptr i8, i8* %2, i64 %234
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !28
  %239 = getelementptr i8, i8* %236, i64 16
  %240 = bitcast i8* %239 to <16 x i8>*
  %241 = load <16 x i8>, <16 x i8>* %240, align 1, !alias.scope !28
  %242 = bitcast i8* %235 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %242, align 1, !alias.scope !31, !noalias !28
  %243 = getelementptr i8, i8* %235, i64 16
  %244 = bitcast i8* %243 to <16 x i8>*
  store <16 x i8> %241, <16 x i8>* %244, align 1, !alias.scope !31, !noalias !28
  %245 = or i64 %211, 96
  %246 = getelementptr i8, i8* %191, i64 %245
  %247 = getelementptr i8, i8* %2, i64 %245
  %248 = bitcast i8* %247 to <16 x i8>*
  %249 = load <16 x i8>, <16 x i8>* %248, align 1, !alias.scope !28
  %250 = getelementptr i8, i8* %247, i64 16
  %251 = bitcast i8* %250 to <16 x i8>*
  %252 = load <16 x i8>, <16 x i8>* %251, align 1, !alias.scope !28
  %253 = bitcast i8* %246 to <16 x i8>*
  store <16 x i8> %249, <16 x i8>* %253, align 1, !alias.scope !31, !noalias !28
  %254 = getelementptr i8, i8* %246, i64 16
  %255 = bitcast i8* %254 to <16 x i8>*
  store <16 x i8> %252, <16 x i8>* %255, align 1, !alias.scope !31, !noalias !28
  %256 = add i64 %211, 128
  %257 = add i64 %212, -4
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %210, !llvm.loop !33

259:                                              ; preds = %210, %199
  %260 = phi i64 [ 0, %199 ], [ %256, %210 ]
  %261 = icmp eq i64 %206, 0
  br i1 %261, label %278, label %262

262:                                              ; preds = %259, %262
  %263 = phi i64 [ %275, %262 ], [ %260, %259 ]
  %264 = phi i64 [ %276, %262 ], [ %206, %259 ]
  %265 = getelementptr i8, i8* %191, i64 %263
  %266 = getelementptr i8, i8* %2, i64 %263
  %267 = bitcast i8* %266 to <16 x i8>*
  %268 = load <16 x i8>, <16 x i8>* %267, align 1, !alias.scope !28
  %269 = getelementptr i8, i8* %266, i64 16
  %270 = bitcast i8* %269 to <16 x i8>*
  %271 = load <16 x i8>, <16 x i8>* %270, align 1, !alias.scope !28
  %272 = bitcast i8* %265 to <16 x i8>*
  store <16 x i8> %268, <16 x i8>* %272, align 1, !alias.scope !31, !noalias !28
  %273 = getelementptr i8, i8* %265, i64 16
  %274 = bitcast i8* %273 to <16 x i8>*
  store <16 x i8> %271, <16 x i8>* %274, align 1, !alias.scope !31, !noalias !28
  %275 = add i64 %263, 32
  %276 = add i64 %264, -1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %262, !llvm.loop !34

278:                                              ; preds = %262, %259
  %279 = icmp eq i64 %9, %200
  br i1 %279, label %290, label %280

280:                                              ; preds = %278, %195, %187
  %281 = phi i8* [ %191, %195 ], [ %191, %187 ], [ %201, %278 ]
  %282 = phi i8* [ %2, %195 ], [ %2, %187 ], [ %202, %278 ]
  br label %283

283:                                              ; preds = %280, %283
  %284 = phi i8* [ %287, %283 ], [ %281, %280 ]
  %285 = phi i8* [ %288, %283 ], [ %282, %280 ]
  %286 = load i8, i8* %285, align 1
  store i8 %286, i8* %284, align 1
  %287 = getelementptr inbounds i8, i8* %284, i64 1
  %288 = getelementptr inbounds i8, i8* %285, i64 1
  %289 = icmp eq i8* %193, %287
  br i1 %289, label %290, label %283, !llvm.loop !35

290:                                              ; preds = %283, %278
  %291 = ptrtoint i8* %192 to i64
  %292 = load i8*, i8** %6, align 8
  %293 = ptrtoint i8* %292 to i64
  %294 = sub i64 %5, %293
  %295 = sub i64 0, %294
  %296 = getelementptr inbounds i8, i8* %191, i64 %295
  %297 = ptrtoint i8* %296 to i64
  %298 = icmp sgt i64 %294, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %290
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %296, i8* align 1 %292, i64 %294, i1 false) #11
  br label %300

300:                                              ; preds = %299, %290
  %301 = load i8*, i8** %15, align 8
  %302 = icmp eq i8* %301, %1
  br i1 %302, label %408, label %303

303:                                              ; preds = %300
  %304 = ptrtoint i8* %301 to i64
  %305 = sub i64 %304, %5
  %306 = icmp ult i64 %305, 32
  br i1 %306, label %398, label %307

307:                                              ; preds = %303
  %308 = add i64 %188, %7
  %309 = sub i64 %308, %5
  %310 = sub i64 %309, %8
  %311 = getelementptr i8, i8* %301, i64 %310
  %312 = ptrtoint i8* %311 to i64
  %313 = getelementptr i8, i8* %190, i64 %312
  %314 = icmp ult i8* %193, %301
  %315 = icmp ugt i8* %313, %1
  %316 = and i1 %314, %315
  br i1 %316, label %398, label %317

317:                                              ; preds = %307
  %318 = and i64 %305, -32
  %319 = getelementptr i8, i8* %193, i64 %318
  %320 = getelementptr i8, i8* %1, i64 %318
  %321 = add i64 %318, -32
  %322 = lshr exact i64 %321, 5
  %323 = add nuw nsw i64 %322, 1
  %324 = and i64 %323, 3
  %325 = icmp ult i64 %321, 96
  br i1 %325, label %377, label %326

326:                                              ; preds = %317
  %327 = sub nsw i64 %323, %324
  br label %328

328:                                              ; preds = %328, %326
  %329 = phi i64 [ 0, %326 ], [ %374, %328 ]
  %330 = phi i64 [ %327, %326 ], [ %375, %328 ]
  %331 = getelementptr i8, i8* %193, i64 %329
  %332 = getelementptr i8, i8* %1, i64 %329
  %333 = bitcast i8* %332 to <16 x i8>*
  %334 = load <16 x i8>, <16 x i8>* %333, align 1, !alias.scope !36
  %335 = getelementptr i8, i8* %332, i64 16
  %336 = bitcast i8* %335 to <16 x i8>*
  %337 = load <16 x i8>, <16 x i8>* %336, align 1, !alias.scope !36
  %338 = bitcast i8* %331 to <16 x i8>*
  store <16 x i8> %334, <16 x i8>* %338, align 1, !alias.scope !39, !noalias !36
  %339 = getelementptr i8, i8* %331, i64 16
  %340 = bitcast i8* %339 to <16 x i8>*
  store <16 x i8> %337, <16 x i8>* %340, align 1, !alias.scope !39, !noalias !36
  %341 = or i64 %329, 32
  %342 = getelementptr i8, i8* %193, i64 %341
  %343 = getelementptr i8, i8* %1, i64 %341
  %344 = bitcast i8* %343 to <16 x i8>*
  %345 = load <16 x i8>, <16 x i8>* %344, align 1, !alias.scope !36
  %346 = getelementptr i8, i8* %343, i64 16
  %347 = bitcast i8* %346 to <16 x i8>*
  %348 = load <16 x i8>, <16 x i8>* %347, align 1, !alias.scope !36
  %349 = bitcast i8* %342 to <16 x i8>*
  store <16 x i8> %345, <16 x i8>* %349, align 1, !alias.scope !39, !noalias !36
  %350 = getelementptr i8, i8* %342, i64 16
  %351 = bitcast i8* %350 to <16 x i8>*
  store <16 x i8> %348, <16 x i8>* %351, align 1, !alias.scope !39, !noalias !36
  %352 = or i64 %329, 64
  %353 = getelementptr i8, i8* %193, i64 %352
  %354 = getelementptr i8, i8* %1, i64 %352
  %355 = bitcast i8* %354 to <16 x i8>*
  %356 = load <16 x i8>, <16 x i8>* %355, align 1, !alias.scope !36
  %357 = getelementptr i8, i8* %354, i64 16
  %358 = bitcast i8* %357 to <16 x i8>*
  %359 = load <16 x i8>, <16 x i8>* %358, align 1, !alias.scope !36
  %360 = bitcast i8* %353 to <16 x i8>*
  store <16 x i8> %356, <16 x i8>* %360, align 1, !alias.scope !39, !noalias !36
  %361 = getelementptr i8, i8* %353, i64 16
  %362 = bitcast i8* %361 to <16 x i8>*
  store <16 x i8> %359, <16 x i8>* %362, align 1, !alias.scope !39, !noalias !36
  %363 = or i64 %329, 96
  %364 = getelementptr i8, i8* %193, i64 %363
  %365 = getelementptr i8, i8* %1, i64 %363
  %366 = bitcast i8* %365 to <16 x i8>*
  %367 = load <16 x i8>, <16 x i8>* %366, align 1, !alias.scope !36
  %368 = getelementptr i8, i8* %365, i64 16
  %369 = bitcast i8* %368 to <16 x i8>*
  %370 = load <16 x i8>, <16 x i8>* %369, align 1, !alias.scope !36
  %371 = bitcast i8* %364 to <16 x i8>*
  store <16 x i8> %367, <16 x i8>* %371, align 1, !alias.scope !39, !noalias !36
  %372 = getelementptr i8, i8* %364, i64 16
  %373 = bitcast i8* %372 to <16 x i8>*
  store <16 x i8> %370, <16 x i8>* %373, align 1, !alias.scope !39, !noalias !36
  %374 = add i64 %329, 128
  %375 = add i64 %330, -4
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %377, label %328, !llvm.loop !41

377:                                              ; preds = %328, %317
  %378 = phi i64 [ 0, %317 ], [ %374, %328 ]
  %379 = icmp eq i64 %324, 0
  br i1 %379, label %396, label %380

380:                                              ; preds = %377, %380
  %381 = phi i64 [ %393, %380 ], [ %378, %377 ]
  %382 = phi i64 [ %394, %380 ], [ %324, %377 ]
  %383 = getelementptr i8, i8* %193, i64 %381
  %384 = getelementptr i8, i8* %1, i64 %381
  %385 = bitcast i8* %384 to <16 x i8>*
  %386 = load <16 x i8>, <16 x i8>* %385, align 1, !alias.scope !36
  %387 = getelementptr i8, i8* %384, i64 16
  %388 = bitcast i8* %387 to <16 x i8>*
  %389 = load <16 x i8>, <16 x i8>* %388, align 1, !alias.scope !36
  %390 = bitcast i8* %383 to <16 x i8>*
  store <16 x i8> %386, <16 x i8>* %390, align 1, !alias.scope !39, !noalias !36
  %391 = getelementptr i8, i8* %383, i64 16
  %392 = bitcast i8* %391 to <16 x i8>*
  store <16 x i8> %389, <16 x i8>* %392, align 1, !alias.scope !39, !noalias !36
  %393 = add i64 %381, 32
  %394 = add i64 %382, -1
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %396, label %380, !llvm.loop !42

396:                                              ; preds = %380, %377
  %397 = icmp eq i64 %305, %318
  br i1 %397, label %408, label %398

398:                                              ; preds = %396, %307, %303
  %399 = phi i8* [ %193, %307 ], [ %193, %303 ], [ %319, %396 ]
  %400 = phi i8* [ %1, %307 ], [ %1, %303 ], [ %320, %396 ]
  br label %401

401:                                              ; preds = %398, %401
  %402 = phi i8* [ %406, %401 ], [ %399, %398 ]
  %403 = phi i8* [ %405, %401 ], [ %400, %398 ]
  %404 = load i8, i8* %403, align 1
  store i8 %404, i8* %402, align 1
  %405 = getelementptr inbounds i8, i8* %403, i64 1
  %406 = getelementptr inbounds i8, i8* %402, i64 1
  %407 = icmp eq i8* %405, %301
  br i1 %407, label %408, label %401, !llvm.loop !43

408:                                              ; preds = %401, %396, %300
  %409 = phi i8* [ %193, %300 ], [ %319, %396 ], [ %406, %401 ]
  %410 = ptrtoint i8* %409 to i64
  %411 = load i8*, i8** %6, align 8
  store i64 %297, i64* %165, align 8
  store i64 %410, i64* %20, align 8
  store i64 %291, i64* %13, align 8
  %412 = icmp eq i8* %411, null
  br i1 %412, label %414, label %413

413:                                              ; preds = %408
  tail call void @_ZdlPv(i8* nonnull %411) #10
  br label %414

414:                                              ; preds = %413, %408, %32, %159, %163, %4
  %415 = phi i8* [ %1, %4 ], [ %1, %163 ], [ %1, %159 ], [ %1, %32 ], [ %191, %408 ], [ %191, %413 ]
  ret i8* %415
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!5 = !{i8 0, i8 2}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.isvectorized", i32 1}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !11, !7}
!11 = !{!"llvm.loop.unroll.runtime.disable"}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !7}
!18 = distinct !{!18, !9}
!19 = distinct !{!19, !7}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !7}
!26 = distinct !{!26, !9}
!27 = distinct !{!27, !7}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !7}
!34 = distinct !{!34, !9}
!35 = distinct !{!35, !7}
!36 = !{!37}
!37 = distinct !{!37, !38}
!38 = distinct !{!38, !"LVerDomain"}
!39 = !{!40}
!40 = distinct !{!40, !38}
!41 = distinct !{!41, !7}
!42 = distinct !{!42, !9}
!43 = distinct !{!43, !7}
