; ModuleID = '../../third_party/boringssl/src/crypto/pkcs7/pkcs7_x509.c'
source_filename = "../../third_party/boringssl/src/crypto/pkcs7/pkcs7_x509.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.stack_st_X509 = type opaque
%struct.cbs_st = type { i8*, i64 }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.stack_st_CRYPTO_BUFFER = type opaque
%struct.crypto_buffer_pool_st = type opaque
%struct.crypto_buffer_st = type opaque
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type opaque
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type opaque
%struct.x509_cert_aux_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.stack_st_X509_CRL = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type opaque
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%struct.PKCS7 = type { i8*, i64, %struct.asn1_object_st*, %union.anon.0 }
%union.anon.0 = type { i8* }
%struct.PKCS7_SIGNED = type { %struct.stack_st_X509*, %struct.stack_st_X509_CRL* }
%struct.evp_pkey_st = type { i32, i32, %union.anon.1, %struct.evp_pkey_asn1_method_st* }
%union.anon.1 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque

@.str = private unnamed_addr constant [6 x i8] c"PKCS7\00", align 1
@.str.1 = private unnamed_addr constant [58 x i8] c"../../third_party/boringssl/src/crypto/pkcs7/pkcs7_x509.c\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @PKCS7_get_certificates(%struct.stack_st_X509*, %struct.cbs_st*) local_unnamed_addr #0 {
  %3 = bitcast %struct.stack_st_X509* %0 to %struct.stack_st*
  %4 = tail call i64 @sk_num(%struct.stack_st* %3) #5
  %5 = tail call %struct.stack_st* @sk_new_null() #5
  %6 = icmp eq %struct.stack_st* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %2
  %8 = bitcast %struct.stack_st* %5 to %struct.stack_st_CRYPTO_BUFFER*
  %9 = tail call i32 @PKCS7_get_raw_certificates(%struct.stack_st_CRYPTO_BUFFER* nonnull %8, %struct.cbs_st* %1, %struct.crypto_buffer_pool_st* null) #5
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = tail call i64 @sk_num(%struct.stack_st* nonnull %5) #5
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %17, label %18

14:                                               ; preds = %24
  %15 = tail call i64 @sk_num(%struct.stack_st* nonnull %5) #5
  %16 = icmp ult i64 %28, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %14, %11
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %5, void (void (i8*)*, i8*)* nonnull @sk_CRYPTO_BUFFER_call_free_func, void (i8*)* bitcast (void (%struct.crypto_buffer_st*)* @CRYPTO_BUFFER_free to void (i8*)*)) #5
  br label %38

18:                                               ; preds = %11, %14
  %19 = phi i64 [ %28, %14 ], [ 0, %11 ]
  %20 = tail call i8* @sk_value(%struct.stack_st* nonnull %5, i64 %19) #5
  %21 = bitcast i8* %20 to %struct.crypto_buffer_st*
  %22 = tail call %struct.x509_st* @X509_parse_from_buffer(%struct.crypto_buffer_st* %21) #5
  %23 = icmp eq %struct.x509_st* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %18
  %25 = bitcast %struct.x509_st* %22 to i8*
  %26 = tail call i64 @sk_push(%struct.stack_st* %3, i8* nonnull %25) #5
  %27 = icmp eq i64 %26, 0
  %28 = add nuw i64 %19, 1
  br i1 %27, label %29, label %14

29:                                               ; preds = %24, %18
  tail call void @X509_free(%struct.x509_st* %22) #5
  br label %30

30:                                               ; preds = %29, %7, %2
  tail call void @sk_pop_free_ex(%struct.stack_st* %5, void (void (i8*)*, i8*)* nonnull @sk_CRYPTO_BUFFER_call_free_func, void (i8*)* bitcast (void (%struct.crypto_buffer_st*)* @CRYPTO_BUFFER_free to void (i8*)*)) #5
  %31 = tail call i64 @sk_num(%struct.stack_st* %3) #5
  %32 = icmp eq i64 %31, %4
  br i1 %32, label %38, label %33

33:                                               ; preds = %30, %33
  %34 = tail call i8* @sk_pop(%struct.stack_st* %3) #5
  %35 = bitcast i8* %34 to %struct.x509_st*
  tail call void @X509_free(%struct.x509_st* %35) #5
  %36 = tail call i64 @sk_num(%struct.stack_st* %3) #5
  %37 = icmp eq i64 %36, %4
  br i1 %37, label %38, label %33

38:                                               ; preds = %33, %30, %17
  %39 = phi i32 [ 1, %17 ], [ 0, %30 ], [ 0, %33 ]
  ret i32 %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @PKCS7_get_raw_certificates(%struct.stack_st_CRYPTO_BUFFER*, %struct.cbs_st*, %struct.crypto_buffer_pool_st*) local_unnamed_addr #2

declare %struct.x509_st* @X509_parse_from_buffer(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare void @X509_free(%struct.x509_st*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st*) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @PKCS7_get_CRLs(%struct.stack_st_X509_CRL*, %struct.cbs_st*) local_unnamed_addr #0 {
  %3 = alloca %struct.cbs_st, align 8
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca i8*, align 8
  %9 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #5
  %10 = bitcast %struct.cbs_st* %4 to i8*
  %11 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #5
  %12 = bitcast i8** %5 to i8*
  %13 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #5
  store i8* null, i8** %5, align 8
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #5
  store i32 -1431655766, i32* %6, align 4
  %15 = bitcast %struct.stack_st_X509_CRL* %0 to %struct.stack_st*
  %16 = tail call i64 @sk_num(%struct.stack_st* %15) #5
  %17 = call i32 @pkcs7_parse_header(i8** nonnull %5, %struct.cbs_st* nonnull %3, %struct.cbs_st* %1) #5
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %58, label %19

19:                                               ; preds = %2
  %20 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* nonnull %3, %struct.cbs_st* null, i32* null, i32 -1610612736) #5
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %58, label %22

22:                                               ; preds = %19
  %23 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* nonnull %3, %struct.cbs_st* nonnull %4, i32* nonnull %6, i32 -1610612735) #5
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %58, label %25

25:                                               ; preds = %22
  %26 = load i32, i32* %6, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* null, i64 0) #5
  br label %29

29:                                               ; preds = %25, %28
  %30 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #5
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %29
  %33 = bitcast %struct.cbs_st* %7 to i8*
  %34 = bitcast i8** %8 to i8*
  %35 = bitcast %struct.cbs_st* %7 to i8*
  br label %38

36:                                               ; preds = %55, %29
  %37 = load i8*, i8** %5, align 8
  call void @OPENSSL_free(i8* %37) #5
  br label %67

38:                                               ; preds = %32, %55
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %39 = call i32 @CBS_get_asn1_element(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %7, i32 536870928) #5
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %38
  %42 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #5
  %43 = icmp slt i64 %42, 0
  br i1 %43, label %54, label %44

44:                                               ; preds = %41
  %45 = call i8* @CBS_data(%struct.cbs_st* nonnull %7) #5
  store i8* %45, i8** %8, align 8
  %46 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #5
  %47 = call %struct.X509_crl_st* @d2i_X509_CRL(%struct.X509_crl_st** null, i8** nonnull %8, i64 %46) #5
  %48 = icmp eq %struct.X509_crl_st* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = bitcast %struct.X509_crl_st* %47 to i8*
  %51 = call i64 @sk_push(%struct.stack_st* %15, i8* nonnull %50) #5
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  call void @X509_CRL_free(%struct.X509_crl_st* nonnull %47) #5
  br label %54

54:                                               ; preds = %38, %41, %44, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #5
  br label %58

55:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #5
  %56 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #5
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %36, label %38

58:                                               ; preds = %54, %22, %19, %2
  %59 = load i8*, i8** %5, align 8
  call void @OPENSSL_free(i8* %59) #5
  %60 = call i64 @sk_num(%struct.stack_st* %15) #5
  %61 = icmp eq i64 %60, %16
  br i1 %61, label %67, label %62

62:                                               ; preds = %58, %62
  %63 = call i8* @sk_pop(%struct.stack_st* %15) #5
  %64 = bitcast i8* %63 to %struct.X509_crl_st*
  call void @X509_CRL_free(%struct.X509_crl_st* %64) #5
  %65 = call i64 @sk_num(%struct.stack_st* %15) #5
  %66 = icmp eq i64 %65, %16
  br i1 %66, label %67, label %62

67:                                               ; preds = %62, %58, %36
  %68 = phi i32 [ 1, %36 ], [ 0, %58 ], [ 0, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #5
  ret i32 %68
}

declare i32 @pkcs7_parse_header(i8**, %struct.cbs_st*, %struct.cbs_st*) local_unnamed_addr #2

declare i32 @CBS_get_optional_asn1(%struct.cbs_st*, %struct.cbs_st*, i32*, i32) local_unnamed_addr #2

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

declare i32 @CBS_get_asn1_element(%struct.cbs_st*, %struct.cbs_st*, i32) local_unnamed_addr #2

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #2

declare %struct.X509_crl_st* @d2i_X509_CRL(%struct.X509_crl_st**, i8**, i64) local_unnamed_addr #2

declare void @X509_CRL_free(%struct.X509_crl_st*) #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @PKCS7_get_PEM_certificates(%struct.stack_st_X509*, %struct.bio_st*) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  store i64 -6148914691236517206, i64* %4, align 8
  %8 = call i32 @PEM_bytes_read_bio(i8** nonnull %3, i64* nonnull %4, i8** null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), %struct.bio_st* %1, i32 (i8*, i32, i32, i8*)* null, i8* null) #5
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %2
  %11 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #5
  %12 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %3, align 8
  %14 = load i64, i64* %4, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %5, i8* %13, i64 %14) #5
  %15 = call i32 @PKCS7_get_certificates(%struct.stack_st_X509* %0, %struct.cbs_st* nonnull %5)
  %16 = load i8*, i8** %3, align 8
  call void @OPENSSL_free(i8* %16) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #5
  br label %17

17:                                               ; preds = %2, %10
  %18 = phi i32 [ %15, %10 ], [ 0, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  ret i32 %18
}

declare i32 @PEM_bytes_read_bio(i8**, i64*, i8**, i8*, %struct.bio_st*, i32 (i8*, i32, i32, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @PKCS7_get_PEM_CRLs(%struct.stack_st_X509_CRL*, %struct.bio_st*) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  store i64 -6148914691236517206, i64* %4, align 8
  %8 = call i32 @PEM_bytes_read_bio(i8** nonnull %3, i64* nonnull %4, i8** null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), %struct.bio_st* %1, i32 (i8*, i32, i32, i8*)* null, i8* null) #5
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %2
  %11 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #5
  %12 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %3, align 8
  %14 = load i64, i64* %4, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %5, i8* %13, i64 %14) #5
  %15 = call i32 @PKCS7_get_CRLs(%struct.stack_st_X509_CRL* %0, %struct.cbs_st* nonnull %5)
  %16 = load i8*, i8** %3, align 8
  call void @OPENSSL_free(i8* %16) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #5
  br label %17

17:                                               ; preds = %2, %10
  %18 = phi i32 [ %15, %10 ], [ 0, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @PKCS7_bundle_certificates(%struct.cbb_st*, %struct.stack_st_X509*) local_unnamed_addr #0 {
  %3 = bitcast %struct.stack_st_X509* %1 to i8*
  %4 = tail call i32 @pkcs7_bundle(%struct.cbb_st* %0, i32 (%struct.cbb_st*, i8*)* nonnull @pkcs7_bundle_certificates_cb, i8* %3) #5
  ret i32 %4
}

declare i32 @pkcs7_bundle(%struct.cbb_st*, i32 (%struct.cbb_st*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @pkcs7_bundle_certificates_cb(%struct.cbb_st*, i8*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca i8*, align 8
  %5 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false)
  %6 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %3, i32 -1610612736) #5
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %40, label %8

8:                                                ; preds = %2
  %9 = bitcast i8* %1 to %struct.stack_st_X509*
  %10 = bitcast %struct.stack_st_X509* %9 to %struct.stack_st*
  %11 = call i64 @sk_num(%struct.stack_st* %10) #5
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %33, label %13

13:                                               ; preds = %8
  %14 = bitcast i8** %4 to i8*
  br label %15

15:                                               ; preds = %13, %29
  %16 = phi i64 [ 0, %13 ], [ %30, %29 ]
  %17 = call i8* @sk_value(%struct.stack_st* %10, i64 %16) #5
  %18 = bitcast i8* %17 to %struct.x509_st*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %19 = call i32 @i2d_X509(%struct.x509_st* %18, i8** null) #5
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %15
  %22 = sext i32 %19 to i64
  %23 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %3, i8** nonnull %4, i64 %22) #5
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = call i32 @i2d_X509(%struct.x509_st* %18, i8** nonnull %4) #5
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %15, %25, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5
  br label %40

29:                                               ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5
  %30 = add nuw i64 %16, 1
  %31 = call i64 @sk_num(%struct.stack_st* %10) #5
  %32 = icmp ult i64 %30, %31
  br i1 %32, label %15, label %33

33:                                               ; preds = %29, %8
  %34 = call i32 @CBB_flush_asn1_set_of(%struct.cbb_st* nonnull %3) #5
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %33
  %37 = call i32 @CBB_flush(%struct.cbb_st* %0) #5
  %38 = icmp ne i32 %37, 0
  %39 = zext i1 %38 to i32
  br label %40

40:                                               ; preds = %36, %33, %28, %2
  %41 = phi i32 [ 0, %28 ], [ 0, %2 ], [ 0, %33 ], [ %39, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #5
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @PKCS7_bundle_CRLs(%struct.cbb_st*, %struct.stack_st_X509_CRL*) local_unnamed_addr #0 {
  %3 = bitcast %struct.stack_st_X509_CRL* %1 to i8*
  %4 = tail call i32 @pkcs7_bundle(%struct.cbb_st* %0, i32 (%struct.cbb_st*, i8*)* nonnull @pkcs7_bundle_crls_cb, i8* %3) #5
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @pkcs7_bundle_crls_cb(%struct.cbb_st*, i8*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca i8*, align 8
  %5 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false)
  %6 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %3, i32 -1610612735) #5
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %40, label %8

8:                                                ; preds = %2
  %9 = bitcast i8* %1 to %struct.stack_st_X509_CRL*
  %10 = bitcast %struct.stack_st_X509_CRL* %9 to %struct.stack_st*
  %11 = call i64 @sk_num(%struct.stack_st* %10) #5
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %33, label %13

13:                                               ; preds = %8
  %14 = bitcast i8** %4 to i8*
  br label %15

15:                                               ; preds = %13, %29
  %16 = phi i64 [ 0, %13 ], [ %30, %29 ]
  %17 = call i8* @sk_value(%struct.stack_st* %10, i64 %16) #5
  %18 = bitcast i8* %17 to %struct.X509_crl_st*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %19 = call i32 @i2d_X509_CRL(%struct.X509_crl_st* %18, i8** null) #5
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %15
  %22 = sext i32 %19 to i64
  %23 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %3, i8** nonnull %4, i64 %22) #5
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = call i32 @i2d_X509_CRL(%struct.X509_crl_st* %18, i8** nonnull %4) #5
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %15, %25, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5
  br label %40

29:                                               ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5
  %30 = add nuw i64 %16, 1
  %31 = call i64 @sk_num(%struct.stack_st* %10) #5
  %32 = icmp ult i64 %30, %31
  br i1 %32, label %15, label %33

33:                                               ; preds = %29, %8
  %34 = call i32 @CBB_flush_asn1_set_of(%struct.cbb_st* nonnull %3) #5
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %33
  %37 = call i32 @CBB_flush(%struct.cbb_st* %0) #5
  %38 = icmp ne i32 %37, 0
  %39 = zext i1 %38 to i32
  br label %40

40:                                               ; preds = %36, %33, %28, %2
  %41 = phi i32 [ 0, %28 ], [ 0, %2 ], [ 0, %33 ], [ %39, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #5
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.PKCS7* @d2i_PKCS7(%struct.PKCS7**, i8** nocapture, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #5
  %6 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = load i8*, i8** %1, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* %7, i64 %2) #5
  %8 = call fastcc %struct.PKCS7* @pkcs7_new(%struct.cbs_st* nonnull %4)
  %9 = icmp eq %struct.PKCS7* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %3
  %11 = call i8* @CBS_data(%struct.cbs_st* nonnull %4) #5
  store i8* %11, i8** %1, align 8
  %12 = icmp eq %struct.PKCS7** %0, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %10
  %14 = load %struct.PKCS7*, %struct.PKCS7** %0, align 8
  call void @PKCS7_free(%struct.PKCS7* %14)
  store %struct.PKCS7* %8, %struct.PKCS7** %0, align 8
  br label %15

15:                                               ; preds = %13, %10, %3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #5
  ret %struct.PKCS7* %8
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.PKCS7* @pkcs7_new(%struct.cbs_st*) unnamed_addr #0 {
  %2 = alloca %struct.cbs_st, align 8
  %3 = alloca %struct.cbs_st, align 8
  %4 = tail call i8* @OPENSSL_malloc(i64 32) #5
  %5 = bitcast i8* %4 to %struct.PKCS7*
  %6 = icmp eq i8* %4, null
  br i1 %6, label %80, label %7

7:                                                ; preds = %1
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 0, i64 32, i1 false) #5
  %8 = tail call %struct.asn1_object_st* @OBJ_nid2obj(i32 22) #5
  %9 = getelementptr inbounds i8, i8* %4, i64 16
  %10 = bitcast i8* %9 to %struct.asn1_object_st**
  store %struct.asn1_object_st* %8, %struct.asn1_object_st** %10, align 8
  %11 = tail call i8* @OPENSSL_malloc(i64 16) #5
  %12 = getelementptr inbounds i8, i8* %4, i64 24
  %13 = bitcast i8* %12 to %struct.PKCS7_SIGNED**
  %14 = bitcast i8* %12 to i8**
  store i8* %11, i8** %14, align 8
  %15 = icmp eq i8* %11, null
  br i1 %15, label %79, label %16

16:                                               ; preds = %7
  %17 = tail call %struct.stack_st* @sk_new_null() #5
  %18 = bitcast i8* %12 to %struct.stack_st***
  %19 = load %struct.stack_st**, %struct.stack_st*** %18, align 8
  store %struct.stack_st* %17, %struct.stack_st** %19, align 8
  %20 = tail call %struct.stack_st* @sk_new_null() #5
  %21 = load %struct.PKCS7_SIGNED*, %struct.PKCS7_SIGNED** %13, align 8
  %22 = getelementptr inbounds %struct.PKCS7_SIGNED, %struct.PKCS7_SIGNED* %21, i64 0, i32 1
  %23 = bitcast %struct.stack_st_X509_CRL** %22 to %struct.stack_st**
  store %struct.stack_st* %20, %struct.stack_st** %23, align 8
  %24 = bitcast %struct.cbs_st* %2 to i8*
  %25 = bitcast %struct.cbs_st* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 %25, i64 16, i1 false)
  %26 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 %25, i64 16, i1 false)
  %27 = load %struct.PKCS7_SIGNED*, %struct.PKCS7_SIGNED** %13, align 8
  %28 = getelementptr inbounds %struct.PKCS7_SIGNED, %struct.PKCS7_SIGNED* %27, i64 0, i32 0
  %29 = load %struct.stack_st_X509*, %struct.stack_st_X509** %28, align 8
  %30 = icmp eq %struct.stack_st_X509* %29, null
  br i1 %30, label %79, label %31

31:                                               ; preds = %16
  %32 = getelementptr inbounds %struct.PKCS7_SIGNED, %struct.PKCS7_SIGNED* %27, i64 0, i32 1
  %33 = load %struct.stack_st_X509_CRL*, %struct.stack_st_X509_CRL** %32, align 8
  %34 = icmp eq %struct.stack_st_X509_CRL* %33, null
  br i1 %34, label %79, label %35

35:                                               ; preds = %31
  %36 = call i32 @PKCS7_get_certificates(%struct.stack_st_X509* nonnull %29, %struct.cbs_st* nonnull %2)
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %79, label %38

38:                                               ; preds = %35
  %39 = load %struct.PKCS7_SIGNED*, %struct.PKCS7_SIGNED** %13, align 8
  %40 = getelementptr inbounds %struct.PKCS7_SIGNED, %struct.PKCS7_SIGNED* %39, i64 0, i32 1
  %41 = load %struct.stack_st_X509_CRL*, %struct.stack_st_X509_CRL** %40, align 8
  %42 = call i32 @PKCS7_get_CRLs(%struct.stack_st_X509_CRL* %41, %struct.cbs_st* %0)
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %79, label %44

44:                                               ; preds = %38
  %45 = load %struct.stack_st**, %struct.stack_st*** %18, align 8
  %46 = load %struct.stack_st*, %struct.stack_st** %45, align 8
  %47 = call i64 @sk_num(%struct.stack_st* %46) #5
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %54

49:                                               ; preds = %44
  %50 = load %struct.stack_st**, %struct.stack_st*** %18, align 8
  %51 = load %struct.stack_st*, %struct.stack_st** %50, align 8
  call void @sk_free(%struct.stack_st* %51) #5
  %52 = load %struct.PKCS7_SIGNED*, %struct.PKCS7_SIGNED** %13, align 8
  %53 = getelementptr inbounds %struct.PKCS7_SIGNED, %struct.PKCS7_SIGNED* %52, i64 0, i32 0
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %53, align 8
  br label %54

54:                                               ; preds = %49, %44
  %55 = load %struct.PKCS7_SIGNED*, %struct.PKCS7_SIGNED** %13, align 8
  %56 = getelementptr inbounds %struct.PKCS7_SIGNED, %struct.PKCS7_SIGNED* %55, i64 0, i32 1
  %57 = bitcast %struct.stack_st_X509_CRL** %56 to %struct.stack_st**
  %58 = load %struct.stack_st*, %struct.stack_st** %57, align 8
  %59 = call i64 @sk_num(%struct.stack_st* %58) #5
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %68

61:                                               ; preds = %54
  %62 = load %struct.PKCS7_SIGNED*, %struct.PKCS7_SIGNED** %13, align 8
  %63 = getelementptr inbounds %struct.PKCS7_SIGNED, %struct.PKCS7_SIGNED* %62, i64 0, i32 1
  %64 = bitcast %struct.stack_st_X509_CRL** %63 to %struct.stack_st**
  %65 = load %struct.stack_st*, %struct.stack_st** %64, align 8
  call void @sk_free(%struct.stack_st* %65) #5
  %66 = load %struct.PKCS7_SIGNED*, %struct.PKCS7_SIGNED** %13, align 8
  %67 = getelementptr inbounds %struct.PKCS7_SIGNED, %struct.PKCS7_SIGNED* %66, i64 0, i32 1
  store %struct.stack_st_X509_CRL* null, %struct.stack_st_X509_CRL** %67, align 8
  br label %68

68:                                               ; preds = %61, %54
  %69 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #5
  %70 = call i64 @CBS_len(%struct.cbs_st* %0) #5
  %71 = sub i64 %69, %70
  %72 = getelementptr inbounds i8, i8* %4, i64 8
  %73 = bitcast i8* %72 to i64*
  store i64 %71, i64* %73, align 8
  %74 = call i8* @CBS_data(%struct.cbs_st* nonnull %3) #5
  %75 = load i64, i64* %73, align 8
  %76 = call i8* @OPENSSL_memdup(i8* %74, i64 %75) #5
  %77 = bitcast i8* %4 to i8**
  store i8* %76, i8** %77, align 8
  %78 = icmp eq i8* %76, null
  br i1 %78, label %79, label %80

79:                                               ; preds = %38, %35, %68, %16, %31, %7
  call void @PKCS7_free(%struct.PKCS7* nonnull %5)
  br label %80

80:                                               ; preds = %68, %1, %79
  %81 = phi %struct.PKCS7* [ null, %79 ], [ null, %1 ], [ %5, %68 ]
  ret %struct.PKCS7* %81
}

; Function Attrs: nounwind ssp uwtable
define hidden void @PKCS7_free(%struct.PKCS7*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.PKCS7* %0, null
  br i1 %2, label %23, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.PKCS7, %struct.PKCS7* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  tail call void @OPENSSL_free(i8* %5) #5
  %6 = getelementptr inbounds %struct.PKCS7, %struct.PKCS7* %0, i64 0, i32 2
  %7 = load %struct.asn1_object_st*, %struct.asn1_object_st** %6, align 8
  tail call void @ASN1_OBJECT_free(%struct.asn1_object_st* %7) #5
  %8 = getelementptr inbounds %struct.PKCS7, %struct.PKCS7* %0, i64 0, i32 3
  %9 = bitcast %union.anon.0* %8 to %struct.PKCS7_SIGNED**
  %10 = load %struct.PKCS7_SIGNED*, %struct.PKCS7_SIGNED** %9, align 8
  %11 = icmp eq %struct.PKCS7_SIGNED* %10, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %3
  %13 = bitcast %struct.PKCS7_SIGNED* %10 to %struct.stack_st**
  %14 = load %struct.stack_st*, %struct.stack_st** %13, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %14, void (void (i8*)*, i8*)* nonnull @sk_X509_call_free_func, void (i8*)* bitcast (void (%struct.x509_st*)* @X509_free to void (i8*)*)) #5
  %15 = load %struct.PKCS7_SIGNED*, %struct.PKCS7_SIGNED** %9, align 8
  %16 = getelementptr inbounds %struct.PKCS7_SIGNED, %struct.PKCS7_SIGNED* %15, i64 0, i32 1
  %17 = bitcast %struct.stack_st_X509_CRL** %16 to %struct.stack_st**
  %18 = load %struct.stack_st*, %struct.stack_st** %17, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %18, void (void (i8*)*, i8*)* nonnull @sk_X509_CRL_call_free_func, void (i8*)* bitcast (void (%struct.X509_crl_st*)* @X509_CRL_free to void (i8*)*)) #5
  %19 = getelementptr inbounds %union.anon.0, %union.anon.0* %8, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @OPENSSL_free(i8* %20) #5
  br label %21

21:                                               ; preds = %3, %12
  %22 = bitcast %struct.PKCS7* %0 to i8*
  tail call void @OPENSSL_free(i8* nonnull %22) #5
  br label %23

23:                                               ; preds = %1, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.PKCS7* @d2i_PKCS7_bio(%struct.bio_st*, %struct.PKCS7**) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  store i64 -6148914691236517206, i64* %4, align 8
  %8 = call i32 @BIO_read_asn1(%struct.bio_st* %0, i8** nonnull %3, i64* nonnull %4, i64 4194304) #5
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #5
  %12 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %3, align 8
  %14 = load i64, i64* %4, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %5, i8* %13, i64 %14) #5
  %15 = call fastcc %struct.PKCS7* @pkcs7_new(%struct.cbs_st* nonnull %5)
  %16 = load i8*, i8** %3, align 8
  call void @OPENSSL_free(i8* %16) #5
  %17 = icmp ne %struct.PKCS7** %1, null
  %18 = icmp ne %struct.PKCS7* %15, null
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %10
  %21 = load %struct.PKCS7*, %struct.PKCS7** %1, align 8
  call void @PKCS7_free(%struct.PKCS7* %21)
  store %struct.PKCS7* %15, %struct.PKCS7** %1, align 8
  br label %22

22:                                               ; preds = %20, %10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #5
  br label %23

23:                                               ; preds = %2, %22
  %24 = phi %struct.PKCS7* [ %15, %22 ], [ null, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  ret %struct.PKCS7* %24
}

declare i32 @BIO_read_asn1(%struct.bio_st*, i8**, i64*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_PKCS7(%struct.PKCS7* nocapture readonly, i8**) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.PKCS7, %struct.PKCS7* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, 2147483647
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @ERR_put_error(i32 19, i32 0, i32 69, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 315) #5
  br label %38

7:                                                ; preds = %2
  %8 = icmp eq i8** %1, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %7
  %10 = trunc i64 %4 to i32
  br label %38

11:                                               ; preds = %7
  %12 = load i8*, i8** %1, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %24

14:                                               ; preds = %11
  %15 = tail call i8* @OPENSSL_malloc(i64 %4) #5
  store i8* %15, i8** %1, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @ERR_put_error(i32 19, i32 0, i32 65, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 326) #5
  br label %38

18:                                               ; preds = %14
  %19 = load i64, i64* %3, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.PKCS7, %struct.PKCS7* %0, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* align 1 %23, i64 %19, i1 false) #5
  br label %35

24:                                               ; preds = %11
  %25 = icmp eq i64 %4, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.PKCS7, %struct.PKCS7* %0, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %28, i64 %4, i1 false) #5
  %29 = load i64, i64* %3, align 8
  %30 = load i8*, i8** %1, align 8
  br label %31

31:                                               ; preds = %24, %26
  %32 = phi i8* [ %12, %24 ], [ %30, %26 ]
  %33 = phi i64 [ 0, %24 ], [ %29, %26 ]
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  store i8* %34, i8** %1, align 8
  br label %35

35:                                               ; preds = %21, %18, %31
  %36 = load i64, i64* %3, align 8
  %37 = trunc i64 %36 to i32
  br label %38

38:                                               ; preds = %35, %17, %9, %6
  %39 = phi i32 [ -1, %6 ], [ %10, %9 ], [ -1, %17 ], [ %37, %35 ]
  ret i32 %39
}

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_PKCS7_bio(%struct.bio_st*, %struct.PKCS7* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.PKCS7, %struct.PKCS7* %1, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %struct.PKCS7, %struct.PKCS7* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = tail call i32 @BIO_write_all(%struct.bio_st* %0, i8* %4, i64 %6) #5
  ret i32 %7
}

declare i32 @BIO_write_all(%struct.bio_st*, i8*, i64) local_unnamed_addr #2

declare void @ASN1_OBJECT_free(%struct.asn1_object_st*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @PKCS7_type_is_data(%struct.PKCS7* nocapture readnone) local_unnamed_addr #3 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @PKCS7_type_is_digest(%struct.PKCS7* nocapture readnone) local_unnamed_addr #3 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @PKCS7_type_is_encrypted(%struct.PKCS7* nocapture readnone) local_unnamed_addr #3 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @PKCS7_type_is_enveloped(%struct.PKCS7* nocapture readnone) local_unnamed_addr #3 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @PKCS7_type_is_signed(%struct.PKCS7* nocapture readnone) local_unnamed_addr #3 {
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @PKCS7_type_is_signedAndEnveloped(%struct.PKCS7* nocapture readnone) local_unnamed_addr #3 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.PKCS7* @PKCS7_sign(%struct.x509_st* readnone, %struct.evp_pkey_st* readnone, %struct.stack_st_X509*, %struct.bio_st* nocapture readnone, i32) local_unnamed_addr #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.cbb_st, align 8
  %9 = alloca %struct.cbs_st, align 8
  %10 = icmp ne %struct.x509_st* %0, null
  %11 = icmp ne %struct.evp_pkey_st* %1, null
  %12 = or i1 %10, %11
  %13 = icmp ne i32 %4, 64
  %14 = or i1 %12, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %5
  tail call void @ERR_put_error(i32 18, i32 0, i32 66, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 368) #5
  br label %39

16:                                               ; preds = %5
  %17 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %18 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #5
  store i64 -6148914691236517206, i64* %7, align 8
  %19 = bitcast %struct.cbb_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false)
  %20 = call i32 @CBB_init(%struct.cbb_st* nonnull %8, i64 2048) #5
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %16
  %23 = bitcast %struct.stack_st_X509* %2 to i8*
  %24 = call i32 @pkcs7_bundle(%struct.cbb_st* nonnull %8, i32 (%struct.cbb_st*, i8*)* nonnull @pkcs7_bundle_certificates_cb, i8* %23) #5
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = call i32 @CBB_finish(%struct.cbb_st* nonnull %8, i8** nonnull %6, i64* nonnull %7) #5
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26, %22, %16
  call void @CBB_cleanup(%struct.cbb_st* nonnull %8) #5
  br label %37

30:                                               ; preds = %26
  %31 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #5
  %32 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 16, i1 false)
  %33 = load i8*, i8** %6, align 8
  %34 = load i64, i64* %7, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %9, i8* %33, i64 %34) #5
  %35 = call fastcc %struct.PKCS7* @pkcs7_new(%struct.cbs_st* nonnull %9)
  %36 = load i8*, i8** %6, align 8
  call void @OPENSSL_free(i8* %36) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #5
  br label %37

37:                                               ; preds = %30, %29
  %38 = phi %struct.PKCS7* [ %35, %30 ], [ null, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  br label %39

39:                                               ; preds = %37, %15
  %40 = phi %struct.PKCS7* [ null, %15 ], [ %38, %37 ]
  ret %struct.PKCS7* %40
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #2

declare i32 @CBB_finish(%struct.cbb_st*, i8**, i64*) local_unnamed_addr #2

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #2

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare %struct.stack_st* @sk_new_null() local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

declare i64 @sk_push(%struct.stack_st*, i8*) local_unnamed_addr #2

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_CRYPTO_BUFFER_call_free_func(void (i8*)* nocapture, i8*) #4 {
  %3 = bitcast void (i8*)* %0 to void (%struct.crypto_buffer_st*)*
  %4 = bitcast i8* %1 to %struct.crypto_buffer_st*
  tail call void %3(%struct.crypto_buffer_st* %4) #5
  ret void
}

declare i8* @sk_pop(%struct.stack_st*) local_unnamed_addr #2

declare i32 @CBB_add_asn1(%struct.cbb_st*, %struct.cbb_st*, i32) local_unnamed_addr #2

declare i32 @i2d_X509(%struct.x509_st*, i8**) local_unnamed_addr #2

declare i32 @CBB_add_space(%struct.cbb_st*, i8**, i64) local_unnamed_addr #2

declare i32 @CBB_flush_asn1_set_of(%struct.cbb_st*) local_unnamed_addr #2

declare i32 @CBB_flush(%struct.cbb_st*) local_unnamed_addr #2

declare i32 @i2d_X509_CRL(%struct.X509_crl_st*, i8**) local_unnamed_addr #2

declare %struct.asn1_object_st* @OBJ_nid2obj(i32) local_unnamed_addr #2

declare i8* @OPENSSL_memdup(i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @sk_free(%struct.stack_st*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_X509_call_free_func(void (i8*)* nocapture, i8*) #4 {
  %3 = bitcast void (i8*)* %0 to void (%struct.x509_st*)*
  %4 = bitcast i8* %1 to %struct.x509_st*
  tail call void %3(%struct.x509_st* %4) #5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_X509_CRL_call_free_func(void (i8*)* nocapture, i8*) #4 {
  %3 = bitcast void (i8*)* %0 to void (%struct.X509_crl_st*)*
  %4 = bitcast i8* %1 to %struct.X509_crl_st*
  tail call void %3(%struct.X509_crl_st* %4) #5
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
