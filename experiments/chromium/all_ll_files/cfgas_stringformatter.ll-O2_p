; ModuleID = '../../third_party/pdfium/xfa/fgas/crt/cfgas_stringformatter.cpp'
source_filename = "../../third_party/pdfium/xfa/fgas/crt/cfgas_stringformatter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.(anonymous namespace)::LocaleNumberSubcategoryWithHash" = type { i32, i32 }
%"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash" = type { i32, i32 }
%"struct.(anonymous namespace)::FX_LOCALETIMEZONEINFO" = type { i32*, i16, i16 }
%class.CFGAS_StringFormatter = type { %"class.fxcrt::WideString", %"class.pdfium::span" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i32* }
%class.CFX_DateTime = type { i32, i8, i8, i8, i8, i8, i16 }
%class.LocaleIface = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.fxcrt::WideString"* }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span.4" }
%"class.pdfium::span.4" = type { %"class.fxcrt::UnownedPtr.5", i64 }
%"class.fxcrt::UnownedPtr.5" = type { i32* }
%class.LocaleMgrIface = type { i32 (...)** }
%class.CFGAS_Decimal = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN5fxcrt10WideStringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPKwmEEEvDpOT_ = comdat any

@_ZN12_GLOBAL__N_125kLocaleNumSubcategoryDataE = internal unnamed_addr constant [4 x %"struct.(anonymous namespace)::LocaleNumberSubcategoryWithHash"] [%"struct.(anonymous namespace)::LocaleNumberSubcategoryWithHash" { i32 1190745393, i32 0 }, %"struct.(anonymous namespace)::LocaleNumberSubcategoryWithHash" { i32 1280215755, i32 1 }, %"struct.(anonymous namespace)::LocaleNumberSubcategoryWithHash" { i32 1409502255, i32 2 }, %"struct.(anonymous namespace)::LocaleNumberSubcategoryWithHash" { i32 1969809070, i32 3 }], align 16
@.str.1 = private unnamed_addr constant [5 x i32] [i32 116, i32 101, i32 120, i32 116, i32 0], align 4
@_ZN12_GLOBAL__N_130kLocaleDateTimeSubcategoryDataE = internal unnamed_addr constant [5 x %"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash"] [%"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash" { i32 349839653, i32 0 }, %"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash" { i32 -1874733904, i32 1 }, %"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash" { i32 -1601920127, i32 2 }, %"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash" { i32 -842115405, i32 3 }, %"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash" { i32 -155930704, i32 4 }], align 16
@.str.5 = private unnamed_addr constant [5 x i32] [i32 122, i32 101, i32 114, i32 111, i32 0], align 4
@.str.6 = private unnamed_addr constant [5 x i32] [i32 110, i32 117, i32 108, i32 108, i32 0], align 4
@.str.7 = private unnamed_addr constant [2 x i32] [i32 48, i32 0], align 4
@.str.8 = private unnamed_addr constant [2 x i32] [i32 46, i32 0], align 4
@.str.9 = private unnamed_addr constant [5 x i32] [i32 69, i32 37, i32 43, i32 100, i32 0], align 4
@.str.10 = private unnamed_addr constant [3 x i32] [i32 67, i32 82, i32 0], align 4
@.str.11 = private unnamed_addr constant [3 x i32] [i32 32, i32 32, i32 0], align 4
@.str.12 = private unnamed_addr constant [3 x i32] [i32 100, i32 98, i32 0], align 4
@.str.13 = private unnamed_addr constant [3 x i32] [i32 68, i32 66, i32 0], align 4
@.str.14 = private unnamed_addr constant [2 x i32] [i32 84, i32 0], align 4
@.str.15 = private unnamed_addr constant [1 x i32] zeroinitializer, align 4
@_ZN12_GLOBAL__N_122g_FXLocaleTimeZoneDataE = internal unnamed_addr constant [8 x %"struct.(anonymous namespace)::FX_LOCALETIMEZONEINFO"] [%"struct.(anonymous namespace)::FX_LOCALETIMEZONEINFO" { i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.45, i32 0, i32 0), i16 -5, i16 0 }, %"struct.(anonymous namespace)::FX_LOCALETIMEZONEINFO" { i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.46, i32 0, i32 0), i16 -6, i16 0 }, %"struct.(anonymous namespace)::FX_LOCALETIMEZONEINFO" { i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.47, i32 0, i32 0), i16 -4, i16 0 }, %"struct.(anonymous namespace)::FX_LOCALETIMEZONEINFO" { i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.48, i32 0, i32 0), i16 -5, i16 0 }, %"struct.(anonymous namespace)::FX_LOCALETIMEZONEINFO" { i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.49, i32 0, i32 0), i16 -6, i16 0 }, %"struct.(anonymous namespace)::FX_LOCALETIMEZONEINFO" { i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.50, i32 0, i32 0), i16 -7, i16 0 }, %"struct.(anonymous namespace)::FX_LOCALETIMEZONEINFO" { i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.51, i32 0, i32 0), i16 -7, i16 0 }, %"struct.(anonymous namespace)::FX_LOCALETIMEZONEINFO" { i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.52, i32 0, i32 0), i16 -8, i16 0 }], align 16
@.str.45 = private unnamed_addr constant [4 x i32] [i32 67, i32 68, i32 84, i32 0], align 4
@.str.46 = private unnamed_addr constant [4 x i32] [i32 67, i32 83, i32 84, i32 0], align 4
@.str.47 = private unnamed_addr constant [4 x i32] [i32 69, i32 68, i32 84, i32 0], align 4
@.str.48 = private unnamed_addr constant [4 x i32] [i32 69, i32 83, i32 84, i32 0], align 4
@.str.49 = private unnamed_addr constant [4 x i32] [i32 77, i32 68, i32 84, i32 0], align 4
@.str.50 = private unnamed_addr constant [4 x i32] [i32 77, i32 83, i32 84, i32 0], align 4
@.str.51 = private unnamed_addr constant [4 x i32] [i32 80, i32 68, i32 84, i32 0], align 4
@.str.52 = private unnamed_addr constant [4 x i32] [i32 80, i32 83, i32 84, i32 0], align 4
@.str.54 = private unnamed_addr constant [3 x i32] [i32 37, i32 100, i32 0], align 4
@.str.55 = private unnamed_addr constant [5 x i32] [i32 37, i32 48, i32 50, i32 100, i32 0], align 4
@.str.56 = private unnamed_addr constant [5 x i32] [i32 37, i32 48, i32 51, i32 100, i32 0], align 4
@_ZZN12_GLOBAL__N_110GetWeekDayEtttE9kMonthDay = internal unnamed_addr constant [12 x i8] c"\00\03\03\06\01\04\06\02\05\00\03\05", align 1
@.str.59 = private unnamed_addr constant [4 x i32] [i32 71, i32 77, i32 84, i32 0], align 4
@.str.60 = private unnamed_addr constant [2 x i32] [i32 45, i32 0], align 4
@.str.61 = private unnamed_addr constant [2 x i32] [i32 43, i32 0], align 4
@.str.62 = private unnamed_addr constant [10 x i32] [i32 37, i32 48, i32 50, i32 100, i32 58, i32 37, i32 48, i32 50, i32 100, i32 0], align 4

@_ZN21CFGAS_StringFormatterC1ERKN5fxcrt10WideStringE = hidden unnamed_addr alias void (%class.CFGAS_StringFormatter*, %"class.fxcrt::WideString"*), void (%class.CFGAS_StringFormatter*, %"class.fxcrt::WideString"*)* @_ZN21CFGAS_StringFormatterC2ERKN5fxcrt10WideStringE
@_ZN21CFGAS_StringFormatterD1Ev = hidden unnamed_addr alias void (%class.CFGAS_StringFormatter*), void (%class.CFGAS_StringFormatter*)* @_ZN21CFGAS_StringFormatterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z20FX_DateFromCanonicalN6pdfium4spanIKwEEP12CFX_DateTime(%"class.pdfium::span"* nocapture readonly, %class.CFX_DateTime* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, 10
  br i1 %5, label %120, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %0, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i64 %4, 0
  br i1 %9, label %120, label %10

10:                                               ; preds = %6
  %11 = load i32, i32* %8, align 4
  %12 = icmp ugt i32 %11, 127
  br i1 %12, label %120, label %13

13:                                               ; preds = %10
  %14 = tail call i32 @iswdigit(i32 %11) #13
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %120, label %16

16:                                               ; preds = %13
  %17 = load i32, i32* %8, align 4
  %18 = icmp ugt i32 %17, 127
  br i1 %18, label %24, label %19

19:                                               ; preds = %16
  %20 = tail call i32 @iswdigit(i32 %17) #13
  %21 = icmp eq i32 %20, 0
  %22 = add nsw i32 %17, -48
  %23 = select i1 %21, i32 0, i32 %22
  br label %24

24:                                               ; preds = %19, %16
  %25 = phi i32 [ %23, %19 ], [ 0, %16 ]
  %26 = icmp eq i64 %4, 1
  br i1 %26, label %120, label %162

27:                                               ; preds = %218
  %28 = load i64, i64* %3, align 8
  %29 = icmp ugt i64 %28, 4
  br i1 %29, label %34, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %1, i64 0, i32 0
  store i32 %220, i32* %31, align 4
  %32 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %1, i64 0, i32 1
  store i8 1, i8* %32, align 4
  %33 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %1, i64 0, i32 2
  store i8 1, i8* %33, align 1
  br label %120

34:                                               ; preds = %27
  %35 = load i32*, i32** %7, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 4
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 45
  %39 = select i1 %38, i64 5, i64 4
  %40 = icmp ult i64 %39, %28
  br i1 %40, label %41, label %120

41:                                               ; preds = %34
  %42 = getelementptr inbounds i32, i32* %35, i64 %39
  %43 = load i32, i32* %42, align 4
  %44 = icmp ugt i32 %43, 127
  br i1 %44, label %120, label %45

45:                                               ; preds = %41
  %46 = tail call i32 @iswdigit(i32 %43) #13
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %120, label %48

48:                                               ; preds = %45
  %49 = add nuw nsw i64 %39, 1
  %50 = load i32, i32* %42, align 4
  %51 = icmp ugt i32 %50, 127
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = tail call i32 @iswdigit(i32 %50) #13
  %54 = icmp eq i32 %53, 0
  %55 = mul i32 %50, 10
  %56 = add nsw i32 %55, -480
  %57 = select i1 %54, i32 0, i32 %56
  br label %58

58:                                               ; preds = %52, %48
  %59 = phi i32 [ %57, %52 ], [ 0, %48 ]
  %60 = icmp ult i64 %49, %28
  br i1 %60, label %141, label %120

61:                                               ; preds = %157
  %62 = load i64, i64* %3, align 8
  %63 = icmp ult i64 %149, %62
  br i1 %63, label %69, label %64

64:                                               ; preds = %61
  %65 = trunc i32 %159 to i8
  %66 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %1, i64 0, i32 0
  store i32 %220, i32* %66, align 4
  %67 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %1, i64 0, i32 1
  store i8 %65, i8* %67, align 4
  %68 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %1, i64 0, i32 2
  store i8 1, i8* %68, align 1
  br label %120

69:                                               ; preds = %61
  %70 = load i32*, i32** %7, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 %149
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 45
  %74 = add nuw nsw i64 %39, 3
  %75 = select i1 %73, i64 %74, i64 %149
  %76 = icmp ult i64 %75, %62
  br i1 %76, label %77, label %120

77:                                               ; preds = %69
  %78 = getelementptr inbounds i32, i32* %70, i64 %75
  %79 = load i32, i32* %78, align 4
  %80 = icmp ugt i32 %79, 127
  br i1 %80, label %120, label %81

81:                                               ; preds = %77
  %82 = tail call i32 @iswdigit(i32 %79) #13
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %120, label %84

84:                                               ; preds = %81
  %85 = add nuw nsw i64 %75, 1
  %86 = load i32, i32* %78, align 4
  %87 = icmp ugt i32 %86, 127
  br i1 %87, label %94, label %88

88:                                               ; preds = %84
  %89 = tail call i32 @iswdigit(i32 %86) #13
  %90 = icmp eq i32 %89, 0
  %91 = mul i32 %86, 10
  %92 = add nsw i32 %91, -480
  %93 = select i1 %90, i32 0, i32 %92
  br label %94

94:                                               ; preds = %88, %84
  %95 = phi i32 [ %93, %88 ], [ 0, %84 ]
  %96 = icmp ult i64 %85, %62
  br i1 %96, label %122, label %120

97:                                               ; preds = %137
  switch i32 %159, label %98 [
    i32 9, label %101
    i32 6, label %101
    i32 4, label %101
    i32 11, label %101
    i32 2, label %103
  ]

98:                                               ; preds = %97
  %99 = icmp ugt i32 %139, 31
  br i1 %99, label %120, label %100

100:                                              ; preds = %98
  switch i32 %159, label %114 [
    i32 9, label %101
    i32 6, label %101
    i32 4, label %101
    i32 11, label %101
    i32 2, label %103
  ]

101:                                              ; preds = %97, %97, %97, %97, %100, %100, %100, %100
  %102 = icmp ugt i32 %139, 30
  br i1 %102, label %120, label %114

103:                                              ; preds = %97, %100
  %104 = and i32 %220, 3
  %105 = icmp eq i32 %104, 0
  %106 = urem i32 %220, 100
  %107 = icmp ne i32 %106, 0
  %108 = and i1 %107, %105
  %109 = urem i32 %220, 400
  %110 = icmp eq i32 %109, 0
  %111 = or i1 %110, %108
  %112 = select i1 %111, i32 29, i32 28
  %113 = icmp ugt i32 %139, %112
  br i1 %113, label %120, label %114

114:                                              ; preds = %100, %101, %103
  %115 = trunc i32 %159 to i8
  %116 = trunc i32 %139 to i8
  %117 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %1, i64 0, i32 0
  store i32 %220, i32* %117, align 4
  %118 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %1, i64 0, i32 1
  store i8 %115, i8* %118, align 4
  %119 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %1, i64 0, i32 2
  store i8 %116, i8* %119, align 1
  br label %120

120:                                              ; preds = %10, %13, %162, %166, %182, %186, %202, %206, %6, %24, %178, %198, %34, %41, %45, %58, %141, %145, %69, %77, %81, %94, %122, %126, %30, %218, %114, %101, %98, %103, %137, %157, %64, %2
  %121 = phi i1 [ false, %2 ], [ true, %30 ], [ false, %218 ], [ true, %64 ], [ false, %157 ], [ true, %114 ], [ false, %137 ], [ false, %101 ], [ false, %98 ], [ false, %103 ], [ false, %126 ], [ false, %122 ], [ false, %94 ], [ false, %81 ], [ false, %77 ], [ false, %69 ], [ false, %145 ], [ false, %141 ], [ false, %58 ], [ false, %45 ], [ false, %41 ], [ false, %34 ], [ false, %198 ], [ false, %178 ], [ false, %24 ], [ false, %6 ], [ false, %206 ], [ false, %202 ], [ false, %186 ], [ false, %182 ], [ false, %166 ], [ false, %162 ], [ false, %13 ], [ false, %10 ]
  ret i1 %121

122:                                              ; preds = %94
  %123 = getelementptr inbounds i32, i32* %70, i64 %85
  %124 = load i32, i32* %123, align 4
  %125 = icmp ugt i32 %124, 127
  br i1 %125, label %120, label %126

126:                                              ; preds = %122
  %127 = tail call i32 @iswdigit(i32 %124) #13
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %120, label %129

129:                                              ; preds = %126
  %130 = load i32, i32* %123, align 4
  %131 = icmp ugt i32 %130, 127
  br i1 %131, label %137, label %132

132:                                              ; preds = %129
  %133 = tail call i32 @iswdigit(i32 %130) #13
  %134 = icmp eq i32 %133, 0
  %135 = add nsw i32 %130, -48
  %136 = select i1 %134, i32 0, i32 %135
  br label %137

137:                                              ; preds = %132, %129
  %138 = phi i32 [ %136, %132 ], [ 0, %129 ]
  %139 = add nsw i32 %138, %95
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %120, label %97

141:                                              ; preds = %58
  %142 = getelementptr inbounds i32, i32* %35, i64 %49
  %143 = load i32, i32* %142, align 4
  %144 = icmp ugt i32 %143, 127
  br i1 %144, label %120, label %145

145:                                              ; preds = %141
  %146 = tail call i32 @iswdigit(i32 %143) #13
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %120, label %148

148:                                              ; preds = %145
  %149 = or i64 %39, 2
  %150 = load i32, i32* %142, align 4
  %151 = icmp ugt i32 %150, 127
  br i1 %151, label %157, label %152

152:                                              ; preds = %148
  %153 = tail call i32 @iswdigit(i32 %150) #13
  %154 = icmp eq i32 %153, 0
  %155 = add nsw i32 %150, -48
  %156 = select i1 %154, i32 0, i32 %155
  br label %157

157:                                              ; preds = %152, %148
  %158 = phi i32 [ %156, %152 ], [ 0, %148 ]
  %159 = add nsw i32 %158, %59
  %160 = add nsw i32 %159, -1
  %161 = icmp ugt i32 %160, 11
  br i1 %161, label %120, label %61

162:                                              ; preds = %24
  %163 = getelementptr inbounds i32, i32* %8, i64 1
  %164 = load i32, i32* %163, align 4
  %165 = icmp ugt i32 %164, 127
  br i1 %165, label %120, label %166

166:                                              ; preds = %162
  %167 = tail call i32 @iswdigit(i32 %164) #13
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %120, label %169

169:                                              ; preds = %166
  %170 = mul i32 %25, 10
  %171 = load i32, i32* %163, align 4
  %172 = icmp ugt i32 %171, 127
  br i1 %172, label %178, label %173

173:                                              ; preds = %169
  %174 = tail call i32 @iswdigit(i32 %171) #13
  %175 = icmp eq i32 %174, 0
  %176 = add nsw i32 %171, -48
  %177 = select i1 %175, i32 0, i32 %176
  br label %178

178:                                              ; preds = %173, %169
  %179 = phi i32 [ %177, %173 ], [ 0, %169 ]
  %180 = add nsw i32 %179, %170
  %181 = icmp eq i64 %4, 2
  br i1 %181, label %120, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds i32, i32* %8, i64 2
  %184 = load i32, i32* %183, align 4
  %185 = icmp ugt i32 %184, 127
  br i1 %185, label %120, label %186

186:                                              ; preds = %182
  %187 = tail call i32 @iswdigit(i32 %184) #13
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %120, label %189

189:                                              ; preds = %186
  %190 = mul i32 %180, 10
  %191 = load i32, i32* %183, align 4
  %192 = icmp ugt i32 %191, 127
  br i1 %192, label %198, label %193

193:                                              ; preds = %189
  %194 = tail call i32 @iswdigit(i32 %191) #13
  %195 = icmp eq i32 %194, 0
  %196 = add nsw i32 %191, -48
  %197 = select i1 %195, i32 0, i32 %196
  br label %198

198:                                              ; preds = %193, %189
  %199 = phi i32 [ %197, %193 ], [ 0, %189 ]
  %200 = add nsw i32 %199, %190
  %201 = icmp eq i64 %4, 3
  br i1 %201, label %120, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds i32, i32* %8, i64 3
  %204 = load i32, i32* %203, align 4
  %205 = icmp ugt i32 %204, 127
  br i1 %205, label %120, label %206

206:                                              ; preds = %202
  %207 = tail call i32 @iswdigit(i32 %204) #13
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %120, label %209

209:                                              ; preds = %206
  %210 = mul i32 %200, 10
  %211 = load i32, i32* %203, align 4
  %212 = icmp ugt i32 %211, 127
  br i1 %212, label %218, label %213

213:                                              ; preds = %209
  %214 = tail call i32 @iswdigit(i32 %211) #13
  %215 = icmp eq i32 %214, 0
  %216 = add nsw i32 %211, -48
  %217 = select i1 %215, i32 0, i32 %216
  br label %218

218:                                              ; preds = %213, %209
  %219 = phi i32 [ %217, %213 ], [ 0, %209 ]
  %220 = add nsw i32 %219, %210
  %221 = icmp ult i32 %220, 1900
  br i1 %221, label %120, label %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z20FX_TimeFromCanonicalPK11LocaleIfaceN6pdfium4spanIKwEEP12CFX_DateTime(%class.LocaleIface*, %"class.pdfium::span"* nocapture readonly, %class.CFX_DateTime* nocapture) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.pdfium::span", align 8
  %6 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %185, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = load i32, i32* %11, align 4
  %13 = icmp ugt i32 %12, 127
  br i1 %13, label %185, label %14

14:                                               ; preds = %9
  %15 = tail call i32 @iswdigit(i32 %12) #13
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %185, label %17

17:                                               ; preds = %14
  %18 = load i32, i32* %11, align 4
  %19 = icmp ugt i32 %18, 127
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = tail call i32 @iswdigit(i32 %18) #13
  %22 = icmp eq i32 %21, 0
  %23 = add nsw i32 %18, -48
  %24 = select i1 %22, i32 0, i32 %23
  br label %25

25:                                               ; preds = %20, %17
  %26 = phi i32 [ %24, %20 ], [ 0, %17 ]
  %27 = icmp eq i64 %7, 1
  br i1 %27, label %185, label %270

28:                                               ; preds = %286
  %29 = load i64, i64* %6, align 8
  %30 = icmp ugt i64 %29, 2
  br i1 %30, label %37, label %31

31:                                               ; preds = %28
  %32 = trunc i32 %288 to i8
  %33 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %2, i64 0, i32 3
  store i8 %32, i8* %33, align 2
  %34 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %2, i64 0, i32 4
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %2, i64 0, i32 5
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %2, i64 0, i32 6
  store i16 0, i16* %36, align 2
  br label %185

37:                                               ; preds = %28
  %38 = load i32*, i32** %10, align 8
  %39 = getelementptr inbounds i32, i32* %38, i64 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 58
  %42 = select i1 %41, i64 3, i64 2
  %43 = icmp ult i64 %42, %29
  br i1 %43, label %44, label %185

44:                                               ; preds = %37
  %45 = getelementptr inbounds i32, i32* %38, i64 %42
  %46 = load i32, i32* %45, align 4
  %47 = icmp ugt i32 %46, 127
  br i1 %47, label %185, label %48

48:                                               ; preds = %44
  %49 = tail call i32 @iswdigit(i32 %46) #13
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %185, label %51

51:                                               ; preds = %48
  %52 = add nuw nsw i64 %42, 1
  %53 = load i32, i32* %45, align 4
  %54 = icmp ugt i32 %53, 127
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = tail call i32 @iswdigit(i32 %53) #13
  %57 = icmp eq i32 %56, 0
  %58 = add nsw i32 %53, -48
  %59 = select i1 %57, i32 0, i32 %58
  br label %60

60:                                               ; preds = %55, %51
  %61 = phi i32 [ %59, %55 ], [ 0, %51 ]
  %62 = icmp ult i64 %52, %29
  br i1 %62, label %249, label %185

63:                                               ; preds = %266
  %64 = load i64, i64* %6, align 8
  %65 = icmp ult i64 %258, %64
  br i1 %65, label %73, label %66

66:                                               ; preds = %63
  %67 = trunc i32 %288 to i8
  %68 = trunc i32 %268 to i8
  %69 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %2, i64 0, i32 3
  store i8 %67, i8* %69, align 2
  %70 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %2, i64 0, i32 4
  store i8 %68, i8* %70, align 1
  %71 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %2, i64 0, i32 5
  store i8 0, i8* %71, align 4
  %72 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %2, i64 0, i32 6
  store i16 0, i16* %72, align 2
  br label %185

73:                                               ; preds = %63
  %74 = load i32*, i32** %10, align 8
  %75 = getelementptr inbounds i32, i32* %74, i64 %258
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 58
  %78 = add nuw nsw i64 %42, 3
  %79 = select i1 %77, i64 %78, i64 %258
  %80 = icmp ult i64 %79, %64
  br i1 %80, label %81, label %134

81:                                               ; preds = %73
  %82 = getelementptr inbounds i32, i32* %74, i64 %79
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 90
  br i1 %84, label %134, label %85

85:                                               ; preds = %81
  %86 = icmp ugt i32 %83, 127
  br i1 %86, label %185, label %87

87:                                               ; preds = %85
  %88 = tail call i32 @iswdigit(i32 %83) #13
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %185, label %90

90:                                               ; preds = %87
  %91 = add nuw nsw i64 %79, 1
  %92 = load i32, i32* %82, align 4
  %93 = icmp ugt i32 %92, 127
  br i1 %93, label %100, label %94

94:                                               ; preds = %90
  %95 = tail call i32 @iswdigit(i32 %92) #13
  %96 = icmp eq i32 %95, 0
  %97 = mul i32 %92, 10
  %98 = add nsw i32 %97, -480
  %99 = select i1 %96, i32 0, i32 %98
  br label %100

100:                                              ; preds = %94, %90
  %101 = phi i32 [ %99, %94 ], [ 0, %90 ]
  %102 = icmp ult i64 %91, %64
  br i1 %102, label %229, label %185

103:                                              ; preds = %245
  %104 = load i64, i64* %6, align 8
  %105 = icmp ult i64 %237, %104
  br i1 %105, label %106, label %134

106:                                              ; preds = %103
  %107 = load i32*, i32** %10, align 8
  %108 = getelementptr inbounds i32, i32* %107, i64 %237
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 46
  br i1 %110, label %111, label %134

111:                                              ; preds = %106
  %112 = add nuw nsw i64 %79, 3
  %113 = icmp ult i64 %112, %104
  br i1 %113, label %114, label %185

114:                                              ; preds = %111
  %115 = getelementptr inbounds i32, i32* %107, i64 %112
  %116 = load i32, i32* %115, align 4
  %117 = icmp ugt i32 %116, 127
  br i1 %117, label %185, label %118

118:                                              ; preds = %114
  %119 = tail call i32 @iswdigit(i32 %116) #13
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %185, label %121

121:                                              ; preds = %118
  %122 = add nuw nsw i64 %79, 4
  %123 = load i32, i32* %115, align 4
  %124 = icmp ugt i32 %123, 127
  br i1 %124, label %131, label %125

125:                                              ; preds = %121
  %126 = tail call i32 @iswdigit(i32 %123) #13
  %127 = icmp eq i32 %126, 0
  %128 = mul i32 %123, 10
  %129 = add nsw i32 %128, -480
  %130 = select i1 %127, i32 0, i32 %129
  br label %131

131:                                              ; preds = %125, %121
  %132 = phi i32 [ %130, %125 ], [ 0, %121 ]
  %133 = icmp ult i64 %122, %104
  br i1 %133, label %187, label %185

134:                                              ; preds = %224, %81, %103, %106, %73
  %135 = phi i64 [ %64, %81 ], [ %104, %106 ], [ %104, %103 ], [ %64, %73 ], [ %227, %224 ]
  %136 = phi i16 [ 0, %81 ], [ 0, %106 ], [ 0, %103 ], [ 0, %73 ], [ %228, %224 ]
  %137 = phi i32 [ 0, %81 ], [ %247, %106 ], [ %247, %103 ], [ 0, %73 ], [ %247, %224 ]
  %138 = phi i64 [ %79, %81 ], [ %237, %106 ], [ %237, %103 ], [ %79, %73 ], [ %216, %224 ]
  %139 = icmp ugt i64 %135, %138
  br i1 %139, label %140, label %175

140:                                              ; preds = %134
  %141 = load i32*, i32** %10, align 8
  br label %142

142:                                              ; preds = %146, %140
  %143 = phi i64 [ %138, %140 ], [ %147, %146 ]
  %144 = getelementptr inbounds i32, i32* %141, i64 %143
  %145 = load i32, i32* %144, align 4
  switch i32 %145, label %146 [
    i32 43, label %149
    i32 45, label %149
  ]

146:                                              ; preds = %142
  %147 = add i64 %143, 1
  %148 = icmp eq i64 %147, %135
  br i1 %148, label %175, label %142

149:                                              ; preds = %142, %142
  %150 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %150) #13
  store i32 0, i32* %4, align 4
  %151 = icmp ult i64 %135, %143
  br i1 %151, label %152, label %153, !prof !2

152:                                              ; preds = %149
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !noalias !3, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !noalias !3, !srcloc !7
  unreachable

153:                                              ; preds = %149
  %154 = getelementptr inbounds i32, i32* %141, i64 %143
  %155 = sub i64 %135, %143
  %156 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %5, i64 0, i32 0, i32 0
  store i32* %154, i32** %156, align 8, !alias.scope !3
  %157 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %5, i64 0, i32 1
  store i64 %155, i64* %157, align 8, !alias.scope !3
  %158 = call fastcc i64 @_ZN12_GLOBAL__N_113ParseTimeZoneEN6pdfium4spanIKwEEPi(%"class.pdfium::span"* nonnull %5, i32* nonnull %4)
  %159 = load i32, i32* %4, align 4
  %160 = mul i32 %288, 60
  %161 = bitcast %class.LocaleIface* %0 to i32 (%class.LocaleIface*)***
  %162 = load i32 (%class.LocaleIface*)**, i32 (%class.LocaleIface*)*** %161, align 8
  %163 = getelementptr inbounds i32 (%class.LocaleIface*)*, i32 (%class.LocaleIface*)** %162, i64 12
  %164 = load i32 (%class.LocaleIface*)*, i32 (%class.LocaleIface*)** %163, align 8
  %165 = tail call i32 %164(%class.LocaleIface* %0) #13
  %166 = add i32 %268, %160
  %167 = sub i32 %166, %159
  %168 = add i32 %167, %165
  %169 = srem i32 %168, 1440
  %170 = icmp slt i32 %169, 0
  %171 = add nsw i32 %169, 1440
  %172 = select i1 %170, i32 %171, i32 %169
  %173 = sdiv i32 %172, 60
  %174 = srem i32 %172, 60
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %150) #13
  br label %175

175:                                              ; preds = %146, %134, %153
  %176 = phi i32 [ %174, %153 ], [ %268, %134 ], [ %268, %146 ]
  %177 = phi i32 [ %173, %153 ], [ %288, %134 ], [ %288, %146 ]
  %178 = trunc i32 %177 to i8
  %179 = trunc i32 %176 to i8
  %180 = trunc i32 %137 to i8
  %181 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %2, i64 0, i32 3
  store i8 %178, i8* %181, align 2
  %182 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %2, i64 0, i32 4
  store i8 %179, i8* %182, align 1
  %183 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %2, i64 0, i32 5
  store i8 %180, i8* %183, align 4
  %184 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %2, i64 0, i32 6
  store i16 %136, i16* %184, align 2
  br label %185

185:                                              ; preds = %9, %14, %270, %274, %25, %37, %44, %48, %60, %249, %253, %85, %87, %100, %229, %233, %111, %114, %118, %131, %187, %191, %203, %207, %211, %31, %286, %175, %245, %266, %66, %3
  %186 = phi i1 [ false, %3 ], [ true, %31 ], [ false, %286 ], [ true, %66 ], [ false, %266 ], [ true, %175 ], [ false, %245 ], [ false, %211 ], [ false, %207 ], [ false, %203 ], [ false, %191 ], [ false, %187 ], [ false, %131 ], [ false, %118 ], [ false, %114 ], [ false, %111 ], [ false, %233 ], [ false, %229 ], [ false, %100 ], [ false, %87 ], [ false, %85 ], [ false, %253 ], [ false, %249 ], [ false, %60 ], [ false, %48 ], [ false, %44 ], [ false, %37 ], [ false, %25 ], [ false, %274 ], [ false, %270 ], [ false, %14 ], [ false, %9 ]
  ret i1 %186

187:                                              ; preds = %131
  %188 = getelementptr inbounds i32, i32* %107, i64 %122
  %189 = load i32, i32* %188, align 4
  %190 = icmp ugt i32 %189, 127
  br i1 %190, label %185, label %191

191:                                              ; preds = %187
  %192 = tail call i32 @iswdigit(i32 %189) #13
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %185, label %194

194:                                              ; preds = %191
  %195 = add nuw nsw i64 %79, 5
  %196 = load i32, i32* %188, align 4
  %197 = icmp ugt i32 %196, 127
  br i1 %197, label %203, label %198

198:                                              ; preds = %194
  %199 = tail call i32 @iswdigit(i32 %196) #13
  %200 = icmp eq i32 %199, 0
  %201 = add nsw i32 %196, -48
  %202 = select i1 %200, i32 0, i32 %201
  br label %203

203:                                              ; preds = %198, %194
  %204 = phi i32 [ %202, %198 ], [ 0, %194 ]
  %205 = add nsw i32 %204, %132
  %206 = icmp ult i64 %195, %104
  br i1 %206, label %207, label %185

207:                                              ; preds = %203
  %208 = getelementptr inbounds i32, i32* %107, i64 %195
  %209 = load i32, i32* %208, align 4
  %210 = icmp ugt i32 %209, 127
  br i1 %210, label %185, label %211

211:                                              ; preds = %207
  %212 = tail call i32 @iswdigit(i32 %209) #13
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %185, label %214

214:                                              ; preds = %211
  %215 = mul i32 %205, 10
  %216 = add nuw nsw i64 %79, 6
  %217 = load i32, i32* %208, align 4
  %218 = icmp ugt i32 %217, 127
  br i1 %218, label %224, label %219

219:                                              ; preds = %214
  %220 = tail call i32 @iswdigit(i32 %217) #13
  %221 = icmp eq i32 %220, 0
  %222 = add nsw i32 %217, -48
  %223 = select i1 %221, i32 0, i32 %222
  br label %224

224:                                              ; preds = %219, %214
  %225 = phi i32 [ %223, %219 ], [ 0, %214 ]
  %226 = add nsw i32 %225, %215
  %227 = load i64, i64* %6, align 8
  %228 = trunc i32 %226 to i16
  br label %134

229:                                              ; preds = %100
  %230 = getelementptr inbounds i32, i32* %74, i64 %91
  %231 = load i32, i32* %230, align 4
  %232 = icmp ugt i32 %231, 127
  br i1 %232, label %185, label %233

233:                                              ; preds = %229
  %234 = tail call i32 @iswdigit(i32 %231) #13
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %185, label %236

236:                                              ; preds = %233
  %237 = add nuw nsw i64 %79, 2
  %238 = load i32, i32* %230, align 4
  %239 = icmp ugt i32 %238, 127
  br i1 %239, label %245, label %240

240:                                              ; preds = %236
  %241 = tail call i32 @iswdigit(i32 %238) #13
  %242 = icmp eq i32 %241, 0
  %243 = add nsw i32 %238, -48
  %244 = select i1 %242, i32 0, i32 %243
  br label %245

245:                                              ; preds = %240, %236
  %246 = phi i32 [ %244, %240 ], [ 0, %236 ]
  %247 = add nsw i32 %246, %101
  %248 = icmp ugt i32 %247, 59
  br i1 %248, label %185, label %103

249:                                              ; preds = %60
  %250 = getelementptr inbounds i32, i32* %38, i64 %52
  %251 = load i32, i32* %250, align 4
  %252 = icmp ugt i32 %251, 127
  br i1 %252, label %185, label %253

253:                                              ; preds = %249
  %254 = tail call i32 @iswdigit(i32 %251) #13
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %185, label %256

256:                                              ; preds = %253
  %257 = mul i32 %61, 10
  %258 = add nuw nsw i64 %42, 2
  %259 = load i32, i32* %250, align 4
  %260 = icmp ugt i32 %259, 127
  br i1 %260, label %266, label %261

261:                                              ; preds = %256
  %262 = tail call i32 @iswdigit(i32 %259) #13
  %263 = icmp eq i32 %262, 0
  %264 = add nsw i32 %259, -48
  %265 = select i1 %263, i32 0, i32 %264
  br label %266

266:                                              ; preds = %261, %256
  %267 = phi i32 [ %265, %261 ], [ 0, %256 ]
  %268 = add nsw i32 %267, %257
  %269 = icmp ugt i32 %268, 59
  br i1 %269, label %185, label %63

270:                                              ; preds = %25
  %271 = getelementptr inbounds i32, i32* %11, i64 1
  %272 = load i32, i32* %271, align 4
  %273 = icmp ugt i32 %272, 127
  br i1 %273, label %185, label %274

274:                                              ; preds = %270
  %275 = tail call i32 @iswdigit(i32 %272) #13
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %185, label %277

277:                                              ; preds = %274
  %278 = mul i32 %26, 10
  %279 = load i32, i32* %271, align 4
  %280 = icmp ugt i32 %279, 127
  br i1 %280, label %286, label %281

281:                                              ; preds = %277
  %282 = tail call i32 @iswdigit(i32 %279) #13
  %283 = icmp eq i32 %282, 0
  %284 = add nsw i32 %279, -48
  %285 = select i1 %283, i32 0, i32 %284
  br label %286

286:                                              ; preds = %281, %277
  %287 = phi i32 [ %285, %281 ], [ 0, %277 ]
  %288 = add nsw i32 %287, %278
  %289 = icmp ugt i32 %288, 23
  br i1 %289, label %185, label %28
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN12_GLOBAL__N_113ParseTimeZoneEN6pdfium4spanIKwEEPi(%"class.pdfium::span"* nocapture readonly, i32* nocapture) unnamed_addr #0 {
  store i32 0, i32* %1, align 4
  %3 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %0, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 45
  %11 = icmp eq i64 %4, 1
  br i1 %11, label %46, label %12

12:                                               ; preds = %6, %35
  %13 = phi i64 [ %29, %35 ], [ %4, %6 ]
  %14 = phi i32* [ %36, %35 ], [ %8, %6 ]
  %15 = phi i32 [ %31, %35 ], [ 0, %6 ]
  %16 = phi i64 [ %18, %35 ], [ 1, %6 ]
  %17 = mul nsw i32 %15, 10
  %18 = add nuw nsw i64 %16, 1
  %19 = getelementptr inbounds i32, i32* %14, i64 %16
  %20 = load i32, i32* %19, align 4
  %21 = icmp ugt i32 %20, 127
  br i1 %21, label %28, label %22

22:                                               ; preds = %12
  %23 = tail call i32 @iswdigit(i32 %20) #13
  %24 = icmp eq i32 %23, 0
  %25 = add nsw i32 %20, -48
  %26 = select i1 %24, i32 0, i32 %25
  %27 = load i64, i64* %3, align 8
  br label %28

28:                                               ; preds = %12, %22
  %29 = phi i64 [ %27, %22 ], [ %13, %12 ]
  %30 = phi i32 [ %26, %22 ], [ 0, %12 ]
  %31 = add nsw i32 %30, %17
  %32 = icmp ult i64 %18, %29
  %33 = icmp ult i64 %18, 3
  %34 = and i1 %33, %32
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = load i32*, i32** %7, align 8
  br label %12

37:                                               ; preds = %28
  %38 = mul i32 %31, 60
  br i1 %32, label %39, label %46

39:                                               ; preds = %37
  %40 = load i32*, i32** %7, align 8
  %41 = getelementptr inbounds i32, i32* %40, i64 %18
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 58
  %44 = zext i1 %43 to i64
  %45 = add nuw nsw i64 %18, %44
  br label %46

46:                                               ; preds = %6, %39, %37
  %47 = phi i32 [ %38, %37 ], [ %38, %39 ], [ 0, %6 ]
  %48 = phi i64 [ %29, %37 ], [ %29, %39 ], [ 1, %6 ]
  %49 = phi i64 [ %18, %37 ], [ %45, %39 ], [ 1, %6 ]
  %50 = add nuw nsw i64 %49, 2
  %51 = icmp ult i64 %49, %48
  br i1 %51, label %52, label %75

52:                                               ; preds = %46, %68
  %53 = phi i64 [ %69, %68 ], [ %48, %46 ]
  %54 = phi i32 [ %71, %68 ], [ 0, %46 ]
  %55 = phi i64 [ %57, %68 ], [ %49, %46 ]
  %56 = mul nsw i32 %54, 10
  %57 = add nuw nsw i64 %55, 1
  %58 = load i32*, i32** %7, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 %55
  %60 = load i32, i32* %59, align 4
  %61 = icmp ugt i32 %60, 127
  br i1 %61, label %68, label %62

62:                                               ; preds = %52
  %63 = tail call i32 @iswdigit(i32 %60) #13
  %64 = icmp eq i32 %63, 0
  %65 = add nsw i32 %60, -48
  %66 = select i1 %64, i32 0, i32 %65
  %67 = load i64, i64* %3, align 8
  br label %68

68:                                               ; preds = %52, %62
  %69 = phi i64 [ %67, %62 ], [ %53, %52 ]
  %70 = phi i32 [ %66, %62 ], [ 0, %52 ]
  %71 = add nsw i32 %70, %56
  %72 = icmp ult i64 %57, %69
  %73 = icmp ult i64 %57, %50
  %74 = and i1 %73, %72
  br i1 %74, label %52, label %75

75:                                               ; preds = %68, %46
  %76 = phi i64 [ %49, %46 ], [ %57, %68 ]
  %77 = phi i32 [ 0, %46 ], [ %71, %68 ]
  %78 = add nsw i32 %77, %47
  %79 = sub nsw i32 0, %78
  %80 = select i1 %10, i32 %79, i32 %78
  store i32 %80, i32* %1, align 4
  br label %81

81:                                               ; preds = %2, %75
  %82 = phi i64 [ %76, %75 ], [ 0, %2 ]
  ret i64 %82
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21CFGAS_StringFormatterC2ERKN5fxcrt10WideStringE(%class.CFGAS_StringFormatter*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* dereferenceable(8) %1) #13
  %4 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %5, align 8, !noalias !8
  %7 = icmp eq %"class.fxcrt::StringDataTemplate"* %6, null
  %8 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %6, i64 0, i32 3, i64 0
  br i1 %7, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %6, i64 0, i32 1
  %11 = load i64, i64* %10, align 8, !noalias !8
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi i64 [ %11, %9 ], [ 0, %2 ]
  %14 = ptrtoint i32* %8 to i64
  %15 = select i1 %7, i64 0, i64 %14
  %16 = bitcast %"class.pdfium::span"* %4 to i64*
  store i64 %15, i64* %16, align 8, !alias.scope !8
  %17 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 1, i32 1
  store i64 %13, i64* %17, align 8, !alias.scope !8
  ret void
}

declare void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21CFGAS_StringFormatterD2Ev(%class.CFGAS_StringFormatter*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %2) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21CFGAS_StringFormatter11SplitOnBarsERKN5fxcrt10WideStringE(%"class.std::__1::vector"* noalias sret, %"class.fxcrt::WideString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #13
  %10 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %10, align 8, !noalias !11
  %12 = icmp eq %"class.fxcrt::StringDataTemplate"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %11, i64 0, i32 3, i64 0
  %15 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %11, i64 0, i32 1
  %16 = load i64, i64* %15, align 8, !noalias !11
  %17 = ptrtoint i32* %14 to i64
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %2, %13
  %20 = phi i64 [ %17, %13 ], [ 0, %2 ]
  %21 = inttoptr i64 %20 to i32*
  br label %61

22:                                               ; preds = %13
  %23 = bitcast i32** %3 to i8*
  %24 = bitcast i64* %4 to i8*
  %25 = bitcast %"class.fxcrt::WideString"** %7 to i64*
  br label %26

26:                                               ; preds = %53, %22
  %27 = phi i8 [ 0, %22 ], [ %55, %53 ]
  %28 = phi i64 [ 0, %22 ], [ %54, %53 ]
  %29 = phi i64 [ 0, %22 ], [ %56, %53 ]
  %30 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %11, i64 0, i32 3, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 39
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = and i8 %27, 1
  %35 = xor i8 %34, 1
  br label %53

36:                                               ; preds = %26
  %37 = icmp eq i32 %31, 124
  %38 = and i8 %27, 1
  %39 = icmp eq i8 %38, 0
  %40 = and i1 %39, %37
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  %42 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %11, i64 0, i32 3, i64 %28
  store i32* %42, i32** %3, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %43 = sub i64 %29, %28
  store i64 %43, i64* %4, align 8
  %44 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %7, align 8
  %45 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %8, align 8
  %46 = icmp ult %"class.fxcrt::WideString"* %44, %45
  br i1 %46, label %47, label %50

47:                                               ; preds = %41
  call void @_ZN5fxcrt10WideStringC1EPKwm(%"class.fxcrt::WideString"* %44, i32* %42, i64 %43) #13
  %48 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %44, i64 1
  %49 = ptrtoint %"class.fxcrt::WideString"* %48 to i64
  store i64 %49, i64* %25, align 8
  br label %51

50:                                               ; preds = %41
  call void @_ZNSt3__16vectorIN5fxcrt10WideStringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPKwmEEEvDpOT_(%"class.std::__1::vector"* %0, i32** nonnull dereferenceable(8) %3, i64* nonnull dereferenceable(8) %4) #13
  br label %51

51:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  %52 = add nuw i64 %29, 1
  br label %53

53:                                               ; preds = %33, %51, %36
  %54 = phi i64 [ %28, %33 ], [ %52, %51 ], [ %28, %36 ]
  %55 = phi i8 [ %35, %33 ], [ %27, %51 ], [ %27, %36 ]
  %56 = add nuw i64 %29, 1
  %57 = icmp eq i64 %56, %16
  br i1 %57, label %58, label %26

58:                                               ; preds = %53
  %59 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %7, align 8
  %60 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %8, align 8
  br label %61

61:                                               ; preds = %19, %58
  %62 = phi i32* [ %21, %19 ], [ %14, %58 ]
  %63 = phi %"class.fxcrt::WideString"* [ null, %19 ], [ %60, %58 ]
  %64 = phi %"class.fxcrt::WideString"* [ null, %19 ], [ %59, %58 ]
  %65 = phi i64 [ 0, %19 ], [ %16, %58 ]
  %66 = phi i64 [ 0, %19 ], [ %54, %58 ]
  %67 = bitcast i32** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #13
  %68 = getelementptr inbounds i32, i32* %62, i64 %66
  store i32* %68, i32** %5, align 8
  %69 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #13
  %70 = sub i64 %65, %66
  store i64 %70, i64* %6, align 8
  %71 = icmp ult %"class.fxcrt::WideString"* %64, %63
  br i1 %71, label %72, label %76

72:                                               ; preds = %61
  call void @_ZN5fxcrt10WideStringC1EPKwm(%"class.fxcrt::WideString"* %64, i32* %68, i64 %70) #13
  %73 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %64, i64 1
  %74 = ptrtoint %"class.fxcrt::WideString"* %73 to i64
  %75 = bitcast %"class.fxcrt::WideString"** %7 to i64*
  store i64 %74, i64* %75, align 8
  br label %77

76:                                               ; preds = %61
  call void @_ZNSt3__16vectorIN5fxcrt10WideStringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPKwmEEEvDpOT_(%"class.std::__1::vector"* %0, i32** nonnull dereferenceable(8) %5, i64* nonnull dereferenceable(8) %6) #13
  br label %77

77:                                               ; preds = %72, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK21CFGAS_StringFormatter11GetCategoryEv(%class.CFGAS_StringFormatter* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca %"class.fxcrt::WideString", align 8
  %4 = alloca %"class.pdfium::span", align 8
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  store i64 0, i64* %2, align 8
  %8 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 1
  %9 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %87, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %8, i64 0, i32 0, i32 0
  %14 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  %15 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 1
  %18 = bitcast %"class.pdfium::span"* %4 to i8*
  %19 = bitcast %"class.pdfium::span"* %8 to i8*
  br label %20

20:                                               ; preds = %12, %80
  %21 = phi i8 [ 0, %12 ], [ %83, %80 ]
  %22 = phi i32 [ 0, %12 ], [ %82, %80 ]
  %23 = phi i64 [ 0, %12 ], [ %84, %80 ]
  %24 = load i32*, i32** %13, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 %23
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 39
  br i1 %27, label %28, label %30

28:                                               ; preds = %20
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %19, i64 16, i1 false)
  call fastcc void @_ZN12_GLOBAL__N_114GetLiteralTextEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %3, %"class.pdfium::span"* nonnull %4, i64* nonnull %2)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %3) #13
  %29 = load i64, i64* %2, align 8
  br label %80

30:                                               ; preds = %20
  %31 = and i8 %21, 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %77

33:                                               ; preds = %30
  switch i32 %26, label %34 [
    i32 58, label %77
    i32 47, label %77
    i32 46, label %77
    i32 45, label %77
    i32 44, label %77
    i32 32, label %77
    i32 0, label %77
  ]

34:                                               ; preds = %33
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %15, align 8
  %35 = load i32, i32* %25, align 4
  call void @_ZN5fxcrt10WideStringC1Ew(%"class.fxcrt::WideString"* nonnull %5, i32 signext %35) #13
  %36 = add nuw i64 %23, 1
  store i64 %36, i64* %2, align 8
  %37 = load i64, i64* %9, align 8
  %38 = icmp ult i64 %36, %37
  br i1 %38, label %39, label %71

39:                                               ; preds = %34, %44
  %40 = phi i64 [ %46, %44 ], [ %36, %34 ]
  %41 = load i32*, i32** %13, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 %40
  %43 = load i32, i32* %42, align 4
  switch i32 %43, label %44 [
    i32 46, label %49
    i32 40, label %49
    i32 123, label %50
  ]

44:                                               ; preds = %39
  %45 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %5, i32 signext %43) #13
  %46 = add i64 %40, 1
  %47 = load i64, i64* %9, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %39, label %67

49:                                               ; preds = %39, %39
  br label %50

50:                                               ; preds = %39, %49
  %51 = phi i8 [ %21, %49 ], [ 1, %39 ]
  store i64 %40, i64* %2, align 8
  %52 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %15, align 8, !noalias !14
  %53 = icmp eq %"class.fxcrt::StringDataTemplate"* %52, null
  %54 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %52, i64 0, i32 3
  %55 = select i1 %53, [1 x i32]* @.str.15, [1 x i32]* %54
  %56 = getelementptr inbounds [1 x i32], [1 x i32]* %55, i64 0, i64 0
  br i1 %53, label %60, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %52, i64 0, i32 1
  %59 = load i64, i64* %58, align 8, !noalias !14
  br label %60

60:                                               ; preds = %50, %57
  %61 = phi i64 [ %59, %57 ], [ 0, %50 ]
  store i32* %56, i32** %16, align 8, !alias.scope !14
  store i64 %61, i64* %17, align 8, !alias.scope !14
  %62 = call i32 @_Z16FX_HashCode_GetWN5fxcrt18StringViewTemplateIwEEb(%"class.fxcrt::StringViewTemplate"* nonnull %6, i1 zeroext false) #13
  switch i32 %62, label %75 [
    i32 361525997, label %71
    i32 755543941, label %73
    i32 189790320, label %68
    i32 1452061952, label %69
    i32 86585787, label %70
    i32 -1108759586, label %63
    i32 762425359, label %65
  ]

63:                                               ; preds = %60
  %64 = icmp eq i32 %22, 2
  br i1 %64, label %71, label %75

65:                                               ; preds = %60
  %66 = icmp eq i32 %22, 1
  br i1 %66, label %71, label %75

67:                                               ; preds = %44
  store i64 %46, i64* %2, align 8
  br label %73

68:                                               ; preds = %60
  br label %73

69:                                               ; preds = %60
  br label %73

70:                                               ; preds = %60
  br label %73

71:                                               ; preds = %34, %65, %63, %60
  %72 = phi i32 [ %22, %34 ], [ 3, %65 ], [ 3, %63 ], [ 3, %60 ]
  br label %73

73:                                               ; preds = %60, %71, %70, %69, %68, %67
  %74 = phi i32 [ %22, %67 ], [ 4, %68 ], [ 6, %69 ], [ 7, %70 ], [ %72, %71 ], [ 5, %60 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  br label %87

75:                                               ; preds = %63, %60, %65
  %76 = phi i32 [ 1, %63 ], [ %22, %60 ], [ 2, %65 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  br label %80

77:                                               ; preds = %30, %33, %33, %33, %33, %33, %33, %33
  %78 = icmp eq i32 %26, 125
  %79 = select i1 %78, i8 0, i8 %21
  br label %80

80:                                               ; preds = %75, %77, %28
  %81 = phi i64 [ %29, %28 ], [ %40, %75 ], [ %23, %77 ]
  %82 = phi i32 [ %22, %28 ], [ %76, %75 ], [ %22, %77 ]
  %83 = phi i8 [ %21, %28 ], [ %51, %75 ], [ %79, %77 ]
  %84 = add i64 %81, 1
  store i64 %84, i64* %2, align 8
  %85 = load i64, i64* %9, align 8
  %86 = icmp ult i64 %84, %85
  br i1 %86, label %20, label %87

87:                                               ; preds = %80, %73, %1
  %88 = phi i32 [ 0, %1 ], [ %74, %73 ], [ %82, %80 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret i32 %88
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_114GetLiteralTextEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* noalias sret, %"class.pdfium::span"* nocapture readonly, i64* nocapture) unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %4, align 8
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #13
  %5 = load i64, i64* %2, align 8
  %6 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %5, %7
  br i1 %8, label %9, label %119

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds i32, i32* %11, i64 %5
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 39
  br i1 %14, label %15, label %119

15:                                               ; preds = %9
  %16 = add nuw i64 %5, 1
  store i64 %16, i64* %2, align 8
  %17 = load i64, i64* %6, align 8
  %18 = icmp ult i64 %16, %17
  br i1 %18, label %19, label %119

19:                                               ; preds = %15, %111
  %20 = phi i64 [ %117, %111 ], [ %17, %15 ]
  %21 = phi i64 [ %116, %111 ], [ %16, %15 ]
  %22 = phi i32 [ %106, %111 ], [ 1, %15 ]
  br label %23

23:                                               ; preds = %19, %100
  %24 = phi i64 [ %20, %19 ], [ %101, %100 ]
  %25 = phi i64 [ %21, %19 ], [ %102, %100 ]
  %26 = load i32*, i32** %10, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 %25
  %28 = load i32, i32* %27, align 4
  switch i32 %28, label %104 [
    i32 39, label %29
    i32 92, label %41
  ]

29:                                               ; preds = %23
  %30 = add nuw i64 %25, 1
  %31 = icmp ult i64 %30, %24
  br i1 %31, label %32, label %119

32:                                               ; preds = %29
  %33 = getelementptr inbounds i32, i32* %26, i64 %30
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 39
  %36 = and i32 %22, 1
  %37 = icmp eq i32 %36, 0
  %38 = or i1 %37, %35
  br i1 %38, label %39, label %119

39:                                               ; preds = %32
  %40 = add nsw i32 %22, 2
  store i64 %30, i64* %2, align 8
  br label %104

41:                                               ; preds = %23
  %42 = add nuw i64 %25, 1
  %43 = icmp ult i64 %42, %24
  br i1 %43, label %44, label %104

44:                                               ; preds = %41
  %45 = getelementptr inbounds i32, i32* %26, i64 %42
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 117
  br i1 %47, label %48, label %104

48:                                               ; preds = %44
  %49 = add nuw i64 %25, 2
  store i64 %49, i64* %2, align 8
  %50 = load i64, i64* %6, align 8
  %51 = icmp ult i64 %49, %50
  br i1 %51, label %54, label %100

52:                                               ; preds = %89
  %53 = icmp eq i32 %90, 0
  br i1 %53, label %100, label %95

54:                                               ; preds = %48, %89
  %55 = phi i64 [ %58, %89 ], [ %49, %48 ]
  %56 = phi i32 [ %91, %89 ], [ 0, %48 ]
  %57 = phi i32 [ %90, %89 ], [ 0, %48 ]
  %58 = add nuw i64 %55, 1
  store i64 %58, i64* %2, align 8
  %59 = load i64, i64* %6, align 8
  %60 = icmp ugt i64 %59, %55
  br i1 %60, label %62, label %61, !prof !17

61:                                               ; preds = %54
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

62:                                               ; preds = %54
  %63 = load i32*, i32** %10, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 %55
  %65 = load i32, i32* %64, align 4
  %66 = trunc i32 %65 to i8
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %89, label %68

68:                                               ; preds = %62
  %69 = tail call i16** @__ctype_b_loc() #14
  %70 = load i16*, i16** %69, align 8
  %71 = sext i8 %66 to i64
  %72 = getelementptr inbounds i16, i16* %70, i64 %71
  %73 = load i16, i16* %72, align 2
  %74 = and i16 %73, 4096
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %89, label %76

76:                                               ; preds = %68
  %77 = shl i32 %57, 4
  %78 = shl i32 %65, 24
  %79 = ashr exact i32 %78, 24
  %80 = add nsw i32 %79, -97
  %81 = icmp ult i32 %80, 26
  %82 = add nsw i8 %66, -32
  %83 = select i1 %81, i8 %82, i8 %66
  %84 = sext i8 %83 to i32
  %85 = icmp sgt i8 %83, 57
  %86 = select i1 %85, i32 -55, i32 -48
  %87 = add i32 %77, %84
  %88 = add i32 %87, %86
  br label %89

89:                                               ; preds = %62, %68, %76
  %90 = phi i32 [ %88, %76 ], [ %57, %68 ], [ %57, %62 ]
  %91 = add nuw nsw i32 %56, 1
  %92 = icmp ult i64 %58, %59
  %93 = icmp ult i32 %91, 4
  %94 = and i1 %93, %92
  br i1 %94, label %54, label %52

95:                                               ; preds = %52
  %96 = and i32 %90, 65535
  %97 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %0, i32 signext %96) #13
  %98 = load i64, i64* %2, align 8
  %99 = load i64, i64* %6, align 8
  br label %100

100:                                              ; preds = %48, %52, %95
  %101 = phi i64 [ %59, %52 ], [ %99, %95 ], [ %50, %48 ]
  %102 = phi i64 [ %58, %52 ], [ %98, %95 ], [ %49, %48 ]
  %103 = icmp ult i64 %102, %101
  br i1 %103, label %23, label %119

104:                                              ; preds = %23, %41, %44, %39
  %105 = phi i64 [ %30, %39 ], [ %25, %44 ], [ %25, %41 ], [ %25, %23 ]
  %106 = phi i32 [ %40, %39 ], [ %22, %44 ], [ %22, %41 ], [ %22, %23 ]
  %107 = add nuw i64 %105, 1
  store i64 %107, i64* %2, align 8
  %108 = load i64, i64* %6, align 8
  %109 = icmp ugt i64 %108, %105
  br i1 %109, label %111, label %110, !prof !17

110:                                              ; preds = %104
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

111:                                              ; preds = %104
  %112 = load i32*, i32** %10, align 8
  %113 = getelementptr inbounds i32, i32* %112, i64 %105
  %114 = load i32, i32* %113, align 4
  %115 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %0, i32 signext %114) #13
  %116 = load i64, i64* %2, align 8
  %117 = load i64, i64* %6, align 8
  %118 = icmp ult i64 %116, %117
  br i1 %118, label %19, label %119

119:                                              ; preds = %111, %32, %29, %100, %15, %9, %3
  ret void
}

declare void @_ZN5fxcrt10WideStringC1Ew(%"class.fxcrt::WideString"*, i32 signext) unnamed_addr #2

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"*, i32 signext) local_unnamed_addr #2

declare i32 @_Z16FX_HashCode_GetWN5fxcrt18StringViewTemplateIwEEb(%"class.fxcrt::StringViewTemplate"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK21CFGAS_StringFormatter13GetTextFormatEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::WideString"* noalias sret, %class.CFGAS_StringFormatter*, %"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.fxcrt::WideString", align 8
  %7 = alloca %"class.pdfium::span", align 8
  %8 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %9 = alloca %"class.fxcrt::WideString", align 8
  %10 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  store i64 0, i64* %5, align 8
  %11 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %11, align 8
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #13
  %12 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %1, i64 0, i32 1
  %13 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %1, i64 0, i32 1, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %111, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %12, i64 0, i32 0, i32 0
  %18 = bitcast %"class.fxcrt::WideString"* %9 to i8*
  %19 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.fxcrt::StringViewTemplate"* %2 to i8*
  %21 = bitcast %"class.fxcrt::StringViewTemplate"* %4 to i8*
  %22 = bitcast %"class.pdfium::span"* %7 to i8*
  %23 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %8, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %8, i64 0, i32 0, i32 1
  %25 = bitcast %"class.pdfium::span"* %12 to i8*
  br label %26

26:                                               ; preds = %16, %101
  %27 = phi i64 [ 0, %16 ], [ %104, %101 ]
  %28 = phi i8 [ 0, %16 ], [ %103, %101 ]
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br label %31

31:                                               ; preds = %26, %92
  %32 = phi i64 [ %27, %26 ], [ %64, %92 ]
  %33 = load i32*, i32** %17, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 %32
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 39
  br i1 %36, label %37, label %46

37:                                               ; preds = %31
  store i64 %32, i64* %5, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 %25, i64 16, i1 false)
  call fastcc void @_ZN12_GLOBAL__N_114GetLiteralTextEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %6, %"class.pdfium::span"* nonnull %7, i64* nonnull %5)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #13
  %38 = load i32*, i32** %17, align 8
  %39 = shl i64 %32, 32
  %40 = ashr exact i64 %39, 32
  %41 = getelementptr inbounds i32, i32* %38, i64 %40
  %42 = load i64, i64* %5, align 8
  %43 = sub nsw i64 1, %40
  %44 = add i64 %43, %42
  store i32* %41, i32** %23, align 8
  store i64 %44, i64* %24, align 8
  %45 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"* %0, %"class.fxcrt::StringViewTemplate"* nonnull %8) #13
  br label %101

46:                                               ; preds = %31
  br i1 %30, label %47, label %95

47:                                               ; preds = %46
  switch i32 %35, label %48 [
    i32 58, label %97
    i32 47, label %97
    i32 46, label %97
    i32 45, label %97
    i32 44, label %97
    i32 32, label %97
    i32 0, label %97
  ]

48:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %19, align 8
  %49 = load i32, i32* %34, align 4
  call void @_ZN5fxcrt10WideStringC1Ew(%"class.fxcrt::WideString"* nonnull %9, i32 signext %49) #13
  %50 = add nuw i64 %32, 1
  %51 = load i64, i64* %13, align 8
  %52 = icmp ult i64 %50, %51
  br i1 %52, label %53, label %63

53:                                               ; preds = %48, %58
  %54 = phi i64 [ %60, %58 ], [ %50, %48 ]
  %55 = load i32*, i32** %17, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 %54
  %57 = load i32, i32* %56, align 4
  switch i32 %57, label %58 [
    i32 123, label %63
    i32 46, label %63
    i32 40, label %63
  ]

58:                                               ; preds = %53
  %59 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %9, i32 signext %57) #13
  %60 = add nuw i64 %54, 1
  %61 = load i64, i64* %13, align 8
  %62 = icmp ult i64 %60, %61
  br i1 %62, label %53, label %63

63:                                               ; preds = %58, %53, %53, %53, %48
  %64 = phi i64 [ %50, %48 ], [ %60, %58 ], [ %54, %53 ], [ %54, %53 ], [ %54, %53 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %20, i64 16, i1 false)
  %65 = call zeroext i1 @_ZNK5fxcrt10WideStringeqENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"* nonnull %9, %"class.fxcrt::StringViewTemplate"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21)
  br i1 %65, label %66, label %92

66:                                               ; preds = %63
  store i64 %64, i64* %5, align 8
  %67 = load i64, i64* %13, align 8
  %68 = icmp ult i64 %64, %67
  br i1 %68, label %69, label %89

69:                                               ; preds = %66
  %70 = load i32*, i32** %17, align 8
  br label %71

71:                                               ; preds = %69, %83
  %72 = phi i64 [ %64, %69 ], [ %85, %83 ]
  %73 = getelementptr inbounds i32, i32* %70, i64 %72
  %74 = load i32, i32* %73, align 4
  switch i32 %74, label %83 [
    i32 40, label %75
    i32 123, label %87
  ]

75:                                               ; preds = %71, %79
  %76 = phi i64 [ %77, %79 ], [ %72, %71 ]
  %77 = add nuw i64 %76, 1
  %78 = icmp ult i64 %77, %67
  br i1 %78, label %79, label %83

79:                                               ; preds = %75
  %80 = getelementptr inbounds i32, i32* %70, i64 %77
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 41
  br i1 %82, label %83, label %75

83:                                               ; preds = %79, %75, %71
  %84 = phi i64 [ %72, %71 ], [ %77, %75 ], [ %77, %79 ]
  %85 = add i64 %84, 1
  %86 = icmp ult i64 %85, %67
  br i1 %86, label %71, label %88

87:                                               ; preds = %71
  store i64 %72, i64* %5, align 8
  br label %89

88:                                               ; preds = %83
  store i64 %85, i64* %5, align 8
  br label %89

89:                                               ; preds = %88, %87, %66
  %90 = phi i64 [ %85, %88 ], [ %72, %87 ], [ %64, %66 ]
  %91 = phi i8 [ %28, %88 ], [ 1, %87 ], [ %28, %66 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  br label %101

92:                                               ; preds = %63
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %93 = load i64, i64* %13, align 8
  %94 = icmp ult i64 %64, %93
  br i1 %94, label %31, label %107

95:                                               ; preds = %46
  store i64 %27, i64* %5, align 8
  %96 = icmp eq i32 %35, 125
  br i1 %96, label %101, label %98

97:                                               ; preds = %47, %47, %47, %47, %47, %47, %47
  store i64 %32, i64* %5, align 8
  br label %98

98:                                               ; preds = %97, %95
  %99 = phi i64 [ %32, %97 ], [ %27, %95 ]
  %100 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %0, i32 signext %35) #13
  br label %101

101:                                              ; preds = %89, %95, %98, %37
  %102 = phi i64 [ %42, %37 ], [ %99, %98 ], [ %27, %95 ], [ %90, %89 ]
  %103 = phi i8 [ %28, %37 ], [ %28, %98 ], [ %28, %95 ], [ %91, %89 ]
  %104 = add i64 %102, 1
  store i64 %104, i64* %5, align 8
  %105 = load i64, i64* %13, align 8
  %106 = icmp ult i64 %104, %105
  br i1 %106, label %26, label %108

107:                                              ; preds = %92
  store i64 %64, i64* %5, align 8
  br label %111

108:                                              ; preds = %101
  %109 = and i8 %103, 1
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %107, %3, %108
  %112 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %1, i64 0, i32 0
  %113 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"* %0, %"class.fxcrt::WideString"* dereferenceable(8) %112) #13
  br label %114

114:                                              ; preds = %111, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  ret void
}

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"*, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.LocaleIface* @_ZNK21CFGAS_StringFormatter16GetNumericFormatEP14LocaleMgrIfacePmPjPN5fxcrt10WideStringE(%class.CFGAS_StringFormatter* readonly, %class.LocaleMgrIface*, i64* nocapture, i32* nocapture, %"class.fxcrt::WideString"*) local_unnamed_addr #0 align 2 {
  %6 = alloca i64, align 8
  %7 = alloca %"class.fxcrt::WideString", align 8
  %8 = alloca %"class.pdfium::span", align 8
  %9 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %10 = alloca %"class.fxcrt::WideString", align 8
  %11 = alloca %"class.fxcrt::WideString", align 8
  %12 = alloca %"class.fxcrt::WideString", align 8
  %13 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %14 = alloca %"class.fxcrt::WideString", align 8
  store i32 0, i32* %3, align 4
  %15 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  store i64 0, i64* %6, align 8
  %16 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 1
  %17 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 1, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %300, label %20

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %16, i64 0, i32 0, i32 0
  %22 = bitcast %"class.fxcrt::WideString"* %10 to i8*
  %23 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.fxcrt::WideString"* %11 to i8*
  %25 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast %class.LocaleMgrIface* %1 to %class.LocaleIface* (%class.LocaleMgrIface*, %"class.fxcrt::WideString"*)***
  %27 = bitcast %"class.fxcrt::WideString"* %12 to i8*
  %28 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %13, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %13, i64 0, i32 0, i32 1
  %31 = bitcast %class.LocaleMgrIface* %1 to %class.LocaleIface* (%class.LocaleMgrIface*)***
  %32 = bitcast %"class.fxcrt::WideString"* %14 to i8*
  %33 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.pdfium::span"* %8 to i8*
  %35 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %9, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %9, i64 0, i32 0, i32 1
  %37 = bitcast %"class.pdfium::span"* %16 to i8*
  br label %38

38:                                               ; preds = %20, %290
  %39 = phi i64 [ 0, %20 ], [ %292, %290 ]
  %40 = phi %class.LocaleIface* [ null, %20 ], [ %268, %290 ]
  %41 = phi i8 [ 0, %20 ], [ %291, %290 ]
  %42 = phi i8 [ 0, %20 ], [ %266, %290 ]
  br label %43

43:                                               ; preds = %38, %236
  %44 = phi i64 [ %39, %38 ], [ %237, %236 ]
  %45 = phi i8 [ %42, %38 ], [ 1, %236 ]
  %46 = load i32*, i32** %21, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 %44
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 39
  br i1 %49, label %50, label %59

50:                                               ; preds = %43
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 8 %37, i64 16, i1 false)
  call fastcc void @_ZN12_GLOBAL__N_114GetLiteralTextEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %7, %"class.pdfium::span"* nonnull %8, i64* nonnull %6)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #13
  %51 = load i32*, i32** %21, align 8
  %52 = shl i64 %44, 32
  %53 = ashr exact i64 %52, 32
  %54 = getelementptr inbounds i32, i32* %51, i64 %53
  %55 = load i64, i64* %6, align 8
  %56 = sub nsw i64 1, %53
  %57 = add i64 %56, %55
  store i32* %54, i32** %35, align 8
  store i64 %57, i64* %36, align 8
  %58 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"* %4, %"class.fxcrt::StringViewTemplate"* nonnull %9) #13
  br label %265

59:                                               ; preds = %43
  %60 = and i8 %45, 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %240

62:                                               ; preds = %59
  switch i32 %48, label %63 [
    i32 58, label %263
    i32 47, label %263
    i32 46, label %263
    i32 45, label %263
    i32 44, label %263
    i32 32, label %263
    i32 0, label %263
  ]

63:                                               ; preds = %62
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %23, align 8
  %64 = load i32, i32* %47, align 4
  call void @_ZN5fxcrt10WideStringC1Ew(%"class.fxcrt::WideString"* nonnull %10, i32 signext %64) #13
  %65 = load i64, i64* %6, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %6, align 8
  %67 = load i64, i64* %17, align 8
  %68 = icmp ult i64 %66, %67
  br i1 %68, label %69, label %81

69:                                               ; preds = %63, %75
  %70 = phi i64 [ %79, %75 ], [ %67, %63 ]
  %71 = phi i64 [ %78, %75 ], [ %66, %63 ]
  %72 = load i32*, i32** %21, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 %71
  %74 = load i32, i32* %73, align 4
  switch i32 %74, label %75 [
    i32 123, label %81
    i32 46, label %81
    i32 40, label %81
  ]

75:                                               ; preds = %69
  %76 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %10, i32 signext %74) #13
  %77 = load i64, i64* %6, align 8
  %78 = add i64 %77, 1
  store i64 %78, i64* %6, align 8
  %79 = load i64, i64* %17, align 8
  %80 = icmp ult i64 %78, %79
  br i1 %80, label %69, label %81

81:                                               ; preds = %75, %69, %69, %69, %63
  %82 = phi i64 [ %67, %63 ], [ %79, %75 ], [ %70, %69 ], [ %70, %69 ], [ %70, %69 ]
  %83 = phi i64 [ %66, %63 ], [ %78, %75 ], [ %71, %69 ], [ %71, %69 ], [ %71, %69 ]
  %84 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %23, align 8, !noalias !20
  %85 = icmp eq %"class.fxcrt::StringDataTemplate"* %84, null
  %86 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %84, i64 0, i32 3
  %87 = select i1 %85, [1 x i32]* @.str.15, [1 x i32]* %86
  br i1 %85, label %236, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %84, i64 0, i32 1
  %90 = load i64, i64* %89, align 8, !noalias !20
  %91 = icmp eq i64 %90, 3
  br i1 %91, label %99, label %236

92:                                               ; preds = %99
  %93 = getelementptr inbounds [1 x i32], [1 x i32]* %87, i64 0, i64 1
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, -1
  %96 = icmp ule i32 %95, 126
  %97 = icmp eq i32 %94, 117
  %98 = and i1 %96, %97
  br i1 %98, label %321, label %236

99:                                               ; preds = %88
  %100 = getelementptr inbounds [1 x i32], [1 x i32]* %87, i64 0, i64 0
  %101 = load i32, i32* %100, align 4
  %102 = add i32 %101, -1
  %103 = icmp ule i32 %102, 126
  %104 = icmp eq i32 %101, 110
  %105 = and i1 %103, %104
  br i1 %105, label %92, label %236

106:                                              ; preds = %221, %226
  %107 = phi i64 [ %222, %221 ], [ %227, %226 ]
  %108 = phi i64 [ %223, %221 ], [ %230, %226 ]
  %109 = phi %class.LocaleIface* [ %224, %221 ], [ %229, %226 ]
  %110 = load i32*, i32** %21, align 8
  %111 = getelementptr inbounds i32, i32* %110, i64 %108
  %112 = load i32, i32* %111, align 4
  switch i32 %112, label %226 [
    i32 123, label %232
    i32 40, label %113
    i32 46, label %138
  ]

113:                                              ; preds = %106
  %114 = add nuw i64 %108, 1
  store i64 %114, i64* %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %25, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %11) #13
  %115 = load i64, i64* %6, align 8
  %116 = load i64, i64* %17, align 8
  %117 = icmp ult i64 %115, %116
  br i1 %117, label %118, label %131

118:                                              ; preds = %113, %124
  %119 = phi i64 [ %128, %124 ], [ %115, %113 ]
  %120 = load i32*, i32** %21, align 8
  %121 = getelementptr inbounds i32, i32* %120, i64 %119
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, 41
  br i1 %123, label %131, label %124

124:                                              ; preds = %118
  %125 = add nuw i64 %119, 1
  store i64 %125, i64* %6, align 8
  %126 = load i32, i32* %121, align 4
  %127 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %11, i32 signext %126) #13
  %128 = load i64, i64* %6, align 8
  %129 = load i64, i64* %17, align 8
  %130 = icmp ult i64 %128, %129
  br i1 %130, label %118, label %131

131:                                              ; preds = %124, %118, %113
  %132 = load %class.LocaleIface* (%class.LocaleMgrIface*, %"class.fxcrt::WideString"*)**, %class.LocaleIface* (%class.LocaleMgrIface*, %"class.fxcrt::WideString"*)*** %26, align 8
  %133 = getelementptr inbounds %class.LocaleIface* (%class.LocaleMgrIface*, %"class.fxcrt::WideString"*)*, %class.LocaleIface* (%class.LocaleMgrIface*, %"class.fxcrt::WideString"*)** %132, i64 3
  %134 = load %class.LocaleIface* (%class.LocaleMgrIface*, %"class.fxcrt::WideString"*)*, %class.LocaleIface* (%class.LocaleMgrIface*, %"class.fxcrt::WideString"*)** %133, align 8
  %135 = call %class.LocaleIface* %134(%class.LocaleMgrIface* %1, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %11) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %136 = load i64, i64* %6, align 8
  %137 = load i64, i64* %17, align 8
  br label %226

138:                                              ; preds = %106
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %28, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %12) #13
  %139 = load i64, i64* %6, align 8
  %140 = add i64 %139, 1
  store i64 %140, i64* %6, align 8
  %141 = load i64, i64* %17, align 8
  %142 = icmp ult i64 %140, %141
  br i1 %142, label %143, label %155

143:                                              ; preds = %138, %148
  %144 = phi i64 [ %152, %148 ], [ %140, %138 ]
  %145 = load i32*, i32** %21, align 8
  %146 = getelementptr inbounds i32, i32* %145, i64 %144
  %147 = load i32, i32* %146, align 4
  switch i32 %147, label %148 [
    i32 40, label %155
    i32 123, label %155
  ]

148:                                              ; preds = %143
  %149 = add nuw i64 %144, 1
  store i64 %149, i64* %6, align 8
  %150 = load i32, i32* %146, align 4
  %151 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %12, i32 signext %150) #13
  %152 = load i64, i64* %6, align 8
  %153 = load i64, i64* %17, align 8
  %154 = icmp ult i64 %152, %153
  br i1 %154, label %143, label %155

155:                                              ; preds = %148, %143, %143, %138
  %156 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %28, align 8, !noalias !23
  %157 = icmp eq %"class.fxcrt::StringDataTemplate"* %156, null
  %158 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %156, i64 0, i32 3
  %159 = select i1 %157, [1 x i32]* @.str.15, [1 x i32]* %158
  %160 = getelementptr inbounds [1 x i32], [1 x i32]* %159, i64 0, i64 0
  br i1 %157, label %164, label %161

161:                                              ; preds = %155
  %162 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %156, i64 0, i32 1
  %163 = load i64, i64* %162, align 8, !noalias !23
  br label %164

164:                                              ; preds = %155, %161
  %165 = phi i64 [ %163, %161 ], [ 0, %155 ]
  store i32* %160, i32** %29, align 8, !alias.scope !23
  store i64 %165, i64* %30, align 8, !alias.scope !23
  %166 = call i32 @_Z16FX_HashCode_GetWN5fxcrt18StringViewTemplateIwEEb(%"class.fxcrt::StringViewTemplate"* nonnull %13, i1 zeroext false) #13
  switch i32 %166, label %174 [
    i32 1190745393, label %170
    i32 1280215755, label %167
    i32 1409502255, label %168
    i32 1969809070, label %169
  ]

167:                                              ; preds = %164
  br label %170

168:                                              ; preds = %164
  br label %170

169:                                              ; preds = %164
  br label %170

170:                                              ; preds = %164, %169, %168, %167
  %171 = phi %"struct.(anonymous namespace)::LocaleNumberSubcategoryWithHash"* [ getelementptr inbounds ([4 x %"struct.(anonymous namespace)::LocaleNumberSubcategoryWithHash"], [4 x %"struct.(anonymous namespace)::LocaleNumberSubcategoryWithHash"]* @_ZN12_GLOBAL__N_125kLocaleNumSubcategoryDataE, i64 0, i64 0), %164 ], [ getelementptr inbounds ([4 x %"struct.(anonymous namespace)::LocaleNumberSubcategoryWithHash"], [4 x %"struct.(anonymous namespace)::LocaleNumberSubcategoryWithHash"]* @_ZN12_GLOBAL__N_125kLocaleNumSubcategoryDataE, i64 0, i64 1), %167 ], [ getelementptr inbounds ([4 x %"struct.(anonymous namespace)::LocaleNumberSubcategoryWithHash"], [4 x %"struct.(anonymous namespace)::LocaleNumberSubcategoryWithHash"]* @_ZN12_GLOBAL__N_125kLocaleNumSubcategoryDataE, i64 0, i64 2), %168 ], [ getelementptr inbounds ([4 x %"struct.(anonymous namespace)::LocaleNumberSubcategoryWithHash"], [4 x %"struct.(anonymous namespace)::LocaleNumberSubcategoryWithHash"]* @_ZN12_GLOBAL__N_125kLocaleNumSubcategoryDataE, i64 0, i64 3), %169 ]
  %172 = getelementptr inbounds %"struct.(anonymous namespace)::LocaleNumberSubcategoryWithHash", %"struct.(anonymous namespace)::LocaleNumberSubcategoryWithHash"* %171, i64 0, i32 1
  %173 = load i32, i32* %172, align 4
  br label %174

174:                                              ; preds = %164, %170
  %175 = phi i32 [ %173, %170 ], [ 2, %164 ]
  %176 = icmp eq %class.LocaleIface* %109, null
  br i1 %176, label %177, label %182

177:                                              ; preds = %174
  %178 = load %class.LocaleIface* (%class.LocaleMgrIface*)**, %class.LocaleIface* (%class.LocaleMgrIface*)*** %31, align 8
  %179 = getelementptr inbounds %class.LocaleIface* (%class.LocaleMgrIface*)*, %class.LocaleIface* (%class.LocaleMgrIface*)** %178, i64 2
  %180 = load %class.LocaleIface* (%class.LocaleMgrIface*)*, %class.LocaleIface* (%class.LocaleMgrIface*)** %179, align 8
  %181 = call %class.LocaleIface* %180(%class.LocaleMgrIface* %1) #13
  br label %182

182:                                              ; preds = %174, %177
  %183 = phi %class.LocaleIface* [ %109, %174 ], [ %181, %177 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  %184 = bitcast %class.LocaleIface* %183 to void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)***
  %185 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)*** %184, align 8
  %186 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)** %185, i64 16
  %187 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)** %186, align 8
  call void %187(%"class.fxcrt::WideString"* nonnull sret %14, %class.LocaleIface* %183, i32 %175) #13
  %188 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* nonnull %12, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %14) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  %189 = call { i8, i64 } @_ZNK5fxcrt10WideString4FindEwm(%"class.fxcrt::WideString"* nonnull %12, i32 signext 46, i64 0) #13
  %190 = extractvalue { i8, i64 } %189, 0
  %191 = extractvalue { i8, i64 } %189, 1
  switch i8 %190, label %192 [
    i8 0, label %210
    i8 1, label %193
  ], !prof !26

192:                                              ; preds = %182
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !27
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !28
  unreachable

193:                                              ; preds = %182
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %210, label %195

195:                                              ; preds = %193
  %196 = and i8 %225, 1
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %198, label %207

198:                                              ; preds = %195
  %199 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %33, align 8
  %200 = icmp eq %"class.fxcrt::StringDataTemplate"* %199, null
  br i1 %200, label %204, label %201

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %199, i64 0, i32 1
  %203 = load i64, i64* %202, align 8
  br label %204

204:                                              ; preds = %201, %198
  %205 = phi i64 [ %203, %201 ], [ 0, %198 ]
  %206 = add i64 %205, %191
  store i64 %206, i64* %2, align 8
  br label %207

207:                                              ; preds = %195, %204
  %208 = load i32, i32* %3, align 4
  %209 = or i32 %208, 4
  store i32 %209, i32* %3, align 4
  br label %210

210:                                              ; preds = %182, %193, %207
  %211 = phi i8 [ 1, %207 ], [ %225, %193 ], [ %225, %182 ]
  %212 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %4, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %12) #13
  %213 = icmp eq i32 %175, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %210
  %215 = load i32, i32* %3, align 4
  %216 = or i32 %215, 1
  store i32 %216, i32* %3, align 4
  br label %217

217:                                              ; preds = %214, %210
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  %218 = load i64, i64* %6, align 8
  %219 = load i64, i64* %17, align 8
  %220 = icmp ult i64 %218, %219
  br i1 %220, label %221, label %232

221:                                              ; preds = %328, %217
  %222 = phi i64 [ %219, %217 ], [ %82, %328 ]
  %223 = phi i64 [ %218, %217 ], [ %83, %328 ]
  %224 = phi %class.LocaleIface* [ %183, %217 ], [ %40, %328 ]
  %225 = phi i8 [ %211, %217 ], [ %41, %328 ]
  br label %106

226:                                              ; preds = %106, %131
  %227 = phi i64 [ %137, %131 ], [ %107, %106 ]
  %228 = phi i64 [ %136, %131 ], [ %108, %106 ]
  %229 = phi %class.LocaleIface* [ %135, %131 ], [ %109, %106 ]
  %230 = add i64 %228, 1
  store i64 %230, i64* %6, align 8
  %231 = icmp ult i64 %230, %227
  br i1 %231, label %106, label %232

232:                                              ; preds = %217, %226, %106, %328
  %233 = phi i8 [ %41, %328 ], [ %225, %106 ], [ %225, %226 ], [ %211, %217 ]
  %234 = phi %class.LocaleIface* [ %40, %328 ], [ %229, %226 ], [ %109, %106 ], [ %183, %217 ]
  %235 = phi i8 [ %45, %328 ], [ %45, %226 ], [ 1, %106 ], [ %45, %217 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  br label %265

236:                                              ; preds = %321, %92, %99, %81, %88
  store i64 0, i64* %6, align 8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  %237 = load i64, i64* %6, align 8
  %238 = load i64, i64* %17, align 8
  %239 = icmp ult i64 %237, %238
  br i1 %239, label %43, label %295

240:                                              ; preds = %59
  switch i32 %48, label %263 [
    i32 69, label %241
    i32 37, label %252
    i32 125, label %265
  ]

241:                                              ; preds = %240
  %242 = load i32, i32* %3, align 4
  %243 = or i32 %242, 2
  store i32 %243, i32* %3, align 4
  %244 = load i64, i64* %17, align 8
  %245 = icmp ugt i64 %244, %44
  br i1 %245, label %247, label %246, !prof !17

246:                                              ; preds = %241
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

247:                                              ; preds = %241
  %248 = load i32*, i32** %21, align 8
  %249 = getelementptr inbounds i32, i32* %248, i64 %44
  %250 = load i32, i32* %249, align 4
  %251 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %4, i32 signext %250) #13
  br label %265

252:                                              ; preds = %240
  %253 = load i32, i32* %3, align 4
  %254 = or i32 %253, 1
  store i32 %254, i32* %3, align 4
  %255 = load i64, i64* %17, align 8
  %256 = icmp ugt i64 %255, %44
  br i1 %256, label %258, label %257, !prof !17

257:                                              ; preds = %252
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

258:                                              ; preds = %252
  %259 = load i32*, i32** %21, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 %44
  %261 = load i32, i32* %260, align 4
  %262 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %4, i32 signext %261) #13
  br label %265

263:                                              ; preds = %62, %62, %62, %62, %62, %62, %62, %240
  %264 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %4, i32 signext %48) #13
  br label %265

265:                                              ; preds = %240, %232, %258, %263, %247, %50
  %266 = phi i8 [ %45, %50 ], [ %45, %247 ], [ %45, %258 ], [ %45, %263 ], [ %235, %232 ], [ %45, %240 ]
  %267 = phi i8 [ %41, %50 ], [ %41, %247 ], [ %41, %258 ], [ %41, %263 ], [ %233, %232 ], [ %41, %240 ]
  %268 = phi %class.LocaleIface* [ %40, %50 ], [ %40, %247 ], [ %40, %258 ], [ %40, %263 ], [ %234, %232 ], [ %40, %240 ]
  %269 = and i8 %267, 1
  %270 = icmp eq i8 %269, 0
  %271 = load i64, i64* %6, align 8
  br i1 %270, label %272, label %290

272:                                              ; preds = %265
  %273 = load i64, i64* %17, align 8
  %274 = icmp ult i64 %271, %273
  br i1 %274, label %275, label %290

275:                                              ; preds = %272
  %276 = load i32*, i32** %21, align 8
  %277 = getelementptr inbounds i32, i32* %276, i64 %271
  %278 = load i32, i32* %277, align 4
  switch i32 %278, label %290 [
    i32 46, label %279
    i32 86, label %279
    i32 118, label %279
  ]

279:                                              ; preds = %275, %275, %275
  %280 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %33, align 8
  %281 = icmp eq %"class.fxcrt::StringDataTemplate"* %280, null
  br i1 %281, label %285, label %282

282:                                              ; preds = %279
  %283 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %280, i64 0, i32 1
  %284 = load i64, i64* %283, align 8
  br label %285

285:                                              ; preds = %279, %282
  %286 = phi i64 [ %284, %282 ], [ 0, %279 ]
  %287 = add i64 %286, -1
  store i64 %287, i64* %2, align 8
  %288 = load i32, i32* %3, align 4
  %289 = or i32 %288, 4
  store i32 %289, i32* %3, align 4
  br label %290

290:                                              ; preds = %265, %275, %285, %272
  %291 = phi i8 [ 1, %285 ], [ %267, %272 ], [ %267, %275 ], [ %267, %265 ]
  %292 = add i64 %271, 1
  store i64 %292, i64* %6, align 8
  %293 = load i64, i64* %17, align 8
  %294 = icmp ult i64 %292, %293
  br i1 %294, label %38, label %295

295:                                              ; preds = %290, %236
  %296 = phi i8 [ %41, %236 ], [ %291, %290 ]
  %297 = phi %class.LocaleIface* [ %40, %236 ], [ %268, %290 ]
  %298 = and i8 %296, 1
  %299 = icmp eq i8 %298, 0
  br i1 %299, label %300, label %310

300:                                              ; preds = %5, %295
  %301 = phi %class.LocaleIface* [ %297, %295 ], [ null, %5 ]
  %302 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %302, align 8
  %304 = icmp eq %"class.fxcrt::StringDataTemplate"* %303, null
  br i1 %304, label %308, label %305

305:                                              ; preds = %300
  %306 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %303, i64 0, i32 1
  %307 = load i64, i64* %306, align 8
  br label %308

308:                                              ; preds = %300, %305
  %309 = phi i64 [ %307, %305 ], [ 0, %300 ]
  store i64 %309, i64* %2, align 8
  br label %310

310:                                              ; preds = %295, %308
  %311 = phi %class.LocaleIface* [ %297, %295 ], [ %301, %308 ]
  %312 = icmp eq %class.LocaleIface* %311, null
  br i1 %312, label %313, label %319

313:                                              ; preds = %310
  %314 = bitcast %class.LocaleMgrIface* %1 to %class.LocaleIface* (%class.LocaleMgrIface*)***
  %315 = load %class.LocaleIface* (%class.LocaleMgrIface*)**, %class.LocaleIface* (%class.LocaleMgrIface*)*** %314, align 8
  %316 = getelementptr inbounds %class.LocaleIface* (%class.LocaleMgrIface*)*, %class.LocaleIface* (%class.LocaleMgrIface*)** %315, i64 2
  %317 = load %class.LocaleIface* (%class.LocaleMgrIface*)*, %class.LocaleIface* (%class.LocaleMgrIface*)** %316, align 8
  %318 = call %class.LocaleIface* %317(%class.LocaleMgrIface* %1) #13
  br label %319

319:                                              ; preds = %310, %313
  %320 = phi %class.LocaleIface* [ %311, %310 ], [ %318, %313 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  ret %class.LocaleIface* %320

321:                                              ; preds = %92
  %322 = getelementptr inbounds [1 x i32], [1 x i32]* %87, i64 0, i64 2
  %323 = load i32, i32* %322, align 4
  %324 = add i32 %323, -1
  %325 = icmp ule i32 %324, 126
  %326 = icmp eq i32 %323, 109
  %327 = and i1 %325, %326
  br i1 %327, label %328, label %236

328:                                              ; preds = %321
  %329 = icmp ult i64 %83, %82
  br i1 %329, label %221, label %232
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #3

declare { i8, i64 } @_ZNK5fxcrt10WideString4FindEwm(%"class.fxcrt::WideString"*, i32 signext, i64) local_unnamed_addr #2

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK21CFGAS_StringFormatter9ParseTextERKN5fxcrt10WideStringEPS1_(%class.CFGAS_StringFormatter*, %"class.fxcrt::WideString"* dereferenceable(8), %"class.fxcrt::WideString"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.fxcrt::WideString", align 8
  %8 = alloca %"class.pdfium::span", align 8
  %9 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %9, align 8
  store %"class.fxcrt::StringDataTemplate"* null, %"class.fxcrt::StringDataTemplate"** %9, align 8
  %11 = icmp eq %"class.fxcrt::StringDataTemplate"* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %3
  tail call void @_ZN5fxcrt18StringDataTemplateIwE7ReleaseEv(%"class.fxcrt::StringDataTemplate"* nonnull %10) #13
  br label %13

13:                                               ; preds = %3, %12
  %14 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %14, align 8
  %16 = icmp eq %"class.fxcrt::StringDataTemplate"* %15, null
  br i1 %16, label %177, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %15, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %177, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 1, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %177, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %27, align 8
  %28 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.1, i64 0, i64 0), i32** %28, align 8
  %29 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 1
  store i64 4, i64* %29, align 8
  call void @_ZNK21CFGAS_StringFormatter13GetTextFormatEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::WideString"* nonnull sret %4, %class.CFGAS_StringFormatter* %0, %"class.fxcrt::StringViewTemplate"* nonnull %5)
  %30 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %27, align 8
  %31 = icmp eq %"class.fxcrt::StringDataTemplate"* %30, null
  br i1 %31, label %175, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %30, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %175, label %36

36:                                               ; preds = %32
  %37 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %14, align 8, !noalias !29
  %38 = icmp eq %"class.fxcrt::StringDataTemplate"* %37, null
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #13
  store i64 0, i64* %6, align 8
  br label %164

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %37, i64 0, i32 1
  %43 = load i64, i64* %42, align 8, !noalias !29
  %44 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %30, i64 0, i32 3, i64 0
  %45 = ptrtoint i32* %44 to i64
  %46 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  store i64 0, i64* %6, align 8
  %47 = icmp eq i64 %43, 0
  br i1 %47, label %164, label %48

48:                                               ; preds = %41
  %49 = bitcast %"class.fxcrt::WideString"* %7 to i8*
  %50 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.pdfium::span"* %8 to i64*
  %52 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %8, i64 0, i32 1
  br label %53

53:                                               ; preds = %48, %158
  %54 = phi i64 [ 0, %48 ], [ %159, %158 ]
  %55 = phi i64 [ 0, %48 ], [ %160, %158 ]
  %56 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %30, i64 0, i32 3, i64 %54
  %57 = load i32, i32* %56, align 4
  switch i32 %57, label %146 [
    i32 39, label %58
    i32 65, label %82
    i32 88, label %97
    i32 79, label %106
    i32 48, label %106
    i32 57, label %129
  ]

58:                                               ; preds = %53
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %50, align 8
  store i64 %45, i64* %51, align 8
  store i64 %34, i64* %52, align 8
  call fastcc void @_ZN12_GLOBAL__N_114GetLiteralTextEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %7, %"class.pdfium::span"* nonnull %8, i64* nonnull %6)
  %59 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %50, align 8
  %60 = icmp eq %"class.fxcrt::StringDataTemplate"* %59, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %59, i64 0, i32 1
  %63 = load i64, i64* %62, align 8
  br label %64

64:                                               ; preds = %58, %61
  %65 = phi i64 [ %63, %61 ], [ 0, %58 ]
  %66 = shl i64 %65, 32
  %67 = ashr exact i64 %66, 32
  %68 = add i64 %67, %55
  %69 = icmp ugt i64 %68, %43
  br i1 %69, label %80, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %37, i64 0, i32 3, i64 %55
  %72 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %59, i64 0, i32 3
  %73 = select i1 %60, [1 x i32]* @.str.15, [1 x i32]* %72
  %74 = getelementptr inbounds [1 x i32], [1 x i32]* %73, i64 0, i64 0
  %75 = call i32 @wcsncmp(i32* %71, i32* %74, i64 %67) #15
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %70
  %78 = load i64, i64* %6, align 8
  %79 = add i64 %78, 1
  store i64 %79, i64* %6, align 8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #13
  br label %158

80:                                               ; preds = %64, %70
  %81 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"* %2, %"class.fxcrt::WideString"* dereferenceable(8) %1) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #13
  br label %172

82:                                               ; preds = %53
  %83 = icmp ugt i64 %43, %55
  br i1 %83, label %85, label %84, !prof !17

84:                                               ; preds = %82
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %37, i64 0, i32 3, i64 %55
  %87 = load i32, i32* %86, align 4
  %88 = call signext i8 @u_isalpha_69(i32 %87) #13
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %85
  %91 = load i32, i32* %86, align 4
  %92 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext %91) #13
  %93 = add nuw i64 %55, 1
  br label %94

94:                                               ; preds = %85, %90
  %95 = phi i64 [ %93, %90 ], [ %55, %85 ]
  %96 = add nuw i64 %54, 1
  store i64 %96, i64* %6, align 8
  br label %158

97:                                               ; preds = %53
  %98 = icmp ugt i64 %43, %55
  br i1 %98, label %100, label %99, !prof !17

99:                                               ; preds = %97
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %37, i64 0, i32 3, i64 %55
  %102 = load i32, i32* %101, align 4
  %103 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext %102) #13
  %104 = add nuw i64 %55, 1
  %105 = add nuw i64 %54, 1
  store i64 %105, i64* %6, align 8
  br label %158

106:                                              ; preds = %53, %53
  %107 = icmp ugt i64 %43, %55
  br i1 %107, label %109, label %108, !prof !17

108:                                              ; preds = %106
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %37, i64 0, i32 3, i64 %55
  %111 = load i32, i32* %110, align 4
  %112 = icmp ugt i32 %111, 127
  br i1 %112, label %118, label %113

113:                                              ; preds = %109
  %114 = call i32 @iswdigit(i32 %111) #13
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %122

116:                                              ; preds = %113
  %117 = load i32, i32* %110, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %111, %109 ]
  %120 = call signext i8 @u_isalpha_69(i32 %119) #13
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %126, label %122

122:                                              ; preds = %118, %113
  %123 = load i32, i32* %110, align 4
  %124 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext %123) #13
  %125 = add nuw i64 %55, 1
  br label %126

126:                                              ; preds = %118, %122
  %127 = phi i64 [ %125, %122 ], [ %55, %118 ]
  %128 = add nuw i64 %54, 1
  store i64 %128, i64* %6, align 8
  br label %158

129:                                              ; preds = %53
  %130 = icmp ugt i64 %43, %55
  br i1 %130, label %132, label %131, !prof !17

131:                                              ; preds = %129
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

132:                                              ; preds = %129
  %133 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %37, i64 0, i32 3, i64 %55
  %134 = load i32, i32* %133, align 4
  %135 = icmp ugt i32 %134, 127
  br i1 %135, label %143, label %136

136:                                              ; preds = %132
  %137 = call i32 @iswdigit(i32 %134) #13
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %143, label %139

139:                                              ; preds = %136
  %140 = load i32, i32* %133, align 4
  %141 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext %140) #13
  %142 = add nuw i64 %55, 1
  br label %143

143:                                              ; preds = %136, %132, %139
  %144 = phi i64 [ %142, %139 ], [ %55, %136 ], [ %55, %132 ]
  %145 = add nuw i64 %54, 1
  store i64 %145, i64* %6, align 8
  br label %158

146:                                              ; preds = %53
  %147 = icmp ugt i64 %43, %55
  br i1 %147, label %149, label %148, !prof !17

148:                                              ; preds = %146
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %37, i64 0, i32 3, i64 %55
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %57, %151
  br i1 %152, label %155, label %153

153:                                              ; preds = %149
  %154 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"* %2, %"class.fxcrt::WideString"* dereferenceable(8) %1) #13
  br label %172

155:                                              ; preds = %149
  %156 = add nuw i64 %54, 1
  store i64 %156, i64* %6, align 8
  %157 = add nuw i64 %55, 1
  br label %158

158:                                              ; preds = %77, %155, %143, %126, %100, %94
  %159 = phi i64 [ %156, %155 ], [ %145, %143 ], [ %128, %126 ], [ %105, %100 ], [ %96, %94 ], [ %79, %77 ]
  %160 = phi i64 [ %157, %155 ], [ %144, %143 ], [ %127, %126 ], [ %104, %100 ], [ %95, %94 ], [ %68, %77 ]
  %161 = icmp ult i64 %159, %34
  %162 = icmp ult i64 %160, %43
  %163 = and i1 %162, %161
  br i1 %163, label %53, label %164

164:                                              ; preds = %158, %39, %41
  %165 = phi i8* [ %46, %41 ], [ %40, %39 ], [ %46, %158 ]
  %166 = phi i64 [ 0, %41 ], [ 0, %39 ], [ %43, %158 ]
  %167 = phi i64 [ 0, %41 ], [ 0, %39 ], [ %160, %158 ]
  %168 = phi i64 [ 0, %41 ], [ 0, %39 ], [ %159, %158 ]
  %169 = icmp eq i64 %168, %34
  %170 = icmp eq i64 %167, %166
  %171 = and i1 %170, %169
  br label %172

172:                                              ; preds = %164, %80, %153
  %173 = phi i8* [ %46, %153 ], [ %46, %80 ], [ %165, %164 ]
  %174 = phi i1 [ false, %153 ], [ false, %80 ], [ %171, %164 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #13
  br label %175

175:                                              ; preds = %25, %32, %172
  %176 = phi i1 [ %174, %172 ], [ false, %32 ], [ false, %25 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  br label %177

177:                                              ; preds = %13, %17, %21, %175
  %178 = phi i1 [ %176, %175 ], [ false, %21 ], [ false, %17 ], [ false, %13 ]
  ret i1 %178
}

; Function Attrs: nounwind readonly
declare i32 @wcsncmp(i32*, i32*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK21CFGAS_StringFormatter8ParseNumEP14LocaleMgrIfaceRKN5fxcrt10WideStringEPS3_(%class.CFGAS_StringFormatter*, %class.LocaleMgrIface*, %"class.fxcrt::WideString"* dereferenceable(8), %"class.fxcrt::WideString"*) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca %"class.fxcrt::WideString", align 8
  %7 = alloca %"class.pdfium::span", align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.fxcrt::WideString", align 8
  %11 = alloca %"class.fxcrt::WideString", align 8
  %12 = alloca %"class.fxcrt::WideString", align 8
  %13 = alloca %"class.fxcrt::WideString", align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.fxcrt::WideString", align 8
  %16 = alloca %"class.pdfium::span", align 8
  %17 = alloca %"class.fxcrt::WideString", align 8
  %18 = alloca %"class.fxcrt::WideString", align 8
  %19 = alloca %"class.fxcrt::WideString", align 8
  %20 = alloca %"class.pdfium::span", align 8
  %21 = alloca %"class.fxcrt::WideString", align 8
  %22 = alloca %"class.fxcrt::WideString", align 8
  %23 = alloca %class.CFGAS_Decimal, align 8
  %24 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %25 = alloca %class.CFGAS_Decimal, align 4
  %26 = alloca %class.CFGAS_Decimal, align 4
  %27 = alloca %"class.fxcrt::WideString", align 8
  %28 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %28, align 8
  store %"class.fxcrt::StringDataTemplate"* null, %"class.fxcrt::StringDataTemplate"** %28, align 8
  %30 = icmp eq %"class.fxcrt::StringDataTemplate"* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %4
  tail call void @_ZN5fxcrt18StringDataTemplateIwE7ReleaseEv(%"class.fxcrt::StringDataTemplate"* nonnull %29) #13
  br label %32

32:                                               ; preds = %4, %31
  %33 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %33, align 8
  %35 = icmp eq %"class.fxcrt::StringDataTemplate"* %34, null
  br i1 %35, label %954, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %34, i64 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %954, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 1, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %954, label %44

44:                                               ; preds = %40
  %45 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #13
  store i64 %42, i64* %8, align 8
  %46 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #13
  store i32 0, i32* %9, align 4
  %47 = bitcast %"class.fxcrt::WideString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  %48 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %48, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %10) #13
  %49 = call %class.LocaleIface* @_ZNK21CFGAS_StringFormatter16GetNumericFormatEP14LocaleMgrIfacePmPjPN5fxcrt10WideStringE(%class.CFGAS_StringFormatter* %0, %class.LocaleMgrIface* %1, i64* nonnull %8, i32* nonnull %9, %"class.fxcrt::WideString"* nonnull %10)
  %50 = icmp eq %class.LocaleIface* %49, null
  br i1 %50, label %952, label %51

51:                                               ; preds = %44
  %52 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %48, align 8
  %53 = icmp eq %"class.fxcrt::StringDataTemplate"* %52, null
  br i1 %53, label %952, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %52, i64 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %952, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.fxcrt::WideString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #13
  %60 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %60, align 8
  %61 = bitcast %class.LocaleIface* %49 to void (%"class.fxcrt::WideString"*, %class.LocaleIface*)***
  %62 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %62, i64 3
  %64 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %63, align 8
  call void %64(%"class.fxcrt::WideString"* nonnull sret %11, %class.LocaleIface* nonnull %49) #13
  %65 = bitcast %"class.fxcrt::WideString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #13
  %66 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %66, align 8
  %67 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %61, align 8
  %68 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %67, i64 4
  %69 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %68, align 8
  call void %69(%"class.fxcrt::WideString"* nonnull sret %12, %class.LocaleIface* nonnull %49) #13
  %70 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %66, align 8
  %71 = icmp eq %"class.fxcrt::StringDataTemplate"* %70, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %70, i64 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = shl i64 %74, 32
  br label %76

76:                                               ; preds = %58, %72
  %77 = phi i64 [ %75, %72 ], [ 0, %58 ]
  %78 = bitcast %"class.fxcrt::WideString"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #13
  %79 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %79, align 8
  %80 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %61, align 8
  %81 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %80, i64 6
  %82 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %81, align 8
  call void %82(%"class.fxcrt::WideString"* nonnull sret %13, %class.LocaleIface* nonnull %49) #13
  %83 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %79, align 8
  %84 = icmp eq %"class.fxcrt::StringDataTemplate"* %83, null
  br i1 %84, label %89, label %85

85:                                               ; preds = %76
  %86 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %83, i64 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = shl i64 %87, 32
  br label %89

89:                                               ; preds = %76, %85
  %90 = phi i64 [ %88, %85 ], [ 0, %76 ]
  %91 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %33, align 8, !noalias !32
  %92 = icmp eq %"class.fxcrt::StringDataTemplate"* %91, null
  %93 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %91, i64 0, i32 3, i64 0
  br i1 %92, label %97, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %91, i64 0, i32 1
  %96 = load i64, i64* %95, align 8, !noalias !32
  br label %97

97:                                               ; preds = %89, %94
  %98 = phi i64 [ %96, %94 ], [ 0, %89 ]
  %99 = ptrtoint i32* %93 to i64
  %100 = select i1 %92, i64 0, i64 %99
  %101 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %48, align 8, !noalias !35
  %102 = icmp eq %"class.fxcrt::StringDataTemplate"* %101, null
  %103 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %101, i64 0, i32 3, i64 0
  br i1 %102, label %107, label %104

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %101, i64 0, i32 1
  %106 = load i64, i64* %105, align 8, !noalias !35
  br label %107

107:                                              ; preds = %97, %104
  %108 = phi i64 [ %106, %104 ], [ 0, %97 ]
  %109 = ptrtoint i32* %103 to i64
  %110 = select i1 %102, i64 0, i64 %109
  %111 = bitcast %"class.fxcrt::WideString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111)
  %112 = bitcast %"class.pdfium::span"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %112)
  br i1 %92, label %116, label %113

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %91, i64 0, i32 1
  %115 = load i64, i64* %114, align 8, !noalias !38
  br label %116

116:                                              ; preds = %113, %107
  %117 = phi i64 [ %115, %113 ], [ 0, %107 ]
  %118 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %60, align 8, !noalias !41
  %119 = icmp eq %"class.fxcrt::StringDataTemplate"* %118, null
  %120 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %118, i64 0, i32 3, i64 0
  br i1 %119, label %124, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %118, i64 0, i32 1
  %123 = load i64, i64* %122, align 8, !noalias !41
  br label %124

124:                                              ; preds = %121, %116
  %125 = phi i64 [ %123, %121 ], [ 0, %116 ]
  %126 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #13
  store i64 0, i64* %5, align 8
  %127 = icmp eq i64 %117, 0
  br i1 %127, label %151, label %128

128:                                              ; preds = %124
  %129 = inttoptr i64 %100 to i32*
  %130 = select i1 %119, i32* null, i32* %120
  %131 = bitcast %"class.pdfium::span"* %7 to i64*
  %132 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %7, i64 0, i32 1
  br label %133

133:                                              ; preds = %147, %128
  %134 = phi i64 [ 0, %128 ], [ %149, %147 ]
  %135 = getelementptr inbounds i32, i32* %129, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 39
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  store i64 %100, i64* %131, align 8
  store i64 %117, i64* %132, align 8
  call fastcc void @_ZN12_GLOBAL__N_114GetLiteralTextEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %6, %"class.pdfium::span"* nonnull %7, i64* nonnull %5) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #13
  %139 = load i64, i64* %5, align 8
  br label %147

140:                                              ; preds = %133
  %141 = add i64 %134, %125
  %142 = icmp ugt i64 %141, %117
  br i1 %142, label %147, label %143

143:                                              ; preds = %140
  %144 = call i32 @wcsncmp(i32* %135, i32* %130, i64 %125) #15
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112)
  br label %160

147:                                              ; preds = %143, %140, %138
  %148 = phi i64 [ %134, %140 ], [ %134, %143 ], [ %139, %138 ]
  %149 = add i64 %148, 1
  store i64 %149, i64* %5, align 8
  %150 = icmp ult i64 %149, %117
  br i1 %150, label %133, label %151

151:                                              ; preds = %147, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #13
  %152 = call { i8, i64 } @_ZNK5fxcrt10WideString4FindEwm(%"class.fxcrt::WideString"* %2, i32 signext 46, i64 0) #13
  %153 = extractvalue { i8, i64 } %152, 0
  %154 = extractvalue { i8, i64 } %152, 1
  %155 = icmp eq i8 %153, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112)
  br i1 %155, label %156, label %160

156:                                              ; preds = %151
  %157 = load i32, i32* %9, align 4
  %158 = and i32 %157, 4
  %159 = icmp ne i32 %158, 0
  br label %160

160:                                              ; preds = %151, %146, %156
  %161 = phi i64 [ %154, %151 ], [ %117, %156 ], [ %134, %146 ]
  %162 = phi i1 [ false, %151 ], [ %159, %156 ], [ false, %146 ]
  %163 = add i64 %161, -1
  %164 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #13
  %165 = load i64, i64* %8, align 8
  %166 = add i64 %165, -1
  store i64 %166, i64* %14, align 8
  %167 = icmp ult i64 %166, %108
  %168 = icmp ult i64 %163, %98
  %169 = and i1 %168, %167
  br i1 %169, label %170, label %523

170:                                              ; preds = %160
  %171 = inttoptr i64 %110 to i32*
  %172 = inttoptr i64 %100 to i32*
  %173 = add i64 %77, -4294967296
  %174 = ashr exact i64 %173, 32
  %175 = ashr exact i64 %77, 32
  %176 = bitcast %"class.fxcrt::WideString"* %18 to i8*
  %177 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = bitcast %"class.fxcrt::WideString"* %17 to i8*
  %179 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = ashr exact i64 %90, 32
  %181 = add i64 %90, -4294967296
  %182 = ashr exact i64 %181, 32
  %183 = bitcast %"class.fxcrt::WideString"* %15 to i8*
  %184 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = bitcast %"class.pdfium::span"* %16 to i64*
  %186 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %16, i64 0, i32 1
  br label %187

187:                                              ; preds = %170, %514
  %188 = phi i64 [ %166, %170 ], [ %519, %514 ]
  %189 = phi i32 [ 0, %170 ], [ %518, %514 ]
  %190 = phi i64 [ %163, %170 ], [ %517, %514 ]
  %191 = phi i8 [ 0, %170 ], [ %516, %514 ]
  %192 = phi i8 [ 0, %170 ], [ %515, %514 ]
  %193 = getelementptr inbounds i32, i32* %171, i64 %188
  %194 = load i32, i32* %193, align 4
  switch i32 %194, label %507 [
    i32 39, label %198
    i32 57, label %224
    i32 41, label %497
    i32 40, label %497
    i32 83, label %258
    i32 115, label %258
    i32 69, label %330
    i32 36, label %344
    i32 114, label %373
    i32 82, label %373
    i32 98, label %412
    i32 66, label %412
    i32 37, label %451
    i32 46, label %950
    i32 86, label %950
    i32 118, label %950
    i32 56, label %950
    i32 44, label %480
    i32 122, label %195
    i32 90, label %237
  ]

195:                                              ; preds = %187
  %196 = getelementptr inbounds i32, i32* %172, i64 %190
  %197 = load i32, i32* %196, align 4
  br label %241

198:                                              ; preds = %187
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %184, align 8
  store i64 %110, i64* %185, align 8
  store i64 %108, i64* %186, align 8
  call fastcc void @_ZN12_GLOBAL__N_121GetLiteralTextReverseEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %15, %"class.pdfium::span"* nonnull %16, i64* nonnull %14)
  %199 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %184, align 8
  %200 = icmp eq %"class.fxcrt::StringDataTemplate"* %199, null
  br i1 %200, label %204, label %201

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %199, i64 0, i32 1
  %203 = load i64, i64* %202, align 8
  br label %204

204:                                              ; preds = %198, %201
  %205 = phi i64 [ %203, %201 ], [ 0, %198 ]
  %206 = shl i64 %205, 32
  %207 = add i64 %206, -4294967296
  %208 = ashr exact i64 %207, 32
  %209 = sub i64 %190, %208
  %210 = icmp ult i64 %209, %98
  br i1 %210, label %211, label %219

211:                                              ; preds = %204
  %212 = getelementptr inbounds i32, i32* %172, i64 %209
  %213 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %199, i64 0, i32 3
  %214 = select i1 %200, [1 x i32]* @.str.15, [1 x i32]* %213
  %215 = getelementptr inbounds [1 x i32], [1 x i32]* %214, i64 0, i64 0
  %216 = ashr exact i64 %206, 32
  %217 = call i32 @wcsncmp(i32* %212, i32* %215, i64 %216) #15
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %220, label %219

219:                                              ; preds = %211, %204
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #13
  br label %950

220:                                              ; preds = %211
  %221 = add i64 %209, -1
  %222 = load i64, i64* %14, align 8
  %223 = add i64 %222, -1
  store i64 %223, i64* %14, align 8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #13
  br label %514

224:                                              ; preds = %187
  %225 = getelementptr inbounds i32, i32* %172, i64 %190
  %226 = load i32, i32* %225, align 4
  %227 = icmp ugt i32 %226, 127
  br i1 %227, label %950, label %228

228:                                              ; preds = %224
  %229 = call i32 @iswdigit(i32 %226) #13
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %950, label %231

231:                                              ; preds = %228
  %232 = load i32, i32* %225, align 4
  %233 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* %3, i64 0, i32 signext %232) #13
  %234 = add i64 %190, -1
  %235 = load i64, i64* %14, align 8
  %236 = add i64 %235, -1
  store i64 %236, i64* %14, align 8
  br label %514

237:                                              ; preds = %187
  %238 = getelementptr inbounds i32, i32* %172, i64 %190
  %239 = load i32, i32* %238, align 4
  %240 = icmp eq i32 %239, 32
  br i1 %240, label %252, label %241

241:                                              ; preds = %195, %237
  %242 = phi i32 [ %197, %195 ], [ %239, %237 ]
  %243 = getelementptr inbounds i32, i32* %172, i64 %190
  %244 = icmp ugt i32 %242, 127
  br i1 %244, label %254, label %245

245:                                              ; preds = %241
  %246 = call i32 @iswdigit(i32 %242) #13
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %254, label %248

248:                                              ; preds = %245
  %249 = load i32, i32* %243, align 4
  %250 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* %3, i64 0, i32 signext %249) #13
  %251 = add i64 %190, -1
  br label %254

252:                                              ; preds = %237
  %253 = add i64 %190, -1
  br label %254

254:                                              ; preds = %245, %241, %248, %252
  %255 = phi i64 [ %251, %248 ], [ %190, %245 ], [ %253, %252 ], [ %190, %241 ]
  %256 = load i64, i64* %14, align 8
  %257 = add i64 %256, -1
  store i64 %257, i64* %14, align 8
  br label %514

258:                                              ; preds = %187, %187
  %259 = getelementptr inbounds i32, i32* %172, i64 %190
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 43
  br i1 %261, label %278, label %262

262:                                              ; preds = %258
  %263 = icmp eq i32 %194, 83
  %264 = icmp eq i32 %260, 32
  %265 = and i1 %263, %264
  br i1 %265, label %278, label %266

266:                                              ; preds = %262
  %267 = sub i64 %190, %182
  %268 = icmp ult i64 %267, %98
  br i1 %268, label %269, label %950

269:                                              ; preds = %266
  %270 = getelementptr inbounds i32, i32* %172, i64 %267
  %271 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %79, align 8
  %272 = icmp eq %"class.fxcrt::StringDataTemplate"* %271, null
  %273 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %271, i64 0, i32 3
  %274 = select i1 %272, [1 x i32]* @.str.15, [1 x i32]* %273
  %275 = getelementptr inbounds [1 x i32], [1 x i32]* %274, i64 0, i64 0
  %276 = call i32 @wcsncmp(i32* %270, i32* %275, i64 %180) #15
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %950

278:                                              ; preds = %262, %269, %258
  %279 = phi i8 [ %191, %258 ], [ 1, %269 ], [ %191, %262 ]
  %280 = phi i64 [ %190, %258 ], [ %267, %269 ], [ %190, %262 ]
  %281 = add i64 %280, -1
  %282 = add i64 %188, -1
  store i64 %282, i64* %14, align 8
  br label %514

283:                                              ; preds = %308, %314
  %284 = phi i64 [ %310, %308 ], [ %315, %314 ]
  %285 = getelementptr inbounds i32, i32* %172, i64 %284
  %286 = load i32, i32* %285, align 4
  switch i32 %286, label %287 [
    i32 69, label %335
    i32 101, label %335
  ]

287:                                              ; preds = %283
  %288 = icmp ugt i32 %286, 127
  br i1 %288, label %317, label %289

289:                                              ; preds = %287
  %290 = call i32 @iswdigit(i32 %286) #13
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %311, label %292

292:                                              ; preds = %289
  %293 = icmp sgt i32 %309, 214748364
  br i1 %293, label %950, label %294

294:                                              ; preds = %292
  %295 = load i32, i32* %285, align 4
  %296 = icmp ugt i32 %295, 127
  br i1 %296, label %302, label %297

297:                                              ; preds = %294
  %298 = call i32 @iswdigit(i32 %295) #13
  %299 = icmp eq i32 %298, 0
  %300 = add nsw i32 %295, -48
  %301 = select i1 %299, i32 0, i32 %300
  br label %302

302:                                              ; preds = %294, %297
  %303 = phi i32 [ %301, %297 ], [ 0, %294 ]
  %304 = mul nsw i32 %303, 10
  %305 = add nsw i32 %304, %309
  %306 = add i64 %284, -1
  %307 = icmp ult i64 %306, %98
  br i1 %307, label %308, label %335

308:                                              ; preds = %330, %302
  %309 = phi i32 [ %305, %302 ], [ %333, %330 ]
  %310 = phi i64 [ %306, %302 ], [ %331, %330 ]
  br label %283

311:                                              ; preds = %289
  %312 = load i32, i32* %285, align 4
  %313 = icmp eq i32 %312, 43
  br i1 %313, label %314, label %317

314:                                              ; preds = %311
  %315 = add i64 %284, -1
  %316 = icmp ult i64 %315, %98
  br i1 %316, label %283, label %335

317:                                              ; preds = %287, %311
  %318 = sub i64 %284, %180
  %319 = add i64 %318, 1
  %320 = icmp ugt i64 %319, %98
  br i1 %320, label %950, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds i32, i32* %172, i64 %319
  %323 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %79, align 8
  %324 = icmp eq %"class.fxcrt::StringDataTemplate"* %323, null
  %325 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %323, i64 0, i32 3
  %326 = select i1 %324, [1 x i32]* @.str.15, [1 x i32]* %325
  %327 = getelementptr inbounds [1 x i32], [1 x i32]* %326, i64 0, i64 0
  %328 = call i32 @wcsncmp(i32* %322, i32* %327, i64 %180) #15
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %950

330:                                              ; preds = %187, %321
  %331 = phi i64 [ %318, %321 ], [ %190, %187 ]
  %332 = phi i8 [ 1, %321 ], [ 0, %187 ]
  %333 = phi i32 [ %309, %321 ], [ 0, %187 ]
  %334 = icmp ult i64 %331, %98
  br i1 %334, label %308, label %335

335:                                              ; preds = %330, %302, %314, %283, %283
  %336 = phi i32 [ %309, %283 ], [ %309, %283 ], [ %309, %314 ], [ %305, %302 ], [ %333, %330 ]
  %337 = phi i64 [ %315, %314 ], [ %284, %283 ], [ %284, %283 ], [ %306, %302 ], [ %331, %330 ]
  %338 = add i64 %337, -1
  %339 = icmp eq i8 %332, 0
  %340 = sub nsw i32 0, %336
  %341 = select i1 %339, i32 %336, i32 %340
  %342 = load i64, i64* %14, align 8
  %343 = add i64 %342, -1
  store i64 %343, i64* %14, align 8
  br label %514

344:                                              ; preds = %187
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %179, align 8
  %345 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %61, align 8
  %346 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %345, i64 7
  %347 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %346, align 8
  call void %347(%"class.fxcrt::WideString"* nonnull sret %17, %class.LocaleIface* nonnull %49) #13
  %348 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %179, align 8
  %349 = icmp eq %"class.fxcrt::StringDataTemplate"* %348, null
  br i1 %349, label %353, label %350

350:                                              ; preds = %344
  %351 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %348, i64 0, i32 1
  %352 = load i64, i64* %351, align 8
  br label %353

353:                                              ; preds = %344, %350
  %354 = phi i64 [ %352, %350 ], [ 0, %344 ]
  %355 = shl i64 %354, 32
  %356 = add i64 %355, -4294967296
  %357 = ashr exact i64 %356, 32
  %358 = sub i64 %190, %357
  %359 = icmp ult i64 %358, %98
  br i1 %359, label %360, label %368

360:                                              ; preds = %353
  %361 = getelementptr inbounds i32, i32* %172, i64 %358
  %362 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %348, i64 0, i32 3
  %363 = select i1 %349, [1 x i32]* @.str.15, [1 x i32]* %362
  %364 = getelementptr inbounds [1 x i32], [1 x i32]* %363, i64 0, i64 0
  %365 = ashr exact i64 %355, 32
  %366 = call i32 @wcsncmp(i32* %361, i32* %364, i64 %365) #15
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %369, label %368

368:                                              ; preds = %360, %353
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #13
  br label %950

369:                                              ; preds = %360
  %370 = add i64 %358, -1
  %371 = load i64, i64* %14, align 8
  %372 = add i64 %371, -1
  store i64 %372, i64* %14, align 8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #13
  br label %514

373:                                              ; preds = %187, %187
  %374 = add i64 %188, -1
  %375 = icmp ult i64 %374, %108
  br i1 %375, label %376, label %411

376:                                              ; preds = %373
  switch i32 %194, label %411 [
    i32 82, label %377
    i32 114, label %381
  ]

377:                                              ; preds = %376
  %378 = getelementptr inbounds i32, i32* %171, i64 %374
  %379 = load i32, i32* %378, align 4
  %380 = icmp eq i32 %379, 67
  br i1 %380, label %388, label %411

381:                                              ; preds = %376
  %382 = getelementptr inbounds i32, i32* %171, i64 %374
  %383 = load i32, i32* %382, align 4
  %384 = icmp eq i32 %383, 99
  br i1 %384, label %385, label %411

385:                                              ; preds = %381
  %386 = getelementptr inbounds i32, i32* %172, i64 %190
  %387 = load i32, i32* %386, align 4
  br label %394

388:                                              ; preds = %377
  %389 = getelementptr inbounds i32, i32* %172, i64 %190
  %390 = load i32, i32* %389, align 4
  %391 = icmp eq i32 %390, 32
  br i1 %391, label %392, label %394

392:                                              ; preds = %388
  %393 = add i64 %190, -2
  br label %407

394:                                              ; preds = %385, %388
  %395 = phi i32 [ %387, %385 ], [ %390, %388 ]
  %396 = icmp eq i32 %395, 82
  br i1 %396, label %397, label %407

397:                                              ; preds = %394
  %398 = add i64 %190, -1
  %399 = icmp ult i64 %398, %98
  br i1 %399, label %400, label %407

400:                                              ; preds = %397
  %401 = getelementptr inbounds i32, i32* %172, i64 %398
  %402 = load i32, i32* %401, align 4
  %403 = icmp eq i32 %402, 67
  %404 = add i64 %190, -2
  %405 = select i1 %403, i8 1, i8 %191
  %406 = select i1 %403, i64 %404, i64 %190
  br label %407

407:                                              ; preds = %400, %394, %397, %392
  %408 = phi i8 [ %191, %392 ], [ %191, %397 ], [ %191, %394 ], [ %405, %400 ]
  %409 = phi i64 [ %393, %392 ], [ %190, %397 ], [ %190, %394 ], [ %406, %400 ]
  %410 = add i64 %188, -2
  store i64 %410, i64* %14, align 8
  br label %514

411:                                              ; preds = %376, %377, %381, %373
  store i64 %374, i64* %14, align 8
  br label %514

412:                                              ; preds = %187, %187
  %413 = add i64 %188, -1
  %414 = icmp ult i64 %413, %108
  br i1 %414, label %415, label %450

415:                                              ; preds = %412
  switch i32 %194, label %450 [
    i32 66, label %416
    i32 98, label %420
  ]

416:                                              ; preds = %415
  %417 = getelementptr inbounds i32, i32* %171, i64 %413
  %418 = load i32, i32* %417, align 4
  %419 = icmp eq i32 %418, 68
  br i1 %419, label %427, label %450

420:                                              ; preds = %415
  %421 = getelementptr inbounds i32, i32* %171, i64 %413
  %422 = load i32, i32* %421, align 4
  %423 = icmp eq i32 %422, 100
  br i1 %423, label %424, label %450

424:                                              ; preds = %420
  %425 = getelementptr inbounds i32, i32* %172, i64 %190
  %426 = load i32, i32* %425, align 4
  br label %433

427:                                              ; preds = %416
  %428 = getelementptr inbounds i32, i32* %172, i64 %190
  %429 = load i32, i32* %428, align 4
  %430 = icmp eq i32 %429, 32
  br i1 %430, label %431, label %433

431:                                              ; preds = %427
  %432 = add i64 %190, -2
  br label %446

433:                                              ; preds = %424, %427
  %434 = phi i32 [ %426, %424 ], [ %429, %427 ]
  %435 = icmp eq i32 %434, 66
  br i1 %435, label %436, label %446

436:                                              ; preds = %433
  %437 = add i64 %190, -1
  %438 = icmp ult i64 %437, %98
  br i1 %438, label %439, label %446

439:                                              ; preds = %436
  %440 = getelementptr inbounds i32, i32* %172, i64 %437
  %441 = load i32, i32* %440, align 4
  %442 = icmp eq i32 %441, 68
  %443 = add i64 %190, -2
  %444 = select i1 %442, i8 1, i8 %191
  %445 = select i1 %442, i64 %443, i64 %190
  br label %446

446:                                              ; preds = %439, %433, %436, %431
  %447 = phi i8 [ %191, %431 ], [ %191, %436 ], [ %191, %433 ], [ %444, %439 ]
  %448 = phi i64 [ %432, %431 ], [ %190, %436 ], [ %190, %433 ], [ %445, %439 ]
  %449 = add i64 %188, -2
  store i64 %449, i64* %14, align 8
  br label %514

450:                                              ; preds = %415, %416, %420, %412
  store i64 %413, i64* %14, align 8
  br label %514

451:                                              ; preds = %187
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %177, align 8
  %452 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %61, align 8
  %453 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %452, i64 5
  %454 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %453, align 8
  call void %454(%"class.fxcrt::WideString"* nonnull sret %18, %class.LocaleIface* nonnull %49) #13
  %455 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %177, align 8
  %456 = icmp eq %"class.fxcrt::StringDataTemplate"* %455, null
  br i1 %456, label %460, label %457

457:                                              ; preds = %451
  %458 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %455, i64 0, i32 1
  %459 = load i64, i64* %458, align 8
  br label %460

460:                                              ; preds = %451, %457
  %461 = phi i64 [ %459, %457 ], [ 0, %451 ]
  %462 = shl i64 %461, 32
  %463 = add i64 %462, -4294967296
  %464 = ashr exact i64 %463, 32
  %465 = sub i64 %190, %464
  %466 = icmp ult i64 %465, %98
  br i1 %466, label %467, label %475

467:                                              ; preds = %460
  %468 = getelementptr inbounds i32, i32* %172, i64 %465
  %469 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %455, i64 0, i32 3
  %470 = select i1 %456, [1 x i32]* @.str.15, [1 x i32]* %469
  %471 = getelementptr inbounds [1 x i32], [1 x i32]* %470, i64 0, i64 0
  %472 = ashr exact i64 %462, 32
  %473 = call i32 @wcsncmp(i32* %468, i32* %471, i64 %472) #15
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %476, label %475

475:                                              ; preds = %467, %460
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #13
  br label %950

476:                                              ; preds = %467
  %477 = add i64 %465, -1
  %478 = load i64, i64* %14, align 8
  %479 = add i64 %478, -1
  store i64 %479, i64* %14, align 8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #13
  br label %514

480:                                              ; preds = %187
  %481 = sub i64 %190, %174
  %482 = icmp ult i64 %481, %98
  br i1 %482, label %483, label %494

483:                                              ; preds = %480
  %484 = getelementptr inbounds i32, i32* %172, i64 %481
  %485 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %66, align 8
  %486 = icmp eq %"class.fxcrt::StringDataTemplate"* %485, null
  %487 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %485, i64 0, i32 3
  %488 = select i1 %486, [1 x i32]* @.str.15, [1 x i32]* %487
  %489 = getelementptr inbounds [1 x i32], [1 x i32]* %488, i64 0, i64 0
  %490 = call i32 @wcsncmp(i32* %484, i32* %489, i64 %175) #15
  %491 = icmp eq i32 %490, 0
  %492 = add i64 %481, -1
  %493 = select i1 %491, i64 %492, i64 %190
  br label %494

494:                                              ; preds = %483, %480
  %495 = phi i64 [ %190, %480 ], [ %493, %483 ]
  %496 = add i64 %188, -1
  store i64 %496, i64* %14, align 8
  br label %514

497:                                              ; preds = %187, %187
  %498 = getelementptr inbounds i32, i32* %172, i64 %190
  %499 = load i32, i32* %498, align 4
  %500 = icmp eq i32 %499, %194
  br i1 %500, label %503, label %501

501:                                              ; preds = %497
  %502 = icmp eq i32 %499, 32
  br i1 %502, label %503, label %950

503:                                              ; preds = %497, %501
  %504 = phi i8 [ %191, %501 ], [ 1, %497 ]
  %505 = add i64 %190, -1
  %506 = add i64 %188, -1
  store i64 %506, i64* %14, align 8
  br label %514

507:                                              ; preds = %187
  %508 = getelementptr inbounds i32, i32* %172, i64 %190
  %509 = load i32, i32* %508, align 4
  %510 = icmp eq i32 %194, %509
  br i1 %510, label %511, label %950

511:                                              ; preds = %507
  %512 = add i64 %190, -1
  %513 = add i64 %188, -1
  store i64 %513, i64* %14, align 8
  br label %514

514:                                              ; preds = %476, %369, %335, %220, %446, %450, %407, %411, %511, %503, %494, %278, %254, %231
  %515 = phi i8 [ %192, %511 ], [ %192, %503 ], [ %192, %494 ], [ 1, %476 ], [ %192, %446 ], [ %192, %450 ], [ %192, %407 ], [ %192, %411 ], [ %192, %369 ], [ %192, %335 ], [ %192, %278 ], [ %192, %254 ], [ %192, %231 ], [ %192, %220 ]
  %516 = phi i8 [ %191, %511 ], [ %504, %503 ], [ %191, %494 ], [ %191, %476 ], [ %447, %446 ], [ %191, %450 ], [ %408, %407 ], [ %191, %411 ], [ %191, %369 ], [ %191, %335 ], [ %279, %278 ], [ %191, %254 ], [ %191, %231 ], [ %191, %220 ]
  %517 = phi i64 [ %512, %511 ], [ %505, %503 ], [ %495, %494 ], [ %477, %476 ], [ %448, %446 ], [ %190, %450 ], [ %409, %407 ], [ %190, %411 ], [ %370, %369 ], [ %338, %335 ], [ %281, %278 ], [ %255, %254 ], [ %234, %231 ], [ %221, %220 ]
  %518 = phi i32 [ %189, %511 ], [ %189, %503 ], [ %189, %494 ], [ %189, %476 ], [ %189, %446 ], [ %189, %450 ], [ %189, %407 ], [ %189, %411 ], [ %189, %369 ], [ %341, %335 ], [ %189, %278 ], [ %189, %254 ], [ %189, %231 ], [ %189, %220 ]
  %519 = load i64, i64* %14, align 8
  %520 = icmp ult i64 %519, %108
  %521 = icmp ult i64 %517, %98
  %522 = and i1 %521, %520
  br i1 %522, label %187, label %523

523:                                              ; preds = %514, %160
  %524 = phi i8 [ 0, %160 ], [ %515, %514 ]
  %525 = phi i8 [ 0, %160 ], [ %516, %514 ]
  %526 = phi i64 [ %163, %160 ], [ %517, %514 ]
  %527 = phi i32 [ 0, %160 ], [ %518, %514 ]
  %528 = icmp ult i64 %526, %98
  br i1 %528, label %529, label %538

529:                                              ; preds = %523
  %530 = inttoptr i64 %100 to i32*
  %531 = getelementptr inbounds i32, i32* %530, i64 %526
  %532 = load i32, i32* %531, align 4
  %533 = icmp eq i32 %532, 45
  %534 = select i1 %533, i8 1, i8 %525
  %535 = zext i1 %533 to i64
  %536 = sub i64 %526, %535
  %537 = icmp ult i64 %536, %98
  br i1 %537, label %950, label %538

538:                                              ; preds = %529, %523
  %539 = phi i8 [ %534, %529 ], [ %525, %523 ]
  %540 = load i32, i32* %9, align 4
  %541 = and i32 %540, 4
  %542 = icmp ne i32 %541, 0
  %543 = icmp ult i64 %161, %98
  %544 = and i1 %543, %542
  br i1 %544, label %545, label %547

545:                                              ; preds = %538
  %546 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %3, i32 signext 46) #13
  br label %547

547:                                              ; preds = %538, %545
  br i1 %162, label %897, label %548

548:                                              ; preds = %547
  %549 = icmp eq i64 %161, %98
  %550 = add i64 %161, 1
  %551 = select i1 %549, i64 %98, i64 %550
  %552 = add i64 %165, 1
  store i64 %552, i64* %14, align 8
  %553 = icmp ult i64 %551, %98
  %554 = icmp ult i64 %552, %108
  %555 = and i1 %553, %554
  br i1 %555, label %556, label %891

556:                                              ; preds = %548
  %557 = inttoptr i64 %110 to i32*
  %558 = inttoptr i64 %100 to i32*
  %559 = ashr exact i64 %77, 32
  %560 = bitcast %"class.fxcrt::WideString"* %22 to i8*
  %561 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %562 = bitcast %"class.fxcrt::WideString"* %21 to i8*
  %563 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %564 = ashr exact i64 %90, 32
  %565 = bitcast %"class.fxcrt::WideString"* %19 to i8*
  %566 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %567 = bitcast %"class.pdfium::span"* %20 to i64*
  %568 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %20, i64 0, i32 1
  br label %569

569:                                              ; preds = %556, %881
  %570 = phi i64 [ %552, %556 ], [ %887, %881 ]
  %571 = phi i64 [ %165, %556 ], [ %886, %881 ]
  %572 = phi i32 [ %527, %556 ], [ %885, %881 ]
  %573 = phi i64 [ %551, %556 ], [ %884, %881 ]
  %574 = phi i8 [ %539, %556 ], [ %883, %881 ]
  %575 = phi i8 [ %524, %556 ], [ %882, %881 ]
  %576 = getelementptr inbounds i32, i32* %557, i64 %570
  %577 = load i32, i32* %576, align 4
  switch i32 %577, label %875 [
    i32 39, label %584
    i32 57, label %604
    i32 41, label %866
    i32 40, label %866
    i32 83, label %632
    i32 115, label %632
    i32 69, label %653
    i32 36, label %705
    i32 99, label %728
    i32 67, label %728
    i32 100, label %765
    i32 68, label %765
    i32 46, label %950
    i32 86, label %950
    i32 118, label %950
    i32 37, label %802
    i32 56, label %581
    i32 44, label %853
    i32 122, label %578
    i32 90, label %615
  ]

578:                                              ; preds = %569
  %579 = getelementptr inbounds i32, i32* %558, i64 %573
  %580 = load i32, i32* %579, align 4
  br label %619

581:                                              ; preds = %569
  %582 = add nuw i64 %570, 1
  %583 = icmp ult i64 %582, %108
  br i1 %583, label %827, label %835

584:                                              ; preds = %569
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %565) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %566, align 8
  store i64 %110, i64* %567, align 8
  store i64 %108, i64* %568, align 8
  call fastcc void @_ZN12_GLOBAL__N_114GetLiteralTextEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %19, %"class.pdfium::span"* nonnull %20, i64* nonnull %14)
  %585 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %566, align 8
  %586 = icmp eq %"class.fxcrt::StringDataTemplate"* %585, null
  br i1 %586, label %590, label %587

587:                                              ; preds = %584
  %588 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %585, i64 0, i32 1
  %589 = load i64, i64* %588, align 8
  br label %590

590:                                              ; preds = %584, %587
  %591 = phi i64 [ %589, %587 ], [ 0, %584 ]
  %592 = shl i64 %591, 32
  %593 = ashr exact i64 %592, 32
  %594 = add i64 %593, %573
  %595 = icmp ugt i64 %594, %98
  br i1 %595, label %596, label %597

596:                                              ; preds = %590
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %565) #13
  br label %950

597:                                              ; preds = %590
  %598 = getelementptr inbounds i32, i32* %558, i64 %573
  %599 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %585, i64 0, i32 3
  %600 = select i1 %586, [1 x i32]* @.str.15, [1 x i32]* %599
  %601 = getelementptr inbounds [1 x i32], [1 x i32]* %600, i64 0, i64 0
  %602 = call i32 @wcsncmp(i32* %598, i32* %601, i64 %593) #15
  %603 = icmp eq i32 %602, 0
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %565) #13
  br i1 %603, label %881, label %950

604:                                              ; preds = %569
  %605 = getelementptr inbounds i32, i32* %558, i64 %573
  %606 = load i32, i32* %605, align 4
  %607 = icmp ugt i32 %606, 127
  br i1 %607, label %950, label %608

608:                                              ; preds = %604
  %609 = call i32 @iswdigit(i32 %606) #13
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %950, label %611

611:                                              ; preds = %608
  %612 = load i32, i32* %605, align 4
  %613 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %3, i32 signext %612) #13
  %614 = add nuw i64 %573, 1
  br label %881

615:                                              ; preds = %569
  %616 = getelementptr inbounds i32, i32* %558, i64 %573
  %617 = load i32, i32* %616, align 4
  %618 = icmp eq i32 %617, 32
  br i1 %618, label %630, label %619

619:                                              ; preds = %578, %615
  %620 = phi i32 [ %580, %578 ], [ %617, %615 ]
  %621 = getelementptr inbounds i32, i32* %558, i64 %573
  %622 = icmp ugt i32 %620, 127
  br i1 %622, label %881, label %623

623:                                              ; preds = %619
  %624 = call i32 @iswdigit(i32 %620) #13
  %625 = icmp eq i32 %624, 0
  br i1 %625, label %881, label %626

626:                                              ; preds = %623
  %627 = load i32, i32* %621, align 4
  %628 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %3, i32 signext %627) #13
  %629 = add nuw i64 %573, 1
  br label %881

630:                                              ; preds = %615
  %631 = add nuw i64 %573, 1
  br label %881

632:                                              ; preds = %569, %569
  %633 = getelementptr inbounds i32, i32* %558, i64 %573
  %634 = load i32, i32* %633, align 4
  %635 = icmp eq i32 %634, 43
  br i1 %635, label %640, label %636

636:                                              ; preds = %632
  %637 = icmp eq i32 %577, 83
  %638 = icmp eq i32 %634, 32
  %639 = and i1 %637, %638
  br i1 %639, label %640, label %642

640:                                              ; preds = %636, %632
  %641 = add nuw i64 %573, 1
  br label %881

642:                                              ; preds = %636
  %643 = add i64 %573, %564
  %644 = icmp ugt i64 %643, %98
  br i1 %644, label %950, label %645

645:                                              ; preds = %642
  %646 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %79, align 8
  %647 = icmp eq %"class.fxcrt::StringDataTemplate"* %646, null
  %648 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %646, i64 0, i32 3
  %649 = select i1 %647, [1 x i32]* @.str.15, [1 x i32]* %648
  %650 = getelementptr inbounds [1 x i32], [1 x i32]* %649, i64 0, i64 0
  %651 = call i32 @wcsncmp(i32* %633, i32* %650, i64 %564) #15
  %652 = icmp eq i32 %651, 0
  br i1 %652, label %881, label %950

653:                                              ; preds = %569
  %654 = getelementptr inbounds i32, i32* %558, i64 %573
  %655 = load i32, i32* %654, align 4
  switch i32 %655, label %950 [
    i32 69, label %656
    i32 101, label %656
  ]

656:                                              ; preds = %653, %653
  %657 = add nuw i64 %573, 1
  %658 = icmp ult i64 %657, %98
  br i1 %658, label %659, label %669

659:                                              ; preds = %656
  %660 = getelementptr inbounds i32, i32* %558, i64 %657
  %661 = load i32, i32* %660, align 4
  %662 = icmp eq i32 %661, 43
  br i1 %662, label %663, label %665

663:                                              ; preds = %659
  %664 = add nuw i64 %573, 2
  br label %669

665:                                              ; preds = %659
  %666 = icmp eq i32 %661, 45
  %667 = add nuw i64 %573, 2
  %668 = select i1 %666, i64 %667, i64 %657
  br label %669

669:                                              ; preds = %665, %663, %656
  %670 = phi i64 [ %664, %663 ], [ %657, %656 ], [ %668, %665 ]
  %671 = phi i1 [ false, %663 ], [ false, %656 ], [ %666, %665 ]
  %672 = icmp ult i64 %670, %98
  br i1 %672, label %673, label %700

673:                                              ; preds = %669, %695
  %674 = phi i32 [ %697, %695 ], [ 0, %669 ]
  %675 = phi i64 [ %698, %695 ], [ %670, %669 ]
  %676 = getelementptr inbounds i32, i32* %558, i64 %675
  %677 = load i32, i32* %676, align 4
  %678 = icmp ugt i32 %677, 127
  br i1 %678, label %700, label %679

679:                                              ; preds = %673
  %680 = call i32 @iswdigit(i32 %677) #13
  %681 = icmp eq i32 %680, 0
  br i1 %681, label %700, label %682

682:                                              ; preds = %679
  %683 = load i32, i32* %676, align 4
  %684 = icmp ugt i32 %683, 127
  br i1 %684, label %690, label %685

685:                                              ; preds = %682
  %686 = call i32 @iswdigit(i32 %683) #13
  %687 = icmp eq i32 %686, 0
  %688 = add nsw i32 %683, -48
  %689 = select i1 %687, i32 0, i32 %688
  br label %690

690:                                              ; preds = %682, %685
  %691 = phi i32 [ %689, %685 ], [ 0, %682 ]
  %692 = sub nsw i32 2147483647, %691
  %693 = sdiv i32 %692, 10
  %694 = icmp sgt i32 %674, %693
  br i1 %694, label %950, label %695

695:                                              ; preds = %690
  %696 = mul nsw i32 %674, 10
  %697 = add nsw i32 %691, %696
  %698 = add i64 %675, 1
  %699 = icmp eq i64 %698, %98
  br i1 %699, label %700, label %673

700:                                              ; preds = %673, %679, %695, %669
  %701 = phi i64 [ %670, %669 ], [ %675, %673 ], [ %98, %695 ], [ %675, %679 ]
  %702 = phi i32 [ 0, %669 ], [ %674, %673 ], [ %697, %695 ], [ %674, %679 ]
  %703 = sub nsw i32 0, %702
  %704 = select i1 %671, i32 %703, i32 %702
  br label %881

705:                                              ; preds = %569
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %562) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %563, align 8
  %706 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %61, align 8
  %707 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %706, i64 7
  %708 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %707, align 8
  call void %708(%"class.fxcrt::WideString"* nonnull sret %21, %class.LocaleIface* nonnull %49) #13
  %709 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %563, align 8
  %710 = icmp eq %"class.fxcrt::StringDataTemplate"* %709, null
  br i1 %710, label %714, label %711

711:                                              ; preds = %705
  %712 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %709, i64 0, i32 1
  %713 = load i64, i64* %712, align 8
  br label %714

714:                                              ; preds = %705, %711
  %715 = phi i64 [ %713, %711 ], [ 0, %705 ]
  %716 = shl i64 %715, 32
  %717 = ashr exact i64 %716, 32
  %718 = add i64 %717, %573
  %719 = icmp ugt i64 %718, %98
  br i1 %719, label %720, label %721

720:                                              ; preds = %714
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %562) #13
  br label %950

721:                                              ; preds = %714
  %722 = getelementptr inbounds i32, i32* %558, i64 %573
  %723 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %709, i64 0, i32 3
  %724 = select i1 %710, [1 x i32]* @.str.15, [1 x i32]* %723
  %725 = getelementptr inbounds [1 x i32], [1 x i32]* %724, i64 0, i64 0
  %726 = call i32 @wcsncmp(i32* %722, i32* %725, i64 %717) #15
  %727 = icmp eq i32 %726, 0
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %562) #13
  br i1 %727, label %881, label %950

728:                                              ; preds = %569, %569
  %729 = add i64 %571, 2
  %730 = icmp ult i64 %729, %108
  br i1 %730, label %731, label %881

731:                                              ; preds = %728
  switch i32 %577, label %881 [
    i32 67, label %732
    i32 99, label %736
  ]

732:                                              ; preds = %731
  %733 = getelementptr inbounds i32, i32* %557, i64 %729
  %734 = load i32, i32* %733, align 4
  %735 = icmp eq i32 %734, 82
  br i1 %735, label %743, label %881

736:                                              ; preds = %731
  %737 = getelementptr inbounds i32, i32* %557, i64 %729
  %738 = load i32, i32* %737, align 4
  %739 = icmp eq i32 %738, 114
  br i1 %739, label %740, label %881

740:                                              ; preds = %736
  %741 = getelementptr inbounds i32, i32* %558, i64 %573
  %742 = load i32, i32* %741, align 4
  br label %749

743:                                              ; preds = %732
  %744 = getelementptr inbounds i32, i32* %558, i64 %573
  %745 = load i32, i32* %744, align 4
  %746 = icmp eq i32 %745, 32
  br i1 %746, label %747, label %749

747:                                              ; preds = %743
  %748 = add nuw i64 %573, 1
  br label %762

749:                                              ; preds = %740, %743
  %750 = phi i32 [ %742, %740 ], [ %745, %743 ]
  %751 = icmp eq i32 %750, 67
  br i1 %751, label %752, label %762

752:                                              ; preds = %749
  %753 = add nuw i64 %573, 1
  %754 = icmp ult i64 %753, %98
  br i1 %754, label %755, label %762

755:                                              ; preds = %752
  %756 = getelementptr inbounds i32, i32* %558, i64 %753
  %757 = load i32, i32* %756, align 4
  %758 = icmp eq i32 %757, 82
  %759 = add nuw i64 %573, 2
  %760 = select i1 %758, i8 1, i8 %574
  %761 = select i1 %758, i64 %759, i64 %573
  br label %762

762:                                              ; preds = %755, %749, %752, %747
  %763 = phi i8 [ %574, %747 ], [ %574, %752 ], [ %574, %749 ], [ %760, %755 ]
  %764 = phi i64 [ %748, %747 ], [ %573, %752 ], [ %573, %749 ], [ %761, %755 ]
  store i64 %729, i64* %14, align 8
  br label %881

765:                                              ; preds = %569, %569
  %766 = add i64 %571, 2
  %767 = icmp ult i64 %766, %108
  br i1 %767, label %768, label %881

768:                                              ; preds = %765
  switch i32 %577, label %881 [
    i32 68, label %769
    i32 100, label %773
  ]

769:                                              ; preds = %768
  %770 = getelementptr inbounds i32, i32* %557, i64 %766
  %771 = load i32, i32* %770, align 4
  %772 = icmp eq i32 %771, 66
  br i1 %772, label %780, label %881

773:                                              ; preds = %768
  %774 = getelementptr inbounds i32, i32* %557, i64 %766
  %775 = load i32, i32* %774, align 4
  %776 = icmp eq i32 %775, 98
  br i1 %776, label %777, label %881

777:                                              ; preds = %773
  %778 = getelementptr inbounds i32, i32* %558, i64 %573
  %779 = load i32, i32* %778, align 4
  br label %786

780:                                              ; preds = %769
  %781 = getelementptr inbounds i32, i32* %558, i64 %573
  %782 = load i32, i32* %781, align 4
  %783 = icmp eq i32 %782, 32
  br i1 %783, label %784, label %786

784:                                              ; preds = %780
  %785 = add nuw i64 %573, 1
  br label %799

786:                                              ; preds = %777, %780
  %787 = phi i32 [ %779, %777 ], [ %782, %780 ]
  %788 = icmp eq i32 %787, 68
  br i1 %788, label %789, label %799

789:                                              ; preds = %786
  %790 = add nuw i64 %573, 1
  %791 = icmp ult i64 %790, %98
  br i1 %791, label %792, label %799

792:                                              ; preds = %789
  %793 = getelementptr inbounds i32, i32* %558, i64 %790
  %794 = load i32, i32* %793, align 4
  %795 = icmp eq i32 %794, 66
  %796 = add nuw i64 %573, 2
  %797 = select i1 %795, i8 1, i8 %574
  %798 = select i1 %795, i64 %796, i64 %573
  br label %799

799:                                              ; preds = %792, %786, %789, %784
  %800 = phi i8 [ %574, %784 ], [ %574, %789 ], [ %574, %786 ], [ %797, %792 ]
  %801 = phi i64 [ %785, %784 ], [ %573, %789 ], [ %573, %786 ], [ %798, %792 ]
  store i64 %766, i64* %14, align 8
  br label %881

802:                                              ; preds = %569
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %560) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %561, align 8
  %803 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %61, align 8
  %804 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %803, i64 5
  %805 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %804, align 8
  call void %805(%"class.fxcrt::WideString"* nonnull sret %22, %class.LocaleIface* nonnull %49) #13
  %806 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %561, align 8
  %807 = icmp eq %"class.fxcrt::StringDataTemplate"* %806, null
  br i1 %807, label %811, label %808

808:                                              ; preds = %802
  %809 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %806, i64 0, i32 1
  %810 = load i64, i64* %809, align 8
  br label %811

811:                                              ; preds = %802, %808
  %812 = phi i64 [ %810, %808 ], [ 0, %802 ]
  %813 = shl i64 %812, 32
  %814 = ashr exact i64 %813, 32
  %815 = add i64 %814, %573
  %816 = icmp ugt i64 %815, %98
  br i1 %816, label %825, label %817

817:                                              ; preds = %811
  %818 = getelementptr inbounds i32, i32* %558, i64 %573
  %819 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %806, i64 0, i32 3
  %820 = select i1 %807, [1 x i32]* @.str.15, [1 x i32]* %819
  %821 = getelementptr inbounds [1 x i32], [1 x i32]* %820, i64 0, i64 0
  %822 = call i32 @wcsncmp(i32* %818, i32* %821, i64 %814) #15
  %823 = icmp eq i32 %822, 0
  %824 = select i1 %823, i64 %815, i64 %573
  br label %825

825:                                              ; preds = %817, %811
  %826 = phi i64 [ %573, %811 ], [ %824, %817 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %560) #13
  br label %881

827:                                              ; preds = %581, %832
  %828 = phi i64 [ %833, %832 ], [ %582, %581 ]
  %829 = getelementptr inbounds i32, i32* %557, i64 %828
  %830 = load i32, i32* %829, align 4
  %831 = icmp eq i32 %830, 56
  br i1 %831, label %832, label %835

832:                                              ; preds = %827
  store i64 %828, i64* %14, align 8
  %833 = add i64 %828, 1
  %834 = icmp eq i64 %833, %108
  br i1 %834, label %835, label %827

835:                                              ; preds = %827, %832, %581
  %836 = icmp ult i64 %573, %98
  br i1 %836, label %837, label %881

837:                                              ; preds = %835, %845
  %838 = phi i64 [ %848, %845 ], [ %573, %835 ]
  %839 = getelementptr inbounds i32, i32* %558, i64 %838
  %840 = load i32, i32* %839, align 4
  %841 = icmp ugt i32 %840, 127
  br i1 %841, label %881, label %842

842:                                              ; preds = %837
  %843 = call i32 @iswdigit(i32 %840) #13
  %844 = icmp eq i32 %843, 0
  br i1 %844, label %881, label %845

845:                                              ; preds = %842
  %846 = load i32, i32* %839, align 4
  %847 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %3, i32 signext %846) #13
  %848 = add i64 %838, 1
  %849 = icmp eq i64 %848, %98
  br i1 %849, label %850, label %837

850:                                              ; preds = %845
  %851 = load i64, i64* %14, align 8
  %852 = add i64 %851, 1
  store i64 %852, i64* %14, align 8
  br label %897

853:                                              ; preds = %569
  %854 = add i64 %573, %559
  %855 = icmp ugt i64 %854, %98
  br i1 %855, label %881, label %856

856:                                              ; preds = %853
  %857 = getelementptr inbounds i32, i32* %558, i64 %573
  %858 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %66, align 8
  %859 = icmp eq %"class.fxcrt::StringDataTemplate"* %858, null
  %860 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %858, i64 0, i32 3
  %861 = select i1 %859, [1 x i32]* @.str.15, [1 x i32]* %860
  %862 = getelementptr inbounds [1 x i32], [1 x i32]* %861, i64 0, i64 0
  %863 = call i32 @wcsncmp(i32* %857, i32* %862, i64 %559) #15
  %864 = icmp eq i32 %863, 0
  %865 = select i1 %864, i64 %854, i64 %573
  br label %881

866:                                              ; preds = %569, %569
  %867 = getelementptr inbounds i32, i32* %558, i64 %573
  %868 = load i32, i32* %867, align 4
  %869 = icmp eq i32 %868, %577
  br i1 %869, label %872, label %870

870:                                              ; preds = %866
  %871 = icmp eq i32 %868, 32
  br i1 %871, label %872, label %950

872:                                              ; preds = %866, %870
  %873 = phi i8 [ %574, %870 ], [ 1, %866 ]
  %874 = add nuw i64 %573, 1
  br label %881

875:                                              ; preds = %569
  %876 = getelementptr inbounds i32, i32* %558, i64 %573
  %877 = load i32, i32* %876, align 4
  %878 = icmp eq i32 %577, %877
  br i1 %878, label %879, label %950

879:                                              ; preds = %875
  %880 = add nuw i64 %573, 1
  br label %881

881:                                              ; preds = %837, %842, %835, %623, %768, %731, %769, %732, %619, %700, %856, %645, %853, %611, %825, %872, %879, %721, %597, %626, %630, %640, %762, %736, %728, %799, %773, %765
  %882 = phi i8 [ %575, %879 ], [ %575, %872 ], [ %575, %853 ], [ 1, %825 ], [ %575, %799 ], [ %575, %773 ], [ %575, %765 ], [ %575, %762 ], [ %575, %736 ], [ %575, %728 ], [ %575, %721 ], [ %575, %640 ], [ %575, %626 ], [ %575, %623 ], [ %575, %630 ], [ %575, %611 ], [ %575, %597 ], [ %575, %645 ], [ %575, %856 ], [ %575, %700 ], [ %575, %619 ], [ %575, %732 ], [ %575, %769 ], [ %575, %731 ], [ %575, %768 ], [ %575, %835 ], [ %575, %842 ], [ %575, %837 ]
  %883 = phi i8 [ %574, %879 ], [ %873, %872 ], [ %574, %853 ], [ %574, %825 ], [ %800, %799 ], [ %574, %773 ], [ %574, %765 ], [ %763, %762 ], [ %574, %736 ], [ %574, %728 ], [ %574, %721 ], [ %574, %640 ], [ %574, %626 ], [ %574, %623 ], [ %574, %630 ], [ %574, %611 ], [ %574, %597 ], [ 1, %645 ], [ %574, %856 ], [ %574, %700 ], [ %574, %619 ], [ %574, %732 ], [ %574, %769 ], [ %574, %731 ], [ %574, %768 ], [ %574, %835 ], [ %574, %842 ], [ %574, %837 ]
  %884 = phi i64 [ %880, %879 ], [ %874, %872 ], [ %573, %853 ], [ %826, %825 ], [ %801, %799 ], [ %573, %773 ], [ %573, %765 ], [ %764, %762 ], [ %573, %736 ], [ %573, %728 ], [ %718, %721 ], [ %641, %640 ], [ %629, %626 ], [ %573, %623 ], [ %631, %630 ], [ %614, %611 ], [ %594, %597 ], [ %643, %645 ], [ %865, %856 ], [ %701, %700 ], [ %573, %619 ], [ %573, %732 ], [ %573, %769 ], [ %573, %731 ], [ %573, %768 ], [ %573, %835 ], [ %838, %842 ], [ %838, %837 ]
  %885 = phi i32 [ %572, %879 ], [ %572, %872 ], [ %572, %853 ], [ %572, %825 ], [ %572, %799 ], [ %572, %773 ], [ %572, %765 ], [ %572, %762 ], [ %572, %736 ], [ %572, %728 ], [ %572, %721 ], [ %572, %640 ], [ %572, %626 ], [ %572, %623 ], [ %572, %630 ], [ %572, %611 ], [ %572, %597 ], [ %572, %645 ], [ %572, %856 ], [ %704, %700 ], [ %572, %619 ], [ %572, %732 ], [ %572, %769 ], [ %572, %731 ], [ %572, %768 ], [ %572, %835 ], [ %572, %842 ], [ %572, %837 ]
  %886 = load i64, i64* %14, align 8
  %887 = add i64 %886, 1
  store i64 %887, i64* %14, align 8
  %888 = icmp ult i64 %884, %98
  %889 = icmp ult i64 %887, %108
  %890 = and i1 %888, %889
  br i1 %890, label %569, label %891

891:                                              ; preds = %881, %548
  %892 = phi i8 [ %524, %548 ], [ %882, %881 ]
  %893 = phi i8 [ %539, %548 ], [ %883, %881 ]
  %894 = phi i64 [ %551, %548 ], [ %884, %881 ]
  %895 = phi i32 [ %527, %548 ], [ %885, %881 ]
  %896 = icmp eq i64 %894, %98
  br i1 %896, label %897, label %950

897:                                              ; preds = %850, %891, %547
  %898 = phi i8 [ %524, %547 ], [ %892, %891 ], [ %575, %850 ]
  %899 = phi i8 [ %539, %547 ], [ %893, %891 ], [ %574, %850 ]
  %900 = phi i32 [ %527, %547 ], [ %895, %891 ], [ %572, %850 ]
  %901 = icmp ne i32 %900, 0
  %902 = xor i1 %901, true
  %903 = and i8 %898, 1
  %904 = icmp eq i8 %903, 0
  %905 = and i1 %904, %902
  br i1 %905, label %945, label %906

906:                                              ; preds = %897
  %907 = bitcast %class.CFGAS_Decimal* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %907) #13
  %908 = getelementptr inbounds %class.CFGAS_Decimal, %class.CFGAS_Decimal* %23, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %907, i8 -86, i64 16, i1 false)
  %909 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %28, align 8, !noalias !44
  %910 = icmp eq %"class.fxcrt::StringDataTemplate"* %909, null
  %911 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %909, i64 0, i32 3
  %912 = select i1 %910, [1 x i32]* @.str.15, [1 x i32]* %911
  %913 = getelementptr inbounds [1 x i32], [1 x i32]* %912, i64 0, i64 0
  br i1 %910, label %917, label %914

914:                                              ; preds = %906
  %915 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %909, i64 0, i32 1
  %916 = load i64, i64* %915, align 8, !noalias !44
  br label %917

917:                                              ; preds = %906, %914
  %918 = phi i64 [ %916, %914 ], [ 0, %906 ]
  %919 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %24, i64 0, i32 0, i32 0, i32 0
  store i32* %913, i32** %919, align 8, !alias.scope !44
  %920 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %24, i64 0, i32 0, i32 1
  store i64 %918, i64* %920, align 8, !alias.scope !44
  call void @_ZN13CFGAS_DecimalC1EN5fxcrt18StringViewTemplateIwEE(%class.CFGAS_Decimal* nonnull %23, %"class.fxcrt::StringViewTemplate"* nonnull %24) #13
  br i1 %901, label %921, label %933

921:                                              ; preds = %917
  %922 = bitcast %class.CFGAS_Decimal* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %922) #13
  %923 = sitofp i32 %900 to float
  %924 = fpext float %923 to double
  %925 = call double @pow(double 1.000000e+01, double %924) #13
  %926 = fptrunc double %925 to float
  call void @_ZN13CFGAS_DecimalC1Efh(%class.CFGAS_Decimal* nonnull %25, float %926, i8 zeroext 3) #13
  %927 = call { i64, i64 } @_ZNK13CFGAS_DecimalmlERKS_(%class.CFGAS_Decimal* nonnull %23, %class.CFGAS_Decimal* nonnull dereferenceable(16) %25) #13
  %928 = extractvalue { i64, i64 } %927, 0
  %929 = extractvalue { i64, i64 } %927, 1
  %930 = bitcast %class.CFGAS_Decimal* %23 to i64*
  store i64 %928, i64* %930, align 8
  %931 = bitcast i32* %908 to i48*
  %932 = trunc i64 %929 to i48
  store i48 %932, i48* %931, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %922) #13
  br label %933

933:                                              ; preds = %921, %917
  br i1 %904, label %942, label %934

934:                                              ; preds = %933
  %935 = bitcast %class.CFGAS_Decimal* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %935) #13
  call void @_ZN13CFGAS_DecimalC1Ei(%class.CFGAS_Decimal* nonnull %26, i32 100) #13
  %936 = call { i64, i64 } @_ZNK13CFGAS_DecimaldvERKS_(%class.CFGAS_Decimal* nonnull %23, %class.CFGAS_Decimal* nonnull dereferenceable(16) %26) #13
  %937 = extractvalue { i64, i64 } %936, 0
  %938 = extractvalue { i64, i64 } %936, 1
  %939 = bitcast %class.CFGAS_Decimal* %23 to i64*
  store i64 %937, i64* %939, align 8
  %940 = bitcast i32* %908 to i48*
  %941 = trunc i64 %938 to i48
  store i48 %941, i48* %940, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %935) #13
  br label %942

942:                                              ; preds = %933, %934
  %943 = bitcast %"class.fxcrt::WideString"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %943) #13
  call void @_ZNK13CFGAS_Decimal12ToWideStringEv(%"class.fxcrt::WideString"* nonnull sret %27, %class.CFGAS_Decimal* nonnull %23) #13
  %944 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %27) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %27) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %943) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %907) #13
  br label %945

945:                                              ; preds = %897, %942
  %946 = and i8 %899, 1
  %947 = icmp eq i8 %946, 0
  br i1 %947, label %950, label %948

948:                                              ; preds = %945
  %949 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* %3, i64 0, i32 signext 45) #13
  br label %950

950:                                              ; preds = %228, %187, %187, %187, %187, %224, %507, %501, %266, %269, %321, %317, %292, %608, %653, %569, %569, %569, %604, %875, %870, %642, %645, %597, %721, %690, %720, %596, %475, %368, %219, %948, %945, %891, %529
  %951 = phi i1 [ false, %529 ], [ false, %891 ], [ true, %945 ], [ true, %948 ], [ false, %219 ], [ false, %368 ], [ false, %475 ], [ false, %596 ], [ false, %720 ], [ false, %690 ], [ false, %721 ], [ false, %597 ], [ false, %645 ], [ false, %642 ], [ false, %870 ], [ false, %875 ], [ false, %604 ], [ false, %569 ], [ false, %569 ], [ false, %569 ], [ false, %653 ], [ false, %608 ], [ false, %292 ], [ false, %317 ], [ false, %321 ], [ false, %269 ], [ false, %266 ], [ false, %501 ], [ false, %507 ], [ false, %224 ], [ false, %187 ], [ false, %187 ], [ false, %187 ], [ false, %187 ], [ false, %228 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #13
  br label %952

952:                                              ; preds = %51, %54, %44, %950
  %953 = phi i1 [ %951, %950 ], [ false, %44 ], [ false, %54 ], [ false, %51 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #13
  br label %954

954:                                              ; preds = %32, %36, %40, %952
  %955 = phi i1 [ %953, %952 ], [ false, %40 ], [ false, %36 ], [ false, %32 ]
  ret i1 %955
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_121GetLiteralTextReverseEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* noalias sret, %"class.pdfium::span"* nocapture readonly, i64* nocapture) unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %9 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %10 = alloca %"class.fxcrt::WideString", align 8
  %11 = alloca %"class.fxcrt::WideString", align 8
  %12 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %12, align 8
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #13
  %13 = load i64, i64* %2, align 8
  %14 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %17, label %171

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds i32, i32* %19, i64 %13
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 39
  br i1 %22, label %23, label %171

23:                                               ; preds = %17
  %24 = add i64 %13, -1
  store i64 %24, i64* %2, align 8
  %25 = load i64, i64* %14, align 8
  %26 = icmp ult i64 %24, %25
  br i1 %26, label %27, label %171

27:                                               ; preds = %23
  %28 = bitcast %"class.fxcrt::WideString"* %10 to i8*
  %29 = bitcast i32* %4 to i8*
  %30 = bitcast %"class.fxcrt::StringViewTemplate"* %5 to i8*
  %31 = bitcast %"class.fxcrt::StringViewTemplate"* %6 to i8*
  %32 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 1
  %36 = bitcast %"class.fxcrt::WideString"* %11 to i8*
  %37 = bitcast i32* %7 to i8*
  %38 = bitcast %"class.fxcrt::StringViewTemplate"* %8 to i8*
  %39 = bitcast %"class.fxcrt::StringViewTemplate"* %9 to i8*
  %40 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %8, i64 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %8, i64 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %9, i64 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %9, i64 0, i32 0, i32 1
  br label %44

44:                                               ; preds = %27, %165
  %45 = phi i64 [ %25, %27 ], [ %169, %165 ]
  %46 = phi i64 [ %24, %27 ], [ %168, %165 ]
  %47 = phi i32 [ 1, %27 ], [ %148, %165 ]
  br label %48

48:                                               ; preds = %44, %142
  %49 = phi i64 [ %45, %44 ], [ %144, %142 ]
  %50 = phi i64 [ %46, %44 ], [ %143, %142 ]
  %51 = load i32*, i32** %18, align 8
  %52 = getelementptr inbounds i32, i32* %51, i64 %50
  %53 = load i32, i32* %52, align 4
  switch i32 %53, label %146 [
    i32 39, label %54
    i32 92, label %66
  ]

54:                                               ; preds = %48
  %55 = add i64 %50, -1
  %56 = icmp ult i64 %55, %49
  br i1 %56, label %57, label %171

57:                                               ; preds = %54
  %58 = getelementptr inbounds i32, i32* %51, i64 %55
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 39
  %61 = and i32 %47, 1
  %62 = icmp eq i32 %61, 0
  %63 = or i1 %62, %60
  br i1 %63, label %64, label %171

64:                                               ; preds = %57
  %65 = add nsw i32 %47, 2
  store i64 %55, i64* %2, align 8
  br label %146

66:                                               ; preds = %48
  %67 = add nuw i64 %50, 1
  %68 = icmp ult i64 %67, %49
  br i1 %68, label %69, label %146

69:                                               ; preds = %66
  %70 = getelementptr inbounds i32, i32* %51, i64 %67
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 117
  br i1 %72, label %73, label %146

73:                                               ; preds = %69
  %74 = add i64 %50, -1
  store i64 %74, i64* %2, align 8
  %75 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %12, align 8
  %76 = icmp eq %"class.fxcrt::StringDataTemplate"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %75, i64 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = trunc i64 %79 to i32
  %81 = icmp sgt i32 %80, 1
  br i1 %81, label %82, label %142

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %75, i64 0, i32 1
  %84 = shl i64 %79, 32
  %85 = ashr exact i64 %84, 32
  %86 = load i64, i64* %83, align 8
  br label %87

87:                                               ; preds = %82, %118
  %88 = phi i64 [ 1, %82 ], [ %120, %118 ]
  %89 = phi i32 [ 0, %82 ], [ %119, %118 ]
  %90 = icmp ugt i64 %86, %88
  br i1 %90, label %92, label %91, !prof !17

91:                                               ; preds = %87
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !47
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !48
  unreachable

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %75, i64 0, i32 3, i64 %88
  %94 = load i32, i32* %93, align 4
  %95 = trunc i32 %94 to i8
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %118, label %97

97:                                               ; preds = %92
  %98 = tail call i16** @__ctype_b_loc() #14
  %99 = load i16*, i16** %98, align 8
  %100 = sext i8 %95 to i64
  %101 = getelementptr inbounds i16, i16* %99, i64 %100
  %102 = load i16, i16* %101, align 2
  %103 = and i16 %102, 4096
  %104 = icmp eq i16 %103, 0
  br i1 %104, label %118, label %105

105:                                              ; preds = %97
  %106 = shl i32 %89, 4
  %107 = shl i32 %94, 24
  %108 = ashr exact i32 %107, 24
  %109 = add nsw i32 %108, -97
  %110 = icmp ult i32 %109, 26
  %111 = add nsw i8 %95, -32
  %112 = select i1 %110, i8 %111, i8 %95
  %113 = sext i8 %112 to i32
  %114 = icmp sgt i8 %112, 57
  %115 = select i1 %114, i32 -55, i32 -48
  %116 = add i32 %106, %113
  %117 = add i32 %116, %115
  br label %118

118:                                              ; preds = %92, %97, %105
  %119 = phi i32 [ %117, %105 ], [ %89, %97 ], [ %89, %92 ]
  %120 = add nuw nsw i64 %88, 1
  %121 = icmp slt i64 %120, %85
  %122 = icmp ult i64 %120, 5
  %123 = and i1 %121, %122
  br i1 %123, label %87, label %124

124:                                              ; preds = %118
  %125 = icmp eq i32 %119, 0
  br i1 %125, label %142, label %126

126:                                              ; preds = %124
  %127 = and i64 %120, 4294967295
  %128 = call i64 @_ZN5fxcrt10WideString6DeleteEmm(%"class.fxcrt::WideString"* %0, i64 0, i64 %127) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  %129 = and i32 %119, 65535
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31)
  store i32 %129, i32* %4, align 4, !noalias !49
  store i32* %4, i32** %32, align 8, !noalias !49
  store i64 1, i64* %33, align 8, !noalias !49
  %130 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %12, align 8, !noalias !52
  %131 = icmp eq %"class.fxcrt::StringDataTemplate"* %130, null
  %132 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %130, i64 0, i32 3
  %133 = select i1 %131, [1 x i32]* @.str.15, [1 x i32]* %132
  %134 = getelementptr inbounds [1 x i32], [1 x i32]* %133, i64 0, i64 0
  br i1 %131, label %138, label %135

135:                                              ; preds = %126
  %136 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %130, i64 0, i32 1
  %137 = load i64, i64* %136, align 8, !noalias !55
  br label %138

138:                                              ; preds = %126, %135
  %139 = phi i64 [ %137, %135 ], [ 0, %126 ]
  store i32* %134, i32** %34, align 8, !alias.scope !55, !noalias !49
  store i64 %139, i64* %35, align 8, !alias.scope !55, !noalias !49
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %10, %"class.fxcrt::StringViewTemplate"* nonnull %5, %"class.fxcrt::StringViewTemplate"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31)
  %140 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %0, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %10) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  %141 = load i64, i64* %2, align 8
  br label %142

142:                                              ; preds = %73, %77, %124, %138
  %143 = phi i64 [ %74, %124 ], [ %141, %138 ], [ %74, %77 ], [ %74, %73 ]
  %144 = load i64, i64* %14, align 8
  %145 = icmp ult i64 %143, %144
  br i1 %145, label %48, label %171

146:                                              ; preds = %48, %66, %69, %64
  %147 = phi i64 [ %55, %64 ], [ %50, %69 ], [ %50, %66 ], [ %50, %48 ]
  %148 = phi i32 [ %65, %64 ], [ %47, %69 ], [ %47, %66 ], [ %47, %48 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  %149 = add i64 %147, -1
  store i64 %149, i64* %2, align 8
  %150 = load i64, i64* %14, align 8
  %151 = icmp ugt i64 %150, %147
  br i1 %151, label %153, label %152, !prof !17

152:                                              ; preds = %146
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

153:                                              ; preds = %146
  %154 = load i32*, i32** %18, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 %147
  %156 = load i32, i32* %155, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39)
  store i32 %156, i32* %7, align 4, !noalias !56
  store i32* %7, i32** %40, align 8, !noalias !56
  store i64 1, i64* %41, align 8, !noalias !56
  %157 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %12, align 8, !noalias !59
  %158 = icmp eq %"class.fxcrt::StringDataTemplate"* %157, null
  %159 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %157, i64 0, i32 3
  %160 = select i1 %158, [1 x i32]* @.str.15, [1 x i32]* %159
  %161 = getelementptr inbounds [1 x i32], [1 x i32]* %160, i64 0, i64 0
  br i1 %158, label %165, label %162

162:                                              ; preds = %153
  %163 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %157, i64 0, i32 1
  %164 = load i64, i64* %163, align 8, !noalias !62
  br label %165

165:                                              ; preds = %153, %162
  %166 = phi i64 [ %164, %162 ], [ 0, %153 ]
  store i32* %161, i32** %42, align 8, !alias.scope !62, !noalias !56
  store i64 %166, i64* %43, align 8, !alias.scope !62, !noalias !56
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %11, %"class.fxcrt::StringViewTemplate"* nonnull %8, %"class.fxcrt::StringViewTemplate"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39)
  %167 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %0, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %11) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  %168 = load i64, i64* %2, align 8
  %169 = load i64, i64* %14, align 8
  %170 = icmp ult i64 %168, %169
  br i1 %170, label %44, label %171

171:                                              ; preds = %165, %57, %54, %142, %23, %17, %3
  ret void
}

declare void @_ZN13CFGAS_DecimalC1EN5fxcrt18StringViewTemplateIwEE(%class.CFGAS_Decimal*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #2

declare { i64, i64 } @_ZNK13CFGAS_DecimalmlERKS_(%class.CFGAS_Decimal*, %class.CFGAS_Decimal* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN13CFGAS_DecimalC1Efh(%class.CFGAS_Decimal*, float, i8 zeroext) unnamed_addr #2

declare { i64, i64 } @_ZNK13CFGAS_DecimaldvERKS_(%class.CFGAS_Decimal*, %class.CFGAS_Decimal* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN13CFGAS_DecimalC1Ei(%class.CFGAS_Decimal*, i32) unnamed_addr #2

declare void @_ZNK13CFGAS_Decimal12ToWideStringEv(%"class.fxcrt::WideString"* sret, %class.CFGAS_Decimal*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK21CFGAS_StringFormatter17GetDateTimeFormatEP14LocaleMgrIfacePP11LocaleIfacePN5fxcrt10WideStringES7_(%class.CFGAS_StringFormatter*, %class.LocaleMgrIface*, %class.LocaleIface** nocapture, %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %8 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %9 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %10 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %11 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %12 = alloca %"class.fxcrt::WideString", align 8
  %13 = alloca i64, align 8
  %14 = alloca %"class.fxcrt::WideString", align 8
  %15 = alloca %"class.pdfium::span", align 8
  %16 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %17 = alloca %"class.fxcrt::WideString", align 8
  %18 = alloca %"class.fxcrt::WideString", align 8
  %19 = alloca %"class.fxcrt::WideString", align 8
  %20 = alloca %"class.fxcrt::WideString", align 8
  %21 = alloca %"class.fxcrt::WideString", align 8
  %22 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %23 = alloca %"class.fxcrt::WideString", align 8
  %24 = alloca %"class.fxcrt::WideString", align 8
  %25 = alloca %"class.fxcrt::WideString", align 8
  %26 = alloca %"class.fxcrt::WideString", align 8
  %27 = alloca %"class.fxcrt::WideString", align 8
  %28 = alloca %"class.fxcrt::WideString", align 8
  %29 = alloca %"class.fxcrt::WideString", align 8
  store %class.LocaleIface* null, %class.LocaleIface** %2, align 8
  %30 = bitcast %"class.fxcrt::WideString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  %31 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %31, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %12) #13
  %32 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  store i64 0, i64* %13, align 8
  %33 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 1
  %34 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 1, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %441, label %37

37:                                               ; preds = %5
  %38 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %33, i64 0, i32 0, i32 0
  %39 = bitcast %"class.fxcrt::WideString"* %17 to i8*
  %40 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.fxcrt::WideString"* %21 to i8*
  %42 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %22, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %22, i64 0, i32 0, i32 1
  %45 = bitcast %class.LocaleMgrIface* %1 to %class.LocaleIface* (%class.LocaleMgrIface*)***
  %46 = bitcast %"class.fxcrt::WideString"* %27 to i8*
  %47 = bitcast %"class.fxcrt::WideString"* %28 to i8*
  %48 = bitcast %"class.fxcrt::StringViewTemplate"* %10 to i8*
  %49 = bitcast %"class.fxcrt::StringViewTemplate"* %11 to i8*
  %50 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %10, i64 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %10, i64 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %11, i64 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %11, i64 0, i32 0, i32 1
  %55 = bitcast %"class.fxcrt::WideString"* %29 to i8*
  %56 = bitcast %"class.fxcrt::WideString"* %25 to i8*
  %57 = bitcast %"class.fxcrt::WideString"* %26 to i8*
  %58 = bitcast %"class.fxcrt::StringViewTemplate"* %6 to i8*
  %59 = bitcast %"class.fxcrt::StringViewTemplate"* %7 to i8*
  %60 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %7, i64 0, i32 0, i32 1
  %65 = bitcast %"class.fxcrt::WideString"* %23 to i8*
  %66 = bitcast %"class.fxcrt::WideString"* %24 to i8*
  %67 = bitcast %"class.fxcrt::StringViewTemplate"* %8 to i8*
  %68 = bitcast %"class.fxcrt::StringViewTemplate"* %9 to i8*
  %69 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %8, i64 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %8, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %9, i64 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %9, i64 0, i32 0, i32 1
  %74 = bitcast %"class.fxcrt::WideString"* %20 to i8*
  %75 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = bitcast %class.LocaleMgrIface* %1 to %class.LocaleIface* (%class.LocaleMgrIface*, %"class.fxcrt::WideString"*)***
  %77 = bitcast %"class.pdfium::span"* %15 to i8*
  %78 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %16, i64 0, i32 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %16, i64 0, i32 0, i32 1
  %80 = bitcast %"class.pdfium::span"* %33 to i8*
  br label %81

81:                                               ; preds = %37, %433
  %82 = phi i64 [ 0, %37 ], [ %438, %433 ]
  %83 = phi i32 [ 0, %37 ], [ %436, %433 ]
  %84 = phi i8 [ 0, %37 ], [ %435, %433 ]
  %85 = phi i32 [ 0, %37 ], [ %434, %433 ]
  %86 = and i8 %84, 1
  %87 = icmp eq i8 %86, 0
  %88 = icmp ne i32 %85, 3
  %89 = and i1 %88, %87
  %90 = add i32 %85, -2
  %91 = icmp ult i32 %90, 3
  br label %92

92:                                               ; preds = %81, %412
  %93 = phi i64 [ %82, %81 ], [ %413, %412 ]
  %94 = load i32*, i32** %38, align 8
  %95 = getelementptr inbounds i32, i32* %94, i64 %93
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, 39
  br i1 %97, label %98, label %107

98:                                               ; preds = %92
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %80, i64 16, i1 false)
  call fastcc void @_ZN12_GLOBAL__N_114GetLiteralTextEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %14, %"class.pdfium::span"* nonnull %15, i64* nonnull %13)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %14) #13
  %99 = load i32*, i32** %38, align 8
  %100 = shl i64 %93, 32
  %101 = ashr exact i64 %100, 32
  %102 = getelementptr inbounds i32, i32* %99, i64 %101
  %103 = load i64, i64* %13, align 8
  %104 = sub nsw i64 1, %101
  %105 = add i64 %104, %103
  store i32* %102, i32** %78, align 8
  store i64 %105, i64* %79, align 8
  %106 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"* nonnull %12, %"class.fxcrt::StringViewTemplate"* nonnull %16) #13
  br label %433

107:                                              ; preds = %92
  br i1 %89, label %108, label %416

108:                                              ; preds = %107
  switch i32 %96, label %109 [
    i32 58, label %431
    i32 47, label %431
    i32 46, label %431
    i32 45, label %431
    i32 44, label %431
    i32 32, label %431
    i32 0, label %431
  ]

109:                                              ; preds = %108
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %40, align 8
  %110 = load i32, i32* %95, align 4
  call void @_ZN5fxcrt10WideStringC1Ew(%"class.fxcrt::WideString"* nonnull %17, i32 signext %110) #13
  %111 = load i64, i64* %13, align 8
  %112 = add i64 %111, 1
  store i64 %112, i64* %13, align 8
  %113 = load i64, i64* %34, align 8
  %114 = icmp ult i64 %112, %113
  br i1 %114, label %115, label %150

115:                                              ; preds = %109, %144
  %116 = phi i64 [ %148, %144 ], [ %113, %109 ]
  %117 = phi i64 [ %147, %144 ], [ %112, %109 ]
  %118 = load i32*, i32** %38, align 8
  %119 = getelementptr inbounds i32, i32* %118, i64 %117
  %120 = load i32, i32* %119, align 4
  switch i32 %120, label %144 [
    i32 123, label %150
    i32 46, label %150
    i32 40, label %150
    i32 84, label %121
  ]

121:                                              ; preds = %115
  %122 = bitcast %"class.fxcrt::WideString"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #13
  %123 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 0
  call void @_ZNK5fxcrt10WideString5FirstEm(%"class.fxcrt::WideString"* nonnull sret %18, %"class.fxcrt::WideString"* %123, i64 %117) #13
  %124 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %18) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #13
  %125 = bitcast %"class.fxcrt::WideString"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #13
  %126 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %126, align 8
  %128 = icmp eq %"class.fxcrt::StringDataTemplate"* %127, null
  br i1 %128, label %132, label %129

129:                                              ; preds = %121
  %130 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %127, i64 0, i32 1
  %131 = load i64, i64* %130, align 8
  br label %132

132:                                              ; preds = %121, %129
  %133 = phi i64 [ %131, %129 ], [ 0, %121 ]
  %134 = load i64, i64* %13, align 8
  %135 = sub i64 %133, %134
  call void @_ZNK5fxcrt10WideString4LastEm(%"class.fxcrt::WideString"* nonnull sret %19, %"class.fxcrt::WideString"* %123, i64 %135) #13
  %136 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %4, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %19) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #13
  call void @_ZN5fxcrt10WideString5SetAtEmw(%"class.fxcrt::WideString"* %4, i64 0, i32 signext 32) #13
  %137 = load %class.LocaleIface*, %class.LocaleIface** %2, align 8
  %138 = icmp eq %class.LocaleIface* %137, null
  br i1 %138, label %139, label %409

139:                                              ; preds = %132
  %140 = load %class.LocaleIface* (%class.LocaleMgrIface*)**, %class.LocaleIface* (%class.LocaleMgrIface*)*** %45, align 8
  %141 = getelementptr inbounds %class.LocaleIface* (%class.LocaleMgrIface*)*, %class.LocaleIface* (%class.LocaleMgrIface*)** %140, i64 2
  %142 = load %class.LocaleIface* (%class.LocaleMgrIface*)*, %class.LocaleIface* (%class.LocaleMgrIface*)** %141, align 8
  %143 = call %class.LocaleIface* %142(%class.LocaleMgrIface* %1) #13
  store %class.LocaleIface* %143, %class.LocaleIface** %2, align 8
  br label %409

144:                                              ; preds = %115
  %145 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %17, i32 signext %120) #13
  %146 = load i64, i64* %13, align 8
  %147 = add i64 %146, 1
  store i64 %147, i64* %13, align 8
  %148 = load i64, i64* %34, align 8
  %149 = icmp ult i64 %147, %148
  br i1 %149, label %115, label %150

150:                                              ; preds = %144, %115, %115, %115, %109
  %151 = phi i64 [ %113, %109 ], [ %148, %144 ], [ %116, %115 ], [ %116, %115 ], [ %116, %115 ]
  %152 = phi i64 [ %112, %109 ], [ %147, %144 ], [ %117, %115 ], [ %117, %115 ], [ %117, %115 ]
  switch i32 %85, label %155 [
    i32 4, label %206
    i32 3, label %206
    i32 1, label %153
  ]

153:                                              ; preds = %150
  %154 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %40, align 8, !noalias !63
  br label %181

155:                                              ; preds = %150
  %156 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %40, align 8, !noalias !66
  %157 = icmp eq %"class.fxcrt::StringDataTemplate"* %156, null
  %158 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %156, i64 0, i32 3
  %159 = select i1 %157, [1 x i32]* @.str.15, [1 x i32]* %158
  br i1 %157, label %180, label %160

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %156, i64 0, i32 1
  %162 = load i64, i64* %161, align 8, !noalias !66
  %163 = icmp eq i64 %162, 4
  br i1 %163, label %171, label %180

164:                                              ; preds = %171
  %165 = getelementptr inbounds [1 x i32], [1 x i32]* %159, i64 0, i64 1
  %166 = load i32, i32* %165, align 4
  %167 = add i32 %166, -1
  %168 = icmp ule i32 %167, 126
  %169 = icmp eq i32 %166, 97
  %170 = and i1 %168, %169
  br i1 %170, label %477, label %180

171:                                              ; preds = %160
  %172 = getelementptr inbounds [1 x i32], [1 x i32]* %159, i64 0, i64 0
  %173 = load i32, i32* %172, align 4
  %174 = add i32 %173, -1
  %175 = icmp ule i32 %174, 126
  %176 = icmp eq i32 %173, 100
  %177 = and i1 %175, %176
  br i1 %177, label %164, label %180

178:                                              ; preds = %491
  br label %229

179:                                              ; preds = %491
  br label %229

180:                                              ; preds = %484, %477, %164, %171, %155, %160
  br i1 %91, label %206, label %181

181:                                              ; preds = %153, %180
  %182 = phi %"class.fxcrt::StringDataTemplate"* [ %154, %153 ], [ %156, %180 ]
  %183 = icmp eq %"class.fxcrt::StringDataTemplate"* %182, null
  %184 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %182, i64 0, i32 3
  %185 = select i1 %183, [1 x i32]* @.str.15, [1 x i32]* %184
  br i1 %183, label %206, label %186

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %182, i64 0, i32 1
  %188 = load i64, i64* %187, align 8, !noalias !63
  %189 = icmp eq i64 %188, 4
  br i1 %189, label %197, label %206

190:                                              ; preds = %197
  %191 = getelementptr inbounds [1 x i32], [1 x i32]* %185, i64 0, i64 1
  %192 = load i32, i32* %191, align 4
  %193 = add i32 %192, -1
  %194 = icmp ule i32 %193, 126
  %195 = icmp eq i32 %192, 105
  %196 = and i1 %194, %195
  br i1 %196, label %492, label %206

197:                                              ; preds = %186
  %198 = getelementptr inbounds [1 x i32], [1 x i32]* %185, i64 0, i64 0
  %199 = load i32, i32* %198, align 4
  %200 = add i32 %199, -1
  %201 = icmp ule i32 %200, 126
  %202 = icmp eq i32 %199, 116
  %203 = and i1 %201, %202
  br i1 %203, label %190, label %206

204:                                              ; preds = %506
  br label %229

205:                                              ; preds = %506
  br label %229

206:                                              ; preds = %499, %492, %190, %197, %181, %180, %150, %150, %186
  %207 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %40, align 8, !noalias !69
  %208 = icmp eq %"class.fxcrt::StringDataTemplate"* %207, null
  %209 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %207, i64 0, i32 3
  %210 = select i1 %208, [1 x i32]* @.str.15, [1 x i32]* %209
  br i1 %208, label %412, label %211

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %207, i64 0, i32 1
  %213 = load i64, i64* %212, align 8, !noalias !69
  %214 = icmp eq i64 %213, 8
  br i1 %214, label %222, label %412

215:                                              ; preds = %222
  %216 = getelementptr inbounds [1 x i32], [1 x i32]* %210, i64 0, i64 1
  %217 = load i32, i32* %216, align 4
  %218 = add i32 %217, -1
  %219 = icmp ule i32 %218, 126
  %220 = icmp eq i32 %217, 97
  %221 = and i1 %219, %220
  br i1 %221, label %507, label %412

222:                                              ; preds = %211
  %223 = getelementptr inbounds [1 x i32], [1 x i32]* %210, i64 0, i64 0
  %224 = load i32, i32* %223, align 4
  %225 = add i32 %224, -1
  %226 = icmp ule i32 %225, 126
  %227 = icmp eq i32 %224, 100
  %228 = and i1 %226, %227
  br i1 %228, label %215, label %412

229:                                              ; preds = %542, %205, %204, %506, %179, %178, %491
  %230 = phi i32 [ %85, %179 ], [ 4, %178 ], [ 1, %491 ], [ %85, %205 ], [ 3, %204 ], [ 2, %506 ], [ 3, %542 ]
  %231 = phi i32 [ 1, %179 ], [ 1, %178 ], [ 1, %491 ], [ 2, %205 ], [ 2, %204 ], [ 2, %506 ], [ 3, %542 ]
  %232 = icmp ult i64 %152, %151
  br i1 %232, label %233, label %410

233:                                              ; preds = %229, %402
  %234 = phi i64 [ %403, %402 ], [ %152, %229 ]
  %235 = load i32*, i32** %38, align 8
  %236 = getelementptr inbounds i32, i32* %235, i64 %234
  %237 = load i32, i32* %236, align 4
  switch i32 %237, label %406 [
    i32 123, label %410
    i32 40, label %238
    i32 46, label %262
  ]

238:                                              ; preds = %233
  %239 = add nuw i64 %234, 1
  store i64 %239, i64* %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %75, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %20) #13
  %240 = load i64, i64* %13, align 8
  %241 = load i64, i64* %34, align 8
  %242 = icmp ult i64 %240, %241
  br i1 %242, label %243, label %256

243:                                              ; preds = %238, %249
  %244 = phi i64 [ %253, %249 ], [ %240, %238 ]
  %245 = load i32*, i32** %38, align 8
  %246 = getelementptr inbounds i32, i32* %245, i64 %244
  %247 = load i32, i32* %246, align 4
  %248 = icmp eq i32 %247, 41
  br i1 %248, label %256, label %249

249:                                              ; preds = %243
  %250 = add nuw i64 %244, 1
  store i64 %250, i64* %13, align 8
  %251 = load i32, i32* %246, align 4
  %252 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %20, i32 signext %251) #13
  %253 = load i64, i64* %13, align 8
  %254 = load i64, i64* %34, align 8
  %255 = icmp ult i64 %253, %254
  br i1 %255, label %243, label %256

256:                                              ; preds = %249, %243, %238
  %257 = load %class.LocaleIface* (%class.LocaleMgrIface*, %"class.fxcrt::WideString"*)**, %class.LocaleIface* (%class.LocaleMgrIface*, %"class.fxcrt::WideString"*)*** %76, align 8
  %258 = getelementptr inbounds %class.LocaleIface* (%class.LocaleMgrIface*, %"class.fxcrt::WideString"*)*, %class.LocaleIface* (%class.LocaleMgrIface*, %"class.fxcrt::WideString"*)** %257, i64 3
  %259 = load %class.LocaleIface* (%class.LocaleMgrIface*, %"class.fxcrt::WideString"*)*, %class.LocaleIface* (%class.LocaleMgrIface*, %"class.fxcrt::WideString"*)** %258, align 8
  %260 = call %class.LocaleIface* %259(%class.LocaleMgrIface* %1, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %20) #13
  store %class.LocaleIface* %260, %class.LocaleIface** %2, align 8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #13
  %261 = load i64, i64* %13, align 8
  br label %406

262:                                              ; preds = %233
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %42, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %21) #13
  %263 = load i64, i64* %13, align 8
  %264 = add i64 %263, 1
  store i64 %264, i64* %13, align 8
  %265 = load i64, i64* %34, align 8
  %266 = icmp ult i64 %264, %265
  br i1 %266, label %267, label %279

267:                                              ; preds = %262, %272
  %268 = phi i64 [ %276, %272 ], [ %264, %262 ]
  %269 = load i32*, i32** %38, align 8
  %270 = getelementptr inbounds i32, i32* %269, i64 %268
  %271 = load i32, i32* %270, align 4
  switch i32 %271, label %272 [
    i32 40, label %279
    i32 123, label %279
  ]

272:                                              ; preds = %267
  %273 = add nuw i64 %268, 1
  store i64 %273, i64* %13, align 8
  %274 = load i32, i32* %270, align 4
  %275 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %21, i32 signext %274) #13
  %276 = load i64, i64* %13, align 8
  %277 = load i64, i64* %34, align 8
  %278 = icmp ult i64 %276, %277
  br i1 %278, label %267, label %279

279:                                              ; preds = %272, %267, %267, %262
  %280 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %42, align 8, !noalias !72
  %281 = icmp eq %"class.fxcrt::StringDataTemplate"* %280, null
  %282 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %280, i64 0, i32 3
  %283 = select i1 %281, [1 x i32]* @.str.15, [1 x i32]* %282
  %284 = getelementptr inbounds [1 x i32], [1 x i32]* %283, i64 0, i64 0
  br i1 %281, label %288, label %285

285:                                              ; preds = %279
  %286 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %280, i64 0, i32 1
  %287 = load i64, i64* %286, align 8, !noalias !72
  br label %288

288:                                              ; preds = %279, %285
  %289 = phi i64 [ %287, %285 ], [ 0, %279 ]
  store i32* %284, i32** %43, align 8, !alias.scope !72
  store i64 %289, i64* %44, align 8, !alias.scope !72
  %290 = call i32 @_Z16FX_HashCode_GetWN5fxcrt18StringViewTemplateIwEEb(%"class.fxcrt::StringViewTemplate"* nonnull %22, i1 zeroext false) #13
  switch i32 %290, label %299 [
    i32 349839653, label %295
    i32 -1874733904, label %291
    i32 -1601920127, label %292
    i32 -842115405, label %293
    i32 -155930704, label %294
  ]

291:                                              ; preds = %288
  br label %295

292:                                              ; preds = %288
  br label %295

293:                                              ; preds = %288
  br label %295

294:                                              ; preds = %288
  br label %295

295:                                              ; preds = %288, %294, %293, %292, %291
  %296 = phi %"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash"* [ getelementptr inbounds ([5 x %"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash"], [5 x %"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash"]* @_ZN12_GLOBAL__N_130kLocaleDateTimeSubcategoryDataE, i64 0, i64 0), %288 ], [ getelementptr inbounds ([5 x %"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash"], [5 x %"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash"]* @_ZN12_GLOBAL__N_130kLocaleDateTimeSubcategoryDataE, i64 0, i64 1), %291 ], [ getelementptr inbounds ([5 x %"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash"], [5 x %"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash"]* @_ZN12_GLOBAL__N_130kLocaleDateTimeSubcategoryDataE, i64 0, i64 2), %292 ], [ getelementptr inbounds ([5 x %"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash"], [5 x %"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash"]* @_ZN12_GLOBAL__N_130kLocaleDateTimeSubcategoryDataE, i64 0, i64 3), %293 ], [ getelementptr inbounds ([5 x %"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash"], [5 x %"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash"]* @_ZN12_GLOBAL__N_130kLocaleDateTimeSubcategoryDataE, i64 0, i64 4), %294 ]
  %297 = getelementptr inbounds %"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash", %"struct.(anonymous namespace)::LocaleDateTimeSubcategoryWithHash"* %296, i64 0, i32 1
  %298 = load i32, i32* %297, align 4
  br label %299

299:                                              ; preds = %288, %295
  %300 = phi i32 [ %298, %295 ], [ 2, %288 ]
  %301 = load %class.LocaleIface*, %class.LocaleIface** %2, align 8
  %302 = icmp eq %class.LocaleIface* %301, null
  br i1 %302, label %303, label %308

303:                                              ; preds = %299
  %304 = load %class.LocaleIface* (%class.LocaleMgrIface*)**, %class.LocaleIface* (%class.LocaleMgrIface*)*** %45, align 8
  %305 = getelementptr inbounds %class.LocaleIface* (%class.LocaleMgrIface*)*, %class.LocaleIface* (%class.LocaleMgrIface*)** %304, i64 2
  %306 = load %class.LocaleIface* (%class.LocaleMgrIface*)*, %class.LocaleIface* (%class.LocaleMgrIface*)** %305, align 8
  %307 = call %class.LocaleIface* %306(%class.LocaleMgrIface* %1) #13
  store %class.LocaleIface* %307, %class.LocaleIface** %2, align 8
  br label %308

308:                                              ; preds = %299, %303
  %309 = phi %class.LocaleIface* [ %301, %299 ], [ %307, %303 ]
  switch i32 %231, label %396 [
    i32 1, label %310
    i32 2, label %336
    i32 3, label %362
  ]

310:                                              ; preds = %308
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #13
  %311 = bitcast %class.LocaleIface* %309 to void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)***
  %312 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)*** %311, align 8
  %313 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)** %312, i64 14
  %314 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)** %313, align 8
  call void %314(%"class.fxcrt::WideString"* nonnull sret %24, %class.LocaleIface* %309, i32 %300) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68)
  %315 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %31, align 8, !noalias !75
  %316 = icmp eq %"class.fxcrt::StringDataTemplate"* %315, null
  %317 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %315, i64 0, i32 3
  %318 = select i1 %316, [1 x i32]* @.str.15, [1 x i32]* %317
  %319 = getelementptr inbounds [1 x i32], [1 x i32]* %318, i64 0, i64 0
  br i1 %316, label %323, label %320

320:                                              ; preds = %310
  %321 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %315, i64 0, i32 1
  %322 = load i64, i64* %321, align 8, !noalias !80
  br label %323

323:                                              ; preds = %320, %310
  %324 = phi i64 [ %322, %320 ], [ 0, %310 ]
  store i32* %319, i32** %69, align 8, !alias.scope !80, !noalias !81
  store i64 %324, i64* %70, align 8, !alias.scope !80, !noalias !81
  %325 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %71, align 8, !noalias !82
  %326 = icmp eq %"class.fxcrt::StringDataTemplate"* %325, null
  %327 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %325, i64 0, i32 3
  %328 = select i1 %326, [1 x i32]* @.str.15, [1 x i32]* %327
  %329 = getelementptr inbounds [1 x i32], [1 x i32]* %328, i64 0, i64 0
  br i1 %326, label %333, label %330

330:                                              ; preds = %323
  %331 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %325, i64 0, i32 1
  %332 = load i64, i64* %331, align 8, !noalias !85
  br label %333

333:                                              ; preds = %323, %330
  %334 = phi i64 [ %332, %330 ], [ 0, %323 ]
  store i32* %329, i32** %72, align 8, !alias.scope !85, !noalias !81
  store i64 %334, i64* %73, align 8, !alias.scope !85, !noalias !81
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %23, %"class.fxcrt::StringViewTemplate"* nonnull %8, %"class.fxcrt::StringViewTemplate"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68)
  %335 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %23) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %23) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #13
  br label %394

336:                                              ; preds = %308
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #13
  %337 = bitcast %class.LocaleIface* %309 to void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)***
  %338 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)*** %337, align 8
  %339 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)** %338, i64 15
  %340 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)** %339, align 8
  call void %340(%"class.fxcrt::WideString"* nonnull sret %26, %class.LocaleIface* %309, i32 %300) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59)
  %341 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %31, align 8, !noalias !86
  %342 = icmp eq %"class.fxcrt::StringDataTemplate"* %341, null
  %343 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %341, i64 0, i32 3
  %344 = select i1 %342, [1 x i32]* @.str.15, [1 x i32]* %343
  %345 = getelementptr inbounds [1 x i32], [1 x i32]* %344, i64 0, i64 0
  br i1 %342, label %349, label %346

346:                                              ; preds = %336
  %347 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %341, i64 0, i32 1
  %348 = load i64, i64* %347, align 8, !noalias !91
  br label %349

349:                                              ; preds = %346, %336
  %350 = phi i64 [ %348, %346 ], [ 0, %336 ]
  store i32* %345, i32** %60, align 8, !alias.scope !91, !noalias !92
  store i64 %350, i64* %61, align 8, !alias.scope !91, !noalias !92
  %351 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %62, align 8, !noalias !93
  %352 = icmp eq %"class.fxcrt::StringDataTemplate"* %351, null
  %353 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %351, i64 0, i32 3
  %354 = select i1 %352, [1 x i32]* @.str.15, [1 x i32]* %353
  %355 = getelementptr inbounds [1 x i32], [1 x i32]* %354, i64 0, i64 0
  br i1 %352, label %359, label %356

356:                                              ; preds = %349
  %357 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %351, i64 0, i32 1
  %358 = load i64, i64* %357, align 8, !noalias !96
  br label %359

359:                                              ; preds = %349, %356
  %360 = phi i64 [ %358, %356 ], [ 0, %349 ]
  store i32* %355, i32** %63, align 8, !alias.scope !96, !noalias !92
  store i64 %360, i64* %64, align 8, !alias.scope !96, !noalias !92
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %25, %"class.fxcrt::StringViewTemplate"* nonnull %6, %"class.fxcrt::StringViewTemplate"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59)
  %361 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %4, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %25) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %25) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %26) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #13
  br label %394

362:                                              ; preds = %308
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  %363 = bitcast %class.LocaleIface* %309 to void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)***
  %364 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)*** %363, align 8
  %365 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)** %364, i64 14
  %366 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)** %365, align 8
  call void %366(%"class.fxcrt::WideString"* nonnull sret %28, %class.LocaleIface* %309, i32 %300) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49)
  %367 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %31, align 8, !noalias !97
  %368 = icmp eq %"class.fxcrt::StringDataTemplate"* %367, null
  %369 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %367, i64 0, i32 3
  %370 = select i1 %368, [1 x i32]* @.str.15, [1 x i32]* %369
  %371 = getelementptr inbounds [1 x i32], [1 x i32]* %370, i64 0, i64 0
  br i1 %368, label %375, label %372

372:                                              ; preds = %362
  %373 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %367, i64 0, i32 1
  %374 = load i64, i64* %373, align 8, !noalias !102
  br label %375

375:                                              ; preds = %372, %362
  %376 = phi i64 [ %374, %372 ], [ 0, %362 ]
  store i32* %371, i32** %50, align 8, !alias.scope !102, !noalias !103
  store i64 %376, i64* %51, align 8, !alias.scope !102, !noalias !103
  %377 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %52, align 8, !noalias !104
  %378 = icmp eq %"class.fxcrt::StringDataTemplate"* %377, null
  %379 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %377, i64 0, i32 3
  %380 = select i1 %378, [1 x i32]* @.str.15, [1 x i32]* %379
  %381 = getelementptr inbounds [1 x i32], [1 x i32]* %380, i64 0, i64 0
  br i1 %378, label %385, label %382

382:                                              ; preds = %375
  %383 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %377, i64 0, i32 1
  %384 = load i64, i64* %383, align 8, !noalias !107
  br label %385

385:                                              ; preds = %375, %382
  %386 = phi i64 [ %384, %382 ], [ 0, %375 ]
  store i32* %381, i32** %53, align 8, !alias.scope !107, !noalias !103
  store i64 %386, i64* %54, align 8, !alias.scope !107, !noalias !103
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %27, %"class.fxcrt::StringViewTemplate"* nonnull %10, %"class.fxcrt::StringViewTemplate"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49)
  %387 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %27) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %27) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  %388 = load %class.LocaleIface*, %class.LocaleIface** %2, align 8
  %389 = bitcast %class.LocaleIface* %388 to void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)***
  %390 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)*** %389, align 8
  %391 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)** %390, i64 15
  %392 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32)** %391, align 8
  call void %392(%"class.fxcrt::WideString"* nonnull sret %29, %class.LocaleIface* %388, i32 %300) #13
  %393 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %4, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %29) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %29) #13
  br label %394

394:                                              ; preds = %333, %359, %385
  %395 = phi i8* [ %55, %385 ], [ %56, %359 ], [ %65, %333 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %395) #13
  br label %396

396:                                              ; preds = %394, %308
  %397 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %31, align 8
  store %"class.fxcrt::StringDataTemplate"* null, %"class.fxcrt::StringDataTemplate"** %31, align 8
  %398 = icmp eq %"class.fxcrt::StringDataTemplate"* %397, null
  br i1 %398, label %400, label %399

399:                                              ; preds = %396
  call void @_ZN5fxcrt18StringDataTemplateIwE7ReleaseEv(%"class.fxcrt::StringDataTemplate"* nonnull %397) #13
  br label %400

400:                                              ; preds = %396, %399
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #13
  %401 = load i64, i64* %13, align 8
  br label %402

402:                                              ; preds = %400, %406
  %403 = phi i64 [ %401, %400 ], [ %408, %406 ]
  %404 = load i64, i64* %34, align 8
  %405 = icmp ult i64 %403, %404
  br i1 %405, label %233, label %410

406:                                              ; preds = %233, %256
  %407 = phi i64 [ %234, %233 ], [ %261, %256 ]
  %408 = add i64 %407, 1
  store i64 %408, i64* %13, align 8
  br label %402

409:                                              ; preds = %132, %139
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  br label %475

410:                                              ; preds = %402, %233, %229
  %411 = phi i8 [ %84, %229 ], [ 1, %233 ], [ %84, %402 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  br label %433

412:                                              ; preds = %542, %535, %528, %521, %514, %507, %215, %222, %206, %211
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  %413 = load i64, i64* %13, align 8
  %414 = load i64, i64* %34, align 8
  %415 = icmp ult i64 %413, %414
  br i1 %415, label %92, label %441

416:                                              ; preds = %107
  %417 = icmp eq i32 %96, 125
  br i1 %417, label %418, label %431

418:                                              ; preds = %416
  %419 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %31, align 8
  %420 = icmp eq %"class.fxcrt::StringDataTemplate"* %419, null
  br i1 %420, label %433, label %421

421:                                              ; preds = %418
  %422 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %419, i64 0, i32 1
  %423 = load i64, i64* %422, align 8
  %424 = icmp eq i64 %423, 0
  br i1 %424, label %433, label %425

425:                                              ; preds = %421
  switch i32 %83, label %430 [
    i32 2, label %426
    i32 1, label %428
  ]

426:                                              ; preds = %425
  %427 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %4, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %12) #13
  br label %433

428:                                              ; preds = %425
  %429 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %12) #13
  br label %433

430:                                              ; preds = %425
  store %"class.fxcrt::StringDataTemplate"* null, %"class.fxcrt::StringDataTemplate"** %31, align 8
  call void @_ZN5fxcrt18StringDataTemplateIwE7ReleaseEv(%"class.fxcrt::StringDataTemplate"* nonnull %419) #13
  br label %433

431:                                              ; preds = %108, %108, %108, %108, %108, %108, %108, %416
  %432 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %12, i32 signext %96) #13
  br label %433

433:                                              ; preds = %418, %410, %421, %428, %430, %426, %431, %98
  %434 = phi i32 [ %85, %98 ], [ %85, %421 ], [ %85, %426 ], [ %85, %428 ], [ %85, %430 ], [ %85, %431 ], [ %230, %410 ], [ %85, %418 ]
  %435 = phi i8 [ %84, %98 ], [ 0, %421 ], [ 0, %426 ], [ 0, %428 ], [ 0, %430 ], [ %84, %431 ], [ %411, %410 ], [ 0, %418 ]
  %436 = phi i32 [ %83, %98 ], [ %83, %421 ], [ 2, %426 ], [ 1, %428 ], [ %83, %430 ], [ %83, %431 ], [ %231, %410 ], [ %83, %418 ]
  %437 = load i64, i64* %13, align 8
  %438 = add i64 %437, 1
  store i64 %438, i64* %13, align 8
  %439 = load i64, i64* %34, align 8
  %440 = icmp ult i64 %438, %439
  br i1 %440, label %81, label %441

441:                                              ; preds = %433, %412, %5
  %442 = phi i32 [ 0, %5 ], [ %85, %412 ], [ %434, %433 ]
  %443 = phi i32 [ 0, %5 ], [ %83, %412 ], [ %436, %433 ]
  %444 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %31, align 8
  %445 = icmp eq %"class.fxcrt::StringDataTemplate"* %444, null
  br i1 %445, label %456, label %446

446:                                              ; preds = %441
  %447 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %444, i64 0, i32 1
  %448 = load i64, i64* %447, align 8
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %456, label %450

450:                                              ; preds = %446
  %451 = icmp eq i32 %443, 1
  br i1 %451, label %452, label %454

452:                                              ; preds = %450
  %453 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %12) #13
  br label %456

454:                                              ; preds = %450
  %455 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %4, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %12) #13
  br label %456

456:                                              ; preds = %441, %452, %454, %446
  %457 = load %class.LocaleIface*, %class.LocaleIface** %2, align 8
  %458 = icmp eq %class.LocaleIface* %457, null
  br i1 %458, label %459, label %465

459:                                              ; preds = %456
  %460 = bitcast %class.LocaleMgrIface* %1 to %class.LocaleIface* (%class.LocaleMgrIface*)***
  %461 = load %class.LocaleIface* (%class.LocaleMgrIface*)**, %class.LocaleIface* (%class.LocaleMgrIface*)*** %460, align 8
  %462 = getelementptr inbounds %class.LocaleIface* (%class.LocaleMgrIface*)*, %class.LocaleIface* (%class.LocaleMgrIface*)** %461, i64 2
  %463 = load %class.LocaleIface* (%class.LocaleMgrIface*)*, %class.LocaleIface* (%class.LocaleMgrIface*)** %462, align 8
  %464 = call %class.LocaleIface* %463(%class.LocaleMgrIface* %1) #13
  store %class.LocaleIface* %464, %class.LocaleIface** %2, align 8
  br label %465

465:                                              ; preds = %456, %459
  %466 = icmp eq i32 %442, 0
  br i1 %466, label %467, label %475

467:                                              ; preds = %465
  %468 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %469 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %468, align 8
  store %"class.fxcrt::StringDataTemplate"* null, %"class.fxcrt::StringDataTemplate"** %468, align 8
  %470 = icmp eq %"class.fxcrt::StringDataTemplate"* %469, null
  br i1 %470, label %472, label %471

471:                                              ; preds = %467
  call void @_ZN5fxcrt18StringDataTemplateIwE7ReleaseEv(%"class.fxcrt::StringDataTemplate"* nonnull %469) #13
  br label %472

472:                                              ; preds = %467, %471
  %473 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 0
  %474 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* dereferenceable(8) %473) #13
  br label %475

475:                                              ; preds = %409, %465, %472
  %476 = phi i32 [ 0, %472 ], [ %442, %465 ], [ 3, %409 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  ret i32 %476

477:                                              ; preds = %164
  %478 = getelementptr inbounds [1 x i32], [1 x i32]* %159, i64 0, i64 2
  %479 = load i32, i32* %478, align 4
  %480 = add i32 %479, -1
  %481 = icmp ule i32 %480, 126
  %482 = icmp eq i32 %479, 116
  %483 = and i1 %481, %482
  br i1 %483, label %484, label %180

484:                                              ; preds = %477
  %485 = getelementptr inbounds [1 x i32], [1 x i32]* %159, i64 0, i64 3
  %486 = load i32, i32* %485, align 4
  %487 = add i32 %486, -1
  %488 = icmp ule i32 %487, 126
  %489 = icmp eq i32 %486, 101
  %490 = and i1 %488, %489
  br i1 %490, label %491, label %180

491:                                              ; preds = %484
  switch i32 %85, label %179 [
    i32 0, label %229
    i32 2, label %178
  ]

492:                                              ; preds = %190
  %493 = getelementptr inbounds [1 x i32], [1 x i32]* %185, i64 0, i64 2
  %494 = load i32, i32* %493, align 4
  %495 = add i32 %494, -1
  %496 = icmp ule i32 %495, 126
  %497 = icmp eq i32 %494, 109
  %498 = and i1 %496, %497
  br i1 %498, label %499, label %206

499:                                              ; preds = %492
  %500 = getelementptr inbounds [1 x i32], [1 x i32]* %185, i64 0, i64 3
  %501 = load i32, i32* %500, align 4
  %502 = add i32 %501, -1
  %503 = icmp ule i32 %502, 126
  %504 = icmp eq i32 %501, 101
  %505 = and i1 %503, %504
  br i1 %505, label %506, label %206

506:                                              ; preds = %499
  switch i32 %85, label %205 [
    i32 0, label %229
    i32 1, label %204
  ]

507:                                              ; preds = %215
  %508 = getelementptr inbounds [1 x i32], [1 x i32]* %210, i64 0, i64 2
  %509 = load i32, i32* %508, align 4
  %510 = add i32 %509, -1
  %511 = icmp ule i32 %510, 126
  %512 = icmp eq i32 %509, 116
  %513 = and i1 %511, %512
  br i1 %513, label %514, label %412

514:                                              ; preds = %507
  %515 = getelementptr inbounds [1 x i32], [1 x i32]* %210, i64 0, i64 3
  %516 = load i32, i32* %515, align 4
  %517 = add i32 %516, -1
  %518 = icmp ule i32 %517, 126
  %519 = icmp eq i32 %516, 101
  %520 = and i1 %518, %519
  br i1 %520, label %521, label %412

521:                                              ; preds = %514
  %522 = getelementptr inbounds [1 x i32], [1 x i32]* %210, i64 0, i64 4
  %523 = load i32, i32* %522, align 4
  %524 = add i32 %523, -1
  %525 = icmp ule i32 %524, 126
  %526 = icmp eq i32 %523, 116
  %527 = and i1 %525, %526
  br i1 %527, label %528, label %412

528:                                              ; preds = %521
  %529 = getelementptr inbounds [1 x i32], [1 x i32]* %210, i64 0, i64 5
  %530 = load i32, i32* %529, align 4
  %531 = add i32 %530, -1
  %532 = icmp ule i32 %531, 126
  %533 = icmp eq i32 %530, 105
  %534 = and i1 %532, %533
  br i1 %534, label %535, label %412

535:                                              ; preds = %528
  %536 = getelementptr inbounds [1 x i32], [1 x i32]* %210, i64 0, i64 6
  %537 = load i32, i32* %536, align 4
  %538 = add i32 %537, -1
  %539 = icmp ule i32 %538, 126
  %540 = icmp eq i32 %537, 109
  %541 = and i1 %539, %540
  br i1 %541, label %542, label %412

542:                                              ; preds = %535
  %543 = getelementptr inbounds [1 x i32], [1 x i32]* %210, i64 0, i64 7
  %544 = load i32, i32* %543, align 4
  %545 = add i32 %544, -1
  %546 = icmp ule i32 %545, 126
  %547 = icmp eq i32 %544, 101
  %548 = and i1 %546, %547
  br i1 %548, label %229, label %412
}

declare void @_ZNK5fxcrt10WideString5FirstEm(%"class.fxcrt::WideString"* sret, %"class.fxcrt::WideString"*, i64) local_unnamed_addr #2

declare void @_ZNK5fxcrt10WideString4LastEm(%"class.fxcrt::WideString"* sret, %"class.fxcrt::WideString"*, i64) local_unnamed_addr #2

declare void @_ZN5fxcrt10WideString5SetAtEmw(%"class.fxcrt::WideString"*, i64, i32 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK21CFGAS_StringFormatter13ParseDateTimeEP14LocaleMgrIfaceRKN5fxcrt10WideStringENS_12DateTimeTypeEP12CFX_DateTime(%class.CFGAS_StringFormatter*, %class.LocaleMgrIface*, %"class.fxcrt::WideString"* nocapture readonly dereferenceable(8), i32, %class.CFX_DateTime* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.LocaleIface*, align 8
  %7 = alloca %"class.fxcrt::WideString", align 8
  %8 = alloca %"class.fxcrt::WideString", align 8
  %9 = alloca i64, align 8
  %10 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %4, i64 0, i32 6
  store i16 0, i16* %10, align 2
  %11 = bitcast %class.CFX_DateTime* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 9, i1 false) #13
  %12 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %12, align 8
  %14 = icmp eq %"class.fxcrt::StringDataTemplate"* %13, null
  br i1 %14, label %52, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %13, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %52, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 1, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %52, label %23

23:                                               ; preds = %19
  %24 = bitcast %class.LocaleIface** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  store %class.LocaleIface* null, %class.LocaleIface** %6, align 8
  %25 = bitcast %"class.fxcrt::WideString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  %26 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %26, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %7) #13
  %27 = bitcast %"class.fxcrt::WideString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %28, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %8) #13
  %29 = call i32 @_ZNK21CFGAS_StringFormatter17GetDateTimeFormatEP14LocaleMgrIfacePP11LocaleIfacePN5fxcrt10WideStringES7_(%class.CFGAS_StringFormatter* %0, %class.LocaleMgrIface* %1, %class.LocaleIface** nonnull %6, %"class.fxcrt::WideString"* nonnull %7, %"class.fxcrt::WideString"* nonnull %8)
  %30 = load %class.LocaleIface*, %class.LocaleIface** %6, align 8
  %31 = icmp eq %class.LocaleIface* %30, null
  br i1 %31, label %50, label %32

32:                                               ; preds = %23
  %33 = icmp eq i32 %29, 0
  %34 = select i1 %33, i32 %3, i32 %29
  %35 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  store i64 0, i64* %9, align 8
  switch i32 %34, label %48 [
    i32 1, label %36
    i32 2, label %38
    i32 3, label %40
    i32 4, label %44
  ]

36:                                               ; preds = %32
  %37 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_115ParseLocaleDateERKN5fxcrt10WideStringES3_P11LocaleIfaceP12CFX_DateTimePm(%"class.fxcrt::WideString"* dereferenceable(8) %2, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %7, %class.LocaleIface* nonnull %30, %class.CFX_DateTime* %4, i64* nonnull %9)
  br label %48

38:                                               ; preds = %32
  %39 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_115ParseLocaleTimeERKN5fxcrt10WideStringES3_P11LocaleIfaceP12CFX_DateTimePm(%"class.fxcrt::WideString"* dereferenceable(8) %2, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %8, %class.LocaleIface* nonnull %30, %class.CFX_DateTime* %4, i64* nonnull %9)
  br label %48

40:                                               ; preds = %32
  %41 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_115ParseLocaleDateERKN5fxcrt10WideStringES3_P11LocaleIfaceP12CFX_DateTimePm(%"class.fxcrt::WideString"* dereferenceable(8) %2, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %8, %class.LocaleIface* nonnull %30, %class.CFX_DateTime* %4, i64* nonnull %9)
  br i1 %41, label %42, label %48

42:                                               ; preds = %40
  %43 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_115ParseLocaleTimeERKN5fxcrt10WideStringES3_P11LocaleIfaceP12CFX_DateTimePm(%"class.fxcrt::WideString"* dereferenceable(8) %2, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %7, %class.LocaleIface* nonnull %30, %class.CFX_DateTime* %4, i64* nonnull %9)
  br label %48

44:                                               ; preds = %32
  %45 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_115ParseLocaleTimeERKN5fxcrt10WideStringES3_P11LocaleIfaceP12CFX_DateTimePm(%"class.fxcrt::WideString"* dereferenceable(8) %2, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %8, %class.LocaleIface* nonnull %30, %class.CFX_DateTime* %4, i64* nonnull %9)
  br i1 %45, label %46, label %48

46:                                               ; preds = %44
  %47 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_115ParseLocaleDateERKN5fxcrt10WideStringES3_P11LocaleIfaceP12CFX_DateTimePm(%"class.fxcrt::WideString"* dereferenceable(8) %2, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %7, %class.LocaleIface* nonnull %30, %class.CFX_DateTime* %4, i64* nonnull %9)
  br label %48

48:                                               ; preds = %32, %44, %46, %40, %42, %38, %36
  %49 = phi i1 [ %39, %38 ], [ %37, %36 ], [ false, %40 ], [ %43, %42 ], [ false, %44 ], [ %47, %46 ], [ false, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  br label %50

50:                                               ; preds = %23, %48
  %51 = phi i1 [ %49, %48 ], [ false, %23 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  br label %52

52:                                               ; preds = %5, %15, %19, %50
  %53 = phi i1 [ %51, %50 ], [ false, %19 ], [ false, %15 ], [ false, %5 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_115ParseLocaleDateERKN5fxcrt10WideStringES3_P11LocaleIfaceP12CFX_DateTimePm(%"class.fxcrt::WideString"* nocapture readonly dereferenceable(8), %"class.fxcrt::WideString"* nocapture readonly dereferenceable(8), %class.LocaleIface*, %class.CFX_DateTime* nocapture, i64*) unnamed_addr #0 {
  %6 = alloca i64, align 8
  %7 = alloca %"class.fxcrt::WideString", align 8
  %8 = alloca %"class.pdfium::span", align 8
  %9 = alloca %"class.fxcrt::WideString", align 8
  %10 = alloca %"class.fxcrt::WideString", align 8
  %11 = alloca %"class.fxcrt::WideString", align 8
  %12 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  store i64 0, i64* %6, align 8
  %13 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %13, align 8, !noalias !108
  %15 = icmp eq %"class.fxcrt::StringDataTemplate"* %14, null
  %16 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %14, i64 0, i32 3, i64 0
  br i1 %15, label %20, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %14, i64 0, i32 1
  %19 = load i64, i64* %18, align 8, !noalias !108
  br label %20

20:                                               ; preds = %5, %17
  %21 = phi i64 [ %19, %17 ], [ 0, %5 ]
  %22 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %22, align 8, !noalias !111
  %24 = icmp eq %"class.fxcrt::StringDataTemplate"* %23, null
  %25 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %23, i64 0, i32 3, i64 0
  br i1 %24, label %29, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %23, i64 0, i32 1
  %28 = load i64, i64* %27, align 8, !noalias !111
  br label %29

29:                                               ; preds = %20, %26
  %30 = phi i64 [ %28, %26 ], [ 0, %20 ]
  %31 = ptrtoint i32* %25 to i64
  %32 = select i1 %24, i64 0, i64 %31
  %33 = load i64, i64* %4, align 8
  %34 = icmp ult i64 %33, %21
  br i1 %34, label %35, label %718

35:                                               ; preds = %29
  %36 = inttoptr i64 %32 to i32*
  %37 = bitcast %"class.fxcrt::WideString"* %7 to i8*
  %38 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.pdfium::span"* %8 to i64*
  %40 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %8, i64 0, i32 1
  %41 = select i1 %15, i32* null, i32* %16
  %42 = bitcast %"class.fxcrt::WideString"* %9 to i8*
  %43 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.fxcrt::WideString"* %10 to i8*
  %45 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = bitcast %class.LocaleIface* %2 to void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)***
  %47 = bitcast %"class.fxcrt::WideString"* %11 to i8*
  %48 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %49

49:                                               ; preds = %35, %711
  %50 = phi i64 [ 0, %35 ], [ %125, %711 ]
  %51 = phi i64 [ %33, %35 ], [ %715, %711 ]
  %52 = phi i32 [ 1900, %35 ], [ %714, %711 ]
  %53 = phi i32 [ 1, %35 ], [ %713, %711 ]
  %54 = phi i32 [ 1, %35 ], [ %712, %711 ]
  br label %55

55:                                               ; preds = %49, %94
  %56 = phi i64 [ %50, %49 ], [ %96, %94 ]
  %57 = phi i64 [ %51, %49 ], [ %95, %94 ]
  %58 = icmp ult i64 %56, %30
  br i1 %58, label %59, label %729

59:                                               ; preds = %55
  %60 = getelementptr inbounds i32, i32* %36, i64 %56
  %61 = load i32, i32* %60, align 4
  switch i32 %61, label %87 [
    i32 39, label %62
    i32 119, label %98
    i32 103, label %98
    i32 101, label %98
    i32 89, label %98
    i32 87, label %98
    i32 77, label %98
    i32 74, label %98
    i32 71, label %98
    i32 69, label %98
    i32 68, label %98
    i32 0, label %98
  ]

62:                                               ; preds = %59
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %38, align 8
  store i64 %32, i64* %39, align 8
  store i64 %30, i64* %40, align 8
  call fastcc void @_ZN12_GLOBAL__N_114GetLiteralTextEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %7, %"class.pdfium::span"* nonnull %8, i64* nonnull %6)
  %63 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %38, align 8
  %64 = icmp eq %"class.fxcrt::StringDataTemplate"* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %63, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  br label %68

68:                                               ; preds = %62, %65
  %69 = phi i64 [ %67, %65 ], [ 0, %62 ]
  %70 = load i64, i64* %4, align 8
  %71 = shl i64 %69, 32
  %72 = ashr exact i64 %71, 32
  %73 = add i64 %72, %70
  %74 = icmp ugt i64 %73, %21
  br i1 %74, label %86, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds i32, i32* %41, i64 %70
  %77 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %63, i64 0, i32 3
  %78 = select i1 %64, [1 x i32]* @.str.15, [1 x i32]* %77
  %79 = getelementptr inbounds [1 x i32], [1 x i32]* %78, i64 0, i64 0
  %80 = call i32 @wcsncmp(i32* %76, i32* %79, i64 %72) #15
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %75
  store i64 %73, i64* %4, align 8
  %83 = load i64, i64* %6, align 8
  %84 = add i64 %83, 1
  store i64 %84, i64* %6, align 8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #13
  %85 = load i64, i64* %4, align 8
  br label %94

86:                                               ; preds = %68, %75
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #13
  br label %729

87:                                               ; preds = %59
  %88 = getelementptr inbounds i32, i32* %41, i64 %57
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %61, %89
  br i1 %90, label %91, label %729

91:                                               ; preds = %87
  %92 = add nuw i64 %57, 1
  store i64 %92, i64* %4, align 8
  %93 = add nuw i64 %56, 1
  store i64 %93, i64* %6, align 8
  br label %94

94:                                               ; preds = %91, %82
  %95 = phi i64 [ %92, %91 ], [ %85, %82 ]
  %96 = phi i64 [ %93, %91 ], [ %84, %82 ]
  %97 = icmp ult i64 %95, %21
  br i1 %97, label %55, label %718

98:                                               ; preds = %59, %59, %59, %59, %59, %59, %59, %59, %59, %59, %59
  %99 = getelementptr inbounds i32, i32* %36, i64 %56
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %43, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %9) #13
  call void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"* nonnull %9, i64 4) #13
  %100 = add nuw i64 %56, 1
  store i64 %100, i64* %6, align 8
  %101 = load i32, i32* %99, align 4
  %102 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %9, i32 signext %101) #13
  %103 = icmp ult i64 %100, %30
  br i1 %103, label %104, label %124

104:                                              ; preds = %98, %119
  %105 = phi i64 [ %120, %119 ], [ %100, %98 ]
  %106 = getelementptr inbounds i32, i32* %36, i64 %105
  %107 = load i32, i32* %106, align 4
  %108 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %43, align 8
  %109 = icmp eq %"class.fxcrt::StringDataTemplate"* %108, null
  br i1 %109, label %114, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %108, i64 0, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %115, !prof !2

114:                                              ; preds = %110, %104
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !47
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !48
  unreachable

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %108, i64 0, i32 3, i64 0
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %107, %117
  br i1 %118, label %119, label %124

119:                                              ; preds = %115
  %120 = add i64 %105, 1
  store i64 %120, i64* %6, align 8
  %121 = load i32, i32* %106, align 4
  %122 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %9, i32 signext %121) #13
  %123 = icmp eq i64 %120, %30
  br i1 %123, label %124, label %104

124:                                              ; preds = %115, %119, %98
  %125 = phi i64 [ %100, %98 ], [ %105, %115 ], [ %30, %119 ]
  %126 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %43, align 8, !noalias !114
  %127 = icmp eq %"class.fxcrt::StringDataTemplate"* %126, null
  %128 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 3
  %129 = select i1 %127, [1 x i32]* @.str.15, [1 x i32]* %128
  br i1 %127, label %711, label %130

130:                                              ; preds = %124
  %131 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 1
  %132 = load i64, i64* %131, align 8, !noalias !114
  %133 = icmp eq i64 %132, 1
  br i1 %133, label %134, label %141

134:                                              ; preds = %130
  %135 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 0
  %136 = load i32, i32* %135, align 4
  %137 = add i32 %136, -1
  %138 = icmp ult i32 %137, 127
  %139 = icmp eq i32 %136, 68
  %140 = and i1 %138, %139
  br i1 %140, label %159, label %141

141:                                              ; preds = %134, %130
  %142 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 1
  %143 = load i64, i64* %142, align 8, !noalias !117
  %144 = icmp eq i64 %143, 2
  br i1 %144, label %152, label %214

145:                                              ; preds = %152
  %146 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 1
  %147 = load i32, i32* %146, align 4
  %148 = add i32 %147, -1
  %149 = icmp ule i32 %148, 126
  %150 = icmp eq i32 %147, 68
  %151 = and i1 %149, %150
  br i1 %151, label %159, label %213

152:                                              ; preds = %141
  %153 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 0
  %154 = load i32, i32* %153, align 4
  %155 = add i32 %154, -1
  %156 = icmp ule i32 %155, 126
  %157 = icmp eq i32 %154, 68
  %158 = and i1 %156, %157
  br i1 %158, label %145, label %213

159:                                              ; preds = %145, %134
  %160 = load i64, i64* %4, align 8
  %161 = icmp ult i64 %160, %21
  br i1 %161, label %162, label %717

162:                                              ; preds = %159
  %163 = getelementptr inbounds i32, i32* %41, i64 %160
  %164 = load i32, i32* %163, align 4
  %165 = icmp ugt i32 %164, 127
  br i1 %165, label %717, label %166

166:                                              ; preds = %162
  %167 = call i32 @iswdigit(i32 %164) #13
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %717, label %169

169:                                              ; preds = %166
  %170 = load i64, i64* %4, align 8
  %171 = add i64 %170, 1
  store i64 %171, i64* %4, align 8
  %172 = icmp ugt i64 %21, %170
  br i1 %172, label %174, label %173, !prof !17

173:                                              ; preds = %169
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

174:                                              ; preds = %169
  %175 = getelementptr inbounds i32, i32* %41, i64 %170
  %176 = load i32, i32* %175, align 4
  %177 = icmp ugt i32 %176, 127
  br i1 %177, label %184, label %178

178:                                              ; preds = %174
  %179 = call i32 @iswdigit(i32 %176) #13
  %180 = icmp eq i32 %179, 0
  %181 = add nsw i32 %176, -48
  %182 = select i1 %180, i32 0, i32 %181
  %183 = load i64, i64* %4, align 8
  br label %184

184:                                              ; preds = %178, %174
  %185 = phi i64 [ %183, %178 ], [ %171, %174 ]
  %186 = phi i32 [ %182, %178 ], [ 0, %174 ]
  %187 = icmp ult i64 %185, %21
  br i1 %187, label %188, label %711

188:                                              ; preds = %184
  %189 = getelementptr inbounds i32, i32* %41, i64 %185
  %190 = load i32, i32* %189, align 4
  %191 = icmp ugt i32 %190, 127
  br i1 %191, label %711, label %192

192:                                              ; preds = %188
  %193 = call i32 @iswdigit(i32 %190) #13
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %711, label %195

195:                                              ; preds = %192
  %196 = mul i32 %186, 10
  %197 = load i64, i64* %4, align 8
  %198 = add i64 %197, 1
  store i64 %198, i64* %4, align 8
  %199 = icmp ugt i64 %21, %197
  br i1 %199, label %201, label %200, !prof !17

200:                                              ; preds = %195
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

201:                                              ; preds = %195
  %202 = getelementptr inbounds i32, i32* %41, i64 %197
  %203 = load i32, i32* %202, align 4
  %204 = icmp ugt i32 %203, 127
  br i1 %204, label %210, label %205

205:                                              ; preds = %201
  %206 = call i32 @iswdigit(i32 %203) #13
  %207 = icmp eq i32 %206, 0
  %208 = add nsw i32 %203, -48
  %209 = select i1 %207, i32 0, i32 %208
  br label %210

210:                                              ; preds = %205, %201
  %211 = phi i32 [ %209, %205 ], [ 0, %201 ]
  %212 = add nsw i32 %211, %196
  br label %711

213:                                              ; preds = %145, %152
  br i1 %127, label %711, label %214

214:                                              ; preds = %141, %213
  %215 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 1
  %216 = load i64, i64* %215, align 8, !noalias !120
  %217 = icmp eq i64 %216, 1
  br i1 %217, label %221, label %250

218:                                              ; preds = %221
  %219 = load i64, i64* %4, align 8
  %220 = icmp ult i64 %219, %21
  br i1 %220, label %228, label %711

221:                                              ; preds = %214
  %222 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 0
  %223 = load i32, i32* %222, align 4
  %224 = add i32 %223, -1
  %225 = icmp ult i32 %224, 127
  %226 = icmp eq i32 %223, 74
  %227 = and i1 %225, %226
  br i1 %227, label %218, label %250

228:                                              ; preds = %218
  %229 = getelementptr inbounds i32, i32* %41, i64 %219
  %230 = load i32, i32* %229, align 4
  %231 = icmp ugt i32 %230, 127
  br i1 %231, label %711, label %232

232:                                              ; preds = %228
  %233 = call i32 @iswdigit(i32 %230) #13
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %711, label %235

235:                                              ; preds = %232
  %236 = load i64, i64* %4, align 8
  %237 = add i64 %236, 1
  store i64 %237, i64* %4, align 8
  %238 = icmp ugt i64 %21, %236
  br i1 %238, label %240, label %239, !prof !17

239:                                              ; preds = %759, %738, %235
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

240:                                              ; preds = %235
  %241 = getelementptr inbounds i32, i32* %41, i64 %236
  %242 = load i32, i32* %241, align 4
  %243 = icmp ugt i32 %242, 127
  br i1 %243, label %247, label %244

244:                                              ; preds = %240
  %245 = call i32 @iswdigit(i32 %242) #13
  %246 = load i64, i64* %4, align 8
  br label %247

247:                                              ; preds = %244, %240
  %248 = phi i64 [ %246, %244 ], [ %237, %240 ]
  %249 = icmp ult i64 %248, %21
  br i1 %249, label %731, label %711

250:                                              ; preds = %221, %214
  %251 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 1
  %252 = load i64, i64* %251, align 8, !noalias !123
  %253 = icmp eq i64 %252, 1
  br i1 %253, label %254, label %261

254:                                              ; preds = %250
  %255 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 0
  %256 = load i32, i32* %255, align 4
  %257 = add i32 %256, -1
  %258 = icmp ult i32 %257, 127
  %259 = icmp eq i32 %256, 77
  %260 = and i1 %258, %259
  br i1 %260, label %279, label %261

261:                                              ; preds = %254, %250
  %262 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 1
  %263 = load i64, i64* %262, align 8, !noalias !126
  %264 = icmp eq i64 %263, 2
  br i1 %264, label %272, label %334

265:                                              ; preds = %272
  %266 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 1
  %267 = load i32, i32* %266, align 4
  %268 = add i32 %267, -1
  %269 = icmp ule i32 %268, 126
  %270 = icmp eq i32 %267, 77
  %271 = and i1 %269, %270
  br i1 %271, label %279, label %333

272:                                              ; preds = %261
  %273 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 0
  %274 = load i32, i32* %273, align 4
  %275 = add i32 %274, -1
  %276 = icmp ule i32 %275, 126
  %277 = icmp eq i32 %274, 77
  %278 = and i1 %276, %277
  br i1 %278, label %265, label %333

279:                                              ; preds = %265, %254
  %280 = load i64, i64* %4, align 8
  %281 = icmp ult i64 %280, %21
  br i1 %281, label %282, label %717

282:                                              ; preds = %279
  %283 = getelementptr inbounds i32, i32* %41, i64 %280
  %284 = load i32, i32* %283, align 4
  %285 = icmp ugt i32 %284, 127
  br i1 %285, label %717, label %286

286:                                              ; preds = %282
  %287 = call i32 @iswdigit(i32 %284) #13
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %717, label %289

289:                                              ; preds = %286
  %290 = load i64, i64* %4, align 8
  %291 = add i64 %290, 1
  store i64 %291, i64* %4, align 8
  %292 = icmp ugt i64 %21, %290
  br i1 %292, label %294, label %293, !prof !17

293:                                              ; preds = %289
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

294:                                              ; preds = %289
  %295 = getelementptr inbounds i32, i32* %41, i64 %290
  %296 = load i32, i32* %295, align 4
  %297 = icmp ugt i32 %296, 127
  br i1 %297, label %304, label %298

298:                                              ; preds = %294
  %299 = call i32 @iswdigit(i32 %296) #13
  %300 = icmp eq i32 %299, 0
  %301 = add nsw i32 %296, -48
  %302 = select i1 %300, i32 0, i32 %301
  %303 = load i64, i64* %4, align 8
  br label %304

304:                                              ; preds = %298, %294
  %305 = phi i64 [ %303, %298 ], [ %291, %294 ]
  %306 = phi i32 [ %302, %298 ], [ 0, %294 ]
  %307 = icmp ult i64 %305, %21
  br i1 %307, label %308, label %711

308:                                              ; preds = %304
  %309 = getelementptr inbounds i32, i32* %41, i64 %305
  %310 = load i32, i32* %309, align 4
  %311 = icmp ugt i32 %310, 127
  br i1 %311, label %711, label %312

312:                                              ; preds = %308
  %313 = call i32 @iswdigit(i32 %310) #13
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %711, label %315

315:                                              ; preds = %312
  %316 = mul i32 %306, 10
  %317 = load i64, i64* %4, align 8
  %318 = add i64 %317, 1
  store i64 %318, i64* %4, align 8
  %319 = icmp ugt i64 %21, %317
  br i1 %319, label %321, label %320, !prof !17

320:                                              ; preds = %315
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

321:                                              ; preds = %315
  %322 = getelementptr inbounds i32, i32* %41, i64 %317
  %323 = load i32, i32* %322, align 4
  %324 = icmp ugt i32 %323, 127
  br i1 %324, label %330, label %325

325:                                              ; preds = %321
  %326 = call i32 @iswdigit(i32 %323) #13
  %327 = icmp eq i32 %326, 0
  %328 = add nsw i32 %323, -48
  %329 = select i1 %327, i32 0, i32 %328
  br label %330

330:                                              ; preds = %325, %321
  %331 = phi i32 [ %329, %325 ], [ 0, %321 ]
  %332 = add nsw i32 %331, %316
  br label %711

333:                                              ; preds = %265, %272
  br i1 %127, label %711, label %334

334:                                              ; preds = %261, %333
  %335 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 1
  %336 = load i64, i64* %335, align 8, !noalias !129
  %337 = icmp eq i64 %336, 3
  br i1 %337, label %345, label %353

338:                                              ; preds = %345
  %339 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 1
  %340 = load i32, i32* %339, align 4
  %341 = add i32 %340, -1
  %342 = icmp ule i32 %341, 126
  %343 = icmp eq i32 %340, 77
  %344 = and i1 %342, %343
  br i1 %344, label %769, label %352

345:                                              ; preds = %334
  %346 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 0
  %347 = load i32, i32* %346, align 4
  %348 = add i32 %347, -1
  %349 = icmp ule i32 %348, 126
  %350 = icmp eq i32 %347, 77
  %351 = and i1 %349, %350
  br i1 %351, label %338, label %352

352:                                              ; preds = %769, %338, %345
  br i1 %127, label %711, label %353

353:                                              ; preds = %334, %352
  %354 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 1
  %355 = load i64, i64* %354, align 8, !noalias !132
  %356 = icmp eq i64 %355, 4
  br i1 %356, label %365, label %422

357:                                              ; preds = %365
  %358 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 1
  %359 = load i32, i32* %358, align 4
  %360 = add i32 %359, -1
  %361 = icmp ule i32 %360, 126
  %362 = icmp eq i32 %359, 77
  %363 = and i1 %361, %362
  br i1 %363, label %776, label %421

364:                                              ; preds = %783, %769
  br label %372

365:                                              ; preds = %353
  %366 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 0
  %367 = load i32, i32* %366, align 4
  %368 = add i32 %367, -1
  %369 = icmp ule i32 %368, 126
  %370 = icmp eq i32 %367, 77
  %371 = and i1 %369, %370
  br i1 %371, label %357, label %421

372:                                              ; preds = %364, %419
  %373 = phi %"class.fxcrt::StringDataTemplate"* [ %420, %419 ], [ %126, %364 ]
  %374 = phi i32 [ %417, %419 ], [ 0, %364 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %45, align 8
  %375 = icmp eq %"class.fxcrt::StringDataTemplate"* %373, null
  %376 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %373, i64 0, i32 3
  %377 = select i1 %375, [1 x i32]* @.str.15, [1 x i32]* %376
  br i1 %375, label %396, label %378

378:                                              ; preds = %372
  %379 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %373, i64 0, i32 1
  %380 = load i64, i64* %379, align 8, !noalias !135
  %381 = icmp eq i64 %380, 3
  br i1 %381, label %389, label %396

382:                                              ; preds = %389
  %383 = getelementptr inbounds [1 x i32], [1 x i32]* %377, i64 0, i64 1
  %384 = load i32, i32* %383, align 4
  %385 = add i32 %384, -1
  %386 = icmp ule i32 %385, 126
  %387 = icmp eq i32 %384, 77
  %388 = and i1 %386, %387
  br i1 %388, label %790, label %396

389:                                              ; preds = %378
  %390 = getelementptr inbounds [1 x i32], [1 x i32]* %377, i64 0, i64 0
  %391 = load i32, i32* %390, align 4
  %392 = add i32 %391, -1
  %393 = icmp ule i32 %392, 126
  %394 = icmp eq i32 %391, 77
  %395 = and i1 %393, %394
  br i1 %395, label %382, label %396

396:                                              ; preds = %790, %382, %389, %372, %378
  %397 = phi i1 [ false, %378 ], [ false, %372 ], [ false, %389 ], [ false, %382 ], [ %797, %790 ]
  %398 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)*** %46, align 8
  %399 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)** %398, i64 9
  %400 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)** %399, align 8
  call void %400(%"class.fxcrt::WideString"* nonnull sret %10, %class.LocaleIface* %2, i32 %374, i1 zeroext %397) #13
  %401 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %45, align 8
  %402 = icmp eq %"class.fxcrt::StringDataTemplate"* %401, null
  br i1 %402, label %416, label %403

403:                                              ; preds = %396
  %404 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %401, i64 0, i32 1
  %405 = load i64, i64* %404, align 8
  %406 = icmp eq i64 %405, 0
  br i1 %406, label %416, label %407

407:                                              ; preds = %403
  %408 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %401, i64 0, i32 3, i64 0
  %409 = load i64, i64* %4, align 8
  %410 = getelementptr inbounds i32, i32* %41, i64 %409
  %411 = call i32 @wcsncmp(i32* %408, i32* %410, i64 %405) #15
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %416

413:                                              ; preds = %407
  %414 = add i64 %405, %409
  store i64 %414, i64* %4, align 8
  %415 = add nuw nsw i32 %374, 1
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #13
  br label %711

416:                                              ; preds = %396, %403, %407
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #13
  %417 = add nuw nsw i32 %374, 1
  %418 = icmp eq i32 %417, 12
  br i1 %418, label %711, label %419

419:                                              ; preds = %416
  %420 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %43, align 8, !noalias !135
  br label %372

421:                                              ; preds = %783, %776, %357, %365
  br i1 %127, label %711, label %422

422:                                              ; preds = %353, %421
  %423 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 1
  %424 = load i64, i64* %423, align 8, !noalias !138
  %425 = icmp eq i64 %424, 3
  br i1 %425, label %433, label %441

426:                                              ; preds = %433
  %427 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 1
  %428 = load i32, i32* %427, align 4
  %429 = add i32 %428, -1
  %430 = icmp ule i32 %429, 126
  %431 = icmp eq i32 %428, 69
  %432 = and i1 %430, %431
  br i1 %432, label %798, label %440

433:                                              ; preds = %422
  %434 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 0
  %435 = load i32, i32* %434, align 4
  %436 = add i32 %435, -1
  %437 = icmp ule i32 %436, 126
  %438 = icmp eq i32 %435, 69
  %439 = and i1 %437, %438
  br i1 %439, label %426, label %440

440:                                              ; preds = %798, %426, %433
  br i1 %127, label %711, label %441

441:                                              ; preds = %422, %440
  %442 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 1
  %443 = load i64, i64* %442, align 8, !noalias !141
  %444 = icmp eq i64 %443, 4
  br i1 %444, label %453, label %509

445:                                              ; preds = %453
  %446 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 1
  %447 = load i32, i32* %446, align 4
  %448 = add i32 %447, -1
  %449 = icmp ule i32 %448, 126
  %450 = icmp eq i32 %447, 69
  %451 = and i1 %449, %450
  br i1 %451, label %805, label %508

452:                                              ; preds = %812, %798
  br label %460

453:                                              ; preds = %441
  %454 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 0
  %455 = load i32, i32* %454, align 4
  %456 = add i32 %455, -1
  %457 = icmp ule i32 %456, 126
  %458 = icmp eq i32 %455, 69
  %459 = and i1 %457, %458
  br i1 %459, label %445, label %508

460:                                              ; preds = %452, %506
  %461 = phi %"class.fxcrt::StringDataTemplate"* [ %507, %506 ], [ %126, %452 ]
  %462 = phi i32 [ %504, %506 ], [ 0, %452 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %48, align 8
  %463 = icmp eq %"class.fxcrt::StringDataTemplate"* %461, null
  %464 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %461, i64 0, i32 3
  %465 = select i1 %463, [1 x i32]* @.str.15, [1 x i32]* %464
  br i1 %463, label %484, label %466

466:                                              ; preds = %460
  %467 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %461, i64 0, i32 1
  %468 = load i64, i64* %467, align 8, !noalias !144
  %469 = icmp eq i64 %468, 3
  br i1 %469, label %477, label %484

470:                                              ; preds = %477
  %471 = getelementptr inbounds [1 x i32], [1 x i32]* %465, i64 0, i64 1
  %472 = load i32, i32* %471, align 4
  %473 = add i32 %472, -1
  %474 = icmp ule i32 %473, 126
  %475 = icmp eq i32 %472, 69
  %476 = and i1 %474, %475
  br i1 %476, label %819, label %484

477:                                              ; preds = %466
  %478 = getelementptr inbounds [1 x i32], [1 x i32]* %465, i64 0, i64 0
  %479 = load i32, i32* %478, align 4
  %480 = add i32 %479, -1
  %481 = icmp ule i32 %480, 126
  %482 = icmp eq i32 %479, 69
  %483 = and i1 %481, %482
  br i1 %483, label %470, label %484

484:                                              ; preds = %819, %470, %477, %460, %466
  %485 = phi i1 [ false, %466 ], [ false, %460 ], [ false, %477 ], [ false, %470 ], [ %826, %819 ]
  %486 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)*** %46, align 8
  %487 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)** %486, i64 10
  %488 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)** %487, align 8
  call void %488(%"class.fxcrt::WideString"* nonnull sret %11, %class.LocaleIface* %2, i32 %462, i1 zeroext %485) #13
  %489 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %48, align 8
  %490 = icmp eq %"class.fxcrt::StringDataTemplate"* %489, null
  br i1 %490, label %503, label %491

491:                                              ; preds = %484
  %492 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %489, i64 0, i32 1
  %493 = load i64, i64* %492, align 8
  %494 = icmp eq i64 %493, 0
  br i1 %494, label %503, label %495

495:                                              ; preds = %491
  %496 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %489, i64 0, i32 3, i64 0
  %497 = load i64, i64* %4, align 8
  %498 = getelementptr inbounds i32, i32* %41, i64 %497
  %499 = call i32 @wcsncmp(i32* %496, i32* %498, i64 %493) #15
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %503

501:                                              ; preds = %495
  %502 = add i64 %493, %497
  store i64 %502, i64* %4, align 8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  br label %711

503:                                              ; preds = %484, %491, %495
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  %504 = add nuw nsw i32 %462, 1
  %505 = icmp eq i32 %504, 7
  br i1 %505, label %711, label %506

506:                                              ; preds = %503
  %507 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %43, align 8, !noalias !144
  br label %460

508:                                              ; preds = %812, %805, %445, %453
  br i1 %127, label %711, label %509

509:                                              ; preds = %441, %508
  %510 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 1
  %511 = load i64, i64* %510, align 8, !noalias !147
  %512 = icmp eq i64 %511, 2
  br i1 %512, label %520, label %528

513:                                              ; preds = %520
  %514 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 1
  %515 = load i32, i32* %514, align 4
  %516 = add i32 %515, -1
  %517 = icmp ule i32 %516, 126
  %518 = icmp eq i32 %515, 89
  %519 = and i1 %517, %518
  br i1 %519, label %546, label %527

520:                                              ; preds = %509
  %521 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 0
  %522 = load i32, i32* %521, align 4
  %523 = add i32 %522, -1
  %524 = icmp ule i32 %523, 126
  %525 = icmp eq i32 %522, 89
  %526 = and i1 %524, %525
  br i1 %526, label %513, label %527

527:                                              ; preds = %513, %520
  br i1 %127, label %711, label %528

528:                                              ; preds = %509, %527
  %529 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 1
  %530 = load i64, i64* %529, align 8, !noalias !150
  %531 = icmp eq i64 %530, 4
  br i1 %531, label %539, label %623

532:                                              ; preds = %539
  %533 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 1
  %534 = load i32, i32* %533, align 4
  %535 = add i32 %534, -1
  %536 = icmp ule i32 %535, 126
  %537 = icmp eq i32 %534, 89
  %538 = and i1 %536, %537
  br i1 %538, label %827, label %622

539:                                              ; preds = %528
  %540 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 0
  %541 = load i32, i32* %540, align 4
  %542 = add i32 %541, -1
  %543 = icmp ule i32 %542, 126
  %544 = icmp eq i32 %541, 89
  %545 = and i1 %543, %544
  br i1 %545, label %532, label %622

546:                                              ; preds = %834, %513
  %547 = load i64, i64* %4, align 8
  br i1 %127, label %551, label %548

548:                                              ; preds = %546
  %549 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 1
  %550 = load i64, i64* %549, align 8
  br label %551

551:                                              ; preds = %546, %548
  %552 = phi i64 [ %550, %548 ], [ 0, %546 ]
  %553 = add i64 %552, %547
  %554 = icmp ugt i64 %553, %21
  br i1 %554, label %717, label %555

555:                                              ; preds = %551
  br i1 %127, label %711, label %556

556:                                              ; preds = %555
  %557 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 1
  %558 = load i64, i64* %557, align 8
  %559 = icmp eq i64 %558, 0
  br i1 %559, label %598, label %560

560:                                              ; preds = %556
  %561 = icmp ult i64 %547, %21
  br i1 %561, label %562, label %717

562:                                              ; preds = %560, %592
  %563 = phi i64 [ %590, %592 ], [ 0, %560 ]
  %564 = phi i32 [ %589, %592 ], [ 0, %560 ]
  %565 = phi i64 [ %593, %592 ], [ %547, %560 ]
  %566 = getelementptr inbounds i32, i32* %41, i64 %565
  %567 = load i32, i32* %566, align 4
  %568 = icmp ugt i32 %567, 127
  br i1 %568, label %717, label %569

569:                                              ; preds = %562
  %570 = call i32 @iswdigit(i32 %567) #13
  %571 = icmp eq i32 %570, 0
  br i1 %571, label %717, label %572

572:                                              ; preds = %569
  %573 = mul i32 %564, 10
  %574 = load i64, i64* %4, align 8
  %575 = add i64 %574, 1
  store i64 %575, i64* %4, align 8
  %576 = icmp ugt i64 %21, %574
  br i1 %576, label %578, label %577, !prof !17

577:                                              ; preds = %572
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

578:                                              ; preds = %572
  %579 = getelementptr inbounds i32, i32* %41, i64 %574
  %580 = load i32, i32* %579, align 4
  %581 = icmp ugt i32 %580, 127
  br i1 %581, label %587, label %582

582:                                              ; preds = %578
  %583 = call i32 @iswdigit(i32 %580) #13
  %584 = icmp eq i32 %583, 0
  %585 = add nsw i32 %580, -48
  %586 = select i1 %584, i32 0, i32 %585
  br label %587

587:                                              ; preds = %582, %578
  %588 = phi i32 [ %586, %582 ], [ 0, %578 ]
  %589 = add i32 %588, %573
  %590 = add nuw i64 %563, 1
  %591 = icmp eq i64 %590, %558
  br i1 %591, label %595, label %592

592:                                              ; preds = %587
  %593 = load i64, i64* %4, align 8
  %594 = icmp ult i64 %593, %21
  br i1 %594, label %562, label %717

595:                                              ; preds = %587
  %596 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %43, align 8, !noalias !153
  %597 = icmp eq %"class.fxcrt::StringDataTemplate"* %596, null
  br i1 %597, label %711, label %598

598:                                              ; preds = %556, %595
  %599 = phi %"class.fxcrt::StringDataTemplate"* [ %596, %595 ], [ %126, %556 ]
  %600 = phi i32 [ %589, %595 ], [ 0, %556 ]
  %601 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %599, i64 0, i32 1
  %602 = load i64, i64* %601, align 8, !noalias !153
  %603 = icmp eq i64 %602, 2
  br i1 %603, label %611, label %711

604:                                              ; preds = %611
  %605 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %599, i64 0, i32 3, i64 1
  %606 = load i32, i32* %605, align 4
  %607 = add i32 %606, -1
  %608 = icmp ule i32 %607, 126
  %609 = icmp eq i32 %606, 89
  %610 = and i1 %608, %609
  br i1 %610, label %841, label %711

611:                                              ; preds = %598
  %612 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %599, i64 0, i32 3, i64 0
  %613 = load i32, i32* %612, align 4
  %614 = add i32 %613, -1
  %615 = icmp ule i32 %614, 126
  %616 = icmp eq i32 %613, 89
  %617 = and i1 %615, %616
  br i1 %617, label %604, label %711

618:                                              ; preds = %841
  %619 = add nuw nsw i32 %600, 2000
  br label %711

620:                                              ; preds = %841
  %621 = add i32 %600, 1900
  br label %711

622:                                              ; preds = %834, %827, %532, %539
  br i1 %127, label %711, label %623

623:                                              ; preds = %528, %622
  %624 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 1
  %625 = load i64, i64* %624, align 8, !noalias !156
  %626 = icmp eq i64 %625, 1
  br i1 %626, label %627, label %637

627:                                              ; preds = %623
  %628 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 0
  %629 = load i32, i32* %628, align 4
  %630 = add i32 %629, -1
  %631 = icmp ult i32 %630, 127
  %632 = icmp eq i32 %629, 71
  %633 = and i1 %631, %632
  br i1 %633, label %634, label %637

634:                                              ; preds = %627
  %635 = load i64, i64* %4, align 8
  %636 = add i64 %635, 2
  store i64 %636, i64* %4, align 8
  br label %711

637:                                              ; preds = %627, %623
  %638 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 1
  %639 = load i64, i64* %638, align 8, !noalias !159
  %640 = icmp eq i64 %639, 3
  br i1 %640, label %648, label %656

641:                                              ; preds = %648
  %642 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 1
  %643 = load i32, i32* %642, align 4
  %644 = add i32 %643, -1
  %645 = icmp ule i32 %644, 126
  %646 = icmp eq i32 %643, 74
  %647 = and i1 %645, %646
  br i1 %647, label %843, label %655

648:                                              ; preds = %637
  %649 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 0
  %650 = load i32, i32* %649, align 4
  %651 = add i32 %650, -1
  %652 = icmp ule i32 %651, 126
  %653 = icmp eq i32 %650, 74
  %654 = and i1 %652, %653
  br i1 %654, label %641, label %655

655:                                              ; preds = %843, %641, %648
  br i1 %127, label %711, label %656

656:                                              ; preds = %637, %655
  %657 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 1
  %658 = load i64, i64* %657, align 8, !noalias !162
  %659 = icmp eq i64 %658, 1
  br i1 %659, label %660, label %674

660:                                              ; preds = %656
  %661 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 0
  %662 = load i32, i32* %661, align 4
  %663 = add i32 %662, -1
  %664 = icmp ugt i32 %663, 126
  br i1 %664, label %674, label %665

665:                                              ; preds = %660
  %666 = tail call i32** @__ctype_tolower_loc() #14
  %667 = load i32*, i32** %666, align 8
  %668 = sext i32 %662 to i64
  %669 = getelementptr inbounds i32, i32* %667, i64 %668
  %670 = load i32, i32* %669, align 4
  %671 = getelementptr inbounds i32, i32* %667, i64 69
  %672 = load i32, i32* %671, align 4
  %673 = icmp eq i32 %670, %672
  br i1 %673, label %704, label %674

674:                                              ; preds = %656, %660, %665
  %675 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 1
  %676 = load i64, i64* %675, align 8, !noalias !165
  %677 = icmp eq i64 %676, 1
  br i1 %677, label %678, label %685

678:                                              ; preds = %674
  %679 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 0
  %680 = load i32, i32* %679, align 4
  %681 = add i32 %680, -1
  %682 = icmp ult i32 %681, 127
  %683 = icmp eq i32 %680, 119
  %684 = and i1 %682, %683
  br i1 %684, label %704, label %685

685:                                              ; preds = %678, %674
  %686 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 1
  %687 = load i64, i64* %686, align 8, !noalias !168
  %688 = icmp eq i64 %687, 2
  br i1 %688, label %696, label %711

689:                                              ; preds = %696
  %690 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 1
  %691 = load i32, i32* %690, align 4
  %692 = add i32 %691, -1
  %693 = icmp ule i32 %692, 126
  %694 = icmp eq i32 %691, 87
  %695 = and i1 %693, %694
  br i1 %695, label %703, label %711

696:                                              ; preds = %685
  %697 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 0
  %698 = load i32, i32* %697, align 4
  %699 = add i32 %698, -1
  %700 = icmp ule i32 %699, 126
  %701 = icmp eq i32 %698, 87
  %702 = and i1 %700, %701
  br i1 %702, label %689, label %711

703:                                              ; preds = %689, %843
  br i1 %127, label %707, label %704

704:                                              ; preds = %678, %665, %703
  %705 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %126, i64 0, i32 1
  %706 = load i64, i64* %705, align 8
  br label %707

707:                                              ; preds = %703, %704
  %708 = phi i64 [ %706, %704 ], [ 0, %703 ]
  %709 = load i64, i64* %4, align 8
  %710 = add i64 %709, %708
  store i64 %710, i64* %4, align 8
  br label %711

711:                                              ; preds = %689, %604, %416, %503, %611, %696, %622, %508, %421, %333, %124, %213, %352, %440, %527, %655, %555, %595, %763, %767, %192, %188, %184, %210, %232, %228, %218, %247, %731, %735, %749, %752, %756, %312, %308, %304, %330, %685, %598, %501, %413, %618, %620, %707, %634
  %712 = phi i32 [ %54, %413 ], [ %54, %501 ], [ %54, %618 ], [ %54, %620 ], [ %54, %634 ], [ %54, %707 ], [ %54, %598 ], [ %54, %685 ], [ %54, %330 ], [ %54, %304 ], [ %54, %308 ], [ %54, %312 ], [ %54, %756 ], [ %54, %752 ], [ %54, %749 ], [ %54, %735 ], [ %54, %731 ], [ %54, %247 ], [ %54, %218 ], [ %54, %228 ], [ %54, %232 ], [ %186, %184 ], [ %212, %210 ], [ %186, %192 ], [ %186, %188 ], [ %54, %767 ], [ %54, %763 ], [ %54, %595 ], [ %54, %555 ], [ %54, %655 ], [ %54, %527 ], [ %54, %440 ], [ %54, %352 ], [ %54, %213 ], [ %54, %124 ], [ %54, %333 ], [ %54, %421 ], [ %54, %508 ], [ %54, %622 ], [ %54, %696 ], [ %54, %689 ], [ %54, %611 ], [ %54, %604 ], [ %54, %503 ], [ %54, %416 ]
  %713 = phi i32 [ %415, %413 ], [ %53, %501 ], [ %53, %618 ], [ %53, %620 ], [ %53, %634 ], [ %53, %707 ], [ %53, %598 ], [ %53, %685 ], [ %332, %330 ], [ %306, %304 ], [ %306, %308 ], [ %306, %312 ], [ %53, %756 ], [ %53, %752 ], [ %53, %749 ], [ %53, %735 ], [ %53, %731 ], [ %53, %247 ], [ %53, %218 ], [ %53, %228 ], [ %53, %232 ], [ %53, %184 ], [ %53, %210 ], [ %53, %192 ], [ %53, %188 ], [ %53, %767 ], [ %53, %763 ], [ %53, %595 ], [ %53, %555 ], [ %53, %655 ], [ %53, %527 ], [ %53, %440 ], [ %53, %352 ], [ %53, %213 ], [ %53, %124 ], [ %53, %333 ], [ %53, %421 ], [ %53, %508 ], [ %53, %622 ], [ %53, %696 ], [ %53, %689 ], [ %53, %611 ], [ %53, %604 ], [ %53, %503 ], [ %53, %416 ]
  %714 = phi i32 [ %52, %413 ], [ %52, %501 ], [ %619, %618 ], [ %621, %620 ], [ %52, %634 ], [ %52, %707 ], [ %600, %598 ], [ %52, %685 ], [ %52, %330 ], [ %52, %304 ], [ %52, %308 ], [ %52, %312 ], [ %52, %756 ], [ %52, %752 ], [ %52, %749 ], [ %52, %735 ], [ %52, %731 ], [ %52, %247 ], [ %52, %218 ], [ %52, %228 ], [ %52, %232 ], [ %52, %184 ], [ %52, %210 ], [ %52, %192 ], [ %52, %188 ], [ %52, %767 ], [ %52, %763 ], [ %589, %595 ], [ 0, %555 ], [ %52, %655 ], [ %52, %527 ], [ %52, %440 ], [ %52, %352 ], [ %52, %213 ], [ %52, %124 ], [ %52, %333 ], [ %52, %421 ], [ %52, %508 ], [ %52, %622 ], [ %52, %696 ], [ %52, %689 ], [ %600, %611 ], [ %600, %604 ], [ %52, %503 ], [ %52, %416 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #13
  %715 = load i64, i64* %4, align 8
  %716 = icmp ult i64 %715, %21
  br i1 %716, label %49, label %718

717:                                              ; preds = %551, %159, %162, %166, %279, %282, %286, %560, %592, %562, %569
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #13
  br label %729

718:                                              ; preds = %711, %94, %29
  %719 = phi i32 [ 1, %29 ], [ %54, %94 ], [ %712, %711 ]
  %720 = phi i32 [ 1, %29 ], [ %53, %94 ], [ %713, %711 ]
  %721 = phi i32 [ 1900, %29 ], [ %52, %94 ], [ %714, %711 ]
  %722 = trunc i32 %720 to i8
  %723 = trunc i32 %719 to i8
  %724 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %3, i64 0, i32 0
  store i32 %721, i32* %724, align 4
  %725 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %3, i64 0, i32 1
  store i8 %722, i8* %725, align 4
  %726 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %3, i64 0, i32 2
  store i8 %723, i8* %726, align 1
  %727 = load i64, i64* %4, align 8
  %728 = icmp ne i64 %727, 0
  br label %729

729:                                              ; preds = %55, %87, %717, %86, %718
  %730 = phi i1 [ false, %86 ], [ false, %717 ], [ %728, %718 ], [ false, %87 ], [ false, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  ret i1 %730

731:                                              ; preds = %247
  %732 = getelementptr inbounds i32, i32* %41, i64 %248
  %733 = load i32, i32* %732, align 4
  %734 = icmp ugt i32 %733, 127
  br i1 %734, label %711, label %735

735:                                              ; preds = %731
  %736 = call i32 @iswdigit(i32 %733) #13
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %711, label %738

738:                                              ; preds = %735
  %739 = load i64, i64* %4, align 8
  %740 = add i64 %739, 1
  store i64 %740, i64* %4, align 8
  %741 = icmp ugt i64 %21, %739
  br i1 %741, label %742, label %239, !prof !17

742:                                              ; preds = %738
  %743 = getelementptr inbounds i32, i32* %41, i64 %739
  %744 = load i32, i32* %743, align 4
  %745 = icmp ugt i32 %744, 127
  br i1 %745, label %749, label %746

746:                                              ; preds = %742
  %747 = call i32 @iswdigit(i32 %744) #13
  %748 = load i64, i64* %4, align 8
  br label %749

749:                                              ; preds = %746, %742
  %750 = phi i64 [ %748, %746 ], [ %740, %742 ]
  %751 = icmp ult i64 %750, %21
  br i1 %751, label %752, label %711

752:                                              ; preds = %749
  %753 = getelementptr inbounds i32, i32* %41, i64 %750
  %754 = load i32, i32* %753, align 4
  %755 = icmp ugt i32 %754, 127
  br i1 %755, label %711, label %756

756:                                              ; preds = %752
  %757 = call i32 @iswdigit(i32 %754) #13
  %758 = icmp eq i32 %757, 0
  br i1 %758, label %711, label %759

759:                                              ; preds = %756
  %760 = load i64, i64* %4, align 8
  %761 = add i64 %760, 1
  store i64 %761, i64* %4, align 8
  %762 = icmp ugt i64 %21, %760
  br i1 %762, label %763, label %239, !prof !17

763:                                              ; preds = %759
  %764 = getelementptr inbounds i32, i32* %41, i64 %760
  %765 = load i32, i32* %764, align 4
  %766 = icmp ugt i32 %765, 127
  br i1 %766, label %711, label %767

767:                                              ; preds = %763
  %768 = call i32 @iswdigit(i32 %765) #13
  br label %711

769:                                              ; preds = %338
  %770 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 2
  %771 = load i32, i32* %770, align 4
  %772 = add i32 %771, -1
  %773 = icmp ule i32 %772, 126
  %774 = icmp eq i32 %771, 77
  %775 = and i1 %773, %774
  br i1 %775, label %364, label %352

776:                                              ; preds = %357
  %777 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 2
  %778 = load i32, i32* %777, align 4
  %779 = add i32 %778, -1
  %780 = icmp ule i32 %779, 126
  %781 = icmp eq i32 %778, 77
  %782 = and i1 %780, %781
  br i1 %782, label %783, label %421

783:                                              ; preds = %776
  %784 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 3
  %785 = load i32, i32* %784, align 4
  %786 = add i32 %785, -1
  %787 = icmp ule i32 %786, 126
  %788 = icmp eq i32 %785, 77
  %789 = and i1 %787, %788
  br i1 %789, label %364, label %421

790:                                              ; preds = %382
  %791 = getelementptr inbounds [1 x i32], [1 x i32]* %377, i64 0, i64 2
  %792 = load i32, i32* %791, align 4
  %793 = add i32 %792, -1
  %794 = icmp ule i32 %793, 126
  %795 = icmp eq i32 %792, 77
  %796 = and i1 %794, %795
  %797 = select i1 %796, i1 true, i1 false
  br label %396

798:                                              ; preds = %426
  %799 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 2
  %800 = load i32, i32* %799, align 4
  %801 = add i32 %800, -1
  %802 = icmp ule i32 %801, 126
  %803 = icmp eq i32 %800, 69
  %804 = and i1 %802, %803
  br i1 %804, label %452, label %440

805:                                              ; preds = %445
  %806 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 2
  %807 = load i32, i32* %806, align 4
  %808 = add i32 %807, -1
  %809 = icmp ule i32 %808, 126
  %810 = icmp eq i32 %807, 69
  %811 = and i1 %809, %810
  br i1 %811, label %812, label %508

812:                                              ; preds = %805
  %813 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 3
  %814 = load i32, i32* %813, align 4
  %815 = add i32 %814, -1
  %816 = icmp ule i32 %815, 126
  %817 = icmp eq i32 %814, 69
  %818 = and i1 %816, %817
  br i1 %818, label %452, label %508

819:                                              ; preds = %470
  %820 = getelementptr inbounds [1 x i32], [1 x i32]* %465, i64 0, i64 2
  %821 = load i32, i32* %820, align 4
  %822 = add i32 %821, -1
  %823 = icmp ule i32 %822, 126
  %824 = icmp eq i32 %821, 69
  %825 = and i1 %823, %824
  %826 = select i1 %825, i1 true, i1 false
  br label %484

827:                                              ; preds = %532
  %828 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 2
  %829 = load i32, i32* %828, align 4
  %830 = add i32 %829, -1
  %831 = icmp ule i32 %830, 126
  %832 = icmp eq i32 %829, 89
  %833 = and i1 %831, %832
  br i1 %833, label %834, label %622

834:                                              ; preds = %827
  %835 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 3
  %836 = load i32, i32* %835, align 4
  %837 = add i32 %836, -1
  %838 = icmp ule i32 %837, 126
  %839 = icmp eq i32 %836, 89
  %840 = and i1 %838, %839
  br i1 %840, label %546, label %622

841:                                              ; preds = %604
  %842 = icmp ult i32 %600, 30
  br i1 %842, label %618, label %620

843:                                              ; preds = %641
  %844 = getelementptr inbounds [1 x i32], [1 x i32]* %129, i64 0, i64 2
  %845 = load i32, i32* %844, align 4
  %846 = add i32 %845, -1
  %847 = icmp ule i32 %846, 126
  %848 = icmp eq i32 %845, 74
  %849 = and i1 %847, %848
  br i1 %849, label %703, label %655
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_115ParseLocaleTimeERKN5fxcrt10WideStringES3_P11LocaleIfaceP12CFX_DateTimePm(%"class.fxcrt::WideString"* nocapture readonly dereferenceable(8), %"class.fxcrt::WideString"* nocapture readonly dereferenceable(8), %class.LocaleIface*, %class.CFX_DateTime* nocapture, i64*) unnamed_addr #0 {
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.fxcrt::WideString", align 8
  %10 = alloca %"class.pdfium::span", align 8
  %11 = alloca %"class.fxcrt::WideString", align 8
  %12 = alloca %"class.fxcrt::WideString", align 8
  %13 = alloca %"class.fxcrt::WideString", align 8
  %14 = alloca %"class.fxcrt::WideString", align 8
  %15 = alloca i32, align 4
  %16 = alloca %"class.pdfium::span", align 8
  %17 = alloca i32, align 4
  %18 = alloca %"class.pdfium::span", align 8
  %19 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  store i64 0, i64* %8, align 8
  %20 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %20, align 8, !noalias !171
  %22 = icmp eq %"class.fxcrt::StringDataTemplate"* %21, null
  %23 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %21, i64 0, i32 3, i64 0
  br i1 %22, label %27, label %24

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %21, i64 0, i32 1
  %26 = load i64, i64* %25, align 8, !noalias !171
  br label %27

27:                                               ; preds = %5, %24
  %28 = phi i64 [ %26, %24 ], [ 0, %5 ]
  %29 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %29, align 8, !noalias !174
  %31 = icmp eq %"class.fxcrt::StringDataTemplate"* %30, null
  %32 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %30, i64 0, i32 3, i64 0
  br i1 %31, label %36, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %30, i64 0, i32 1
  %35 = load i64, i64* %34, align 8, !noalias !174
  br label %36

36:                                               ; preds = %27, %33
  %37 = phi i64 [ %35, %33 ], [ 0, %27 ]
  %38 = ptrtoint i32* %32 to i64
  %39 = select i1 %31, i64 0, i64 %38
  %40 = load i64, i64* %4, align 8
  %41 = icmp ult i64 %40, %28
  br i1 %41, label %42, label %792

42:                                               ; preds = %36
  %43 = inttoptr i64 %39 to i32*
  %44 = bitcast %"class.fxcrt::WideString"* %9 to i8*
  %45 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = bitcast %"class.pdfium::span"* %10 to i64*
  %47 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %10, i64 0, i32 1
  %48 = select i1 %22, i32* null, i32* %23
  %49 = bitcast %"class.fxcrt::WideString"* %11 to i8*
  %50 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.fxcrt::WideString"* %12 to i8*
  %52 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = bitcast %class.LocaleIface* %2 to void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)***
  %54 = bitcast %"class.fxcrt::WideString"* %13 to i8*
  %55 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = bitcast %"class.fxcrt::StringViewTemplate"* %7 to i8*
  %57 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %7, i64 0, i32 0, i32 1
  %59 = bitcast %"class.fxcrt::StringViewTemplate"* %6 to i8*
  %60 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 1
  %62 = bitcast %"class.fxcrt::WideString"* %14 to i8*
  %63 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = bitcast i32* %15 to i8*
  %65 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %16, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %16, i64 0, i32 1
  %67 = bitcast %class.LocaleIface* %2 to i32 (%class.LocaleIface*)***
  %68 = bitcast i32* %17 to i8*
  %69 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %18, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %18, i64 0, i32 1
  br label %71

71:                                               ; preds = %42, %764
  %72 = phi i64 [ 0, %42 ], [ %150, %764 ]
  %73 = phi i64 [ %40, %42 ], [ %771, %764 ]
  %74 = phi i8 [ 0, %42 ], [ %770, %764 ]
  %75 = phi i8 [ 0, %42 ], [ %769, %764 ]
  %76 = phi i32 [ 0, %42 ], [ %768, %764 ]
  %77 = phi i32 [ 0, %42 ], [ %767, %764 ]
  %78 = phi i32 [ 0, %42 ], [ %766, %764 ]
  %79 = phi i32 [ 0, %42 ], [ %765, %764 ]
  br label %80

80:                                               ; preds = %71, %119
  %81 = phi i64 [ %72, %71 ], [ %121, %119 ]
  %82 = phi i64 [ %73, %71 ], [ %120, %119 ]
  %83 = icmp ult i64 %81, %37
  br i1 %83, label %84, label %773

84:                                               ; preds = %80
  %85 = getelementptr inbounds i32, i32* %43, i64 %81
  %86 = load i32, i32* %85, align 4
  switch i32 %86, label %112 [
    i32 39, label %87
    i32 122, label %123
    i32 107, label %123
    i32 104, label %123
    i32 90, label %123
    i32 83, label %123
    i32 77, label %123
    i32 75, label %123
    i32 72, label %123
    i32 70, label %123
    i32 65, label %123
    i32 0, label %123
  ]

87:                                               ; preds = %84
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %45, align 8
  store i64 %39, i64* %46, align 8
  store i64 %37, i64* %47, align 8
  call fastcc void @_ZN12_GLOBAL__N_114GetLiteralTextEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %9, %"class.pdfium::span"* nonnull %10, i64* nonnull %8)
  %88 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %45, align 8
  %89 = icmp eq %"class.fxcrt::StringDataTemplate"* %88, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %88, i64 0, i32 1
  %92 = load i64, i64* %91, align 8
  br label %93

93:                                               ; preds = %87, %90
  %94 = phi i64 [ %92, %90 ], [ 0, %87 ]
  %95 = load i64, i64* %4, align 8
  %96 = shl i64 %94, 32
  %97 = ashr exact i64 %96, 32
  %98 = add i64 %97, %95
  %99 = icmp ugt i64 %98, %28
  br i1 %99, label %111, label %100

100:                                              ; preds = %93
  %101 = getelementptr inbounds i32, i32* %48, i64 %95
  %102 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %88, i64 0, i32 3
  %103 = select i1 %89, [1 x i32]* @.str.15, [1 x i32]* %102
  %104 = getelementptr inbounds [1 x i32], [1 x i32]* %103, i64 0, i64 0
  %105 = call i32 @wcsncmp(i32* %101, i32* %104, i64 %97) #15
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %111

107:                                              ; preds = %100
  store i64 %98, i64* %4, align 8
  %108 = load i64, i64* %8, align 8
  %109 = add i64 %108, 1
  store i64 %109, i64* %8, align 8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #13
  %110 = load i64, i64* %4, align 8
  br label %119

111:                                              ; preds = %93, %100
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #13
  br label %807

112:                                              ; preds = %84
  %113 = getelementptr inbounds i32, i32* %48, i64 %82
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %86, %114
  br i1 %115, label %116, label %807

116:                                              ; preds = %112
  %117 = add nuw i64 %82, 1
  store i64 %117, i64* %4, align 8
  %118 = add nuw i64 %81, 1
  store i64 %118, i64* %8, align 8
  br label %119

119:                                              ; preds = %116, %107
  %120 = phi i64 [ %117, %116 ], [ %110, %107 ]
  %121 = phi i64 [ %118, %116 ], [ %109, %107 ]
  %122 = icmp ult i64 %120, %28
  br i1 %122, label %80, label %773

123:                                              ; preds = %84, %84, %84, %84, %84, %84, %84, %84, %84, %84, %84
  %124 = getelementptr inbounds i32, i32* %43, i64 %81
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %50, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %11) #13
  call void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"* nonnull %11, i64 4) #13
  %125 = add nuw i64 %81, 1
  store i64 %125, i64* %8, align 8
  %126 = load i32, i32* %124, align 4
  %127 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %11, i32 signext %126) #13
  %128 = icmp ult i64 %125, %37
  br i1 %128, label %129, label %149

129:                                              ; preds = %123, %144
  %130 = phi i64 [ %145, %144 ], [ %125, %123 ]
  %131 = getelementptr inbounds i32, i32* %43, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %50, align 8
  %134 = icmp eq %"class.fxcrt::StringDataTemplate"* %133, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %133, i64 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %140, !prof !2

139:                                              ; preds = %135, %129
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !47
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !48
  unreachable

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %133, i64 0, i32 3, i64 0
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %132, %142
  br i1 %143, label %144, label %149

144:                                              ; preds = %140
  %145 = add i64 %130, 1
  store i64 %145, i64* %8, align 8
  %146 = load i32, i32* %131, align 4
  %147 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %11, i32 signext %146) #13
  %148 = icmp eq i64 %145, %37
  br i1 %148, label %149, label %129

149:                                              ; preds = %140, %144, %123
  %150 = phi i64 [ %125, %123 ], [ %37, %144 ], [ %130, %140 ]
  %151 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %50, align 8, !noalias !177
  %152 = icmp eq %"class.fxcrt::StringDataTemplate"* %151, null
  %153 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %151, i64 0, i32 3
  %154 = select i1 %152, [1 x i32]* @.str.15, [1 x i32]* %153
  br i1 %152, label %764, label %155

155:                                              ; preds = %149
  %156 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %151, i64 0, i32 1
  %157 = load i64, i64* %156, align 8, !noalias !177
  switch i64 %157, label %764 [
    i64 1, label %158
    i64 2, label %255
    i64 3, label %517
  ]

158:                                              ; preds = %155
  %159 = getelementptr inbounds [1 x i32], [1 x i32]* %154, i64 0, i64 0
  %160 = load i32, i32* %159, align 4
  %161 = add i32 %160, -1
  %162 = icmp ugt i32 %161, 126
  br i1 %162, label %557, label %163

163:                                              ; preds = %158
  %164 = tail call i32** @__ctype_tolower_loc() #14
  %165 = load i32*, i32** %164, align 8
  %166 = sext i32 %160 to i64
  %167 = getelementptr inbounds i32, i32* %165, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = getelementptr inbounds i32, i32* %165, i64 107
  %170 = load i32, i32* %169, align 4
  %171 = icmp eq i32 %168, %170
  br i1 %171, label %181, label %172

172:                                              ; preds = %163
  %173 = tail call i32** @__ctype_tolower_loc() #14
  %174 = load i32*, i32** %173, align 8
  %175 = sext i32 %160 to i64
  %176 = getelementptr inbounds i32, i32* %174, i64 %175
  %177 = load i32, i32* %176, align 4
  %178 = getelementptr inbounds i32, i32* %174, i64 104
  %179 = load i32, i32* %178, align 4
  %180 = icmp eq i32 %177, %179
  br i1 %180, label %181, label %338

181:                                              ; preds = %163, %172
  %182 = load i64, i64* %4, align 8
  %183 = icmp ult i64 %182, %28
  br i1 %183, label %184, label %763

184:                                              ; preds = %181
  %185 = getelementptr inbounds i32, i32* %48, i64 %182
  %186 = load i32, i32* %185, align 4
  %187 = icmp ugt i32 %186, 127
  br i1 %187, label %763, label %188

188:                                              ; preds = %184
  %189 = call i32 @iswdigit(i32 %186) #13
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %763, label %191

191:                                              ; preds = %188
  %192 = load i64, i64* %4, align 8
  %193 = add i64 %192, 1
  store i64 %193, i64* %4, align 8
  %194 = icmp ugt i64 %28, %192
  br i1 %194, label %196, label %195, !prof !17

195:                                              ; preds = %191
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

196:                                              ; preds = %191
  %197 = getelementptr inbounds i32, i32* %48, i64 %192
  %198 = load i32, i32* %197, align 4
  %199 = icmp ugt i32 %198, 127
  br i1 %199, label %206, label %200

200:                                              ; preds = %196
  %201 = call i32 @iswdigit(i32 %198) #13
  %202 = icmp eq i32 %201, 0
  %203 = add nsw i32 %198, -48
  %204 = select i1 %202, i32 0, i32 %203
  %205 = load i64, i64* %4, align 8
  br label %206

206:                                              ; preds = %200, %196
  %207 = phi i64 [ %205, %200 ], [ %193, %196 ]
  %208 = phi i32 [ %204, %200 ], [ 0, %196 ]
  %209 = icmp ult i64 %207, %28
  br i1 %209, label %210, label %235

210:                                              ; preds = %206
  %211 = getelementptr inbounds i32, i32* %48, i64 %207
  %212 = load i32, i32* %211, align 4
  %213 = icmp ugt i32 %212, 127
  br i1 %213, label %235, label %214

214:                                              ; preds = %210
  %215 = call i32 @iswdigit(i32 %212) #13
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %235, label %217

217:                                              ; preds = %214
  %218 = mul i32 %208, 10
  %219 = load i64, i64* %4, align 8
  %220 = add i64 %219, 1
  store i64 %220, i64* %4, align 8
  %221 = icmp ugt i64 %28, %219
  br i1 %221, label %223, label %222, !prof !17

222:                                              ; preds = %217
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

223:                                              ; preds = %217
  %224 = getelementptr inbounds i32, i32* %48, i64 %219
  %225 = load i32, i32* %224, align 4
  %226 = icmp ugt i32 %225, 127
  br i1 %226, label %232, label %227

227:                                              ; preds = %223
  %228 = call i32 @iswdigit(i32 %225) #13
  %229 = icmp eq i32 %228, 0
  %230 = add nsw i32 %225, -48
  %231 = select i1 %229, i32 0, i32 %230
  br label %232

232:                                              ; preds = %227, %223
  %233 = phi i32 [ %231, %227 ], [ 0, %223 ]
  %234 = add nsw i32 %233, %218
  br label %235

235:                                              ; preds = %232, %206, %210, %214
  %236 = phi i32 [ %208, %206 ], [ %234, %232 ], [ %208, %214 ], [ %208, %210 ]
  %237 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %50, align 8, !noalias !180
  %238 = icmp eq %"class.fxcrt::StringDataTemplate"* %237, null
  %239 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %237, i64 0, i32 3
  %240 = select i1 %238, [1 x i32]* @.str.15, [1 x i32]* %239
  br i1 %238, label %764, label %241

241:                                              ; preds = %235
  %242 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %237, i64 0, i32 1
  %243 = load i64, i64* %242, align 8, !noalias !180
  %244 = icmp eq i64 %243, 1
  br i1 %244, label %245, label %764

245:                                              ; preds = %241
  %246 = getelementptr inbounds [1 x i32], [1 x i32]* %240, i64 0, i64 0
  %247 = load i32, i32* %246, align 4
  %248 = add i32 %247, -1
  %249 = icmp ult i32 %248, 127
  %250 = icmp eq i32 %247, 75
  %251 = and i1 %250, %249
  br i1 %251, label %252, label %764

252:                                              ; preds = %245
  %253 = icmp eq i32 %236, 24
  %254 = select i1 %253, i32 0, i32 %236
  br label %764

255:                                              ; preds = %155
  %256 = getelementptr inbounds [1 x i32], [1 x i32]* %154, i64 0, i64 0
  %257 = load i32, i32* %256, align 4
  %258 = add i32 %257, -1
  %259 = icmp ugt i32 %258, 126
  br i1 %259, label %764, label %265

260:                                              ; preds = %265
  %261 = getelementptr inbounds [1 x i32], [1 x i32]* %154, i64 0, i64 1
  %262 = load i32, i32* %261, align 4
  %263 = add i32 %262, -1
  %264 = icmp ugt i32 %263, 126
  br i1 %264, label %279, label %948

265:                                              ; preds = %255
  %266 = tail call i32** @__ctype_tolower_loc() #14
  %267 = load i32*, i32** %266, align 8
  %268 = sext i32 %257 to i64
  %269 = getelementptr inbounds i32, i32* %267, i64 %268
  %270 = load i32, i32* %269, align 4
  %271 = getelementptr inbounds i32, i32* %267, i64 107
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %270, %272
  br i1 %273, label %260, label %279

274:                                              ; preds = %279
  %275 = getelementptr inbounds [1 x i32], [1 x i32]* %154, i64 0, i64 1
  %276 = load i32, i32* %275, align 4
  %277 = add i32 %276, -1
  %278 = icmp ugt i32 %277, 126
  br i1 %278, label %398, label %953

279:                                              ; preds = %265, %260, %948
  %280 = tail call i32** @__ctype_tolower_loc() #14
  %281 = load i32*, i32** %280, align 8
  %282 = sext i32 %257 to i64
  %283 = getelementptr inbounds i32, i32* %281, i64 %282
  %284 = load i32, i32* %283, align 4
  %285 = getelementptr inbounds i32, i32* %281, i64 104
  %286 = load i32, i32* %285, align 4
  %287 = icmp eq i32 %284, %286
  br i1 %287, label %274, label %398

288:                                              ; preds = %953, %948
  %289 = load i64, i64* %4, align 8
  %290 = icmp ult i64 %289, %28
  br i1 %290, label %291, label %763

291:                                              ; preds = %288
  %292 = getelementptr inbounds i32, i32* %48, i64 %289
  %293 = load i32, i32* %292, align 4
  %294 = icmp ugt i32 %293, 127
  br i1 %294, label %763, label %295

295:                                              ; preds = %291
  %296 = call i32 @iswdigit(i32 %293) #13
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %763, label %298

298:                                              ; preds = %295
  %299 = load i64, i64* %4, align 8
  %300 = add i64 %299, 1
  store i64 %300, i64* %4, align 8
  %301 = icmp ugt i64 %28, %299
  br i1 %301, label %303, label %302, !prof !17

302:                                              ; preds = %816, %298
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

303:                                              ; preds = %298
  %304 = getelementptr inbounds i32, i32* %48, i64 %299
  %305 = load i32, i32* %304, align 4
  %306 = icmp ugt i32 %305, 127
  br i1 %306, label %313, label %307

307:                                              ; preds = %303
  %308 = call i32 @iswdigit(i32 %305) #13
  %309 = icmp eq i32 %308, 0
  %310 = add nsw i32 %305, -48
  %311 = select i1 %309, i32 0, i32 %310
  %312 = load i64, i64* %4, align 8
  br label %313

313:                                              ; preds = %307, %303
  %314 = phi i64 [ %312, %307 ], [ %300, %303 ]
  %315 = phi i32 [ %311, %307 ], [ 0, %303 ]
  %316 = icmp ult i64 %314, %28
  br i1 %316, label %809, label %763

317:                                              ; preds = %830
  %318 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %833, i64 0, i32 1
  %319 = load i64, i64* %318, align 8, !noalias !183
  %320 = icmp eq i64 %319, 2
  br i1 %320, label %321, label %764

321:                                              ; preds = %317
  %322 = getelementptr inbounds [1 x i32], [1 x i32]* %836, i64 0, i64 0
  %323 = load i32, i32* %322, align 4
  %324 = add i32 %323, -1
  %325 = icmp ult i32 %324, 127
  %326 = icmp eq i32 %323, 75
  %327 = and i1 %325, %326
  br i1 %327, label %328, label %764

328:                                              ; preds = %321
  %329 = getelementptr inbounds [1 x i32], [1 x i32]* %836, i64 0, i64 1
  %330 = load i32, i32* %329, align 4
  %331 = add i32 %330, -1
  %332 = icmp ult i32 %331, 127
  %333 = icmp eq i32 %330, 75
  %334 = and i1 %332, %333
  br i1 %334, label %958, label %764

335:                                              ; preds = %338
  %336 = load i64, i64* %4, align 8
  %337 = icmp ult i64 %336, %28
  br i1 %337, label %340, label %763

338:                                              ; preds = %172
  %339 = icmp eq i32 %160, 77
  br i1 %339, label %335, label %428

340:                                              ; preds = %335
  %341 = getelementptr inbounds i32, i32* %48, i64 %336
  %342 = load i32, i32* %341, align 4
  %343 = icmp ugt i32 %342, 127
  br i1 %343, label %763, label %344

344:                                              ; preds = %340
  %345 = call i32 @iswdigit(i32 %342) #13
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %763, label %347

347:                                              ; preds = %344
  %348 = load i64, i64* %4, align 8
  %349 = add i64 %348, 1
  store i64 %349, i64* %4, align 8
  %350 = icmp ugt i64 %28, %348
  br i1 %350, label %352, label %351, !prof !17

351:                                              ; preds = %347
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

352:                                              ; preds = %347
  %353 = getelementptr inbounds i32, i32* %48, i64 %348
  %354 = load i32, i32* %353, align 4
  %355 = icmp ugt i32 %354, 127
  br i1 %355, label %362, label %356

356:                                              ; preds = %352
  %357 = call i32 @iswdigit(i32 %354) #13
  %358 = icmp eq i32 %357, 0
  %359 = add nsw i32 %354, -48
  %360 = select i1 %358, i32 0, i32 %359
  %361 = load i64, i64* %4, align 8
  br label %362

362:                                              ; preds = %356, %352
  %363 = phi i64 [ %361, %356 ], [ %349, %352 ]
  %364 = phi i32 [ %360, %356 ], [ 0, %352 ]
  %365 = icmp ult i64 %363, %28
  br i1 %365, label %366, label %764

366:                                              ; preds = %362
  %367 = getelementptr inbounds i32, i32* %48, i64 %363
  %368 = load i32, i32* %367, align 4
  %369 = icmp ugt i32 %368, 127
  br i1 %369, label %764, label %370

370:                                              ; preds = %366
  %371 = call i32 @iswdigit(i32 %368) #13
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %764, label %373

373:                                              ; preds = %370
  %374 = mul i32 %364, 10
  %375 = load i64, i64* %4, align 8
  %376 = add i64 %375, 1
  store i64 %376, i64* %4, align 8
  %377 = icmp ugt i64 %28, %375
  br i1 %377, label %379, label %378, !prof !17

378:                                              ; preds = %373
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

379:                                              ; preds = %373
  %380 = getelementptr inbounds i32, i32* %48, i64 %375
  %381 = load i32, i32* %380, align 4
  %382 = icmp ugt i32 %381, 127
  br i1 %382, label %388, label %383

383:                                              ; preds = %379
  %384 = call i32 @iswdigit(i32 %381) #13
  %385 = icmp eq i32 %384, 0
  %386 = add nsw i32 %381, -48
  %387 = select i1 %385, i32 0, i32 %386
  br label %388

388:                                              ; preds = %383, %379
  %389 = phi i32 [ %387, %383 ], [ 0, %379 ]
  %390 = add nsw i32 %389, %374
  br label %764

391:                                              ; preds = %398
  %392 = getelementptr inbounds [1 x i32], [1 x i32]* %154, i64 0, i64 1
  %393 = load i32, i32* %392, align 4
  %394 = add i32 %393, -1
  %395 = icmp ult i32 %394, 127
  %396 = icmp eq i32 %393, 77
  %397 = and i1 %395, %396
  br i1 %397, label %961, label %764

398:                                              ; preds = %279, %274, %953
  switch i32 %257, label %764 [
    i32 77, label %391
    i32 83, label %484
  ]

399:                                              ; preds = %961
  %400 = getelementptr inbounds i32, i32* %48, i64 %962
  %401 = load i32, i32* %400, align 4
  %402 = icmp ugt i32 %401, 127
  br i1 %402, label %763, label %403

403:                                              ; preds = %399
  %404 = call i32 @iswdigit(i32 %401) #13
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %763, label %406

406:                                              ; preds = %403
  %407 = load i64, i64* %4, align 8
  %408 = add i64 %407, 1
  store i64 %408, i64* %4, align 8
  %409 = icmp ugt i64 %28, %407
  br i1 %409, label %411, label %410, !prof !17

410:                                              ; preds = %844, %406
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

411:                                              ; preds = %406
  %412 = getelementptr inbounds i32, i32* %48, i64 %407
  %413 = load i32, i32* %412, align 4
  %414 = icmp ugt i32 %413, 127
  br i1 %414, label %421, label %415

415:                                              ; preds = %411
  %416 = call i32 @iswdigit(i32 %413) #13
  %417 = icmp eq i32 %416, 0
  %418 = add nsw i32 %413, -48
  %419 = select i1 %417, i32 0, i32 %418
  %420 = load i64, i64* %4, align 8
  br label %421

421:                                              ; preds = %415, %411
  %422 = phi i64 [ %420, %415 ], [ %408, %411 ]
  %423 = phi i32 [ %419, %415 ], [ 0, %411 ]
  %424 = icmp ult i64 %422, %28
  br i1 %424, label %837, label %763

425:                                              ; preds = %428
  %426 = load i64, i64* %4, align 8
  %427 = icmp ult i64 %426, %28
  br i1 %427, label %433, label %763

428:                                              ; preds = %338
  %429 = add nsw i32 %160, -1
  %430 = icmp ult i32 %429, 127
  %431 = icmp eq i32 %160, 83
  %432 = and i1 %431, %430
  br i1 %432, label %425, label %557

433:                                              ; preds = %425
  %434 = getelementptr inbounds i32, i32* %48, i64 %426
  %435 = load i32, i32* %434, align 4
  %436 = icmp ugt i32 %435, 127
  br i1 %436, label %763, label %437

437:                                              ; preds = %433
  %438 = call i32 @iswdigit(i32 %435) #13
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %763, label %440

440:                                              ; preds = %437
  %441 = load i64, i64* %4, align 8
  %442 = add i64 %441, 1
  store i64 %442, i64* %4, align 8
  %443 = icmp ugt i64 %28, %441
  br i1 %443, label %445, label %444, !prof !17

444:                                              ; preds = %440
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

445:                                              ; preds = %440
  %446 = getelementptr inbounds i32, i32* %48, i64 %441
  %447 = load i32, i32* %446, align 4
  %448 = icmp ugt i32 %447, 127
  br i1 %448, label %455, label %449

449:                                              ; preds = %445
  %450 = call i32 @iswdigit(i32 %447) #13
  %451 = icmp eq i32 %450, 0
  %452 = add nsw i32 %447, -48
  %453 = select i1 %451, i32 0, i32 %452
  %454 = load i64, i64* %4, align 8
  br label %455

455:                                              ; preds = %449, %445
  %456 = phi i64 [ %454, %449 ], [ %442, %445 ]
  %457 = phi i32 [ %453, %449 ], [ 0, %445 ]
  %458 = icmp ult i64 %456, %28
  br i1 %458, label %459, label %764

459:                                              ; preds = %455
  %460 = getelementptr inbounds i32, i32* %48, i64 %456
  %461 = load i32, i32* %460, align 4
  %462 = icmp ugt i32 %461, 127
  br i1 %462, label %764, label %463

463:                                              ; preds = %459
  %464 = call i32 @iswdigit(i32 %461) #13
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %764, label %466

466:                                              ; preds = %463
  %467 = mul i32 %457, 10
  %468 = load i64, i64* %4, align 8
  %469 = add i64 %468, 1
  store i64 %469, i64* %4, align 8
  %470 = icmp ugt i64 %28, %468
  br i1 %470, label %472, label %471, !prof !17

471:                                              ; preds = %466
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

472:                                              ; preds = %466
  %473 = getelementptr inbounds i32, i32* %48, i64 %468
  %474 = load i32, i32* %473, align 4
  %475 = icmp ugt i32 %474, 127
  br i1 %475, label %481, label %476

476:                                              ; preds = %472
  %477 = call i32 @iswdigit(i32 %474) #13
  %478 = icmp eq i32 %477, 0
  %479 = add nsw i32 %474, -48
  %480 = select i1 %478, i32 0, i32 %479
  br label %481

481:                                              ; preds = %476, %472
  %482 = phi i32 [ %480, %476 ], [ 0, %472 ]
  %483 = add nsw i32 %482, %467
  br label %764

484:                                              ; preds = %398
  %485 = getelementptr inbounds [1 x i32], [1 x i32]* %154, i64 0, i64 1
  %486 = load i32, i32* %485, align 4
  %487 = add i32 %486, -1
  %488 = icmp ult i32 %487, 127
  %489 = icmp eq i32 %486, 83
  %490 = and i1 %488, %489
  br i1 %490, label %964, label %764

491:                                              ; preds = %964
  %492 = getelementptr inbounds i32, i32* %48, i64 %965
  %493 = load i32, i32* %492, align 4
  %494 = icmp ugt i32 %493, 127
  br i1 %494, label %763, label %495

495:                                              ; preds = %491
  %496 = call i32 @iswdigit(i32 %493) #13
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %763, label %498

498:                                              ; preds = %495
  %499 = load i64, i64* %4, align 8
  %500 = add i64 %499, 1
  store i64 %500, i64* %4, align 8
  %501 = icmp ugt i64 %28, %499
  br i1 %501, label %503, label %502, !prof !17

502:                                              ; preds = %868, %498
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

503:                                              ; preds = %498
  %504 = getelementptr inbounds i32, i32* %48, i64 %499
  %505 = load i32, i32* %504, align 4
  %506 = icmp ugt i32 %505, 127
  br i1 %506, label %513, label %507

507:                                              ; preds = %503
  %508 = call i32 @iswdigit(i32 %505) #13
  %509 = icmp eq i32 %508, 0
  %510 = add nsw i32 %505, -48
  %511 = select i1 %509, i32 0, i32 %510
  %512 = load i64, i64* %4, align 8
  br label %513

513:                                              ; preds = %507, %503
  %514 = phi i64 [ %512, %507 ], [ %500, %503 ]
  %515 = phi i32 [ %511, %507 ], [ 0, %503 ]
  %516 = icmp ult i64 %514, %28
  br i1 %516, label %861, label %763

517:                                              ; preds = %155
  %518 = getelementptr inbounds [1 x i32], [1 x i32]* %154, i64 0, i64 0
  %519 = load i32, i32* %518, align 4
  %520 = add i32 %519, -1
  %521 = icmp ult i32 %520, 127
  %522 = icmp eq i32 %519, 70
  %523 = and i1 %521, %522
  br i1 %523, label %524, label %764

524:                                              ; preds = %517
  %525 = getelementptr inbounds [1 x i32], [1 x i32]* %154, i64 0, i64 1
  %526 = load i32, i32* %525, align 4
  %527 = add i32 %526, -1
  %528 = icmp ult i32 %527, 127
  %529 = icmp eq i32 %526, 70
  %530 = and i1 %528, %529
  br i1 %530, label %967, label %764

531:                                              ; preds = %974
  %532 = getelementptr inbounds i32, i32* %48, i64 %975
  %533 = load i32, i32* %532, align 4
  %534 = icmp ugt i32 %533, 127
  br i1 %534, label %763, label %535

535:                                              ; preds = %531
  %536 = call i32 @iswdigit(i32 %533) #13
  %537 = icmp eq i32 %536, 0
  br i1 %537, label %763, label %538

538:                                              ; preds = %535
  %539 = load i64, i64* %4, align 8
  %540 = add i64 %539, 1
  store i64 %540, i64* %4, align 8
  %541 = icmp ugt i64 %28, %539
  br i1 %541, label %543, label %542, !prof !17

542:                                              ; preds = %919, %892, %538
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

543:                                              ; preds = %538
  %544 = getelementptr inbounds i32, i32* %48, i64 %539
  %545 = load i32, i32* %544, align 4
  %546 = icmp ugt i32 %545, 127
  br i1 %546, label %553, label %547

547:                                              ; preds = %543
  %548 = call i32 @iswdigit(i32 %545) #13
  %549 = icmp eq i32 %548, 0
  %550 = add nsw i32 %545, -48
  %551 = select i1 %549, i32 0, i32 %550
  %552 = load i64, i64* %4, align 8
  br label %553

553:                                              ; preds = %547, %543
  %554 = phi i64 [ %552, %547 ], [ %540, %543 ]
  %555 = phi i32 [ %551, %547 ], [ 0, %543 ]
  %556 = icmp ult i64 %554, %28
  br i1 %556, label %885, label %763

557:                                              ; preds = %158, %428
  %558 = getelementptr inbounds [1 x i32], [1 x i32]* %154, i64 0, i64 0
  %559 = load i32, i32* %558, align 4
  %560 = add i32 %559, -1
  %561 = icmp ult i32 %560, 127
  %562 = icmp eq i32 %559, 65
  %563 = and i1 %562, %561
  br i1 %563, label %564, label %633

564:                                              ; preds = %557
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %52, align 8
  %565 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)*** %53, align 8
  %566 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)** %565, i64 11
  %567 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)** %566, align 8
  call void %567(%"class.fxcrt::WideString"* nonnull sret %12, %class.LocaleIface* %2, i1 zeroext true) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %55, align 8
  %568 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)*** %53, align 8
  %569 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)** %568, i64 11
  %570 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)** %569, align 8
  call void %570(%"class.fxcrt::WideString"* nonnull sret %13, %class.LocaleIface* %2, i1 zeroext false) #13
  %571 = load i64, i64* %4, align 8
  %572 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %52, align 8
  %573 = icmp eq %"class.fxcrt::StringDataTemplate"* %572, null
  br i1 %573, label %577, label %574

574:                                              ; preds = %564
  %575 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %572, i64 0, i32 1
  %576 = load i64, i64* %575, align 8
  br label %577

577:                                              ; preds = %564, %574
  %578 = phi i64 [ %576, %574 ], [ 0, %564 ]
  %579 = add i64 %578, %571
  %580 = icmp ugt i64 %579, %28
  br i1 %580, label %601, label %581

581:                                              ; preds = %577
  %582 = getelementptr inbounds i32, i32* %48, i64 %571
  br i1 %573, label %586, label %583

583:                                              ; preds = %581
  %584 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %572, i64 0, i32 1
  %585 = load i64, i64* %584, align 8
  br label %586

586:                                              ; preds = %581, %583
  %587 = phi i64 [ %585, %583 ], [ 0, %581 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56)
  store i32* %582, i32** %57, align 8
  store i64 %587, i64* %58, align 8
  %588 = call zeroext i1 @_ZNK5fxcrt10WideStringeqENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"* nonnull %12, %"class.fxcrt::StringViewTemplate"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56)
  br i1 %588, label %591, label %589

589:                                              ; preds = %586
  %590 = load i64, i64* %4, align 8
  br label %601

591:                                              ; preds = %586
  %592 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %52, align 8
  %593 = icmp eq %"class.fxcrt::StringDataTemplate"* %592, null
  br i1 %593, label %597, label %594

594:                                              ; preds = %591
  %595 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %592, i64 0, i32 1
  %596 = load i64, i64* %595, align 8
  br label %597

597:                                              ; preds = %591, %594
  %598 = phi i64 [ %596, %594 ], [ 0, %591 ]
  %599 = load i64, i64* %4, align 8
  %600 = add i64 %599, %598
  store i64 %600, i64* %4, align 8
  br label %630

601:                                              ; preds = %589, %577
  %602 = phi i64 [ %590, %589 ], [ %571, %577 ]
  %603 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %55, align 8
  %604 = icmp eq %"class.fxcrt::StringDataTemplate"* %603, null
  br i1 %604, label %608, label %605

605:                                              ; preds = %601
  %606 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %603, i64 0, i32 1
  %607 = load i64, i64* %606, align 8
  br label %608

608:                                              ; preds = %601, %605
  %609 = phi i64 [ %607, %605 ], [ 0, %601 ]
  %610 = add i64 %609, %602
  %611 = icmp ugt i64 %610, %28
  br i1 %611, label %630, label %612

612:                                              ; preds = %608
  %613 = getelementptr inbounds i32, i32* %48, i64 %602
  br i1 %604, label %617, label %614

614:                                              ; preds = %612
  %615 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %603, i64 0, i32 1
  %616 = load i64, i64* %615, align 8
  br label %617

617:                                              ; preds = %612, %614
  %618 = phi i64 [ %616, %614 ], [ 0, %612 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59)
  store i32* %613, i32** %60, align 8
  store i64 %618, i64* %61, align 8
  %619 = call zeroext i1 @_ZNK5fxcrt10WideStringeqENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"* nonnull %13, %"class.fxcrt::StringViewTemplate"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59)
  br i1 %619, label %620, label %630

620:                                              ; preds = %617
  %621 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %55, align 8
  %622 = icmp eq %"class.fxcrt::StringDataTemplate"* %621, null
  br i1 %622, label %626, label %623

623:                                              ; preds = %620
  %624 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %621, i64 0, i32 1
  %625 = load i64, i64* %624, align 8
  br label %626

626:                                              ; preds = %620, %623
  %627 = phi i64 [ %625, %623 ], [ 0, %620 ]
  %628 = load i64, i64* %4, align 8
  %629 = add i64 %628, %627
  store i64 %629, i64* %4, align 8
  br label %630

630:                                              ; preds = %608, %617, %626, %597
  %631 = phi i8 [ 1, %597 ], [ 1, %626 ], [ %75, %617 ], [ %75, %608 ]
  %632 = phi i8 [ %74, %597 ], [ 1, %626 ], [ %74, %617 ], [ %74, %608 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #13
  br label %764

633:                                              ; preds = %557
  %634 = icmp eq i32 %559, 90
  %635 = and i1 %634, %561
  br i1 %635, label %636, label %730

636:                                              ; preds = %633
  %637 = load i64, i64* %4, align 8
  %638 = add i64 %637, 3
  %639 = icmp ugt i64 %638, %28
  br i1 %639, label %764, label %640

640:                                              ; preds = %636
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %63, align 8
  %641 = add i64 %637, 1
  store i64 %641, i64* %4, align 8
  %642 = icmp ugt i64 %28, %637
  br i1 %642, label %644, label %643, !prof !17

643:                                              ; preds = %640
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

644:                                              ; preds = %640
  %645 = getelementptr inbounds i32, i32* %48, i64 %637
  %646 = load i32, i32* %645, align 4
  call void @_ZN5fxcrt10WideStringC1Ew(%"class.fxcrt::WideString"* nonnull %14, i32 signext %646) #13
  %647 = load i64, i64* %4, align 8
  %648 = add i64 %647, 1
  store i64 %648, i64* %4, align 8
  %649 = icmp ugt i64 %28, %647
  br i1 %649, label %651, label %650, !prof !17

650:                                              ; preds = %644
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

651:                                              ; preds = %644
  %652 = getelementptr inbounds i32, i32* %48, i64 %647
  %653 = load i32, i32* %652, align 4
  %654 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %14, i32 signext %653) #13
  %655 = load i64, i64* %4, align 8
  %656 = add i64 %655, 1
  store i64 %656, i64* %4, align 8
  %657 = icmp ugt i64 %28, %655
  br i1 %657, label %659, label %658, !prof !17

658:                                              ; preds = %651
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

659:                                              ; preds = %651
  %660 = getelementptr inbounds i32, i32* %48, i64 %655
  %661 = load i32, i32* %660, align 4
  %662 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %14, i32 signext %661) #13
  %663 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %63, align 8, !noalias !186
  %664 = icmp eq %"class.fxcrt::StringDataTemplate"* %663, null
  %665 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %663, i64 0, i32 3
  %666 = select i1 %664, [1 x i32]* @.str.15, [1 x i32]* %665
  br i1 %664, label %685, label %667

667:                                              ; preds = %659
  %668 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %663, i64 0, i32 1
  %669 = load i64, i64* %668, align 8, !noalias !186
  %670 = icmp eq i64 %669, 3
  br i1 %670, label %671, label %685

671:                                              ; preds = %667
  %672 = getelementptr inbounds [1 x i32], [1 x i32]* %666, i64 0, i64 0
  %673 = load i32, i32* %672, align 4
  %674 = add i32 %673, -1
  %675 = icmp ult i32 %674, 127
  %676 = icmp eq i32 %673, 71
  %677 = and i1 %675, %676
  br i1 %677, label %678, label %685

678:                                              ; preds = %671
  %679 = getelementptr inbounds [1 x i32], [1 x i32]* %666, i64 0, i64 1
  %680 = load i32, i32* %679, align 4
  %681 = add i32 %680, -1
  %682 = icmp ult i32 %681, 127
  %683 = icmp eq i32 %680, 77
  %684 = and i1 %682, %683
  br i1 %684, label %977, label %685

685:                                              ; preds = %977, %678, %671, %659, %667
  %686 = call zeroext i1 @_ZNK5fxcrt10WideStringeqEPKw(%"class.fxcrt::WideString"* nonnull %14, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.45, i64 0, i64 0)) #13
  br i1 %686, label %715, label %725

687:                                              ; preds = %984
  %688 = getelementptr inbounds i32, i32* %48, i64 %985
  %689 = load i32, i32* %688, align 4
  switch i32 %689, label %699 [
    i32 45, label %690
    i32 43, label %690
  ]

690:                                              ; preds = %687, %687
  %691 = icmp ult i64 %28, %985
  br i1 %691, label %692, label %693, !prof !2

692:                                              ; preds = %690
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !noalias !189, !srcloc !6
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !noalias !189, !srcloc !7
  unreachable

693:                                              ; preds = %690
  %694 = sub i64 %28, %985
  store i32* %688, i32** %65, align 8, !alias.scope !189
  store i64 %694, i64* %66, align 8, !alias.scope !189
  %695 = call fastcc i64 @_ZN12_GLOBAL__N_113ParseTimeZoneEN6pdfium4spanIKwEEPi(%"class.pdfium::span"* nonnull %16, i32* nonnull %15)
  %696 = load i64, i64* %4, align 8
  %697 = add i64 %696, %695
  store i64 %697, i64* %4, align 8
  %698 = load i32, i32* %15, align 4
  br label %699

699:                                              ; preds = %687, %693, %984
  %700 = phi i32 [ 0, %687 ], [ %698, %693 ], [ 0, %984 ]
  %701 = mul i32 %76, 60
  %702 = load i32 (%class.LocaleIface*)**, i32 (%class.LocaleIface*)*** %67, align 8
  %703 = getelementptr inbounds i32 (%class.LocaleIface*)*, i32 (%class.LocaleIface*)** %702, i64 12
  %704 = load i32 (%class.LocaleIface*)*, i32 (%class.LocaleIface*)** %703, align 8
  %705 = call i32 %704(%class.LocaleIface* %2) #13
  %706 = add i32 %701, %77
  %707 = sub i32 %706, %700
  %708 = add i32 %707, %705
  %709 = srem i32 %708, 1440
  %710 = icmp slt i32 %709, 0
  %711 = add nsw i32 %709, 1440
  %712 = select i1 %710, i32 %711, i32 %709
  %713 = sdiv i32 %712, 60
  %714 = srem i32 %712, 60
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64) #13
  br label %727

715:                                              ; preds = %946, %944, %942, %940, %938, %936, %725, %685
  %716 = phi i64 [ 0, %685 ], [ 1, %725 ], [ 2, %936 ], [ 3, %938 ], [ 4, %940 ], [ 5, %942 ], [ 6, %944 ], [ 7, %946 ]
  %717 = getelementptr inbounds [8 x %"struct.(anonymous namespace)::FX_LOCALETIMEZONEINFO"], [8 x %"struct.(anonymous namespace)::FX_LOCALETIMEZONEINFO"]* @_ZN12_GLOBAL__N_122g_FXLocaleTimeZoneDataE, i64 0, i64 %716, i32 1
  %718 = load i16, i16* %717, align 8
  %719 = sext i16 %718 to i32
  %720 = add i32 %76, %719
  %721 = getelementptr inbounds [8 x %"struct.(anonymous namespace)::FX_LOCALETIMEZONEINFO"], [8 x %"struct.(anonymous namespace)::FX_LOCALETIMEZONEINFO"]* @_ZN12_GLOBAL__N_122g_FXLocaleTimeZoneDataE, i64 0, i64 %716, i32 2
  %722 = load i16, i16* %721, align 2
  %723 = sext i16 %722 to i32
  %724 = sub i32 %77, %723
  br label %727

725:                                              ; preds = %685
  %726 = call zeroext i1 @_ZNK5fxcrt10WideStringeqEPKw(%"class.fxcrt::WideString"* nonnull %14, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.46, i64 0, i64 0)) #13
  br i1 %726, label %715, label %936

727:                                              ; preds = %946, %715, %699
  %728 = phi i32 [ %714, %699 ], [ %724, %715 ], [ %77, %946 ]
  %729 = phi i32 [ %713, %699 ], [ %720, %715 ], [ %76, %946 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #13
  br label %764

730:                                              ; preds = %633
  %731 = icmp eq i32 %559, 122
  %732 = and i1 %731, %561
  br i1 %732, label %733, label %764

733:                                              ; preds = %730
  %734 = load i64, i64* %4, align 8
  %735 = icmp ugt i64 %28, %734
  br i1 %735, label %737, label %736, !prof !17

736:                                              ; preds = %733
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

737:                                              ; preds = %733
  %738 = getelementptr inbounds i32, i32* %48, i64 %734
  %739 = load i32, i32* %738, align 4
  %740 = icmp eq i32 %739, 90
  br i1 %740, label %761, label %741

741:                                              ; preds = %737
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #13
  store i32 0, i32* %17, align 4
  %742 = sub i64 %28, %734
  store i32* %738, i32** %69, align 8, !alias.scope !192
  store i64 %742, i64* %70, align 8, !alias.scope !192
  %743 = call fastcc i64 @_ZN12_GLOBAL__N_113ParseTimeZoneEN6pdfium4spanIKwEEPi(%"class.pdfium::span"* nonnull %18, i32* nonnull %17)
  %744 = load i64, i64* %4, align 8
  %745 = add i64 %744, %743
  store i64 %745, i64* %4, align 8
  %746 = load i32, i32* %17, align 4
  %747 = mul i32 %76, 60
  %748 = load i32 (%class.LocaleIface*)**, i32 (%class.LocaleIface*)*** %67, align 8
  %749 = getelementptr inbounds i32 (%class.LocaleIface*)*, i32 (%class.LocaleIface*)** %748, i64 12
  %750 = load i32 (%class.LocaleIface*)*, i32 (%class.LocaleIface*)** %749, align 8
  %751 = call i32 %750(%class.LocaleIface* %2) #13
  %752 = add i32 %747, %77
  %753 = sub i32 %752, %746
  %754 = add i32 %753, %751
  %755 = srem i32 %754, 1440
  %756 = icmp slt i32 %755, 0
  %757 = add nsw i32 %755, 1440
  %758 = select i1 %756, i32 %757, i32 %755
  %759 = sdiv i32 %758, 60
  %760 = srem i32 %758, 60
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #13
  br label %764

761:                                              ; preds = %737
  %762 = add nuw i64 %734, 1
  store i64 %762, i64* %4, align 8
  br label %764

763:                                              ; preds = %188, %184, %181, %295, %291, %288, %313, %809, %813, %344, %340, %335, %403, %399, %961, %421, %837, %841, %437, %433, %425, %495, %491, %964, %513, %861, %865, %535, %531, %974, %553, %885, %889, %907, %912, %916
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #13
  br label %807

764:                                              ; preds = %967, %524, %484, %391, %328, %517, %155, %398, %255, %321, %730, %245, %149, %235, %830, %370, %366, %362, %388, %463, %459, %455, %481, %858, %882, %933, %958, %252, %317, %241, %727, %741, %761, %630, %636
  %765 = phi i32 [ %79, %636 ], [ %79, %630 ], [ %79, %727 ], [ %79, %761 ], [ %79, %741 ], [ %79, %241 ], [ %79, %317 ], [ %79, %252 ], [ %79, %958 ], [ %935, %933 ], [ %79, %882 ], [ %79, %858 ], [ %79, %730 ], [ %79, %481 ], [ %79, %455 ], [ %79, %459 ], [ %79, %463 ], [ %79, %388 ], [ %79, %362 ], [ %79, %366 ], [ %79, %370 ], [ %79, %245 ], [ %79, %830 ], [ %79, %235 ], [ %79, %149 ], [ %79, %328 ], [ %79, %321 ], [ %79, %517 ], [ %79, %524 ], [ %79, %967 ], [ %79, %484 ], [ %79, %391 ], [ %79, %255 ], [ %79, %398 ], [ %79, %155 ]
  %766 = phi i32 [ %78, %636 ], [ %78, %630 ], [ %78, %727 ], [ %78, %761 ], [ %78, %741 ], [ %78, %241 ], [ %78, %317 ], [ %78, %252 ], [ %78, %958 ], [ %78, %933 ], [ %884, %882 ], [ %78, %858 ], [ %78, %730 ], [ %483, %481 ], [ %457, %455 ], [ %457, %459 ], [ %457, %463 ], [ %78, %388 ], [ %78, %362 ], [ %78, %366 ], [ %78, %370 ], [ %78, %245 ], [ %78, %830 ], [ %78, %235 ], [ %78, %149 ], [ %78, %328 ], [ %78, %321 ], [ %78, %517 ], [ %78, %524 ], [ %78, %967 ], [ %78, %484 ], [ %78, %391 ], [ %78, %255 ], [ %78, %398 ], [ %78, %155 ]
  %767 = phi i32 [ %77, %636 ], [ %77, %630 ], [ %728, %727 ], [ %77, %761 ], [ %760, %741 ], [ %77, %241 ], [ %77, %317 ], [ %77, %252 ], [ %77, %958 ], [ %77, %933 ], [ %77, %882 ], [ %860, %858 ], [ %77, %730 ], [ %77, %481 ], [ %77, %455 ], [ %77, %459 ], [ %77, %463 ], [ %390, %388 ], [ %364, %362 ], [ %364, %366 ], [ %364, %370 ], [ %77, %245 ], [ %77, %830 ], [ %77, %235 ], [ %77, %149 ], [ %77, %328 ], [ %77, %321 ], [ %77, %517 ], [ %77, %524 ], [ %77, %967 ], [ %77, %484 ], [ %77, %391 ], [ %77, %255 ], [ %77, %398 ], [ %77, %155 ]
  %768 = phi i32 [ %76, %636 ], [ %76, %630 ], [ %729, %727 ], [ %76, %761 ], [ %759, %741 ], [ %236, %241 ], [ %832, %317 ], [ %254, %252 ], [ %960, %958 ], [ %76, %933 ], [ %76, %882 ], [ %76, %858 ], [ %76, %730 ], [ %76, %481 ], [ %76, %455 ], [ %76, %459 ], [ %76, %463 ], [ %76, %388 ], [ %76, %362 ], [ %76, %366 ], [ %76, %370 ], [ %236, %245 ], [ %832, %830 ], [ %236, %235 ], [ %76, %149 ], [ %832, %328 ], [ %832, %321 ], [ %76, %517 ], [ %76, %524 ], [ %76, %967 ], [ %76, %484 ], [ %76, %391 ], [ %76, %255 ], [ %76, %398 ], [ %76, %155 ]
  %769 = phi i8 [ %75, %636 ], [ %631, %630 ], [ %75, %727 ], [ %75, %761 ], [ %75, %741 ], [ %75, %241 ], [ %75, %317 ], [ %75, %252 ], [ %75, %958 ], [ %75, %933 ], [ %75, %882 ], [ %75, %858 ], [ %75, %730 ], [ %75, %481 ], [ %75, %455 ], [ %75, %459 ], [ %75, %463 ], [ %75, %388 ], [ %75, %362 ], [ %75, %366 ], [ %75, %370 ], [ %75, %245 ], [ %75, %830 ], [ %75, %235 ], [ %75, %149 ], [ %75, %328 ], [ %75, %321 ], [ %75, %517 ], [ %75, %524 ], [ %75, %967 ], [ %75, %484 ], [ %75, %391 ], [ %75, %255 ], [ %75, %398 ], [ %75, %155 ]
  %770 = phi i8 [ %74, %636 ], [ %632, %630 ], [ %74, %727 ], [ %74, %761 ], [ %74, %741 ], [ %74, %241 ], [ %74, %317 ], [ %74, %252 ], [ %74, %958 ], [ %74, %933 ], [ %74, %882 ], [ %74, %858 ], [ %74, %730 ], [ %74, %481 ], [ %74, %455 ], [ %74, %459 ], [ %74, %463 ], [ %74, %388 ], [ %74, %362 ], [ %74, %366 ], [ %74, %370 ], [ %74, %245 ], [ %74, %830 ], [ %74, %235 ], [ %74, %149 ], [ %74, %328 ], [ %74, %321 ], [ %74, %517 ], [ %74, %524 ], [ %74, %967 ], [ %74, %484 ], [ %74, %391 ], [ %74, %255 ], [ %74, %398 ], [ %74, %155 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #13
  %771 = load i64, i64* %4, align 8
  %772 = icmp ult i64 %771, %28
  br i1 %772, label %71, label %773

773:                                              ; preds = %764, %80, %119
  %774 = phi i32 [ %79, %119 ], [ %79, %80 ], [ %765, %764 ]
  %775 = phi i32 [ %78, %119 ], [ %78, %80 ], [ %766, %764 ]
  %776 = phi i32 [ %77, %119 ], [ %77, %80 ], [ %767, %764 ]
  %777 = phi i32 [ %76, %119 ], [ %76, %80 ], [ %768, %764 ]
  %778 = phi i8 [ %75, %119 ], [ %75, %80 ], [ %769, %764 ]
  %779 = phi i8 [ %74, %119 ], [ %74, %80 ], [ %770, %764 ]
  %780 = and i8 %778, 1
  %781 = icmp eq i8 %780, 0
  br i1 %781, label %792, label %782

782:                                              ; preds = %773
  %783 = and i8 %779, 1
  %784 = icmp eq i8 %783, 0
  br i1 %784, label %789, label %785

785:                                              ; preds = %782
  %786 = add i32 %777, 12
  %787 = icmp eq i32 %786, 24
  %788 = select i1 %787, i32 12, i32 %786
  br label %792

789:                                              ; preds = %782
  %790 = icmp eq i32 %777, 12
  %791 = select i1 %790, i32 0, i32 %777
  br label %792

792:                                              ; preds = %36, %789, %773, %785
  %793 = phi i32 [ %776, %773 ], [ %776, %785 ], [ %776, %789 ], [ 0, %36 ]
  %794 = phi i32 [ %775, %773 ], [ %775, %785 ], [ %775, %789 ], [ 0, %36 ]
  %795 = phi i32 [ %774, %773 ], [ %774, %785 ], [ %774, %789 ], [ 0, %36 ]
  %796 = phi i32 [ %777, %773 ], [ %788, %785 ], [ %791, %789 ], [ 0, %36 ]
  %797 = trunc i32 %796 to i8
  %798 = trunc i32 %793 to i8
  %799 = trunc i32 %794 to i8
  %800 = trunc i32 %795 to i16
  %801 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %3, i64 0, i32 3
  store i8 %797, i8* %801, align 2
  %802 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %3, i64 0, i32 4
  store i8 %798, i8* %802, align 1
  %803 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %3, i64 0, i32 5
  store i8 %799, i8* %803, align 4
  %804 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %3, i64 0, i32 6
  store i16 %800, i16* %804, align 2
  %805 = load i64, i64* %4, align 8
  %806 = icmp ne i64 %805, 0
  br label %807

807:                                              ; preds = %112, %763, %111, %792
  %808 = phi i1 [ false, %111 ], [ %806, %792 ], [ false, %763 ], [ false, %112 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  ret i1 %808

809:                                              ; preds = %313
  %810 = getelementptr inbounds i32, i32* %48, i64 %314
  %811 = load i32, i32* %810, align 4
  %812 = icmp ugt i32 %811, 127
  br i1 %812, label %763, label %813

813:                                              ; preds = %809
  %814 = call i32 @iswdigit(i32 %811) #13
  %815 = icmp eq i32 %814, 0
  br i1 %815, label %763, label %816

816:                                              ; preds = %813
  %817 = mul i32 %315, 10
  %818 = load i64, i64* %4, align 8
  %819 = add i64 %818, 1
  store i64 %819, i64* %4, align 8
  %820 = icmp ugt i64 %28, %818
  br i1 %820, label %821, label %302, !prof !17

821:                                              ; preds = %816
  %822 = getelementptr inbounds i32, i32* %48, i64 %818
  %823 = load i32, i32* %822, align 4
  %824 = icmp ugt i32 %823, 127
  br i1 %824, label %830, label %825

825:                                              ; preds = %821
  %826 = call i32 @iswdigit(i32 %823) #13
  %827 = icmp eq i32 %826, 0
  %828 = add nsw i32 %823, -48
  %829 = select i1 %827, i32 0, i32 %828
  br label %830

830:                                              ; preds = %825, %821
  %831 = phi i32 [ %829, %825 ], [ 0, %821 ]
  %832 = add nsw i32 %831, %817
  %833 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %50, align 8, !noalias !183
  %834 = icmp eq %"class.fxcrt::StringDataTemplate"* %833, null
  %835 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %833, i64 0, i32 3
  %836 = select i1 %834, [1 x i32]* @.str.15, [1 x i32]* %835
  br i1 %834, label %764, label %317

837:                                              ; preds = %421
  %838 = getelementptr inbounds i32, i32* %48, i64 %422
  %839 = load i32, i32* %838, align 4
  %840 = icmp ugt i32 %839, 127
  br i1 %840, label %763, label %841

841:                                              ; preds = %837
  %842 = call i32 @iswdigit(i32 %839) #13
  %843 = icmp eq i32 %842, 0
  br i1 %843, label %763, label %844

844:                                              ; preds = %841
  %845 = mul i32 %423, 10
  %846 = load i64, i64* %4, align 8
  %847 = add i64 %846, 1
  store i64 %847, i64* %4, align 8
  %848 = icmp ugt i64 %28, %846
  br i1 %848, label %849, label %410, !prof !17

849:                                              ; preds = %844
  %850 = getelementptr inbounds i32, i32* %48, i64 %846
  %851 = load i32, i32* %850, align 4
  %852 = icmp ugt i32 %851, 127
  br i1 %852, label %858, label %853

853:                                              ; preds = %849
  %854 = call i32 @iswdigit(i32 %851) #13
  %855 = icmp eq i32 %854, 0
  %856 = add nsw i32 %851, -48
  %857 = select i1 %855, i32 0, i32 %856
  br label %858

858:                                              ; preds = %853, %849
  %859 = phi i32 [ %857, %853 ], [ 0, %849 ]
  %860 = add nsw i32 %859, %845
  br label %764

861:                                              ; preds = %513
  %862 = getelementptr inbounds i32, i32* %48, i64 %514
  %863 = load i32, i32* %862, align 4
  %864 = icmp ugt i32 %863, 127
  br i1 %864, label %763, label %865

865:                                              ; preds = %861
  %866 = call i32 @iswdigit(i32 %863) #13
  %867 = icmp eq i32 %866, 0
  br i1 %867, label %763, label %868

868:                                              ; preds = %865
  %869 = mul i32 %515, 10
  %870 = load i64, i64* %4, align 8
  %871 = add i64 %870, 1
  store i64 %871, i64* %4, align 8
  %872 = icmp ugt i64 %28, %870
  br i1 %872, label %873, label %502, !prof !17

873:                                              ; preds = %868
  %874 = getelementptr inbounds i32, i32* %48, i64 %870
  %875 = load i32, i32* %874, align 4
  %876 = icmp ugt i32 %875, 127
  br i1 %876, label %882, label %877

877:                                              ; preds = %873
  %878 = call i32 @iswdigit(i32 %875) #13
  %879 = icmp eq i32 %878, 0
  %880 = add nsw i32 %875, -48
  %881 = select i1 %879, i32 0, i32 %880
  br label %882

882:                                              ; preds = %877, %873
  %883 = phi i32 [ %881, %877 ], [ 0, %873 ]
  %884 = add nsw i32 %883, %869
  br label %764

885:                                              ; preds = %553
  %886 = getelementptr inbounds i32, i32* %48, i64 %554
  %887 = load i32, i32* %886, align 4
  %888 = icmp ugt i32 %887, 127
  br i1 %888, label %763, label %889

889:                                              ; preds = %885
  %890 = call i32 @iswdigit(i32 %887) #13
  %891 = icmp eq i32 %890, 0
  br i1 %891, label %763, label %892

892:                                              ; preds = %889
  %893 = mul i32 %555, 10
  %894 = load i64, i64* %4, align 8
  %895 = add i64 %894, 1
  store i64 %895, i64* %4, align 8
  %896 = icmp ugt i64 %28, %894
  br i1 %896, label %897, label %542, !prof !17

897:                                              ; preds = %892
  %898 = getelementptr inbounds i32, i32* %48, i64 %894
  %899 = load i32, i32* %898, align 4
  %900 = icmp ugt i32 %899, 127
  br i1 %900, label %907, label %901

901:                                              ; preds = %897
  %902 = call i32 @iswdigit(i32 %899) #13
  %903 = icmp eq i32 %902, 0
  %904 = add nsw i32 %899, -48
  %905 = select i1 %903, i32 0, i32 %904
  %906 = load i64, i64* %4, align 8
  br label %907

907:                                              ; preds = %901, %897
  %908 = phi i64 [ %906, %901 ], [ %895, %897 ]
  %909 = phi i32 [ %905, %901 ], [ 0, %897 ]
  %910 = add nsw i32 %909, %893
  %911 = icmp ult i64 %908, %28
  br i1 %911, label %912, label %763

912:                                              ; preds = %907
  %913 = getelementptr inbounds i32, i32* %48, i64 %908
  %914 = load i32, i32* %913, align 4
  %915 = icmp ugt i32 %914, 127
  br i1 %915, label %763, label %916

916:                                              ; preds = %912
  %917 = call i32 @iswdigit(i32 %914) #13
  %918 = icmp eq i32 %917, 0
  br i1 %918, label %763, label %919

919:                                              ; preds = %916
  %920 = mul i32 %910, 10
  %921 = load i64, i64* %4, align 8
  %922 = add i64 %921, 1
  store i64 %922, i64* %4, align 8
  %923 = icmp ugt i64 %28, %921
  br i1 %923, label %924, label %542, !prof !17

924:                                              ; preds = %919
  %925 = getelementptr inbounds i32, i32* %48, i64 %921
  %926 = load i32, i32* %925, align 4
  %927 = icmp ugt i32 %926, 127
  br i1 %927, label %933, label %928

928:                                              ; preds = %924
  %929 = call i32 @iswdigit(i32 %926) #13
  %930 = icmp eq i32 %929, 0
  %931 = add nsw i32 %926, -48
  %932 = select i1 %930, i32 0, i32 %931
  br label %933

933:                                              ; preds = %928, %924
  %934 = phi i32 [ %932, %928 ], [ 0, %924 ]
  %935 = add nsw i32 %934, %920
  br label %764

936:                                              ; preds = %725
  %937 = call zeroext i1 @_ZNK5fxcrt10WideStringeqEPKw(%"class.fxcrt::WideString"* nonnull %14, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.47, i64 0, i64 0)) #13
  br i1 %937, label %715, label %938

938:                                              ; preds = %936
  %939 = call zeroext i1 @_ZNK5fxcrt10WideStringeqEPKw(%"class.fxcrt::WideString"* nonnull %14, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.48, i64 0, i64 0)) #13
  br i1 %939, label %715, label %940

940:                                              ; preds = %938
  %941 = call zeroext i1 @_ZNK5fxcrt10WideStringeqEPKw(%"class.fxcrt::WideString"* nonnull %14, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.49, i64 0, i64 0)) #13
  br i1 %941, label %715, label %942

942:                                              ; preds = %940
  %943 = call zeroext i1 @_ZNK5fxcrt10WideStringeqEPKw(%"class.fxcrt::WideString"* nonnull %14, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.50, i64 0, i64 0)) #13
  br i1 %943, label %715, label %944

944:                                              ; preds = %942
  %945 = call zeroext i1 @_ZNK5fxcrt10WideStringeqEPKw(%"class.fxcrt::WideString"* nonnull %14, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.51, i64 0, i64 0)) #13
  br i1 %945, label %715, label %946

946:                                              ; preds = %944
  %947 = call zeroext i1 @_ZNK5fxcrt10WideStringeqEPKw(%"class.fxcrt::WideString"* nonnull %14, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.52, i64 0, i64 0)) #13
  br i1 %947, label %715, label %727

948:                                              ; preds = %260
  %949 = sext i32 %262 to i64
  %950 = getelementptr inbounds i32, i32* %267, i64 %949
  %951 = load i32, i32* %950, align 4
  %952 = icmp eq i32 %951, %270
  br i1 %952, label %288, label %279

953:                                              ; preds = %274
  %954 = sext i32 %276 to i64
  %955 = getelementptr inbounds i32, i32* %281, i64 %954
  %956 = load i32, i32* %955, align 4
  %957 = icmp eq i32 %956, %284
  br i1 %957, label %288, label %398

958:                                              ; preds = %328
  %959 = icmp eq i32 %832, 24
  %960 = select i1 %959, i32 0, i32 %832
  br label %764

961:                                              ; preds = %391
  %962 = load i64, i64* %4, align 8
  %963 = icmp ult i64 %962, %28
  br i1 %963, label %399, label %763

964:                                              ; preds = %484
  %965 = load i64, i64* %4, align 8
  %966 = icmp ult i64 %965, %28
  br i1 %966, label %491, label %763

967:                                              ; preds = %524
  %968 = getelementptr inbounds [1 x i32], [1 x i32]* %154, i64 0, i64 2
  %969 = load i32, i32* %968, align 4
  %970 = add i32 %969, -1
  %971 = icmp ult i32 %970, 127
  %972 = icmp eq i32 %969, 70
  %973 = and i1 %971, %972
  br i1 %973, label %974, label %764

974:                                              ; preds = %967
  %975 = load i64, i64* %4, align 8
  %976 = icmp ult i64 %975, %28
  br i1 %976, label %531, label %763

977:                                              ; preds = %678
  %978 = getelementptr inbounds [1 x i32], [1 x i32]* %666, i64 0, i64 2
  %979 = load i32, i32* %978, align 4
  %980 = add i32 %979, -1
  %981 = icmp ult i32 %980, 127
  %982 = icmp eq i32 %979, 84
  %983 = and i1 %981, %982
  br i1 %983, label %984, label %685

984:                                              ; preds = %977
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64) #13
  store i32 0, i32* %15, align 4
  %985 = load i64, i64* %4, align 8
  %986 = icmp ugt i64 %28, %985
  br i1 %986, label %687, label %699
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK21CFGAS_StringFormatter9ParseZeroERKN5fxcrt10WideStringE(%class.CFGAS_StringFormatter*, %"class.fxcrt::WideString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::WideString", align 8
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.fxcrt::WideString", align 8
  %7 = alloca %"class.pdfium::span", align 8
  %8 = bitcast %"class.fxcrt::WideString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %9, align 8
  %10 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.5, i64 0, i64 0), i32** %10, align 8
  %11 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  store i64 4, i64* %11, align 8
  call void @_ZNK21CFGAS_StringFormatter13GetTextFormatEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::WideString"* nonnull sret %3, %class.CFGAS_StringFormatter* %0, %"class.fxcrt::StringViewTemplate"* nonnull %4)
  %12 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %12, align 8, !noalias !195
  %14 = icmp eq %"class.fxcrt::StringDataTemplate"* %13, null
  %15 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %13, i64 0, i32 3, i64 0
  br i1 %14, label %19, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %13, i64 0, i32 1
  %18 = load i64, i64* %17, align 8, !noalias !195
  br label %19

19:                                               ; preds = %2, %16
  %20 = phi i64 [ %18, %16 ], [ 0, %2 ]
  %21 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %9, align 8, !noalias !198
  %22 = icmp eq %"class.fxcrt::StringDataTemplate"* %21, null
  %23 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %21, i64 0, i32 3, i64 0
  br i1 %22, label %27, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %21, i64 0, i32 1
  %26 = load i64, i64* %25, align 8, !noalias !198
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i64 [ %26, %24 ], [ 0, %19 ]
  %29 = ptrtoint i32* %23 to i64
  %30 = select i1 %22, i64 0, i64 %29
  %31 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  store i64 0, i64* %5, align 8
  %32 = icmp ne i64 %28, 0
  %33 = icmp ne i64 %20, 0
  %34 = and i1 %33, %32
  br i1 %34, label %35, label %84

35:                                               ; preds = %27
  %36 = inttoptr i64 %30 to i32*
  %37 = select i1 %14, i32* null, i32* %15
  %38 = bitcast %"class.fxcrt::WideString"* %6 to i8*
  %39 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.pdfium::span"* %7 to i64*
  %41 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %7, i64 0, i32 1
  br label %42

42:                                               ; preds = %35, %78
  %43 = phi i64 [ 0, %35 ], [ %79, %78 ]
  %44 = phi i64 [ 0, %35 ], [ %80, %78 ]
  %45 = getelementptr inbounds i32, i32* %36, i64 %43
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 39
  br i1 %47, label %48, label %71

48:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %39, align 8
  store i64 %30, i64* %40, align 8
  store i64 %28, i64* %41, align 8
  call fastcc void @_ZN12_GLOBAL__N_114GetLiteralTextEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %6, %"class.pdfium::span"* nonnull %7, i64* nonnull %5)
  %49 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %39, align 8
  %50 = icmp eq %"class.fxcrt::StringDataTemplate"* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  br label %54

54:                                               ; preds = %48, %51
  %55 = phi i64 [ %53, %51 ], [ 0, %48 ]
  %56 = shl i64 %55, 32
  %57 = ashr exact i64 %56, 32
  %58 = add i64 %57, %44
  %59 = icmp ugt i64 %58, %20
  br i1 %59, label %67, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds i32, i32* %37, i64 %44
  %62 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %49, i64 0, i32 3
  %63 = select i1 %50, [1 x i32]* @.str.15, [1 x i32]* %62
  %64 = getelementptr inbounds [1 x i32], [1 x i32]* %63, i64 0, i64 0
  %65 = call i32 @wcsncmp(i32* %61, i32* %64, i64 %57) #15
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %60, %54
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #13
  br label %90

68:                                               ; preds = %60
  %69 = load i64, i64* %5, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %5, align 8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #13
  br label %78

71:                                               ; preds = %42
  %72 = getelementptr inbounds i32, i32* %37, i64 %44
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %46, %73
  br i1 %74, label %75, label %90

75:                                               ; preds = %71
  %76 = add nuw i64 %44, 1
  %77 = add nuw i64 %43, 1
  store i64 %77, i64* %5, align 8
  br label %78

78:                                               ; preds = %75, %68
  %79 = phi i64 [ %70, %68 ], [ %77, %75 ]
  %80 = phi i64 [ %58, %68 ], [ %76, %75 ]
  %81 = icmp ult i64 %79, %28
  %82 = icmp ult i64 %80, %20
  %83 = and i1 %82, %81
  br i1 %83, label %42, label %84

84:                                               ; preds = %78, %27
  %85 = phi i64 [ 0, %27 ], [ %80, %78 ]
  %86 = phi i64 [ 0, %27 ], [ %79, %78 ]
  %87 = icmp eq i64 %86, %28
  %88 = icmp eq i64 %85, %20
  %89 = and i1 %88, %87
  br label %90

90:                                               ; preds = %71, %84, %67
  %91 = phi i1 [ false, %67 ], [ %89, %84 ], [ false, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  ret i1 %91
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK21CFGAS_StringFormatter9ParseNullERKN5fxcrt10WideStringE(%class.CFGAS_StringFormatter*, %"class.fxcrt::WideString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::WideString", align 8
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.fxcrt::WideString", align 8
  %7 = alloca %"class.pdfium::span", align 8
  %8 = bitcast %"class.fxcrt::WideString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %9, align 8
  %10 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.6, i64 0, i64 0), i32** %10, align 8
  %11 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  store i64 4, i64* %11, align 8
  call void @_ZNK21CFGAS_StringFormatter13GetTextFormatEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::WideString"* nonnull sret %3, %class.CFGAS_StringFormatter* %0, %"class.fxcrt::StringViewTemplate"* nonnull %4)
  %12 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %12, align 8, !noalias !201
  %14 = icmp eq %"class.fxcrt::StringDataTemplate"* %13, null
  %15 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %13, i64 0, i32 3, i64 0
  br i1 %14, label %19, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %13, i64 0, i32 1
  %18 = load i64, i64* %17, align 8, !noalias !201
  br label %19

19:                                               ; preds = %2, %16
  %20 = phi i64 [ %18, %16 ], [ 0, %2 ]
  %21 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %9, align 8, !noalias !204
  %22 = icmp eq %"class.fxcrt::StringDataTemplate"* %21, null
  %23 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %21, i64 0, i32 3, i64 0
  br i1 %22, label %27, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %21, i64 0, i32 1
  %26 = load i64, i64* %25, align 8, !noalias !204
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i64 [ %26, %24 ], [ 0, %19 ]
  %29 = ptrtoint i32* %23 to i64
  %30 = select i1 %22, i64 0, i64 %29
  %31 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  store i64 0, i64* %5, align 8
  %32 = icmp ne i64 %28, 0
  %33 = icmp ne i64 %20, 0
  %34 = and i1 %33, %32
  br i1 %34, label %35, label %84

35:                                               ; preds = %27
  %36 = inttoptr i64 %30 to i32*
  %37 = select i1 %14, i32* null, i32* %15
  %38 = bitcast %"class.fxcrt::WideString"* %6 to i8*
  %39 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.pdfium::span"* %7 to i64*
  %41 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %7, i64 0, i32 1
  br label %42

42:                                               ; preds = %35, %78
  %43 = phi i64 [ 0, %35 ], [ %79, %78 ]
  %44 = phi i64 [ 0, %35 ], [ %80, %78 ]
  %45 = getelementptr inbounds i32, i32* %36, i64 %43
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 39
  br i1 %47, label %48, label %71

48:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #13
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %39, align 8
  store i64 %30, i64* %40, align 8
  store i64 %28, i64* %41, align 8
  call fastcc void @_ZN12_GLOBAL__N_114GetLiteralTextEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %6, %"class.pdfium::span"* nonnull %7, i64* nonnull %5)
  %49 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %39, align 8
  %50 = icmp eq %"class.fxcrt::StringDataTemplate"* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  br label %54

54:                                               ; preds = %48, %51
  %55 = phi i64 [ %53, %51 ], [ 0, %48 ]
  %56 = shl i64 %55, 32
  %57 = ashr exact i64 %56, 32
  %58 = add i64 %57, %44
  %59 = icmp ugt i64 %58, %20
  br i1 %59, label %67, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds i32, i32* %37, i64 %44
  %62 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %49, i64 0, i32 3
  %63 = select i1 %50, [1 x i32]* @.str.15, [1 x i32]* %62
  %64 = getelementptr inbounds [1 x i32], [1 x i32]* %63, i64 0, i64 0
  %65 = call i32 @wcsncmp(i32* %61, i32* %64, i64 %57) #15
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %60, %54
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #13
  br label %90

68:                                               ; preds = %60
  %69 = load i64, i64* %5, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %5, align 8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #13
  br label %78

71:                                               ; preds = %42
  %72 = getelementptr inbounds i32, i32* %37, i64 %44
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %46, %73
  br i1 %74, label %75, label %90

75:                                               ; preds = %71
  %76 = add nuw i64 %44, 1
  %77 = add nuw i64 %43, 1
  store i64 %77, i64* %5, align 8
  br label %78

78:                                               ; preds = %75, %68
  %79 = phi i64 [ %70, %68 ], [ %77, %75 ]
  %80 = phi i64 [ %58, %68 ], [ %76, %75 ]
  %81 = icmp ult i64 %79, %28
  %82 = icmp ult i64 %80, %20
  %83 = and i1 %82, %81
  br i1 %83, label %42, label %84

84:                                               ; preds = %78, %27
  %85 = phi i64 [ 0, %27 ], [ %80, %78 ]
  %86 = phi i64 [ 0, %27 ], [ %79, %78 ]
  %87 = icmp eq i64 %86, %28
  %88 = icmp eq i64 %85, %20
  %89 = and i1 %88, %87
  br label %90

90:                                               ; preds = %71, %84, %67
  %91 = phi i1 [ false, %67 ], [ %89, %84 ], [ false, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  ret i1 %91
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK21CFGAS_StringFormatter10FormatTextERKN5fxcrt10WideStringEPS1_(%class.CFGAS_StringFormatter*, %"class.fxcrt::WideString"* nocapture readonly dereferenceable(8), %"class.fxcrt::WideString"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.fxcrt::WideString", align 8
  %8 = alloca %"class.pdfium::span", align 8
  %9 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %9, align 8
  %11 = icmp eq %"class.fxcrt::StringDataTemplate"* %10, null
  br i1 %11, label %127, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %10, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %127, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 1, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %127, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  %22 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %22, align 8
  %23 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.1, i64 0, i64 0), i32** %23, align 8
  %24 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 1
  store i64 4, i64* %24, align 8
  call void @_ZNK21CFGAS_StringFormatter13GetTextFormatEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::WideString"* nonnull sret %4, %class.CFGAS_StringFormatter* %0, %"class.fxcrt::StringViewTemplate"* nonnull %5)
  %25 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %9, align 8, !noalias !207
  %26 = icmp eq %"class.fxcrt::StringDataTemplate"* %25, null
  %27 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %25, i64 0, i32 3, i64 0
  br i1 %26, label %31, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %25, i64 0, i32 1
  %30 = load i64, i64* %29, align 8, !noalias !207
  br label %31

31:                                               ; preds = %20, %28
  %32 = phi i64 [ %30, %28 ], [ 0, %20 ]
  %33 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %22, align 8, !noalias !210
  %34 = icmp eq %"class.fxcrt::StringDataTemplate"* %33, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  store i64 0, i64* %6, align 8
  br label %120

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %33, i64 0, i32 3, i64 0
  %39 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %33, i64 0, i32 1
  %40 = load i64, i64* %39, align 8, !noalias !210
  %41 = ptrtoint i32* %38 to i64
  %42 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #13
  store i64 0, i64* %6, align 8
  %43 = icmp eq i64 %40, 0
  br i1 %43, label %120, label %44

44:                                               ; preds = %37
  %45 = select i1 %26, i32* null, i32* %27
  %46 = bitcast %"class.fxcrt::WideString"* %7 to i8*
  %47 = bitcast %"class.pdfium::span"* %8 to i64*
  %48 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %8, i64 0, i32 1
  br label %49

49:                                               ; preds = %44, %116
  %50 = phi i64 [ 0, %44 ], [ %117, %116 ]
  %51 = phi i64 [ 0, %44 ], [ %118, %116 ]
  %52 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %33, i64 0, i32 3, i64 %50
  %53 = load i32, i32* %52, align 4
  switch i32 %53, label %112 [
    i32 39, label %54
    i32 65, label %58
    i32 88, label %70
    i32 79, label %78
    i32 48, label %78
    i32 57, label %98
  ]

54:                                               ; preds = %49
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  store i64 %41, i64* %47, align 8
  store i64 %40, i64* %48, align 8
  call fastcc void @_ZN12_GLOBAL__N_114GetLiteralTextEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %7, %"class.pdfium::span"* nonnull %8, i64* nonnull %6)
  %55 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %2, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %7) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #13
  %56 = load i64, i64* %6, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %6, align 8
  br label %116

58:                                               ; preds = %49
  %59 = icmp ult i64 %51, %32
  br i1 %59, label %60, label %124

60:                                               ; preds = %58
  %61 = getelementptr inbounds i32, i32* %45, i64 %51
  %62 = load i32, i32* %61, align 4
  %63 = call signext i8 @u_isalpha_69(i32 %62) #13
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %124, label %65

65:                                               ; preds = %60
  %66 = add nuw i64 %51, 1
  %67 = load i32, i32* %61, align 4
  %68 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext %67) #13
  %69 = add nuw i64 %50, 1
  store i64 %69, i64* %6, align 8
  br label %116

70:                                               ; preds = %49
  %71 = icmp ult i64 %51, %32
  br i1 %71, label %72, label %124

72:                                               ; preds = %70
  %73 = add nuw i64 %51, 1
  %74 = getelementptr inbounds i32, i32* %45, i64 %51
  %75 = load i32, i32* %74, align 4
  %76 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext %75) #13
  %77 = add nuw i64 %50, 1
  store i64 %77, i64* %6, align 8
  br label %116

78:                                               ; preds = %49, %49
  %79 = icmp ult i64 %51, %32
  br i1 %79, label %80, label %124

80:                                               ; preds = %78
  %81 = getelementptr inbounds i32, i32* %45, i64 %51
  %82 = load i32, i32* %81, align 4
  %83 = icmp ugt i32 %82, 127
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = call i32 @iswdigit(i32 %82) #13
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %93

87:                                               ; preds = %84
  %88 = load i32, i32* %81, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %82, %80 ]
  %91 = call signext i8 @u_isalpha_69(i32 %90) #13
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %124, label %93

93:                                               ; preds = %89, %84
  %94 = add nuw i64 %51, 1
  %95 = load i32, i32* %81, align 4
  %96 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext %95) #13
  %97 = add nuw i64 %50, 1
  store i64 %97, i64* %6, align 8
  br label %116

98:                                               ; preds = %49
  %99 = icmp ult i64 %51, %32
  br i1 %99, label %100, label %124

100:                                              ; preds = %98
  %101 = getelementptr inbounds i32, i32* %45, i64 %51
  %102 = load i32, i32* %101, align 4
  %103 = icmp ugt i32 %102, 127
  br i1 %103, label %124, label %104

104:                                              ; preds = %100
  %105 = call i32 @iswdigit(i32 %102) #13
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %124, label %107

107:                                              ; preds = %104
  %108 = add nuw i64 %51, 1
  %109 = load i32, i32* %101, align 4
  %110 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext %109) #13
  %111 = add nuw i64 %50, 1
  store i64 %111, i64* %6, align 8
  br label %116

112:                                              ; preds = %49
  %113 = add nuw i64 %50, 1
  store i64 %113, i64* %6, align 8
  %114 = load i32, i32* %52, align 4
  %115 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %2, i32 signext %114) #13
  br label %116

116:                                              ; preds = %112, %107, %93, %72, %65, %54
  %117 = phi i64 [ %113, %112 ], [ %111, %107 ], [ %97, %93 ], [ %77, %72 ], [ %69, %65 ], [ %57, %54 ]
  %118 = phi i64 [ %51, %112 ], [ %108, %107 ], [ %94, %93 ], [ %73, %72 ], [ %66, %65 ], [ %51, %54 ]
  %119 = icmp ult i64 %117, %40
  br i1 %119, label %49, label %120

120:                                              ; preds = %116, %35, %37
  %121 = phi i8* [ %42, %37 ], [ %36, %35 ], [ %42, %116 ]
  %122 = phi i64 [ 0, %37 ], [ 0, %35 ], [ %118, %116 ]
  %123 = icmp eq i64 %122, %32
  br label %124

124:                                              ; preds = %60, %89, %104, %100, %98, %78, %70, %58, %120
  %125 = phi i8* [ %121, %120 ], [ %42, %58 ], [ %42, %70 ], [ %42, %78 ], [ %42, %98 ], [ %42, %100 ], [ %42, %104 ], [ %42, %89 ], [ %42, %60 ]
  %126 = phi i1 [ %123, %120 ], [ false, %58 ], [ false, %70 ], [ false, %78 ], [ false, %98 ], [ false, %100 ], [ false, %104 ], [ false, %89 ], [ false, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %127

127:                                              ; preds = %3, %12, %16, %124
  %128 = phi i1 [ %126, %124 ], [ false, %16 ], [ false, %12 ], [ false, %3 ]
  ret i1 %128
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK21CFGAS_StringFormatter9FormatNumEP14LocaleMgrIfaceRKN5fxcrt10WideStringEPS3_(%class.CFGAS_StringFormatter*, %class.LocaleMgrIface*, %"class.fxcrt::WideString"* dereferenceable(8), %"class.fxcrt::WideString"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %8 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %9 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %10 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %11 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %12 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %13 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %14 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %15 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %16 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %17 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %18 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %19 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %20 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %21 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %22 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %23 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %24 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %25 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %26 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %27 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %28 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %29 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %30 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %31 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %32 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %33 = alloca i64, align 8
  %34 = alloca i32, align 4
  %35 = alloca %"class.fxcrt::WideString", align 8
  %36 = alloca %"class.fxcrt::WideString", align 8
  %37 = alloca %class.CFGAS_Decimal, align 8
  %38 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %39 = alloca %class.CFGAS_Decimal, align 4
  %40 = alloca %"class.fxcrt::WideString", align 8
  %41 = alloca i64, align 8
  %42 = alloca %"class.fxcrt::WideString", align 8
  %43 = alloca %"class.pdfium::span", align 8
  %44 = alloca %class.CFGAS_Decimal, align 4
  %45 = alloca %class.CFGAS_Decimal, align 4
  %46 = alloca %"class.fxcrt::WideString", align 8
  %47 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %48 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %49 = alloca %"class.fxcrt::WideString", align 8
  %50 = alloca i64, align 8
  %51 = alloca %"class.fxcrt::WideString", align 8
  %52 = alloca %"class.fxcrt::WideString", align 8
  %53 = alloca %"class.fxcrt::WideString", align 8
  %54 = alloca %"class.fxcrt::WideString", align 8
  %55 = alloca %"class.fxcrt::WideString", align 8
  %56 = alloca %"class.fxcrt::WideString", align 8
  %57 = alloca %"class.fxcrt::WideString", align 8
  %58 = alloca %"class.fxcrt::WideString", align 8
  %59 = alloca %"class.fxcrt::WideString", align 8
  %60 = alloca %"class.fxcrt::WideString", align 8
  %61 = alloca %"class.fxcrt::WideString", align 8
  %62 = alloca %"class.fxcrt::WideString", align 8
  %63 = alloca %"class.fxcrt::WideString", align 8
  %64 = alloca %"class.fxcrt::WideString", align 8
  %65 = alloca %"class.fxcrt::WideString", align 8
  %66 = alloca %"class.fxcrt::WideString", align 8
  %67 = alloca %"class.fxcrt::WideString", align 8
  %68 = alloca %"class.pdfium::span", align 8
  %69 = alloca %"class.fxcrt::WideString", align 8
  %70 = alloca %"class.fxcrt::WideString", align 8
  %71 = alloca %"class.fxcrt::WideString", align 8
  %72 = alloca %"class.fxcrt::WideString", align 8
  %73 = alloca %"class.fxcrt::WideString", align 8
  %74 = alloca %"class.fxcrt::WideString", align 8
  %75 = alloca %"class.fxcrt::WideString", align 8
  %76 = alloca i64, align 8
  %77 = alloca %"class.fxcrt::WideString", align 8
  %78 = alloca %"class.pdfium::span", align 8
  %79 = alloca %"class.fxcrt::WideString", align 8
  %80 = alloca %"class.fxcrt::WideString", align 8
  %81 = alloca %"class.fxcrt::WideString", align 8
  %82 = alloca %"class.fxcrt::WideString", align 8
  %83 = alloca %"class.fxcrt::WideString", align 8
  %84 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %84, align 8
  %86 = icmp eq %"class.fxcrt::StringDataTemplate"* %85, null
  br i1 %86, label %1238, label %87

87:                                               ; preds = %4
  %88 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %85, i64 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %1238, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 1, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %1238, label %95

95:                                               ; preds = %91
  %96 = bitcast i64* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #13
  store i64 %93, i64* %33, align 8
  %97 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #13
  store i32 0, i32* %34, align 4
  %98 = bitcast %"class.fxcrt::WideString"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #13
  %99 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %99, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %35) #13
  %100 = call %class.LocaleIface* @_ZNK21CFGAS_StringFormatter16GetNumericFormatEP14LocaleMgrIfacePmPjPN5fxcrt10WideStringE(%class.CFGAS_StringFormatter* %0, %class.LocaleMgrIface* %1, i64* nonnull %33, i32* nonnull %34, %"class.fxcrt::WideString"* nonnull %35)
  %101 = icmp eq %class.LocaleIface* %100, null
  br i1 %101, label %1236, label %102

102:                                              ; preds = %95
  %103 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %99, align 8
  %104 = icmp eq %"class.fxcrt::StringDataTemplate"* %103, null
  br i1 %104, label %1236, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %103, i64 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %1236, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %103, i64 0, i32 3, i64 0
  %111 = ptrtoint i32* %110 to i64
  %112 = bitcast %"class.fxcrt::WideString"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #13
  %113 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %113, align 8
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %36, %"class.fxcrt::WideString"* dereferenceable(8) %2) #13
  call void @_ZN5fxcrt10WideString8TrimLeftEw(%"class.fxcrt::WideString"* nonnull %36, i32 signext 48) #13
  %114 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %113, align 8
  %115 = icmp eq %"class.fxcrt::StringDataTemplate"* %114, null
  br i1 %115, label %124, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %114, i64 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %124, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %114, i64 0, i32 3, i64 0
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, 46
  br i1 %123, label %124, label %127

124:                                              ; preds = %109, %120, %116
  %125 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* nonnull %36, i64 0, i32 signext 48) #13
  %126 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %113, align 8, !noalias !213
  br label %127

127:                                              ; preds = %124, %120
  %128 = phi %"class.fxcrt::StringDataTemplate"* [ %126, %124 ], [ %114, %120 ]
  %129 = bitcast %class.CFGAS_Decimal* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %129) #13
  %130 = getelementptr inbounds %class.CFGAS_Decimal, %class.CFGAS_Decimal* %37, i64 0, i32 0
  %131 = getelementptr inbounds %class.CFGAS_Decimal, %class.CFGAS_Decimal* %37, i64 0, i32 1
  %132 = getelementptr inbounds %class.CFGAS_Decimal, %class.CFGAS_Decimal* %37, i64 0, i32 2
  %133 = getelementptr inbounds %class.CFGAS_Decimal, %class.CFGAS_Decimal* %37, i64 0, i32 4
  %134 = icmp eq %"class.fxcrt::StringDataTemplate"* %128, null
  %135 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %128, i64 0, i32 3
  %136 = select i1 %134, [1 x i32]* @.str.15, [1 x i32]* %135
  %137 = getelementptr inbounds [1 x i32], [1 x i32]* %136, i64 0, i64 0
  %138 = bitcast %class.CFGAS_Decimal* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %138, i8 -86, i64 16, i1 false)
  br i1 %134, label %142, label %139

139:                                              ; preds = %127
  %140 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %128, i64 0, i32 1
  %141 = load i64, i64* %140, align 8, !noalias !213
  br label %142

142:                                              ; preds = %127, %139
  %143 = phi i64 [ %141, %139 ], [ 0, %127 ]
  %144 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %38, i64 0, i32 0, i32 0, i32 0
  store i32* %137, i32** %144, align 8, !alias.scope !213
  %145 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %38, i64 0, i32 0, i32 1
  store i64 %143, i64* %145, align 8, !alias.scope !213
  call void @_ZN13CFGAS_DecimalC1EN5fxcrt18StringViewTemplateIwEE(%class.CFGAS_Decimal* nonnull %37, %"class.fxcrt::StringViewTemplate"* nonnull %38) #13
  %146 = load i32, i32* %34, align 4
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %159, label %149

149:                                              ; preds = %142
  %150 = bitcast %class.CFGAS_Decimal* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150) #13
  call void @_ZN13CFGAS_DecimalC1Ei(%class.CFGAS_Decimal* nonnull %39, i32 100) #13
  %151 = call { i64, i64 } @_ZNK13CFGAS_DecimalmlERKS_(%class.CFGAS_Decimal* nonnull %37, %class.CFGAS_Decimal* nonnull dereferenceable(16) %39) #13
  %152 = extractvalue { i64, i64 } %151, 0
  %153 = extractvalue { i64, i64 } %151, 1
  %154 = bitcast %class.CFGAS_Decimal* %37 to i64*
  store i64 %152, i64* %154, align 8
  %155 = bitcast i32* %132 to i48*
  %156 = trunc i64 %153 to i48
  store i48 %156, i48* %155, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150) #13
  %157 = bitcast %"class.fxcrt::WideString"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #13
  call void @_ZNK13CFGAS_Decimal12ToWideStringEv(%"class.fxcrt::WideString"* nonnull sret %40, %class.CFGAS_Decimal* nonnull %37) #13
  %158 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* nonnull %36, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %40) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %40) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #13
  br label %159

159:                                              ; preds = %142, %149
  %160 = and i32 %146, 2
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %297, label %162

162:                                              ; preds = %159
  %163 = bitcast i64* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #13
  store i64 0, i64* %41, align 8
  %164 = load i64, i64* %33, align 8
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %162
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #13
  br label %229

167:                                              ; preds = %162
  %168 = bitcast %"class.pdfium::span"* %43 to i64*
  %169 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %43, i64 0, i32 1
  br label %178

170:                                              ; preds = %190
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #13
  %171 = icmp sgt i32 %192, 1
  br i1 %171, label %172, label %229

172:                                              ; preds = %170
  %173 = add nsw i32 %192, -1
  %174 = and i32 %173, 1
  %175 = icmp eq i32 %192, 2
  br i1 %175, label %209, label %176

176:                                              ; preds = %172
  %177 = sub i32 %173, %174
  br label %195

178:                                              ; preds = %167, %190
  %179 = phi i32 [ 0, %167 ], [ %192, %190 ]
  %180 = phi i64 [ 0, %167 ], [ %193, %190 ]
  %181 = icmp ugt i64 %107, %180
  br i1 %181, label %183, label %182, !prof !17

182:                                              ; preds = %178
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %103, i64 0, i32 3, i64 %180
  %185 = load i32, i32* %184, align 4
  switch i32 %185, label %190 [
    i32 39, label %186
    i32 57, label %188
    i32 122, label %188
    i32 90, label %188
  ]

186:                                              ; preds = %183
  store i64 %111, i64* %168, align 8
  store i64 %107, i64* %169, align 8
  call fastcc void @_ZN12_GLOBAL__N_114GetLiteralTextEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %42, %"class.pdfium::span"* nonnull %43, i64* nonnull %41)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %42) #13
  %187 = load i64, i64* %41, align 8
  br label %190

188:                                              ; preds = %183, %183, %183
  %189 = add nsw i32 %179, 1
  br label %190

190:                                              ; preds = %186, %188, %183
  %191 = phi i64 [ %180, %183 ], [ %180, %188 ], [ %187, %186 ]
  %192 = phi i32 [ %179, %183 ], [ %189, %188 ], [ %179, %186 ]
  %193 = add i64 %191, 1
  store i64 %193, i64* %41, align 8
  %194 = icmp ult i64 %193, %164
  br i1 %194, label %178, label %170

195:                                              ; preds = %1256, %176
  %196 = phi i1 [ false, %176 ], [ %1259, %1256 ]
  %197 = phi i32 [ 1, %176 ], [ %1257, %1256 ]
  %198 = phi i32 [ %177, %176 ], [ %1260, %1256 ]
  br i1 %196, label %205, label %199

199:                                              ; preds = %195
  %200 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %197, i32 10) #13
  %201 = extractvalue { i32, i1 } %200, 1
  %202 = extractvalue { i32, i1 } %200, 0
  %203 = xor i1 %201, true
  %204 = zext i1 %203 to i8
  br label %205

205:                                              ; preds = %195, %199
  %206 = phi i32 [ %202, %199 ], [ 0, %195 ]
  %207 = phi i8 [ %204, %199 ], [ 0, %195 ]
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %1256, label %1250

209:                                              ; preds = %1256, %172
  %210 = phi i32 [ undef, %172 ], [ %1257, %1256 ]
  %211 = phi i1 [ undef, %172 ], [ %1259, %1256 ]
  %212 = phi i1 [ false, %172 ], [ %1259, %1256 ]
  %213 = phi i32 [ 1, %172 ], [ %1257, %1256 ]
  %214 = icmp eq i32 %174, 0
  br i1 %214, label %226, label %215

215:                                              ; preds = %209
  br i1 %212, label %222, label %216

216:                                              ; preds = %215
  %217 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %213, i32 10) #13
  %218 = extractvalue { i32, i1 } %217, 1
  %219 = extractvalue { i32, i1 } %217, 0
  %220 = xor i1 %218, true
  %221 = zext i1 %220 to i8
  br label %222

222:                                              ; preds = %215, %216
  %223 = phi i32 [ %219, %216 ], [ 0, %215 ]
  %224 = phi i8 [ %221, %216 ], [ 0, %215 ]
  %225 = icmp eq i8 %224, 0
  br label %226

226:                                              ; preds = %209, %222
  %227 = phi i32 [ %210, %209 ], [ %223, %222 ]
  %228 = phi i1 [ %211, %209 ], [ %225, %222 ]
  br i1 %228, label %1234, label %229

229:                                              ; preds = %166, %170, %226
  %230 = phi i32 [ %227, %226 ], [ 1, %170 ], [ 1, %166 ]
  %231 = load i32, i32* %130, align 8
  %232 = load i32, i32* %131, align 4
  %233 = or i32 %232, %231
  %234 = load i32, i32* %132, align 8
  %235 = or i32 %233, %234
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %264, label %237

237:                                              ; preds = %229
  %238 = uitofp i32 %230 to double
  %239 = bitcast %class.CFGAS_Decimal* %44 to i8*
  %240 = bitcast %class.CFGAS_Decimal* %37 to i64*
  %241 = bitcast i32* %132 to i48*
  %242 = call double @_ZNK13CFGAS_Decimal8ToDoubleEv(%class.CFGAS_Decimal* nonnull %37) #13
  %243 = call double @llvm.fabs.f64(double %242)
  %244 = fcmp olt double %243, %238
  br i1 %244, label %249, label %261

245:                                              ; preds = %249
  %246 = call double @_ZNK13CFGAS_Decimal8ToDoubleEv(%class.CFGAS_Decimal* nonnull %37) #13
  %247 = call double @llvm.fabs.f64(double %246)
  %248 = fcmp olt double %247, %238
  br i1 %248, label %249, label %261

249:                                              ; preds = %237, %245
  %250 = phi i32 [ %255, %245 ], [ 0, %237 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %239) #13
  call void @_ZN13CFGAS_DecimalC1Ei(%class.CFGAS_Decimal* nonnull %44, i32 10) #13
  %251 = call { i64, i64 } @_ZNK13CFGAS_DecimalmlERKS_(%class.CFGAS_Decimal* nonnull %37, %class.CFGAS_Decimal* nonnull dereferenceable(16) %44) #13
  %252 = extractvalue { i64, i64 } %251, 0
  %253 = extractvalue { i64, i64 } %251, 1
  store i64 %252, i64* %240, align 8
  %254 = trunc i64 %253 to i48
  store i48 %254, i48* %241, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %239) #13
  %255 = add nsw i32 %250, -1
  %256 = lshr i64 %252, 32
  %257 = or i64 %256, %252
  %258 = or i64 %257, %253
  %259 = trunc i64 %258 to i32
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %297, label %245

261:                                              ; preds = %245, %237
  %262 = phi i32 [ 0, %237 ], [ %255, %245 ]
  %263 = phi i1 [ false, %237 ], [ true, %245 ]
  br i1 %263, label %297, label %264

264:                                              ; preds = %229, %261
  %265 = phi i32 [ %262, %261 ], [ 0, %229 ]
  %266 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %230, i32 10) #13
  %267 = extractvalue { i32, i1 } %266, 1
  %268 = extractvalue { i32, i1 } %266, 0
  br i1 %267, label %1234, label %269

269:                                              ; preds = %264
  %270 = load i32, i32* %130, align 8
  %271 = load i32, i32* %131, align 4
  %272 = or i32 %271, %270
  %273 = load i32, i32* %132, align 8
  %274 = or i32 %272, %273
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %297, label %276

276:                                              ; preds = %269
  %277 = uitofp i32 %268 to double
  %278 = bitcast %class.CFGAS_Decimal* %45 to i8*
  %279 = bitcast %class.CFGAS_Decimal* %37 to i64*
  %280 = bitcast i32* %132 to i48*
  br label %281

281:                                              ; preds = %276, %286
  %282 = phi i32 [ %265, %276 ], [ %291, %286 ]
  %283 = call double @_ZNK13CFGAS_Decimal8ToDoubleEv(%class.CFGAS_Decimal* nonnull %37) #13
  %284 = call double @llvm.fabs.f64(double %283)
  %285 = fcmp ogt double %284, %277
  br i1 %285, label %286, label %297

286:                                              ; preds = %281
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %278) #13
  call void @_ZN13CFGAS_DecimalC1Ei(%class.CFGAS_Decimal* nonnull %45, i32 10) #13
  %287 = call { i64, i64 } @_ZNK13CFGAS_DecimaldvERKS_(%class.CFGAS_Decimal* nonnull %37, %class.CFGAS_Decimal* nonnull dereferenceable(16) %45) #13
  %288 = extractvalue { i64, i64 } %287, 0
  %289 = extractvalue { i64, i64 } %287, 1
  store i64 %288, i64* %279, align 8
  %290 = trunc i64 %289 to i48
  store i48 %290, i48* %280, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %278) #13
  %291 = add nsw i32 %282, 1
  %292 = lshr i64 %288, 32
  %293 = or i64 %292, %288
  %294 = or i64 %293, %289
  %295 = trunc i64 %294 to i32
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %281

297:                                              ; preds = %249, %281, %286, %269, %261, %159
  %298 = phi i32 [ 0, %159 ], [ %262, %261 ], [ %265, %269 ], [ %282, %281 ], [ %291, %286 ], [ %255, %249 ]
  %299 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %99, align 8, !noalias !216
  %300 = icmp eq %"class.fxcrt::StringDataTemplate"* %299, null
  br i1 %300, label %346, label %301

301:                                              ; preds = %297
  %302 = load i64, i64* %33, align 8
  %303 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %299, i64 0, i32 1
  %304 = load i64, i64* %303, align 8, !noalias !216
  %305 = add i64 %302, 1
  %306 = icmp ult i64 %305, %304
  br i1 %306, label %307, label %346

307:                                              ; preds = %301
  %308 = xor i64 %302, -1
  %309 = add i64 %304, %308
  %310 = add i64 %304, -2
  %311 = and i64 %309, 1
  %312 = icmp eq i64 %310, %302
  br i1 %312, label %332, label %313

313:                                              ; preds = %307
  %314 = sub i64 %309, %311
  br label %315

315:                                              ; preds = %1244, %313
  %316 = phi i8 [ 0, %313 ], [ %1245, %1244 ]
  %317 = phi i64 [ %305, %313 ], [ %1247, %1244 ]
  %318 = phi i64 [ 0, %313 ], [ %1246, %1244 ]
  %319 = phi i64 [ %314, %313 ], [ %1248, %1244 ]
  %320 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %299, i64 0, i32 3, i64 %317
  %321 = load i32, i32* %320, align 4
  switch i32 %321, label %326 [
    i32 122, label %322
    i32 90, label %322
    i32 57, label %322
  ]

322:                                              ; preds = %315, %315, %315
  %323 = add i64 %318, 1
  %324 = icmp ne i32 %321, 57
  %325 = zext i1 %324 to i8
  br label %326

326:                                              ; preds = %322, %315
  %327 = phi i8 [ %316, %315 ], [ %325, %322 ]
  %328 = phi i64 [ %318, %315 ], [ %323, %322 ]
  %329 = add i64 %317, 1
  %330 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %299, i64 0, i32 3, i64 %329
  %331 = load i32, i32* %330, align 4
  switch i32 %331, label %1244 [
    i32 122, label %1240
    i32 90, label %1240
    i32 57, label %1240
  ]

332:                                              ; preds = %1244, %307
  %333 = phi i8 [ undef, %307 ], [ %1245, %1244 ]
  %334 = phi i64 [ undef, %307 ], [ %1246, %1244 ]
  %335 = phi i8 [ 0, %307 ], [ %1245, %1244 ]
  %336 = phi i64 [ %305, %307 ], [ %1247, %1244 ]
  %337 = phi i64 [ 0, %307 ], [ %1246, %1244 ]
  %338 = icmp eq i64 %311, 0
  br i1 %338, label %346, label %339

339:                                              ; preds = %332
  %340 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %299, i64 0, i32 3, i64 %336
  %341 = load i32, i32* %340, align 4
  switch i32 %341, label %346 [
    i32 122, label %342
    i32 90, label %342
    i32 57, label %342
  ]

342:                                              ; preds = %339, %339, %339
  %343 = add i64 %337, 1
  %344 = icmp ne i32 %341, 57
  %345 = zext i1 %344 to i8
  br label %346

346:                                              ; preds = %332, %339, %342, %297, %301
  %347 = phi i8 [ 0, %297 ], [ 0, %301 ], [ %333, %332 ], [ %335, %339 ], [ %345, %342 ]
  %348 = phi i64 [ 0, %297 ], [ 0, %301 ], [ %334, %332 ], [ %337, %339 ], [ %343, %342 ]
  %349 = trunc i64 %348 to i32
  %350 = load i8, i8* %133, align 1
  %351 = zext i8 %350 to i32
  %352 = icmp slt i32 %349, %351
  br i1 %352, label %353, label %357

353:                                              ; preds = %346
  %354 = trunc i64 %348 to i8
  call void @_ZN13CFGAS_Decimal8SetScaleEh(%class.CFGAS_Decimal* nonnull %37, i8 zeroext %354) #13
  %355 = bitcast %"class.fxcrt::WideString"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %355) #13
  call void @_ZNK13CFGAS_Decimal12ToWideStringEv(%"class.fxcrt::WideString"* nonnull sret %46, %class.CFGAS_Decimal* nonnull %37) #13
  %356 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* nonnull %36, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %46) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %46) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %355) #13
  br label %357

357:                                              ; preds = %353, %346
  %358 = icmp ne i8 %347, 0
  %359 = icmp ne i8 %350, 0
  %360 = and i1 %358, %359
  %361 = icmp sgt i32 %349, 0
  %362 = and i1 %361, %360
  br i1 %362, label %363, label %368

363:                                              ; preds = %357
  %364 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %47, i64 0, i32 0, i32 0, i32 0
  store i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str.7, i64 0, i64 0), i32** %364, align 8
  %365 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %47, i64 0, i32 0, i32 1
  store i64 1, i64* %365, align 8
  call void @_ZN5fxcrt10WideString9TrimRightENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"* nonnull %36, %"class.fxcrt::StringViewTemplate"* nonnull %47) #13
  %366 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %48, i64 0, i32 0, i32 0, i32 0
  store i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str.8, i64 0, i64 0), i32** %366, align 8
  %367 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %48, i64 0, i32 0, i32 1
  store i64 1, i64* %367, align 8
  call void @_ZN5fxcrt10WideString9TrimRightENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"* nonnull %36, %"class.fxcrt::StringViewTemplate"* nonnull %48) #13
  br label %368

368:                                              ; preds = %363, %357
  %369 = bitcast %"class.fxcrt::WideString"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %369) #13
  %370 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %370, align 8
  %371 = bitcast %class.LocaleIface* %100 to void (%"class.fxcrt::WideString"*, %class.LocaleIface*)***
  %372 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %371, align 8
  %373 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %372, i64 4
  %374 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %373, align 8
  call void %374(%"class.fxcrt::WideString"* nonnull sret %49, %class.LocaleIface* nonnull %100) #13
  %375 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %113, align 8
  %376 = icmp eq %"class.fxcrt::StringDataTemplate"* %375, null
  br i1 %376, label %381, label %377

377:                                              ; preds = %368
  %378 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %375, i64 0, i32 1
  %379 = load i64, i64* %378, align 8
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %381, label %382, !prof !2

381:                                              ; preds = %377, %368
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !47
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !48
  unreachable

382:                                              ; preds = %377
  %383 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %375, i64 0, i32 3, i64 0
  %384 = load i32, i32* %383, align 4
  %385 = icmp eq i32 %384, 45
  br i1 %385, label %388, label %386

386:                                              ; preds = %382
  %387 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %375, i64 0, i32 3, i64 0
  br label %393

388:                                              ; preds = %382
  %389 = call i64 @_ZN5fxcrt10WideString6DeleteEmm(%"class.fxcrt::WideString"* nonnull %36, i64 0, i64 1) #13
  %390 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %113, align 8, !noalias !219
  %391 = icmp eq %"class.fxcrt::StringDataTemplate"* %390, null
  %392 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %390, i64 0, i32 3, i64 0
  br i1 %391, label %399, label %393

393:                                              ; preds = %386, %388
  %394 = phi i32* [ %387, %386 ], [ %392, %388 ]
  %395 = phi i1 [ false, %386 ], [ true, %388 ]
  %396 = phi %"class.fxcrt::StringDataTemplate"* [ %375, %386 ], [ %390, %388 ]
  %397 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %396, i64 0, i32 1
  %398 = load i64, i64* %397, align 8, !noalias !219
  br label %399

399:                                              ; preds = %388, %393
  %400 = phi i32* [ %394, %393 ], [ %392, %388 ]
  %401 = phi i1 [ false, %393 ], [ true, %388 ]
  %402 = phi i1 [ %395, %393 ], [ true, %388 ]
  %403 = phi i64 [ %398, %393 ], [ 0, %388 ]
  %404 = ptrtoint i32* %400 to i64
  %405 = select i1 %401, i64 0, i64 %404
  %406 = call { i8, i64 } @_ZNK5fxcrt10WideString4FindEwm(%"class.fxcrt::WideString"* nonnull %36, i32 signext 46, i64 0) #13
  %407 = extractvalue { i8, i64 } %406, 0
  switch i8 %407, label %408 [
    i8 0, label %411
    i8 1, label %409
  ], !prof !26

408:                                              ; preds = %399
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !27
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !28
  unreachable

409:                                              ; preds = %399
  %410 = extractvalue { i8, i64 } %406, 1
  br label %411

411:                                              ; preds = %399, %409
  %412 = phi i64 [ %403, %399 ], [ %410, %409 ]
  %413 = add i64 %412, -1
  %414 = bitcast i64* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %414) #13
  %415 = load i64, i64* %33, align 8
  %416 = add i64 %415, -1
  store i64 %416, i64* %50, align 8
  %417 = icmp ult i64 %416, %107
  br i1 %417, label %418, label %857

418:                                              ; preds = %411
  %419 = bitcast %"class.fxcrt::WideString"* %66 to i8*
  %420 = bitcast %"class.fxcrt::WideString"* %67 to i8*
  %421 = bitcast %"class.pdfium::span"* %68 to i64*
  %422 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %68, i64 0, i32 1
  %423 = bitcast %"class.fxcrt::StringViewTemplate"* %9 to i8*
  %424 = bitcast %"class.fxcrt::StringViewTemplate"* %10 to i8*
  %425 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %426 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %9, i64 0, i32 0, i32 0, i32 0
  %427 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %9, i64 0, i32 0, i32 1
  %428 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %429 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %10, i64 0, i32 0, i32 0, i32 0
  %430 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %10, i64 0, i32 0, i32 1
  %431 = select i1 %402, i32 41, i32 32
  %432 = select i1 %402, i32 40, i32 32
  %433 = bitcast %"class.fxcrt::WideString"* %65 to i8*
  %434 = bitcast %"class.fxcrt::StringViewTemplate"* %11 to i8*
  %435 = bitcast %"class.fxcrt::StringViewTemplate"* %12 to i8*
  %436 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %11, i64 0, i32 0, i32 0, i32 0
  %437 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %11, i64 0, i32 0, i32 1
  %438 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %12, i64 0, i32 0, i32 0, i32 0
  %439 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %12, i64 0, i32 0, i32 1
  %440 = bitcast %"class.fxcrt::WideString"* %63 to i8*
  %441 = bitcast %"class.fxcrt::WideString"* %64 to i8*
  %442 = bitcast %"class.fxcrt::StringViewTemplate"* %13 to i8*
  %443 = bitcast %"class.fxcrt::StringViewTemplate"* %14 to i8*
  %444 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %445 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %13, i64 0, i32 0, i32 0, i32 0
  %446 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %13, i64 0, i32 0, i32 1
  %447 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %14, i64 0, i32 0, i32 0, i32 0
  %448 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %14, i64 0, i32 0, i32 1
  %449 = bitcast %"class.fxcrt::WideString"* %62 to i8*
  %450 = bitcast %"class.fxcrt::StringViewTemplate"* %15 to i8*
  %451 = bitcast %"class.fxcrt::StringViewTemplate"* %16 to i8*
  %452 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %15, i64 0, i32 0, i32 0, i32 0
  %453 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %15, i64 0, i32 0, i32 1
  %454 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %16, i64 0, i32 0, i32 0, i32 0
  %455 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %16, i64 0, i32 0, i32 1
  %456 = bitcast %"class.fxcrt::WideString"* %61 to i8*
  %457 = bitcast %"class.fxcrt::StringViewTemplate"* %17 to i8*
  %458 = bitcast %"class.fxcrt::StringViewTemplate"* %18 to i8*
  %459 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %17, i64 0, i32 0, i32 0, i32 0
  %460 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %17, i64 0, i32 0, i32 1
  %461 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %18, i64 0, i32 0, i32 0, i32 0
  %462 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %18, i64 0, i32 0, i32 1
  %463 = bitcast %"class.fxcrt::WideString"* %60 to i8*
  %464 = bitcast %"class.fxcrt::StringViewTemplate"* %19 to i8*
  %465 = bitcast %"class.fxcrt::StringViewTemplate"* %20 to i8*
  %466 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %19, i64 0, i32 0, i32 0, i32 0
  %467 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %19, i64 0, i32 0, i32 1
  %468 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %20, i64 0, i32 0, i32 0, i32 0
  %469 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %20, i64 0, i32 0, i32 1
  %470 = bitcast %"class.fxcrt::WideString"* %59 to i8*
  %471 = bitcast %"class.fxcrt::StringViewTemplate"* %21 to i8*
  %472 = bitcast %"class.fxcrt::StringViewTemplate"* %22 to i8*
  %473 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %21, i64 0, i32 0, i32 0, i32 0
  %474 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %21, i64 0, i32 0, i32 1
  %475 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %22, i64 0, i32 0, i32 0, i32 0
  %476 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %22, i64 0, i32 0, i32 1
  %477 = bitcast %"class.fxcrt::WideString"* %57 to i8*
  %478 = bitcast %"class.fxcrt::WideString"* %58 to i8*
  %479 = bitcast %"class.fxcrt::StringViewTemplate"* %23 to i8*
  %480 = bitcast %"class.fxcrt::StringViewTemplate"* %24 to i8*
  %481 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %482 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %23, i64 0, i32 0, i32 0, i32 0
  %483 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %23, i64 0, i32 0, i32 1
  %484 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %24, i64 0, i32 0, i32 0, i32 0
  %485 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %24, i64 0, i32 0, i32 1
  %486 = bitcast %"class.fxcrt::WideString"* %55 to i8*
  %487 = bitcast %"class.fxcrt::WideString"* %56 to i8*
  %488 = bitcast %"class.fxcrt::StringViewTemplate"* %25 to i8*
  %489 = bitcast %"class.fxcrt::StringViewTemplate"* %26 to i8*
  %490 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %491 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %25, i64 0, i32 0, i32 0, i32 0
  %492 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %25, i64 0, i32 0, i32 1
  %493 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %26, i64 0, i32 0, i32 0, i32 0
  %494 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %26, i64 0, i32 0, i32 1
  %495 = bitcast %"class.fxcrt::WideString"* %53 to i8*
  %496 = bitcast %"class.fxcrt::WideString"* %54 to i8*
  %497 = bitcast %"class.fxcrt::StringViewTemplate"* %27 to i8*
  %498 = bitcast %"class.fxcrt::StringViewTemplate"* %28 to i8*
  %499 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %500 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %27, i64 0, i32 0, i32 0, i32 0
  %501 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %27, i64 0, i32 0, i32 1
  %502 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %28, i64 0, i32 0, i32 0, i32 0
  %503 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %28, i64 0, i32 0, i32 1
  %504 = bitcast %"class.fxcrt::WideString"* %51 to i8*
  %505 = bitcast %"class.fxcrt::WideString"* %52 to i8*
  %506 = bitcast %"class.fxcrt::StringViewTemplate"* %29 to i8*
  %507 = bitcast %"class.fxcrt::StringViewTemplate"* %30 to i8*
  %508 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %509 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %29, i64 0, i32 0, i32 0, i32 0
  %510 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %29, i64 0, i32 0, i32 1
  %511 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %30, i64 0, i32 0, i32 0, i32 0
  %512 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %30, i64 0, i32 0, i32 1
  %513 = inttoptr i64 %405 to i32*
  br label %514

514:                                              ; preds = %418, %850
  %515 = phi i64 [ %416, %418 ], [ %854, %850 ]
  %516 = phi i64 [ %415, %418 ], [ %851, %850 ]
  %517 = phi i64 [ %413, %418 ], [ %853, %850 ]
  %518 = phi i8 [ 0, %418 ], [ %852, %850 ]
  %519 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %103, i64 0, i32 3, i64 %515
  %520 = load i32, i32* %519, align 4
  switch i32 %520, label %848 [
    i32 57, label %521
    i32 122, label %536
    i32 90, label %553
    i32 83, label %573
    i32 115, label %601
    i32 69, label %627
    i32 36, label %649
    i32 114, label %674
    i32 82, label %698
    i32 98, label %723
    i32 66, label %747
    i32 37, label %772
    i32 44, label %797
    i32 40, label %821
    i32 41, label %823
    i32 39, label %825
  ]

521:                                              ; preds = %514
  %522 = icmp ult i64 %517, %403
  br i1 %522, label %523, label %534

523:                                              ; preds = %521
  %524 = getelementptr inbounds i32, i32* %513, i64 %517
  %525 = load i32, i32* %524, align 4
  %526 = icmp ugt i32 %525, 127
  br i1 %526, label %856, label %527

527:                                              ; preds = %523
  %528 = call i32 @iswdigit(i32 %525) #13
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %856, label %530

530:                                              ; preds = %527
  %531 = load i32, i32* %524, align 4
  %532 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* %3, i64 0, i32 signext %531) #13
  %533 = add i64 %517, -1
  br label %850

534:                                              ; preds = %521
  %535 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* %3, i64 0, i32 signext 48) #13
  br label %850

536:                                              ; preds = %514
  %537 = icmp ult i64 %517, %403
  br i1 %537, label %538, label %850

538:                                              ; preds = %536
  %539 = getelementptr inbounds i32, i32* %513, i64 %517
  %540 = load i32, i32* %539, align 4
  %541 = icmp ugt i32 %540, 127
  br i1 %541, label %856, label %542

542:                                              ; preds = %538
  %543 = call i32 @iswdigit(i32 %540) #13
  %544 = icmp eq i32 %543, 0
  br i1 %544, label %856, label %545

545:                                              ; preds = %542
  %546 = load i32, i32* %513, align 4
  %547 = icmp eq i32 %546, 48
  br i1 %547, label %551, label %548

548:                                              ; preds = %545
  %549 = load i32, i32* %539, align 4
  %550 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* %3, i64 0, i32 signext %549) #13
  br label %551

551:                                              ; preds = %545, %548
  %552 = add i64 %517, -1
  br label %850

553:                                              ; preds = %514
  %554 = icmp ult i64 %517, %403
  br i1 %554, label %555, label %571

555:                                              ; preds = %553
  %556 = getelementptr inbounds i32, i32* %513, i64 %517
  %557 = load i32, i32* %556, align 4
  %558 = icmp ugt i32 %557, 127
  br i1 %558, label %856, label %559

559:                                              ; preds = %555
  %560 = call i32 @iswdigit(i32 %557) #13
  %561 = icmp eq i32 %560, 0
  br i1 %561, label %856, label %562

562:                                              ; preds = %559
  %563 = load i32, i32* %513, align 4
  %564 = icmp eq i32 %563, 48
  br i1 %564, label %567, label %565

565:                                              ; preds = %562
  %566 = load i32, i32* %556, align 4
  br label %567

567:                                              ; preds = %562, %565
  %568 = phi i32 [ %566, %565 ], [ 32, %562 ]
  %569 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* %3, i64 0, i32 signext %568) #13
  %570 = add i64 %517, -1
  br label %850

571:                                              ; preds = %553
  %572 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* %3, i64 0, i32 signext 32) #13
  br label %850

573:                                              ; preds = %514
  br i1 %402, label %574, label %599

574:                                              ; preds = %573
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %504) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %505) #13
  %575 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %371, align 8
  %576 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %575, i64 6
  %577 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %576, align 8
  call void %577(%"class.fxcrt::WideString"* nonnull sret %52, %class.LocaleIface* nonnull %100) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %506)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %507)
  %578 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %508, align 8, !noalias !222
  %579 = icmp eq %"class.fxcrt::StringDataTemplate"* %578, null
  %580 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %578, i64 0, i32 3
  %581 = select i1 %579, [1 x i32]* @.str.15, [1 x i32]* %580
  %582 = getelementptr inbounds [1 x i32], [1 x i32]* %581, i64 0, i64 0
  br i1 %579, label %586, label %583

583:                                              ; preds = %574
  %584 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %578, i64 0, i32 1
  %585 = load i64, i64* %584, align 8, !noalias !227
  br label %586

586:                                              ; preds = %583, %574
  %587 = phi i64 [ %585, %583 ], [ 0, %574 ]
  store i32* %582, i32** %509, align 8, !alias.scope !227, !noalias !228
  store i64 %587, i64* %510, align 8, !alias.scope !227, !noalias !228
  %588 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %428, align 8, !noalias !229
  %589 = icmp eq %"class.fxcrt::StringDataTemplate"* %588, null
  %590 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %588, i64 0, i32 3
  %591 = select i1 %589, [1 x i32]* @.str.15, [1 x i32]* %590
  %592 = getelementptr inbounds [1 x i32], [1 x i32]* %591, i64 0, i64 0
  br i1 %589, label %596, label %593

593:                                              ; preds = %586
  %594 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %588, i64 0, i32 1
  %595 = load i64, i64* %594, align 8, !noalias !232
  br label %596

596:                                              ; preds = %586, %593
  %597 = phi i64 [ %595, %593 ], [ 0, %586 ]
  store i32* %592, i32** %511, align 8, !alias.scope !232, !noalias !228
  store i64 %597, i64* %512, align 8, !alias.scope !232, !noalias !228
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %51, %"class.fxcrt::StringViewTemplate"* nonnull %29, %"class.fxcrt::StringViewTemplate"* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %506)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %507)
  %598 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %51) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %51) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %52) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %505) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %504) #13
  br label %850

599:                                              ; preds = %573
  %600 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* %3, i64 0, i32 signext 32) #13
  br label %850

601:                                              ; preds = %514
  br i1 %402, label %602, label %850

602:                                              ; preds = %601
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %495) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %496) #13
  %603 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %371, align 8
  %604 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %603, i64 6
  %605 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %604, align 8
  call void %605(%"class.fxcrt::WideString"* nonnull sret %54, %class.LocaleIface* nonnull %100) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %497)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %498)
  %606 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %499, align 8, !noalias !233
  %607 = icmp eq %"class.fxcrt::StringDataTemplate"* %606, null
  %608 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %606, i64 0, i32 3
  %609 = select i1 %607, [1 x i32]* @.str.15, [1 x i32]* %608
  %610 = getelementptr inbounds [1 x i32], [1 x i32]* %609, i64 0, i64 0
  br i1 %607, label %614, label %611

611:                                              ; preds = %602
  %612 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %606, i64 0, i32 1
  %613 = load i64, i64* %612, align 8, !noalias !238
  br label %614

614:                                              ; preds = %611, %602
  %615 = phi i64 [ %613, %611 ], [ 0, %602 ]
  store i32* %610, i32** %500, align 8, !alias.scope !238, !noalias !239
  store i64 %615, i64* %501, align 8, !alias.scope !238, !noalias !239
  %616 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %428, align 8, !noalias !240
  %617 = icmp eq %"class.fxcrt::StringDataTemplate"* %616, null
  %618 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %616, i64 0, i32 3
  %619 = select i1 %617, [1 x i32]* @.str.15, [1 x i32]* %618
  %620 = getelementptr inbounds [1 x i32], [1 x i32]* %619, i64 0, i64 0
  br i1 %617, label %624, label %621

621:                                              ; preds = %614
  %622 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %616, i64 0, i32 1
  %623 = load i64, i64* %622, align 8, !noalias !243
  br label %624

624:                                              ; preds = %614, %621
  %625 = phi i64 [ %623, %621 ], [ 0, %614 ]
  store i32* %620, i32** %502, align 8, !alias.scope !243, !noalias !239
  store i64 %625, i64* %503, align 8, !alias.scope !243, !noalias !239
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %53, %"class.fxcrt::StringViewTemplate"* nonnull %27, %"class.fxcrt::StringViewTemplate"* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %497)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %498)
  %626 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %53) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %53) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %54) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %496) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %495) #13
  br label %850

627:                                              ; preds = %514
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %486) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %487) #13
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %56, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.9, i64 0, i64 0), i32 %298) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %488)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %489)
  %628 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %490, align 8, !noalias !244
  %629 = icmp eq %"class.fxcrt::StringDataTemplate"* %628, null
  %630 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %628, i64 0, i32 3
  %631 = select i1 %629, [1 x i32]* @.str.15, [1 x i32]* %630
  %632 = getelementptr inbounds [1 x i32], [1 x i32]* %631, i64 0, i64 0
  br i1 %629, label %636, label %633

633:                                              ; preds = %627
  %634 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %628, i64 0, i32 1
  %635 = load i64, i64* %634, align 8, !noalias !249
  br label %636

636:                                              ; preds = %633, %627
  %637 = phi i64 [ %635, %633 ], [ 0, %627 ]
  store i32* %632, i32** %491, align 8, !alias.scope !249, !noalias !250
  store i64 %637, i64* %492, align 8, !alias.scope !249, !noalias !250
  %638 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %428, align 8, !noalias !251
  %639 = icmp eq %"class.fxcrt::StringDataTemplate"* %638, null
  %640 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %638, i64 0, i32 3
  %641 = select i1 %639, [1 x i32]* @.str.15, [1 x i32]* %640
  %642 = getelementptr inbounds [1 x i32], [1 x i32]* %641, i64 0, i64 0
  br i1 %639, label %646, label %643

643:                                              ; preds = %636
  %644 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %638, i64 0, i32 1
  %645 = load i64, i64* %644, align 8, !noalias !254
  br label %646

646:                                              ; preds = %636, %643
  %647 = phi i64 [ %645, %643 ], [ 0, %636 ]
  store i32* %642, i32** %493, align 8, !alias.scope !254, !noalias !250
  store i64 %647, i64* %494, align 8, !alias.scope !254, !noalias !250
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %55, %"class.fxcrt::StringViewTemplate"* nonnull %25, %"class.fxcrt::StringViewTemplate"* nonnull %26) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %488)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %489)
  %648 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %55) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %55) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %56) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %487) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %486) #13
  br label %850

649:                                              ; preds = %514
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %477) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %478) #13
  %650 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %371, align 8
  %651 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %650, i64 7
  %652 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %651, align 8
  call void %652(%"class.fxcrt::WideString"* nonnull sret %58, %class.LocaleIface* nonnull %100) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %479)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %480)
  %653 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %481, align 8, !noalias !255
  %654 = icmp eq %"class.fxcrt::StringDataTemplate"* %653, null
  %655 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %653, i64 0, i32 3
  %656 = select i1 %654, [1 x i32]* @.str.15, [1 x i32]* %655
  %657 = getelementptr inbounds [1 x i32], [1 x i32]* %656, i64 0, i64 0
  br i1 %654, label %661, label %658

658:                                              ; preds = %649
  %659 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %653, i64 0, i32 1
  %660 = load i64, i64* %659, align 8, !noalias !260
  br label %661

661:                                              ; preds = %658, %649
  %662 = phi i64 [ %660, %658 ], [ 0, %649 ]
  store i32* %657, i32** %482, align 8, !alias.scope !260, !noalias !261
  store i64 %662, i64* %483, align 8, !alias.scope !260, !noalias !261
  %663 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %428, align 8, !noalias !262
  %664 = icmp eq %"class.fxcrt::StringDataTemplate"* %663, null
  %665 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %663, i64 0, i32 3
  %666 = select i1 %664, [1 x i32]* @.str.15, [1 x i32]* %665
  %667 = getelementptr inbounds [1 x i32], [1 x i32]* %666, i64 0, i64 0
  br i1 %664, label %671, label %668

668:                                              ; preds = %661
  %669 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %663, i64 0, i32 1
  %670 = load i64, i64* %669, align 8, !noalias !265
  br label %671

671:                                              ; preds = %661, %668
  %672 = phi i64 [ %670, %668 ], [ 0, %661 ]
  store i32* %667, i32** %484, align 8, !alias.scope !265, !noalias !261
  store i64 %672, i64* %485, align 8, !alias.scope !265, !noalias !261
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %57, %"class.fxcrt::StringViewTemplate"* nonnull %23, %"class.fxcrt::StringViewTemplate"* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %479)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %480)
  %673 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %57) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %57) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %58) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %478) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %477) #13
  br label %850

674:                                              ; preds = %514
  %675 = add i64 %516, -2
  %676 = icmp ult i64 %675, %107
  br i1 %676, label %677, label %696

677:                                              ; preds = %674
  %678 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %103, i64 0, i32 3, i64 %675
  %679 = load i32, i32* %678, align 4
  %680 = icmp eq i32 %679, 99
  br i1 %680, label %681, label %696

681:                                              ; preds = %677
  br i1 %402, label %682, label %694

682:                                              ; preds = %681
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %470) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %471)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %472)
  store i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.10, i64 0, i64 0), i32** %473, align 8, !noalias !266
  store i64 2, i64* %474, align 8, !noalias !266
  %683 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %428, align 8, !noalias !269
  %684 = icmp eq %"class.fxcrt::StringDataTemplate"* %683, null
  %685 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %683, i64 0, i32 3
  %686 = select i1 %684, [1 x i32]* @.str.15, [1 x i32]* %685
  %687 = getelementptr inbounds [1 x i32], [1 x i32]* %686, i64 0, i64 0
  br i1 %684, label %691, label %688

688:                                              ; preds = %682
  %689 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %683, i64 0, i32 1
  %690 = load i64, i64* %689, align 8, !noalias !272
  br label %691

691:                                              ; preds = %682, %688
  %692 = phi i64 [ %690, %688 ], [ 0, %682 ]
  store i32* %687, i32** %475, align 8, !alias.scope !272, !noalias !266
  store i64 %692, i64* %476, align 8, !alias.scope !272, !noalias !266
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %59, %"class.fxcrt::StringViewTemplate"* nonnull %21, %"class.fxcrt::StringViewTemplate"* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %471)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %472)
  %693 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %59) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %59) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %470) #13
  br label %694

694:                                              ; preds = %691, %681
  %695 = add i64 %515, -1
  store i64 %695, i64* %50, align 8
  br label %850

696:                                              ; preds = %677, %674
  %697 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* %3, i64 0, i32 signext 114) #13
  br label %850

698:                                              ; preds = %514
  %699 = add i64 %516, -2
  %700 = icmp ult i64 %699, %107
  br i1 %700, label %701, label %721

701:                                              ; preds = %698
  %702 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %103, i64 0, i32 3, i64 %699
  %703 = load i32, i32* %702, align 4
  %704 = icmp eq i32 %703, 67
  br i1 %704, label %705, label %721

705:                                              ; preds = %701
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %463) #13
  br i1 %402, label %706, label %707

706:                                              ; preds = %705
  call void @_ZN5fxcrt10WideStringC1EPKw(%"class.fxcrt::WideString"* nonnull %60, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.10, i64 0, i64 0)) #13
  br label %718

707:                                              ; preds = %705
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %464)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %465)
  store i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.11, i64 0, i64 0), i32** %466, align 8, !noalias !273
  store i64 2, i64* %467, align 8, !noalias !273
  %708 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %428, align 8, !noalias !276
  %709 = icmp eq %"class.fxcrt::StringDataTemplate"* %708, null
  %710 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %708, i64 0, i32 3
  %711 = select i1 %709, [1 x i32]* @.str.15, [1 x i32]* %710
  %712 = getelementptr inbounds [1 x i32], [1 x i32]* %711, i64 0, i64 0
  br i1 %709, label %716, label %713

713:                                              ; preds = %707
  %714 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %708, i64 0, i32 1
  %715 = load i64, i64* %714, align 8, !noalias !279
  br label %716

716:                                              ; preds = %707, %713
  %717 = phi i64 [ %715, %713 ], [ 0, %707 ]
  store i32* %712, i32** %468, align 8, !alias.scope !279, !noalias !273
  store i64 %717, i64* %469, align 8, !alias.scope !279, !noalias !273
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %60, %"class.fxcrt::StringViewTemplate"* nonnull %19, %"class.fxcrt::StringViewTemplate"* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %464)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %465)
  br label %718

718:                                              ; preds = %716, %706
  %719 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %60) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %60) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %463) #13
  %720 = add i64 %515, -1
  store i64 %720, i64* %50, align 8
  br label %850

721:                                              ; preds = %701, %698
  %722 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* %3, i64 0, i32 signext 82) #13
  br label %850

723:                                              ; preds = %514
  %724 = add i64 %516, -2
  %725 = icmp ult i64 %724, %107
  br i1 %725, label %726, label %745

726:                                              ; preds = %723
  %727 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %103, i64 0, i32 3, i64 %724
  %728 = load i32, i32* %727, align 4
  %729 = icmp eq i32 %728, 100
  br i1 %729, label %730, label %745

730:                                              ; preds = %726
  br i1 %402, label %731, label %743

731:                                              ; preds = %730
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %456) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %457)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %458)
  store i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.12, i64 0, i64 0), i32** %459, align 8, !noalias !280
  store i64 2, i64* %460, align 8, !noalias !280
  %732 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %428, align 8, !noalias !283
  %733 = icmp eq %"class.fxcrt::StringDataTemplate"* %732, null
  %734 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %732, i64 0, i32 3
  %735 = select i1 %733, [1 x i32]* @.str.15, [1 x i32]* %734
  %736 = getelementptr inbounds [1 x i32], [1 x i32]* %735, i64 0, i64 0
  br i1 %733, label %740, label %737

737:                                              ; preds = %731
  %738 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %732, i64 0, i32 1
  %739 = load i64, i64* %738, align 8, !noalias !286
  br label %740

740:                                              ; preds = %731, %737
  %741 = phi i64 [ %739, %737 ], [ 0, %731 ]
  store i32* %736, i32** %461, align 8, !alias.scope !286, !noalias !280
  store i64 %741, i64* %462, align 8, !alias.scope !286, !noalias !280
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %61, %"class.fxcrt::StringViewTemplate"* nonnull %17, %"class.fxcrt::StringViewTemplate"* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %457)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %458)
  %742 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %61) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %61) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %456) #13
  br label %743

743:                                              ; preds = %740, %730
  %744 = add i64 %515, -1
  store i64 %744, i64* %50, align 8
  br label %850

745:                                              ; preds = %726, %723
  %746 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* %3, i64 0, i32 signext 98) #13
  br label %850

747:                                              ; preds = %514
  %748 = add i64 %516, -2
  %749 = icmp ult i64 %748, %107
  br i1 %749, label %750, label %770

750:                                              ; preds = %747
  %751 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %103, i64 0, i32 3, i64 %748
  %752 = load i32, i32* %751, align 4
  %753 = icmp eq i32 %752, 68
  br i1 %753, label %754, label %770

754:                                              ; preds = %750
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %449) #13
  br i1 %402, label %755, label %756

755:                                              ; preds = %754
  call void @_ZN5fxcrt10WideStringC1EPKw(%"class.fxcrt::WideString"* nonnull %62, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.13, i64 0, i64 0)) #13
  br label %767

756:                                              ; preds = %754
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %450)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %451)
  store i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.11, i64 0, i64 0), i32** %452, align 8, !noalias !287
  store i64 2, i64* %453, align 8, !noalias !287
  %757 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %428, align 8, !noalias !290
  %758 = icmp eq %"class.fxcrt::StringDataTemplate"* %757, null
  %759 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %757, i64 0, i32 3
  %760 = select i1 %758, [1 x i32]* @.str.15, [1 x i32]* %759
  %761 = getelementptr inbounds [1 x i32], [1 x i32]* %760, i64 0, i64 0
  br i1 %758, label %765, label %762

762:                                              ; preds = %756
  %763 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %757, i64 0, i32 1
  %764 = load i64, i64* %763, align 8, !noalias !293
  br label %765

765:                                              ; preds = %756, %762
  %766 = phi i64 [ %764, %762 ], [ 0, %756 ]
  store i32* %761, i32** %454, align 8, !alias.scope !293, !noalias !287
  store i64 %766, i64* %455, align 8, !alias.scope !293, !noalias !287
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %62, %"class.fxcrt::StringViewTemplate"* nonnull %15, %"class.fxcrt::StringViewTemplate"* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %450)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %451)
  br label %767

767:                                              ; preds = %765, %755
  %768 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %62) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %62) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %449) #13
  %769 = add i64 %515, -1
  store i64 %769, i64* %50, align 8
  br label %850

770:                                              ; preds = %750, %747
  %771 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* %3, i64 0, i32 signext 66) #13
  br label %850

772:                                              ; preds = %514
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %440) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %441) #13
  %773 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %371, align 8
  %774 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %773, i64 5
  %775 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %774, align 8
  call void %775(%"class.fxcrt::WideString"* nonnull sret %64, %class.LocaleIface* nonnull %100) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %442)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %443)
  %776 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %444, align 8, !noalias !294
  %777 = icmp eq %"class.fxcrt::StringDataTemplate"* %776, null
  %778 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %776, i64 0, i32 3
  %779 = select i1 %777, [1 x i32]* @.str.15, [1 x i32]* %778
  %780 = getelementptr inbounds [1 x i32], [1 x i32]* %779, i64 0, i64 0
  br i1 %777, label %784, label %781

781:                                              ; preds = %772
  %782 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %776, i64 0, i32 1
  %783 = load i64, i64* %782, align 8, !noalias !299
  br label %784

784:                                              ; preds = %781, %772
  %785 = phi i64 [ %783, %781 ], [ 0, %772 ]
  store i32* %780, i32** %445, align 8, !alias.scope !299, !noalias !300
  store i64 %785, i64* %446, align 8, !alias.scope !299, !noalias !300
  %786 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %428, align 8, !noalias !301
  %787 = icmp eq %"class.fxcrt::StringDataTemplate"* %786, null
  %788 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %786, i64 0, i32 3
  %789 = select i1 %787, [1 x i32]* @.str.15, [1 x i32]* %788
  %790 = getelementptr inbounds [1 x i32], [1 x i32]* %789, i64 0, i64 0
  br i1 %787, label %794, label %791

791:                                              ; preds = %784
  %792 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %786, i64 0, i32 1
  %793 = load i64, i64* %792, align 8, !noalias !304
  br label %794

794:                                              ; preds = %784, %791
  %795 = phi i64 [ %793, %791 ], [ 0, %784 ]
  store i32* %790, i32** %447, align 8, !alias.scope !304, !noalias !300
  store i64 %795, i64* %448, align 8, !alias.scope !304, !noalias !300
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %63, %"class.fxcrt::StringViewTemplate"* nonnull %13, %"class.fxcrt::StringViewTemplate"* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %442)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %443)
  %796 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %63) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %63) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %64) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %441) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %440) #13
  br label %850

797:                                              ; preds = %514
  %798 = icmp ult i64 %517, %403
  br i1 %798, label %799, label %850

799:                                              ; preds = %797
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %433) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %434)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %435)
  %800 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %370, align 8, !noalias !305
  %801 = icmp eq %"class.fxcrt::StringDataTemplate"* %800, null
  %802 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %800, i64 0, i32 3
  %803 = select i1 %801, [1 x i32]* @.str.15, [1 x i32]* %802
  %804 = getelementptr inbounds [1 x i32], [1 x i32]* %803, i64 0, i64 0
  br i1 %801, label %808, label %805

805:                                              ; preds = %799
  %806 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %800, i64 0, i32 1
  %807 = load i64, i64* %806, align 8, !noalias !310
  br label %808

808:                                              ; preds = %805, %799
  %809 = phi i64 [ %807, %805 ], [ 0, %799 ]
  store i32* %804, i32** %436, align 8, !alias.scope !310, !noalias !311
  store i64 %809, i64* %437, align 8, !alias.scope !310, !noalias !311
  %810 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %428, align 8, !noalias !312
  %811 = icmp eq %"class.fxcrt::StringDataTemplate"* %810, null
  %812 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %810, i64 0, i32 3
  %813 = select i1 %811, [1 x i32]* @.str.15, [1 x i32]* %812
  %814 = getelementptr inbounds [1 x i32], [1 x i32]* %813, i64 0, i64 0
  br i1 %811, label %818, label %815

815:                                              ; preds = %808
  %816 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %810, i64 0, i32 1
  %817 = load i64, i64* %816, align 8, !noalias !315
  br label %818

818:                                              ; preds = %808, %815
  %819 = phi i64 [ %817, %815 ], [ 0, %808 ]
  store i32* %814, i32** %438, align 8, !alias.scope !315, !noalias !311
  store i64 %819, i64* %439, align 8, !alias.scope !315, !noalias !311
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %65, %"class.fxcrt::StringViewTemplate"* nonnull %11, %"class.fxcrt::StringViewTemplate"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %434)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %435)
  %820 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %65) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %65) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %433) #13
  br label %850

821:                                              ; preds = %514
  %822 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* %3, i64 0, i32 signext %432) #13
  br label %850

823:                                              ; preds = %514
  %824 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* %3, i64 0, i32 signext %431) #13
  br label %850

825:                                              ; preds = %514
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %419) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %420) #13
  store i64 %111, i64* %421, align 8
  store i64 %107, i64* %422, align 8
  call fastcc void @_ZN12_GLOBAL__N_121GetLiteralTextReverseEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %67, %"class.pdfium::span"* nonnull %68, i64* nonnull %50)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %423)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %424)
  %826 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %425, align 8, !noalias !316
  %827 = icmp eq %"class.fxcrt::StringDataTemplate"* %826, null
  %828 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %826, i64 0, i32 3
  %829 = select i1 %827, [1 x i32]* @.str.15, [1 x i32]* %828
  %830 = getelementptr inbounds [1 x i32], [1 x i32]* %829, i64 0, i64 0
  br i1 %827, label %834, label %831

831:                                              ; preds = %825
  %832 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %826, i64 0, i32 1
  %833 = load i64, i64* %832, align 8, !noalias !321
  br label %834

834:                                              ; preds = %831, %825
  %835 = phi i64 [ %833, %831 ], [ 0, %825 ]
  store i32* %830, i32** %426, align 8, !alias.scope !321, !noalias !322
  store i64 %835, i64* %427, align 8, !alias.scope !321, !noalias !322
  %836 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %428, align 8, !noalias !323
  %837 = icmp eq %"class.fxcrt::StringDataTemplate"* %836, null
  %838 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %836, i64 0, i32 3
  %839 = select i1 %837, [1 x i32]* @.str.15, [1 x i32]* %838
  %840 = getelementptr inbounds [1 x i32], [1 x i32]* %839, i64 0, i64 0
  br i1 %837, label %844, label %841

841:                                              ; preds = %834
  %842 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %836, i64 0, i32 1
  %843 = load i64, i64* %842, align 8, !noalias !326
  br label %844

844:                                              ; preds = %834, %841
  %845 = phi i64 [ %843, %841 ], [ 0, %834 ]
  store i32* %840, i32** %429, align 8, !alias.scope !326, !noalias !322
  store i64 %845, i64* %430, align 8, !alias.scope !326, !noalias !322
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %66, %"class.fxcrt::StringViewTemplate"* nonnull %9, %"class.fxcrt::StringViewTemplate"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %423)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %424)
  %846 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %66) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %66) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %67) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %420) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %419) #13
  %847 = load i64, i64* %50, align 8
  br label %850

848:                                              ; preds = %514
  %849 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* %3, i64 0, i32 signext %520) #13
  br label %850

850:                                              ; preds = %646, %671, %794, %821, %823, %844, %848, %534, %530, %551, %536, %571, %567, %599, %596, %624, %601, %696, %694, %721, %718, %745, %743, %770, %767, %818, %797
  %851 = phi i64 [ %515, %848 ], [ %847, %844 ], [ %515, %823 ], [ %515, %821 ], [ %515, %818 ], [ %515, %797 ], [ %515, %794 ], [ %769, %767 ], [ %515, %770 ], [ %744, %743 ], [ %515, %745 ], [ %720, %718 ], [ %515, %721 ], [ %695, %694 ], [ %515, %696 ], [ %515, %671 ], [ %515, %646 ], [ %515, %624 ], [ %515, %601 ], [ %515, %596 ], [ %515, %599 ], [ %515, %567 ], [ %515, %571 ], [ %515, %551 ], [ %515, %536 ], [ %515, %530 ], [ %515, %534 ]
  %852 = phi i8 [ %518, %848 ], [ %518, %844 ], [ %518, %823 ], [ 1, %821 ], [ %518, %818 ], [ %518, %797 ], [ %518, %794 ], [ 1, %767 ], [ %518, %770 ], [ 1, %743 ], [ %518, %745 ], [ 1, %718 ], [ %518, %721 ], [ 1, %694 ], [ %518, %696 ], [ %518, %671 ], [ %518, %646 ], [ 1, %624 ], [ %518, %601 ], [ 1, %596 ], [ %518, %599 ], [ %518, %567 ], [ %518, %571 ], [ %518, %551 ], [ %518, %536 ], [ %518, %530 ], [ %518, %534 ]
  %853 = phi i64 [ %517, %848 ], [ %517, %844 ], [ %517, %823 ], [ %517, %821 ], [ %517, %818 ], [ %517, %797 ], [ %517, %794 ], [ %517, %767 ], [ %517, %770 ], [ %517, %743 ], [ %517, %745 ], [ %517, %718 ], [ %517, %721 ], [ %517, %694 ], [ %517, %696 ], [ %517, %671 ], [ %517, %646 ], [ %517, %624 ], [ %517, %601 ], [ %517, %596 ], [ %517, %599 ], [ %570, %567 ], [ %517, %571 ], [ %552, %551 ], [ %517, %536 ], [ %533, %530 ], [ %517, %534 ]
  %854 = add i64 %851, -1
  store i64 %854, i64* %50, align 8
  %855 = icmp ult i64 %854, %107
  br i1 %855, label %514, label %857

856:                                              ; preds = %527, %542, %559, %555, %538, %523
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %414) #13
  br label %1232

857:                                              ; preds = %850, %411
  %858 = phi i8 [ 0, %411 ], [ %852, %850 ]
  %859 = phi i64 [ %413, %411 ], [ %853, %850 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %414) #13
  %860 = icmp ult i64 %859, %403
  br i1 %860, label %861, label %938

861:                                              ; preds = %857
  %862 = urem i64 %412, 3
  %863 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %864 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %863, align 8
  store %"class.fxcrt::StringDataTemplate"* null, %"class.fxcrt::StringDataTemplate"** %863, align 8
  %865 = icmp eq %"class.fxcrt::StringDataTemplate"* %864, null
  br i1 %865, label %867, label %866

866:                                              ; preds = %861
  call void @_ZN5fxcrt18StringDataTemplateIwE7ReleaseEv(%"class.fxcrt::StringDataTemplate"* nonnull %864) #13
  br label %867

867:                                              ; preds = %861, %866
  %868 = icmp eq i64 %412, 0
  br i1 %868, label %869, label %871

869:                                              ; preds = %887, %867
  %870 = icmp ult i64 %412, %403
  br i1 %870, label %893, label %903

871:                                              ; preds = %867, %887
  %872 = phi i64 [ %891, %887 ], [ 0, %867 ]
  %873 = urem i64 %872, 3
  %874 = icmp eq i64 %873, %862
  %875 = icmp ne i64 %872, 0
  %876 = and i1 %875, %874
  br i1 %876, label %877, label %879

877:                                              ; preds = %871
  %878 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %49) #13
  br label %879

879:                                              ; preds = %877, %871
  %880 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %113, align 8
  %881 = icmp eq %"class.fxcrt::StringDataTemplate"* %880, null
  br i1 %881, label %886, label %882

882:                                              ; preds = %879
  %883 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %880, i64 0, i32 1
  %884 = load i64, i64* %883, align 8
  %885 = icmp ugt i64 %884, %872
  br i1 %885, label %887, label %886, !prof !17

886:                                              ; preds = %882, %879
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !47
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !48
  unreachable

887:                                              ; preds = %882
  %888 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %880, i64 0, i32 3, i64 %872
  %889 = load i32, i32* %888, align 4
  %890 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %3, i32 signext %889) #13
  %891 = add nuw i64 %872, 1
  %892 = icmp eq i64 %891, %412
  br i1 %892, label %869, label %871

893:                                              ; preds = %869
  %894 = bitcast %"class.fxcrt::WideString"* %69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %894) #13
  %895 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %371, align 8
  %896 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %895, i64 3
  %897 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %896, align 8
  call void %897(%"class.fxcrt::WideString"* nonnull sret %69, %class.LocaleIface* nonnull %100) #13
  %898 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %69) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %69) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %894) #13
  %899 = bitcast %"class.fxcrt::WideString"* %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %899) #13
  %900 = xor i64 %412, -1
  %901 = add i64 %403, %900
  call void @_ZNK5fxcrt10WideString4LastEm(%"class.fxcrt::WideString"* nonnull sret %70, %"class.fxcrt::WideString"* nonnull %36, i64 %901) #13
  %902 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %70) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %70) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %899) #13
  br label %903

903:                                              ; preds = %893, %869
  br i1 %402, label %904, label %1232

904:                                              ; preds = %903
  %905 = bitcast %"class.fxcrt::WideString"* %71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %905) #13
  %906 = bitcast %"class.fxcrt::WideString"* %72 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %906) #13
  %907 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %371, align 8
  %908 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %907, i64 6
  %909 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %908, align 8
  call void %909(%"class.fxcrt::WideString"* nonnull sret %72, %class.LocaleIface* nonnull %100) #13
  %910 = bitcast %"class.fxcrt::StringViewTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %910)
  %911 = bitcast %"class.fxcrt::StringViewTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %911)
  %912 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %913 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %912, align 8, !noalias !327
  %914 = icmp eq %"class.fxcrt::StringDataTemplate"* %913, null
  %915 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %913, i64 0, i32 3
  %916 = select i1 %914, [1 x i32]* @.str.15, [1 x i32]* %915
  %917 = getelementptr inbounds [1 x i32], [1 x i32]* %916, i64 0, i64 0
  br i1 %914, label %921, label %918

918:                                              ; preds = %904
  %919 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %913, i64 0, i32 1
  %920 = load i64, i64* %919, align 8, !noalias !332
  br label %921

921:                                              ; preds = %918, %904
  %922 = phi i64 [ %920, %918 ], [ 0, %904 ]
  %923 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  store i32* %917, i32** %923, align 8, !alias.scope !332, !noalias !333
  %924 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %7, i64 0, i32 0, i32 1
  store i64 %922, i64* %924, align 8, !alias.scope !332, !noalias !333
  %925 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %863, align 8, !noalias !334
  %926 = icmp eq %"class.fxcrt::StringDataTemplate"* %925, null
  %927 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %925, i64 0, i32 3
  %928 = select i1 %926, [1 x i32]* @.str.15, [1 x i32]* %927
  %929 = getelementptr inbounds [1 x i32], [1 x i32]* %928, i64 0, i64 0
  br i1 %926, label %933, label %930

930:                                              ; preds = %921
  %931 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %925, i64 0, i32 1
  %932 = load i64, i64* %931, align 8, !noalias !337
  br label %933

933:                                              ; preds = %921, %930
  %934 = phi i64 [ %932, %930 ], [ 0, %921 ]
  %935 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %8, i64 0, i32 0, i32 0, i32 0
  store i32* %929, i32** %935, align 8, !alias.scope !337, !noalias !333
  %936 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %8, i64 0, i32 0, i32 1
  store i64 %934, i64* %936, align 8, !alias.scope !337, !noalias !333
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %71, %"class.fxcrt::StringViewTemplate"* nonnull %7, %"class.fxcrt::StringViewTemplate"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %910)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %911)
  %937 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %71) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %71) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %72) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %906) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %905) #13
  br label %1232

938:                                              ; preds = %857
  %939 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %99, align 8
  %940 = icmp eq %"class.fxcrt::StringDataTemplate"* %939, null
  br i1 %940, label %944, label %941

941:                                              ; preds = %938
  %942 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %939, i64 0, i32 1
  %943 = load i64, i64* %942, align 8
  br label %944

944:                                              ; preds = %938, %941
  %945 = phi i64 [ %943, %941 ], [ 0, %938 ]
  %946 = icmp eq i64 %415, %945
  br i1 %946, label %947, label %987

947:                                              ; preds = %944
  %948 = and i8 %858, 1
  %949 = icmp ne i8 %948, 0
  %950 = xor i1 %402, true
  %951 = or i1 %949, %950
  br i1 %951, label %1232, label %952

952:                                              ; preds = %947
  %953 = bitcast %"class.fxcrt::WideString"* %73 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %953) #13
  %954 = bitcast %"class.fxcrt::WideString"* %74 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %954) #13
  %955 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %371, align 8
  %956 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %955, i64 6
  %957 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %956, align 8
  call void %957(%"class.fxcrt::WideString"* nonnull sret %74, %class.LocaleIface* nonnull %100) #13
  %958 = bitcast %"class.fxcrt::StringViewTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %958)
  %959 = bitcast %"class.fxcrt::StringViewTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %959)
  %960 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %961 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %960, align 8, !noalias !338
  %962 = icmp eq %"class.fxcrt::StringDataTemplate"* %961, null
  %963 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %961, i64 0, i32 3
  %964 = select i1 %962, [1 x i32]* @.str.15, [1 x i32]* %963
  %965 = getelementptr inbounds [1 x i32], [1 x i32]* %964, i64 0, i64 0
  br i1 %962, label %969, label %966

966:                                              ; preds = %952
  %967 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %961, i64 0, i32 1
  %968 = load i64, i64* %967, align 8, !noalias !343
  br label %969

969:                                              ; preds = %966, %952
  %970 = phi i64 [ %968, %966 ], [ 0, %952 ]
  %971 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %965, i32** %971, align 8, !alias.scope !343, !noalias !344
  %972 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 1
  store i64 %970, i64* %972, align 8, !alias.scope !343, !noalias !344
  %973 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %974 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %973, align 8, !noalias !345
  %975 = icmp eq %"class.fxcrt::StringDataTemplate"* %974, null
  %976 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %974, i64 0, i32 3
  %977 = select i1 %975, [1 x i32]* @.str.15, [1 x i32]* %976
  %978 = getelementptr inbounds [1 x i32], [1 x i32]* %977, i64 0, i64 0
  br i1 %975, label %982, label %979

979:                                              ; preds = %969
  %980 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %974, i64 0, i32 1
  %981 = load i64, i64* %980, align 8, !noalias !348
  br label %982

982:                                              ; preds = %969, %979
  %983 = phi i64 [ %981, %979 ], [ 0, %969 ]
  %984 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %978, i32** %984, align 8, !alias.scope !348, !noalias !344
  %985 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 1
  store i64 %983, i64* %985, align 8, !alias.scope !348, !noalias !344
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %73, %"class.fxcrt::StringViewTemplate"* nonnull %5, %"class.fxcrt::StringViewTemplate"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %958)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %959)
  %986 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %73) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %73) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %74) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %954) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %953) #13
  br label %1232

987:                                              ; preds = %944
  %988 = bitcast %"class.fxcrt::WideString"* %75 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %988) #13
  %989 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %989, align 8
  %990 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %371, align 8
  %991 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %990, i64 3
  %992 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %991, align 8
  call void %992(%"class.fxcrt::WideString"* nonnull sret %75, %class.LocaleIface* nonnull %100) #13
  %993 = icmp ugt i64 %107, %415
  br i1 %993, label %995, label %994, !prof !17

994:                                              ; preds = %987
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable

995:                                              ; preds = %987
  %996 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %103, i64 0, i32 3, i64 %415
  %997 = load i32, i32* %996, align 4
  switch i32 %997, label %1012 [
    i32 86, label %998
    i32 46, label %1000
  ]

998:                                              ; preds = %995
  %999 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %75) #13
  br label %1012

1000:                                             ; preds = %995
  %1001 = icmp ult i64 %412, %403
  br i1 %1001, label %1002, label %1004

1002:                                             ; preds = %1000
  %1003 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %75) #13
  br label %1012

1004:                                             ; preds = %1000
  %1005 = add nuw i64 %415, 1
  %1006 = icmp ult i64 %1005, %107
  br i1 %1006, label %1007, label %1012

1007:                                             ; preds = %1004
  %1008 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %103, i64 0, i32 3, i64 %1005
  %1009 = load i32, i32* %1008, align 4
  switch i32 %1009, label %1012 [
    i32 57, label %1010
    i32 90, label %1010
  ]

1010:                                             ; preds = %1007, %1007
  %1011 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %75) #13
  br label %1012

1012:                                             ; preds = %1007, %995, %998, %1002, %1010, %1004
  %1013 = bitcast i64* %76 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1013) #13
  %1014 = add nuw i64 %415, 1
  store i64 %1014, i64* %76, align 8
  %1015 = icmp ult i64 %1014, %107
  br i1 %1015, label %1016, label %1186

1016:                                             ; preds = %1012
  %1017 = add i64 %412, 1
  %1018 = select i1 %402, i32 41, i32 32
  %1019 = select i1 %402, i32 40, i32 32
  %1020 = inttoptr i64 %405 to i32*
  %1021 = bitcast %"class.fxcrt::WideString"* %81 to i8*
  %1022 = select i1 %402, [3 x i32]* @.str.13, [3 x i32]* @.str.11
  %1023 = getelementptr inbounds [3 x i32], [3 x i32]* %1022, i64 0, i64 0
  %1024 = select i1 %402, [3 x i32]* @.str.10, [3 x i32]* @.str.11
  %1025 = getelementptr inbounds [3 x i32], [3 x i32]* %1024, i64 0, i64 0
  %1026 = bitcast %"class.fxcrt::WideString"* %80 to i8*
  %1027 = bitcast %"class.fxcrt::WideString"* %79 to i8*
  %1028 = bitcast %"class.fxcrt::WideString"* %77 to i8*
  %1029 = bitcast %"class.pdfium::span"* %78 to i64*
  %1030 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %78, i64 0, i32 1
  br label %1031

1031:                                             ; preds = %1016, %1180
  %1032 = phi i64 [ %1014, %1016 ], [ %1184, %1180 ]
  %1033 = phi i64 [ %415, %1016 ], [ %1181, %1180 ]
  %1034 = phi i64 [ %1017, %1016 ], [ %1183, %1180 ]
  %1035 = phi i8 [ %858, %1016 ], [ %1182, %1180 ]
  %1036 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %103, i64 0, i32 3, i64 %1032
  %1037 = load i32, i32* %1036, align 4
  switch i32 %1037, label %1180 [
    i32 39, label %1045
    i32 57, label %1048
    i32 122, label %1063
    i32 90, label %1076
    i32 69, label %1091
    i32 36, label %1093
    i32 99, label %1098
    i32 67, label %1110
    i32 100, label %1120
    i32 68, label %1132
    i32 37, label %1142
    i32 56, label %1038
    i32 44, label %1174
    i32 40, label %1176
    i32 41, label %1178
  ]

1038:                                             ; preds = %1031
  %1039 = add nuw i64 %1032, 1
  %1040 = icmp ult i64 %1039, %107
  br i1 %1040, label %1041, label %1158

1041:                                             ; preds = %1038
  %1042 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %103, i64 0, i32 3, i64 %1039
  %1043 = load i32, i32* %1042, align 4
  %1044 = icmp eq i32 %1043, 56
  br i1 %1044, label %1151, label %1156

1045:                                             ; preds = %1031
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1028) #13
  store i64 %111, i64* %1029, align 8
  store i64 %107, i64* %1030, align 8
  call fastcc void @_ZN12_GLOBAL__N_114GetLiteralTextEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %77, %"class.pdfium::span"* nonnull %78, i64* nonnull %76)
  %1046 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %77) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %77) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1028) #13
  %1047 = load i64, i64* %76, align 8
  br label %1180

1048:                                             ; preds = %1031
  %1049 = icmp ult i64 %1034, %403
  br i1 %1049, label %1050, label %1061

1050:                                             ; preds = %1048
  %1051 = getelementptr inbounds i32, i32* %1020, i64 %1034
  %1052 = load i32, i32* %1051, align 4
  %1053 = icmp ugt i32 %1052, 127
  br i1 %1053, label %1227, label %1054

1054:                                             ; preds = %1050
  %1055 = call i32 @iswdigit(i32 %1052) #13
  %1056 = icmp eq i32 %1055, 0
  br i1 %1056, label %1227, label %1057

1057:                                             ; preds = %1054
  %1058 = load i32, i32* %1051, align 4
  %1059 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %3, i32 signext %1058) #13
  %1060 = add nuw i64 %1034, 1
  br label %1180

1061:                                             ; preds = %1048
  %1062 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %3, i32 signext 48) #13
  br label %1180

1063:                                             ; preds = %1031
  %1064 = icmp ult i64 %1034, %403
  br i1 %1064, label %1065, label %1180

1065:                                             ; preds = %1063
  %1066 = getelementptr inbounds i32, i32* %1020, i64 %1034
  %1067 = load i32, i32* %1066, align 4
  %1068 = icmp ugt i32 %1067, 127
  br i1 %1068, label %1227, label %1069

1069:                                             ; preds = %1065
  %1070 = call i32 @iswdigit(i32 %1067) #13
  %1071 = icmp eq i32 %1070, 0
  br i1 %1071, label %1227, label %1072

1072:                                             ; preds = %1069
  %1073 = load i32, i32* %1066, align 4
  %1074 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %3, i32 signext %1073) #13
  %1075 = add nuw i64 %1034, 1
  br label %1180

1076:                                             ; preds = %1031
  %1077 = icmp ult i64 %1034, %403
  br i1 %1077, label %1078, label %1089

1078:                                             ; preds = %1076
  %1079 = getelementptr inbounds i32, i32* %1020, i64 %1034
  %1080 = load i32, i32* %1079, align 4
  %1081 = icmp ugt i32 %1080, 127
  br i1 %1081, label %1227, label %1082

1082:                                             ; preds = %1078
  %1083 = call i32 @iswdigit(i32 %1080) #13
  %1084 = icmp eq i32 %1083, 0
  br i1 %1084, label %1227, label %1085

1085:                                             ; preds = %1082
  %1086 = load i32, i32* %1079, align 4
  %1087 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %3, i32 signext %1086) #13
  %1088 = add nuw i64 %1034, 1
  br label %1180

1089:                                             ; preds = %1076
  %1090 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %3, i32 signext 48) #13
  br label %1180

1091:                                             ; preds = %1031
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1027) #13
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %79, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.9, i64 0, i64 0), i32 %298) #13
  %1092 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %79) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %79) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1027) #13
  br label %1180

1093:                                             ; preds = %1031
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1026) #13
  %1094 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %371, align 8
  %1095 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %1094, i64 7
  %1096 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %1095, align 8
  call void %1096(%"class.fxcrt::WideString"* nonnull sret %80, %class.LocaleIface* nonnull %100) #13
  %1097 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %80) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %80) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1026) #13
  br label %1180

1098:                                             ; preds = %1031
  %1099 = add i64 %1033, 2
  %1100 = icmp ult i64 %1099, %107
  br i1 %1100, label %1101, label %1180

1101:                                             ; preds = %1098
  %1102 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %103, i64 0, i32 3, i64 %1099
  %1103 = load i32, i32* %1102, align 4
  %1104 = icmp eq i32 %1103, 114
  br i1 %1104, label %1105, label %1180

1105:                                             ; preds = %1101
  br i1 %402, label %1106, label %1108

1106:                                             ; preds = %1105
  %1107 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEPKw(%"class.fxcrt::WideString"* %3, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.10, i64 0, i64 0)) #13
  br label %1108

1108:                                             ; preds = %1106, %1105
  %1109 = add nuw i64 %1032, 1
  store i64 %1109, i64* %76, align 8
  br label %1180

1110:                                             ; preds = %1031
  %1111 = add i64 %1033, 2
  %1112 = icmp ult i64 %1111, %107
  br i1 %1112, label %1113, label %1180

1113:                                             ; preds = %1110
  %1114 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %103, i64 0, i32 3, i64 %1111
  %1115 = load i32, i32* %1114, align 4
  %1116 = icmp eq i32 %1115, 82
  br i1 %1116, label %1117, label %1180

1117:                                             ; preds = %1113
  %1118 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEPKw(%"class.fxcrt::WideString"* %3, i32* nonnull %1025) #13
  %1119 = add nuw i64 %1032, 1
  store i64 %1119, i64* %76, align 8
  br label %1180

1120:                                             ; preds = %1031
  %1121 = add i64 %1033, 2
  %1122 = icmp ult i64 %1121, %107
  br i1 %1122, label %1123, label %1180

1123:                                             ; preds = %1120
  %1124 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %103, i64 0, i32 3, i64 %1121
  %1125 = load i32, i32* %1124, align 4
  %1126 = icmp eq i32 %1125, 98
  br i1 %1126, label %1127, label %1180

1127:                                             ; preds = %1123
  br i1 %402, label %1128, label %1130

1128:                                             ; preds = %1127
  %1129 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEPKw(%"class.fxcrt::WideString"* %3, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.12, i64 0, i64 0)) #13
  br label %1130

1130:                                             ; preds = %1128, %1127
  %1131 = add nuw i64 %1032, 1
  store i64 %1131, i64* %76, align 8
  br label %1180

1132:                                             ; preds = %1031
  %1133 = add i64 %1033, 2
  %1134 = icmp ult i64 %1133, %107
  br i1 %1134, label %1135, label %1180

1135:                                             ; preds = %1132
  %1136 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %103, i64 0, i32 3, i64 %1133
  %1137 = load i32, i32* %1136, align 4
  %1138 = icmp eq i32 %1137, 66
  br i1 %1138, label %1139, label %1180

1139:                                             ; preds = %1135
  %1140 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEPKw(%"class.fxcrt::WideString"* %3, i32* nonnull %1023) #13
  %1141 = add nuw i64 %1032, 1
  store i64 %1141, i64* %76, align 8
  br label %1180

1142:                                             ; preds = %1031
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1021) #13
  %1143 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %371, align 8
  %1144 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %1143, i64 5
  %1145 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %1144, align 8
  call void %1145(%"class.fxcrt::WideString"* nonnull sret %81, %class.LocaleIface* nonnull %100) #13
  %1146 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %81) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %81) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1021) #13
  br label %1180

1147:                                             ; preds = %1151
  %1148 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %103, i64 0, i32 3, i64 %1153
  %1149 = load i32, i32* %1148, align 4
  %1150 = icmp eq i32 %1149, 56
  br i1 %1150, label %1151, label %1156

1151:                                             ; preds = %1041, %1147
  %1152 = phi i64 [ %1153, %1147 ], [ %1039, %1041 ]
  %1153 = add i64 %1152, 1
  %1154 = icmp eq i64 %1153, %107
  br i1 %1154, label %1155, label %1147

1155:                                             ; preds = %1151
  store i64 %1152, i64* %76, align 8
  br label %1158

1156:                                             ; preds = %1147, %1041
  %1157 = phi i64 [ %1032, %1041 ], [ %1152, %1147 ]
  store i64 %1157, i64* %76, align 8
  br label %1158

1158:                                             ; preds = %1156, %1155, %1038
  %1159 = phi i64 [ %1157, %1156 ], [ %1152, %1155 ], [ %1032, %1038 ]
  %1160 = icmp ult i64 %1034, %403
  br i1 %1160, label %1161, label %1180

1161:                                             ; preds = %1158, %1169
  %1162 = phi i64 [ %1172, %1169 ], [ %1034, %1158 ]
  %1163 = getelementptr inbounds i32, i32* %1020, i64 %1162
  %1164 = load i32, i32* %1163, align 4
  %1165 = icmp ugt i32 %1164, 127
  br i1 %1165, label %1180, label %1166

1166:                                             ; preds = %1161
  %1167 = call i32 @iswdigit(i32 %1164) #13
  %1168 = icmp eq i32 %1167, 0
  br i1 %1168, label %1180, label %1169

1169:                                             ; preds = %1166
  %1170 = load i32, i32* %1163, align 4
  %1171 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %3, i32 signext %1170) #13
  %1172 = add i64 %1162, 1
  %1173 = icmp eq i64 %1172, %403
  br i1 %1173, label %1180, label %1161

1174:                                             ; preds = %1031
  %1175 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %49) #13
  br label %1180

1176:                                             ; preds = %1031
  %1177 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %3, i32 signext %1019) #13
  br label %1180

1178:                                             ; preds = %1031
  %1179 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %3, i32 signext %1018) #13
  br label %1180

1180:                                             ; preds = %1161, %1166, %1169, %1158, %1045, %1091, %1093, %1142, %1174, %1176, %1178, %1061, %1057, %1072, %1063, %1089, %1085, %1108, %1101, %1098, %1117, %1113, %1110, %1130, %1123, %1120, %1139, %1135, %1132, %1031
  %1181 = phi i64 [ %1032, %1031 ], [ %1032, %1178 ], [ %1032, %1176 ], [ %1032, %1174 ], [ %1032, %1142 ], [ %1141, %1139 ], [ %1032, %1135 ], [ %1032, %1132 ], [ %1131, %1130 ], [ %1032, %1123 ], [ %1032, %1120 ], [ %1119, %1117 ], [ %1032, %1113 ], [ %1032, %1110 ], [ %1109, %1108 ], [ %1032, %1101 ], [ %1032, %1098 ], [ %1032, %1093 ], [ %1032, %1091 ], [ %1032, %1085 ], [ %1032, %1089 ], [ %1032, %1072 ], [ %1032, %1063 ], [ %1032, %1057 ], [ %1032, %1061 ], [ %1047, %1045 ], [ %1159, %1158 ], [ %1159, %1169 ], [ %1159, %1166 ], [ %1159, %1161 ]
  %1182 = phi i8 [ %1035, %1031 ], [ %1035, %1178 ], [ 1, %1176 ], [ %1035, %1174 ], [ %1035, %1142 ], [ 1, %1139 ], [ %1035, %1135 ], [ %1035, %1132 ], [ 1, %1130 ], [ %1035, %1123 ], [ %1035, %1120 ], [ 1, %1117 ], [ %1035, %1113 ], [ %1035, %1110 ], [ 1, %1108 ], [ %1035, %1101 ], [ %1035, %1098 ], [ %1035, %1093 ], [ %1035, %1091 ], [ %1035, %1085 ], [ %1035, %1089 ], [ %1035, %1072 ], [ %1035, %1063 ], [ %1035, %1057 ], [ %1035, %1061 ], [ %1035, %1045 ], [ %1035, %1158 ], [ %1035, %1169 ], [ %1035, %1166 ], [ %1035, %1161 ]
  %1183 = phi i64 [ %1034, %1031 ], [ %1034, %1178 ], [ %1034, %1176 ], [ %1034, %1174 ], [ %1034, %1142 ], [ %1034, %1139 ], [ %1034, %1135 ], [ %1034, %1132 ], [ %1034, %1130 ], [ %1034, %1123 ], [ %1034, %1120 ], [ %1034, %1117 ], [ %1034, %1113 ], [ %1034, %1110 ], [ %1034, %1108 ], [ %1034, %1101 ], [ %1034, %1098 ], [ %1034, %1093 ], [ %1034, %1091 ], [ %1088, %1085 ], [ %1034, %1089 ], [ %1075, %1072 ], [ %1034, %1063 ], [ %1060, %1057 ], [ %1034, %1061 ], [ %1034, %1045 ], [ %1034, %1158 ], [ %1162, %1161 ], [ %1162, %1166 ], [ %403, %1169 ]
  %1184 = add i64 %1181, 1
  store i64 %1184, i64* %76, align 8
  %1185 = icmp ult i64 %1184, %107
  br i1 %1185, label %1031, label %1186

1186:                                             ; preds = %1180, %1012
  %1187 = phi i8 [ %858, %1012 ], [ %1182, %1180 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1013) #13
  %1188 = and i8 %1187, 1
  %1189 = icmp ne i8 %1188, 0
  %1190 = xor i1 %402, true
  %1191 = or i1 %1189, %1190
  br i1 %1191, label %1230, label %1192

1192:                                             ; preds = %1186
  %1193 = bitcast %"class.fxcrt::WideString"* %82 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1193) #13
  %1194 = bitcast %"class.fxcrt::WideString"* %83 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1194) #13
  %1195 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %371, align 8
  %1196 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %1195, i64 6
  %1197 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %1196, align 8
  call void %1197(%"class.fxcrt::WideString"* nonnull sret %83, %class.LocaleIface* nonnull %100) #13
  %1198 = bitcast %"class.fxcrt::StringViewTemplate"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1198)
  %1199 = bitcast %"class.fxcrt::StringViewTemplate"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1199)
  %1200 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1201 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %1200, align 8, !noalias !349
  %1202 = icmp eq %"class.fxcrt::StringDataTemplate"* %1201, null
  %1203 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %1201, i64 0, i32 3
  %1204 = select i1 %1202, [1 x i32]* @.str.15, [1 x i32]* %1203
  %1205 = getelementptr inbounds [1 x i32], [1 x i32]* %1204, i64 0, i64 0
  br i1 %1202, label %1209, label %1206

1206:                                             ; preds = %1192
  %1207 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %1201, i64 0, i32 1
  %1208 = load i64, i64* %1207, align 8, !noalias !354
  br label %1209

1209:                                             ; preds = %1206, %1192
  %1210 = phi i64 [ %1208, %1206 ], [ 0, %1192 ]
  %1211 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %31, i64 0, i32 0, i32 0, i32 0
  store i32* %1205, i32** %1211, align 8, !alias.scope !354, !noalias !355
  %1212 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %31, i64 0, i32 0, i32 1
  store i64 %1210, i64* %1212, align 8, !alias.scope !354, !noalias !355
  %1213 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1214 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %1213, align 8, !noalias !356
  %1215 = icmp eq %"class.fxcrt::StringDataTemplate"* %1214, null
  %1216 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %1214, i64 0, i32 3
  %1217 = select i1 %1215, [1 x i32]* @.str.15, [1 x i32]* %1216
  %1218 = getelementptr inbounds [1 x i32], [1 x i32]* %1217, i64 0, i64 0
  br i1 %1215, label %1222, label %1219

1219:                                             ; preds = %1209
  %1220 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %1214, i64 0, i32 1
  %1221 = load i64, i64* %1220, align 8, !noalias !359
  br label %1222

1222:                                             ; preds = %1209, %1219
  %1223 = phi i64 [ %1221, %1219 ], [ 0, %1209 ]
  %1224 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %32, i64 0, i32 0, i32 0, i32 0
  store i32* %1218, i32** %1224, align 8, !alias.scope !359, !noalias !355
  %1225 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %32, i64 0, i32 0, i32 1
  store i64 %1223, i64* %1225, align 8, !alias.scope !359, !noalias !355
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %82, %"class.fxcrt::StringViewTemplate"* nonnull %31, %"class.fxcrt::StringViewTemplate"* nonnull %32) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1198)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1199)
  %1226 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %82) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %82) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %83) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1194) #13
  br label %1227

1227:                                             ; preds = %1050, %1065, %1078, %1082, %1069, %1054, %1222
  %1228 = phi i8* [ %1193, %1222 ], [ %1013, %1054 ], [ %1013, %1069 ], [ %1013, %1082 ], [ %1013, %1078 ], [ %1013, %1065 ], [ %1013, %1050 ]
  %1229 = phi i1 [ true, %1222 ], [ false, %1054 ], [ false, %1069 ], [ false, %1082 ], [ false, %1078 ], [ false, %1065 ], [ false, %1050 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1228) #13
  br label %1230

1230:                                             ; preds = %1227, %1186
  %1231 = phi i1 [ true, %1186 ], [ %1229, %1227 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %75) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %988) #13
  br label %1232

1232:                                             ; preds = %982, %947, %903, %933, %856, %1230
  %1233 = phi i1 [ %1231, %1230 ], [ false, %856 ], [ true, %933 ], [ true, %903 ], [ true, %947 ], [ true, %982 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %49) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %369) #13
  br label %1234

1234:                                             ; preds = %264, %226, %1232
  %1235 = phi i1 [ %1233, %1232 ], [ false, %264 ], [ false, %226 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %129) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %36) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #13
  br label %1236

1236:                                             ; preds = %102, %105, %95, %1234
  %1237 = phi i1 [ %1235, %1234 ], [ false, %95 ], [ false, %105 ], [ false, %102 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %35) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #13
  br label %1238

1238:                                             ; preds = %4, %87, %91, %1236
  %1239 = phi i1 [ %1237, %1236 ], [ false, %91 ], [ false, %87 ], [ false, %4 ]
  ret i1 %1239

1240:                                             ; preds = %326, %326, %326
  %1241 = add i64 %328, 1
  %1242 = icmp ne i32 %331, 57
  %1243 = zext i1 %1242 to i8
  br label %1244

1244:                                             ; preds = %1240, %326
  %1245 = phi i8 [ %327, %326 ], [ %1243, %1240 ]
  %1246 = phi i64 [ %328, %326 ], [ %1241, %1240 ]
  %1247 = add i64 %317, 2
  %1248 = add i64 %319, -2
  %1249 = icmp eq i64 %1248, 0
  br i1 %1249, label %332, label %315

1250:                                             ; preds = %205
  %1251 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %206, i32 10) #13
  %1252 = extractvalue { i32, i1 } %1251, 1
  %1253 = extractvalue { i32, i1 } %1251, 0
  %1254 = xor i1 %1252, true
  %1255 = zext i1 %1254 to i8
  br label %1256

1256:                                             ; preds = %1250, %205
  %1257 = phi i32 [ %1253, %1250 ], [ 0, %205 ]
  %1258 = phi i8 [ %1255, %1250 ], [ 0, %205 ]
  %1259 = icmp eq i8 %1258, 0
  %1260 = add i32 %198, -2
  %1261 = icmp eq i32 %1260, 0
  br i1 %1261, label %209, label %195
}

declare void @_ZN5fxcrt10WideString8TrimLeftEw(%"class.fxcrt::WideString"*, i32 signext) local_unnamed_addr #2

declare double @_ZNK13CFGAS_Decimal8ToDoubleEv(%class.CFGAS_Decimal*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #5

declare void @_ZN13CFGAS_Decimal8SetScaleEh(%class.CFGAS_Decimal*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN5fxcrt10WideString9TrimRightENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"*, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #2

declare i64 @_ZN5fxcrt10WideString6DeleteEmm(%"class.fxcrt::WideString"*, i64, i64) local_unnamed_addr #2

declare void @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* sret, i32*, ...) local_unnamed_addr #2

declare void @_ZN5fxcrt10WideStringC1EPKw(%"class.fxcrt::WideString"*, i32*) unnamed_addr #2

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEPKw(%"class.fxcrt::WideString"*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK21CFGAS_StringFormatter14FormatDateTimeEP14LocaleMgrIfaceRKN5fxcrt10WideStringENS_12DateTimeTypeEPS3_(%class.CFGAS_StringFormatter*, %class.LocaleMgrIface*, %"class.fxcrt::WideString"* dereferenceable(8), i32, %"class.fxcrt::WideString"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.fxcrt::WideString", align 8
  %7 = alloca %"class.fxcrt::WideString", align 8
  %8 = alloca %class.LocaleIface*, align 8
  %9 = alloca %"class.fxcrt::WideString", align 8
  %10 = alloca %class.CFX_DateTime, align 4
  %11 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %12 = alloca %"class.pdfium::span", align 8
  %13 = alloca %"class.fxcrt::WideString", align 8
  %14 = alloca %"class.pdfium::span", align 8
  %15 = alloca %"class.fxcrt::WideString", align 8
  %16 = alloca %"class.pdfium::span", align 8
  %17 = alloca %"class.pdfium::span", align 8
  %18 = alloca %"class.fxcrt::WideString", align 8
  %19 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %19, align 8
  %21 = icmp eq %"class.fxcrt::StringDataTemplate"* %20, null
  br i1 %21, label %139, label %22

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %20, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %139, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 1, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %139, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.fxcrt::WideString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %32, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %6) #13
  %33 = bitcast %"class.fxcrt::WideString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %34, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %7) #13
  %35 = bitcast %class.LocaleIface** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  store %class.LocaleIface* null, %class.LocaleIface** %8, align 8
  %36 = call i32 @_ZNK21CFGAS_StringFormatter17GetDateTimeFormatEP14LocaleMgrIfacePP11LocaleIfacePN5fxcrt10WideStringES7_(%class.CFGAS_StringFormatter* %0, %class.LocaleMgrIface* %1, %class.LocaleIface** nonnull %8, %"class.fxcrt::WideString"* nonnull %6, %"class.fxcrt::WideString"* nonnull %7)
  %37 = load %class.LocaleIface*, %class.LocaleIface** %8, align 8
  %38 = icmp eq %class.LocaleIface* %37, null
  br i1 %38, label %137, label %39

39:                                               ; preds = %30
  %40 = icmp eq i32 %36, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %39
  switch i32 %3, label %46 [
    i32 2, label %42
    i32 0, label %137
  ]

42:                                               ; preds = %41
  %43 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* nonnull %7, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %6) #13
  %44 = bitcast %"class.fxcrt::WideString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #13
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %9) #13
  %45 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* nonnull %6, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %9) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #13
  br label %46

46:                                               ; preds = %42, %41, %39
  %47 = phi i32 [ 2, %42 ], [ %36, %39 ], [ %3, %41 ]
  %48 = bitcast %class.CFX_DateTime* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %48) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %48, i8 -86, i64 12, i1 false)
  %49 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %10, i64 0, i32 6
  store i16 0, i16* %49, align 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %48, i8 0, i64 9, i1 false) #13
  %50 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %11, i64 0, i32 0, i32 0, i32 0
  store i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str.14, i64 0, i64 0), i32** %50, align 8
  %51 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %11, i64 0, i32 0, i32 1
  store i64 1, i64* %51, align 8
  %52 = call { i8, i64 } @_ZNK5fxcrt10WideString4FindENS_18StringViewTemplateIwEEm(%"class.fxcrt::WideString"* %2, %"class.fxcrt::StringViewTemplate"* nonnull %11, i64 0) #13
  %53 = extractvalue { i8, i64 } %52, 0
  %54 = extractvalue { i8, i64 } %52, 1
  %55 = icmp eq i8 %53, 0
  br i1 %55, label %56, label %91

56:                                               ; preds = %46
  switch i32 %47, label %135 [
    i32 1, label %57
    i32 2, label %74
  ]

57:                                               ; preds = %56
  %58 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %19, align 8, !noalias !360
  %59 = icmp eq %"class.fxcrt::StringDataTemplate"* %58, null
  %60 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %58, i64 0, i32 3, i64 0
  br i1 %59, label %64, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %58, i64 0, i32 1
  %63 = load i64, i64* %62, align 8, !noalias !360
  br label %64

64:                                               ; preds = %57, %61
  %65 = phi i64 [ %63, %61 ], [ 0, %57 ]
  %66 = ptrtoint i32* %60 to i64
  %67 = select i1 %59, i64 0, i64 %66
  %68 = bitcast %"class.pdfium::span"* %12 to i64*
  store i64 %67, i64* %68, align 8, !alias.scope !360
  %69 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %12, i64 0, i32 1
  store i64 %65, i64* %69, align 8, !alias.scope !360
  %70 = call zeroext i1 @_Z20FX_DateFromCanonicalN6pdfium4spanIKwEEP12CFX_DateTime(%"class.pdfium::span"* nonnull %12, %class.CFX_DateTime* nonnull %10)
  br i1 %70, label %71, label %135

71:                                               ; preds = %64
  %72 = bitcast %"class.fxcrt::WideString"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #13
  call fastcc void @_ZN12_GLOBAL__N_122FormatDateTimeInternalERK12CFX_DateTimeRKN5fxcrt10WideStringES6_bP11LocaleIface(%"class.fxcrt::WideString"* nonnull sret %13, %class.CFX_DateTime* nonnull dereferenceable(12) %10, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %6, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %7, i1 zeroext true, %class.LocaleIface* nonnull %37)
  %73 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %4, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %13) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #13
  br label %135

74:                                               ; preds = %56
  %75 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %19, align 8, !noalias !363
  %76 = icmp eq %"class.fxcrt::StringDataTemplate"* %75, null
  %77 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %75, i64 0, i32 3, i64 0
  br i1 %76, label %81, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %75, i64 0, i32 1
  %80 = load i64, i64* %79, align 8, !noalias !363
  br label %81

81:                                               ; preds = %78, %74
  %82 = phi i64 [ %80, %78 ], [ 0, %74 ]
  %83 = ptrtoint i32* %77 to i64
  %84 = select i1 %76, i64 0, i64 %83
  %85 = bitcast %"class.pdfium::span"* %14 to i64*
  store i64 %84, i64* %85, align 8, !alias.scope !363
  %86 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %14, i64 0, i32 1
  store i64 %82, i64* %86, align 8, !alias.scope !363
  %87 = call zeroext i1 @_Z20FX_TimeFromCanonicalPK11LocaleIfaceN6pdfium4spanIKwEEP12CFX_DateTime(%class.LocaleIface* nonnull %37, %"class.pdfium::span"* nonnull %14, %class.CFX_DateTime* nonnull %10)
  br i1 %87, label %88, label %135

88:                                               ; preds = %81
  %89 = bitcast %"class.fxcrt::WideString"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #13
  call fastcc void @_ZN12_GLOBAL__N_122FormatDateTimeInternalERK12CFX_DateTimeRKN5fxcrt10WideStringES6_bP11LocaleIface(%"class.fxcrt::WideString"* nonnull sret %15, %class.CFX_DateTime* nonnull dereferenceable(12) %10, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %6, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %7, i1 zeroext true, %class.LocaleIface* nonnull %37)
  %90 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %4, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %15) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #13
  br label %135

91:                                               ; preds = %46
  %92 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %19, align 8, !noalias !366
  %93 = icmp eq %"class.fxcrt::StringDataTemplate"* %92, null
  %94 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %92, i64 0, i32 3, i64 0
  br i1 %93, label %98, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %92, i64 0, i32 1
  %97 = load i64, i64* %96, align 8, !noalias !366
  br label %98

98:                                               ; preds = %91, %95
  %99 = phi i64 [ %97, %95 ], [ 0, %91 ]
  %100 = ptrtoint i32* %94 to i64
  %101 = select i1 %93, i64 0, i64 %100
  %102 = icmp eq i8 %53, 1
  br i1 %102, label %104, label %103, !prof !17

103:                                              ; preds = %98
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !27
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !28
  unreachable

104:                                              ; preds = %98
  %105 = icmp ult i64 %99, %54
  br i1 %105, label %106, label %107, !prof !2

106:                                              ; preds = %104
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !noalias !369, !srcloc !372
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !noalias !369, !srcloc !373
  unreachable

107:                                              ; preds = %104
  br i1 %93, label %111, label %108

108:                                              ; preds = %107
  %109 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %92, i64 0, i32 1
  %110 = load i64, i64* %109, align 8, !noalias !374
  br label %111

111:                                              ; preds = %108, %107
  %112 = phi i64 [ %110, %108 ], [ 0, %107 ]
  %113 = add i64 %54, 1
  %114 = icmp ult i64 %112, %113
  br i1 %114, label %115, label %116, !prof !2

115:                                              ; preds = %111
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !noalias !377, !srcloc !6
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !noalias !377, !srcloc !7
  unreachable

116:                                              ; preds = %111
  %117 = sub i64 %112, %113
  %118 = inttoptr i64 %101 to i32*
  %119 = getelementptr inbounds i32, i32* %118, i64 %113
  %120 = icmp eq i64 %54, 0
  %121 = icmp eq i64 %117, 0
  %122 = or i1 %120, %121
  br i1 %122, label %135, label %123

123:                                              ; preds = %116
  %124 = bitcast %"class.pdfium::span"* %16 to i64*
  store i64 %101, i64* %124, align 8
  %125 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %16, i64 0, i32 1
  store i64 %54, i64* %125, align 8
  %126 = call zeroext i1 @_Z20FX_DateFromCanonicalN6pdfium4spanIKwEEP12CFX_DateTime(%"class.pdfium::span"* nonnull %16, %class.CFX_DateTime* nonnull %10)
  br i1 %126, label %127, label %135

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %17, i64 0, i32 0, i32 0
  store i32* %119, i32** %128, align 8
  %129 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %17, i64 0, i32 1
  store i64 %117, i64* %129, align 8
  %130 = call zeroext i1 @_Z20FX_TimeFromCanonicalPK11LocaleIfaceN6pdfium4spanIKwEEP12CFX_DateTime(%class.LocaleIface* nonnull %37, %"class.pdfium::span"* nonnull %17, %class.CFX_DateTime* nonnull %10)
  br i1 %130, label %131, label %135

131:                                              ; preds = %127
  %132 = bitcast %"class.fxcrt::WideString"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #13
  %133 = icmp ne i32 %47, 4
  call fastcc void @_ZN12_GLOBAL__N_122FormatDateTimeInternalERK12CFX_DateTimeRKN5fxcrt10WideStringES6_bP11LocaleIface(%"class.fxcrt::WideString"* nonnull sret %18, %class.CFX_DateTime* nonnull dereferenceable(12) %10, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %6, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %7, i1 zeroext %133, %class.LocaleIface* nonnull %37)
  %134 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %4, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %18) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #13
  br label %135

135:                                              ; preds = %56, %116, %131, %123, %64, %81, %127, %88, %71
  %136 = phi i1 [ true, %71 ], [ true, %88 ], [ false, %127 ], [ false, %81 ], [ false, %64 ], [ false, %123 ], [ false, %116 ], [ true, %131 ], [ false, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %48) #13
  br label %137

137:                                              ; preds = %41, %30, %135
  %138 = phi i1 [ %136, %135 ], [ false, %30 ], [ false, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  br label %139

139:                                              ; preds = %5, %22, %26, %137
  %140 = phi i1 [ %138, %137 ], [ false, %26 ], [ false, %22 ], [ false, %5 ]
  ret i1 %140
}

declare { i8, i64 } @_ZNK5fxcrt10WideString4FindENS_18StringViewTemplateIwEEm(%"class.fxcrt::WideString"*, %"class.fxcrt::StringViewTemplate"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_122FormatDateTimeInternalERK12CFX_DateTimeRKN5fxcrt10WideStringES6_bP11LocaleIface(%"class.fxcrt::WideString"* noalias sret, %class.CFX_DateTime* nocapture readonly dereferenceable(12), %"class.fxcrt::WideString"* nocapture readonly dereferenceable(8), %"class.fxcrt::WideString"* dereferenceable(8), i1 zeroext, %class.LocaleIface*) unnamed_addr #0 {
  %7 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %8 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.fxcrt::WideString", align 8
  %11 = alloca %"class.pdfium::span", align 8
  %12 = alloca %"class.fxcrt::WideString", align 8
  %13 = alloca %"class.fxcrt::WideString", align 8
  %14 = alloca %"class.fxcrt::WideString", align 8
  %15 = alloca %"class.fxcrt::WideString", align 8
  %16 = alloca %"class.fxcrt::WideString", align 8
  %17 = alloca %"class.fxcrt::WideString", align 8
  %18 = alloca %"class.fxcrt::WideString", align 8
  %19 = alloca %"class.fxcrt::WideString", align 8
  %20 = alloca %"class.fxcrt::WideString", align 8
  %21 = alloca %"class.fxcrt::WideString", align 8
  %22 = alloca i64, align 8
  %23 = alloca %"class.fxcrt::WideString", align 8
  %24 = alloca %"class.pdfium::span", align 8
  %25 = alloca %"class.fxcrt::WideString", align 8
  %26 = alloca %"class.fxcrt::WideString", align 8
  %27 = alloca %"class.fxcrt::WideString", align 8
  %28 = alloca %"class.fxcrt::WideString", align 8
  %29 = alloca %"class.fxcrt::WideString", align 8
  %30 = alloca %"class.fxcrt::WideString", align 8
  %31 = alloca %"class.fxcrt::WideString", align 8
  %32 = alloca %"class.fxcrt::WideString", align 8
  %33 = alloca %"class.fxcrt::WideString", align 8
  %34 = alloca %"class.fxcrt::WideString", align 8
  %35 = alloca %"class.fxcrt::WideString", align 8
  %36 = alloca %"class.fxcrt::WideString", align 8
  %37 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %38 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %39 = alloca %"class.fxcrt::WideString", align 8
  %40 = alloca %"class.fxcrt::WideString", align 8
  %41 = alloca %"class.fxcrt::WideString", align 8
  %42 = alloca %"class.fxcrt::WideString", align 8
  %43 = bitcast %"class.fxcrt::WideString"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #13
  %44 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %44, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %39) #13
  %45 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %45, align 8
  %47 = icmp eq %"class.fxcrt::StringDataTemplate"* %46, null
  br i1 %47, label %529, label %48

48:                                               ; preds = %6
  %49 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %529, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.fxcrt::WideString"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #13
  %54 = bitcast %"class.pdfium::span"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %55, align 8, !alias.scope !380
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %40) #13
  %56 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %1, i64 0, i32 0
  %57 = load i32, i32* %56, align 4, !noalias !380
  %58 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %1, i64 0, i32 1
  %59 = load i8, i8* %58, align 4, !noalias !380
  %60 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %1, i64 0, i32 2
  %61 = load i8, i8* %60, align 1, !noalias !380
  %62 = bitcast i64* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #13, !noalias !380
  store i64 0, i64* %22, align 8, !noalias !380
  %63 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %45, align 8, !noalias !383
  %64 = icmp eq %"class.fxcrt::StringDataTemplate"* %63, null
  br i1 %64, label %527, label %65

65:                                               ; preds = %52
  %66 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %63, i64 0, i32 3, i64 0
  %67 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %63, i64 0, i32 1
  %68 = load i64, i64* %67, align 8, !noalias !386
  %69 = ptrtoint i32* %66 to i64
  %70 = icmp eq i64 %68, 0
  br i1 %70, label %527, label %71

71:                                               ; preds = %65
  %72 = bitcast %"class.fxcrt::WideString"* %25 to i8*
  %73 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = bitcast %"class.fxcrt::WideString"* %26 to i8*
  %75 = zext i8 %61 to i32
  %76 = zext i8 %59 to i32
  %77 = icmp ugt i8 %59, 1
  %78 = and i32 %57, 65535
  %79 = zext i8 %61 to i16
  %80 = bitcast %"class.fxcrt::WideString"* %27 to i8*
  %81 = bitcast %"class.fxcrt::WideString"* %28 to i8*
  %82 = bitcast %"class.fxcrt::WideString"* %29 to i8*
  %83 = add nsw i32 %76, -1
  %84 = bitcast %class.LocaleIface* %5 to void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)***
  %85 = add nsw i32 %78, -1
  %86 = srem i32 %85, 7
  %87 = sdiv i32 %85, 4
  %88 = sdiv i32 %85, -100
  %89 = sdiv i32 %85, 400
  %90 = zext i8 %59 to i64
  %91 = add nsw i64 %90, -1
  %92 = getelementptr inbounds [12 x i8], [12 x i8]* @_ZZN12_GLOBAL__N_110GetWeekDayEtttE9kMonthDay, i64 0, i64 %91
  %93 = icmp ugt i8 %59, 2
  %94 = add nsw i32 %86, %87
  %95 = add nsw i32 %94, %88
  %96 = add nsw i32 %95, %89
  %97 = add nsw i32 %96, %75
  %98 = bitcast %"class.fxcrt::WideString"* %30 to i8*
  %99 = bitcast %"class.fxcrt::WideString"* %31 to i8*
  %100 = bitcast %"class.fxcrt::WideString"* %32 to i8*
  %101 = icmp sgt i32 %57, 0
  %102 = bitcast %class.LocaleIface* %5 to void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)***
  %103 = bitcast %"class.fxcrt::WideString"* %33 to i8*
  %104 = srem i32 %57, 100
  %105 = bitcast %"class.fxcrt::WideString"* %34 to i8*
  %106 = bitcast %"class.fxcrt::WideString"* %35 to i8*
  %107 = udiv i8 %61, 7
  %108 = zext i8 %107 to i32
  %109 = urem i8 %61, 7
  %110 = zext i8 %109 to i16
  %111 = bitcast %"class.fxcrt::WideString"* %36 to i8*
  %112 = zext i8 %59 to i16
  %113 = trunc i32 %96 to i16
  %114 = add nsw i16 %113, 1
  %115 = urem i16 %114, 7
  %116 = bitcast %"class.fxcrt::WideString"* %23 to i8*
  %117 = bitcast %"class.pdfium::span"* %24 to i64*
  %118 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %24, i64 0, i32 1
  %119 = add nsw i32 %94, 1
  %120 = add nsw i32 %119, %88
  %121 = add nsw i32 %120, %89
  br label %122

122:                                              ; preds = %130, %71
  %123 = phi i64 [ 0, %71 ], [ %131, %130 ]
  %124 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %63, i64 0, i32 3, i64 %123
  %125 = load i32, i32* %124, align 4
  switch i32 %125, label %133 [
    i32 39, label %126
    i32 119, label %136
    i32 103, label %136
    i32 101, label %136
    i32 89, label %136
    i32 87, label %136
    i32 77, label %136
    i32 74, label %136
    i32 71, label %136
    i32 69, label %136
    i32 68, label %136
    i32 0, label %136
  ]

126:                                              ; preds = %122
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #13, !noalias !380
  store i64 %69, i64* %117, align 8, !noalias !380
  store i64 %68, i64* %118, align 8, !noalias !380
  call fastcc void @_ZN12_GLOBAL__N_114GetLiteralTextEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %23, %"class.pdfium::span"* nonnull %24, i64* nonnull %22) #13
  %127 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %40, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %23) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %23) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #13, !noalias !380
  %128 = load i64, i64* %22, align 8, !noalias !380
  %129 = add i64 %128, 1
  store i64 %129, i64* %22, align 8, !noalias !380
  br label %130

130:                                              ; preds = %526, %133, %126
  %131 = phi i64 [ %129, %126 ], [ %134, %133 ], [ %163, %526 ]
  %132 = icmp ult i64 %131, %68
  br i1 %132, label %122, label %527

133:                                              ; preds = %122
  %134 = add nuw i64 %123, 1
  store i64 %134, i64* %22, align 8, !noalias !380
  %135 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %40, i32 signext %125) #13
  br label %130

136:                                              ; preds = %122, %122, %122, %122, %122, %122, %122, %122, %122, %122, %122
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #13, !noalias !380
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %73, align 8, !noalias !380
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %25) #13
  call void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"* nonnull %25, i64 4) #13
  %137 = add nuw i64 %123, 1
  store i64 %137, i64* %22, align 8, !noalias !380
  %138 = load i32, i32* %124, align 4
  %139 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %25, i32 signext %138) #13
  %140 = icmp ult i64 %137, %68
  br i1 %140, label %141, label %162

141:                                              ; preds = %136, %156
  %142 = phi i64 [ %157, %156 ], [ %137, %136 ]
  %143 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %63, i64 0, i32 3, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %73, align 8, !noalias !380
  %146 = icmp eq %"class.fxcrt::StringDataTemplate"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %145, i64 0, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %152, !prof !2

151:                                              ; preds = %147, %141
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !47
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !48
  unreachable

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %145, i64 0, i32 3, i64 0
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %144, %154
  br i1 %155, label %156, label %160

156:                                              ; preds = %152
  %157 = add i64 %142, 1
  %158 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %25, i32 signext %144) #13
  %159 = icmp eq i64 %157, %68
  br i1 %159, label %160, label %141

160:                                              ; preds = %156, %152
  %161 = phi i64 [ %142, %152 ], [ %68, %156 ]
  store i64 %161, i64* %22, align 8, !noalias !380
  br label %162

162:                                              ; preds = %160, %136
  %163 = phi i64 [ %137, %136 ], [ %161, %160 ]
  %164 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %73, align 8, !noalias !387
  %165 = icmp eq %"class.fxcrt::StringDataTemplate"* %164, null
  %166 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %164, i64 0, i32 3
  %167 = select i1 %165, [1 x i32]* @.str.15, [1 x i32]* %166
  br i1 %165, label %526, label %168

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %164, i64 0, i32 1
  %170 = load i64, i64* %169, align 8, !noalias !390
  %171 = icmp eq i64 %170, 1
  br i1 %171, label %172, label %179

172:                                              ; preds = %168
  %173 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 0
  %174 = load i32, i32* %173, align 4
  %175 = add i32 %174, -1
  %176 = icmp ult i32 %175, 127
  %177 = icmp eq i32 %174, 68
  %178 = and i1 %177, %176
  br i1 %178, label %194, label %199

179:                                              ; preds = %168
  switch i64 %170, label %526 [
    i64 2, label %180
    i64 3, label %203
    i64 4, label %281
  ]

180:                                              ; preds = %179
  %181 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 0
  %182 = load i32, i32* %181, align 4
  %183 = add i32 %182, -1
  %184 = icmp ult i32 %183, 127
  %185 = icmp eq i32 %182, 68
  %186 = and i1 %184, %185
  br i1 %186, label %187, label %255

187:                                              ; preds = %180
  %188 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 1
  %189 = load i32, i32* %188, align 4
  %190 = add i32 %189, -1
  %191 = icmp ult i32 %190, 127
  %192 = icmp eq i32 %189, 68
  %193 = and i1 %191, %192
  br i1 %193, label %194, label %255

194:                                              ; preds = %172, %187
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #13, !noalias !380
  %195 = icmp eq i64 %170, 2
  %196 = select i1 %171, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.54, i64 0, i64 0), i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.56, i64 0, i64 0)
  %197 = select i1 %195, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.55, i64 0, i64 0), i32* %196
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %26, i32* %197, i32 %75) #13
  %198 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %40, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %26) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %26) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #13, !noalias !380
  br label %526

199:                                              ; preds = %172
  %200 = icmp ult i32 %175, 127
  %201 = icmp eq i32 %174, 74
  %202 = and i1 %201, %200
  br i1 %202, label %216, label %251

203:                                              ; preds = %179
  %204 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 0
  %205 = load i32, i32* %204, align 4
  %206 = add i32 %205, -1
  %207 = icmp ugt i32 %206, 126
  br i1 %207, label %349, label %215

208:                                              ; preds = %215
  %209 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 1
  %210 = load i32, i32* %209, align 4
  %211 = add i32 %210, -1
  %212 = icmp ult i32 %211, 127
  %213 = icmp eq i32 %210, 74
  %214 = and i1 %212, %213
  br i1 %214, label %896, label %349

215:                                              ; preds = %203
  switch i32 %205, label %349 [
    i32 74, label %208
    i32 77, label %274
  ]

216:                                              ; preds = %896, %199
  br i1 %77, label %238, label %217

217:                                              ; preds = %216
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #13, !noalias !380
  br label %224

218:                                              ; preds = %246
  %219 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %73, align 8, !noalias !380
  %220 = add i16 %248, %79
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #13, !noalias !380
  %221 = icmp eq %"class.fxcrt::StringDataTemplate"* %219, null
  br i1 %221, label %222, label %224

222:                                              ; preds = %218
  %223 = zext i16 %220 to i32
  br label %234

224:                                              ; preds = %217, %218
  %225 = phi i16 [ %79, %217 ], [ %220, %218 ]
  %226 = phi %"class.fxcrt::StringDataTemplate"* [ %164, %217 ], [ %219, %218 ]
  %227 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %226, i64 0, i32 1
  %228 = load i64, i64* %227, align 8
  %229 = zext i16 %225 to i32
  %230 = icmp eq i64 %228, 2
  br i1 %230, label %234, label %231

231:                                              ; preds = %224
  %232 = icmp eq i64 %228, 1
  %233 = select i1 %232, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.54, i64 0, i64 0), i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.56, i64 0, i64 0)
  br label %234

234:                                              ; preds = %231, %224, %222
  %235 = phi i32 [ %223, %222 ], [ %229, %224 ], [ %229, %231 ]
  %236 = phi i32* [ getelementptr inbounds ([5 x i32], [5 x i32]* @.str.56, i64 0, i64 0), %222 ], [ getelementptr inbounds ([5 x i32], [5 x i32]* @.str.55, i64 0, i64 0), %224 ], [ %233, %231 ]
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %27, i32* %236, i32 %235) #13
  %237 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %40, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %27) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %27) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #13, !noalias !380
  br label %526

238:                                              ; preds = %216, %246
  %239 = phi i32 [ %249, %246 ], [ 1, %216 ]
  %240 = phi i16 [ %248, %246 ], [ 0, %216 ]
  %241 = trunc i32 %239 to i16
  switch i16 %241, label %246 [
    i16 2, label %242
    i16 9, label %245
    i16 6, label %245
    i16 4, label %245
    i16 11, label %245
  ]

242:                                              ; preds = %238
  %243 = call zeroext i1 @_Z13FX_IsLeapYeari(i32 %78) #13
  %244 = select i1 %243, i16 29, i16 28
  br label %246

245:                                              ; preds = %238, %238, %238, %238
  br label %246

246:                                              ; preds = %245, %242, %238
  %247 = phi i16 [ %244, %242 ], [ 30, %245 ], [ 31, %238 ]
  %248 = add i16 %247, %240
  %249 = add nuw nsw i32 %239, 1
  %250 = icmp eq i32 %249, %76
  br i1 %250, label %218, label %238

251:                                              ; preds = %199
  %252 = icmp ult i32 %175, 127
  %253 = icmp eq i32 %174, 77
  %254 = and i1 %253, %252
  br i1 %254, label %269, label %301

255:                                              ; preds = %187, %180
  %256 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 0
  %257 = load i32, i32* %256, align 4
  %258 = add i32 %257, -1
  %259 = icmp ult i32 %258, 127
  %260 = icmp eq i32 %257, 77
  %261 = and i1 %259, %260
  br i1 %261, label %262, label %430

262:                                              ; preds = %255
  %263 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 1
  %264 = load i32, i32* %263, align 4
  %265 = add i32 %264, -1
  %266 = icmp ult i32 %265, 127
  %267 = icmp eq i32 %264, 77
  %268 = and i1 %266, %267
  br i1 %268, label %269, label %430

269:                                              ; preds = %251, %262
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #13, !noalias !380
  %270 = icmp eq i64 %170, 2
  %271 = select i1 %171, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.54, i64 0, i64 0), i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.56, i64 0, i64 0)
  %272 = select i1 %270, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.55, i64 0, i64 0), i32* %271
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %28, i32* %272, i32 %76) #13
  %273 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %40, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %28) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #13, !noalias !380
  br label %526

274:                                              ; preds = %215
  %275 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 1
  %276 = load i32, i32* %275, align 4
  %277 = add i32 %276, -1
  %278 = icmp ult i32 %277, 127
  %279 = icmp eq i32 %276, 77
  %280 = and i1 %278, %279
  br i1 %280, label %903, label %349

281:                                              ; preds = %179
  %282 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 0
  %283 = load i32, i32* %282, align 4
  %284 = add i32 %283, -1
  %285 = icmp ult i32 %284, 127
  %286 = icmp eq i32 %283, 77
  %287 = and i1 %285, %286
  br i1 %287, label %288, label %363

288:                                              ; preds = %281
  %289 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 1
  %290 = load i32, i32* %289, align 4
  %291 = add i32 %290, -1
  %292 = icmp ult i32 %291, 127
  %293 = icmp eq i32 %290, 77
  %294 = and i1 %292, %293
  br i1 %294, label %910, label %363

295:                                              ; preds = %917, %903
  %296 = phi i1 [ true, %903 ], [ false, %917 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #13, !noalias !380
  %297 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)*** %84, align 8, !noalias !380
  %298 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)** %297, i64 9
  %299 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)** %298, align 8
  call void %299(%"class.fxcrt::WideString"* nonnull sret %29, %class.LocaleIface* %5, i32 %83, i1 zeroext %296) #13
  %300 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %40, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %29) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #13, !noalias !380
  br label %526

301:                                              ; preds = %251
  %302 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 0
  %303 = load i32, i32* %302, align 4
  %304 = add i32 %303, -1
  %305 = icmp ugt i32 %304, 126
  br i1 %305, label %417, label %306

306:                                              ; preds = %301
  %307 = tail call i32** @__ctype_tolower_loc() #14
  %308 = load i32*, i32** %307, align 8
  %309 = sext i32 %303 to i64
  %310 = getelementptr inbounds i32, i32* %308, i64 %309
  %311 = load i32, i32* %310, align 4
  %312 = getelementptr inbounds i32, i32* %308, i64 101
  %313 = load i32, i32* %312, align 4
  %314 = icmp eq i32 %311, %313
  br i1 %314, label %315, label %417

315:                                              ; preds = %306
  %316 = load i8, i8* %92, align 1
  %317 = zext i8 %316 to i32
  %318 = call zeroext i1 @_Z13FX_IsLeapYeari(i32 %78) #13
  %319 = and i1 %93, %318
  %320 = zext i1 %319 to i32
  %321 = add nsw i32 %97, %317
  %322 = add nsw i32 %321, %320
  %323 = trunc i32 %322 to i16
  %324 = urem i16 %323, 7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #13, !noalias !380
  %325 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %73, align 8, !noalias !391
  %326 = icmp eq %"class.fxcrt::StringDataTemplate"* %325, null
  %327 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %325, i64 0, i32 3
  %328 = select i1 %326, [1 x i32]* @.str.15, [1 x i32]* %327
  br i1 %326, label %342, label %329

329:                                              ; preds = %315
  %330 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %325, i64 0, i32 1
  %331 = load i64, i64* %330, align 8, !noalias !394
  %332 = icmp eq i64 %331, 1
  br i1 %332, label %333, label %342

333:                                              ; preds = %329
  %334 = getelementptr inbounds [1 x i32], [1 x i32]* %328, i64 0, i64 0
  %335 = load i32, i32* %334, align 4
  %336 = add i32 %335, -1
  %337 = icmp ult i32 %336, 127
  %338 = icmp eq i32 %335, 69
  %339 = and i1 %338, %337
  br i1 %339, label %340, label %342

340:                                              ; preds = %333
  %341 = add nuw nsw i16 %324, 1
  br label %345

342:                                              ; preds = %333, %329, %315
  %343 = icmp eq i16 %324, 0
  %344 = select i1 %343, i16 7, i16 %324
  br label %345

345:                                              ; preds = %342, %340
  %346 = phi i16 [ %341, %340 ], [ %344, %342 ]
  %347 = zext i16 %346 to i32
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %30, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.54, i64 0, i64 0), i32 %347) #13
  %348 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %40, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %30) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #13, !noalias !380
  br label %526

349:                                              ; preds = %903, %274, %896, %208, %215, %203
  %350 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 0
  %351 = load i32, i32* %350, align 4
  %352 = add i32 %351, -1
  %353 = icmp ult i32 %352, 127
  %354 = icmp eq i32 %351, 69
  %355 = and i1 %353, %354
  br i1 %355, label %356, label %526

356:                                              ; preds = %349
  %357 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 1
  %358 = load i32, i32* %357, align 4
  %359 = add i32 %358, -1
  %360 = icmp ult i32 %359, 127
  %361 = icmp eq i32 %358, 69
  %362 = and i1 %360, %361
  br i1 %362, label %924, label %526

363:                                              ; preds = %917, %910, %288, %281
  %364 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 0
  %365 = load i32, i32* %364, align 4
  %366 = add i32 %365, -1
  %367 = icmp ult i32 %366, 127
  %368 = icmp eq i32 %365, 69
  %369 = and i1 %367, %368
  br i1 %369, label %370, label %416

370:                                              ; preds = %363
  %371 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 1
  %372 = load i32, i32* %371, align 4
  %373 = add i32 %372, -1
  %374 = icmp ult i32 %373, 127
  %375 = icmp eq i32 %372, 69
  %376 = and i1 %374, %375
  br i1 %376, label %931, label %416

377:                                              ; preds = %938, %924
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #13, !noalias !380
  %378 = load i8, i8* %92, align 1
  %379 = zext i8 %378 to i32
  %380 = call zeroext i1 @_Z13FX_IsLeapYeari(i32 %78) #13
  %381 = and i1 %93, %380
  %382 = zext i1 %381 to i32
  %383 = add nsw i32 %97, %379
  %384 = add nsw i32 %383, %382
  %385 = trunc i32 %384 to i16
  %386 = urem i16 %385, 7
  %387 = zext i16 %386 to i32
  %388 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %73, align 8, !noalias !395
  %389 = icmp eq %"class.fxcrt::StringDataTemplate"* %388, null
  %390 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %388, i64 0, i32 3
  %391 = select i1 %389, [1 x i32]* @.str.15, [1 x i32]* %390
  br i1 %389, label %410, label %392

392:                                              ; preds = %377
  %393 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %388, i64 0, i32 1
  %394 = load i64, i64* %393, align 8, !noalias !398
  %395 = icmp eq i64 %394, 3
  br i1 %395, label %396, label %410

396:                                              ; preds = %392
  %397 = getelementptr inbounds [1 x i32], [1 x i32]* %391, i64 0, i64 0
  %398 = load i32, i32* %397, align 4
  %399 = add i32 %398, -1
  %400 = icmp ult i32 %399, 127
  %401 = icmp eq i32 %398, 69
  %402 = and i1 %400, %401
  br i1 %402, label %403, label %410

403:                                              ; preds = %396
  %404 = getelementptr inbounds [1 x i32], [1 x i32]* %391, i64 0, i64 1
  %405 = load i32, i32* %404, align 4
  %406 = add i32 %405, -1
  %407 = icmp ult i32 %406, 127
  %408 = icmp eq i32 %405, 69
  %409 = and i1 %407, %408
  br i1 %409, label %945, label %410

410:                                              ; preds = %945, %403, %396, %392, %377
  %411 = phi i1 [ false, %392 ], [ false, %377 ], [ false, %396 ], [ false, %403 ], [ %951, %945 ]
  %412 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)*** %84, align 8, !noalias !380
  %413 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)** %412, i64 10
  %414 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i32, i1)** %413, align 8
  call void %414(%"class.fxcrt::WideString"* nonnull sret %31, %class.LocaleIface* %5, i32 %387, i1 zeroext %411) #13
  %415 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %40, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %31) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %31) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #13, !noalias !380
  br label %526

416:                                              ; preds = %938, %931, %370, %363
  br i1 %171, label %417, label %444

417:                                              ; preds = %301, %306, %416
  %418 = phi i1 [ true, %416 ], [ false, %306 ], [ false, %301 ]
  %419 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 0
  %420 = load i32, i32* %419, align 4
  %421 = add i32 %420, -1
  %422 = icmp ult i32 %421, 127
  %423 = icmp eq i32 %420, 71
  %424 = and i1 %423, %422
  br i1 %424, label %425, label %444

425:                                              ; preds = %417
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #13, !noalias !380
  %426 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)*** %102, align 8, !noalias !380
  %427 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)** %426, i64 13
  %428 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)** %427, align 8
  call void %428(%"class.fxcrt::WideString"* nonnull sret %32, %class.LocaleIface* %5, i1 zeroext %101) #13
  %429 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %40, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %32) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %32) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #13, !noalias !380
  br label %526

430:                                              ; preds = %262, %255
  %431 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 0
  %432 = load i32, i32* %431, align 4
  %433 = add i32 %432, -1
  %434 = icmp ult i32 %433, 127
  %435 = icmp eq i32 %432, 89
  %436 = and i1 %434, %435
  br i1 %436, label %437, label %444

437:                                              ; preds = %430
  %438 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 1
  %439 = load i32, i32* %438, align 4
  %440 = add i32 %439, -1
  %441 = icmp ult i32 %440, 127
  %442 = icmp eq i32 %439, 89
  %443 = and i1 %441, %442
  br i1 %443, label %952, label %444

444:                                              ; preds = %437, %430, %416, %417
  %445 = phi i1 [ true, %437 ], [ true, %430 ], [ false, %417 ], [ false, %416 ]
  %446 = phi i1 [ false, %437 ], [ false, %430 ], [ %418, %417 ], [ true, %416 ]
  br i1 %446, label %447, label %461

447:                                              ; preds = %444
  %448 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 0
  %449 = load i32, i32* %448, align 4
  %450 = add i32 %449, -1
  %451 = icmp ult i32 %450, 127
  %452 = icmp eq i32 %449, 89
  %453 = and i1 %451, %452
  br i1 %453, label %454, label %461

454:                                              ; preds = %447
  %455 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 1
  %456 = load i32, i32* %455, align 4
  %457 = add i32 %456, -1
  %458 = icmp ult i32 %457, 127
  %459 = icmp eq i32 %456, 89
  %460 = and i1 %458, %459
  br i1 %460, label %954, label %461

461:                                              ; preds = %961, %954, %454, %447, %444
  br i1 %171, label %462, label %484

462:                                              ; preds = %461
  %463 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 0
  %464 = load i32, i32* %463, align 4
  %465 = add i32 %464, -1
  %466 = icmp ult i32 %465, 127
  %467 = icmp eq i32 %464, 119
  %468 = and i1 %467, %466
  br i1 %468, label %469, label %484

469:                                              ; preds = %462
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #13, !noalias !380
  %470 = load i8, i8* %92, align 1
  %471 = zext i8 %470 to i32
  %472 = call zeroext i1 @_Z13FX_IsLeapYeari(i32 %78) #13
  %473 = and i1 %93, %472
  %474 = zext i1 %473 to i32
  %475 = add i32 %121, %471
  %476 = add i32 %475, %474
  %477 = trunc i32 %476 to i16
  %478 = urem i16 %477, 7
  %479 = add nuw nsw i16 %478, %110
  %480 = icmp ugt i16 %479, 7
  %481 = zext i1 %480 to i32
  %482 = add nuw nsw i32 %481, %108
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %35, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.54, i64 0, i64 0), i32 %482) #13
  %483 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %40, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %35) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %35) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #13, !noalias !380
  br label %526

484:                                              ; preds = %462, %461
  br i1 %445, label %485, label %526

485:                                              ; preds = %484
  %486 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 0
  %487 = load i32, i32* %486, align 4
  %488 = add i32 %487, -1
  %489 = icmp ult i32 %488, 127
  %490 = icmp eq i32 %487, 87
  %491 = and i1 %489, %490
  br i1 %491, label %492, label %526

492:                                              ; preds = %485
  %493 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 1
  %494 = load i32, i32* %493, align 4
  %495 = add i32 %494, -1
  %496 = icmp ult i32 %495, 127
  %497 = icmp eq i32 %494, 87
  %498 = and i1 %496, %497
  br i1 %498, label %970, label %526

499:                                              ; preds = %508
  %500 = trunc i32 %510 to i16
  br label %514

501:                                              ; preds = %970, %508
  %502 = phi i32 [ %512, %508 ], [ 0, %970 ]
  %503 = phi i16 [ %511, %508 ], [ 1, %970 ]
  switch i16 %503, label %508 [
    i16 2, label %504
    i16 9, label %507
    i16 6, label %507
    i16 4, label %507
    i16 11, label %507
  ]

504:                                              ; preds = %501
  %505 = call zeroext i1 @_Z13FX_IsLeapYeari(i32 %78) #13
  %506 = select i1 %505, i32 29, i32 28
  br label %508

507:                                              ; preds = %501, %501, %501, %501
  br label %508

508:                                              ; preds = %507, %504, %501
  %509 = phi i32 [ %506, %504 ], [ 30, %507 ], [ 31, %501 ]
  %510 = add nuw nsw i32 %509, %502
  %511 = add nuw i16 %503, 1
  %512 = and i32 %510, 65535
  %513 = icmp eq i16 %511, %112
  br i1 %513, label %499, label %501

514:                                              ; preds = %499, %970
  %515 = phi i16 [ %500, %499 ], [ 0, %970 ]
  %516 = add i16 %515, %79
  %517 = call zeroext i1 @_Z13FX_IsLeapYeari(i32 %78) #13
  %518 = udiv i16 %516, 7
  %519 = urem i16 %516, 7
  %520 = add nuw nsw i16 %519, %115
  %521 = icmp ugt i16 %520, 7
  %522 = select i1 %521, i16 2, i16 1
  %523 = add nuw nsw i16 %522, %518
  %524 = zext i16 %523 to i32
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %36, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.55, i64 0, i64 0), i32 %524) #13
  %525 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %40, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %36) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %36) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #13, !noalias !380
  br label %526

526:                                              ; preds = %492, %924, %356, %485, %349, %179, %514, %484, %469, %968, %952, %425, %410, %345, %295, %269, %234, %194, %162
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %25) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #13, !noalias !380
  br label %130

527:                                              ; preds = %130, %52, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #13, !noalias !380
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  %528 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* nonnull %39, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %40) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %40) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #13
  br label %529

529:                                              ; preds = %6, %527, %48
  %530 = bitcast %"class.fxcrt::WideString"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %530) #13
  %531 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %531, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %41) #13
  %532 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %533 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %532, align 8
  %534 = icmp eq %"class.fxcrt::StringDataTemplate"* %533, null
  br i1 %534, label %829, label %535

535:                                              ; preds = %529
  %536 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %533, i64 0, i32 1
  %537 = load i64, i64* %536, align 8
  %538 = icmp eq i64 %537, 0
  br i1 %538, label %829, label %539

539:                                              ; preds = %535
  %540 = bitcast %"class.fxcrt::WideString"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %540) #13
  %541 = bitcast %"class.pdfium::span"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %541)
  %542 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %542, align 8, !alias.scope !399
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %42) #13
  %543 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %1, i64 0, i32 3
  %544 = load i8, i8* %543, align 2, !noalias !399
  %545 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %1, i64 0, i32 4
  %546 = load i8, i8* %545, align 1, !noalias !399
  %547 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %1, i64 0, i32 5
  %548 = load i8, i8* %547, align 4, !noalias !399
  %549 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %1, i64 0, i32 6
  %550 = load i16, i16* %549, align 2, !noalias !399
  %551 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %551) #13, !noalias !399
  store i64 0, i64* %9, align 8, !noalias !399
  %552 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %532, align 8, !noalias !402
  %553 = icmp eq %"class.fxcrt::StringDataTemplate"* %552, null
  %554 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %552, i64 0, i32 3, i64 0
  br i1 %553, label %558, label %555

555:                                              ; preds = %539
  %556 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %552, i64 0, i32 1
  %557 = load i64, i64* %556, align 8, !noalias !405
  br label %558

558:                                              ; preds = %555, %539
  %559 = phi i64 [ %557, %555 ], [ 0, %539 ]
  %560 = ptrtoint i32* %554 to i64
  %561 = select i1 %553, i64 0, i64 %560
  %562 = call { i8, i64 } @_ZNK5fxcrt10WideString4FindEwm(%"class.fxcrt::WideString"* %3, i32 signext 65, i64 0) #13
  %563 = extractvalue { i8, i64 } %562, 0
  %564 = icmp eq i8 %563, 0
  %565 = icmp ult i8 %544, 12
  %566 = or i1 %565, %564
  %567 = icmp eq i64 %559, 0
  br i1 %567, label %827, label %568

568:                                              ; preds = %558
  %569 = zext i8 %544 to i16
  %570 = inttoptr i64 %561 to i32*
  %571 = bitcast %"class.fxcrt::WideString"* %10 to i8*
  %572 = bitcast %"class.pdfium::span"* %11 to i64*
  %573 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %11, i64 0, i32 1
  %574 = bitcast %"class.fxcrt::WideString"* %12 to i8*
  %575 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %576 = bitcast %"class.fxcrt::WideString"* %13 to i8*
  %577 = bitcast %"class.fxcrt::WideString"* %14 to i8*
  %578 = bitcast %"class.fxcrt::WideString"* %15 to i8*
  %579 = bitcast %"class.fxcrt::WideString"* %16 to i8*
  %580 = bitcast %"class.fxcrt::WideString"* %17 to i8*
  %581 = zext i8 %546 to i32
  %582 = bitcast %"class.fxcrt::WideString"* %18 to i8*
  %583 = zext i8 %548 to i32
  %584 = bitcast %"class.fxcrt::WideString"* %19 to i8*
  %585 = zext i16 %550 to i32
  %586 = bitcast %"class.fxcrt::WideString"* %20 to i8*
  %587 = bitcast %class.LocaleIface* %5 to void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)***
  %588 = bitcast %class.LocaleIface* %5 to i32 (%class.LocaleIface*)***
  %589 = bitcast %"class.fxcrt::WideString"* %21 to i8*
  br label %590

590:                                              ; preds = %824, %568
  %591 = phi i64 [ 0, %568 ], [ %634, %824 ]
  %592 = phi i16 [ %569, %568 ], [ %825, %824 ]
  br label %593

593:                                              ; preds = %601, %590
  %594 = phi i64 [ %591, %590 ], [ %602, %601 ]
  %595 = getelementptr inbounds i32, i32* %570, i64 %594
  %596 = load i32, i32* %595, align 4
  switch i32 %596, label %604 [
    i32 39, label %597
    i32 122, label %608
    i32 107, label %608
    i32 104, label %608
    i32 90, label %608
    i32 83, label %608
    i32 77, label %608
    i32 75, label %608
    i32 72, label %608
    i32 70, label %608
    i32 65, label %608
    i32 0, label %608
  ]

597:                                              ; preds = %593
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %571) #13, !noalias !399
  store i64 %561, i64* %572, align 8, !noalias !399
  store i64 %559, i64* %573, align 8, !noalias !399
  call fastcc void @_ZN12_GLOBAL__N_114GetLiteralTextEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %10, %"class.pdfium::span"* nonnull %11, i64* nonnull %9) #13
  %598 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %42, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %10) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %571) #13, !noalias !399
  %599 = load i64, i64* %9, align 8, !noalias !399
  %600 = add i64 %599, 1
  store i64 %600, i64* %9, align 8, !noalias !399
  br label %601

601:                                              ; preds = %604, %597
  %602 = phi i64 [ %600, %597 ], [ %605, %604 ]
  %603 = icmp ult i64 %602, %559
  br i1 %603, label %593, label %827

604:                                              ; preds = %593
  %605 = add nuw i64 %594, 1
  store i64 %605, i64* %9, align 8, !noalias !399
  %606 = load i32, i32* %595, align 4
  %607 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %42, i32 signext %606) #13
  br label %601

608:                                              ; preds = %593, %593, %593, %593, %593, %593, %593, %593, %593, %593, %593
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %574) #13, !noalias !399
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %575, align 8, !noalias !399
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %12) #13
  call void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"* nonnull %12, i64 4) #13
  %609 = add nuw i64 %594, 1
  store i64 %609, i64* %9, align 8, !noalias !399
  %610 = load i32, i32* %595, align 4
  %611 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %12, i32 signext %610) #13
  %612 = icmp ult i64 %609, %559
  br i1 %612, label %613, label %633

613:                                              ; preds = %608, %628
  %614 = phi i64 [ %629, %628 ], [ %609, %608 ]
  %615 = getelementptr inbounds i32, i32* %570, i64 %614
  %616 = load i32, i32* %615, align 4
  %617 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %575, align 8, !noalias !399
  %618 = icmp eq %"class.fxcrt::StringDataTemplate"* %617, null
  br i1 %618, label %623, label %619

619:                                              ; preds = %613
  %620 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %617, i64 0, i32 1
  %621 = load i64, i64* %620, align 8
  %622 = icmp eq i64 %621, 0
  br i1 %622, label %623, label %624, !prof !2

623:                                              ; preds = %619, %613
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !47
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !48
  unreachable

624:                                              ; preds = %619
  %625 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %617, i64 0, i32 3, i64 0
  %626 = load i32, i32* %625, align 4
  %627 = icmp eq i32 %616, %626
  br i1 %627, label %628, label %633

628:                                              ; preds = %624
  %629 = add i64 %614, 1
  store i64 %629, i64* %9, align 8, !noalias !399
  %630 = load i32, i32* %615, align 4
  %631 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %12, i32 signext %630) #13
  %632 = icmp eq i64 %629, %559
  br i1 %632, label %633, label %613

633:                                              ; preds = %628, %624, %608
  %634 = phi i64 [ %609, %608 ], [ %559, %628 ], [ %614, %624 ]
  %635 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %575, align 8, !noalias !406
  %636 = icmp eq %"class.fxcrt::StringDataTemplate"* %635, null
  %637 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %635, i64 0, i32 3
  %638 = select i1 %636, [1 x i32]* @.str.15, [1 x i32]* %637
  br i1 %636, label %824, label %639

639:                                              ; preds = %633
  %640 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %635, i64 0, i32 1
  %641 = load i64, i64* %640, align 8, !noalias !409
  %642 = icmp eq i64 %641, 1
  br i1 %642, label %643, label %650

643:                                              ; preds = %639
  %644 = getelementptr inbounds [1 x i32], [1 x i32]* %638, i64 0, i64 0
  %645 = load i32, i32* %644, align 4
  %646 = add i32 %645, -1
  %647 = icmp ult i32 %646, 127
  %648 = icmp eq i32 %645, 104
  %649 = and i1 %648, %647
  br i1 %649, label %664, label %675

650:                                              ; preds = %639
  switch i64 %641, label %824 [
    i64 2, label %651
    i64 3, label %767
  ]

651:                                              ; preds = %650
  %652 = getelementptr inbounds [1 x i32], [1 x i32]* %638, i64 0, i64 0
  %653 = load i32, i32* %652, align 4
  %654 = add i32 %653, -1
  %655 = icmp ugt i32 %654, 126
  br i1 %655, label %824, label %663

656:                                              ; preds = %663
  %657 = getelementptr inbounds [1 x i32], [1 x i32]* %638, i64 0, i64 1
  %658 = load i32, i32* %657, align 4
  %659 = add i32 %658, -1
  %660 = icmp ult i32 %659, 127
  %661 = icmp eq i32 %658, 104
  %662 = and i1 %660, %661
  br i1 %662, label %664, label %824

663:                                              ; preds = %651
  switch i32 %653, label %824 [
    i32 104, label %656
    i32 75, label %679
    i32 107, label %699
    i32 72, label %720
    i32 77, label %738
    i32 83, label %755
  ]

664:                                              ; preds = %643, %656
  %665 = icmp ugt i16 %592, 12
  %666 = add i16 %592, -12
  %667 = select i1 %665, i16 %666, i16 %592
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %576) #13, !noalias !399
  %668 = icmp eq i16 %667, 0
  %669 = select i1 %668, i16 12, i16 %667
  %670 = zext i16 %669 to i32
  %671 = icmp eq i64 %641, 2
  %672 = select i1 %642, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.54, i64 0, i64 0), i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.56, i64 0, i64 0)
  %673 = select i1 %671, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.55, i64 0, i64 0), i32* %672
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %13, i32* %673, i32 %670) #13
  %674 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %42, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %13) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %576) #13, !noalias !399
  br label %824

675:                                              ; preds = %643
  %676 = icmp ult i32 %646, 127
  %677 = icmp eq i32 %645, 75
  %678 = and i1 %677, %676
  br i1 %678, label %686, label %694

679:                                              ; preds = %663
  %680 = getelementptr inbounds [1 x i32], [1 x i32]* %638, i64 0, i64 1
  %681 = load i32, i32* %680, align 4
  %682 = add i32 %681, -1
  %683 = icmp ult i32 %682, 127
  %684 = icmp eq i32 %681, 75
  %685 = and i1 %683, %684
  br i1 %685, label %686, label %824

686:                                              ; preds = %675, %679
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %577) #13, !noalias !399
  %687 = icmp eq i16 %592, 0
  %688 = select i1 %687, i16 24, i16 %592
  %689 = zext i16 %688 to i32
  %690 = icmp eq i64 %641, 2
  %691 = select i1 %642, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.54, i64 0, i64 0), i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.56, i64 0, i64 0)
  %692 = select i1 %690, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.55, i64 0, i64 0), i32* %691
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %14, i32* %692, i32 %689) #13
  %693 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %42, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %14) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %577) #13, !noalias !399
  br label %824

694:                                              ; preds = %675
  %695 = add i32 %645, -1
  %696 = icmp ult i32 %695, 127
  %697 = icmp eq i32 %645, 107
  %698 = and i1 %697, %696
  br i1 %698, label %706, label %715

699:                                              ; preds = %663
  %700 = getelementptr inbounds [1 x i32], [1 x i32]* %638, i64 0, i64 1
  %701 = load i32, i32* %700, align 4
  %702 = add i32 %701, -1
  %703 = icmp ult i32 %702, 127
  %704 = icmp eq i32 %701, 107
  %705 = and i1 %703, %704
  br i1 %705, label %706, label %824

706:                                              ; preds = %694, %699
  %707 = icmp ugt i16 %592, 12
  %708 = add i16 %592, -12
  %709 = select i1 %707, i16 %708, i16 %592
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %578) #13, !noalias !399
  %710 = zext i16 %709 to i32
  %711 = icmp eq i64 %641, 2
  %712 = select i1 %642, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.54, i64 0, i64 0), i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.56, i64 0, i64 0)
  %713 = select i1 %711, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.55, i64 0, i64 0), i32* %712
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %15, i32* %713, i32 %710) #13
  %714 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %42, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %15) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %578) #13, !noalias !399
  br label %824

715:                                              ; preds = %694
  %716 = add i32 %645, -1
  %717 = icmp ult i32 %716, 127
  %718 = icmp eq i32 %645, 72
  %719 = and i1 %718, %717
  br i1 %719, label %727, label %733

720:                                              ; preds = %663
  %721 = getelementptr inbounds [1 x i32], [1 x i32]* %638, i64 0, i64 1
  %722 = load i32, i32* %721, align 4
  %723 = add i32 %722, -1
  %724 = icmp ult i32 %723, 127
  %725 = icmp eq i32 %722, 72
  %726 = and i1 %724, %725
  br i1 %726, label %727, label %824

727:                                              ; preds = %715, %720
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %579) #13, !noalias !399
  %728 = zext i16 %592 to i32
  %729 = icmp eq i64 %641, 2
  %730 = select i1 %642, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.54, i64 0, i64 0), i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.56, i64 0, i64 0)
  %731 = select i1 %729, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.55, i64 0, i64 0), i32* %730
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %16, i32* %731, i32 %728) #13
  %732 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %42, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %16) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %579) #13, !noalias !399
  br label %824

733:                                              ; preds = %715
  %734 = add i32 %645, -1
  %735 = icmp ult i32 %734, 127
  %736 = icmp eq i32 %645, 77
  %737 = and i1 %736, %735
  br i1 %737, label %745, label %750

738:                                              ; preds = %663
  %739 = getelementptr inbounds [1 x i32], [1 x i32]* %638, i64 0, i64 1
  %740 = load i32, i32* %739, align 4
  %741 = add i32 %740, -1
  %742 = icmp ult i32 %741, 127
  %743 = icmp eq i32 %740, 77
  %744 = and i1 %742, %743
  br i1 %744, label %745, label %824

745:                                              ; preds = %733, %738
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %580) #13, !noalias !399
  %746 = icmp eq i64 %641, 2
  %747 = select i1 %642, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.54, i64 0, i64 0), i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.56, i64 0, i64 0)
  %748 = select i1 %746, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.55, i64 0, i64 0), i32* %747
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %17, i32* %748, i32 %581) #13
  %749 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %42, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %17) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %580) #13, !noalias !399
  br label %824

750:                                              ; preds = %733
  %751 = add i32 %645, -1
  %752 = icmp ult i32 %751, 127
  %753 = icmp eq i32 %645, 83
  %754 = and i1 %753, %752
  br i1 %754, label %762, label %781

755:                                              ; preds = %663
  %756 = getelementptr inbounds [1 x i32], [1 x i32]* %638, i64 0, i64 1
  %757 = load i32, i32* %756, align 4
  %758 = add i32 %757, -1
  %759 = icmp ult i32 %758, 127
  %760 = icmp eq i32 %757, 83
  %761 = and i1 %759, %760
  br i1 %761, label %762, label %824

762:                                              ; preds = %750, %755
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %582) #13, !noalias !399
  %763 = icmp eq i64 %641, 2
  %764 = select i1 %642, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.54, i64 0, i64 0), i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.56, i64 0, i64 0)
  %765 = select i1 %763, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.55, i64 0, i64 0), i32* %764
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %18, i32* %765, i32 %583) #13
  %766 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %42, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %18) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %582) #13, !noalias !399
  br label %824

767:                                              ; preds = %650
  %768 = getelementptr inbounds [1 x i32], [1 x i32]* %638, i64 0, i64 0
  %769 = load i32, i32* %768, align 4
  %770 = add i32 %769, -1
  %771 = icmp ult i32 %770, 127
  %772 = icmp eq i32 %769, 70
  %773 = and i1 %771, %772
  br i1 %773, label %774, label %824

774:                                              ; preds = %767
  %775 = getelementptr inbounds [1 x i32], [1 x i32]* %638, i64 0, i64 1
  %776 = load i32, i32* %775, align 4
  %777 = add i32 %776, -1
  %778 = icmp ult i32 %777, 127
  %779 = icmp eq i32 %776, 70
  %780 = and i1 %778, %779
  br i1 %780, label %887, label %824

781:                                              ; preds = %750
  %782 = getelementptr inbounds [1 x i32], [1 x i32]* %638, i64 0, i64 0
  %783 = load i32, i32* %782, align 4
  %784 = add i32 %783, -1
  %785 = icmp ult i32 %784, 127
  %786 = icmp eq i32 %783, 65
  %787 = and i1 %786, %785
  br i1 %787, label %788, label %793

788:                                              ; preds = %781
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %586) #13, !noalias !399
  %789 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)*** %587, align 8, !noalias !399
  %790 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)** %789, i64 11
  %791 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*, i1)** %790, align 8
  call void %791(%"class.fxcrt::WideString"* nonnull sret %20, %class.LocaleIface* %5, i1 zeroext %566) #13
  %792 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %42, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %20) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %586) #13, !noalias !399
  br label %824

793:                                              ; preds = %781
  %794 = icmp ugt i32 %784, 126
  br i1 %794, label %824, label %795

795:                                              ; preds = %793
  %796 = tail call i32** @__ctype_tolower_loc() #14
  %797 = load i32*, i32** %796, align 8
  %798 = sext i32 %783 to i64
  %799 = getelementptr inbounds i32, i32* %797, i64 %798
  %800 = load i32, i32* %799, align 4
  %801 = getelementptr inbounds i32, i32* %797, i64 122
  %802 = load i32, i32* %801, align 4
  %803 = icmp eq i32 %800, %802
  br i1 %803, label %804, label %824

804:                                              ; preds = %795
  %805 = icmp eq i32 %783, 90
  br i1 %805, label %806, label %808

806:                                              ; preds = %804
  %807 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEPKw(%"class.fxcrt::WideString"* nonnull %42, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.59, i64 0, i64 0)) #13
  br label %808

808:                                              ; preds = %806, %804
  %809 = load i32 (%class.LocaleIface*)**, i32 (%class.LocaleIface*)*** %588, align 8, !noalias !399
  %810 = getelementptr inbounds i32 (%class.LocaleIface*)*, i32 (%class.LocaleIface*)** %809, i64 12
  %811 = load i32 (%class.LocaleIface*)*, i32 (%class.LocaleIface*)** %810, align 8
  %812 = call i32 %811(%class.LocaleIface* %5) #13
  %813 = icmp eq i32 %812, 0
  br i1 %813, label %824, label %814

814:                                              ; preds = %808
  %815 = icmp slt i32 %812, 0
  %816 = select i1 %815, [2 x i32]* @.str.60, [2 x i32]* @.str.61
  %817 = getelementptr inbounds [2 x i32], [2 x i32]* %816, i64 0, i64 0
  %818 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEPKw(%"class.fxcrt::WideString"* nonnull %42, i32* nonnull %817) #13
  %819 = sub nsw i32 0, %812
  %820 = select i1 %815, i32 %819, i32 %812
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %589) #13, !noalias !399
  %821 = udiv i32 %820, 60
  %822 = urem i32 %820, 60
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %21, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @.str.62, i64 0, i64 0), i32 %821, i32 %822) #13
  %823 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %42, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %21) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %589) #13, !noalias !399
  br label %824

824:                                              ; preds = %887, %774, %755, %738, %720, %699, %679, %656, %767, %650, %663, %651, %814, %808, %795, %793, %788, %894, %762, %745, %727, %706, %686, %664, %633
  %825 = phi i16 [ %667, %664 ], [ %592, %686 ], [ %709, %706 ], [ %592, %727 ], [ %592, %745 ], [ %592, %762 ], [ %592, %894 ], [ %592, %788 ], [ %592, %808 ], [ %592, %814 ], [ %592, %795 ], [ %592, %793 ], [ %592, %633 ], [ %592, %767 ], [ %592, %774 ], [ %592, %887 ], [ %592, %755 ], [ %592, %738 ], [ %592, %720 ], [ %592, %699 ], [ %592, %679 ], [ %592, %656 ], [ %592, %651 ], [ %592, %663 ], [ %592, %650 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %574) #13, !noalias !399
  %826 = icmp ult i64 %634, %559
  br i1 %826, label %590, label %827

827:                                              ; preds = %824, %601, %558
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %551) #13, !noalias !399
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %541)
  %828 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* nonnull %41, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %42) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %540) #13
  br label %829

829:                                              ; preds = %529, %827, %535
  br i1 %4, label %830, label %857

830:                                              ; preds = %829
  %831 = bitcast %"class.fxcrt::StringViewTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %831)
  %832 = bitcast %"class.fxcrt::StringViewTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %832)
  %833 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %44, align 8, !noalias !410
  %834 = icmp eq %"class.fxcrt::StringDataTemplate"* %833, null
  %835 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %833, i64 0, i32 3
  %836 = select i1 %834, [1 x i32]* @.str.15, [1 x i32]* %835
  %837 = getelementptr inbounds [1 x i32], [1 x i32]* %836, i64 0, i64 0
  br i1 %834, label %841, label %838

838:                                              ; preds = %830
  %839 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %833, i64 0, i32 1
  %840 = load i64, i64* %839, align 8, !noalias !415
  br label %841

841:                                              ; preds = %838, %830
  %842 = phi i64 [ %840, %838 ], [ 0, %830 ]
  %843 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  store i32* %837, i32** %843, align 8, !alias.scope !415, !noalias !416
  %844 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %7, i64 0, i32 0, i32 1
  store i64 %842, i64* %844, align 8, !alias.scope !415, !noalias !416
  %845 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %531, align 8, !noalias !417
  %846 = icmp eq %"class.fxcrt::StringDataTemplate"* %845, null
  %847 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %845, i64 0, i32 3
  %848 = select i1 %846, [1 x i32]* @.str.15, [1 x i32]* %847
  %849 = getelementptr inbounds [1 x i32], [1 x i32]* %848, i64 0, i64 0
  br i1 %846, label %853, label %850

850:                                              ; preds = %841
  %851 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %845, i64 0, i32 1
  %852 = load i64, i64* %851, align 8, !noalias !420
  br label %853

853:                                              ; preds = %841, %850
  %854 = phi i64 [ %852, %850 ], [ 0, %841 ]
  %855 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %8, i64 0, i32 0, i32 0, i32 0
  store i32* %849, i32** %855, align 8, !alias.scope !420, !noalias !416
  %856 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %8, i64 0, i32 0, i32 1
  store i64 %854, i64* %856, align 8, !alias.scope !420, !noalias !416
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* %0, %"class.fxcrt::StringViewTemplate"* nonnull %7, %"class.fxcrt::StringViewTemplate"* nonnull %8) #13
  br label %884

857:                                              ; preds = %829
  %858 = bitcast %"class.fxcrt::StringViewTemplate"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %858)
  %859 = bitcast %"class.fxcrt::StringViewTemplate"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %859)
  %860 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %531, align 8, !noalias !421
  %861 = icmp eq %"class.fxcrt::StringDataTemplate"* %860, null
  %862 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %860, i64 0, i32 3
  %863 = select i1 %861, [1 x i32]* @.str.15, [1 x i32]* %862
  %864 = getelementptr inbounds [1 x i32], [1 x i32]* %863, i64 0, i64 0
  br i1 %861, label %868, label %865

865:                                              ; preds = %857
  %866 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %860, i64 0, i32 1
  %867 = load i64, i64* %866, align 8, !noalias !426
  br label %868

868:                                              ; preds = %865, %857
  %869 = phi i64 [ %867, %865 ], [ 0, %857 ]
  %870 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %37, i64 0, i32 0, i32 0, i32 0
  store i32* %864, i32** %870, align 8, !alias.scope !426, !noalias !427
  %871 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %37, i64 0, i32 0, i32 1
  store i64 %869, i64* %871, align 8, !alias.scope !426, !noalias !427
  %872 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %44, align 8, !noalias !428
  %873 = icmp eq %"class.fxcrt::StringDataTemplate"* %872, null
  %874 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %872, i64 0, i32 3
  %875 = select i1 %873, [1 x i32]* @.str.15, [1 x i32]* %874
  %876 = getelementptr inbounds [1 x i32], [1 x i32]* %875, i64 0, i64 0
  br i1 %873, label %880, label %877

877:                                              ; preds = %868
  %878 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %872, i64 0, i32 1
  %879 = load i64, i64* %878, align 8, !noalias !431
  br label %880

880:                                              ; preds = %868, %877
  %881 = phi i64 [ %879, %877 ], [ 0, %868 ]
  %882 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %38, i64 0, i32 0, i32 0, i32 0
  store i32* %876, i32** %882, align 8, !alias.scope !431, !noalias !427
  %883 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %38, i64 0, i32 0, i32 1
  store i64 %881, i64* %883, align 8, !alias.scope !431, !noalias !427
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* %0, %"class.fxcrt::StringViewTemplate"* nonnull %37, %"class.fxcrt::StringViewTemplate"* nonnull %38) #13
  br label %884

884:                                              ; preds = %880, %853
  %885 = phi i8* [ %858, %880 ], [ %831, %853 ]
  %886 = phi i8* [ %859, %880 ], [ %832, %853 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %885)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %886)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %41) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %530) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #13
  ret void

887:                                              ; preds = %774
  %888 = getelementptr inbounds [1 x i32], [1 x i32]* %638, i64 0, i64 2
  %889 = load i32, i32* %888, align 4
  %890 = add i32 %889, -1
  %891 = icmp ult i32 %890, 127
  %892 = icmp eq i32 %889, 70
  %893 = and i1 %891, %892
  br i1 %893, label %894, label %824

894:                                              ; preds = %887
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %584) #13, !noalias !399
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %19, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.56, i64 0, i64 0), i32 %585) #13
  %895 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %42, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %19) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %584) #13, !noalias !399
  br label %824

896:                                              ; preds = %208
  %897 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 2
  %898 = load i32, i32* %897, align 4
  %899 = add i32 %898, -1
  %900 = icmp ult i32 %899, 127
  %901 = icmp eq i32 %898, 74
  %902 = and i1 %900, %901
  br i1 %902, label %216, label %349

903:                                              ; preds = %274
  %904 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 2
  %905 = load i32, i32* %904, align 4
  %906 = add i32 %905, -1
  %907 = icmp ult i32 %906, 127
  %908 = icmp eq i32 %905, 77
  %909 = and i1 %907, %908
  br i1 %909, label %295, label %349

910:                                              ; preds = %288
  %911 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 2
  %912 = load i32, i32* %911, align 4
  %913 = add i32 %912, -1
  %914 = icmp ult i32 %913, 127
  %915 = icmp eq i32 %912, 77
  %916 = and i1 %914, %915
  br i1 %916, label %917, label %363

917:                                              ; preds = %910
  %918 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 3
  %919 = load i32, i32* %918, align 4
  %920 = add i32 %919, -1
  %921 = icmp ult i32 %920, 127
  %922 = icmp eq i32 %919, 77
  %923 = and i1 %921, %922
  br i1 %923, label %295, label %363

924:                                              ; preds = %356
  %925 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 2
  %926 = load i32, i32* %925, align 4
  %927 = add i32 %926, -1
  %928 = icmp ult i32 %927, 127
  %929 = icmp eq i32 %926, 69
  %930 = and i1 %928, %929
  br i1 %930, label %377, label %526

931:                                              ; preds = %370
  %932 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 2
  %933 = load i32, i32* %932, align 4
  %934 = add i32 %933, -1
  %935 = icmp ult i32 %934, 127
  %936 = icmp eq i32 %933, 69
  %937 = and i1 %935, %936
  br i1 %937, label %938, label %416

938:                                              ; preds = %931
  %939 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 3
  %940 = load i32, i32* %939, align 4
  %941 = add i32 %940, -1
  %942 = icmp ult i32 %941, 127
  %943 = icmp eq i32 %940, 69
  %944 = and i1 %942, %943
  br i1 %944, label %377, label %416

945:                                              ; preds = %403
  %946 = getelementptr inbounds [1 x i32], [1 x i32]* %391, i64 0, i64 2
  %947 = load i32, i32* %946, align 4
  %948 = add i32 %947, -1
  %949 = icmp ult i32 %948, 127
  %950 = icmp eq i32 %947, 69
  %951 = and i1 %949, %950
  br label %410

952:                                              ; preds = %437
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #13, !noalias !380
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %33, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.55, i64 0, i64 0), i32 %104) #13
  %953 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %40, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %33) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %33) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #13, !noalias !380
  br label %526

954:                                              ; preds = %454
  %955 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 2
  %956 = load i32, i32* %955, align 4
  %957 = add i32 %956, -1
  %958 = icmp ult i32 %957, 127
  %959 = icmp eq i32 %956, 89
  %960 = and i1 %958, %959
  br i1 %960, label %961, label %461

961:                                              ; preds = %954
  %962 = getelementptr inbounds [1 x i32], [1 x i32]* %167, i64 0, i64 3
  %963 = load i32, i32* %962, align 4
  %964 = add i32 %963, -1
  %965 = icmp ult i32 %964, 127
  %966 = icmp eq i32 %963, 89
  %967 = and i1 %965, %966
  br i1 %967, label %968, label %461

968:                                              ; preds = %961
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #13, !noalias !380
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %34, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.54, i64 0, i64 0), i32 %57) #13
  %969 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %40, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %34) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %34) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #13, !noalias !380
  br label %526

970:                                              ; preds = %492
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #13, !noalias !380
  br i1 %77, label %501, label %514
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK21CFGAS_StringFormatter10FormatZeroEPN5fxcrt10WideStringE(%class.CFGAS_StringFormatter*, %"class.fxcrt::WideString"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::WideString", align 8
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.fxcrt::WideString", align 8
  %7 = alloca %"class.pdfium::span", align 8
  %8 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %47, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.fxcrt::WideString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %13, align 8
  %14 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.5, i64 0, i64 0), i32** %14, align 8
  %15 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  store i64 4, i64* %15, align 8
  call void @_ZNK21CFGAS_StringFormatter13GetTextFormatEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::WideString"* nonnull sret %3, %class.CFGAS_StringFormatter* %0, %"class.fxcrt::StringViewTemplate"* nonnull %4)
  %16 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %13, align 8, !noalias !432
  %17 = icmp eq %"class.fxcrt::StringDataTemplate"* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %11
  %19 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  store i64 0, i64* %5, align 8
  br label %31

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %16, i64 0, i32 3, i64 0
  %22 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %16, i64 0, i32 1
  %23 = load i64, i64* %22, align 8, !noalias !432
  %24 = ptrtoint i32* %21 to i64
  %25 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  store i64 0, i64* %5, align 8
  %26 = icmp eq i64 %23, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = bitcast %"class.fxcrt::WideString"* %6 to i8*
  %29 = bitcast %"class.pdfium::span"* %7 to i64*
  %30 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %7, i64 0, i32 1
  br label %33

31:                                               ; preds = %43, %18, %20
  %32 = phi i8* [ %19, %18 ], [ %25, %20 ], [ %25, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  br label %47

33:                                               ; preds = %27, %43
  %34 = phi i64 [ 0, %27 ], [ %45, %43 ]
  %35 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %16, i64 0, i32 3, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 39
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  store i64 %24, i64* %29, align 8
  store i64 %23, i64* %30, align 8
  call fastcc void @_ZN12_GLOBAL__N_114GetLiteralTextEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %6, %"class.pdfium::span"* nonnull %7, i64* nonnull %5)
  %39 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %1, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %6) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  %40 = load i64, i64* %5, align 8
  br label %43

41:                                               ; preds = %33
  %42 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %1, i32 signext %36) #13
  br label %43

43:                                               ; preds = %41, %38
  %44 = phi i64 [ %34, %41 ], [ %40, %38 ]
  %45 = add i64 %44, 1
  store i64 %45, i64* %5, align 8
  %46 = icmp ult i64 %45, %23
  br i1 %46, label %33, label %31

47:                                               ; preds = %2, %31
  %48 = phi i1 [ true, %31 ], [ false, %2 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK21CFGAS_StringFormatter10FormatNullEPN5fxcrt10WideStringE(%class.CFGAS_StringFormatter*, %"class.fxcrt::WideString"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::WideString", align 8
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.fxcrt::WideString", align 8
  %7 = alloca %"class.pdfium::span", align 8
  %8 = getelementptr inbounds %class.CFGAS_StringFormatter, %class.CFGAS_StringFormatter* %0, i64 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %47, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.fxcrt::WideString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %13, align 8
  %14 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.6, i64 0, i64 0), i32** %14, align 8
  %15 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  store i64 4, i64* %15, align 8
  call void @_ZNK21CFGAS_StringFormatter13GetTextFormatEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::WideString"* nonnull sret %3, %class.CFGAS_StringFormatter* %0, %"class.fxcrt::StringViewTemplate"* nonnull %4)
  %16 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %13, align 8, !noalias !435
  %17 = icmp eq %"class.fxcrt::StringDataTemplate"* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %11
  %19 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  store i64 0, i64* %5, align 8
  br label %31

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %16, i64 0, i32 3, i64 0
  %22 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %16, i64 0, i32 1
  %23 = load i64, i64* %22, align 8, !noalias !435
  %24 = ptrtoint i32* %21 to i64
  %25 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  store i64 0, i64* %5, align 8
  %26 = icmp eq i64 %23, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = bitcast %"class.fxcrt::WideString"* %6 to i8*
  %29 = bitcast %"class.pdfium::span"* %7 to i64*
  %30 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %7, i64 0, i32 1
  br label %33

31:                                               ; preds = %43, %18, %20
  %32 = phi i8* [ %19, %18 ], [ %25, %20 ], [ %25, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  br label %47

33:                                               ; preds = %27, %43
  %34 = phi i64 [ 0, %27 ], [ %45, %43 ]
  %35 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %16, i64 0, i32 3, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 39
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  store i64 %24, i64* %29, align 8
  store i64 %23, i64* %30, align 8
  call fastcc void @_ZN12_GLOBAL__N_114GetLiteralTextEN6pdfium4spanIKwEEPm(%"class.fxcrt::WideString"* nonnull sret %6, %"class.pdfium::span"* nonnull %7, i64* nonnull %5)
  %39 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %1, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %6) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  %40 = load i64, i64* %5, align 8
  br label %43

41:                                               ; preds = %33
  %42 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %1, i32 signext %36) #13
  br label %43

43:                                               ; preds = %41, %38
  %44 = phi i64 [ %34, %41 ], [ %40, %38 ]
  %45 = add i64 %44, 1
  store i64 %45, i64* %5, align 8
  %46 = icmp ult i64 %45, %23
  br i1 %46, label %33, label %31

47:                                               ; preds = %2, %31
  %48 = phi i1 [ true, %31 ], [ false, %2 ]
  ret i1 %48
}

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #6

declare zeroext i1 @_ZNK5fxcrt10WideStringeqENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"*, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #2

declare void @_ZN5fxcrt18StringDataTemplateIwE7ReleaseEv(%"class.fxcrt::StringDataTemplate"*) local_unnamed_addr #2

declare signext i8 @u_isalpha_69(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @iswdigit(i32) local_unnamed_addr #3

declare void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"*, %"class.fxcrt::StringViewTemplate"*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #2

declare i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"*, i64, i32 signext) local_unnamed_addr #2

declare void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i32** @__ctype_tolower_loc() local_unnamed_addr #6

declare zeroext i1 @_ZNK5fxcrt10WideStringeqEPKw(%"class.fxcrt::WideString"*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #5

declare zeroext i1 @_Z13FX_IsLeapYeari(i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5fxcrt10WideStringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPKwmEEEvDpOT_(%"class.std::__1::vector"*, i32** dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.fxcrt::WideString"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 2305843009213693951
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #16
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.fxcrt::WideString"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 3
  %21 = icmp ult i64 %20, 1152921504606846975
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 2
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 2305843009213693951
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #16
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 2305843009213693951, %15 ]
  %32 = shl i64 %31, 3
  %33 = tail call i8* @_Znwm(i64 %32) #17
  %34 = bitcast i8* %33 to %"class.fxcrt::WideString"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"class.fxcrt::WideString"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %37, i64 %10
  %39 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %37, i64 %36
  %40 = ptrtoint %"class.fxcrt::WideString"* %39 to i64
  %41 = load i32*, i32** %1, align 8
  %42 = load i64, i64* %2, align 8
  tail call void @_ZN5fxcrt10WideStringC1EPKwm(%"class.fxcrt::WideString"* %38, i32* %41, i64 %42) #13
  %43 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %38, i64 1
  %44 = ptrtoint %"class.fxcrt::WideString"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %46 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %45, align 8
  %47 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %4, align 8
  %48 = icmp eq %"class.fxcrt::WideString"* %47, %46
  br i1 %48, label %49, label %51

49:                                               ; preds = %35
  %50 = ptrtoint %"class.fxcrt::WideString"* %46 to i64
  br label %60

51:                                               ; preds = %35, %51
  %52 = phi %"class.fxcrt::WideString"* [ %54, %51 ], [ %38, %35 ]
  %53 = phi %"class.fxcrt::WideString"* [ %55, %51 ], [ %47, %35 ]
  %54 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %52, i64 -1
  %55 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %53, i64 -1
  tail call void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"* %54, %"class.fxcrt::WideString"* dereferenceable(8) %55) #13
  %56 = icmp eq %"class.fxcrt::WideString"* %55, %46
  br i1 %56, label %57, label %51

57:                                               ; preds = %51
  %58 = load i64, i64* %7, align 8
  %59 = load %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"** %4, align 8
  br label %60

60:                                               ; preds = %49, %57
  %61 = phi %"class.fxcrt::WideString"* [ %46, %49 ], [ %59, %57 ]
  %62 = phi %"class.fxcrt::WideString"* [ %38, %49 ], [ %54, %57 ]
  %63 = phi i64 [ %50, %49 ], [ %58, %57 ]
  %64 = ptrtoint %"class.fxcrt::WideString"* %62 to i64
  store i64 %64, i64* %7, align 8
  store i64 %44, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %65 = inttoptr i64 %63 to %"class.fxcrt::WideString"*
  %66 = icmp eq %"class.fxcrt::WideString"* %61, %65
  br i1 %66, label %71, label %67

67:                                               ; preds = %60, %67
  %68 = phi %"class.fxcrt::WideString"* [ %69, %67 ], [ %61, %60 ]
  %69 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %68, i64 -1
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %69) #13
  %70 = icmp eq %"class.fxcrt::WideString"* %69, %65
  br i1 %70, label %71, label %67

71:                                               ; preds = %67, %60
  %72 = icmp eq i64 %63, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %71
  %74 = inttoptr i64 %63 to i8*
  tail call void @_ZdlPv(i8* %74) #17
  br label %75

75:                                               ; preds = %71, %73
  ret void
}

declare void @_ZN5fxcrt10WideStringC1EPKwm(%"class.fxcrt::WideString"*, i32*, i64) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nofree nounwind
declare double @pow(double, double) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { nounwind readnone }
attributes #15 = { nounwind readonly }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK6pdfium4spanIKwE7subspanEmm: argument 0"}
!5 = distinct !{!5, !"_ZNK6pdfium4spanIKwE7subspanEmm"}
!6 = !{i32 -2143777614}
!7 = !{i32 -2143777593}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5fxcrt10WideString4spanEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!13 = distinct !{!13, !"_ZNK5fxcrt10WideString4spanEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!16 = distinct !{!16, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!17 = !{!"branch_weights", i32 2000, i32 1}
!18 = !{i32 -2143776488}
!19 = !{i32 -2143776467}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!22 = distinct !{!22, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!26 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!27 = !{i32 -2143827813}
!28 = !{i32 -2143827792}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!31 = distinct !{!31, !"_ZNK5fxcrt10WideString4spanEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!34 = distinct !{!34, !"_ZNK5fxcrt10WideString4spanEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!37 = distinct !{!37, !"_ZNK5fxcrt10WideString4spanEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!40 = distinct !{!40, !"_ZNK5fxcrt10WideString4spanEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!43 = distinct !{!43, !"_ZNK5fxcrt10WideString4spanEv"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!46 = distinct !{!46, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!47 = !{i32 -2143763001}
!48 = !{i32 -2143762980}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN5fxcrtplEwRKNS_10WideStringE: argument 0"}
!51 = distinct !{!51, !"_ZN5fxcrtplEwRKNS_10WideStringE"}
!52 = !{!53, !50}
!53 = distinct !{!53, !54, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!54 = distinct !{!54, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!55 = !{!53}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN5fxcrtplEwRKNS_10WideStringE: argument 0"}
!58 = distinct !{!58, !"_ZN5fxcrtplEwRKNS_10WideStringE"}
!59 = !{!60, !57}
!60 = distinct !{!60, !61, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!61 = distinct !{!61, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!62 = !{!60}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!65 = distinct !{!65, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!68 = distinct !{!68, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!71 = distinct !{!71, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!74 = distinct !{!74, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!75 = !{!76, !78}
!76 = distinct !{!76, !77, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!77 = distinct !{!77, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!78 = distinct !{!78, !79, !"_ZN5fxcrtplERKNS_10WideStringES2_: argument 0"}
!79 = distinct !{!79, !"_ZN5fxcrtplERKNS_10WideStringES2_"}
!80 = !{!76}
!81 = !{!78}
!82 = !{!83, !78}
!83 = distinct !{!83, !84, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!84 = distinct !{!84, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!85 = !{!83}
!86 = !{!87, !89}
!87 = distinct !{!87, !88, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!88 = distinct !{!88, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!89 = distinct !{!89, !90, !"_ZN5fxcrtplERKNS_10WideStringES2_: argument 0"}
!90 = distinct !{!90, !"_ZN5fxcrtplERKNS_10WideStringES2_"}
!91 = !{!87}
!92 = !{!89}
!93 = !{!94, !89}
!94 = distinct !{!94, !95, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!95 = distinct !{!95, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!96 = !{!94}
!97 = !{!98, !100}
!98 = distinct !{!98, !99, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!99 = distinct !{!99, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!100 = distinct !{!100, !101, !"_ZN5fxcrtplERKNS_10WideStringES2_: argument 0"}
!101 = distinct !{!101, !"_ZN5fxcrtplERKNS_10WideStringES2_"}
!102 = !{!98}
!103 = !{!100}
!104 = !{!105, !100}
!105 = distinct !{!105, !106, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!106 = distinct !{!106, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!107 = !{!105}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!110 = distinct !{!110, !"_ZNK5fxcrt10WideString4spanEv"}
!111 = !{!112}
!112 = distinct !{!112, !113, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!113 = distinct !{!113, !"_ZNK5fxcrt10WideString4spanEv"}
!114 = !{!115}
!115 = distinct !{!115, !116, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!116 = distinct !{!116, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!117 = !{!118}
!118 = distinct !{!118, !119, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!119 = distinct !{!119, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!120 = !{!121}
!121 = distinct !{!121, !122, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!122 = distinct !{!122, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!123 = !{!124}
!124 = distinct !{!124, !125, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!125 = distinct !{!125, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!126 = !{!127}
!127 = distinct !{!127, !128, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!128 = distinct !{!128, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!129 = !{!130}
!130 = distinct !{!130, !131, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!131 = distinct !{!131, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!132 = !{!133}
!133 = distinct !{!133, !134, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!134 = distinct !{!134, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!135 = !{!136}
!136 = distinct !{!136, !137, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!137 = distinct !{!137, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!138 = !{!139}
!139 = distinct !{!139, !140, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!140 = distinct !{!140, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!141 = !{!142}
!142 = distinct !{!142, !143, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!143 = distinct !{!143, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!144 = !{!145}
!145 = distinct !{!145, !146, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!146 = distinct !{!146, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!147 = !{!148}
!148 = distinct !{!148, !149, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!149 = distinct !{!149, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!150 = !{!151}
!151 = distinct !{!151, !152, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!152 = distinct !{!152, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!153 = !{!154}
!154 = distinct !{!154, !155, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!155 = distinct !{!155, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!156 = !{!157}
!157 = distinct !{!157, !158, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!158 = distinct !{!158, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!159 = !{!160}
!160 = distinct !{!160, !161, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!161 = distinct !{!161, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!162 = !{!163}
!163 = distinct !{!163, !164, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!164 = distinct !{!164, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!165 = !{!166}
!166 = distinct !{!166, !167, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!167 = distinct !{!167, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!168 = !{!169}
!169 = distinct !{!169, !170, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!170 = distinct !{!170, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!171 = !{!172}
!172 = distinct !{!172, !173, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!173 = distinct !{!173, !"_ZNK5fxcrt10WideString4spanEv"}
!174 = !{!175}
!175 = distinct !{!175, !176, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!176 = distinct !{!176, !"_ZNK5fxcrt10WideString4spanEv"}
!177 = !{!178}
!178 = distinct !{!178, !179, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!179 = distinct !{!179, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!180 = !{!181}
!181 = distinct !{!181, !182, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!182 = distinct !{!182, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!183 = !{!184}
!184 = distinct !{!184, !185, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!185 = distinct !{!185, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!186 = !{!187}
!187 = distinct !{!187, !188, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!188 = distinct !{!188, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!189 = !{!190}
!190 = distinct !{!190, !191, !"_ZNK6pdfium4spanIKwE7subspanEmm: argument 0"}
!191 = distinct !{!191, !"_ZNK6pdfium4spanIKwE7subspanEmm"}
!192 = !{!193}
!193 = distinct !{!193, !194, !"_ZNK6pdfium4spanIKwE7subspanEmm: argument 0"}
!194 = distinct !{!194, !"_ZNK6pdfium4spanIKwE7subspanEmm"}
!195 = !{!196}
!196 = distinct !{!196, !197, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!197 = distinct !{!197, !"_ZNK5fxcrt10WideString4spanEv"}
!198 = !{!199}
!199 = distinct !{!199, !200, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!200 = distinct !{!200, !"_ZNK5fxcrt10WideString4spanEv"}
!201 = !{!202}
!202 = distinct !{!202, !203, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!203 = distinct !{!203, !"_ZNK5fxcrt10WideString4spanEv"}
!204 = !{!205}
!205 = distinct !{!205, !206, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!206 = distinct !{!206, !"_ZNK5fxcrt10WideString4spanEv"}
!207 = !{!208}
!208 = distinct !{!208, !209, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!209 = distinct !{!209, !"_ZNK5fxcrt10WideString4spanEv"}
!210 = !{!211}
!211 = distinct !{!211, !212, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!212 = distinct !{!212, !"_ZNK5fxcrt10WideString4spanEv"}
!213 = !{!214}
!214 = distinct !{!214, !215, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!215 = distinct !{!215, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!216 = !{!217}
!217 = distinct !{!217, !218, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!218 = distinct !{!218, !"_ZNK5fxcrt10WideString4spanEv"}
!219 = !{!220}
!220 = distinct !{!220, !221, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!221 = distinct !{!221, !"_ZNK5fxcrt10WideString4spanEv"}
!222 = !{!223, !225}
!223 = distinct !{!223, !224, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!224 = distinct !{!224, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!225 = distinct !{!225, !226, !"_ZN5fxcrtplERKNS_10WideStringES2_: argument 0"}
!226 = distinct !{!226, !"_ZN5fxcrtplERKNS_10WideStringES2_"}
!227 = !{!223}
!228 = !{!225}
!229 = !{!230, !225}
!230 = distinct !{!230, !231, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!231 = distinct !{!231, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!232 = !{!230}
!233 = !{!234, !236}
!234 = distinct !{!234, !235, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!235 = distinct !{!235, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!236 = distinct !{!236, !237, !"_ZN5fxcrtplERKNS_10WideStringES2_: argument 0"}
!237 = distinct !{!237, !"_ZN5fxcrtplERKNS_10WideStringES2_"}
!238 = !{!234}
!239 = !{!236}
!240 = !{!241, !236}
!241 = distinct !{!241, !242, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!242 = distinct !{!242, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!243 = !{!241}
!244 = !{!245, !247}
!245 = distinct !{!245, !246, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!246 = distinct !{!246, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!247 = distinct !{!247, !248, !"_ZN5fxcrtplERKNS_10WideStringES2_: argument 0"}
!248 = distinct !{!248, !"_ZN5fxcrtplERKNS_10WideStringES2_"}
!249 = !{!245}
!250 = !{!247}
!251 = !{!252, !247}
!252 = distinct !{!252, !253, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!253 = distinct !{!253, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!254 = !{!252}
!255 = !{!256, !258}
!256 = distinct !{!256, !257, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!257 = distinct !{!257, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!258 = distinct !{!258, !259, !"_ZN5fxcrtplERKNS_10WideStringES2_: argument 0"}
!259 = distinct !{!259, !"_ZN5fxcrtplERKNS_10WideStringES2_"}
!260 = !{!256}
!261 = !{!258}
!262 = !{!263, !258}
!263 = distinct !{!263, !264, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!264 = distinct !{!264, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!265 = !{!263}
!266 = !{!267}
!267 = distinct !{!267, !268, !"_ZN5fxcrtplEPKwRKNS_10WideStringE: argument 0"}
!268 = distinct !{!268, !"_ZN5fxcrtplEPKwRKNS_10WideStringE"}
!269 = !{!270, !267}
!270 = distinct !{!270, !271, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!271 = distinct !{!271, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!272 = !{!270}
!273 = !{!274}
!274 = distinct !{!274, !275, !"_ZN5fxcrtplEPKwRKNS_10WideStringE: argument 0"}
!275 = distinct !{!275, !"_ZN5fxcrtplEPKwRKNS_10WideStringE"}
!276 = !{!277, !274}
!277 = distinct !{!277, !278, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!278 = distinct !{!278, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!279 = !{!277}
!280 = !{!281}
!281 = distinct !{!281, !282, !"_ZN5fxcrtplEPKwRKNS_10WideStringE: argument 0"}
!282 = distinct !{!282, !"_ZN5fxcrtplEPKwRKNS_10WideStringE"}
!283 = !{!284, !281}
!284 = distinct !{!284, !285, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!285 = distinct !{!285, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!286 = !{!284}
!287 = !{!288}
!288 = distinct !{!288, !289, !"_ZN5fxcrtplEPKwRKNS_10WideStringE: argument 0"}
!289 = distinct !{!289, !"_ZN5fxcrtplEPKwRKNS_10WideStringE"}
!290 = !{!291, !288}
!291 = distinct !{!291, !292, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!292 = distinct !{!292, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!293 = !{!291}
!294 = !{!295, !297}
!295 = distinct !{!295, !296, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!296 = distinct !{!296, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!297 = distinct !{!297, !298, !"_ZN5fxcrtplERKNS_10WideStringES2_: argument 0"}
!298 = distinct !{!298, !"_ZN5fxcrtplERKNS_10WideStringES2_"}
!299 = !{!295}
!300 = !{!297}
!301 = !{!302, !297}
!302 = distinct !{!302, !303, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!303 = distinct !{!303, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!304 = !{!302}
!305 = !{!306, !308}
!306 = distinct !{!306, !307, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!307 = distinct !{!307, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!308 = distinct !{!308, !309, !"_ZN5fxcrtplERKNS_10WideStringES2_: argument 0"}
!309 = distinct !{!309, !"_ZN5fxcrtplERKNS_10WideStringES2_"}
!310 = !{!306}
!311 = !{!308}
!312 = !{!313, !308}
!313 = distinct !{!313, !314, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!314 = distinct !{!314, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!315 = !{!313}
!316 = !{!317, !319}
!317 = distinct !{!317, !318, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!318 = distinct !{!318, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!319 = distinct !{!319, !320, !"_ZN5fxcrtplERKNS_10WideStringES2_: argument 0"}
!320 = distinct !{!320, !"_ZN5fxcrtplERKNS_10WideStringES2_"}
!321 = !{!317}
!322 = !{!319}
!323 = !{!324, !319}
!324 = distinct !{!324, !325, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!325 = distinct !{!325, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!326 = !{!324}
!327 = !{!328, !330}
!328 = distinct !{!328, !329, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!329 = distinct !{!329, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!330 = distinct !{!330, !331, !"_ZN5fxcrtplERKNS_10WideStringES2_: argument 0"}
!331 = distinct !{!331, !"_ZN5fxcrtplERKNS_10WideStringES2_"}
!332 = !{!328}
!333 = !{!330}
!334 = !{!335, !330}
!335 = distinct !{!335, !336, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!336 = distinct !{!336, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!337 = !{!335}
!338 = !{!339, !341}
!339 = distinct !{!339, !340, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!340 = distinct !{!340, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!341 = distinct !{!341, !342, !"_ZN5fxcrtplERKNS_10WideStringES2_: argument 0"}
!342 = distinct !{!342, !"_ZN5fxcrtplERKNS_10WideStringES2_"}
!343 = !{!339}
!344 = !{!341}
!345 = !{!346, !341}
!346 = distinct !{!346, !347, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!347 = distinct !{!347, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!348 = !{!346}
!349 = !{!350, !352}
!350 = distinct !{!350, !351, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!351 = distinct !{!351, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!352 = distinct !{!352, !353, !"_ZN5fxcrtplERKNS_10WideStringES2_: argument 0"}
!353 = distinct !{!353, !"_ZN5fxcrtplERKNS_10WideStringES2_"}
!354 = !{!350}
!355 = !{!352}
!356 = !{!357, !352}
!357 = distinct !{!357, !358, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!358 = distinct !{!358, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!359 = !{!357}
!360 = !{!361}
!361 = distinct !{!361, !362, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!362 = distinct !{!362, !"_ZNK5fxcrt10WideString4spanEv"}
!363 = !{!364}
!364 = distinct !{!364, !365, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!365 = distinct !{!365, !"_ZNK5fxcrt10WideString4spanEv"}
!366 = !{!367}
!367 = distinct !{!367, !368, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!368 = distinct !{!368, !"_ZNK5fxcrt10WideString4spanEv"}
!369 = !{!370}
!370 = distinct !{!370, !371, !"_ZNK6pdfium4spanIKwE5firstEm: argument 0"}
!371 = distinct !{!371, !"_ZNK6pdfium4spanIKwE5firstEm"}
!372 = !{i32 -2143778692}
!373 = !{i32 -2143778671}
!374 = !{!375}
!375 = distinct !{!375, !376, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!376 = distinct !{!376, !"_ZNK5fxcrt10WideString4spanEv"}
!377 = !{!378}
!378 = distinct !{!378, !379, !"_ZNK6pdfium4spanIKwE7subspanEmm: argument 0"}
!379 = distinct !{!379, !"_ZNK6pdfium4spanIKwE7subspanEmm"}
!380 = !{!381}
!381 = distinct !{!381, !382, !"_ZN12_GLOBAL__N_110DateFormatERKN5fxcrt10WideStringEP11LocaleIfaceRK12CFX_DateTime: argument 0"}
!382 = distinct !{!382, !"_ZN12_GLOBAL__N_110DateFormatERKN5fxcrt10WideStringEP11LocaleIfaceRK12CFX_DateTime"}
!383 = !{!384, !381}
!384 = distinct !{!384, !385, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!385 = distinct !{!385, !"_ZNK5fxcrt10WideString4spanEv"}
!386 = !{!384}
!387 = !{!388, !381}
!388 = distinct !{!388, !389, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!389 = distinct !{!389, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!390 = !{!388}
!391 = !{!392, !381}
!392 = distinct !{!392, !393, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!393 = distinct !{!393, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!394 = !{!392}
!395 = !{!396, !381}
!396 = distinct !{!396, !397, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!397 = distinct !{!397, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!398 = !{!396}
!399 = !{!400}
!400 = distinct !{!400, !401, !"_ZN12_GLOBAL__N_110TimeFormatERKN5fxcrt10WideStringEP11LocaleIfaceRK12CFX_DateTime: argument 0"}
!401 = distinct !{!401, !"_ZN12_GLOBAL__N_110TimeFormatERKN5fxcrt10WideStringEP11LocaleIfaceRK12CFX_DateTime"}
!402 = !{!403, !400}
!403 = distinct !{!403, !404, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!404 = distinct !{!404, !"_ZNK5fxcrt10WideString4spanEv"}
!405 = !{!403}
!406 = !{!407, !400}
!407 = distinct !{!407, !408, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!408 = distinct !{!408, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!409 = !{!407}
!410 = !{!411, !413}
!411 = distinct !{!411, !412, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!412 = distinct !{!412, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!413 = distinct !{!413, !414, !"_ZN5fxcrtplERKNS_10WideStringES2_: argument 0"}
!414 = distinct !{!414, !"_ZN5fxcrtplERKNS_10WideStringES2_"}
!415 = !{!411}
!416 = !{!413}
!417 = !{!418, !413}
!418 = distinct !{!418, !419, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!419 = distinct !{!419, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!420 = !{!418}
!421 = !{!422, !424}
!422 = distinct !{!422, !423, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!423 = distinct !{!423, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!424 = distinct !{!424, !425, !"_ZN5fxcrtplERKNS_10WideStringES2_: argument 0"}
!425 = distinct !{!425, !"_ZN5fxcrtplERKNS_10WideStringES2_"}
!426 = !{!422}
!427 = !{!424}
!428 = !{!429, !424}
!429 = distinct !{!429, !430, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!430 = distinct !{!430, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!431 = !{!429}
!432 = !{!433}
!433 = distinct !{!433, !434, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!434 = distinct !{!434, !"_ZNK5fxcrt10WideString4spanEv"}
!435 = !{!436}
!436 = distinct !{!436, !437, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!437 = distinct !{!437, !"_ZNK5fxcrt10WideString4spanEv"}
