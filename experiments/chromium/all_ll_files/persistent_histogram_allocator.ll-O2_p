; ModuleID = '../../base/metrics/persistent_histogram_allocator.cc'
source_filename = "../../base/metrics/persistent_histogram_allocator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::PersistentSparseHistogramDataManager" = type { %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator::Iterator", %"class.std::__1::map", %"class.base::Lock" }
%"class.base::PersistentMemoryAllocator::Iterator" = type { %"class.base::PersistentMemoryAllocator"*, %"struct.std::__1::atomic.0", %"struct.std::__1::atomic.0" }
%"struct.std::__1::atomic.0" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::PersistentMemoryAllocator" = type { i32 (...)**, i8*, i32, i32, i32, i64, i8, %"struct.std::__1::atomic", %"class.base::HistogramBase"*, %"class.base::HistogramBase"*, %"class.base::HistogramBase"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.0", [4 x i8] }>
%"class.base::PersistentSampleMapRecords" = type { %"class.base::PersistentSparseHistogramDataManager"*, i64, i8*, i64, %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i32* }
%"class.base::PersistentHistogramAllocator::Iterator" = type { %"class.base::PersistentHistogramAllocator"*, %"class.base::PersistentMemoryAllocator::Iterator" }
%"class.base::PersistentHistogramAllocator" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.18", %"class.base::PersistentSparseHistogramDataManager", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.base::PersistentMemoryAllocator"* }
%"class.base::GlobalHistogramAllocator" = type { %"class.base::PersistentHistogramAllocator.base", %"class.base::PersistentHistogramAllocator::Iterator", %"class.base::FilePath" }
%"class.base::PersistentHistogramAllocator.base" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.18", %"class.base::PersistentSparseHistogramDataManager", i32 }>
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.base::PersistentSampleMapRecords"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.base::PersistentHistogramAllocator::PersistentHistogramData" = type { i32, i32, i32, i32, i32, i32, i32, i32, %"struct.base::HistogramSamples::Metadata", %"struct.base::HistogramSamples::Metadata", [8 x i8] }
%"struct.base::HistogramSamples::Metadata" = type { i64, i64, i32, %"union.base::HistogramSamples::AtomicSingleSample" }
%"union.base::HistogramSamples::AtomicSingleSample" = type { i32 }
%"class.base::DelayedPersistentAllocation" = type { %"class.base::PersistentMemoryAllocator"*, i32, i32, i32, i8, %"struct.std::__1::atomic.0"* }
%"class.base::BucketRanges" = type { %"class.std::__1::vector.35", i32, %"struct.std::__1::atomic.42" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { i32*, i32*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i32* }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::HistogramSamples" = type { i32 (...)**, %"struct.base::HistogramSamples::Metadata"* }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%"class.base::PickleIterator" = type { i8*, i64, i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::LocalPersistentMemoryAllocator" = type { %"class.base::PersistentMemoryAllocator" }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"struct.base::MemoryMappedFile::Region" = type { i64, i64 }
%"class.base::MemoryMappedFile" = type { %"class.base::File", i8*, i64 }
%"class.base::FilePersistentMemoryAllocator" = type { %"class.base::PersistentMemoryAllocator", %"class.std::__1::unique_ptr.77" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.base::MemoryMappedFile"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.base::BasicStringPiece"* }
%"class.base::WritableSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::WritableSharedPersistentMemoryAllocator" = type { %"class.base::PersistentMemoryAllocator", %"class.base::WritableSharedMemoryMapping" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertINS_11__wrap_iterIPjEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS9_E9referenceEEE5valueES7_E4typeENS5_IPKjEES9_S9_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN4base26PersistentSampleMapRecordsENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@.str = private unnamed_addr constant [21 x i8] c"PersistentHistograms\00", align 1
@_ZN4base28kPersistentHistogramsFeatureE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0), i32 0 }, align 8
@_ZTVN4base28PersistentHistogramAllocatorE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::PersistentHistogramAllocator"*)* @_ZN4base28PersistentHistogramAllocatorD2Ev to i8*), i8* bitcast (void (%"class.base::PersistentHistogramAllocator"*)* @_ZN4base28PersistentHistogramAllocatorD0Ev to i8*)] }, align 8
@_ZTVN4base24GlobalHistogramAllocatorE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::GlobalHistogramAllocator"*)* @_ZN4base24GlobalHistogramAllocatorD2Ev to i8*), i8* bitcast (void (%"class.base::GlobalHistogramAllocator"*)* @_ZN4base24GlobalHistogramAllocatorD0Ev to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [7 x i8] c"-spare\00", align 1
@_ZN4base25PersistentMemoryAllocator14kFileExtensionE = external constant [0 x i8], align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"-active\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"%.*s-%lX-%lX\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"-.\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c".tmp\00", align 1
@_ZN4base12_GLOBAL__N_121g_histogram_allocatorE = internal global i64 0, align 8
@.str.6 = private unnamed_addr constant [53 x i8] c"../../base/metrics/persistent_histogram_allocator.cc\00", align 1
@.str.7 = private unnamed_addr constant [48 x i8] c"!subtle::NoBarrier_Load(&g_histogram_allocator)\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"Could not write \22\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"\22 persistent histograms\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c" to file: \00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN4base36PersistentSparseHistogramDataManagerC1EPNS_25PersistentMemoryAllocatorE = hidden unnamed_addr alias void (%"class.base::PersistentSparseHistogramDataManager"*, %"class.base::PersistentMemoryAllocator"*), void (%"class.base::PersistentSparseHistogramDataManager"*, %"class.base::PersistentMemoryAllocator"*)* @_ZN4base36PersistentSparseHistogramDataManagerC2EPNS_25PersistentMemoryAllocatorE
@_ZN4base36PersistentSparseHistogramDataManagerD1Ev = hidden unnamed_addr alias void (%"class.base::PersistentSparseHistogramDataManager"*), void (%"class.base::PersistentSparseHistogramDataManager"*)* @_ZN4base36PersistentSparseHistogramDataManagerD2Ev
@_ZN4base26PersistentSampleMapRecordsC1EPNS_36PersistentSparseHistogramDataManagerEm = hidden unnamed_addr alias void (%"class.base::PersistentSampleMapRecords"*, %"class.base::PersistentSparseHistogramDataManager"*, i64), void (%"class.base::PersistentSampleMapRecords"*, %"class.base::PersistentSparseHistogramDataManager"*, i64)* @_ZN4base26PersistentSampleMapRecordsC2EPNS_36PersistentSparseHistogramDataManagerEm
@_ZN4base26PersistentSampleMapRecordsD1Ev = hidden unnamed_addr alias void (%"class.base::PersistentSampleMapRecords"*), void (%"class.base::PersistentSampleMapRecords"*)* @_ZN4base26PersistentSampleMapRecordsD2Ev
@_ZN4base28PersistentHistogramAllocator8IteratorC1EPS0_ = hidden unnamed_addr alias void (%"class.base::PersistentHistogramAllocator::Iterator"*, %"class.base::PersistentHistogramAllocator"*), void (%"class.base::PersistentHistogramAllocator::Iterator"*, %"class.base::PersistentHistogramAllocator"*)* @_ZN4base28PersistentHistogramAllocator8IteratorC2EPS0_
@_ZN4base28PersistentHistogramAllocatorC1ENSt3__110unique_ptrINS_25PersistentMemoryAllocatorENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"class.base::PersistentHistogramAllocator"*, %"class.base::PersistentMemoryAllocator"*), void (%"class.base::PersistentHistogramAllocator"*, %"class.base::PersistentMemoryAllocator"*)* @_ZN4base28PersistentHistogramAllocatorC2ENSt3__110unique_ptrINS_25PersistentMemoryAllocatorENS1_14default_deleteIS3_EEEE
@_ZN4base28PersistentHistogramAllocatorD1Ev = hidden unnamed_addr alias void (%"class.base::PersistentHistogramAllocator"*), void (%"class.base::PersistentHistogramAllocator"*)* @_ZN4base28PersistentHistogramAllocatorD2Ev
@_ZN4base24GlobalHistogramAllocatorD1Ev = hidden unnamed_addr alias void (%"class.base::GlobalHistogramAllocator"*), void (%"class.base::GlobalHistogramAllocator"*)* @_ZN4base24GlobalHistogramAllocatorD2Ev
@_ZN4base24GlobalHistogramAllocatorC1ENSt3__110unique_ptrINS_25PersistentMemoryAllocatorENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"class.base::GlobalHistogramAllocator"*, %"class.base::PersistentMemoryAllocator"*), void (%"class.base::GlobalHistogramAllocator"*, %"class.base::PersistentMemoryAllocator"*)* @_ZN4base24GlobalHistogramAllocatorC2ENSt3__110unique_ptrINS_25PersistentMemoryAllocatorENS1_14default_deleteIS3_EEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base36PersistentSparseHistogramDataManagerC2EPNS_25PersistentMemoryAllocatorE(%"class.base::PersistentSparseHistogramDataManager"*, %"class.base::PersistentMemoryAllocator"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::PersistentSparseHistogramDataManager", %"class.base::PersistentSparseHistogramDataManager"* %0, i64 0, i32 0
  store %"class.base::PersistentMemoryAllocator"* %1, %"class.base::PersistentMemoryAllocator"** %3, align 8
  %4 = getelementptr inbounds %"class.base::PersistentSparseHistogramDataManager", %"class.base::PersistentSparseHistogramDataManager"* %0, i64 0, i32 1
  tail call void @_ZN4base25PersistentMemoryAllocator8IteratorC1EPKS0_(%"class.base::PersistentMemoryAllocator::Iterator"* %4, %"class.base::PersistentMemoryAllocator"* %1) #12
  %5 = getelementptr inbounds %"class.base::PersistentSparseHistogramDataManager", %"class.base::PersistentSparseHistogramDataManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.base::PersistentSparseHistogramDataManager", %"class.base::PersistentSparseHistogramDataManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.base::PersistentSparseHistogramDataManager", %"class.base::PersistentSparseHistogramDataManager"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.base::PersistentSparseHistogramDataManager", %"class.base::PersistentSparseHistogramDataManager"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %9) #12
  ret void
}

declare void @_ZN4base25PersistentMemoryAllocator8IteratorC1EPKS0_(%"class.base::PersistentMemoryAllocator::Iterator"*, %"class.base::PersistentMemoryAllocator"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base36PersistentSparseHistogramDataManagerD2Ev(%"class.base::PersistentSparseHistogramDataManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::PersistentSparseHistogramDataManager", %"class.base::PersistentSparseHistogramDataManager"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %2) #12
  %3 = getelementptr inbounds %"class.base::PersistentSparseHistogramDataManager", %"class.base::PersistentSparseHistogramDataManager"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.base::PersistentSparseHistogramDataManager", %"class.base::PersistentSparseHistogramDataManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN4base26PersistentSampleMapRecordsENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::PersistentSampleMapRecords"* @_ZN4base36PersistentSparseHistogramDataManager19UseSampleMapRecordsEmPKv(%"class.base::PersistentSparseHistogramDataManager"*, i64, i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::PersistentSparseHistogramDataManager", %"class.base::PersistentSparseHistogramDataManager"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #12
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #12
  br label %10

10:                                               ; preds = %3, %8
  %11 = tail call %"class.base::PersistentSampleMapRecords"* @_ZN4base36PersistentSparseHistogramDataManager30GetSampleMapRecordsWhileLockedEm(%"class.base::PersistentSparseHistogramDataManager"* %0, i64 %1)
  %12 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %11, i64 0, i32 2
  store i8* %2, i8** %12, align 8
  %13 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %11, i64 0, i32 3
  store i64 0, i64* %13, align 8
  %14 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #12
  ret %"class.base::PersistentSampleMapRecords"* %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::PersistentSampleMapRecords"* @_ZN4base36PersistentSparseHistogramDataManager30GetSampleMapRecordsWhileLockedEm(%"class.base::PersistentSparseHistogramDataManager"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::PersistentSparseHistogramDataManager", %"class.base::PersistentSparseHistogramDataManager"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::PersistentSparseHistogramDataManager", %"class.base::PersistentSparseHistogramDataManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %60, label %8

8:                                                ; preds = %2, %8
  %9 = phi %"class.std::__1::__tree_end_node"* [ %19, %8 ], [ %4, %2 ]
  %10 = phi %"class.std::__1::__tree_node"* [ %20, %8 ], [ %6, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %12, %1
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::__tree_node_base"** %14 to %"class.std::__1::__tree_node"**
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_node"* %10 to %"class.std::__1::__tree_node"**
  %18 = select i1 %13, %"class.std::__1::__tree_node"** %15, %"class.std::__1::__tree_node"** %17
  %19 = select i1 %13, %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"* %16
  %20 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  %21 = icmp eq %"class.std::__1::__tree_node"* %20, null
  br i1 %21, label %22, label %8

22:                                               ; preds = %8
  %23 = icmp eq %"class.std::__1::__tree_end_node"* %19, %4
  br i1 %23, label %32, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 4
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp ugt i64 %27, %1
  br i1 %28, label %32, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 5
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.base::PersistentSampleMapRecords"**
  br label %129

32:                                               ; preds = %22, %24
  %33 = getelementptr inbounds %"class.base::PersistentSparseHistogramDataManager", %"class.base::PersistentSparseHistogramDataManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %56, %32
  %35 = phi %"class.std::__1::__tree_node"* [ %59, %56 ], [ %6, %32 ]
  %36 = phi %"class.std::__1::__tree_node_base"** [ %58, %56 ], [ %33, %32 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 1, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp ugt i64 %38, %1
  br i1 %39, label %40, label %46

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, null
  br i1 %43, label %44, label %56

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 0, i32 0
  br label %62

46:                                               ; preds = %34
  %47 = icmp ult i64 %38, %1
  br i1 %47, label %48, label %54

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 0, i32 1
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 0, i32 0
  br label %62

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 0, i32 0
  br label %62

56:                                               ; preds = %48, %40
  %57 = phi %"class.std::__1::__tree_node_base"* [ %42, %40 ], [ %50, %48 ]
  %58 = phi %"class.std::__1::__tree_node_base"** [ %41, %40 ], [ %49, %48 ]
  %59 = bitcast %"class.std::__1::__tree_node_base"* %57 to %"class.std::__1::__tree_node"*
  br label %34

60:                                               ; preds = %2
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %62

62:                                               ; preds = %60, %54, %52, %44
  %63 = phi %"class.std::__1::__tree_end_node"* [ %4, %60 ], [ %45, %44 ], [ %53, %52 ], [ %55, %54 ]
  %64 = phi %"class.std::__1::__tree_node_base"** [ %61, %60 ], [ %41, %44 ], [ %49, %52 ], [ %36, %54 ]
  %65 = bitcast %"class.std::__1::__tree_node_base"** %64 to %"class.std::__1::__tree_node"**
  %66 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node"* %66, null
  br i1 %67, label %68, label %95

68:                                               ; preds = %62
  %69 = tail call i8* @_Znwm(i64 48) #13, !noalias !3
  %70 = getelementptr inbounds i8, i8* %69, i64 32
  %71 = bitcast i8* %70 to i64*
  store i64 %1, i64* %71, align 8, !noalias !3
  %72 = getelementptr inbounds i8, i8* %69, i64 40
  %73 = bitcast i8* %72 to i64*
  store i64 0, i64* %73, align 8, !noalias !3
  %74 = bitcast i8* %69 to %"class.std::__1::__tree_node"*
  %75 = bitcast i8* %69 to %"class.std::__1::__tree_node_base"*
  %76 = getelementptr inbounds i8, i8* %69, i64 16
  %77 = bitcast i8* %76 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %63, %"class.std::__1::__tree_end_node"** %77, align 8
  %78 = bitcast %"class.std::__1::__tree_node_base"** %64 to i8**
  store i8* %69, i8** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 0
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, null
  br i1 %83, label %88, label %84

84:                                               ; preds = %68
  %85 = ptrtoint %"class.std::__1::__tree_node_base"* %82 to i64
  %86 = bitcast %"class.std::__1::map"* %3 to i64*
  store i64 %85, i64* %86, align 8
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  br label %88

88:                                               ; preds = %84, %68
  %89 = phi %"class.std::__1::__tree_node_base"* [ %75, %68 ], [ %87, %84 ]
  %90 = getelementptr inbounds %"class.base::PersistentSparseHistogramDataManager", %"class.base::PersistentSparseHistogramDataManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %91, %"class.std::__1::__tree_node_base"* %89) #12
  %92 = getelementptr inbounds %"class.base::PersistentSparseHistogramDataManager", %"class.base::PersistentSparseHistogramDataManager"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, 1
  store i64 %94, i64* %92, align 8
  br label %95

95:                                               ; preds = %62, %88
  %96 = phi %"class.std::__1::__tree_node"* [ %74, %88 ], [ %66, %62 ]
  %97 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %96, i64 0, i32 1, i32 0, i32 1
  %98 = ptrtoint %"class.base::PersistentSparseHistogramDataManager"* %0 to i64
  %99 = tail call i8* @_Znwm(i64 80) #13
  %100 = bitcast i8* %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = getelementptr inbounds i8, i8* %99, i64 8
  %102 = bitcast i8* %101 to i64*
  store i64 %1, i64* %102, align 8
  %103 = getelementptr inbounds i8, i8* %99, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 64, i1 false) #12
  %104 = ptrtoint i8* %99 to i64
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %97, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.base::PersistentSampleMapRecords"*, %"class.base::PersistentSampleMapRecords"** %105, align 8
  %107 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %104, i64* %107, align 8
  %108 = icmp eq %"class.base::PersistentSampleMapRecords"* %106, null
  br i1 %108, label %129, label %109

109:                                              ; preds = %95
  %110 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %106, i64 0, i32 5, i32 0, i32 0
  %111 = load i32*, i32** %110, align 8
  %112 = icmp eq i32* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %109
  %114 = ptrtoint i32* %111 to i64
  %115 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %106, i64 0, i32 5, i32 0, i32 1
  %116 = bitcast i32** %115 to i64*
  store i64 %114, i64* %116, align 8
  %117 = bitcast i32* %111 to i8*
  tail call void @_ZdlPv(i8* %117) #13
  br label %118

118:                                              ; preds = %113, %109
  %119 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %106, i64 0, i32 4, i32 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %127, label %122

122:                                              ; preds = %118
  %123 = ptrtoint i32* %120 to i64
  %124 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %106, i64 0, i32 4, i32 0, i32 1
  %125 = bitcast i32** %124 to i64*
  store i64 %123, i64* %125, align 8
  %126 = bitcast i32* %120 to i8*
  tail call void @_ZdlPv(i8* %126) #13
  br label %127

127:                                              ; preds = %122, %118
  %128 = bitcast %"class.base::PersistentSampleMapRecords"* %106 to i8*
  tail call void @_ZdlPv(i8* %128) #13
  br label %129

129:                                              ; preds = %95, %127, %29
  %130 = phi %"class.base::PersistentSampleMapRecords"** [ %31, %29 ], [ %105, %127 ], [ %105, %95 ]
  %131 = load %"class.base::PersistentSampleMapRecords"*, %"class.base::PersistentSampleMapRecords"** %130, align 8
  ret %"class.base::PersistentSampleMapRecords"* %131
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden %"class.base::PersistentSampleMapRecords"* @_ZN4base26PersistentSampleMapRecords7AcquireEPKv(%"class.base::PersistentSampleMapRecords"* returned, i8*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %0, i64 0, i32 2
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %0, i64 0, i32 3
  store i64 0, i64* %4, align 8
  ret %"class.base::PersistentSampleMapRecords"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base36PersistentSparseHistogramDataManager11LoadRecordsEPNS_26PersistentSampleMapRecordsE(%"class.base::PersistentSparseHistogramDataManager"*, %"class.base::PersistentSampleMapRecords"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.base::PersistentSparseHistogramDataManager", %"class.base::PersistentSparseHistogramDataManager"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #12
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #12
  br label %10

10:                                               ; preds = %2, %8
  %11 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %1, i64 0, i32 5
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %1, i64 0, i32 5, i32 0, i32 1
  %15 = load i32*, i32** %14, align 8
  %16 = icmp eq i32* %13, %15
  br i1 %16, label %68, label %17

17:                                               ; preds = %10
  %18 = ptrtoint i32* %13 to i64
  %19 = ptrtoint i32* %15 to i64
  %20 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %1, i64 0, i32 4
  %21 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %1, i64 0, i32 4, i32 0, i32 1
  %22 = bitcast i32** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = ashr exact i64 %26, 2
  %28 = bitcast i32** %14 to i64*
  %29 = bitcast %"class.std::__1::vector"* %11 to i64*
  %30 = sub i64 %19, %18
  %31 = ashr exact i64 %30, 2
  %32 = add nsw i64 %31, %27
  %33 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %1, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast i32** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %35, %25
  %37 = ashr exact i64 %36, 2
  %38 = icmp ult i64 %37, %32
  %39 = inttoptr i64 %23 to i32*
  br i1 %38, label %40, label %62

40:                                               ; preds = %17
  %41 = icmp ugt i64 %32, 4611686018427387903
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @abort() #14
  unreachable

43:                                               ; preds = %40
  %44 = shl i64 %32, 2
  %45 = tail call i8* @_Znwm(i64 %44) #13
  %46 = bitcast i8* %45 to i32*
  %47 = getelementptr inbounds i32, i32* %46, i64 %27
  %48 = ptrtoint i32* %47 to i64
  %49 = getelementptr inbounds i32, i32* %46, i64 %32
  %50 = ptrtoint i32* %49 to i64
  %51 = ptrtoint i8* %45 to i64
  %52 = icmp sgt i64 %26, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %43
  %54 = inttoptr i64 %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %45, i8* align 4 %54, i64 %26, i1 false) #12
  br label %55

55:                                               ; preds = %53, %43
  store i64 %51, i64* %24, align 8
  store i64 %48, i64* %22, align 8
  store i64 %50, i64* %34, align 8
  %56 = icmp eq i64 %25, 0
  br i1 %56, label %62, label %57

57:                                               ; preds = %55
  %58 = inttoptr i64 %25 to i8*
  tail call void @_ZdlPv(i8* %58) #13
  %59 = load i32*, i32** %21, align 8
  %60 = load i32*, i32** %12, align 8
  %61 = load i32*, i32** %14, align 8
  br label %62

62:                                               ; preds = %17, %55, %57
  %63 = phi i32* [ %15, %17 ], [ %15, %55 ], [ %61, %57 ]
  %64 = phi i32* [ %13, %17 ], [ %13, %55 ], [ %60, %57 ]
  %65 = phi i32* [ %39, %17 ], [ %47, %55 ], [ %59, %57 ]
  %66 = tail call i32* @_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertINS_11__wrap_iterIPjEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS9_E9referenceEEE5valueES7_E4typeENS5_IPKjEES9_S9_(%"class.std::__1::vector"* %20, i32* %65, i32* %64, i32* %63)
  %67 = load i64, i64* %29, align 8
  store i64 %67, i64* %28, align 8
  br label %68

68:                                               ; preds = %10, %62
  %69 = phi i8 [ 1, %62 ], [ 0, %10 ]
  %70 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %1, i64 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = bitcast i64* %3 to i8*
  %73 = getelementptr inbounds %"class.base::PersistentSparseHistogramDataManager", %"class.base::PersistentSparseHistogramDataManager"* %0, i64 0, i32 1
  %74 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %1, i64 0, i32 4
  %75 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %1, i64 0, i32 4, i32 0, i32 1
  %76 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %1, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %77 = bitcast i32** %75 to i64*
  %78 = bitcast %"class.std::__1::vector"* %74 to i64*
  %79 = bitcast i32** %76 to i64*
  %80 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %74, i64 0, i32 0, i32 0
  br label %81

81:                                               ; preds = %68, %221
  %82 = phi i8 [ %69, %68 ], [ %222, %221 ]
  %83 = phi i32 [ 0, %68 ], [ %223, %221 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #12
  store i64 -6148914691236517206, i64* %3, align 8
  %84 = call i32 @_ZN4base19PersistentSampleMap23GetNextPersistentRecordERNS_25PersistentMemoryAllocator8IteratorEPm(%"class.base::PersistentMemoryAllocator::Iterator"* dereferenceable(16) %73, i64* nonnull %3) #12
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %218, label %86

86:                                               ; preds = %81
  %87 = load i64, i64* %3, align 8
  %88 = icmp eq i64 %87, %71
  br i1 %88, label %89, label %149

89:                                               ; preds = %86
  %90 = load i32*, i32** %75, align 8
  %91 = load i32*, i32** %76, align 8
  %92 = icmp eq i32* %90, %91
  %93 = ptrtoint i32* %91 to i64
  br i1 %92, label %97, label %94

94:                                               ; preds = %89
  store i32 %84, i32* %90, align 4
  %95 = getelementptr inbounds i32, i32* %90, i64 1
  %96 = ptrtoint i32* %95 to i64
  store i64 %96, i64* %77, align 8
  br label %221

97:                                               ; preds = %89
  %98 = ptrtoint i32* %90 to i64
  %99 = load i64, i64* %78, align 8
  %100 = sub i64 %98, %99
  %101 = ashr exact i64 %100, 2
  %102 = add nsw i64 %101, 1
  %103 = icmp ugt i64 %102, 4611686018427387903
  br i1 %103, label %104, label %106

104:                                              ; preds = %97
  %105 = bitcast %"class.std::__1::vector"* %74 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %105) #14
  unreachable

106:                                              ; preds = %97
  %107 = sub i64 %93, %99
  %108 = ashr exact i64 %107, 2
  %109 = icmp ult i64 %108, 2305843009213693951
  br i1 %109, label %110, label %118

110:                                              ; preds = %106
  %111 = ashr exact i64 %107, 1
  %112 = icmp ult i64 %111, %102
  %113 = select i1 %112, i64 %102, i64 %111
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %123, label %115

115:                                              ; preds = %110
  %116 = icmp ugt i64 %113, 4611686018427387903
  br i1 %116, label %117, label %118

117:                                              ; preds = %115
  call void @abort() #14
  unreachable

118:                                              ; preds = %115, %106
  %119 = phi i64 [ %113, %115 ], [ 4611686018427387903, %106 ]
  %120 = shl i64 %119, 2
  %121 = call i8* @_Znwm(i64 %120) #13
  %122 = bitcast i8* %121 to i32*
  br label %123

123:                                              ; preds = %118, %110
  %124 = phi i64 [ %119, %118 ], [ 0, %110 ]
  %125 = phi i32* [ %122, %118 ], [ null, %110 ]
  %126 = getelementptr inbounds i32, i32* %125, i64 %101
  %127 = getelementptr inbounds i32, i32* %125, i64 %124
  %128 = ptrtoint i32* %127 to i64
  store i32 %84, i32* %126, align 4
  %129 = getelementptr inbounds i32, i32* %126, i64 1
  %130 = ptrtoint i32* %129 to i64
  %131 = load i32*, i32** %80, align 8
  %132 = load i64, i64* %77, align 8
  %133 = ptrtoint i32* %131 to i64
  %134 = sub i64 %132, %133
  %135 = ashr exact i64 %134, 2
  %136 = sub nsw i64 0, %135
  %137 = getelementptr inbounds i32, i32* %126, i64 %136
  %138 = ptrtoint i32* %137 to i64
  %139 = icmp sgt i64 %134, 0
  br i1 %139, label %140, label %144

140:                                              ; preds = %123
  %141 = bitcast i32* %137 to i8*
  %142 = bitcast i32* %131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %141, i8* align 4 %142, i64 %134, i1 false) #12
  %143 = load i32*, i32** %80, align 8
  br label %144

144:                                              ; preds = %140, %123
  %145 = phi i32* [ %131, %123 ], [ %143, %140 ]
  store i64 %138, i64* %78, align 8
  store i64 %130, i64* %77, align 8
  store i64 %128, i64* %79, align 8
  %146 = icmp eq i32* %145, null
  br i1 %146, label %221, label %147

147:                                              ; preds = %144
  %148 = bitcast i32* %145 to i8*
  call void @_ZdlPv(i8* %148) #13
  br label %221

149:                                              ; preds = %86
  %150 = call %"class.base::PersistentSampleMapRecords"* @_ZN4base36PersistentSparseHistogramDataManager30GetSampleMapRecordsWhileLockedEm(%"class.base::PersistentSparseHistogramDataManager"* %0, i64 %87)
  %151 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %150, i64 0, i32 5
  %152 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %150, i64 0, i32 5, i32 0, i32 1
  %153 = load i32*, i32** %152, align 8
  %154 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %150, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %155 = load i32*, i32** %154, align 8
  %156 = icmp eq i32* %153, %155
  %157 = ptrtoint i32* %155 to i64
  br i1 %156, label %162, label %158

158:                                              ; preds = %149
  store i32 %84, i32* %153, align 4
  %159 = getelementptr inbounds i32, i32* %153, i64 1
  %160 = ptrtoint i32* %159 to i64
  %161 = bitcast i32** %152 to i64*
  store i64 %160, i64* %161, align 8
  br label %221

162:                                              ; preds = %149
  %163 = ptrtoint i32* %153 to i64
  %164 = bitcast i32** %152 to i64*
  %165 = bitcast %"class.std::__1::vector"* %151 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %163, %166
  %168 = ashr exact i64 %167, 2
  %169 = add nsw i64 %168, 1
  %170 = icmp ugt i64 %169, 4611686018427387903
  br i1 %170, label %171, label %173

171:                                              ; preds = %162
  %172 = bitcast %"class.std::__1::vector"* %151 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %172) #14
  unreachable

173:                                              ; preds = %162
  %174 = bitcast i32** %154 to i64*
  %175 = sub i64 %157, %166
  %176 = ashr exact i64 %175, 2
  %177 = icmp ult i64 %176, 2305843009213693951
  br i1 %177, label %178, label %186

178:                                              ; preds = %173
  %179 = ashr exact i64 %175, 1
  %180 = icmp ult i64 %179, %169
  %181 = select i1 %180, i64 %169, i64 %179
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %191, label %183

183:                                              ; preds = %178
  %184 = icmp ugt i64 %181, 4611686018427387903
  br i1 %184, label %185, label %186

185:                                              ; preds = %183
  call void @abort() #14
  unreachable

186:                                              ; preds = %183, %173
  %187 = phi i64 [ %181, %183 ], [ 4611686018427387903, %173 ]
  %188 = shl i64 %187, 2
  %189 = call i8* @_Znwm(i64 %188) #13
  %190 = bitcast i8* %189 to i32*
  br label %191

191:                                              ; preds = %186, %178
  %192 = phi i64 [ %187, %186 ], [ 0, %178 ]
  %193 = phi i32* [ %190, %186 ], [ null, %178 ]
  %194 = getelementptr inbounds i32, i32* %193, i64 %168
  %195 = getelementptr inbounds i32, i32* %193, i64 %192
  %196 = ptrtoint i32* %195 to i64
  store i32 %84, i32* %194, align 4
  %197 = getelementptr inbounds i32, i32* %194, i64 1
  %198 = ptrtoint i32* %197 to i64
  %199 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %151, i64 0, i32 0, i32 0
  %200 = load i32*, i32** %199, align 8
  %201 = load i64, i64* %164, align 8
  %202 = ptrtoint i32* %200 to i64
  %203 = sub i64 %201, %202
  %204 = ashr exact i64 %203, 2
  %205 = sub nsw i64 0, %204
  %206 = getelementptr inbounds i32, i32* %194, i64 %205
  %207 = ptrtoint i32* %206 to i64
  %208 = icmp sgt i64 %203, 0
  br i1 %208, label %209, label %213

209:                                              ; preds = %191
  %210 = bitcast i32* %206 to i8*
  %211 = bitcast i32* %200 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %210, i8* align 4 %211, i64 %203, i1 false) #12
  %212 = load i32*, i32** %199, align 8
  br label %213

213:                                              ; preds = %209, %191
  %214 = phi i32* [ %200, %191 ], [ %212, %209 ]
  store i64 %207, i64* %165, align 8
  store i64 %198, i64* %164, align 8
  store i64 %196, i64* %174, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %221, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdlPv(i8* %217) #13
  br label %221

218:                                              ; preds = %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #12
  %219 = and i8 %82, 1
  %220 = icmp ne i8 %219, 0
  br label %228

221:                                              ; preds = %94, %144, %147, %158, %213, %216
  %222 = phi i8 [ %82, %216 ], [ %82, %213 ], [ %82, %158 ], [ 1, %147 ], [ 1, %144 ], [ 1, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #12
  %223 = add nuw nsw i32 %83, 1
  %224 = and i8 %222, 1
  %225 = icmp eq i8 %224, 0
  %226 = icmp ult i32 %223, 10
  %227 = or i1 %226, %225
  br i1 %227, label %81, label %228

228:                                              ; preds = %221, %218
  %229 = phi i1 [ %220, %218 ], [ true, %221 ]
  %230 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #12
  ret i1 %229
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertINS_11__wrap_iterIPjEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS9_E9referenceEEE5valueES7_E4typeENS5_IPKjEES9_S9_(%"class.std::__1::vector"*, i32*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast i32* %2 to i8*
  %6 = bitcast i32* %1 to i8*
  %7 = ptrtoint i32* %1 to i64
  %8 = ptrtoint i32* %2 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint i32* %3 to i64
  %11 = sub i64 %10, %8
  %12 = ashr exact i64 %11, 2
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %706

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i32** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = load i32*, i32** %18, align 8
  %20 = ptrtoint i32* %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 2
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast i32** %18 to i64*
  br i1 %23, label %339, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 2
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %196

29:                                               ; preds = %25
  %30 = getelementptr inbounds i32, i32* %2, i64 %27
  %31 = icmp eq i32* %30, %3
  br i1 %31, label %191, label %32

32:                                               ; preds = %29
  %33 = xor i64 %27, -1
  %34 = getelementptr i32, i32* %3, i64 %33
  %35 = ptrtoint i32* %34 to i64
  %36 = sub i64 %35, %8
  %37 = lshr i64 %36, 2
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 8
  br i1 %39, label %135, label %40

40:                                               ; preds = %32
  %41 = xor i64 %27, -1
  %42 = getelementptr i32, i32* %3, i64 %41
  %43 = ptrtoint i32* %42 to i64
  %44 = sub i64 %43, %8
  %45 = lshr i64 %44, 2
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr i32, i32* %19, i64 %46
  %48 = add nsw i64 %27, %45
  %49 = add i64 %48, 1
  %50 = getelementptr i32, i32* %2, i64 %49
  %51 = icmp ult i32* %19, %50
  %52 = icmp ult i32* %30, %47
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 9223372036854775800
  %56 = getelementptr i32, i32* %19, i64 %55
  %57 = getelementptr i32, i32* %30, i64 %55
  %58 = add nsw i64 %55, -8
  %59 = lshr exact i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 24
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i32, i32* %19, i64 %66
  %69 = getelementptr i32, i32* %30, i64 %66
  %70 = bitcast i32* %69 to <4 x i32>*
  %71 = load <4 x i32>, <4 x i32>* %70, align 4, !alias.scope !6
  %72 = getelementptr i32, i32* %69, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  %74 = load <4 x i32>, <4 x i32>* %73, align 4, !alias.scope !6
  %75 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %71, <4 x i32>* %75, align 4, !alias.scope !9, !noalias !6
  %76 = getelementptr i32, i32* %68, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %77, align 4, !alias.scope !9, !noalias !6
  %78 = or i64 %66, 8
  %79 = getelementptr i32, i32* %19, i64 %78
  %80 = getelementptr i32, i32* %30, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4, !alias.scope !6
  %83 = getelementptr i32, i32* %80, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4, !alias.scope !6
  %86 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> %82, <4 x i32>* %86, align 4, !alias.scope !9, !noalias !6
  %87 = getelementptr i32, i32* %79, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %85, <4 x i32>* %88, align 4, !alias.scope !9, !noalias !6
  %89 = or i64 %66, 16
  %90 = getelementptr i32, i32* %19, i64 %89
  %91 = getelementptr i32, i32* %30, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  %93 = load <4 x i32>, <4 x i32>* %92, align 4, !alias.scope !6
  %94 = getelementptr i32, i32* %91, i64 4
  %95 = bitcast i32* %94 to <4 x i32>*
  %96 = load <4 x i32>, <4 x i32>* %95, align 4, !alias.scope !6
  %97 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %97, align 4, !alias.scope !9, !noalias !6
  %98 = getelementptr i32, i32* %90, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %96, <4 x i32>* %99, align 4, !alias.scope !9, !noalias !6
  %100 = or i64 %66, 24
  %101 = getelementptr i32, i32* %19, i64 %100
  %102 = getelementptr i32, i32* %30, i64 %100
  %103 = bitcast i32* %102 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !6
  %105 = getelementptr i32, i32* %102, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  %107 = load <4 x i32>, <4 x i32>* %106, align 4, !alias.scope !6
  %108 = bitcast i32* %101 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %108, align 4, !alias.scope !9, !noalias !6
  %109 = getelementptr i32, i32* %101, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %107, <4 x i32>* %110, align 4, !alias.scope !9, !noalias !6
  %111 = add i64 %66, 32
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !11

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i32, i32* %19, i64 %118
  %121 = getelementptr i32, i32* %30, i64 %118
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !6
  %124 = getelementptr i32, i32* %121, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !6
  %127 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !9, !noalias !6
  %128 = getelementptr i32, i32* %120, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %129, align 4, !alias.scope !9, !noalias !6
  %130 = add i64 %118, 8
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !13

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %38, %55
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %40, %32
  %136 = phi i32* [ %19, %40 ], [ %19, %32 ], [ %56, %133 ]
  %137 = phi i32* [ %30, %40 ], [ %30, %32 ], [ %57, %133 ]
  %138 = ptrtoint i32* %137 to i64
  %139 = getelementptr i32, i32* %3, i64 -1
  %140 = ptrtoint i32* %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 2
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %155, label %146

146:                                              ; preds = %135, %146
  %147 = phi i32* [ %152, %146 ], [ %136, %135 ]
  %148 = phi i32* [ %151, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %153, %146 ], [ %144, %135 ]
  %150 = load i32, i32* %148, align 4
  store i32 %150, i32* %147, align 4
  %151 = getelementptr inbounds i32, i32* %148, i64 1
  %152 = getelementptr inbounds i32, i32* %147, i64 1
  %153 = add i64 %149, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %146, !llvm.loop !15

155:                                              ; preds = %146, %135
  %156 = phi i32* [ undef, %135 ], [ %152, %146 ]
  %157 = phi i32* [ %136, %135 ], [ %152, %146 ]
  %158 = phi i32* [ %137, %135 ], [ %151, %146 ]
  %159 = icmp ult i64 %141, 28
  br i1 %159, label %188, label %160

160:                                              ; preds = %155, %160
  %161 = phi i32* [ %186, %160 ], [ %157, %155 ]
  %162 = phi i32* [ %185, %160 ], [ %158, %155 ]
  %163 = load i32, i32* %162, align 4
  store i32 %163, i32* %161, align 4
  %164 = getelementptr inbounds i32, i32* %162, i64 1
  %165 = getelementptr inbounds i32, i32* %161, i64 1
  %166 = load i32, i32* %164, align 4
  store i32 %166, i32* %165, align 4
  %167 = getelementptr inbounds i32, i32* %162, i64 2
  %168 = getelementptr inbounds i32, i32* %161, i64 2
  %169 = load i32, i32* %167, align 4
  store i32 %169, i32* %168, align 4
  %170 = getelementptr inbounds i32, i32* %162, i64 3
  %171 = getelementptr inbounds i32, i32* %161, i64 3
  %172 = load i32, i32* %170, align 4
  store i32 %172, i32* %171, align 4
  %173 = getelementptr inbounds i32, i32* %162, i64 4
  %174 = getelementptr inbounds i32, i32* %161, i64 4
  %175 = load i32, i32* %173, align 4
  store i32 %175, i32* %174, align 4
  %176 = getelementptr inbounds i32, i32* %162, i64 5
  %177 = getelementptr inbounds i32, i32* %161, i64 5
  %178 = load i32, i32* %176, align 4
  store i32 %178, i32* %177, align 4
  %179 = getelementptr inbounds i32, i32* %162, i64 6
  %180 = getelementptr inbounds i32, i32* %161, i64 6
  %181 = load i32, i32* %179, align 4
  store i32 %181, i32* %180, align 4
  %182 = getelementptr inbounds i32, i32* %162, i64 7
  %183 = getelementptr inbounds i32, i32* %161, i64 7
  %184 = load i32, i32* %182, align 4
  store i32 %184, i32* %183, align 4
  %185 = getelementptr inbounds i32, i32* %162, i64 8
  %186 = getelementptr inbounds i32, i32* %161, i64 8
  %187 = icmp eq i32* %185, %3
  br i1 %187, label %188, label %160, !llvm.loop !16

188:                                              ; preds = %155, %160, %133
  %189 = phi i32* [ %56, %133 ], [ %156, %155 ], [ %186, %160 ]
  %190 = ptrtoint i32* %189 to i64
  br label %191

191:                                              ; preds = %188, %29
  %192 = phi i64 [ %20, %29 ], [ %190, %188 ]
  store i64 %192, i64* %24, align 8
  %193 = icmp sgt i64 %26, 0
  br i1 %193, label %194, label %706

194:                                              ; preds = %191
  %195 = inttoptr i64 %192 to i32*
  br label %196

196:                                              ; preds = %194, %25
  %197 = phi i64 [ %192, %194 ], [ %20, %25 ]
  %198 = phi i32* [ %195, %194 ], [ %19, %25 ]
  %199 = phi i32* [ %30, %194 ], [ %3, %25 ]
  %200 = getelementptr inbounds i32, i32* %1, i64 %12
  %201 = ptrtoint i32* %200 to i64
  %202 = sub i64 %197, %201
  %203 = ashr exact i64 %202, 2
  %204 = getelementptr inbounds i32, i32* %1, i64 %203
  %205 = icmp ult i32* %204, %19
  br i1 %205, label %206, label %319

206:                                              ; preds = %196
  %207 = sub nsw i64 0, %203
  %208 = getelementptr i32, i32* %19, i64 %207
  %209 = bitcast i32* %208 to i8*
  %210 = xor i64 %7, -1
  %211 = getelementptr i8, i8* %209, i64 %210
  %212 = ptrtoint i8* %211 to i64
  %213 = lshr i64 %212, 2
  %214 = add nuw nsw i64 %213, 1
  %215 = icmp ult i64 %214, 8
  br i1 %215, label %216, label %219

216:                                              ; preds = %314, %219, %206
  %217 = phi i32* [ %198, %219 ], [ %198, %206 ], [ %237, %314 ]
  %218 = phi i32* [ %204, %219 ], [ %204, %206 ], [ %238, %314 ]
  br label %327

219:                                              ; preds = %206
  %220 = sub nsw i64 0, %203
  %221 = getelementptr i32, i32* %19, i64 %220
  %222 = bitcast i32* %221 to i8*
  %223 = xor i64 %7, -1
  %224 = getelementptr i8, i8* %222, i64 %223
  %225 = ptrtoint i8* %224 to i64
  %226 = lshr i64 %225, 2
  %227 = add nuw nsw i64 %226, 1
  %228 = getelementptr i32, i32* %198, i64 %227
  %229 = add nsw i64 %203, %226
  %230 = add i64 %229, 1
  %231 = getelementptr i32, i32* %1, i64 %230
  %232 = icmp ult i32* %198, %231
  %233 = icmp ult i32* %204, %228
  %234 = and i1 %232, %233
  br i1 %234, label %216, label %235

235:                                              ; preds = %219
  %236 = and i64 %214, 9223372036854775800
  %237 = getelementptr i32, i32* %198, i64 %236
  %238 = getelementptr i32, i32* %204, i64 %236
  %239 = add nsw i64 %236, -8
  %240 = lshr exact i64 %239, 3
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 3
  %243 = icmp ult i64 %239, 24
  br i1 %243, label %295, label %244

244:                                              ; preds = %235
  %245 = sub nsw i64 %241, %242
  br label %246

246:                                              ; preds = %246, %244
  %247 = phi i64 [ 0, %244 ], [ %292, %246 ]
  %248 = phi i64 [ %245, %244 ], [ %293, %246 ]
  %249 = getelementptr i32, i32* %198, i64 %247
  %250 = getelementptr i32, i32* %204, i64 %247
  %251 = bitcast i32* %250 to <4 x i32>*
  %252 = load <4 x i32>, <4 x i32>* %251, align 4, !alias.scope !17
  %253 = getelementptr i32, i32* %250, i64 4
  %254 = bitcast i32* %253 to <4 x i32>*
  %255 = load <4 x i32>, <4 x i32>* %254, align 4, !alias.scope !17
  %256 = bitcast i32* %249 to <4 x i32>*
  store <4 x i32> %252, <4 x i32>* %256, align 4, !alias.scope !20, !noalias !17
  %257 = getelementptr i32, i32* %249, i64 4
  %258 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %255, <4 x i32>* %258, align 4, !alias.scope !20, !noalias !17
  %259 = or i64 %247, 8
  %260 = getelementptr i32, i32* %198, i64 %259
  %261 = getelementptr i32, i32* %204, i64 %259
  %262 = bitcast i32* %261 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !17
  %264 = getelementptr i32, i32* %261, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4, !alias.scope !17
  %267 = bitcast i32* %260 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %267, align 4, !alias.scope !20, !noalias !17
  %268 = getelementptr i32, i32* %260, i64 4
  %269 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %266, <4 x i32>* %269, align 4, !alias.scope !20, !noalias !17
  %270 = or i64 %247, 16
  %271 = getelementptr i32, i32* %198, i64 %270
  %272 = getelementptr i32, i32* %204, i64 %270
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4, !alias.scope !17
  %275 = getelementptr i32, i32* %272, i64 4
  %276 = bitcast i32* %275 to <4 x i32>*
  %277 = load <4 x i32>, <4 x i32>* %276, align 4, !alias.scope !17
  %278 = bitcast i32* %271 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %278, align 4, !alias.scope !20, !noalias !17
  %279 = getelementptr i32, i32* %271, i64 4
  %280 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> %277, <4 x i32>* %280, align 4, !alias.scope !20, !noalias !17
  %281 = or i64 %247, 24
  %282 = getelementptr i32, i32* %198, i64 %281
  %283 = getelementptr i32, i32* %204, i64 %281
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !17
  %286 = getelementptr i32, i32* %283, i64 4
  %287 = bitcast i32* %286 to <4 x i32>*
  %288 = load <4 x i32>, <4 x i32>* %287, align 4, !alias.scope !17
  %289 = bitcast i32* %282 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %289, align 4, !alias.scope !20, !noalias !17
  %290 = getelementptr i32, i32* %282, i64 4
  %291 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %288, <4 x i32>* %291, align 4, !alias.scope !20, !noalias !17
  %292 = add i64 %247, 32
  %293 = add i64 %248, -4
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %246, !llvm.loop !22

295:                                              ; preds = %246, %235
  %296 = phi i64 [ 0, %235 ], [ %292, %246 ]
  %297 = icmp eq i64 %242, 0
  br i1 %297, label %314, label %298

298:                                              ; preds = %295, %298
  %299 = phi i64 [ %311, %298 ], [ %296, %295 ]
  %300 = phi i64 [ %312, %298 ], [ %242, %295 ]
  %301 = getelementptr i32, i32* %198, i64 %299
  %302 = getelementptr i32, i32* %204, i64 %299
  %303 = bitcast i32* %302 to <4 x i32>*
  %304 = load <4 x i32>, <4 x i32>* %303, align 4, !alias.scope !17
  %305 = getelementptr i32, i32* %302, i64 4
  %306 = bitcast i32* %305 to <4 x i32>*
  %307 = load <4 x i32>, <4 x i32>* %306, align 4, !alias.scope !17
  %308 = bitcast i32* %301 to <4 x i32>*
  store <4 x i32> %304, <4 x i32>* %308, align 4, !alias.scope !20, !noalias !17
  %309 = getelementptr i32, i32* %301, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  store <4 x i32> %307, <4 x i32>* %310, align 4, !alias.scope !20, !noalias !17
  %311 = add i64 %299, 8
  %312 = add i64 %300, -1
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %314, label %298, !llvm.loop !23

314:                                              ; preds = %298, %295
  %315 = icmp eq i64 %214, %236
  br i1 %315, label %316, label %216

316:                                              ; preds = %327, %314
  %317 = phi i32* [ %237, %314 ], [ %332, %327 ]
  %318 = ptrtoint i32* %317 to i64
  br label %319

319:                                              ; preds = %316, %196
  %320 = phi i64 [ %318, %316 ], [ %197, %196 ]
  store i64 %320, i64* %24, align 8
  %321 = icmp eq i64 %202, 0
  br i1 %321, label %334, label %322

322:                                              ; preds = %319
  %323 = sub nsw i64 0, %203
  %324 = getelementptr inbounds i32, i32* %198, i64 %323
  %325 = bitcast i32* %324 to i8*
  %326 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %325, i8* align 4 %326, i64 %202, i1 false) #12
  br label %334

327:                                              ; preds = %216, %327
  %328 = phi i32* [ %332, %327 ], [ %217, %216 ]
  %329 = phi i32* [ %331, %327 ], [ %218, %216 ]
  %330 = load i32, i32* %329, align 4
  store i32 %330, i32* %328, align 4
  %331 = getelementptr inbounds i32, i32* %329, i64 1
  %332 = getelementptr inbounds i32, i32* %328, i64 1
  %333 = icmp ult i32* %331, %19
  br i1 %333, label %327, label %316, !llvm.loop !24

334:                                              ; preds = %319, %322
  %335 = ptrtoint i32* %199 to i64
  %336 = sub i64 %335, %8
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %706, label %338

338:                                              ; preds = %334
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %5, i64 %336, i1 false) #12
  br label %706

339:                                              ; preds = %14
  %340 = bitcast %"class.std::__1::vector"* %0 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = sub i64 %20, %341
  %343 = ashr exact i64 %342, 2
  %344 = add nsw i64 %343, %12
  %345 = icmp ugt i64 %344, 4611686018427387903
  br i1 %345, label %346, label %348

346:                                              ; preds = %339
  %347 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %347) #14
  unreachable

348:                                              ; preds = %339
  %349 = sub i64 %17, %341
  %350 = ashr exact i64 %349, 2
  %351 = icmp ult i64 %350, 2305843009213693951
  br i1 %351, label %355, label %352

352:                                              ; preds = %348
  %353 = sub i64 %7, %341
  %354 = ashr exact i64 %353, 2
  br label %365

355:                                              ; preds = %348
  %356 = ashr exact i64 %349, 1
  %357 = icmp ult i64 %356, %344
  %358 = select i1 %357, i64 %344, i64 %356
  %359 = sub i64 %7, %341
  %360 = ashr exact i64 %359, 2
  %361 = icmp eq i64 %358, 0
  br i1 %361, label %371, label %362

362:                                              ; preds = %355
  %363 = icmp ugt i64 %358, 4611686018427387903
  br i1 %363, label %364, label %365

364:                                              ; preds = %362
  tail call void @abort() #14
  unreachable

365:                                              ; preds = %352, %362
  %366 = phi i64 [ 4611686018427387903, %352 ], [ %358, %362 ]
  %367 = phi i64 [ %354, %352 ], [ %360, %362 ]
  %368 = shl i64 %366, 2
  %369 = tail call i8* @_Znwm(i64 %368) #13
  %370 = bitcast i8* %369 to i32*
  br label %371

371:                                              ; preds = %365, %355
  %372 = phi i64 [ %367, %365 ], [ %360, %355 ]
  %373 = phi i64 [ %366, %365 ], [ 0, %355 ]
  %374 = phi i32* [ %370, %365 ], [ null, %355 ]
  %375 = getelementptr inbounds i32, i32* %374, i64 %372
  %376 = getelementptr inbounds i32, i32* %374, i64 %373
  %377 = ptrtoint i32* %376 to i64
  %378 = getelementptr inbounds i32, i32* %375, i64 %12
  %379 = add i64 %11, -4
  %380 = lshr i64 %379, 2
  %381 = add nuw nsw i64 %380, 1
  %382 = icmp ult i64 %381, 8
  br i1 %382, label %475, label %383

383:                                              ; preds = %371
  %384 = add i64 %11, -4
  %385 = lshr i64 %384, 2
  %386 = add nsw i64 %372, %385
  %387 = add i64 %386, 1
  %388 = getelementptr i32, i32* %374, i64 %387
  %389 = add nuw nsw i64 %385, 1
  %390 = getelementptr i32, i32* %2, i64 %389
  %391 = icmp ult i32* %375, %390
  %392 = icmp ugt i32* %388, %2
  %393 = and i1 %391, %392
  br i1 %393, label %475, label %394

394:                                              ; preds = %383
  %395 = and i64 %381, 9223372036854775800
  %396 = getelementptr i32, i32* %375, i64 %395
  %397 = getelementptr i32, i32* %2, i64 %395
  %398 = add nsw i64 %395, -8
  %399 = lshr exact i64 %398, 3
  %400 = add nuw nsw i64 %399, 1
  %401 = and i64 %400, 3
  %402 = icmp ult i64 %398, 24
  br i1 %402, label %454, label %403

403:                                              ; preds = %394
  %404 = sub nsw i64 %400, %401
  br label %405

405:                                              ; preds = %405, %403
  %406 = phi i64 [ 0, %403 ], [ %451, %405 ]
  %407 = phi i64 [ %404, %403 ], [ %452, %405 ]
  %408 = getelementptr i32, i32* %375, i64 %406
  %409 = getelementptr i32, i32* %2, i64 %406
  %410 = bitcast i32* %409 to <4 x i32>*
  %411 = load <4 x i32>, <4 x i32>* %410, align 4, !alias.scope !25
  %412 = getelementptr i32, i32* %409, i64 4
  %413 = bitcast i32* %412 to <4 x i32>*
  %414 = load <4 x i32>, <4 x i32>* %413, align 4, !alias.scope !25
  %415 = bitcast i32* %408 to <4 x i32>*
  store <4 x i32> %411, <4 x i32>* %415, align 4, !alias.scope !28, !noalias !25
  %416 = getelementptr i32, i32* %408, i64 4
  %417 = bitcast i32* %416 to <4 x i32>*
  store <4 x i32> %414, <4 x i32>* %417, align 4, !alias.scope !28, !noalias !25
  %418 = or i64 %406, 8
  %419 = getelementptr i32, i32* %375, i64 %418
  %420 = getelementptr i32, i32* %2, i64 %418
  %421 = bitcast i32* %420 to <4 x i32>*
  %422 = load <4 x i32>, <4 x i32>* %421, align 4, !alias.scope !25
  %423 = getelementptr i32, i32* %420, i64 4
  %424 = bitcast i32* %423 to <4 x i32>*
  %425 = load <4 x i32>, <4 x i32>* %424, align 4, !alias.scope !25
  %426 = bitcast i32* %419 to <4 x i32>*
  store <4 x i32> %422, <4 x i32>* %426, align 4, !alias.scope !28, !noalias !25
  %427 = getelementptr i32, i32* %419, i64 4
  %428 = bitcast i32* %427 to <4 x i32>*
  store <4 x i32> %425, <4 x i32>* %428, align 4, !alias.scope !28, !noalias !25
  %429 = or i64 %406, 16
  %430 = getelementptr i32, i32* %375, i64 %429
  %431 = getelementptr i32, i32* %2, i64 %429
  %432 = bitcast i32* %431 to <4 x i32>*
  %433 = load <4 x i32>, <4 x i32>* %432, align 4, !alias.scope !25
  %434 = getelementptr i32, i32* %431, i64 4
  %435 = bitcast i32* %434 to <4 x i32>*
  %436 = load <4 x i32>, <4 x i32>* %435, align 4, !alias.scope !25
  %437 = bitcast i32* %430 to <4 x i32>*
  store <4 x i32> %433, <4 x i32>* %437, align 4, !alias.scope !28, !noalias !25
  %438 = getelementptr i32, i32* %430, i64 4
  %439 = bitcast i32* %438 to <4 x i32>*
  store <4 x i32> %436, <4 x i32>* %439, align 4, !alias.scope !28, !noalias !25
  %440 = or i64 %406, 24
  %441 = getelementptr i32, i32* %375, i64 %440
  %442 = getelementptr i32, i32* %2, i64 %440
  %443 = bitcast i32* %442 to <4 x i32>*
  %444 = load <4 x i32>, <4 x i32>* %443, align 4, !alias.scope !25
  %445 = getelementptr i32, i32* %442, i64 4
  %446 = bitcast i32* %445 to <4 x i32>*
  %447 = load <4 x i32>, <4 x i32>* %446, align 4, !alias.scope !25
  %448 = bitcast i32* %441 to <4 x i32>*
  store <4 x i32> %444, <4 x i32>* %448, align 4, !alias.scope !28, !noalias !25
  %449 = getelementptr i32, i32* %441, i64 4
  %450 = bitcast i32* %449 to <4 x i32>*
  store <4 x i32> %447, <4 x i32>* %450, align 4, !alias.scope !28, !noalias !25
  %451 = add i64 %406, 32
  %452 = add i64 %407, -4
  %453 = icmp eq i64 %452, 0
  br i1 %453, label %454, label %405, !llvm.loop !30

454:                                              ; preds = %405, %394
  %455 = phi i64 [ 0, %394 ], [ %451, %405 ]
  %456 = icmp eq i64 %401, 0
  br i1 %456, label %473, label %457

457:                                              ; preds = %454, %457
  %458 = phi i64 [ %470, %457 ], [ %455, %454 ]
  %459 = phi i64 [ %471, %457 ], [ %401, %454 ]
  %460 = getelementptr i32, i32* %375, i64 %458
  %461 = getelementptr i32, i32* %2, i64 %458
  %462 = bitcast i32* %461 to <4 x i32>*
  %463 = load <4 x i32>, <4 x i32>* %462, align 4, !alias.scope !25
  %464 = getelementptr i32, i32* %461, i64 4
  %465 = bitcast i32* %464 to <4 x i32>*
  %466 = load <4 x i32>, <4 x i32>* %465, align 4, !alias.scope !25
  %467 = bitcast i32* %460 to <4 x i32>*
  store <4 x i32> %463, <4 x i32>* %467, align 4, !alias.scope !28, !noalias !25
  %468 = getelementptr i32, i32* %460, i64 4
  %469 = bitcast i32* %468 to <4 x i32>*
  store <4 x i32> %466, <4 x i32>* %469, align 4, !alias.scope !28, !noalias !25
  %470 = add i64 %458, 8
  %471 = add i64 %459, -1
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %473, label %457, !llvm.loop !31

473:                                              ; preds = %457, %454
  %474 = icmp eq i64 %381, %395
  br i1 %474, label %529, label %475

475:                                              ; preds = %473, %383, %371
  %476 = phi i32* [ %375, %383 ], [ %375, %371 ], [ %396, %473 ]
  %477 = phi i32* [ %2, %383 ], [ %2, %371 ], [ %397, %473 ]
  %478 = ptrtoint i32* %476 to i64
  %479 = add nsw i64 %372, %12
  %480 = add nsw i64 %479, -1
  %481 = getelementptr i32, i32* %374, i64 %480
  %482 = ptrtoint i32* %481 to i64
  %483 = sub i64 %482, %478
  %484 = lshr i64 %483, 2
  %485 = add nuw nsw i64 %484, 1
  %486 = and i64 %485, 7
  %487 = icmp eq i64 %486, 0
  br i1 %487, label %497, label %488

488:                                              ; preds = %475, %488
  %489 = phi i32* [ %493, %488 ], [ %476, %475 ]
  %490 = phi i32* [ %494, %488 ], [ %477, %475 ]
  %491 = phi i64 [ %495, %488 ], [ %486, %475 ]
  %492 = load i32, i32* %490, align 4
  store i32 %492, i32* %489, align 4
  %493 = getelementptr inbounds i32, i32* %489, i64 1
  %494 = getelementptr inbounds i32, i32* %490, i64 1
  %495 = add i64 %491, -1
  %496 = icmp eq i64 %495, 0
  br i1 %496, label %497, label %488, !llvm.loop !32

497:                                              ; preds = %488, %475
  %498 = phi i32* [ %476, %475 ], [ %493, %488 ]
  %499 = phi i32* [ %477, %475 ], [ %494, %488 ]
  %500 = icmp ult i64 %483, 28
  br i1 %500, label %529, label %501

501:                                              ; preds = %497, %501
  %502 = phi i32* [ %526, %501 ], [ %498, %497 ]
  %503 = phi i32* [ %527, %501 ], [ %499, %497 ]
  %504 = load i32, i32* %503, align 4
  store i32 %504, i32* %502, align 4
  %505 = getelementptr inbounds i32, i32* %502, i64 1
  %506 = getelementptr inbounds i32, i32* %503, i64 1
  %507 = load i32, i32* %506, align 4
  store i32 %507, i32* %505, align 4
  %508 = getelementptr inbounds i32, i32* %502, i64 2
  %509 = getelementptr inbounds i32, i32* %503, i64 2
  %510 = load i32, i32* %509, align 4
  store i32 %510, i32* %508, align 4
  %511 = getelementptr inbounds i32, i32* %502, i64 3
  %512 = getelementptr inbounds i32, i32* %503, i64 3
  %513 = load i32, i32* %512, align 4
  store i32 %513, i32* %511, align 4
  %514 = getelementptr inbounds i32, i32* %502, i64 4
  %515 = getelementptr inbounds i32, i32* %503, i64 4
  %516 = load i32, i32* %515, align 4
  store i32 %516, i32* %514, align 4
  %517 = getelementptr inbounds i32, i32* %502, i64 5
  %518 = getelementptr inbounds i32, i32* %503, i64 5
  %519 = load i32, i32* %518, align 4
  store i32 %519, i32* %517, align 4
  %520 = getelementptr inbounds i32, i32* %502, i64 6
  %521 = getelementptr inbounds i32, i32* %503, i64 6
  %522 = load i32, i32* %521, align 4
  store i32 %522, i32* %520, align 4
  %523 = getelementptr inbounds i32, i32* %502, i64 7
  %524 = getelementptr inbounds i32, i32* %503, i64 7
  %525 = load i32, i32* %524, align 4
  store i32 %525, i32* %523, align 4
  %526 = getelementptr inbounds i32, i32* %502, i64 8
  %527 = getelementptr inbounds i32, i32* %503, i64 8
  %528 = icmp eq i32* %378, %526
  br i1 %528, label %529, label %501, !llvm.loop !33

529:                                              ; preds = %497, %501, %473
  %530 = load i32*, i32** %9, align 8
  %531 = ptrtoint i32* %530 to i64
  %532 = sub i64 %7, %531
  %533 = ashr exact i64 %532, 2
  %534 = sub nsw i64 0, %533
  %535 = getelementptr inbounds i32, i32* %375, i64 %534
  %536 = ptrtoint i32* %535 to i64
  %537 = icmp sgt i64 %532, 0
  br i1 %537, label %538, label %541

538:                                              ; preds = %529
  %539 = bitcast i32* %535 to i8*
  %540 = bitcast i32* %530 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %539, i8* align 4 %540, i64 %532, i1 false) #12
  br label %541

541:                                              ; preds = %538, %529
  %542 = load i32*, i32** %18, align 8
  %543 = icmp eq i32* %542, %1
  br i1 %543, label %699, label %544

544:                                              ; preds = %541
  %545 = getelementptr i32, i32* %542, i64 -1
  %546 = ptrtoint i32* %545 to i64
  %547 = sub i64 %546, %7
  %548 = lshr i64 %547, 2
  %549 = add nuw nsw i64 %548, 1
  %550 = icmp ult i64 %549, 8
  br i1 %550, label %646, label %551

551:                                              ; preds = %544
  %552 = add nsw i64 %372, %12
  %553 = getelementptr i32, i32* %542, i64 -1
  %554 = ptrtoint i32* %553 to i64
  %555 = sub i64 %554, %7
  %556 = lshr i64 %555, 2
  %557 = add nsw i64 %552, %556
  %558 = add i64 %557, 1
  %559 = getelementptr i32, i32* %374, i64 %558
  %560 = add nuw nsw i64 %556, 1
  %561 = getelementptr i32, i32* %1, i64 %560
  %562 = icmp ult i32* %378, %561
  %563 = icmp ugt i32* %559, %1
  %564 = and i1 %562, %563
  br i1 %564, label %646, label %565

565:                                              ; preds = %551
  %566 = and i64 %549, 9223372036854775800
  %567 = getelementptr i32, i32* %378, i64 %566
  %568 = getelementptr i32, i32* %1, i64 %566
  %569 = add nsw i64 %566, -8
  %570 = lshr exact i64 %569, 3
  %571 = add nuw nsw i64 %570, 1
  %572 = and i64 %571, 3
  %573 = icmp ult i64 %569, 24
  br i1 %573, label %625, label %574

574:                                              ; preds = %565
  %575 = sub nsw i64 %571, %572
  br label %576

576:                                              ; preds = %576, %574
  %577 = phi i64 [ 0, %574 ], [ %622, %576 ]
  %578 = phi i64 [ %575, %574 ], [ %623, %576 ]
  %579 = getelementptr i32, i32* %378, i64 %577
  %580 = getelementptr i32, i32* %1, i64 %577
  %581 = bitcast i32* %580 to <4 x i32>*
  %582 = load <4 x i32>, <4 x i32>* %581, align 4, !alias.scope !34
  %583 = getelementptr i32, i32* %580, i64 4
  %584 = bitcast i32* %583 to <4 x i32>*
  %585 = load <4 x i32>, <4 x i32>* %584, align 4, !alias.scope !34
  %586 = bitcast i32* %579 to <4 x i32>*
  store <4 x i32> %582, <4 x i32>* %586, align 4, !alias.scope !37, !noalias !34
  %587 = getelementptr i32, i32* %579, i64 4
  %588 = bitcast i32* %587 to <4 x i32>*
  store <4 x i32> %585, <4 x i32>* %588, align 4, !alias.scope !37, !noalias !34
  %589 = or i64 %577, 8
  %590 = getelementptr i32, i32* %378, i64 %589
  %591 = getelementptr i32, i32* %1, i64 %589
  %592 = bitcast i32* %591 to <4 x i32>*
  %593 = load <4 x i32>, <4 x i32>* %592, align 4, !alias.scope !34
  %594 = getelementptr i32, i32* %591, i64 4
  %595 = bitcast i32* %594 to <4 x i32>*
  %596 = load <4 x i32>, <4 x i32>* %595, align 4, !alias.scope !34
  %597 = bitcast i32* %590 to <4 x i32>*
  store <4 x i32> %593, <4 x i32>* %597, align 4, !alias.scope !37, !noalias !34
  %598 = getelementptr i32, i32* %590, i64 4
  %599 = bitcast i32* %598 to <4 x i32>*
  store <4 x i32> %596, <4 x i32>* %599, align 4, !alias.scope !37, !noalias !34
  %600 = or i64 %577, 16
  %601 = getelementptr i32, i32* %378, i64 %600
  %602 = getelementptr i32, i32* %1, i64 %600
  %603 = bitcast i32* %602 to <4 x i32>*
  %604 = load <4 x i32>, <4 x i32>* %603, align 4, !alias.scope !34
  %605 = getelementptr i32, i32* %602, i64 4
  %606 = bitcast i32* %605 to <4 x i32>*
  %607 = load <4 x i32>, <4 x i32>* %606, align 4, !alias.scope !34
  %608 = bitcast i32* %601 to <4 x i32>*
  store <4 x i32> %604, <4 x i32>* %608, align 4, !alias.scope !37, !noalias !34
  %609 = getelementptr i32, i32* %601, i64 4
  %610 = bitcast i32* %609 to <4 x i32>*
  store <4 x i32> %607, <4 x i32>* %610, align 4, !alias.scope !37, !noalias !34
  %611 = or i64 %577, 24
  %612 = getelementptr i32, i32* %378, i64 %611
  %613 = getelementptr i32, i32* %1, i64 %611
  %614 = bitcast i32* %613 to <4 x i32>*
  %615 = load <4 x i32>, <4 x i32>* %614, align 4, !alias.scope !34
  %616 = getelementptr i32, i32* %613, i64 4
  %617 = bitcast i32* %616 to <4 x i32>*
  %618 = load <4 x i32>, <4 x i32>* %617, align 4, !alias.scope !34
  %619 = bitcast i32* %612 to <4 x i32>*
  store <4 x i32> %615, <4 x i32>* %619, align 4, !alias.scope !37, !noalias !34
  %620 = getelementptr i32, i32* %612, i64 4
  %621 = bitcast i32* %620 to <4 x i32>*
  store <4 x i32> %618, <4 x i32>* %621, align 4, !alias.scope !37, !noalias !34
  %622 = add i64 %577, 32
  %623 = add i64 %578, -4
  %624 = icmp eq i64 %623, 0
  br i1 %624, label %625, label %576, !llvm.loop !39

625:                                              ; preds = %576, %565
  %626 = phi i64 [ 0, %565 ], [ %622, %576 ]
  %627 = icmp eq i64 %572, 0
  br i1 %627, label %644, label %628

628:                                              ; preds = %625, %628
  %629 = phi i64 [ %641, %628 ], [ %626, %625 ]
  %630 = phi i64 [ %642, %628 ], [ %572, %625 ]
  %631 = getelementptr i32, i32* %378, i64 %629
  %632 = getelementptr i32, i32* %1, i64 %629
  %633 = bitcast i32* %632 to <4 x i32>*
  %634 = load <4 x i32>, <4 x i32>* %633, align 4, !alias.scope !34
  %635 = getelementptr i32, i32* %632, i64 4
  %636 = bitcast i32* %635 to <4 x i32>*
  %637 = load <4 x i32>, <4 x i32>* %636, align 4, !alias.scope !34
  %638 = bitcast i32* %631 to <4 x i32>*
  store <4 x i32> %634, <4 x i32>* %638, align 4, !alias.scope !37, !noalias !34
  %639 = getelementptr i32, i32* %631, i64 4
  %640 = bitcast i32* %639 to <4 x i32>*
  store <4 x i32> %637, <4 x i32>* %640, align 4, !alias.scope !37, !noalias !34
  %641 = add i64 %629, 8
  %642 = add i64 %630, -1
  %643 = icmp eq i64 %642, 0
  br i1 %643, label %644, label %628, !llvm.loop !40

644:                                              ; preds = %628, %625
  %645 = icmp eq i64 %549, %566
  br i1 %645, label %699, label %646

646:                                              ; preds = %644, %551, %544
  %647 = phi i32* [ %378, %551 ], [ %378, %544 ], [ %567, %644 ]
  %648 = phi i32* [ %1, %551 ], [ %1, %544 ], [ %568, %644 ]
  %649 = ptrtoint i32* %648 to i64
  %650 = getelementptr i32, i32* %542, i64 -1
  %651 = ptrtoint i32* %650 to i64
  %652 = sub i64 %651, %649
  %653 = lshr i64 %652, 2
  %654 = add nuw nsw i64 %653, 1
  %655 = and i64 %654, 7
  %656 = icmp eq i64 %655, 0
  br i1 %656, label %666, label %657

657:                                              ; preds = %646, %657
  %658 = phi i32* [ %663, %657 ], [ %647, %646 ]
  %659 = phi i32* [ %662, %657 ], [ %648, %646 ]
  %660 = phi i64 [ %664, %657 ], [ %655, %646 ]
  %661 = load i32, i32* %659, align 4
  store i32 %661, i32* %658, align 4
  %662 = getelementptr inbounds i32, i32* %659, i64 1
  %663 = getelementptr inbounds i32, i32* %658, i64 1
  %664 = add i64 %660, -1
  %665 = icmp eq i64 %664, 0
  br i1 %665, label %666, label %657, !llvm.loop !41

666:                                              ; preds = %657, %646
  %667 = phi i32* [ undef, %646 ], [ %663, %657 ]
  %668 = phi i32* [ %647, %646 ], [ %663, %657 ]
  %669 = phi i32* [ %648, %646 ], [ %662, %657 ]
  %670 = icmp ult i64 %652, 28
  br i1 %670, label %699, label %671

671:                                              ; preds = %666, %671
  %672 = phi i32* [ %697, %671 ], [ %668, %666 ]
  %673 = phi i32* [ %696, %671 ], [ %669, %666 ]
  %674 = load i32, i32* %673, align 4
  store i32 %674, i32* %672, align 4
  %675 = getelementptr inbounds i32, i32* %673, i64 1
  %676 = getelementptr inbounds i32, i32* %672, i64 1
  %677 = load i32, i32* %675, align 4
  store i32 %677, i32* %676, align 4
  %678 = getelementptr inbounds i32, i32* %673, i64 2
  %679 = getelementptr inbounds i32, i32* %672, i64 2
  %680 = load i32, i32* %678, align 4
  store i32 %680, i32* %679, align 4
  %681 = getelementptr inbounds i32, i32* %673, i64 3
  %682 = getelementptr inbounds i32, i32* %672, i64 3
  %683 = load i32, i32* %681, align 4
  store i32 %683, i32* %682, align 4
  %684 = getelementptr inbounds i32, i32* %673, i64 4
  %685 = getelementptr inbounds i32, i32* %672, i64 4
  %686 = load i32, i32* %684, align 4
  store i32 %686, i32* %685, align 4
  %687 = getelementptr inbounds i32, i32* %673, i64 5
  %688 = getelementptr inbounds i32, i32* %672, i64 5
  %689 = load i32, i32* %687, align 4
  store i32 %689, i32* %688, align 4
  %690 = getelementptr inbounds i32, i32* %673, i64 6
  %691 = getelementptr inbounds i32, i32* %672, i64 6
  %692 = load i32, i32* %690, align 4
  store i32 %692, i32* %691, align 4
  %693 = getelementptr inbounds i32, i32* %673, i64 7
  %694 = getelementptr inbounds i32, i32* %672, i64 7
  %695 = load i32, i32* %693, align 4
  store i32 %695, i32* %694, align 4
  %696 = getelementptr inbounds i32, i32* %673, i64 8
  %697 = getelementptr inbounds i32, i32* %672, i64 8
  %698 = icmp eq i32* %696, %542
  br i1 %698, label %699, label %671, !llvm.loop !42

699:                                              ; preds = %666, %671, %644, %541
  %700 = phi i32* [ %378, %541 ], [ %567, %644 ], [ %667, %666 ], [ %697, %671 ]
  %701 = ptrtoint i32* %700 to i64
  %702 = load i32*, i32** %9, align 8
  store i64 %536, i64* %340, align 8
  store i64 %701, i64* %24, align 8
  store i64 %377, i64* %16, align 8
  %703 = icmp eq i32* %702, null
  br i1 %703, label %706, label %704

704:                                              ; preds = %699
  %705 = bitcast i32* %702 to i8*
  tail call void @_ZdlPv(i8* %705) #13
  br label %706

706:                                              ; preds = %704, %699, %191, %334, %338, %4
  %707 = phi i32* [ %1, %4 ], [ %1, %338 ], [ %1, %334 ], [ %1, %191 ], [ %375, %699 ], [ %375, %704 ]
  ret i32* %707
}

declare i32 @_ZN4base19PersistentSampleMap23GetNextPersistentRecordERNS_25PersistentMemoryAllocator8IteratorEPm(%"class.base::PersistentMemoryAllocator::Iterator"* dereferenceable(16), i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base26PersistentSampleMapRecordsC2EPNS_36PersistentSparseHistogramDataManagerEm(%"class.base::PersistentSampleMapRecords"* nocapture, %"class.base::PersistentSparseHistogramDataManager"*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %0, i64 0, i32 0
  store %"class.base::PersistentSparseHistogramDataManager"* %1, %"class.base::PersistentSparseHistogramDataManager"** %4, align 8
  %5 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %0, i64 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %0, i64 0, i32 2
  %7 = bitcast i8** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 64, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base26PersistentSampleMapRecordsD2Ev(%"class.base::PersistentSampleMapRecords"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %0, i64 0, i32 5, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %0, i64 0, i32 4, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i32* %12 to i64
  %16 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %0, i64 0, i32 4, i32 0, i32 1
  %17 = bitcast i32** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i32* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base26PersistentSampleMapRecords7ReleaseEPKv(%"class.base::PersistentSampleMapRecords"* nocapture, i8* nocapture readnone) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %0, i64 0, i32 2
  store i8* null, i8** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base26PersistentSampleMapRecords7GetNextEv(%"class.base::PersistentSampleMapRecords"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %0, i64 0, i32 4, i32 0, i32 1
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 2
  %10 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  %13 = inttoptr i64 %7 to i32*
  br i1 %12, label %14, label %22

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %0, i64 0, i32 0
  %16 = load %"class.base::PersistentSparseHistogramDataManager"*, %"class.base::PersistentSparseHistogramDataManager"** %15, align 8
  %17 = tail call zeroext i1 @_ZN4base36PersistentSparseHistogramDataManager11LoadRecordsEPNS_26PersistentSampleMapRecordsE(%"class.base::PersistentSparseHistogramDataManager"* %16, %"class.base::PersistentSampleMapRecords"* %0)
  br i1 %17, label %18, label %28

18:                                               ; preds = %14
  %19 = load i64, i64* %10, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  br label %22

22:                                               ; preds = %18, %1
  %23 = phi i32* [ %21, %18 ], [ %13, %1 ]
  %24 = phi i64 [ %19, %18 ], [ %11, %1 ]
  %25 = add i64 %24, 1
  store i64 %25, i64* %10, align 8
  %26 = getelementptr inbounds i32, i32* %23, i64 %24
  %27 = load i32, i32* %26, align 4
  br label %28

28:                                               ; preds = %14, %22
  %29 = phi i32 [ %27, %22 ], [ 0, %14 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base26PersistentSampleMapRecords9CreateNewEi(%"class.base::PersistentSampleMapRecords"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %0, i64 0, i32 0
  %4 = load %"class.base::PersistentSparseHistogramDataManager"*, %"class.base::PersistentSparseHistogramDataManager"** %3, align 8
  %5 = getelementptr inbounds %"class.base::PersistentSparseHistogramDataManager", %"class.base::PersistentSparseHistogramDataManager"* %4, i64 0, i32 0
  %6 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %5, align 8
  %7 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = tail call i32 @_ZN4base19PersistentSampleMap22CreatePersistentRecordEPNS_25PersistentMemoryAllocatorEmi(%"class.base::PersistentMemoryAllocator"* %6, i64 %8, i32 %1) #12
  ret i32 %9
}

declare i32 @_ZN4base19PersistentSampleMap22CreatePersistentRecordEPNS_25PersistentMemoryAllocatorEmi(%"class.base::PersistentMemoryAllocator"*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base28PersistentHistogramAllocator8IteratorC2EPS0_(%"class.base::PersistentHistogramAllocator::Iterator"*, %"class.base::PersistentHistogramAllocator"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::PersistentHistogramAllocator::Iterator", %"class.base::PersistentHistogramAllocator::Iterator"* %0, i64 0, i32 0
  store %"class.base::PersistentHistogramAllocator"* %1, %"class.base::PersistentHistogramAllocator"** %3, align 8
  %4 = getelementptr inbounds %"class.base::PersistentHistogramAllocator::Iterator", %"class.base::PersistentHistogramAllocator::Iterator"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %5, align 8
  tail call void @_ZN4base25PersistentMemoryAllocator8IteratorC1EPKS0_(%"class.base::PersistentMemoryAllocator::Iterator"* %4, %"class.base::PersistentMemoryAllocator"* %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base28PersistentHistogramAllocator8Iterator17GetNextWithIgnoreEj(%"class.base::PersistentHistogramAllocator::Iterator"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::PersistentHistogramAllocator::Iterator", %"class.base::PersistentHistogramAllocator::Iterator"* %0, i64 0, i32 1
  br label %4

4:                                                ; preds = %7, %2
  %5 = tail call i32 @_ZN4base25PersistentMemoryAllocator8Iterator13GetNextOfTypeEj(%"class.base::PersistentMemoryAllocator::Iterator"* %3, i32 -245081837) #12
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = icmp eq i32 %5, %1
  br i1 %8, label %4, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.base::PersistentHistogramAllocator::Iterator", %"class.base::PersistentHistogramAllocator::Iterator"* %0, i64 0, i32 0
  %11 = load %"class.base::PersistentHistogramAllocator"*, %"class.base::PersistentHistogramAllocator"** %10, align 8
  %12 = tail call %"class.base::HistogramBase"* @_ZN4base28PersistentHistogramAllocator12GetHistogramEj(%"class.base::PersistentHistogramAllocator"* %11, i32 %5)
  br label %13

13:                                               ; preds = %4, %9
  %14 = phi %"class.base::HistogramBase"* [ %12, %9 ], [ null, %4 ]
  ret %"class.base::HistogramBase"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base28PersistentHistogramAllocator12GetHistogramEj(%"class.base::PersistentHistogramAllocator"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %4, align 8
  %6 = tail call i8* @_ZNK4base25PersistentMemoryAllocator12GetBlockDataEjjj(%"class.base::PersistentMemoryAllocator"* %5, i32 %1, i32 -245081837, i32 88) #12
  %7 = bitcast i8* %6 to %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"*
  %8 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %4, align 8
  %9 = tail call i64 @_ZNK4base25PersistentMemoryAllocator12GetAllocSizeEj(%"class.base::PersistentMemoryAllocator"* %8, i32 %1) #12
  %10 = icmp eq i8* %6, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %6, i64 80
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %49, label %15

15:                                               ; preds = %11
  %16 = add i64 %9, -1
  %17 = getelementptr inbounds i8, i8* %6, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %49

20:                                               ; preds = %15
  %21 = getelementptr inbounds i8, i8* %6, i64 32
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %49, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds i8, i8* %6, i64 56
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = icmp eq i64 %28, %23
  %32 = add i64 %23, 1
  %33 = icmp eq i64 %28, %32
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %49

35:                                               ; preds = %30
  %36 = icmp eq i8* %12, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %35
  %38 = tail call i64 @strlen(i8* nonnull %12) #12
  br label %42

39:                                               ; preds = %35
  %40 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #12
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  br label %42

42:                                               ; preds = %37, %39
  %43 = phi i64 [ 0, %39 ], [ %38, %37 ]
  %44 = call i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %12, i64 %43) #12
  %45 = load i64, i64* %22, align 8
  %46 = icmp eq i64 %44, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  %48 = call %"class.base::HistogramBase"* @_ZN4base28PersistentHistogramAllocator15CreateHistogramEPNS0_23PersistentHistogramDataE(%"class.base::PersistentHistogramAllocator"* %0, %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* nonnull %7)
  br label %49

49:                                               ; preds = %25, %20, %11, %2, %15, %42, %30, %47
  %50 = phi %"class.base::HistogramBase"* [ %48, %47 ], [ null, %30 ], [ null, %42 ], [ null, %15 ], [ null, %2 ], [ null, %11 ], [ null, %20 ], [ null, %25 ]
  ret %"class.base::HistogramBase"* %50
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base28PersistentHistogramAllocatorC2ENSt3__110unique_ptrINS_25PersistentMemoryAllocatorENS1_14default_deleteIS3_EEEE(%"class.base::PersistentHistogramAllocator"*, %"class.base::PersistentMemoryAllocator"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::PersistentMemoryAllocator"* %1 to i64
  %4 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base28PersistentHistogramAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr.18"* %5 to i64*
  store i64 %3, i64* %6, align 8
  %7 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 2, i32 0
  store %"class.base::PersistentMemoryAllocator"* %1, %"class.base::PersistentMemoryAllocator"** %7, align 8
  %8 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 2, i32 1
  tail call void @_ZN4base25PersistentMemoryAllocator8IteratorC1EPKS0_(%"class.base::PersistentMemoryAllocator::Iterator"* %8, %"class.base::PersistentMemoryAllocator"* %1) #12
  %9 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %11, align 8
  %13 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 2, i32 3, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %13) #12
  %14 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 3
  store i32 0, i32* %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base28PersistentHistogramAllocatorD2Ev(%"class.base::PersistentHistogramAllocator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base28PersistentHistogramAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 2, i32 3, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %3) #12
  %4 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 2, i32 2, i32 0
  %5 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN4base26PersistentSampleMapRecordsENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %4, %"class.std::__1::__tree_node"* %7) #12
  %8 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %8, align 8
  store %"class.base::PersistentMemoryAllocator"* null, %"class.base::PersistentMemoryAllocator"** %8, align 8
  %10 = icmp eq %"class.base::PersistentMemoryAllocator"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.base::PersistentMemoryAllocator"* %9 to void (%"class.base::PersistentMemoryAllocator"*)***
  %13 = load void (%"class.base::PersistentMemoryAllocator"*)**, void (%"class.base::PersistentMemoryAllocator"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.base::PersistentMemoryAllocator"*)*, void (%"class.base::PersistentMemoryAllocator"*)** %13, i64 1
  %15 = load void (%"class.base::PersistentMemoryAllocator"*)*, void (%"class.base::PersistentMemoryAllocator"*)** %14, align 8
  tail call void %15(%"class.base::PersistentMemoryAllocator"* nonnull %9) #12
  br label %16

16:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base28PersistentHistogramAllocatorD0Ev(%"class.base::PersistentHistogramAllocator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base28PersistentHistogramAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 2, i32 3, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %3) #12
  %4 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 2, i32 2, i32 0
  %5 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN4base26PersistentSampleMapRecordsENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %4, %"class.std::__1::__tree_node"* %7) #12
  %8 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %8, align 8
  store %"class.base::PersistentMemoryAllocator"* null, %"class.base::PersistentMemoryAllocator"** %8, align 8
  %10 = icmp eq %"class.base::PersistentMemoryAllocator"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.base::PersistentMemoryAllocator"* %9 to void (%"class.base::PersistentMemoryAllocator"*)***
  %13 = load void (%"class.base::PersistentMemoryAllocator"*)**, void (%"class.base::PersistentMemoryAllocator"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.base::PersistentMemoryAllocator"*)*, void (%"class.base::PersistentMemoryAllocator"*)** %13, i64 1
  %15 = load void (%"class.base::PersistentMemoryAllocator"*)*, void (%"class.base::PersistentMemoryAllocator"*)** %14, align 8
  tail call void %15(%"class.base::PersistentMemoryAllocator"* nonnull %9) #12
  br label %16

16:                                               ; preds = %1, %11
  %17 = bitcast %"class.base::PersistentHistogramAllocator"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare i64 @_ZNK4base25PersistentMemoryAllocator12GetAllocSizeEj(%"class.base::PersistentMemoryAllocator"*, i32) local_unnamed_addr #1

declare i64 @_ZN4base14HashMetricNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base28PersistentHistogramAllocator15CreateHistogramEPNS0_23PersistentHistogramDataE(%"class.base::PersistentHistogramAllocator"*, %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::DelayedPersistentAllocation", align 8
  %4 = alloca %"class.base::DelayedPersistentAllocation", align 8
  %5 = icmp eq %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, null
  br i1 %5, label %119, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 4
  br i1 %9, label %10, label %18

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 10, i64 0
  %12 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 8
  %13 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 9
  %14 = tail call %"class.base::HistogramBase"* @_ZN4base15SparseHistogram16PersistentCreateEPNS_28PersistentHistogramAllocatorEPKcPNS_16HistogramSamples8MetadataES7_(%"class.base::PersistentHistogramAllocator"* %0, i8* %11, %"struct.base::HistogramSamples::Metadata"* %12, %"struct.base::HistogramSamples::Metadata"* %13) #12
  %15 = ptrtoint %"class.base::HistogramBase"* %14 to i64
  %16 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  tail call void @_ZN4base13HistogramBase8SetFlagsEi(%"class.base::HistogramBase"* %14, i32 %17) #12
  br label %119

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 5
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 6
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %32 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %31, align 8
  %33 = tail call i8* @_ZNK4base25PersistentMemoryAllocator12GetBlockDataEjjj(%"class.base::PersistentMemoryAllocator"* %32, i32 %28, i32 -1125506469, i32 4) #12
  %34 = bitcast i8* %33 to i32*
  %35 = add i32 %26, 1
  %36 = zext i32 %35 to i64
  %37 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %31, align 8
  %38 = tail call i64 @_ZNK4base25PersistentMemoryAllocator12GetAllocSizeEj(%"class.base::PersistentMemoryAllocator"* %37, i32 %28) #12
  %39 = icmp eq i8* %33, null
  %40 = add i32 %26, -2
  %41 = icmp ugt i32 %40, 1073741820
  %42 = or i1 %41, %39
  %43 = shl nuw nsw i64 %36, 2
  %44 = icmp ult i64 %38, %43
  %45 = or i1 %42, %44
  br i1 %45, label %119, label %46

46:                                               ; preds = %18
  %47 = tail call i8* @_Znwm(i64 32) #13
  %48 = bitcast i8* %47 to %"class.base::BucketRanges"*
  tail call void @_ZN4base12BucketRangesC1Em(%"class.base::BucketRanges"* nonnull %48, i64 %36) #12
  %49 = icmp eq i32 %35, 0
  br i1 %49, label %70, label %50

50:                                               ; preds = %46
  %51 = bitcast i8* %47 to i32**
  br label %52

52:                                               ; preds = %64, %50
  %53 = phi i64 [ 0, %50 ], [ %68, %64 ]
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %52
  %56 = load i32, i32* %34, align 4
  br label %64

57:                                               ; preds = %52
  %58 = getelementptr inbounds i32, i32* %34, i64 %53
  %59 = load i32, i32* %58, align 4
  %60 = add nsw i64 %53, -1
  %61 = getelementptr inbounds i32, i32* %34, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = icmp sgt i32 %59, %62
  br i1 %63, label %64, label %75

64:                                               ; preds = %57, %55
  %65 = phi i32 [ %56, %55 ], [ %59, %57 ]
  %66 = load i32*, i32** %51, align 8
  %67 = getelementptr inbounds i32, i32* %66, i64 %53
  store i32 %65, i32* %67, align 4
  %68 = add nuw nsw i64 %53, 1
  %69 = icmp eq i64 %68, %36
  br i1 %69, label %70, label %52

70:                                               ; preds = %64, %46
  tail call void @_ZN4base12BucketRanges13ResetChecksumEv(%"class.base::BucketRanges"* nonnull %48) #12
  %71 = getelementptr inbounds i8, i8* %47, i64 24
  %72 = bitcast i8* %71 to i32*
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, %30
  br i1 %74, label %76, label %75

75:                                               ; preds = %57, %70
  tail call void @_ZN4base12BucketRangesD1Ev(%"class.base::BucketRanges"* nonnull %48) #12
  tail call void @_ZdlPv(i8* nonnull %47) #13
  br label %119

76:                                               ; preds = %70
  %77 = tail call %"class.base::BucketRanges"* @_ZN4base18StatisticsRecorder31RegisterOrDeleteDuplicateRangesEPKNS_12BucketRangesE(%"class.base::BucketRanges"* nonnull %48) #12
  %78 = zext i32 %26 to i64
  %79 = shl nuw nsw i64 %78, 3
  %80 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 7
  %81 = load atomic i32, i32* %80 acquire, align 4
  %82 = icmp eq i32 %26, 0
  br i1 %82, label %119, label %83

83:                                               ; preds = %76
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %83
  %86 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %31, align 8
  %87 = tail call i64 @_ZNK4base25PersistentMemoryAllocator12GetAllocSizeEj(%"class.base::PersistentMemoryAllocator"* %86, i32 %81) #12
  %88 = icmp ult i64 %87, %79
  br i1 %88, label %119, label %89

89:                                               ; preds = %83, %85
  %90 = bitcast %"class.base::DelayedPersistentAllocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %90) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 32, i1 false)
  %91 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %31, align 8
  call void @_ZN4base27DelayedPersistentAllocationC1EPNS_25PersistentMemoryAllocatorEPijmb(%"class.base::DelayedPersistentAllocation"* nonnull %3, %"class.base::PersistentMemoryAllocator"* %91, i32* %80, i32 1394693425, i64 %79, i1 zeroext false) #12
  %92 = bitcast %"class.base::DelayedPersistentAllocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %92) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 32, i1 false)
  %93 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %31, align 8
  %94 = shl nuw nsw i64 %78, 2
  call void @_ZN4base27DelayedPersistentAllocationC1EPNS_25PersistentMemoryAllocatorEPijmmb(%"class.base::DelayedPersistentAllocation"* nonnull %4, %"class.base::PersistentMemoryAllocator"* %93, i32* %80, i32 1394693425, i64 %79, i64 %94, i1 zeroext false) #12
  %95 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 10, i64 0
  switch i32 %8, label %117 [
    i32 0, label %96
    i32 1, label %100
    i32 2, label %104
    i32 3, label %108
  ]

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 8
  %98 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 9
  %99 = call %"class.base::HistogramBase"* @_ZN4base9Histogram16PersistentCreateEPKciiPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(i8* %95, i32 %22, i32 %24, %"class.base::BucketRanges"* %77, %"class.base::DelayedPersistentAllocation"* nonnull dereferenceable(32) %3, %"class.base::DelayedPersistentAllocation"* nonnull dereferenceable(32) %4, %"struct.base::HistogramSamples::Metadata"* %97, %"struct.base::HistogramSamples::Metadata"* %98) #12
  br label %112

100:                                              ; preds = %89
  %101 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 8
  %102 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 9
  %103 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram16PersistentCreateEPKciiPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(i8* %95, i32 %22, i32 %24, %"class.base::BucketRanges"* %77, %"class.base::DelayedPersistentAllocation"* nonnull dereferenceable(32) %3, %"class.base::DelayedPersistentAllocation"* nonnull dereferenceable(32) %4, %"struct.base::HistogramSamples::Metadata"* %101, %"struct.base::HistogramSamples::Metadata"* %102) #12
  br label %112

104:                                              ; preds = %89
  %105 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 8
  %106 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 9
  %107 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram16PersistentCreateEPKcPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(i8* %95, %"class.base::BucketRanges"* %77, %"class.base::DelayedPersistentAllocation"* nonnull dereferenceable(32) %3, %"class.base::DelayedPersistentAllocation"* nonnull dereferenceable(32) %4, %"struct.base::HistogramSamples::Metadata"* %105, %"struct.base::HistogramSamples::Metadata"* %106) #12
  br label %112

108:                                              ; preds = %89
  %109 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 8
  %110 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %1, i64 0, i32 9
  %111 = call %"class.base::HistogramBase"* @_ZN4base15CustomHistogram16PersistentCreateEPKcPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(i8* %95, %"class.base::BucketRanges"* %77, %"class.base::DelayedPersistentAllocation"* nonnull dereferenceable(32) %3, %"class.base::DelayedPersistentAllocation"* nonnull dereferenceable(32) %4, %"struct.base::HistogramSamples::Metadata"* %109, %"struct.base::HistogramSamples::Metadata"* %110) #12
  br label %112

112:                                              ; preds = %108, %104, %100, %96
  %113 = phi %"class.base::HistogramBase"* [ %111, %108 ], [ %107, %104 ], [ %103, %100 ], [ %99, %96 ]
  %114 = ptrtoint %"class.base::HistogramBase"* %113 to i64
  %115 = icmp eq %"class.base::HistogramBase"* %113, null
  br i1 %115, label %117, label %116

116:                                              ; preds = %112
  call void @_ZN4base13HistogramBase8SetFlagsEi(%"class.base::HistogramBase"* nonnull %113, i32 %20) #12
  br label %117

117:                                              ; preds = %112, %89, %116
  %118 = phi i64 [ 0, %89 ], [ %114, %116 ], [ %114, %112 ]
  call void @_ZN4base27DelayedPersistentAllocationD1Ev(%"class.base::DelayedPersistentAllocation"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %92) #12
  call void @_ZN4base27DelayedPersistentAllocationD1Ev(%"class.base::DelayedPersistentAllocation"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %90) #12
  br label %119

119:                                              ; preds = %76, %85, %75, %117, %18, %2, %10
  %120 = phi i64 [ %15, %10 ], [ 0, %2 ], [ 0, %18 ], [ 0, %76 ], [ 0, %85 ], [ 0, %75 ], [ %118, %117 ]
  %121 = inttoptr i64 %120 to %"class.base::HistogramBase"*
  ret %"class.base::HistogramBase"* %121
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base28PersistentHistogramAllocator17AllocateHistogramENS_13HistogramTypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEiiPKNS_12BucketRangesEiPj(%"class.base::PersistentHistogramAllocator"*, i32, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32, i32, %"class.base::BucketRanges"* nocapture, i32, i32*) local_unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %9, align 8
  %11 = tail call zeroext i1 @_ZNK4base25PersistentMemoryAllocator9IsCorruptEv(%"class.base::PersistentMemoryAllocator"* %10) #12
  br i1 %11, label %119, label %12

12:                                               ; preds = %8
  %13 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %9, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = add i64 %21, 81
  %23 = icmp ugt i64 %22, 88
  %24 = select i1 %23, i64 %22, i64 88
  %25 = tail call i32 @_ZN4base25PersistentMemoryAllocator8AllocateEmj(%"class.base::PersistentMemoryAllocator"* %13, i64 %24, i32 -245081837) #12
  %26 = trunc i64 %24 to i32
  %27 = tail call i8* @_ZNK4base25PersistentMemoryAllocator12GetBlockDataEjjj(%"class.base::PersistentMemoryAllocator"* %13, i32 %25, i32 -245081837, i32 %26) #12
  %28 = icmp eq i8* %27, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 88, i1 false) #12
  %30 = bitcast i8* %27 to %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"*
  %31 = getelementptr inbounds i8, i8* %27, i64 80
  %32 = load i8, i8* %15, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = load i64, i64* %18, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %38 = zext i8 %32 to i64
  %39 = select i1 %33, i8* %35, i8* %37
  %40 = select i1 %33, i64 %36, i64 %38
  %41 = add i64 %40, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 1 %39, i64 %41, i1 false)
  %42 = bitcast i8* %27 to i32*
  store i32 %1, i32* %42, align 8
  %43 = or i32 %6, 64
  %44 = getelementptr inbounds i8, i8* %27, i64 4
  %45 = bitcast i8* %44 to i32*
  store i32 %43, i32* %45, align 4
  br label %46

46:                                               ; preds = %12, %29
  %47 = phi i1 [ true, %29 ], [ false, %12 ]
  %48 = phi %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* [ %30, %29 ], [ null, %12 ]
  %49 = icmp eq i32 %1, 4
  br i1 %49, label %109, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %5, i64 0, i32 0, i32 0, i32 1
  %52 = bitcast i32** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.base::BucketRanges"* %5 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %53, %55
  %57 = ashr exact i64 %56, 2
  %58 = add nsw i64 %57, -1
  %59 = icmp ugt i64 %58, 2305843009213693951
  %60 = and i64 %58, 2305843009213693951
  %61 = icmp eq i64 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %119, label %63

63:                                               ; preds = %50
  %64 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 acquire, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %96

67:                                               ; preds = %63
  %68 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %9, align 8
  %69 = tail call i32 @_ZN4base25PersistentMemoryAllocator8AllocateEmj(%"class.base::PersistentMemoryAllocator"* %68, i64 %56, i32 -1125506469) #12
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %119, label %71

71:                                               ; preds = %67
  %72 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %9, align 8
  %73 = trunc i64 %56 to i32
  %74 = and i32 %73, -4
  %75 = tail call i8* @_ZNK4base25PersistentMemoryAllocator12GetBlockDataEjjj(%"class.base::PersistentMemoryAllocator"* %72, i32 %69, i32 -1125506469, i32 %74) #12
  %76 = bitcast i8* %75 to i32*
  %77 = icmp eq i8* %75, null
  br i1 %77, label %119, label %78

78:                                               ; preds = %71
  %79 = load i64, i64* %52, align 8
  %80 = load i64, i64* %54, align 8
  %81 = icmp eq i64 %79, %80
  br i1 %81, label %82, label %83

82:                                               ; preds = %83, %78
  store atomic i32 %69, i32* %64 release, align 4
  br label %96

83:                                               ; preds = %78, %83
  %84 = phi i64 [ %92, %83 ], [ %80, %78 ]
  %85 = phi i64 [ %90, %83 ], [ 0, %78 ]
  %86 = inttoptr i64 %84 to i32*
  %87 = getelementptr inbounds i32, i32* %86, i64 %85
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds i32, i32* %76, i64 %85
  store i32 %88, i32* %89, align 4
  %90 = add nuw i64 %85, 1
  %91 = load i64, i64* %52, align 8
  %92 = load i64, i64* %54, align 8
  %93 = sub i64 %91, %92
  %94 = ashr exact i64 %93, 2
  %95 = icmp ult i64 %90, %94
  br i1 %95, label %83, label %82

96:                                               ; preds = %82, %63
  %97 = phi i32 [ %65, %63 ], [ %69, %82 ]
  %98 = icmp ne i32 %97, 0
  %99 = and i1 %47, %98
  br i1 %99, label %100, label %119

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %48, i64 0, i32 2
  store i32 %3, i32* %101, align 8
  %102 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %48, i64 0, i32 3
  store i32 %4, i32* %102, align 4
  %103 = trunc i64 %58 to i32
  %104 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %48, i64 0, i32 4
  store i32 %103, i32* %104, align 8
  %105 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %48, i64 0, i32 5
  store i32 %97, i32* %105, align 4
  %106 = getelementptr inbounds %"class.base::BucketRanges", %"class.base::BucketRanges"* %5, i64 0, i32 1
  %107 = load i32, i32* %106, align 8
  %108 = getelementptr inbounds %"struct.base::PersistentHistogramAllocator::PersistentHistogramData", %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %48, i64 0, i32 6
  store i32 %107, i32* %108, align 8
  br label %109

109:                                              ; preds = %100, %46
  %110 = icmp eq %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* %48, null
  br i1 %110, label %119, label %111

111:                                              ; preds = %109
  %112 = tail call %"class.base::HistogramBase"* @_ZN4base28PersistentHistogramAllocator15CreateHistogramEPNS0_23PersistentHistogramDataE(%"class.base::PersistentHistogramAllocator"* %0, %"struct.base::PersistentHistogramAllocator::PersistentHistogramData"* nonnull %48)
  %113 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %9, align 8
  %114 = tail call i32 @_ZNK4base25PersistentMemoryAllocator14GetAsReferenceEPKvj(%"class.base::PersistentMemoryAllocator"* %113, i8* %27, i32 -245081837) #12
  %115 = icmp eq i32* %7, null
  br i1 %115, label %117, label %116

116:                                              ; preds = %111
  store i32 %114, i32* %7, align 4
  br label %117

117:                                              ; preds = %111, %116
  %118 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 3
  store atomic volatile i32 %114, i32* %118 monotonic, align 4
  br label %119

119:                                              ; preds = %71, %67, %96, %109, %50, %8, %117
  %120 = phi %"class.base::HistogramBase"* [ %112, %117 ], [ null, %8 ], [ null, %50 ], [ null, %109 ], [ null, %96 ], [ null, %67 ], [ null, %71 ]
  ret %"class.base::HistogramBase"* %120
}

declare zeroext i1 @_ZNK4base25PersistentMemoryAllocator9IsCorruptEv(%"class.base::PersistentMemoryAllocator"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i32 @_ZN4base25PersistentMemoryAllocator8AllocateEmj(%"class.base::PersistentMemoryAllocator"*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base28PersistentHistogramAllocator17FinalizeHistogramEjb(%"class.base::PersistentHistogramAllocator"* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %4, align 8
  br i1 %2, label %6, label %7

6:                                                ; preds = %3
  tail call void @_ZN4base25PersistentMemoryAllocator12MakeIterableEj(%"class.base::PersistentMemoryAllocator"* %5, i32 %1) #12
  br label %9

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZN4base25PersistentMemoryAllocator10ChangeTypeEjjjb(%"class.base::PersistentMemoryAllocator"* %5, i32 %1, i32 0, i32 -245081837, i1 zeroext false) #12
  br label %9

9:                                                ; preds = %7, %6
  ret void
}

declare void @_ZN4base25PersistentMemoryAllocator12MakeIterableEj(%"class.base::PersistentMemoryAllocator"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN4base25PersistentMemoryAllocator10ChangeTypeEjjjb(%"class.base::PersistentMemoryAllocator"*, i32, i32, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base28PersistentHistogramAllocator39MergeHistogramDeltaToStatisticsRecorderEPNS_13HistogramBaseE(%"class.base::PersistentHistogramAllocator"* nocapture readnone, %"class.base::HistogramBase"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.base::HistogramBase"* @_ZN4base28PersistentHistogramAllocator38GetOrCreateStatisticsRecorderHistogramEPKNS_13HistogramBaseE(%"class.base::PersistentHistogramAllocator"* undef, %"class.base::HistogramBase"* %1)
  %4 = icmp eq %"class.base::HistogramBase"* %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.base::HistogramBase"* %1 to %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)***
  %7 = load %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)**, %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)*, %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)** %7, i64 12
  %9 = load %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)*, %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)** %8, align 8
  %10 = tail call %"class.base::HistogramSamples"* %9(%"class.base::HistogramBase"* %1) #12
  %11 = bitcast %"class.base::HistogramBase"* %3 to void (%"class.base::HistogramBase"*, %"class.base::HistogramSamples"*)***
  %12 = load void (%"class.base::HistogramBase"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramBase"*, %"class.base::HistogramSamples"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::HistogramBase"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramBase"*, %"class.base::HistogramSamples"*)** %12, i64 8
  %14 = load void (%"class.base::HistogramBase"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramBase"*, %"class.base::HistogramSamples"*)** %13, align 8
  tail call void %14(%"class.base::HistogramBase"* nonnull %3, %"class.base::HistogramSamples"* dereferenceable(16) %10) #12
  %15 = icmp eq %"class.base::HistogramSamples"* %10, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %5
  %17 = bitcast %"class.base::HistogramSamples"* %10 to void (%"class.base::HistogramSamples"*)***
  %18 = load void (%"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*)** %18, i64 1
  %20 = load void (%"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*)** %19, align 8
  tail call void %20(%"class.base::HistogramSamples"* nonnull %10) #12
  br label %21

21:                                               ; preds = %16, %5, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::HistogramBase"* @_ZN4base28PersistentHistogramAllocator38GetOrCreateStatisticsRecorderHistogramEPKNS_13HistogramBaseE(%"class.base::PersistentHistogramAllocator"* nocapture readnone, %"class.base::HistogramBase"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::Pickle", align 8
  %5 = alloca %"class.base::PickleIterator", align 8
  %6 = getelementptr inbounds %"class.base::HistogramBase", %"class.base::HistogramBase"* %1, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @strlen(i8* nonnull %7) #12
  br label %14

11:                                               ; preds = %2
  %12 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #12
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  br label %14

14:                                               ; preds = %9, %11
  %15 = phi i64 [ 0, %11 ], [ %10, %9 ]
  %16 = call %"class.base::HistogramBase"* @_ZN4base18StatisticsRecorder13FindHistogramENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %7, i64 %15) #12
  %17 = icmp eq %"class.base::HistogramBase"* %16, null
  br i1 %17, label %18, label %29

18:                                               ; preds = %14
  %19 = bitcast %"class.base::Pickle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #12
  %20 = bitcast %"class.base::Pickle"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 40, i1 false)
  call void @_ZN4base6PickleC1Ev(%"class.base::Pickle"* nonnull %4) #12
  call void @_ZNK4base13HistogramBase13SerializeInfoEPNS_6PickleE(%"class.base::HistogramBase"* %1, %"class.base::Pickle"* nonnull %4) #12
  %21 = bitcast %"class.base::PickleIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #12
  %22 = bitcast %"class.base::PickleIterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"* nonnull %5, %"class.base::Pickle"* nonnull dereferenceable(40) %4) #12
  %23 = call %"class.base::HistogramBase"* @_ZN4base24DeserializeHistogramInfoEPNS_14PickleIteratorE(%"class.base::PickleIterator"* nonnull %5) #12
  %24 = icmp eq %"class.base::HistogramBase"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %18
  %26 = call %"class.base::HistogramBase"* @_ZN4base18StatisticsRecorder25RegisterOrDeleteDuplicateEPNS_13HistogramBaseE(%"class.base::HistogramBase"* nonnull %23) #12
  br label %27

27:                                               ; preds = %18, %25
  %28 = phi %"class.base::HistogramBase"* [ %26, %25 ], [ null, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #12
  call void @_ZN4base6PickleD1Ev(%"class.base::Pickle"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #12
  br label %29

29:                                               ; preds = %14, %27
  %30 = phi %"class.base::HistogramBase"* [ %28, %27 ], [ %16, %14 ]
  ret %"class.base::HistogramBase"* %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base28PersistentHistogramAllocator44MergeHistogramFinalDeltaToStatisticsRecorderEPKNS_13HistogramBaseE(%"class.base::PersistentHistogramAllocator"* nocapture readnone, %"class.base::HistogramBase"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.base::HistogramBase"* @_ZN4base28PersistentHistogramAllocator38GetOrCreateStatisticsRecorderHistogramEPKNS_13HistogramBaseE(%"class.base::PersistentHistogramAllocator"* undef, %"class.base::HistogramBase"* %1)
  %4 = icmp eq %"class.base::HistogramBase"* %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.base::HistogramBase"* %1 to %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)***
  %7 = load %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)**, %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)*, %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)** %7, i64 13
  %9 = load %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)*, %"class.base::HistogramSamples"* (%"class.base::HistogramBase"*)** %8, align 8
  %10 = tail call %"class.base::HistogramSamples"* %9(%"class.base::HistogramBase"* %1) #12
  %11 = bitcast %"class.base::HistogramBase"* %3 to void (%"class.base::HistogramBase"*, %"class.base::HistogramSamples"*)***
  %12 = load void (%"class.base::HistogramBase"*, %"class.base::HistogramSamples"*)**, void (%"class.base::HistogramBase"*, %"class.base::HistogramSamples"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::HistogramBase"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramBase"*, %"class.base::HistogramSamples"*)** %12, i64 8
  %14 = load void (%"class.base::HistogramBase"*, %"class.base::HistogramSamples"*)*, void (%"class.base::HistogramBase"*, %"class.base::HistogramSamples"*)** %13, align 8
  tail call void %14(%"class.base::HistogramBase"* nonnull %3, %"class.base::HistogramSamples"* dereferenceable(16) %10) #12
  %15 = icmp eq %"class.base::HistogramSamples"* %10, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %5
  %17 = bitcast %"class.base::HistogramSamples"* %10 to void (%"class.base::HistogramSamples"*)***
  %18 = load void (%"class.base::HistogramSamples"*)**, void (%"class.base::HistogramSamples"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*)** %18, i64 1
  %20 = load void (%"class.base::HistogramSamples"*)*, void (%"class.base::HistogramSamples"*)** %19, align 8
  tail call void %20(%"class.base::HistogramSamples"* nonnull %10) #12
  br label %21

21:                                               ; preds = %16, %5, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::PersistentSampleMapRecords"* @_ZN4base28PersistentHistogramAllocator19UseSampleMapRecordsEmPKv(%"class.base::PersistentHistogramAllocator"*, i64, i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 2, i32 3
  %6 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %6) #12
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !2

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %10) #12
  br label %11

11:                                               ; preds = %3, %9
  %12 = tail call %"class.base::PersistentSampleMapRecords"* @_ZN4base36PersistentSparseHistogramDataManager30GetSampleMapRecordsWhileLockedEm(%"class.base::PersistentSparseHistogramDataManager"* %4, i64 %1) #12
  %13 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %12, i64 0, i32 2
  store i8* %2, i8** %13, align 8
  %14 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %12, i64 0, i32 3
  store i64 0, i64* %14, align 8
  %15 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #12
  ret %"class.base::PersistentSampleMapRecords"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base28PersistentHistogramAllocator24CreateTrackingHistogramsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::PersistentHistogramAllocator"* nocapture readonly, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %4, align 8
  tail call void @_ZN4base25PersistentMemoryAllocator24CreateTrackingHistogramsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::PersistentMemoryAllocator"* %5, i8* %1, i64 %2) #12
  ret void
}

declare void @_ZN4base25PersistentMemoryAllocator24CreateTrackingHistogramsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::PersistentMemoryAllocator"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base28PersistentHistogramAllocator24UpdateTrackingHistogramsEv(%"class.base::PersistentHistogramAllocator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %2, align 8
  tail call void @_ZN4base25PersistentMemoryAllocator24UpdateTrackingHistogramsEv(%"class.base::PersistentMemoryAllocator"* %3) #12
  ret void
}

declare void @_ZN4base25PersistentMemoryAllocator24UpdateTrackingHistogramsEv(%"class.base::PersistentMemoryAllocator"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base28PersistentHistogramAllocator35ClearLastCreatedReferenceForTestingEv(%"class.base::PersistentHistogramAllocator"*) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %0, i64 0, i32 3
  store atomic volatile i32 0, i32* %2 monotonic, align 4
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base15SparseHistogram16PersistentCreateEPNS_28PersistentHistogramAllocatorEPKcPNS_16HistogramSamples8MetadataES7_(%"class.base::PersistentHistogramAllocator"*, i8*, %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase8SetFlagsEi(%"class.base::HistogramBase"*, i32) local_unnamed_addr #1

declare %"class.base::BucketRanges"* @_ZN4base18StatisticsRecorder31RegisterOrDeleteDuplicateRangesEPKNS_12BucketRangesE(%"class.base::BucketRanges"*) local_unnamed_addr #1

declare void @_ZN4base27DelayedPersistentAllocationC1EPNS_25PersistentMemoryAllocatorEPijmb(%"class.base::DelayedPersistentAllocation"*, %"class.base::PersistentMemoryAllocator"*, i32*, i32, i64, i1 zeroext) unnamed_addr #1

declare void @_ZN4base27DelayedPersistentAllocationC1EPNS_25PersistentMemoryAllocatorEPijmmb(%"class.base::DelayedPersistentAllocation"*, %"class.base::PersistentMemoryAllocator"*, i32*, i32, i64, i64, i1 zeroext) unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base9Histogram16PersistentCreateEPKciiPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(i8*, i32, i32, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram16PersistentCreateEPKciiPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(i8*, i32, i32, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram16PersistentCreateEPKcPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(i8*, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base15CustomHistogram16PersistentCreateEPKcPKNS_12BucketRangesERKNS_27DelayedPersistentAllocationES8_PNS_16HistogramSamples8MetadataESB_(i8*, %"class.base::BucketRanges"*, %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"class.base::DelayedPersistentAllocation"* dereferenceable(32), %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base27DelayedPersistentAllocationD1Ev(%"class.base::DelayedPersistentAllocation"*) unnamed_addr #6

declare %"class.base::HistogramBase"* @_ZN4base18StatisticsRecorder13FindHistogramENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4base6PickleC1Ev(%"class.base::Pickle"*) unnamed_addr #1

declare void @_ZNK4base13HistogramBase13SerializeInfoEPNS_6PickleE(%"class.base::HistogramBase"*, %"class.base::Pickle"*) local_unnamed_addr #1

declare void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"*, %"class.base::Pickle"* dereferenceable(40)) unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base24DeserializeHistogramInfoEPNS_14PickleIteratorE(%"class.base::PickleIterator"*) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base18StatisticsRecorder25RegisterOrDeleteDuplicateEPNS_13HistogramBaseE(%"class.base::HistogramBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base6PickleD1Ev(%"class.base::Pickle"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base24GlobalHistogramAllocatorD2Ev(%"class.base::GlobalHistogramAllocator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base24GlobalHistogramAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 2
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %3) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base28PersistentHistogramAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 2, i32 3, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %4) #12
  %5 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 2, i32 2, i32 0
  %6 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN4base26PersistentSampleMapRecordsENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %5, %"class.std::__1::__tree_node"* %8) #12
  %9 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %9, align 8
  store %"class.base::PersistentMemoryAllocator"* null, %"class.base::PersistentMemoryAllocator"** %9, align 8
  %11 = icmp eq %"class.base::PersistentMemoryAllocator"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.base::PersistentMemoryAllocator"* %10 to void (%"class.base::PersistentMemoryAllocator"*)***
  %14 = load void (%"class.base::PersistentMemoryAllocator"*)**, void (%"class.base::PersistentMemoryAllocator"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.base::PersistentMemoryAllocator"*)*, void (%"class.base::PersistentMemoryAllocator"*)** %14, i64 1
  %16 = load void (%"class.base::PersistentMemoryAllocator"*)*, void (%"class.base::PersistentMemoryAllocator"*)** %15, align 8
  tail call void %16(%"class.base::PersistentMemoryAllocator"* nonnull %10) #12
  br label %17

17:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base24GlobalHistogramAllocatorD0Ev(%"class.base::GlobalHistogramAllocator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base24GlobalHistogramAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 2
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %3) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base28PersistentHistogramAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 2, i32 3, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %4) #12
  %5 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 2, i32 2, i32 0
  %6 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN4base26PersistentSampleMapRecordsENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %5, %"class.std::__1::__tree_node"* %8) #12
  %9 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %9, align 8
  store %"class.base::PersistentMemoryAllocator"* null, %"class.base::PersistentMemoryAllocator"** %9, align 8
  %11 = icmp eq %"class.base::PersistentMemoryAllocator"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.base::PersistentMemoryAllocator"* %10 to void (%"class.base::PersistentMemoryAllocator"*)***
  %14 = load void (%"class.base::PersistentMemoryAllocator"*)**, void (%"class.base::PersistentMemoryAllocator"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.base::PersistentMemoryAllocator"*)*, void (%"class.base::PersistentMemoryAllocator"*)** %14, i64 1
  %16 = load void (%"class.base::PersistentMemoryAllocator"*)*, void (%"class.base::PersistentMemoryAllocator"*)** %15, align 8
  tail call void %16(%"class.base::PersistentMemoryAllocator"* nonnull %10) #12
  br label %17

17:                                               ; preds = %1, %12
  %18 = bitcast %"class.base::GlobalHistogramAllocator"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base24GlobalHistogramAllocator26CreateWithPersistentMemoryEPvmmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64, i64, i64, i8*, i64) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = tail call i8* @_Znwm(i64 160) #13
  %10 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10)
  %11 = tail call i8* @_Znwm(i64 72) #13
  %12 = bitcast i8* %11 to %"class.base::PersistentMemoryAllocator"*
  %13 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  store i8* %4, i8** %13, align 8
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  store i64 %5, i64* %14, align 8
  tail call void @_ZN4base25PersistentMemoryAllocatorC1EPvmmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::PersistentMemoryAllocator"* nonnull %12, i8* %0, i64 %1, i64 %2, i64 %3, %"class.base::BasicStringPiece"* nonnull byval(%"class.base::BasicStringPiece") align 8 %8, i1 zeroext false) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10)
  %15 = ptrtoint i8* %11 to i64
  %16 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base28PersistentHistogramAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds i8, i8* %9, i64 8
  %18 = bitcast i8* %17 to i64*
  store i64 %15, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %9, i64 16
  %20 = bitcast i8* %19 to i8**
  store i8* %11, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %9, i64 24
  %22 = bitcast i8* %21 to %"class.base::PersistentMemoryAllocator::Iterator"*
  tail call void @_ZN4base25PersistentMemoryAllocator8IteratorC1EPKS0_(%"class.base::PersistentMemoryAllocator::Iterator"* %22, %"class.base::PersistentMemoryAllocator"* nonnull %12) #12
  %23 = getelementptr inbounds i8, i8* %9, i64 48
  %24 = getelementptr inbounds i8, i8* %9, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #12
  %25 = bitcast i8* %24 to i8**
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %9, i64 64
  %27 = bitcast i8* %26 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %27) #12
  %28 = getelementptr inbounds i8, i8* %9, i64 104
  %29 = bitcast i8* %28 to i32*
  store i32 0, i32* %29, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base24GlobalHistogramAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %30 = getelementptr inbounds i8, i8* %9, i64 112
  %31 = bitcast i8* %30 to i8**
  store i8* %9, i8** %31, align 8
  %32 = getelementptr inbounds i8, i8* %9, i64 120
  %33 = bitcast i8* %32 to %"class.base::PersistentMemoryAllocator::Iterator"*
  %34 = bitcast i8* %17 to %"class.base::PersistentMemoryAllocator"**
  %35 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %34, align 8
  tail call void @_ZN4base25PersistentMemoryAllocator8IteratorC1EPKS0_(%"class.base::PersistentMemoryAllocator::Iterator"* %33, %"class.base::PersistentMemoryAllocator"* %35) #12
  %36 = getelementptr inbounds i8, i8* %9, i64 136
  %37 = bitcast i8* %36 to %"class.base::FilePath"*
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %37) #12
  %38 = load atomic i64, i64* @_ZN4base12_GLOBAL__N_121g_histogram_allocatorE monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %6
  %41 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0), i32 858, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.7, i64 0, i64 0)) #12
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #12
  br label %43

43:                                               ; preds = %6, %40
  %44 = ptrtoint i8* %9 to i64
  store atomic volatile i64 %44, i64* @_ZN4base12_GLOBAL__N_121g_histogram_allocatorE release, align 8
  %45 = call i64 @_ZN4base18StatisticsRecorder17GetHistogramCountEv() #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base24GlobalHistogramAllocator3SetENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::GlobalHistogramAllocator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = load atomic i64, i64* @_ZN4base12_GLOBAL__N_121g_histogram_allocatorE monotonic, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0), i32 858, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.7, i64 0, i64 0)) #12
  %7 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  br label %8

8:                                                ; preds = %5, %1
  %9 = ptrtoint %"class.base::GlobalHistogramAllocator"* %0 to i64
  store atomic volatile i64 %9, i64* @_ZN4base12_GLOBAL__N_121g_histogram_allocatorE release, align 8
  %10 = call i64 @_ZN4base18StatisticsRecorder17GetHistogramCountEv() #12
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base24GlobalHistogramAllocator21CreateWithLocalMemoryEmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i64, i64, i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = tail call i8* @_Znwm(i64 160) #13
  %7 = tail call i8* @_Znwm(i64 72) #13
  %8 = bitcast i8* %7 to %"class.base::LocalPersistentMemoryAllocator"*
  tail call void @_ZN4base30LocalPersistentMemoryAllocatorC1EmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::LocalPersistentMemoryAllocator"* nonnull %8, i64 %0, i64 %1, i8* %2, i64 %3) #12
  %9 = ptrtoint i8* %7 to i64
  %10 = bitcast i8* %7 to %"class.base::PersistentMemoryAllocator"*
  %11 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base28PersistentHistogramAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 8
  %13 = bitcast i8* %12 to i64*
  store i64 %9, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %6, i64 16
  %15 = bitcast i8* %14 to i8**
  store i8* %7, i8** %15, align 8
  %16 = getelementptr inbounds i8, i8* %6, i64 24
  %17 = bitcast i8* %16 to %"class.base::PersistentMemoryAllocator::Iterator"*
  tail call void @_ZN4base25PersistentMemoryAllocator8IteratorC1EPKS0_(%"class.base::PersistentMemoryAllocator::Iterator"* %17, %"class.base::PersistentMemoryAllocator"* nonnull %10) #12
  %18 = getelementptr inbounds i8, i8* %6, i64 48
  %19 = getelementptr inbounds i8, i8* %6, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #12
  %20 = bitcast i8* %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %6, i64 64
  %22 = bitcast i8* %21 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %22) #12
  %23 = getelementptr inbounds i8, i8* %6, i64 104
  %24 = bitcast i8* %23 to i32*
  store i32 0, i32* %24, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base24GlobalHistogramAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %25 = getelementptr inbounds i8, i8* %6, i64 112
  %26 = bitcast i8* %25 to i8**
  store i8* %6, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %6, i64 120
  %28 = bitcast i8* %27 to %"class.base::PersistentMemoryAllocator::Iterator"*
  %29 = bitcast i8* %12 to %"class.base::PersistentMemoryAllocator"**
  %30 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %29, align 8
  tail call void @_ZN4base25PersistentMemoryAllocator8IteratorC1EPKS0_(%"class.base::PersistentMemoryAllocator::Iterator"* %28, %"class.base::PersistentMemoryAllocator"* %30) #12
  %31 = getelementptr inbounds i8, i8* %6, i64 136
  %32 = bitcast i8* %31 to %"class.base::FilePath"*
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %32) #12
  %33 = load atomic i64, i64* @_ZN4base12_GLOBAL__N_121g_histogram_allocatorE monotonic, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %4
  %36 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0), i32 858, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.7, i64 0, i64 0)) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %35, %4
  %39 = ptrtoint i8* %6 to i64
  store atomic volatile i64 %39, i64* @_ZN4base12_GLOBAL__N_121g_histogram_allocatorE release, align 8
  %40 = call i64 @_ZN4base18StatisticsRecorder17GetHistogramCountEv() #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base24GlobalHistogramAllocator14CreateWithFileERKNS_8FilePathEmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* dereferenceable(24), i64, i64, i8*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.base::File", align 8
  %8 = alloca %"class.base::File", align 8
  %9 = alloca %"class.base::File", align 8
  %10 = alloca %"struct.base::MemoryMappedFile::Region", align 8
  %11 = tail call zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24) %0) #12
  %12 = bitcast %"class.base::File"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %12) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 56, i1 false)
  call void @_ZN4base4FileC1ERKNS_8FilePathEj(%"class.base::File"* nonnull %7, %"class.base::FilePath"* dereferenceable(24) %0, i32 32868) #12
  %13 = call i8* @_Znwm(i64 72) #13
  %14 = bitcast i8* %13 to %"class.base::MemoryMappedFile"*
  call void @_ZN4base16MemoryMappedFileC1Ev(%"class.base::MemoryMappedFile"* nonnull %14) #12
  br i1 %11, label %15, label %20

15:                                               ; preds = %5
  %16 = call i64 @_ZN4base4File9GetLengthEv(%"class.base::File"* nonnull %7) #12
  %17 = icmp sgt i64 %16, 0
  %18 = select i1 %17, i64 %16, i64 0
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %8, %"class.base::File"* nonnull dereferenceable(56) %7) #12
  %19 = call zeroext i1 @_ZN4base16MemoryMappedFile10InitializeENS_4FileENS0_6AccessE(%"class.base::MemoryMappedFile"* nonnull %14, %"class.base::File"* nonnull %8, i32 1) #12
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %8) #12
  br i1 %19, label %25, label %68

20:                                               ; preds = %5
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %9, %"class.base::File"* nonnull dereferenceable(56) %7) #12
  %21 = bitcast %"struct.base::MemoryMappedFile::Region"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"struct.base::MemoryMappedFile::Region", %"struct.base::MemoryMappedFile::Region"* %10, i64 0, i32 0
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %"struct.base::MemoryMappedFile::Region", %"struct.base::MemoryMappedFile::Region"* %10, i64 0, i32 1
  store i64 %1, i64* %23, align 8
  %24 = call zeroext i1 @_ZN4base16MemoryMappedFile10InitializeENS_4FileERKNS0_6RegionENS0_6AccessE(%"class.base::MemoryMappedFile"* nonnull %14, %"class.base::File"* nonnull %9, %"struct.base::MemoryMappedFile::Region"* nonnull dereferenceable(16) %10, i32 2) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #12
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %9) #12
  br i1 %24, label %25, label %68

25:                                               ; preds = %15, %20
  %26 = phi i64 [ %18, %15 ], [ %1, %20 ]
  %27 = call zeroext i1 @_ZN4base29FilePersistentMemoryAllocator16IsFileAcceptableERKNS_16MemoryMappedFileEb(%"class.base::MemoryMappedFile"* nonnull dereferenceable(72) %14, i1 zeroext true) #12
  br i1 %27, label %28, label %68

28:                                               ; preds = %25
  %29 = call i8* @_Znwm(i64 160) #13
  %30 = call i8* @_Znwm(i64 80) #13
  %31 = bitcast i8* %30 to %"class.base::FilePersistentMemoryAllocator"*
  call void @_ZN4base29FilePersistentMemoryAllocatorC1ENSt3__110unique_ptrINS_16MemoryMappedFileENS1_14default_deleteIS3_EEEEmmNS_16BasicStringPieceIcNS1_11char_traitsIcEEEEb(%"class.base::FilePersistentMemoryAllocator"* nonnull %31, %"class.base::MemoryMappedFile"* nonnull %14, i64 %26, i64 %2, i8* %3, i64 %4, i1 zeroext false) #12
  %32 = ptrtoint i8* %30 to i64
  %33 = bitcast i8* %30 to %"class.base::PersistentMemoryAllocator"*
  %34 = bitcast i8* %29 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base28PersistentHistogramAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds i8, i8* %29, i64 8
  %36 = bitcast i8* %35 to i64*
  store i64 %32, i64* %36, align 8
  %37 = getelementptr inbounds i8, i8* %29, i64 16
  %38 = bitcast i8* %37 to i8**
  store i8* %30, i8** %38, align 8
  %39 = getelementptr inbounds i8, i8* %29, i64 24
  %40 = bitcast i8* %39 to %"class.base::PersistentMemoryAllocator::Iterator"*
  call void @_ZN4base25PersistentMemoryAllocator8IteratorC1EPKS0_(%"class.base::PersistentMemoryAllocator::Iterator"* %40, %"class.base::PersistentMemoryAllocator"* nonnull %33) #12
  %41 = getelementptr inbounds i8, i8* %29, i64 48
  %42 = getelementptr inbounds i8, i8* %29, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #12
  %43 = bitcast i8* %42 to i8**
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds i8, i8* %29, i64 64
  %45 = bitcast i8* %44 to %"class.base::internal::LockImpl"*
  call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %45) #12
  %46 = getelementptr inbounds i8, i8* %29, i64 104
  %47 = bitcast i8* %46 to i32*
  store i32 0, i32* %47, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base24GlobalHistogramAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %48 = getelementptr inbounds i8, i8* %29, i64 112
  %49 = bitcast i8* %48 to i8**
  store i8* %29, i8** %49, align 8
  %50 = getelementptr inbounds i8, i8* %29, i64 120
  %51 = bitcast i8* %50 to %"class.base::PersistentMemoryAllocator::Iterator"*
  %52 = bitcast i8* %35 to %"class.base::PersistentMemoryAllocator"**
  %53 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %52, align 8
  call void @_ZN4base25PersistentMemoryAllocator8IteratorC1EPKS0_(%"class.base::PersistentMemoryAllocator::Iterator"* %51, %"class.base::PersistentMemoryAllocator"* %53) #12
  %54 = getelementptr inbounds i8, i8* %29, i64 136
  %55 = bitcast i8* %54 to %"class.base::FilePath"*
  call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %55) #12
  %56 = load atomic i64, i64* @_ZN4base12_GLOBAL__N_121g_histogram_allocatorE monotonic, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %28
  %59 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0), i32 858, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.7, i64 0, i64 0)) #12
  %60 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #12
  br label %61

61:                                               ; preds = %28, %58
  %62 = ptrtoint i8* %29 to i64
  store atomic volatile i64 %62, i64* @_ZN4base12_GLOBAL__N_121g_histogram_allocatorE release, align 8
  %63 = call i64 @_ZN4base18StatisticsRecorder17GetHistogramCountEv() #12
  %64 = load atomic i64, i64* @_ZN4base12_GLOBAL__N_121g_histogram_allocatorE acquire, align 8
  %65 = inttoptr i64 %64 to %"class.base::GlobalHistogramAllocator"*
  %66 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %65, i64 0, i32 2
  %67 = call dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSERKS0_(%"class.base::FilePath"* %66, %"class.base::FilePath"* dereferenceable(24) %0) #12
  br label %69

68:                                               ; preds = %25, %20, %15
  call void @_ZN4base16MemoryMappedFileD1Ev(%"class.base::MemoryMappedFile"* nonnull %14) #12
  call void @_ZdlPv(i8* nonnull %13) #13
  br label %69

69:                                               ; preds = %61, %68
  %70 = phi i1 [ true, %61 ], [ false, %68 ]
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %12) #12
  ret i1 %70
}

declare zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base4FileC1ERKNS_8FilePathEj(%"class.base::File"*, %"class.base::FilePath"* dereferenceable(24), i32) unnamed_addr #1

declare void @_ZN4base16MemoryMappedFileC1Ev(%"class.base::MemoryMappedFile"*) unnamed_addr #1

declare i64 @_ZN4base4File9GetLengthEv(%"class.base::File"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base16MemoryMappedFile10InitializeENS_4FileENS0_6AccessE(%"class.base::MemoryMappedFile"*, %"class.base::File"*, i32) local_unnamed_addr #1

declare void @_ZN4base4FileC1EOS0_(%"class.base::File"*, %"class.base::File"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base4FileD1Ev(%"class.base::File"*) unnamed_addr #6

declare zeroext i1 @_ZN4base16MemoryMappedFile10InitializeENS_4FileERKNS0_6RegionENS0_6AccessE(%"class.base::MemoryMappedFile"*, %"class.base::File"*, %"struct.base::MemoryMappedFile::Region"* dereferenceable(16), i32) local_unnamed_addr #1

declare zeroext i1 @_ZN4base29FilePersistentMemoryAllocator16IsFileAcceptableERKNS_16MemoryMappedFileEb(%"class.base::MemoryMappedFile"* dereferenceable(72), i1 zeroext) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.base::GlobalHistogramAllocator"* @_ZN4base24GlobalHistogramAllocator3GetEv() local_unnamed_addr #5 align 2 {
  %1 = load atomic i64, i64* @_ZN4base12_GLOBAL__N_121g_histogram_allocatorE acquire, align 8
  %2 = inttoptr i64 %1 to %"class.base::GlobalHistogramAllocator"*
  ret %"class.base::GlobalHistogramAllocator"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base24GlobalHistogramAllocator21SetPersistentLocationERKNS_8FilePathE(%"class.base::GlobalHistogramAllocator"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 2
  %4 = tail call dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSERKS0_(%"class.base::FilePath"* %3, %"class.base::FilePath"* dereferenceable(24) %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base24GlobalHistogramAllocator20CreateWithActiveFileERKNS_8FilePathES3_S3_mmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* dereferenceable(24), %"class.base::FilePath"* dereferenceable(24), %"class.base::FilePath"* dereferenceable(24), i64, i64, %"class.base::BasicStringPiece"* nocapture readonly byval(%"class.base::BasicStringPiece") align 8) local_unnamed_addr #0 align 2 {
  %7 = tail call zeroext i1 @_ZN4base11ReplaceFileERKNS_8FilePathES2_PNS_4File5ErrorE(%"class.base::FilePath"* dereferenceable(24) %1, %"class.base::FilePath"* dereferenceable(24) %0, i32* null) #12
  br i1 %7, label %10, label %8

8:                                                ; preds = %6
  %9 = tail call zeroext i1 @_ZN4base10DeleteFileERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24) %0) #12
  br label %10

10:                                               ; preds = %8, %6
  %11 = tail call zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24) %1) #12
  br i1 %11, label %30, label %12

12:                                               ; preds = %10
  %13 = bitcast %"class.base::FilePath"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %12
  %23 = tail call zeroext i1 @_ZN4base11ReplaceFileERKNS_8FilePathES2_PNS_4File5ErrorE(%"class.base::FilePath"* dereferenceable(24) %2, %"class.base::FilePath"* dereferenceable(24) %1, i32* null) #12
  br label %24

24:                                               ; preds = %22, %12
  %25 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = tail call zeroext i1 @_ZN4base24GlobalHistogramAllocator14CreateWithFileERKNS_8FilePathEmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* dereferenceable(24) %1, i64 %3, i64 %4, i8* %26, i64 %28)
  br label %30

30:                                               ; preds = %10, %24
  %31 = phi i1 [ %29, %24 ], [ false, %10 ]
  ret i1 %31
}

declare zeroext i1 @_ZN4base11ReplaceFileERKNS_8FilePathES2_PNS_4File5ErrorE(%"class.base::FilePath"* dereferenceable(24), %"class.base::FilePath"* dereferenceable(24), i32*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base10DeleteFileERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base24GlobalHistogramAllocator25CreateWithActiveFileInDirERKNS_8FilePathEmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* dereferenceable(24), i64, i64, i8*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::FilePath", align 8
  %7 = alloca %"class.base::FilePath", align 8
  %8 = alloca %"class.base::FilePath", align 8
  %9 = alloca %"class.base::FilePath", align 8
  %10 = alloca %"class.base::FilePath", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = bitcast %"class.base::FilePath"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = bitcast %"class.base::FilePath"* %7 to i8*
  %15 = bitcast %"class.base::FilePath"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12, !noalias !43
  call void @_ZNK4base8FilePath11AppendASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %7, %"class.base::FilePath"* %0, i8* %3, i64 %4) #12, !noalias !43
  %16 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base25PersistentMemoryAllocator14kFileExtensionE, i64 0, i64 0)) #12, !noalias !43
  call void @_ZNK4base8FilePath12AddExtensionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %8, %"class.base::FilePath"* nonnull %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base25PersistentMemoryAllocator14kFileExtensionE, i64 0, i64 0), i64 %16) #12
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12, !noalias !43
  %17 = bitcast %"class.base::FilePath"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #12
  %18 = bitcast %"class.base::FilePath"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  call void @_ZN4base24GlobalHistogramAllocator30ConstructFilePathForActiveFileERKNS_8FilePathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %9, %"class.base::FilePath"* dereferenceable(24) %0, i8* %3, i64 %4)
  %19 = bitcast %"class.base::FilePath"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %22 = bitcast %"class.base::FilePath"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #12
  %23 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #12
  %24 = icmp ugt i64 %4, -17
  br i1 %24, label %25, label %27

25:                                               ; preds = %5
  %26 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %26) #14
  unreachable

27:                                               ; preds = %5
  %28 = icmp ult i64 %4, 23
  br i1 %28, label %37, label %29

29:                                               ; preds = %27
  %30 = add nuw i64 %4, 16
  %31 = and i64 %30, -16
  %32 = call i8* @_Znwm(i64 %31) #13
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %32, i8** %33, align 8, !alias.scope !46
  %34 = or i64 %31, -9223372036854775808
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %34, i64* %35, align 8, !alias.scope !46
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %4, i64* %36, align 8, !alias.scope !46
  br label %42

37:                                               ; preds = %27
  %38 = trunc i64 %4 to i8
  %39 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 %38, i8* %40, align 1, !alias.scope !46
  %41 = icmp eq i64 %4, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %37, %29
  %43 = phi i8* [ %32, %29 ], [ %23, %37 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %43, i8* align 1 %3, i64 %4, i1 false) #12
  br label %44

44:                                               ; preds = %37, %42
  %45 = phi i8* [ %23, %37 ], [ %43, %42 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 %4
  store i8 0, i8* %46, align 1
  %47 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #12, !noalias !49
  %48 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %48, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #12, !noalias !49
  %49 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %21
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = zext i8 %51 to i64
  %59 = select i1 %52, i64 %57, i64 %58
  %60 = bitcast %"class.base::FilePath"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #12, !noalias !52
  call void @_ZNK4base8FilePath11AppendASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %6, %"class.base::FilePath"* %0, i8* %55, i64 %59) #12, !noalias !52
  %61 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base25PersistentMemoryAllocator14kFileExtensionE, i64 0, i64 0)) #12, !noalias !52
  call void @_ZNK4base8FilePath12AddExtensionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %10, %"class.base::FilePath"* nonnull %6, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base25PersistentMemoryAllocator14kFileExtensionE, i64 0, i64 0), i64 %61) #12
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #12, !noalias !52
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %44
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %44, %64
  %67 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %73) #13
  br label %74

74:                                               ; preds = %66, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #12
  %75 = call zeroext i1 @_ZN4base11ReplaceFileERKNS_8FilePathES2_PNS_4File5ErrorE(%"class.base::FilePath"* nonnull dereferenceable(24) %9, %"class.base::FilePath"* nonnull dereferenceable(24) %8, i32* null) #12
  br i1 %75, label %78, label %76

76:                                               ; preds = %74
  %77 = call zeroext i1 @_ZN4base10DeleteFileERKNS_8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %8) #12
  br label %78

78:                                               ; preds = %76, %74
  %79 = call zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %9) #12
  br i1 %79, label %93, label %80

80:                                               ; preds = %78
  %81 = bitcast %"class.base::FilePath"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  %85 = load i64, i64* %20, align 8
  %86 = zext i8 %83 to i64
  %87 = select i1 %84, i64 %85, i64 %86
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %80
  %90 = call zeroext i1 @_ZN4base11ReplaceFileERKNS_8FilePathES2_PNS_4File5ErrorE(%"class.base::FilePath"* nonnull dereferenceable(24) %10, %"class.base::FilePath"* nonnull dereferenceable(24) %9, i32* null) #12
  br label %91

91:                                               ; preds = %89, %80
  %92 = call zeroext i1 @_ZN4base24GlobalHistogramAllocator14CreateWithFileERKNS_8FilePathEmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull dereferenceable(24) %9, i64 %1, i64 %2, i8* %3, i64 %4) #12
  br label %93

93:                                               ; preds = %78, %91
  %94 = phi i1 [ %92, %91 ], [ false, %78 ]
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #12
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #12
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  ret i1 %94
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base24GlobalHistogramAllocator17ConstructFilePathERKNS_8FilePathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* noalias sret, %"class.base::FilePath"* dereferenceable(24), i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::FilePath", align 8
  %6 = bitcast %"class.base::FilePath"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  call void @_ZNK4base8FilePath11AppendASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %5, %"class.base::FilePath"* %1, i8* %2, i64 %3) #12
  %7 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base25PersistentMemoryAllocator14kFileExtensionE, i64 0, i64 0)) #12
  call void @_ZNK4base8FilePath12AddExtensionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret %0, %"class.base::FilePath"* nonnull %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base25PersistentMemoryAllocator14kFileExtensionE, i64 0, i64 0), i64 %7) #12
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base24GlobalHistogramAllocator30ConstructFilePathForActiveFileERKNS_8FilePathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* noalias sret, %"class.base::FilePath"* dereferenceable(24), i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::FilePath", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #12
  %10 = icmp ugt i64 %3, -17
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %12) #14
  unreachable

13:                                               ; preds = %4
  %14 = icmp ult i64 %3, 23
  br i1 %14, label %23, label %15

15:                                               ; preds = %13
  %16 = add nuw i64 %3, 16
  %17 = and i64 %16, -16
  %18 = tail call i8* @_Znwm(i64 %17) #13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8, !alias.scope !55
  %20 = or i64 %17, -9223372036854775808
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %20, i64* %21, align 8, !alias.scope !55
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %22, align 8, !alias.scope !55
  br label %28

23:                                               ; preds = %13
  %24 = trunc i64 %3 to i8
  %25 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 %24, i8* %26, align 1, !alias.scope !55
  %27 = icmp eq i64 %3, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %23, %15
  %29 = phi i8* [ %18, %15 ], [ %9, %23 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* align 1 %2, i64 %3, i1 false) #12
  br label %30

30:                                               ; preds = %23, %28
  %31 = phi i8* [ %9, %23 ], [ %29, %28 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %3
  store i8 0, i8* %32, align 1
  %33 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #12, !noalias !58
  %34 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %34, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #12, !noalias !58
  %35 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = select i1 %38, i8* %40, i8* %8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = zext i8 %37 to i64
  %45 = select i1 %38, i64 %43, i64 %44
  %46 = bitcast %"class.base::FilePath"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #12, !noalias !61
  call void @_ZNK4base8FilePath11AppendASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %5, %"class.base::FilePath"* %1, i8* %41, i64 %45) #12, !noalias !61
  %47 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base25PersistentMemoryAllocator14kFileExtensionE, i64 0, i64 0)) #12, !noalias !61
  call void @_ZNK4base8FilePath12AddExtensionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret %0, %"class.base::FilePath"* nonnull %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base25PersistentMemoryAllocator14kFileExtensionE, i64 0, i64 0), i64 %47) #12
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #12, !noalias !61
  %48 = load i8, i8* %36, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %30
  %51 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %30, %50
  %53 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #13
  br label %60

60:                                               ; preds = %52, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  ret void
}

declare void @_ZNK4base8FilePath11AppendASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret, %"class.base::FilePath"*, i8*, i64) local_unnamed_addr #1

declare void @_ZNK4base8FilePath12AddExtensionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret, %"class.base::FilePath"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base24GlobalHistogramAllocator29ConstructFilePathForUploadDirERKNS_8FilePathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_4TimeEi(%"class.base::FilePath"* noalias sret, %"class.base::FilePath"* dereferenceable(24), i8*, i64, i64, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::FilePath", align 8
  %8 = alloca %"class.base::Time", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %8, i64 0, i32 0, i32 0
  store i64 %4, i64* %10, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = trunc i64 %3 to i32
  %13 = call i64 @_ZNK4base4Time7ToTimeTEv(%"class.base::Time"* nonnull %8) #12
  %14 = sext i32 %5 to i64
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i32 %12, i8* %2, i64 %13, i64 %14) #12
  %15 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = select i1 %18, i8* %20, i8* %11
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %17 to i64
  %25 = select i1 %18, i64 %23, i64 %24
  %26 = bitcast %"class.base::FilePath"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12, !noalias !64
  call void @_ZNK4base8FilePath11AppendASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %7, %"class.base::FilePath"* %1, i8* %21, i64 %25) #12, !noalias !64
  %27 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base25PersistentMemoryAllocator14kFileExtensionE, i64 0, i64 0)) #12, !noalias !64
  call void @_ZNK4base8FilePath12AddExtensionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret %0, %"class.base::FilePath"* nonnull %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base25PersistentMemoryAllocator14kFileExtensionE, i64 0, i64 0), i64 %27) #12
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12, !noalias !64
  %28 = load i8, i8* %16, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %6
  %31 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %31) #13
  br label %32

32:                                               ; preds = %6, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #1

declare i64 @_ZNK4base4Time7ToTimeTEv(%"class.base::Time"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base24GlobalHistogramAllocator29ConstructFilePathForUploadDirERKNS_8FilePathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* noalias sret, %"class.base::FilePath"* dereferenceable(24), i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = tail call i64 @_ZN4base4Time3NowEv() #12
  %6 = tail call i32 @_ZN4base16GetCurrentProcIdEv() #12
  tail call void @_ZN4base24GlobalHistogramAllocator29ConstructFilePathForUploadDirERKNS_8FilePathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_4TimeEi(%"class.base::FilePath"* sret %0, %"class.base::FilePath"* dereferenceable(24) %1, i8* %2, i64 %3, i64 %5, i32 %6)
  ret void
}

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #1

declare i32 @_ZN4base16GetCurrentProcIdEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base24GlobalHistogramAllocator13ParseFilePathERKNS_8FilePathEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPNS_4TimeEPi(%"class.base::FilePath"* dereferenceable(24), %"class.std::__1::basic_string"*, %"class.base::Time"*, i32*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::FilePath", align 8
  %7 = alloca %"class.std::__1::vector.89", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.base::FilePath"* %6 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  call void @_ZNK4base8FilePath8BaseNameEv(%"class.base::FilePath"* nonnull sret %6, %"class.base::FilePath"* %0) #12
  call void @_ZNK4base8FilePath12AsUTF8UnsafeEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.base::FilePath"* nonnull %6) #12
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  %16 = bitcast %"class.std::__1::vector.89"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.std::__1::vector.89", %"class.std::__1::vector.89"* %7, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.89", %"class.std::__1::vector.89"* %7, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = bitcast %"class.std::__1::vector.89"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = load i8, i8* %20, align 1
  %23 = icmp slt i8 %22, 0
  %24 = load i8*, i8** %12, align 8
  %25 = select i1 %23, i8* %24, i8* %11
  %26 = load i64, i64* %13, align 8
  %27 = zext i8 %22 to i64
  %28 = select i1 %23, i64 %26, i64 %27
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.89"* nonnull sret %7, i8* %25, i64 %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i64 2, i32 0, i32 0) #12
  %29 = bitcast %"class.base::BasicStringPiece"** %18 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector.89"* %7 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = icmp eq i64 %33, 64
  %35 = inttoptr i64 %32 to %"class.base::BasicStringPiece"*
  br i1 %34, label %36, label %109

36:                                               ; preds = %4
  %37 = icmp eq %"class.std::__1::basic_string"* %1, null
  br i1 %37, label %76, label %38

38:                                               ; preds = %36
  %39 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %35, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8, !noalias !67
  %42 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %35, i64 0, i32 1
  %43 = load i64, i64* %42, align 8, !noalias !67
  %44 = icmp ugt i64 %43, -17
  br i1 %44, label %45, label %47

45:                                               ; preds = %38
  %46 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %46) #14
  unreachable

47:                                               ; preds = %38
  %48 = icmp ult i64 %43, 23
  br i1 %48, label %57, label %49

49:                                               ; preds = %47
  %50 = add nuw i64 %43, 16
  %51 = and i64 %50, -16
  %52 = call i8* @_Znwm(i64 %51) #13
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %52, i8** %53, align 8, !alias.scope !67
  %54 = or i64 %51, -9223372036854775808
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %54, i64* %55, align 8, !alias.scope !67
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %43, i64* %56, align 8, !alias.scope !67
  br label %62

57:                                               ; preds = %47
  %58 = trunc i64 %43 to i8
  %59 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  store i8 %58, i8* %60, align 1, !alias.scope !67
  %61 = icmp eq i64 %43, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %57, %49
  %63 = phi i8* [ %52, %49 ], [ %39, %57 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %63, i8* align 1 %41, i64 %43, i1 false) #12
  br label %64

64:                                               ; preds = %57, %62
  %65 = phi i8* [ %39, %57 ], [ %63, %62 ]
  %66 = getelementptr inbounds i8, i8* %65, i64 %43
  store i8 0, i8* %66, align 1
  %67 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %73) #13
  br label %74

74:                                               ; preds = %71, %64
  %75 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %75, i8* nonnull align 8 %39, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #12
  br label %76

76:                                               ; preds = %36, %74
  %77 = icmp eq %"class.base::Time"* %2, null
  br i1 %77, label %90, label %78

78:                                               ; preds = %76
  %79 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #12
  store i64 -6148914691236517206, i64* %9, align 8
  %80 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %17, align 8
  %81 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %80, i64 1, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %80, i64 1, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = call zeroext i1 @_ZN4base16HexStringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8* %82, i64 %84, i64* nonnull %9) #12
  br i1 %85, label %86, label %103

86:                                               ; preds = %78
  %87 = load i64, i64* %9, align 8
  %88 = call i64 @_ZN4base4Time9FromTimeTEl(i64 %87) #12
  %89 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  store i64 %88, i64* %89, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #12
  br label %90

90:                                               ; preds = %86, %76
  %91 = icmp eq i32* %3, null
  br i1 %91, label %106, label %92

92:                                               ; preds = %90
  %93 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #12
  store i64 -6148914691236517206, i64* %10, align 8
  %94 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %17, align 8
  %95 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %94, i64 2, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %94, i64 2, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = call zeroext i1 @_ZN4base16HexStringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8* %96, i64 %98, i64* nonnull %10) #12
  br i1 %99, label %100, label %103

100:                                              ; preds = %92
  %101 = load i64, i64* %10, align 8
  %102 = trunc i64 %101 to i32
  store i32 %102, i32* %3, align 4
  br label %103

103:                                              ; preds = %92, %78, %100
  %104 = phi i8* [ %93, %100 ], [ %79, %78 ], [ %93, %92 ]
  %105 = phi i1 [ true, %100 ], [ false, %78 ], [ false, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #12
  br label %106

106:                                              ; preds = %103, %90
  %107 = phi i1 [ true, %90 ], [ %105, %103 ]
  %108 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %17, align 8
  br label %109

109:                                              ; preds = %106, %4
  %110 = phi %"class.base::BasicStringPiece"* [ %108, %106 ], [ %35, %4 ]
  %111 = phi i1 [ %107, %106 ], [ false, %4 ]
  %112 = icmp eq %"class.base::BasicStringPiece"* %110, null
  br i1 %112, label %116, label %113

113:                                              ; preds = %109
  %114 = ptrtoint %"class.base::BasicStringPiece"* %110 to i64
  store i64 %114, i64* %29, align 8
  %115 = bitcast %"class.base::BasicStringPiece"* %110 to i8*
  call void @_ZdlPv(i8* %115) #13
  br label %116

116:                                              ; preds = %109, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  %117 = load i8, i8* %20, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %116
  %120 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %120) #13
  br label %121

121:                                              ; preds = %116, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  ret i1 %111
}

declare void @_ZNK4base8FilePath8BaseNameEv(%"class.base::FilePath"* sret, %"class.base::FilePath"*) local_unnamed_addr #1

declare void @_ZNK4base8FilePath12AsUTF8UnsafeEv(%"class.std::__1::basic_string"* sret, %"class.base::FilePath"*) local_unnamed_addr #1

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.89"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN4base16HexStringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8*, i64, i64*) local_unnamed_addr #1

declare i64 @_ZN4base4Time9FromTimeTEl(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base24GlobalHistogramAllocator15CreateSpareFileERKNS_8FilePathEm(%"class.base::FilePath"* dereferenceable(24), i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::FilePath", align 8
  %4 = alloca %"class.base::File", align 8
  %5 = alloca %"class.base::MemoryMappedFile", align 8
  %6 = alloca %"class.base::File", align 8
  %7 = alloca %"struct.base::MemoryMappedFile::Region", align 8
  %8 = bitcast %"class.base::FilePath"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = bitcast %"class.base::FilePath"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZNK4base8FilePath12AddExtensionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %3, %"class.base::FilePath"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 4) #12
  %10 = bitcast %"class.base::File"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  call void @_ZN4base4FileC1ERKNS_8FilePathEj(%"class.base::File"* nonnull %4, %"class.base::FilePath"* nonnull dereferenceable(24) %3, i32 104) #12
  %11 = call zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"* nonnull %4) #12
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #12
  br label %21

13:                                               ; preds = %2
  %14 = bitcast %"class.base::MemoryMappedFile"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 72, i1 false)
  call void @_ZN4base16MemoryMappedFileC1Ev(%"class.base::MemoryMappedFile"* nonnull %5) #12
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %6, %"class.base::File"* nonnull dereferenceable(56) %4) #12
  %15 = bitcast %"struct.base::MemoryMappedFile::Region"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"struct.base::MemoryMappedFile::Region", %"struct.base::MemoryMappedFile::Region"* %7, i64 0, i32 0
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"struct.base::MemoryMappedFile::Region", %"struct.base::MemoryMappedFile::Region"* %7, i64 0, i32 1
  store i64 %1, i64* %17, align 8
  %18 = call zeroext i1 @_ZN4base16MemoryMappedFile10InitializeENS_4FileERKNS0_6RegionENS0_6AccessE(%"class.base::MemoryMappedFile"* nonnull %5, %"class.base::File"* nonnull %6, %"struct.base::MemoryMappedFile::Region"* nonnull dereferenceable(16) %7, i32 2) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %6) #12
  call void @_ZN4base16MemoryMappedFileD1Ev(%"class.base::MemoryMappedFile"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %14) #12
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #12
  br i1 %18, label %19, label %21

19:                                               ; preds = %13
  %20 = call zeroext i1 @_ZN4base11ReplaceFileERKNS_8FilePathES2_PNS_4File5ErrorE(%"class.base::FilePath"* nonnull dereferenceable(24) %3, %"class.base::FilePath"* dereferenceable(24) %0, i32* null) #12
  br i1 %20, label %23, label %21

21:                                               ; preds = %12, %13, %19
  %22 = call zeroext i1 @_ZN4base10DeleteFileERKNS_8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %3) #12
  br label %23

23:                                               ; preds = %21, %19
  %24 = phi i1 [ false, %21 ], [ true, %19 ]
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  ret i1 %24
}

declare zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base16MemoryMappedFileD1Ev(%"class.base::MemoryMappedFile"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base24GlobalHistogramAllocator28CreateWithSharedMemoryRegionERKNS_26WritableSharedMemoryRegionE(%"class.base::WritableSharedMemoryRegion"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::WritableSharedMemoryMapping", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::WritableSharedMemoryMapping", align 8
  %5 = bitcast %"class.base::WritableSharedMemoryMapping"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %4, i64 0, i32 0, i32 1
  %7 = bitcast %"class.base::WritableSharedMemoryMapping"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  call void @_ZNK4base26WritableSharedMemoryRegion3MapEv(%"class.base::WritableSharedMemoryMapping"* nonnull sret %4, %"class.base::WritableSharedMemoryRegion"* %0) #12
  %8 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %4, i64 0, i32 0
  %9 = load i8*, i8** %6, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %51, label %11

11:                                               ; preds = %1
  %12 = call zeroext i1 @_ZN4base39WritableSharedPersistentMemoryAllocator24IsSharedMemoryAcceptableERKNS_27WritableSharedMemoryMappingE(%"class.base::WritableSharedMemoryMapping"* nonnull dereferenceable(48) %4) #12
  br i1 %12, label %13, label %51

13:                                               ; preds = %11
  %14 = call i8* @_Znwm(i64 160) #13
  %15 = bitcast %"class.base::WritableSharedMemoryMapping"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15)
  %16 = call i8* @_Znwm(i64 120) #13
  %17 = bitcast i8* %16 to %"class.base::WritableSharedPersistentMemoryAllocator"*
  call void @_ZN4base27WritableSharedMemoryMappingC1EOS0_(%"class.base::WritableSharedMemoryMapping"* nonnull %2, %"class.base::WritableSharedMemoryMapping"* nonnull dereferenceable(48) %4) #12
  call void @_ZN4base39WritableSharedPersistentMemoryAllocatorC1ENS_27WritableSharedMemoryMappingEmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::WritableSharedPersistentMemoryAllocator"* nonnull %17, %"class.base::WritableSharedMemoryMapping"* nonnull %2, i64 0, i8* null, i64 0) #12
  %18 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %2, i64 0, i32 0
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15)
  %19 = ptrtoint i8* %16 to i64
  %20 = bitcast i8* %16 to %"class.base::PersistentMemoryAllocator"*
  %21 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base28PersistentHistogramAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds i8, i8* %14, i64 8
  %23 = bitcast i8* %22 to i64*
  store i64 %19, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %14, i64 16
  %25 = bitcast i8* %24 to i8**
  store i8* %16, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %14, i64 24
  %27 = bitcast i8* %26 to %"class.base::PersistentMemoryAllocator::Iterator"*
  call void @_ZN4base25PersistentMemoryAllocator8IteratorC1EPKS0_(%"class.base::PersistentMemoryAllocator::Iterator"* %27, %"class.base::PersistentMemoryAllocator"* nonnull %20) #12
  %28 = getelementptr inbounds i8, i8* %14, i64 48
  %29 = getelementptr inbounds i8, i8* %14, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #12
  %30 = bitcast i8* %29 to i8**
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds i8, i8* %14, i64 64
  %32 = bitcast i8* %31 to %"class.base::internal::LockImpl"*
  call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %32) #12
  %33 = getelementptr inbounds i8, i8* %14, i64 104
  %34 = bitcast i8* %33 to i32*
  store i32 0, i32* %34, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base24GlobalHistogramAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %35 = getelementptr inbounds i8, i8* %14, i64 112
  %36 = bitcast i8* %35 to i8**
  store i8* %14, i8** %36, align 8
  %37 = getelementptr inbounds i8, i8* %14, i64 120
  %38 = bitcast i8* %37 to %"class.base::PersistentMemoryAllocator::Iterator"*
  %39 = bitcast i8* %22 to %"class.base::PersistentMemoryAllocator"**
  %40 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %39, align 8
  call void @_ZN4base25PersistentMemoryAllocator8IteratorC1EPKS0_(%"class.base::PersistentMemoryAllocator::Iterator"* %38, %"class.base::PersistentMemoryAllocator"* %40) #12
  %41 = getelementptr inbounds i8, i8* %14, i64 136
  %42 = bitcast i8* %41 to %"class.base::FilePath"*
  call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %42) #12
  %43 = load atomic i64, i64* @_ZN4base12_GLOBAL__N_121g_histogram_allocatorE monotonic, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %13
  %46 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0), i32 858, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.7, i64 0, i64 0)) #12
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12
  br label %48

48:                                               ; preds = %45, %13
  %49 = ptrtoint i8* %14 to i64
  store atomic volatile i64 %49, i64* @_ZN4base12_GLOBAL__N_121g_histogram_allocatorE release, align 8
  %50 = call i64 @_ZN4base18StatisticsRecorder17GetHistogramCountEv() #12
  br label %51

51:                                               ; preds = %1, %11, %48
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #12
  ret void
}

declare void @_ZNK4base26WritableSharedMemoryRegion3MapEv(%"class.base::WritableSharedMemoryMapping"* sret, %"class.base::WritableSharedMemoryRegion"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base39WritableSharedPersistentMemoryAllocator24IsSharedMemoryAcceptableERKNS_27WritableSharedMemoryMappingE(%"class.base::WritableSharedMemoryMapping"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"*) unnamed_addr #6

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i64 @_ZN4base18StatisticsRecorder17GetHistogramCountEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::GlobalHistogramAllocator"* @_ZN4base24GlobalHistogramAllocator17ReleaseForTestingEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.logging::CheckError", align 8
  %2 = alloca %"class.base::PersistentMemoryAllocator::Iterator", align 8
  %3 = load atomic i64, i64* @_ZN4base12_GLOBAL__N_121g_histogram_allocatorE acquire, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %34, label %5

5:                                                ; preds = %0
  %6 = inttoptr i64 %3 to %"class.base::PersistentHistogramAllocator"*
  %7 = getelementptr inbounds %"class.base::PersistentHistogramAllocator", %"class.base::PersistentHistogramAllocator"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %7, align 8
  %9 = bitcast %"class.base::PersistentMemoryAllocator::Iterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.base::PersistentMemoryAllocator::Iterator", %"class.base::PersistentMemoryAllocator::Iterator"* %2, i64 0, i32 0
  %11 = bitcast %"class.base::PersistentMemoryAllocator::Iterator"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @_ZN4base25PersistentMemoryAllocator8IteratorC1EPKS0_(%"class.base::PersistentMemoryAllocator::Iterator"* nonnull %2, %"class.base::PersistentMemoryAllocator"* %8) #12
  %12 = call i32 @_ZN4base25PersistentMemoryAllocator8Iterator13GetNextOfTypeEj(%"class.base::PersistentMemoryAllocator::Iterator"* nonnull %2, i32 -245081837) #12
  %13 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %10, align 8
  %14 = call i8* @_ZNK4base25PersistentMemoryAllocator12GetBlockDataEjjj(%"class.base::PersistentMemoryAllocator"* %13, i32 %12, i32 -245081837, i32 88) #12
  %15 = icmp eq i8* %14, null
  br i1 %15, label %32, label %16

16:                                               ; preds = %5
  %17 = bitcast %"class.logging::CheckError"* %1 to i8*
  br label %18

18:                                               ; preds = %16, %26
  %19 = phi i8* [ %14, %16 ], [ %30, %26 ]
  %20 = getelementptr inbounds i8, i8* %19, i64 80
  %21 = icmp eq i8* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = call i64 @strlen(i8* nonnull %20) #12
  br label %26

24:                                               ; preds = %18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #12
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %1) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %1) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %26

26:                                               ; preds = %22, %24
  %27 = phi i64 [ 0, %24 ], [ %23, %22 ]
  call void @_ZN4base18StatisticsRecorder25ForgetHistogramForTestingENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %20, i64 %27) #12
  %28 = call i32 @_ZN4base25PersistentMemoryAllocator8Iterator13GetNextOfTypeEj(%"class.base::PersistentMemoryAllocator::Iterator"* nonnull %2, i32 -245081837) #12
  %29 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %10, align 8
  %30 = call i8* @_ZNK4base25PersistentMemoryAllocator12GetBlockDataEjjj(%"class.base::PersistentMemoryAllocator"* %29, i32 %28, i32 -245081837, i32 88) #12
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %18

32:                                               ; preds = %26, %5
  store atomic volatile i64 0, i64* @_ZN4base12_GLOBAL__N_121g_histogram_allocatorE release, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  %33 = inttoptr i64 %3 to %"class.base::GlobalHistogramAllocator"*
  br label %34

34:                                               ; preds = %0, %32
  %35 = phi %"class.base::GlobalHistogramAllocator"* [ %33, %32 ], [ null, %0 ]
  ret %"class.base::GlobalHistogramAllocator"* %35
}

declare void @_ZN4base18StatisticsRecorder25ForgetHistogramForTestingENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSERKS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.base::FilePath"* @_ZNK4base24GlobalHistogramAllocator21GetPersistentLocationEv(%"class.base::GlobalHistogramAllocator"* readnone) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 2
  ret %"class.base::FilePath"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base24GlobalHistogramAllocator25WriteToPersistentLocationEv(%"class.base::GlobalHistogramAllocator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 2
  %4 = bitcast %"class.base::FilePath"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  br label %13

11:                                               ; preds = %1
  %12 = zext i8 %6 to i64
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i64 [ %10, %8 ], [ %12, %11 ]
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %47, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %17, align 8
  %19 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %18, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = tail call i64 @_ZNK4base25PersistentMemoryAllocator4usedEv(%"class.base::PersistentMemoryAllocator"* %18) #12
  %22 = tail call zeroext i1 @_ZN4base19ImportantFileWriter19WriteFileAtomicallyERKNS_8FilePathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.base::FilePath"* dereferenceable(24) %3, i8* %20, i64 %21, i8* null, i64 0) #12
  br i1 %22, label %47, label %23

23:                                               ; preds = %16
  %24 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %24, label %25, label %47

25:                                               ; preds = %23
  %26 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %26) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0), i32 919, i32 2) #12
  %27 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %28 = bitcast %"class.std::__1::basic_ostringstream"* %27 to %"class.std::__1::basic_ostream"*
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %28, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i64 17) #12
  %30 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %17, align 8
  %31 = call i8* @_ZNK4base25PersistentMemoryAllocator4NameEv(%"class.base::PersistentMemoryAllocator"* %30) #12
  %32 = call i64 @strlen(i8* %31) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %29, i8* %31, i64 %32) #12
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %33, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0), i64 23) #12
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %34, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i64 10) #12
  %36 = load i8, i8* %5, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.base::FilePath"* %3 to i8*
  %43 = zext i8 %36 to i64
  %44 = select i1 %37, i8* %39, i8* %42
  %45 = select i1 %37, i64 %41, i64 %43
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %35, i8* %44, i64 %45) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %26) #12
  br label %47

47:                                               ; preds = %16, %23, %25, %13
  %48 = phi i1 [ false, %13 ], [ true, %16 ], [ false, %23 ], [ false, %25 ]
  ret i1 %48
}

declare zeroext i1 @_ZN4base19ImportantFileWriter19WriteFileAtomicallyERKNS_8FilePathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.base::FilePath"* dereferenceable(24), i8*, i64, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base24GlobalHistogramAllocator24DeletePersistentLocationEv(%"class.base::GlobalHistogramAllocator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::File", align 8
  %3 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %3, align 8
  tail call void @_ZN4base25PersistentMemoryAllocator14SetMemoryStateEh(%"class.base::PersistentMemoryAllocator"* %4, i8 zeroext 2) #12
  %5 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 2
  %6 = bitcast %"class.base::FilePath"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %15

13:                                               ; preds = %1
  %14 = zext i8 %8 to i64
  br label %15

15:                                               ; preds = %10, %13
  %16 = phi i64 [ %12, %10 ], [ %14, %13 ]
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.base::File"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %19) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 56, i1 false)
  call void @_ZN4base4FileC1ERKNS_8FilePathEj(%"class.base::File"* nonnull %2, %"class.base::FilePath"* dereferenceable(24) %5, i32 8225) #12
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %19) #12
  br label %20

20:                                               ; preds = %15, %18
  ret void
}

declare void @_ZN4base25PersistentMemoryAllocator14SetMemoryStateEh(%"class.base::PersistentMemoryAllocator"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base24GlobalHistogramAllocatorC2ENSt3__110unique_ptrINS_25PersistentMemoryAllocatorENS1_14default_deleteIS3_EEEE(%"class.base::GlobalHistogramAllocator"*, %"class.base::PersistentMemoryAllocator"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::PersistentMemoryAllocator"* %1 to i64
  %4 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base28PersistentHistogramAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr.18"* %5 to i64*
  store i64 %3, i64* %6, align 8
  %7 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 2, i32 0
  store %"class.base::PersistentMemoryAllocator"* %1, %"class.base::PersistentMemoryAllocator"** %7, align 8
  %8 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 2, i32 1
  tail call void @_ZN4base25PersistentMemoryAllocator8IteratorC1EPKS0_(%"class.base::PersistentMemoryAllocator::Iterator"* %8, %"class.base::PersistentMemoryAllocator"* %1) #12
  %9 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 2, i32 2, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %11, align 8
  %13 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 2, i32 3, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %13) #12
  %14 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 3
  store i32 0, i32* %14, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base24GlobalHistogramAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %15 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 1
  %16 = bitcast %"class.base::PersistentHistogramAllocator::Iterator"* %15 to %"class.base::GlobalHistogramAllocator"**
  store %"class.base::GlobalHistogramAllocator"* %0, %"class.base::GlobalHistogramAllocator"** %16, align 8
  %17 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 1, i32 1
  %18 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %18, align 8
  tail call void @_ZN4base25PersistentMemoryAllocator8IteratorC1EPKS0_(%"class.base::PersistentMemoryAllocator::Iterator"* %17, %"class.base::PersistentMemoryAllocator"* %19) #12
  %20 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 2
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %20) #12
  ret void
}

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base24GlobalHistogramAllocator36ImportHistogramsToStatisticsRecorderEv(%"class.base::GlobalHistogramAllocator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 0, i32 3
  %3 = load atomic i32, i32* %2 monotonic, align 4
  %4 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 1, i32 1
  %5 = getelementptr inbounds %"class.base::GlobalHistogramAllocator", %"class.base::GlobalHistogramAllocator"* %0, i64 0, i32 1, i32 0
  br label %6

6:                                                ; preds = %11, %1
  %7 = tail call i32 @_ZN4base25PersistentMemoryAllocator8Iterator13GetNextOfTypeEj(%"class.base::PersistentMemoryAllocator::Iterator"* %4, i32 -245081837) #12
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %6
  %10 = icmp eq i32 %7, %3
  br i1 %10, label %11, label %12

11:                                               ; preds = %9, %16
  br label %6

12:                                               ; preds = %9
  %13 = load %"class.base::PersistentHistogramAllocator"*, %"class.base::PersistentHistogramAllocator"** %5, align 8
  %14 = tail call %"class.base::HistogramBase"* @_ZN4base28PersistentHistogramAllocator12GetHistogramEj(%"class.base::PersistentHistogramAllocator"* %13, i32 %7) #12
  %15 = icmp eq %"class.base::HistogramBase"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = tail call %"class.base::HistogramBase"* @_ZN4base18StatisticsRecorder25RegisterOrDeleteDuplicateEPNS_13HistogramBaseE(%"class.base::HistogramBase"* nonnull %14) #12
  br label %11

18:                                               ; preds = %12, %6
  ret void
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN4base12BucketRangesC1Em(%"class.base::BucketRanges"*, i64) unnamed_addr #1

declare void @_ZN4base12BucketRanges13ResetChecksumEv(%"class.base::BucketRanges"*) local_unnamed_addr #1

declare i64 @_ZNK4base25PersistentMemoryAllocator4usedEv(%"class.base::PersistentMemoryAllocator"*) local_unnamed_addr #1

declare i8* @_ZNK4base25PersistentMemoryAllocator4NameEv(%"class.base::PersistentMemoryAllocator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !70
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base12BucketRangesD1Ev(%"class.base::BucketRanges"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN4base26PersistentSampleMapRecordsENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %35, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN4base26PersistentSampleMapRecordsENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN4base26PersistentSampleMapRecordsENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.base::PersistentSampleMapRecords"*, %"class.base::PersistentSampleMapRecords"** %10, align 8
  store %"class.base::PersistentSampleMapRecords"* null, %"class.base::PersistentSampleMapRecords"** %10, align 8
  %12 = icmp eq %"class.base::PersistentSampleMapRecords"* %11, null
  br i1 %12, label %33, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %11, i64 0, i32 5, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = icmp eq i32* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = ptrtoint i32* %15 to i64
  %19 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %11, i64 0, i32 5, i32 0, i32 1
  %20 = bitcast i32** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast i32* %15 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  br label %22

22:                                               ; preds = %17, %13
  %23 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %11, i64 0, i32 4, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = icmp eq i32* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = ptrtoint i32* %24 to i64
  %28 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %11, i64 0, i32 4, i32 0, i32 1
  %29 = bitcast i32** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast i32* %24 to i8*
  tail call void @_ZdlPv(i8* %30) #13
  br label %31

31:                                               ; preds = %26, %22
  %32 = bitcast %"class.base::PersistentSampleMapRecords"* %11 to i8*
  tail call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %4, %31
  %34 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %34) #13
  br label %35

35:                                               ; preds = %2, %33
  ret void
}

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !70
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !70
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !70
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

declare i32 @_ZN4base25PersistentMemoryAllocator8Iterator13GetNextOfTypeEj(%"class.base::PersistentMemoryAllocator::Iterator"*, i32) local_unnamed_addr #1

declare i8* @_ZNK4base25PersistentMemoryAllocator12GetBlockDataEjjj(%"class.base::PersistentMemoryAllocator"*, i32, i32, i32) local_unnamed_addr #1

declare i32 @_ZNK4base25PersistentMemoryAllocator14GetAsReferenceEPKvj(%"class.base::PersistentMemoryAllocator"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN4base25PersistentMemoryAllocatorC1EPvmmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::PersistentMemoryAllocator"*, i8*, i64, i64, i64, %"class.base::BasicStringPiece"* byval(%"class.base::BasicStringPiece") align 8, i1 zeroext) unnamed_addr #1

declare void @_ZN4base30LocalPersistentMemoryAllocatorC1EmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::LocalPersistentMemoryAllocator"*, i64, i64, i8*, i64) unnamed_addr #1

declare void @_ZN4base29FilePersistentMemoryAllocatorC1ENSt3__110unique_ptrINS_16MemoryMappedFileENS1_14default_deleteIS3_EEEEmmNS_16BasicStringPieceIcNS1_11char_traitsIcEEEEb(%"class.base::FilePersistentMemoryAllocator"*, %"class.base::MemoryMappedFile"*, i64, i64, i8*, i64, i1 zeroext) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base27WritableSharedMemoryMappingC1EOS0_(%"class.base::WritableSharedMemoryMapping"*, %"class.base::WritableSharedMemoryMapping"* dereferenceable(48)) unnamed_addr #6

declare void @_ZN4base39WritableSharedPersistentMemoryAllocatorC1ENS_27WritableSharedMemoryMappingEmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::WritableSharedPersistentMemoryAllocator"*, %"class.base::WritableSharedMemoryMapping"*, i64, i8*, i64) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN4base26PersistentSampleMapRecordsENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSK_IJEEEEEENS2_INS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISR_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeINS_12__value_typeImNS_10unique_ptrIN4base26PersistentSampleMapRecordsENS_14default_deleteIS4_EEEEEENS_19__map_value_compareImS8_NS_4lessImEELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSK_IJEEEEEENS2_INS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISR_EEEEEEDpOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8}
!8 = distinct !{!8, !"LVerDomain"}
!9 = !{!10}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !14}
!16 = distinct !{!16, !12}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !12}
!23 = distinct !{!23, !14}
!24 = distinct !{!24, !12}
!25 = !{!26}
!26 = distinct !{!26, !27}
!27 = distinct !{!27, !"LVerDomain"}
!28 = !{!29}
!29 = distinct !{!29, !27}
!30 = distinct !{!30, !12}
!31 = distinct !{!31, !14}
!32 = distinct !{!32, !14}
!33 = distinct !{!33, !12}
!34 = !{!35}
!35 = distinct !{!35, !36}
!36 = distinct !{!36, !"LVerDomain"}
!37 = !{!38}
!38 = distinct !{!38, !36}
!39 = distinct !{!39, !12}
!40 = distinct !{!40, !14}
!41 = distinct !{!41, !14}
!42 = distinct !{!42, !12}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN4base24GlobalHistogramAllocator17ConstructFilePathERKNS_8FilePathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE: argument 0"}
!45 = distinct !{!45, !"_ZN4base24GlobalHistogramAllocator17ConstructFilePathERKNS_8FilePathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!48 = distinct !{!48, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!51 = distinct !{!51, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN4base24GlobalHistogramAllocator17ConstructFilePathERKNS_8FilePathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE: argument 0"}
!54 = distinct !{!54, !"_ZN4base24GlobalHistogramAllocator17ConstructFilePathERKNS_8FilePathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!57 = distinct !{!57, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!60 = distinct !{!60, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZN4base24GlobalHistogramAllocator17ConstructFilePathERKNS_8FilePathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE: argument 0"}
!63 = distinct !{!63, !"_ZN4base24GlobalHistogramAllocator17ConstructFilePathERKNS_8FilePathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZN4base24GlobalHistogramAllocator17ConstructFilePathERKNS_8FilePathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE: argument 0"}
!66 = distinct !{!66, !"_ZN4base24GlobalHistogramAllocator17ConstructFilePathERKNS_8FilePathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!69 = distinct !{!69, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!70 = !{i8 0, i8 2}
